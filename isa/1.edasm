
.\build\Debug\tinymcu.elf:     file format elf32-littleriscv


Disassembly of section .init:

00000000 <_start>:



.option push
.option norelax
	la gp, __global_pointer$
   0:	01001197          	auipc	gp,0x1001
   4:	3a018193          	addi	gp,gp,928 # 10013a0 <__global_pointer$>
.option pop
	la sp, _sp 
   8:	01010117          	auipc	sp,0x1010
   c:	ff810113          	addi	sp,sp,-8 # 1010000 <__freertos_irq_stack_top>

	/* Load data section */
	la a0, _data_lma 
  10:	0000a517          	auipc	a0,0xa
  14:	60850513          	addi	a0,a0,1544 # a618 <_data_lma>
	la a1, _data
  18:	01000597          	auipc	a1,0x1000
  1c:	fe858593          	addi	a1,a1,-24 # 1000000 <_data>
	la a2, _edata
  20:	01001617          	auipc	a2,0x1001
  24:	b9060613          	addi	a2,a2,-1136 # 1000bb0 <seed1_volatile>
	bgeu a1, a2, 2f
  28:	00c5fe63          	bgeu	a1,a2,44 <_start+0x44>
1:
	lw t0, (a0)
  2c:	00052283          	lw	t0,0(a0)
	sw t0, (a1)
  30:	0055a023          	sw	t0,0(a1)
	lw t1, (a1)
  34:	0005a303          	lw	t1,0(a1)
	addi a0, a0, 4
  38:	00450513          	addi	a0,a0,4
	addi a1, a1, 4
  3c:	00458593          	addi	a1,a1,4
	bltu a1, a2, 1b
  40:	fec5e6e3          	bltu	a1,a2,2c <_start+0x2c>
2:

	/* Clear bss section */
	la a0, __bss_start
  44:	01001517          	auipc	a0,0x1001
  48:	b6c50513          	addi	a0,a0,-1172 # 1000bb0 <seed1_volatile>
	la a1, _end
  4c:	01001597          	auipc	a1,0x1001
  50:	b9458593          	addi	a1,a1,-1132 # 1000be0 <_end>
	bgeu a0, a1, 2f
  54:	00b57863          	bgeu	a0,a1,64 <_start+0x64>
1:
	sw zero, (a0)
  58:	00052023          	sw	zero,0(a0)
	addi a0, a0, 4
  5c:	00450513          	addi	a0,a0,4
	bltu a0, a1, 1b
  60:	feb56ce3          	bltu	a0,a1,58 <_start+0x58>
2:

#ifdef SIM
    li x31,0xa0
  64:	0a000f93          	li	t6,160
#endif

	

    call main
  68:	00000097          	auipc	ra,0x0
  6c:	010080e7          	jalr	16(ra) # 78 <main>


#ifdef SIM
    li x31,0xaa
  70:	0aa00f93          	li	t6,170

00000074 <loop>:
#endif

loop:
    j loop
  74:	0000006f          	j	74 <loop>

Disassembly of section .text:

00000078 <main>:
    int   argc = 0;
    char *argv[1];
#else
MAIN_RETURN_TYPE
main(int argc, char *argv[])
{
      78:	81010113          	addi	sp,sp,-2032
    core_results results[MULTITHREAD];
#if (MEM_METHOD == MEM_STACK)
    ee_u8 stack_memblock[TOTAL_DATA_SIZE * MULTITHREAD];
#endif
    /* first call any initializations needed */
    portable_init(&(results[0].port), &argc, argv);
      7c:	00001737          	lui	a4,0x1
{
      80:	7e112623          	sw	ra,2028(sp)
      84:	7e812423          	sw	s0,2024(sp)
      88:	7e912223          	sw	s1,2020(sp)
      8c:	7f212023          	sw	s2,2016(sp)
      90:	7d312e23          	sw	s3,2012(sp)
      94:	7d412c23          	sw	s4,2008(sp)
      98:	7d512a23          	sw	s5,2004(sp)
      9c:	7d612823          	sw	s6,2000(sp)
      a0:	7d712623          	sw	s7,1996(sp)
      a4:	7d812423          	sw	s8,1992(sp)
      a8:	7d912223          	sw	s9,1988(sp)
      ac:	7da12023          	sw	s10,1984(sp)
      b0:	7bb12e23          	sw	s11,1980(sp)
      b4:	fffff7b7          	lui	a5,0xfffff
      b8:	f8010113          	addi	sp,sp,-128
    portable_init(&(results[0].port), &argc, argv);
      bc:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b8>
      c0:	7dc78793          	addi	a5,a5,2012 # fffff7dc <__freertos_irq_stack_top+0xfefef7dc>
      c4:	00270733          	add	a4,a4,sp
      c8:	00058613          	mv	a2,a1
{
      cc:	00a12623          	sw	a0,12(sp)
    portable_init(&(results[0].port), &argc, argv);
      d0:	00f705b3          	add	a1,a4,a5
      d4:	05e10513          	addi	a0,sp,94
      d8:	00002097          	auipc	ra,0x2
      dc:	c9c080e7          	jalr	-868(ra) # 1d74 <portable_init>
    if (sizeof(struct list_head_s) > 128)
    {
        ee_printf("list_head structure too big for comparable data!\n");
        return MAIN_RETURN_VAL;
    }
    results[0].seed1      = get_seed(1);
      e0:	00100513          	li	a0,1
      e4:	00002097          	auipc	ra,0x2
      e8:	3c8080e7          	jalr	968(ra) # 24ac <get_seed_32>
      ec:	00a11e23          	sh	a0,28(sp)
    results[0].seed2      = get_seed(2);
      f0:	00200513          	li	a0,2
      f4:	00002097          	auipc	ra,0x2
      f8:	3b8080e7          	jalr	952(ra) # 24ac <get_seed_32>
      fc:	00a11f23          	sh	a0,30(sp)
    results[0].seed3      = get_seed(3);
     100:	00300513          	li	a0,3
     104:	00002097          	auipc	ra,0x2
     108:	3a8080e7          	jalr	936(ra) # 24ac <get_seed_32>
     10c:	02a11023          	sh	a0,32(sp)
    results[0].iterations = get_seed_32(4);
     110:	00400513          	li	a0,4
     114:	00002097          	auipc	ra,0x2
     118:	398080e7          	jalr	920(ra) # 24ac <get_seed_32>
     11c:	02a12c23          	sw	a0,56(sp)
#if CORE_DEBUG
    results[0].iterations = 1;
#endif
    results[0].execs = get_seed_32(5);
     120:	00500513          	li	a0,5
     124:	00002097          	auipc	ra,0x2
     128:	388080e7          	jalr	904(ra) # 24ac <get_seed_32>
    if (results[0].execs == 0)
     12c:	120500e3          	beqz	a0,a4c <main+0x9d4>
    results[0].execs = get_seed_32(5);
     130:	02a12e23          	sw	a0,60(sp)
    { /* if not supplied, execute all algorithms */
        results[0].execs = ALL_ALGORITHMS_MASK;
    }
    /* put in some default values based on one seed only for easy testing */
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
     134:	00001737          	lui	a4,0x1
     138:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b8>
     13c:	fffff7b7          	lui	a5,0xfffff
     140:	00270733          	add	a4,a4,sp
     144:	00f707b3          	add	a5,a4,a5
     148:	00f12223          	sw	a5,4(sp)
     14c:	7ec7a783          	lw	a5,2028(a5) # fffff7ec <__freertos_irq_stack_top+0xfefef7ec>
     150:	42078063          	beqz	a5,570 <main+0x4f8>
    { /* perfromance run */
        results[0].seed1 = 0;
        results[0].seed2 = 0;
        results[0].seed3 = 0x66;
    }
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     154:	00100713          	li	a4,1
     158:	02e79463          	bne	a5,a4,180 <main+0x108>
        && (results[0].seed3 == 0))
     15c:	00412783          	lw	a5,4(sp)
     160:	7f079783          	lh	a5,2032(a5)
     164:	00079e63          	bnez	a5,180 <main+0x108>
    { /* validation run */
        results[0].seed1 = 0x3415;
     168:	00412703          	lw	a4,4(sp)
     16c:	341537b7          	lui	a5,0x34153
     170:	41578793          	addi	a5,a5,1045 # 34153415 <__freertos_irq_stack_top+0x33143415>
     174:	7ef72623          	sw	a5,2028(a4)
        results[0].seed2 = 0x3415;
        results[0].seed3 = 0x66;
     178:	06600793          	li	a5,102
     17c:	7ef71823          	sh	a5,2032(a4)
#endif
    /* Data init */
    /* Find out how space much we have based on number of algorithms */
    for (i = 0; i < NUM_ALGORITHMS; i++)
    {
        if ((1 << (ee_u32)i) & results[0].execs)
     180:	03c12783          	lw	a5,60(sp)
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     184:	00001837          	lui	a6,0x1
     188:	83080813          	addi	a6,a6,-2000 # 830 <main+0x7b8>
     18c:	00280833          	add	a6,a6,sp
     190:	fffff5b7          	lui	a1,0xfffff
     194:	00b805b3          	add	a1,a6,a1
        if ((1 << (ee_u32)i) & results[0].execs)
     198:	0027f713          	andi	a4,a5,2
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     19c:	06010813          	addi	a6,sp,96
        if ((1 << (ee_u32)i) & results[0].execs)
     1a0:	0017f693          	andi	a3,a5,1
            num_algorithms++;
     1a4:	00e03633          	snez	a2,a4
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1a8:	00b12223          	sw	a1,4(sp)
     1ac:	7f05aa23          	sw	a6,2036(a1) # fffff7f4 <__freertos_irq_stack_top+0xfefef7f4>
    results[i].err         = 0;
     1b0:	04011e23          	sh	zero,92(sp)
        if ((1 << (ee_u32)i) & results[0].execs)
     1b4:	0047f593          	andi	a1,a5,4
            num_algorithms++;
     1b8:	00c68533          	add	a0,a3,a2
        if ((1 << (ee_u32)i) & results[0].execs)
     1bc:	00058863          	beqz	a1,1cc <main+0x154>
            num_algorithms++;
     1c0:	00150513          	addi	a0,a0,1
     1c4:	01051513          	slli	a0,a0,0x10
     1c8:	01055513          	srli	a0,a0,0x10
    }
    for (i = 0; i < MULTITHREAD; i++)
        results[i].size = results[i].size / num_algorithms;
     1cc:	7d000613          	li	a2,2000
     1d0:	02a65533          	divu	a0,a2,a0
     1d4:	fffff837          	lui	a6,0xfffff
    /* Assign pointers */
    for (i = 0; i < NUM_ALGORITHMS; i++)
    {
        ee_u32 ctx;
        if ((1 << (ee_u32)i) & results[0].execs)
     1d8:	00000613          	li	a2,0
        results[i].size = results[i].size / num_algorithms;
     1dc:	02a12a23          	sw	a0,52(sp)
        if ((1 << (ee_u32)i) & results[0].execs)
     1e0:	06069ce3          	bnez	a3,a58 <main+0x9e0>
     1e4:	08071ce3          	bnez	a4,a7c <main+0xa04>
     1e8:	0c0596e3          	bnez	a1,ab4 <main+0xa3c>
        }
    }
    /* call inits */
    for (i = 0; i < MULTITHREAD; i++)
    {
        if (results[i].execs & ID_LIST)
     1ec:	3a069063          	bnez	a3,58c <main+0x514>
        {
            results[i].list = core_list_init(
                results[0].size, results[i].memblock[1], results[i].seed1);
        }
        if (results[i].execs & ID_MATRIX)
     1f0:	3c071a63          	bnez	a4,5c4 <main+0x54c>
                             results[i].memblock[2],
                             (ee_s32)results[i].seed1
                                 | (((ee_s32)results[i].seed2) << 16),
                             &(results[i].mat));
        }
        if (results[i].execs & ID_STATE)
     1f4:	0047f793          	andi	a5,a5,4
     1f8:	02078863          	beqz	a5,228 <main+0x1b0>
        {
            core_init_state(
     1fc:	00001737          	lui	a4,0x1
     200:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b8>
                results[0].size, results[i].seed1, results[i].memblock[3]);
     204:	fffff7b7          	lui	a5,0xfffff
            core_init_state(
     208:	00270733          	add	a4,a4,sp
     20c:	00f707b3          	add	a5,a4,a5
     210:	03012603          	lw	a2,48(sp)
     214:	7ec79583          	lh	a1,2028(a5) # fffff7ec <__freertos_irq_stack_top+0xfefef7ec>
     218:	03412503          	lw	a0,52(sp)
     21c:	00f12223          	sw	a5,4(sp)
     220:	00002097          	auipc	ra,0x2
     224:	b94080e7          	jalr	-1132(ra) # 1db4 <core_init_state>
        }
    }

    /* automatically determine number of iterations if not set */
    if (results[0].iterations == 0)
     228:	03812783          	lw	a5,56(sp)
     22c:	10079863          	bnez	a5,33c <main+0x2c4>
    {
        secs_ret secs_passed = 0;
        ee_u32   divisor;
        results[0].iterations = 1;
        while (secs_passed < (secs_ret)1)
     230:	010007b7          	lui	a5,0x1000
     234:	0007aa03          	lw	s4,0(a5) # 1000000 <_data>
     238:	0047aa83          	lw	s5,4(a5)
        results[0].iterations = 1;
     23c:	00100793          	li	a5,1
     240:	02f12c23          	sw	a5,56(sp)
        crc      = core_bench_list(res, 1);
     244:	000017b7          	lui	a5,0x1
     248:	fffff4b7          	lui	s1,0xfffff
     24c:	83078793          	addi	a5,a5,-2000 # 830 <main+0x7b8>
     250:	7ec48493          	addi	s1,s1,2028 # fffff7ec <__freertos_irq_stack_top+0xfefef7ec>
     254:	002787b3          	add	a5,a5,sp
     258:	009784b3          	add	s1,a5,s1
        {
            results[0].iterations *= 10;
     25c:	03812703          	lw	a4,56(sp)
    for (i = 0; i < iterations; i++)
     260:	00000413          	li	s0,0
            results[0].iterations *= 10;
     264:	00271793          	slli	a5,a4,0x2
     268:	00e787b3          	add	a5,a5,a4
     26c:	00179793          	slli	a5,a5,0x1
     270:	02f12c23          	sw	a5,56(sp)
            start_time();
     274:	00002097          	auipc	ra,0x2
     278:	a68080e7          	jalr	-1432(ra) # 1cdc <start_time>
    ee_u32        iterations = res->iterations;
     27c:	03812903          	lw	s2,56(sp)
    res->crc                 = 0;
     280:	04012a23          	sw	zero,84(sp)
     284:	04012c23          	sw	zero,88(sp)
    for (i = 0; i < iterations; i++)
     288:	04090863          	beqz	s2,2d8 <main+0x260>
        crc      = core_bench_list(res, 1);
     28c:	00100593          	li	a1,1
     290:	00048513          	mv	a0,s1
     294:	00001097          	auipc	ra,0x1
     298:	9cc080e7          	jalr	-1588(ra) # c60 <core_bench_list>
        res->crc = crcu16(crc, res->crc);
     29c:	05415583          	lhu	a1,84(sp)
     2a0:	00002097          	auipc	ra,0x2
     2a4:	270080e7          	jalr	624(ra) # 2510 <crcu16>
     2a8:	04a11a23          	sh	a0,84(sp)
        crc      = core_bench_list(res, -1);
     2ac:	fff00593          	li	a1,-1
     2b0:	00048513          	mv	a0,s1
     2b4:	00001097          	auipc	ra,0x1
     2b8:	9ac080e7          	jalr	-1620(ra) # c60 <core_bench_list>
        res->crc = crcu16(crc, res->crc);
     2bc:	05415583          	lhu	a1,84(sp)
     2c0:	00002097          	auipc	ra,0x2
     2c4:	250080e7          	jalr	592(ra) # 2510 <crcu16>
     2c8:	04a11a23          	sh	a0,84(sp)
        if (i == 0)
     2cc:	00040ae3          	beqz	s0,ae0 <main+0xa68>
    for (i = 0; i < iterations; i++)
     2d0:	00140413          	addi	s0,s0,1
     2d4:	fa891ce3          	bne	s2,s0,28c <main+0x214>
            iterate(&results[0]);
            stop_time();
     2d8:	00002097          	auipc	ra,0x2
     2dc:	a2c080e7          	jalr	-1492(ra) # 1d04 <stop_time>
            secs_passed = time_in_secs(get_time());
     2e0:	00002097          	auipc	ra,0x2
     2e4:	a4c080e7          	jalr	-1460(ra) # 1d2c <get_time>
     2e8:	00002097          	auipc	ra,0x2
     2ec:	a5c080e7          	jalr	-1444(ra) # 1d44 <time_in_secs>
        while (secs_passed < (secs_ret)1)
     2f0:	000a0613          	mv	a2,s4
     2f4:	000a8693          	mv	a3,s5
            secs_passed = time_in_secs(get_time());
     2f8:	00050913          	mv	s2,a0
     2fc:	00058993          	mv	s3,a1
        while (secs_passed < (secs_ret)1)
     300:	00004097          	auipc	ra,0x4
     304:	9c4080e7          	jalr	-1596(ra) # 3cc4 <__ledf2>
     308:	f4054ae3          	bltz	a0,25c <main+0x1e4>
        }
        /* now we know it executes for at least 1 sec, set actual run time at
         * about 10 secs */
        divisor = (ee_u32)secs_passed;
     30c:	00090513          	mv	a0,s2
     310:	00098593          	mv	a1,s3
     314:	00004097          	auipc	ra,0x4
     318:	ab0080e7          	jalr	-1360(ra) # 3dc4 <__fixunsdfsi>
        if (divisor == 0) /* some machines cast float to int as 0 since this
     31c:	00051463          	bnez	a0,324 <main+0x2ac>
                             conversion is not defined by ANSI, but we know at
                             least one second passed */
            divisor = 1;
     320:	00100513          	li	a0,1
        results[0].iterations *= 1 + 10 / divisor;
     324:	00a00793          	li	a5,10
     328:	02a7d7b3          	divu	a5,a5,a0
     32c:	03812703          	lw	a4,56(sp)
     330:	00178793          	addi	a5,a5,1
     334:	02e787b3          	mul	a5,a5,a4
     338:	02f12c23          	sw	a5,56(sp)
    }
    /* perform actual benchmark */
    start_time();
     33c:	00002097          	auipc	ra,0x2
     340:	9a0080e7          	jalr	-1632(ra) # 1cdc <start_time>
    for (i = 0; i < default_num_contexts; i++)
    {
        core_stop_parallel(&results[i]);
    }
#else
    iterate(&results[0]);
     344:	000014b7          	lui	s1,0x1
     348:	fffff437          	lui	s0,0xfffff
     34c:	83048793          	addi	a5,s1,-2000 # 830 <main+0x7b8>
     350:	002787b3          	add	a5,a5,sp
     354:	7ec40513          	addi	a0,s0,2028 # fffff7ec <__freertos_irq_stack_top+0xfefef7ec>
     358:	00a78533          	add	a0,a5,a0
     35c:	00001097          	auipc	ra,0x1
     360:	200080e7          	jalr	512(ra) # 155c <iterate>
#endif
    stop_time();
     364:	00002097          	auipc	ra,0x2
     368:	9a0080e7          	jalr	-1632(ra) # 1d04 <stop_time>
    total_time = get_time();
     36c:	00002097          	auipc	ra,0x2
     370:	9c0080e7          	jalr	-1600(ra) # 1d2c <get_time>
    /* get a function of the input to report */
    seedcrc = crc16(results[0].seed1, seedcrc);
     374:	83048793          	addi	a5,s1,-2000
     378:	002787b3          	add	a5,a5,sp
     37c:	008787b3          	add	a5,a5,s0
    total_time = get_time();
     380:	00050a13          	mv	s4,a0
    seedcrc = crc16(results[0].seed1, seedcrc);
     384:	7ec79503          	lh	a0,2028(a5)
     388:	00000593          	li	a1,0
     38c:	00f12223          	sw	a5,4(sp)
     390:	00003097          	auipc	ra,0x3
     394:	910080e7          	jalr	-1776(ra) # 2ca0 <crc16>
    seedcrc = crc16(results[0].seed2, seedcrc);
     398:	00412783          	lw	a5,4(sp)
     39c:	00050593          	mv	a1,a0
     3a0:	7ee79503          	lh	a0,2030(a5)
     3a4:	00003097          	auipc	ra,0x3
     3a8:	8fc080e7          	jalr	-1796(ra) # 2ca0 <crc16>
    seedcrc = crc16(results[0].seed3, seedcrc);
     3ac:	00412783          	lw	a5,4(sp)
     3b0:	00050593          	mv	a1,a0
     3b4:	7f079503          	lh	a0,2032(a5)
     3b8:	00003097          	auipc	ra,0x3
     3bc:	8e8080e7          	jalr	-1816(ra) # 2ca0 <crc16>
    seedcrc = crc16(results[0].size, seedcrc);
     3c0:	00050593          	mv	a1,a0
     3c4:	03411503          	lh	a0,52(sp)
     3c8:	00003097          	auipc	ra,0x3
     3cc:	8d8080e7          	jalr	-1832(ra) # 2ca0 <crc16>

    switch (seedcrc)
     3d0:	000087b7          	lui	a5,0x8
     3d4:	b0578793          	addi	a5,a5,-1275 # 7b05 <__mdiff+0x25>
    seedcrc = crc16(results[0].size, seedcrc);
     3d8:	00050993          	mv	s3,a0
    switch (seedcrc)
     3dc:	7cf50e63          	beq	a0,a5,bb8 <main+0xb40>
     3e0:	22a7f663          	bgeu	a5,a0,60c <main+0x594>
     3e4:	00009937          	lui	s2,0x9
     3e8:	a0290793          	addi	a5,s2,-1534 # 8a02 <__adddf3+0x11e>
     3ec:	00f502e3          	beq	a0,a5,bf0 <main+0xb78>
     3f0:	0000f7b7          	lui	a5,0xf
     3f4:	9f578793          	addi	a5,a5,-1547 # e9f5 <_data_lma+0x43dd>
     3f8:	28f51863          	bne	a0,a5,688 <main+0x610>
            known_id = 2;
            ee_printf("Profile generation run parameters for coremark.\n");
            break;
        case 0xe9f5: /* seed1=0, seed2=0, seed3=0x66, size 666 per algorithm */
            known_id = 3;
            ee_printf("2K performance run parameters for coremark.\n");
     3fc:	01000537          	lui	a0,0x1000
     400:	09850513          	addi	a0,a0,152 # 1000098 <_data+0x98>
     404:	00005097          	auipc	ra,0x5
     408:	de8080e7          	jalr	-536(ra) # 51ec <puts>
     40c:	00002b37          	lui	s6,0x2
     410:	fd7b0b13          	addi	s6,s6,-41 # 1fd7 <core_state_transition+0x67>
     414:	0000eab7          	lui	s5,0xe
            known_id = 3;
     418:	00300793          	li	a5,3
            ee_printf("2K performance run parameters for coremark.\n");
     41c:	e3a90913          	addi	s2,s2,-454
     420:	000b0c13          	mv	s8,s6
     424:	714a8a93          	addi	s5,s5,1812 # e714 <_data_lma+0x40fc>
            known_id = 3;
     428:	00f12423          	sw	a5,8(sp)
            total_errors = -1;
            break;
    }
    if (known_id >= 0)
    {
        for (i = 0; i < default_num_contexts; i++)
     42c:	01001bb7          	lui	s7,0x1001
     430:	ba0ba683          	lw	a3,-1120(s7) # 1000ba0 <default_num_contexts>
     434:	00000d93          	li	s11,0
     438:	00000d13          	li	s10,0
     43c:	00068ee3          	beqz	a3,c58 <main+0xbe0>
        {
            results[i].err = 0;
     440:	000017b7          	lui	a5,0x1
     444:	83078793          	addi	a5,a5,-2000 # 830 <main+0x7b8>
     448:	fffff6b7          	lui	a3,0xfffff
     44c:	002787b3          	add	a5,a5,sp
     450:	00d787b3          	add	a5,a5,a3
     454:	00f12223          	sw	a5,4(sp)
     458:	00001cb7          	lui	s9,0x1
     45c:	0440006f          	j	4a0 <main+0x428>
     460:	00412783          	lw	a5,4(sp)
     464:	01a406b3          	add	a3,s0,s10
     468:	00269693          	slli	a3,a3,0x2
     46c:	00d786b3          	add	a3,a5,a3
     470:	00dc86b3          	add	a3,s9,a3
     474:	82c6d683          	lhu	a3,-2004(a3) # ffffe82c <__freertos_irq_stack_top+0xfefee82c>
                          i,
                          results[i].crcstate,
                          state_known_crc[known_id]);
                results[i].err++;
            }
            total_errors += results[i].err;
     478:	01b688b3          	add	a7,a3,s11
        for (i = 0; i < default_num_contexts; i++)
     47c:	001d0793          	addi	a5,s10,1
            total_errors += results[i].err;
     480:	01089413          	slli	s0,a7,0x10
        for (i = 0; i < default_num_contexts; i++)
     484:	ba0ba603          	lw	a2,-1120(s7)
            total_errors += results[i].err;
     488:	01045413          	srli	s0,s0,0x10
        for (i = 0; i < default_num_contexts; i++)
     48c:	01079d13          	slli	s10,a5,0x10
            total_errors += results[i].err;
     490:	01041d93          	slli	s11,s0,0x10
        for (i = 0; i < default_num_contexts; i++)
     494:	010d5d13          	srli	s10,s10,0x10
            total_errors += results[i].err;
     498:	410ddd93          	srai	s11,s11,0x10
        for (i = 0; i < default_num_contexts; i++)
     49c:	20cd7063          	bgeu	s10,a2,69c <main+0x624>
            results[i].err = 0;
     4a0:	004d1413          	slli	s0,s10,0x4
     4a4:	00412783          	lw	a5,4(sp)
     4a8:	01a404b3          	add	s1,s0,s10
     4ac:	00249493          	slli	s1,s1,0x2
     4b0:	009784b3          	add	s1,a5,s1
     4b4:	009c84b3          	add	s1,s9,s1
            if ((results[i].execs & ID_LIST)
     4b8:	80c4a683          	lw	a3,-2036(s1)
            results[i].err = 0;
     4bc:	82049623          	sh	zero,-2004(s1)
            if ((results[i].execs & ID_LIST)
     4c0:	0016f693          	andi	a3,a3,1
     4c4:	02068863          	beqz	a3,4f4 <main+0x47c>
                && (results[i].crclist != list_known_crc[known_id]))
     4c8:	8264d603          	lhu	a2,-2010(s1)
     4cc:	03560463          	beq	a2,s5,4f4 <main+0x47c>
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
     4d0:	010007b7          	lui	a5,0x1000
     4d4:	000a8693          	mv	a3,s5
     4d8:	000d0593          	mv	a1,s10
     4dc:	0f078513          	addi	a0,a5,240 # 10000f0 <_data+0xf0>
     4e0:	00005097          	auipc	ra,0x5
     4e4:	9f0080e7          	jalr	-1552(ra) # 4ed0 <iprintf>
                results[i].err++;
     4e8:	82c4d683          	lhu	a3,-2004(s1)
     4ec:	00168693          	addi	a3,a3,1
     4f0:	82d49623          	sh	a3,-2004(s1)
            if ((results[i].execs & ID_MATRIX)
     4f4:	00412783          	lw	a5,4(sp)
     4f8:	01a404b3          	add	s1,s0,s10
     4fc:	00249493          	slli	s1,s1,0x2
     500:	009784b3          	add	s1,a5,s1
     504:	009c84b3          	add	s1,s9,s1
     508:	80c4a683          	lw	a3,-2036(s1)
     50c:	0026f613          	andi	a2,a3,2
     510:	02060a63          	beqz	a2,544 <main+0x4cc>
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
     514:	8284d603          	lhu	a2,-2008(s1)
     518:	03860663          	beq	a2,s8,544 <main+0x4cc>
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
     51c:	010007b7          	lui	a5,0x1000
     520:	000b0693          	mv	a3,s6
     524:	000d0593          	mv	a1,s10
     528:	12078513          	addi	a0,a5,288 # 1000120 <_data+0x120>
     52c:	00005097          	auipc	ra,0x5
     530:	9a4080e7          	jalr	-1628(ra) # 4ed0 <iprintf>
                results[i].err++;
     534:	82c4d603          	lhu	a2,-2004(s1)
     538:	80c4a683          	lw	a3,-2036(s1)
     53c:	00160613          	addi	a2,a2,1
     540:	82c49623          	sh	a2,-2004(s1)
            if ((results[i].execs & ID_STATE)
     544:	0046f693          	andi	a3,a3,4
     548:	f0068ce3          	beqz	a3,460 <main+0x3e8>
                && (results[i].crcstate != state_known_crc[known_id]))
     54c:	00412783          	lw	a5,4(sp)
     550:	01a40433          	add	s0,s0,s10
     554:	00241413          	slli	s0,s0,0x2
     558:	00878433          	add	s0,a5,s0
     55c:	008c8433          	add	s0,s9,s0
     560:	82a45603          	lhu	a2,-2006(s0)
     564:	0f261a63          	bne	a2,s2,658 <main+0x5e0>
     568:	82c45683          	lhu	a3,-2004(s0)
     56c:	f0dff06f          	j	478 <main+0x400>
        && (results[0].seed3 == 0))
     570:	00412783          	lw	a5,4(sp)
     574:	7f079783          	lh	a5,2032(a5)
     578:	c00794e3          	bnez	a5,180 <main+0x108>
        results[0].seed3 = 0x66;
     57c:	00412703          	lw	a4,4(sp)
     580:	06600793          	li	a5,102
     584:	7ef71823          	sh	a5,2032(a4)
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     588:	bf9ff06f          	j	180 <main+0x108>
            results[i].list = core_list_init(
     58c:	00001737          	lui	a4,0x1
     590:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b8>
     594:	00270733          	add	a4,a4,sp
     598:	fffff7b7          	lui	a5,0xfffff
     59c:	00f707b3          	add	a5,a4,a5
     5a0:	7ec79603          	lh	a2,2028(a5) # fffff7ec <__freertos_irq_stack_top+0xfefef7ec>
     5a4:	7f87a583          	lw	a1,2040(a5)
     5a8:	00f12223          	sw	a5,4(sp)
     5ac:	00001097          	auipc	ra,0x1
     5b0:	d44080e7          	jalr	-700(ra) # 12f0 <core_list_init>
     5b4:	03c12783          	lw	a5,60(sp)
     5b8:	04a12023          	sw	a0,64(sp)
     5bc:	0027f713          	andi	a4,a5,2
        if (results[i].execs & ID_MATRIX)
     5c0:	c2070ae3          	beqz	a4,1f4 <main+0x17c>
                                 | (((ee_s32)results[i].seed2) << 16),
     5c4:	00001737          	lui	a4,0x1
     5c8:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b8>
     5cc:	00270733          	add	a4,a4,sp
            core_init_matrix(results[0].size,
     5d0:	fffff7b7          	lui	a5,0xfffff
                                 | (((ee_s32)results[i].seed2) << 16),
     5d4:	00f707b3          	add	a5,a4,a5
     5d8:	00f12223          	sw	a5,4(sp)
                             (ee_s32)results[i].seed1
     5dc:	00412703          	lw	a4,4(sp)
                                 | (((ee_s32)results[i].seed2) << 16),
     5e0:	7ee79783          	lh	a5,2030(a5) # fffff7ee <__freertos_irq_stack_top+0xfefef7ee>
            core_init_matrix(results[0].size,
     5e4:	03412503          	lw	a0,52(sp)
                             (ee_s32)results[i].seed1
     5e8:	7ec71603          	lh	a2,2028(a4)
            core_init_matrix(results[0].size,
     5ec:	7fc72583          	lw	a1,2044(a4)
                                 | (((ee_s32)results[i].seed2) << 16),
     5f0:	01079793          	slli	a5,a5,0x10
            core_init_matrix(results[0].size,
     5f4:	00c7e633          	or	a2,a5,a2
     5f8:	04410693          	addi	a3,sp,68
     5fc:	00001097          	auipc	ra,0x1
     600:	5bc080e7          	jalr	1468(ra) # 1bb8 <core_init_matrix>
     604:	03c12783          	lw	a5,60(sp)
     608:	bedff06f          	j	1f4 <main+0x17c>
    switch (seedcrc)
     60c:	000027b7          	lui	a5,0x2
     610:	8f278793          	addi	a5,a5,-1806 # 18f2 <matrix_test+0x2ee>
     614:	60f50863          	beq	a0,a5,c24 <main+0xbac>
     618:	00005b37          	lui	s6,0x5
     61c:	eafb0793          	addi	a5,s6,-337 # 4eaf <_printf_i+0x3b3>
     620:	06f51463          	bne	a0,a5,688 <main+0x610>
            ee_printf("Profile generation run parameters for coremark.\n");
     624:	01000537          	lui	a0,0x1000
     628:	06850513          	addi	a0,a0,104 # 1000068 <_data+0x68>
     62c:	00005097          	auipc	ra,0x5
     630:	bc0080e7          	jalr	-1088(ra) # 51ec <puts>
     634:	608b0b13          	addi	s6,s6,1544
     638:	0000e937          	lui	s2,0xe
     63c:	00007ab7          	lui	s5,0x7
            known_id = 2;
     640:	00200793          	li	a5,2
            ee_printf("Profile generation run parameters for coremark.\n");
     644:	5a490913          	addi	s2,s2,1444 # e5a4 <_data_lma+0x3f8c>
     648:	000b0c13          	mv	s8,s6
     64c:	a79a8a93          	addi	s5,s5,-1415 # 6a79 <__sflush_r+0x69>
            known_id = 2;
     650:	00f12423          	sw	a5,8(sp)
     654:	dd9ff06f          	j	42c <main+0x3b4>
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
     658:	010007b7          	lui	a5,0x1000
     65c:	00090693          	mv	a3,s2
     660:	000d0593          	mv	a1,s10
     664:	15478513          	addi	a0,a5,340 # 1000154 <_data+0x154>
     668:	00005097          	auipc	ra,0x5
     66c:	868080e7          	jalr	-1944(ra) # 4ed0 <iprintf>
                results[i].err++;
     670:	82c45683          	lhu	a3,-2004(s0)
     674:	00168693          	addi	a3,a3,1
     678:	01069693          	slli	a3,a3,0x10
     67c:	0106d693          	srli	a3,a3,0x10
     680:	82d41623          	sh	a3,-2004(s0)
     684:	df5ff06f          	j	478 <main+0x400>
    switch (seedcrc)
     688:	00010437          	lui	s0,0x10
    ee_s16       known_id = -1, total_errors = 0;
     68c:	fff00793          	li	a5,-1
    switch (seedcrc)
     690:	fff40413          	addi	s0,s0,-1 # ffff <_data_lma+0x59e7>
    ee_s16       known_id = -1, total_errors = 0;
     694:	00f12423          	sw	a5,8(sp)
     698:	01001bb7          	lui	s7,0x1001
        }
    }
    total_errors += check_data_types();
     69c:	00003097          	auipc	ra,0x3
     6a0:	88c080e7          	jalr	-1908(ra) # 2f28 <check_data_types>
    /* and report results */
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     6a4:	03412583          	lw	a1,52(sp)
    total_errors += check_data_types();
     6a8:	00a40433          	add	s0,s0,a0
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     6ac:	01000537          	lui	a0,0x1000
     6b0:	18450513          	addi	a0,a0,388 # 1000184 <_data+0x184>
     6b4:	00005097          	auipc	ra,0x5
     6b8:	81c080e7          	jalr	-2020(ra) # 4ed0 <iprintf>
    ee_printf("Total ticks      : %d\n", (int)total_time);
     6bc:	01000537          	lui	a0,0x1000
     6c0:	000a0593          	mv	a1,s4
     6c4:	19c50513          	addi	a0,a0,412 # 100019c <_data+0x19c>
     6c8:	00005097          	auipc	ra,0x5
     6cc:	808080e7          	jalr	-2040(ra) # 4ed0 <iprintf>
#if HAS_FLOAT
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
     6d0:	000a0513          	mv	a0,s4
     6d4:	00001097          	auipc	ra,0x1
     6d8:	670080e7          	jalr	1648(ra) # 1d44 <time_in_secs>
     6dc:	00050613          	mv	a2,a0
     6e0:	01000537          	lui	a0,0x1000
     6e4:	00058693          	mv	a3,a1
     6e8:	1b450513          	addi	a0,a0,436 # 10001b4 <_data+0x1b4>
     6ec:	00004097          	auipc	ra,0x4
     6f0:	7e4080e7          	jalr	2020(ra) # 4ed0 <iprintf>
    if (time_in_secs(total_time) > 0)
     6f4:	000a0513          	mv	a0,s4
     6f8:	00001097          	auipc	ra,0x1
     6fc:	64c080e7          	jalr	1612(ra) # 1d44 <time_in_secs>
    total_errors += check_data_types();
     700:	01041413          	slli	s0,s0,0x10
    if (time_in_secs(total_time) > 0)
     704:	00000613          	li	a2,0
     708:	00000693          	li	a3,0
    total_errors += check_data_types();
     70c:	01045413          	srli	s0,s0,0x10
    if (time_in_secs(total_time) > 0)
     710:	00003097          	auipc	ra,0x3
     714:	4b8080e7          	jalr	1208(ra) # 3bc8 <__gedf2>
     718:	04a05e63          	blez	a0,774 <main+0x6fc>
        ee_printf("Iterations/Sec   : %lf\n",
                  default_num_contexts * results[0].iterations
     71c:	ba0ba783          	lw	a5,-1120(s7) # 1000ba0 <default_num_contexts>
        ee_printf("Iterations/Sec   : %lf\n",
     720:	03812503          	lw	a0,56(sp)
     724:	02f50533          	mul	a0,a0,a5
     728:	00003097          	auipc	ra,0x3
     72c:	714080e7          	jalr	1812(ra) # 3e3c <__floatunsidf>
     730:	00050c13          	mv	s8,a0
                      / time_in_secs(total_time));
     734:	000a0513          	mv	a0,s4
        ee_printf("Iterations/Sec   : %lf\n",
     738:	00058c93          	mv	s9,a1
                      / time_in_secs(total_time));
     73c:	00001097          	auipc	ra,0x1
     740:	608080e7          	jalr	1544(ra) # 1d44 <time_in_secs>
        ee_printf("Iterations/Sec   : %lf\n",
     744:	00050613          	mv	a2,a0
     748:	00058693          	mv	a3,a1
     74c:	000c0513          	mv	a0,s8
     750:	000c8593          	mv	a1,s9
     754:	00003097          	auipc	ra,0x3
     758:	ce8080e7          	jalr	-792(ra) # 343c <__divdf3>
     75c:	00050613          	mv	a2,a0
     760:	01000537          	lui	a0,0x1000
     764:	00058693          	mv	a3,a1
     768:	1cc50513          	addi	a0,a0,460 # 10001cc <_data+0x1cc>
     76c:	00004097          	auipc	ra,0x4
     770:	764080e7          	jalr	1892(ra) # 4ed0 <iprintf>
    if (time_in_secs(total_time) > 0)
        ee_printf("Iterations/Sec   : %d\n",
                  default_num_contexts * results[0].iterations
                      / time_in_secs(total_time));
#endif
    if (time_in_secs(total_time) < 10)
     774:	000a0513          	mv	a0,s4
     778:	00001097          	auipc	ra,0x1
     77c:	5cc080e7          	jalr	1484(ra) # 1d44 <time_in_secs>
     780:	010007b7          	lui	a5,0x1000
     784:	0087a603          	lw	a2,8(a5) # 1000008 <_data+0x8>
     788:	00c7a683          	lw	a3,12(a5)
     78c:	00003097          	auipc	ra,0x3
     790:	538080e7          	jalr	1336(ra) # 3cc4 <__ledf2>
     794:	40054063          	bltz	a0,b94 <main+0xb1c>
        ee_printf(
            "ERROR! Must execute for at least 10 secs for a valid result!\n");
        total_errors++;
    }

    ee_printf("Iterations       : %lu\n",
     798:	ba0ba783          	lw	a5,-1120(s7)
     79c:	03812583          	lw	a1,56(sp)
     7a0:	01000537          	lui	a0,0x1000
     7a4:	22450513          	addi	a0,a0,548 # 1000224 <_data+0x224>
     7a8:	02f585b3          	mul	a1,a1,a5
              (long unsigned)default_num_contexts * results[0].iterations);
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     7ac:	01000ab7          	lui	s5,0x1000
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     7b0:	01000b37          	lui	s6,0x1000
#if (MULTITHREAD > 1)
    ee_printf("Parallel %s : %d\n", PARALLEL_METHOD, default_num_contexts);
#endif
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     7b4:	01000c37          	lui	s8,0x1000
        total_errors++;
     7b8:	01041413          	slli	s0,s0,0x10
     7bc:	41045413          	srai	s0,s0,0x10
    ee_printf("Iterations       : %lu\n",
     7c0:	00004097          	auipc	ra,0x4
     7c4:	710080e7          	jalr	1808(ra) # 4ed0 <iprintf>
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     7c8:	01000537          	lui	a0,0x1000
     7cc:	23ca8593          	addi	a1,s5,572 # 100023c <_data+0x23c>
     7d0:	24850513          	addi	a0,a0,584 # 1000248 <_data+0x248>
     7d4:	00004097          	auipc	ra,0x4
     7d8:	6fc080e7          	jalr	1788(ra) # 4ed0 <iprintf>
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     7dc:	01000537          	lui	a0,0x1000
     7e0:	260b0593          	addi	a1,s6,608 # 1000260 <_data+0x260>
     7e4:	26450513          	addi	a0,a0,612 # 1000264 <_data+0x264>
     7e8:	00004097          	auipc	ra,0x4
     7ec:	6e8080e7          	jalr	1768(ra) # 4ed0 <iprintf>
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     7f0:	01000537          	lui	a0,0x1000
     7f4:	27cc0593          	addi	a1,s8,636 # 100027c <_data+0x27c>
     7f8:	28450513          	addi	a0,a0,644 # 1000284 <_data+0x284>
     7fc:	00004097          	auipc	ra,0x4
     800:	6d4080e7          	jalr	1748(ra) # 4ed0 <iprintf>
    /* output for verification */
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
     804:	01000537          	lui	a0,0x1000
     808:	00098593          	mv	a1,s3
     80c:	29c50513          	addi	a0,a0,668 # 100029c <_data+0x29c>
     810:	00004097          	auipc	ra,0x4
     814:	6c0080e7          	jalr	1728(ra) # 4ed0 <iprintf>
    if (results[0].execs & ID_LIST)
     818:	03c12783          	lw	a5,60(sp)
     81c:	0017f693          	andi	a3,a5,1
     820:	06068a63          	beqz	a3,894 <main+0x81c>
        for (i = 0; i < default_num_contexts; i++)
     824:	ba0ba683          	lw	a3,-1120(s7)
     828:	06068663          	beqz	a3,894 <main+0x81c>
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     82c:	00001737          	lui	a4,0x1
     830:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b8>
     834:	fffff7b7          	lui	a5,0xfffff
     838:	00270733          	add	a4,a4,sp
     83c:	00f707b3          	add	a5,a4,a5
        for (i = 0; i < default_num_contexts; i++)
     840:	00000993          	li	s3,0
     844:	01000937          	lui	s2,0x1000
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     848:	00f12223          	sw	a5,4(sp)
     84c:	000014b7          	lui	s1,0x1
     850:	00499793          	slli	a5,s3,0x4
     854:	00412703          	lw	a4,4(sp)
     858:	013787b3          	add	a5,a5,s3
     85c:	00279793          	slli	a5,a5,0x2
     860:	00f707b3          	add	a5,a4,a5
     864:	00f487b3          	add	a5,s1,a5
     868:	8267d603          	lhu	a2,-2010(a5) # ffffe826 <__freertos_irq_stack_top+0xfefee826>
     86c:	00098593          	mv	a1,s3
     870:	2b890513          	addi	a0,s2,696 # 10002b8 <_data+0x2b8>
     874:	00004097          	auipc	ra,0x4
     878:	65c080e7          	jalr	1628(ra) # 4ed0 <iprintf>
        for (i = 0; i < default_num_contexts; i++)
     87c:	00198993          	addi	s3,s3,1
     880:	ba0ba783          	lw	a5,-1120(s7)
     884:	01099993          	slli	s3,s3,0x10
     888:	0109d993          	srli	s3,s3,0x10
     88c:	fcf9e2e3          	bltu	s3,a5,850 <main+0x7d8>
     890:	03c12783          	lw	a5,60(sp)
    if (results[0].execs & ID_MATRIX)
     894:	0027f693          	andi	a3,a5,2
     898:	06068a63          	beqz	a3,90c <main+0x894>
        for (i = 0; i < default_num_contexts; i++)
     89c:	ba0ba683          	lw	a3,-1120(s7)
     8a0:	30068663          	beqz	a3,bac <main+0xb34>
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     8a4:	00001737          	lui	a4,0x1
     8a8:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b8>
     8ac:	fffff7b7          	lui	a5,0xfffff
     8b0:	00270733          	add	a4,a4,sp
     8b4:	00f707b3          	add	a5,a4,a5
        for (i = 0; i < default_num_contexts; i++)
     8b8:	00000993          	li	s3,0
     8bc:	01000937          	lui	s2,0x1000
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     8c0:	00f12223          	sw	a5,4(sp)
     8c4:	000014b7          	lui	s1,0x1
     8c8:	00499793          	slli	a5,s3,0x4
     8cc:	00412703          	lw	a4,4(sp)
     8d0:	013787b3          	add	a5,a5,s3
     8d4:	00279793          	slli	a5,a5,0x2
     8d8:	00f707b3          	add	a5,a4,a5
     8dc:	00f487b3          	add	a5,s1,a5
     8e0:	8287d603          	lhu	a2,-2008(a5) # ffffe828 <__freertos_irq_stack_top+0xfefee828>
     8e4:	00098593          	mv	a1,s3
     8e8:	2d490513          	addi	a0,s2,724 # 10002d4 <_data+0x2d4>
     8ec:	00004097          	auipc	ra,0x4
     8f0:	5e4080e7          	jalr	1508(ra) # 4ed0 <iprintf>
        for (i = 0; i < default_num_contexts; i++)
     8f4:	00198993          	addi	s3,s3,1
     8f8:	ba0ba783          	lw	a5,-1120(s7)
     8fc:	01099993          	slli	s3,s3,0x10
     900:	0109d993          	srli	s3,s3,0x10
     904:	fcf9e2e3          	bltu	s3,a5,8c8 <main+0x850>
     908:	03c12783          	lw	a5,60(sp)
    if (results[0].execs & ID_STATE)
     90c:	0047f793          	andi	a5,a5,4
     910:	06078863          	beqz	a5,980 <main+0x908>
        for (i = 0; i < default_num_contexts; i++)
     914:	ba0ba783          	lw	a5,-1120(s7)
     918:	0c078663          	beqz	a5,9e4 <main+0x96c>
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     91c:	00001737          	lui	a4,0x1
     920:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b8>
     924:	fffff7b7          	lui	a5,0xfffff
     928:	00270733          	add	a4,a4,sp
     92c:	00f707b3          	add	a5,a4,a5
        for (i = 0; i < default_num_contexts; i++)
     930:	00000993          	li	s3,0
     934:	01000937          	lui	s2,0x1000
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     938:	00f12223          	sw	a5,4(sp)
     93c:	000014b7          	lui	s1,0x1
     940:	00499793          	slli	a5,s3,0x4
     944:	00412703          	lw	a4,4(sp)
     948:	013787b3          	add	a5,a5,s3
     94c:	00279793          	slli	a5,a5,0x2
     950:	00f707b3          	add	a5,a4,a5
     954:	00f487b3          	add	a5,s1,a5
     958:	82a7d603          	lhu	a2,-2006(a5) # ffffe82a <__freertos_irq_stack_top+0xfefee82a>
     95c:	00098593          	mv	a1,s3
     960:	2f090513          	addi	a0,s2,752 # 10002f0 <_data+0x2f0>
     964:	00004097          	auipc	ra,0x4
     968:	56c080e7          	jalr	1388(ra) # 4ed0 <iprintf>
        for (i = 0; i < default_num_contexts; i++)
     96c:	00198993          	addi	s3,s3,1
     970:	ba0ba783          	lw	a5,-1120(s7)
     974:	01099993          	slli	s3,s3,0x10
     978:	0109d993          	srli	s3,s3,0x10
     97c:	fcf9e2e3          	bltu	s3,a5,940 <main+0x8c8>
    for (i = 0; i < default_num_contexts; i++)
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     980:	00001737          	lui	a4,0x1
    for (i = 0; i < default_num_contexts; i++)
     984:	ba0ba783          	lw	a5,-1120(s7)
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     988:	83070713          	addi	a4,a4,-2000 # 830 <main+0x7b8>
     98c:	fffff4b7          	lui	s1,0xfffff
     990:	00270733          	add	a4,a4,sp
    for (i = 0; i < default_num_contexts; i++)
     994:	00000c93          	li	s9,0
     998:	010009b7          	lui	s3,0x1000
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     99c:	009704b3          	add	s1,a4,s1
     9a0:	00001937          	lui	s2,0x1
    for (i = 0; i < default_num_contexts; i++)
     9a4:	04078063          	beqz	a5,9e4 <main+0x96c>
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     9a8:	004c9793          	slli	a5,s9,0x4
     9ac:	019787b3          	add	a5,a5,s9
     9b0:	00279793          	slli	a5,a5,0x2
     9b4:	00f487b3          	add	a5,s1,a5
     9b8:	00f907b3          	add	a5,s2,a5
     9bc:	8247d603          	lhu	a2,-2012(a5)
     9c0:	000c8593          	mv	a1,s9
     9c4:	30c98513          	addi	a0,s3,780 # 100030c <_data+0x30c>
     9c8:	00004097          	auipc	ra,0x4
     9cc:	508080e7          	jalr	1288(ra) # 4ed0 <iprintf>
    for (i = 0; i < default_num_contexts; i++)
     9d0:	001c8c93          	addi	s9,s9,1 # 1001 <__stack_size+0x1>
     9d4:	ba0ba783          	lw	a5,-1120(s7)
     9d8:	010c9c93          	slli	s9,s9,0x10
     9dc:	010cdc93          	srli	s9,s9,0x10
     9e0:	fcfce4e3          	bltu	s9,a5,9a8 <main+0x930>
    if (total_errors == 0)
     9e4:	10040863          	beqz	s0,af4 <main+0xa7c>
#endif
            ee_printf("\n");
        }
#endif
    }
    if (total_errors > 0)
     9e8:	0e805263          	blez	s0,acc <main+0xa54>
        ee_printf("Errors detected\n");
     9ec:	01000537          	lui	a0,0x1000
     9f0:	39450513          	addi	a0,a0,916 # 1000394 <_data+0x394>
     9f4:	00004097          	auipc	ra,0x4
     9f8:	7f8080e7          	jalr	2040(ra) # 51ec <puts>
#if (MEM_METHOD == MEM_MALLOC)
    for (i = 0; i < MULTITHREAD; i++)
        portable_free(results[i].memblock[0]);
#endif
    /* And last call any target specific code for finalizing */
    portable_fini(&(results[0].port));
     9fc:	05e10513          	addi	a0,sp,94
     a00:	00001097          	auipc	ra,0x1
     a04:	3ac080e7          	jalr	940(ra) # 1dac <portable_fini>

    return MAIN_RETURN_VAL;
}
     a08:	08010113          	addi	sp,sp,128
     a0c:	7ec12083          	lw	ra,2028(sp)
     a10:	00000513          	li	a0,0
     a14:	7e812403          	lw	s0,2024(sp)
     a18:	7e412483          	lw	s1,2020(sp)
     a1c:	7e012903          	lw	s2,2016(sp)
     a20:	7dc12983          	lw	s3,2012(sp)
     a24:	7d812a03          	lw	s4,2008(sp)
     a28:	7d412a83          	lw	s5,2004(sp)
     a2c:	7d012b03          	lw	s6,2000(sp)
     a30:	7cc12b83          	lw	s7,1996(sp)
     a34:	7c812c03          	lw	s8,1992(sp)
     a38:	7c412c83          	lw	s9,1988(sp)
     a3c:	7c012d03          	lw	s10,1984(sp)
     a40:	7bc12d83          	lw	s11,1980(sp)
     a44:	7f010113          	addi	sp,sp,2032
     a48:	00008067          	ret
        results[0].execs = ALL_ALGORITHMS_MASK;
     a4c:	00700793          	li	a5,7
     a50:	02f12e23          	sw	a5,60(sp)
     a54:	ee0ff06f          	j	134 <main+0xbc>
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a58:	00001637          	lui	a2,0x1
     a5c:	83060613          	addi	a2,a2,-2000 # 830 <main+0x7b8>
     a60:	00260633          	add	a2,a2,sp
     a64:	01060633          	add	a2,a2,a6
     a68:	06010813          	addi	a6,sp,96
     a6c:	00c12223          	sw	a2,4(sp)
     a70:	7f062c23          	sw	a6,2040(a2)
            j++;
     a74:	00100613          	li	a2,1
        if ((1 << (ee_u32)i) & results[0].execs)
     a78:	f6070863          	beqz	a4,1e8 <main+0x170>
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a7c:	02a60833          	mul	a6,a2,a0
     a80:	06010313          	addi	t1,sp,96
     a84:	fffff8b7          	lui	a7,0xfffff
            j++;
     a88:	00160613          	addi	a2,a2,1
     a8c:	01061613          	slli	a2,a2,0x10
     a90:	01065613          	srli	a2,a2,0x10
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a94:	01030833          	add	a6,t1,a6
     a98:	00001337          	lui	t1,0x1
     a9c:	83030313          	addi	t1,t1,-2000 # 830 <main+0x7b8>
     aa0:	00230333          	add	t1,t1,sp
     aa4:	011308b3          	add	a7,t1,a7
     aa8:	01112223          	sw	a7,4(sp)
     aac:	7f08ae23          	sw	a6,2044(a7) # fffff7fc <__freertos_irq_stack_top+0xfefef7fc>
        if ((1 << (ee_u32)i) & results[0].execs)
     ab0:	f2058e63          	beqz	a1,1ec <main+0x174>
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     ab4:	02a60633          	mul	a2,a2,a0
     ab8:	06010593          	addi	a1,sp,96
     abc:	00c58633          	add	a2,a1,a2
     ac0:	02c12823          	sw	a2,48(sp)
        if (results[i].execs & ID_LIST)
     ac4:	f2068663          	beqz	a3,1f0 <main+0x178>
     ac8:	ac5ff06f          	j	58c <main+0x514>
        ee_printf(
     acc:	01000537          	lui	a0,0x1000
     ad0:	3a450513          	addi	a0,a0,932 # 10003a4 <_data+0x3a4>
     ad4:	00004097          	auipc	ra,0x4
     ad8:	718080e7          	jalr	1816(ra) # 51ec <puts>
     adc:	f21ff06f          	j	9fc <main+0x984>
            res->crclist = res->crc;
     ae0:	04a11b23          	sh	a0,86(sp)
    for (i = 0; i < iterations; i++)
     ae4:	00100793          	li	a5,1
     ae8:	fef90863          	beq	s2,a5,2d8 <main+0x260>
     aec:	00100413          	li	s0,1
     af0:	f9cff06f          	j	28c <main+0x214>
        ee_printf(
     af4:	01000537          	lui	a0,0x1000
     af8:	32850513          	addi	a0,a0,808 # 1000328 <_data+0x328>
     afc:	00004097          	auipc	ra,0x4
     b00:	6f0080e7          	jalr	1776(ra) # 51ec <puts>
        if (known_id == 3)
     b04:	00812703          	lw	a4,8(sp)
     b08:	00300793          	li	a5,3
     b0c:	eef718e3          	bne	a4,a5,9fc <main+0x984>
                      default_num_contexts * results[0].iterations
     b10:	ba0ba783          	lw	a5,-1120(s7)
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b14:	03812503          	lw	a0,56(sp)
     b18:	02f50533          	mul	a0,a0,a5
     b1c:	00003097          	auipc	ra,0x3
     b20:	320080e7          	jalr	800(ra) # 3e3c <__floatunsidf>
     b24:	00050413          	mv	s0,a0
                          / time_in_secs(total_time),
     b28:	000a0513          	mv	a0,s4
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b2c:	00058493          	mv	s1,a1
                          / time_in_secs(total_time),
     b30:	00001097          	auipc	ra,0x1
     b34:	214080e7          	jalr	532(ra) # 1d44 <time_in_secs>
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b38:	00050613          	mv	a2,a0
     b3c:	00058693          	mv	a3,a1
     b40:	00040513          	mv	a0,s0
     b44:	00048593          	mv	a1,s1
     b48:	00003097          	auipc	ra,0x3
     b4c:	8f4080e7          	jalr	-1804(ra) # 343c <__divdf3>
     b50:	00050613          	mv	a2,a0
     b54:	01000537          	lui	a0,0x1000
     b58:	00058693          	mv	a3,a1
     b5c:	260b0793          	addi	a5,s6,608
     b60:	23ca8713          	addi	a4,s5,572
     b64:	37050513          	addi	a0,a0,880 # 1000370 <_data+0x370>
     b68:	00004097          	auipc	ra,0x4
     b6c:	368080e7          	jalr	872(ra) # 4ed0 <iprintf>
            ee_printf(" / %s", MEM_LOCATION);
     b70:	01000537          	lui	a0,0x1000
     b74:	27cc0593          	addi	a1,s8,636
     b78:	38c50513          	addi	a0,a0,908 # 100038c <_data+0x38c>
     b7c:	00004097          	auipc	ra,0x4
     b80:	354080e7          	jalr	852(ra) # 4ed0 <iprintf>
            ee_printf("\n");
     b84:	00a00513          	li	a0,10
     b88:	00004097          	auipc	ra,0x4
     b8c:	3cc080e7          	jalr	972(ra) # 4f54 <putchar>
     b90:	e6dff06f          	j	9fc <main+0x984>
        ee_printf(
     b94:	01000537          	lui	a0,0x1000
     b98:	1e450513          	addi	a0,a0,484 # 10001e4 <_data+0x1e4>
     b9c:	00004097          	auipc	ra,0x4
     ba0:	650080e7          	jalr	1616(ra) # 51ec <puts>
        total_errors++;
     ba4:	00140413          	addi	s0,s0,1
     ba8:	bf1ff06f          	j	798 <main+0x720>
    if (results[0].execs & ID_STATE)
     bac:	0047f793          	andi	a5,a5,4
     bb0:	dc0788e3          	beqz	a5,980 <main+0x908>
     bb4:	e31ff06f          	j	9e4 <main+0x96c>
            ee_printf("6k validation run parameters for coremark.\n");
     bb8:	01000537          	lui	a0,0x1000
     bbc:	03c50513          	addi	a0,a0,60 # 100003c <_data+0x3c>
     bc0:	00004097          	auipc	ra,0x4
     bc4:	62c080e7          	jalr	1580(ra) # 51ec <puts>
     bc8:	00001b37          	lui	s6,0x1
     bcc:	199b0b13          	addi	s6,s6,409 # 1199 <__stack_size+0x199>
     bd0:	00004937          	lui	s2,0x4
     bd4:	00003ab7          	lui	s5,0x3
            known_id = 1;
     bd8:	00100793          	li	a5,1
            ee_printf("6k validation run parameters for coremark.\n");
     bdc:	9bf90913          	addi	s2,s2,-1601 # 39bf <__divdf3+0x583>
     be0:	000b0c13          	mv	s8,s6
     be4:	340a8a93          	addi	s5,s5,832 # 3340 <__udivdi3+0x3a4>
            known_id = 1;
     be8:	00f12423          	sw	a5,8(sp)
     bec:	841ff06f          	j	42c <main+0x3b4>
            ee_printf("6k performance run parameters for coremark.\n");
     bf0:	01000537          	lui	a0,0x1000
     bf4:	0000cb37          	lui	s6,0xc
     bf8:	01050513          	addi	a0,a0,16 # 1000010 <_data+0x10>
     bfc:	e52b0b13          	addi	s6,s6,-430 # be52 <_data_lma+0x183a>
     c00:	00006937          	lui	s2,0x6
     c04:	0000dab7          	lui	s5,0xd
     c08:	00004097          	auipc	ra,0x4
     c0c:	5e4080e7          	jalr	1508(ra) # 51ec <puts>
     c10:	e4790913          	addi	s2,s2,-441 # 5e47 <_dtoa_r+0x787>
     c14:	000b0c13          	mv	s8,s6
     c18:	4b0a8a93          	addi	s5,s5,1200 # d4b0 <_data_lma+0x2e98>
            known_id = 0;
     c1c:	00012423          	sw	zero,8(sp)
     c20:	80dff06f          	j	42c <main+0x3b4>
            ee_printf("2K validation run parameters for coremark.\n");
     c24:	01000537          	lui	a0,0x1000
     c28:	0c450513          	addi	a0,a0,196 # 10000c4 <_data+0xc4>
     c2c:	00004097          	auipc	ra,0x4
     c30:	5c0080e7          	jalr	1472(ra) # 51ec <puts>
     c34:	00009937          	lui	s2,0x9
     c38:	0000eab7          	lui	s5,0xe
            known_id = 4;
     c3c:	00400793          	li	a5,4
            ee_printf("2K validation run parameters for coremark.\n");
     c40:	d8490913          	addi	s2,s2,-636 # 8d84 <__adddf3+0x4a0>
     c44:	74700b13          	li	s6,1863
     c48:	74700c13          	li	s8,1863
     c4c:	3c1a8a93          	addi	s5,s5,961 # e3c1 <_data_lma+0x3da9>
            known_id = 4;
     c50:	00f12423          	sw	a5,8(sp)
     c54:	fd8ff06f          	j	42c <main+0x3b4>
        for (i = 0; i < default_num_contexts; i++)
     c58:	00000413          	li	s0,0
     c5c:	a41ff06f          	j	69c <main+0x624>

00000c60 <core_bench_list>:
core_bench_list(core_results *res, ee_s16 finder_idx)
{
    ee_u16     retval = 0;
    ee_u16     found = 0, missed = 0;
    list_head *list     = res->list;
    ee_s16     find_num = res->seed3;
     c60:	00451883          	lh	a7,4(a0)
{
     c64:	fa010113          	addi	sp,sp,-96
     c68:	04812c23          	sw	s0,88(sp)
     c6c:	03812c23          	sw	s8,56(sp)
     c70:	04112e23          	sw	ra,92(sp)
     c74:	04912a23          	sw	s1,84(sp)
     c78:	05212823          	sw	s2,80(sp)
     c7c:	05312623          	sw	s3,76(sp)
     c80:	05412423          	sw	s4,72(sp)
     c84:	05512223          	sw	s5,68(sp)
     c88:	05612023          	sw	s6,64(sp)
     c8c:	03712e23          	sw	s7,60(sp)
     c90:	03912a23          	sw	s9,52(sp)
     c94:	03a12823          	sw	s10,48(sp)
     c98:	03b12623          	sw	s11,44(sp)
     c9c:	00012a23          	sw	zero,20(sp)
     ca0:	00050c13          	mv	s8,a0
    list_head *list     = res->list;
     ca4:	02452403          	lw	s0,36(a0)
    ee_s16     i;

    info.idx = finder_idx;
    /* find <find_num> values in the list, and change the list each time
     * (reverse and cache if value found) */
    for (i = 0; i < find_num; i++)
     ca8:	39105a63          	blez	a7,103c <__stack_size+0x3c>
    info.idx = finder_idx;
     cac:	00b12623          	sw	a1,12(sp)
    for (i = 0; i < find_num; i++)
     cb0:	00000613          	li	a2,0
    ee_u16     found = 0, missed = 0;
     cb4:	00000e13          	li	t3,0
     cb8:	00000513          	li	a0,0
    ee_u16     retval = 0;
     cbc:	00000813          	li	a6,0
        Found item, or NULL if not found.
*/
list_head *
core_list_find(list_head *list, list_data *info)
{
    if (info->idx >= 0)
     cc0:	00c12783          	lw	a5,12(sp)
        info.data16 = (i & 0xff);
     cc4:	0ff67693          	andi	a3,a2,255
     cc8:	00d12a23          	sw	a3,20(sp)
    if (info->idx >= 0)
     ccc:	2a07c863          	bltz	a5,f7c <core_bench_list+0x31c>
    {
        while (list && (list->info->idx != info->idx))
     cd0:	60040c63          	beqz	s0,12e8 <__stack_size+0x2e8>
     cd4:	00442703          	lw	a4,4(s0)
     cd8:	00078693          	mv	a3,a5
     cdc:	00040793          	mv	a5,s0
     ce0:	00271703          	lh	a4,2(a4)
     ce4:	00d71c63          	bne	a4,a3,cfc <core_bench_list+0x9c>
     ce8:	01c0006f          	j	d04 <core_bench_list+0xa4>
     cec:	0047a703          	lw	a4,4(a5)
     cf0:	00c12683          	lw	a3,12(sp)
     cf4:	00271703          	lh	a4,2(a4)
     cf8:	00d70663          	beq	a4,a3,d04 <core_bench_list+0xa4>
            list = list->next;
     cfc:	0007a783          	lw	a5,0(a5)
        while (list && (list->info->idx != info->idx))
     d00:	fe0796e3          	bnez	a5,cec <core_bench_list+0x8c>
     d04:	00000693          	li	a3,0
     d08:	00c0006f          	j	d14 <core_bench_list+0xb4>

list_head *
core_list_reverse(list_head *list)
{
    list_head *next = NULL, *tmp;
    while (list)
     d0c:	00040693          	mv	a3,s0
     d10:	00070413          	mv	s0,a4
    {
        tmp        = list->next;
     d14:	00042703          	lw	a4,0(s0)
        list->next = next;
     d18:	00d42023          	sw	a3,0(s0)
    while (list)
     d1c:	fe0718e3          	bnez	a4,d0c <core_bench_list+0xac>
        if (this_find == NULL)
     d20:	28078863          	beqz	a5,fb0 <core_bench_list+0x350>
            if (this_find->info->data16 & 0x1) /* use found value */
     d24:	0047a703          	lw	a4,4(a5)
            found++;
     d28:	00150513          	addi	a0,a0,1
     d2c:	01051513          	slli	a0,a0,0x10
            if (this_find->info->data16 & 0x1) /* use found value */
     d30:	00071703          	lh	a4,0(a4)
            found++;
     d34:	01055513          	srli	a0,a0,0x10
            if (this_find->info->data16 & 0x1) /* use found value */
     d38:	00177693          	andi	a3,a4,1
     d3c:	00068c63          	beqz	a3,d54 <core_bench_list+0xf4>
                retval += (this_find->info->data16 >> 9) & 1;
     d40:	40975713          	srai	a4,a4,0x9
     d44:	00177713          	andi	a4,a4,1
     d48:	00e80733          	add	a4,a6,a4
     d4c:	01071813          	slli	a6,a4,0x10
     d50:	01085813          	srli	a6,a6,0x10
            if (this_find->next != NULL)
     d54:	0007a683          	lw	a3,0(a5)
     d58:	00068c63          	beqz	a3,d70 <core_bench_list+0x110>
                this_find->next = finder->next;
     d5c:	0006a703          	lw	a4,0(a3)
     d60:	00e7a023          	sw	a4,0(a5)
                finder->next    = list->next;
     d64:	00042783          	lw	a5,0(s0)
     d68:	00f6a023          	sw	a5,0(a3)
                list->next      = finder;
     d6c:	00d42023          	sw	a3,0(s0)
        if (info.idx >= 0)
     d70:	00c12783          	lw	a5,12(sp)
     d74:	0007ca63          	bltz	a5,d88 <core_bench_list+0x128>
            info.idx++;
     d78:	00178b13          	addi	s6,a5,1
     d7c:	010b1793          	slli	a5,s6,0x10
     d80:	4107d793          	srai	a5,a5,0x10
     d84:	00f12623          	sw	a5,12(sp)
     d88:	00160613          	addi	a2,a2,1
     d8c:	01061613          	slli	a2,a2,0x10
     d90:	41065613          	srai	a2,a2,0x10
    for (i = 0; i < find_num; i++)
     d94:	f2c896e3          	bne	a7,a2,cc0 <core_bench_list+0x60>
     d98:	00251793          	slli	a5,a0,0x2
     d9c:	41c787b3          	sub	a5,a5,t3
     da0:	00f807b3          	add	a5,a6,a5
     da4:	01079793          	slli	a5,a5,0x10
     da8:	0107d793          	srli	a5,a5,0x10
     dac:	00f12e23          	sw	a5,28(sp)
    if (finder_idx > 0)
     db0:	28b04e63          	bgtz	a1,104c <__stack_size+0x4c>
    remover = core_list_remove(list->next);
     db4:	00042783          	lw	a5,0(s0)
    if (info->idx >= 0)
     db8:	00040493          	mv	s1,s0
    list_head *ret = item->next;
     dbc:	0007a903          	lw	s2,0(a5)
    tmp        = item->info;
     dc0:	0047a703          	lw	a4,4(a5)
    item->info = ret->info;
     dc4:	00492603          	lw	a2,4(s2)
    item->next = item->next->next;
     dc8:	00092683          	lw	a3,0(s2)
    item->info = ret->info;
     dcc:	00c7a223          	sw	a2,4(a5)
    ret->info  = tmp;
     dd0:	00e92223          	sw	a4,4(s2)
    item->next = item->next->next;
     dd4:	00d7a023          	sw	a3,0(a5)
    if (info->idx >= 0)
     dd8:	00c12783          	lw	a5,12(sp)
    ret->next  = NULL;
     ddc:	00092023          	sw	zero,0(s2)
    if (info->idx >= 0)
     de0:	1407c063          	bltz	a5,f20 <core_bench_list+0x2c0>
        while (list && (list->info->idx != info->idx))
     de4:	0044a783          	lw	a5,4(s1) # fffff004 <__freertos_irq_stack_top+0xfefef004>
     de8:	00c12683          	lw	a3,12(sp)
     dec:	00279783          	lh	a5,2(a5)
     df0:	00d78a63          	beq	a5,a3,e04 <core_bench_list+0x1a4>
            list = list->next;
     df4:	0004a483          	lw	s1,0(s1)
        while (list && (list->info->idx != info->idx))
     df8:	fe0496e3          	bnez	s1,de4 <core_bench_list+0x184>
        finder = list->next;
     dfc:	00042483          	lw	s1,0(s0)
    while (finder)
     e00:	02048663          	beqz	s1,e2c <core_bench_list+0x1cc>
        retval = crc16(list->info->data16, retval);
     e04:	00442783          	lw	a5,4(s0)
     e08:	01c12583          	lw	a1,28(sp)
     e0c:	00079503          	lh	a0,0(a5)
     e10:	00002097          	auipc	ra,0x2
     e14:	e90080e7          	jalr	-368(ra) # 2ca0 <crc16>
        finder = finder->next;
     e18:	0004a483          	lw	s1,0(s1)
        retval = crc16(list->info->data16, retval);
     e1c:	00a12e23          	sw	a0,28(sp)
    while (finder)
     e20:	fe0492e3          	bnez	s1,e04 <core_bench_list+0x1a4>
     e24:	00042483          	lw	s1,0(s0)
     e28:	00492703          	lw	a4,4(s2)
    item_removed->info  = item_modified->info;
     e2c:	0044a683          	lw	a3,4(s1)
    item_removed->next  = item_modified->next;
     e30:	0004a783          	lw	a5,0(s1)
core_list_mergesort(list_head *list, list_cmp cmp, core_results *res)
{
    list_head *p, *q, *e, *tail;
    ee_s32     insize, nmerges, psize, qsize, i;

    insize = 1;
     e34:	00100e13          	li	t3,1
    item_removed->info  = item_modified->info;
     e38:	00d92223          	sw	a3,4(s2)
    item_modified->info = tmp;
     e3c:	00e4a223          	sw	a4,4(s1)
    item_removed->next  = item_modified->next;
     e40:	00f92023          	sw	a5,0(s2)
    item_modified->next = item_removed;
     e44:	0124a023          	sw	s2,0(s1)

    while (1)
    {
        p    = list;
        list = NULL;
        tail = NULL;
     e48:	00000313          	li	t1,0
        list = NULL;
     e4c:	00000493          	li	s1,0

        nmerges = 0; /* count number of merges we do in this pass */
     e50:	00000e93          	li	t4,0
        }

        tail->next = NULL;

        /* If we have done only one merge, we're finished. */
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     e54:	00100f93          	li	t6,1
            nmerges++; /* there exists a merge to be done */
     e58:	001e8e93          	addi	t4,t4,1
     e5c:	00040693          	mv	a3,s0
            psize = 0;
     e60:	00000793          	li	a5,0
                q = q->next;
     e64:	0006a683          	lw	a3,0(a3)
                psize++;
     e68:	00178793          	addi	a5,a5,1
                if (!q)
     e6c:	00068663          	beqz	a3,e78 <core_bench_list+0x218>
            for (i = 0; i < insize; i++)
     e70:	fefe1ae3          	bne	t3,a5,e64 <core_bench_list+0x204>
     e74:	000e0793          	mv	a5,t3
                    list = e;
     e78:	00040713          	mv	a4,s0
     e7c:	000e0613          	mv	a2,t3
     e80:	00068413          	mv	s0,a3
            while (psize > 0 || (qsize > 0 && q))
     e84:	06078c63          	beqz	a5,efc <core_bench_list+0x29c>
                else if (qsize == 0 || !q)
     e88:	0a060e63          	beqz	a2,f44 <core_bench_list+0x2e4>
     e8c:	0a040c63          	beqz	s0,f44 <core_bench_list+0x2e4>
                else if (cmp(p->info, q->info, res) <= 0)
     e90:	00472803          	lw	a6,4(a4)
     e94:	00442503          	lw	a0,4(s0)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     e98:	00081683          	lh	a3,0(a6) # fffff000 <__freertos_irq_stack_top+0xfefef000>
    return a->idx - b->idx;
     e9c:	00251f03          	lh	t5,2(a0)
     ea0:	00281583          	lh	a1,2(a6)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     ea4:	01069893          	slli	a7,a3,0x10
     ea8:	0108d893          	srli	a7,a7,0x10
     eac:	f006f693          	andi	a3,a3,-256
     eb0:	0088d893          	srli	a7,a7,0x8
     eb4:	0116e6b3          	or	a3,a3,a7
     eb8:	00d81023          	sh	a3,0(a6)
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     ebc:	00051683          	lh	a3,0(a0)
    return a->idx - b->idx;
     ec0:	41e585b3          	sub	a1,a1,t5
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     ec4:	01069813          	slli	a6,a3,0x10
     ec8:	01085813          	srli	a6,a6,0x10
     ecc:	f006f693          	andi	a3,a3,-256
     ed0:	00885813          	srli	a6,a6,0x8
     ed4:	0106e6b3          	or	a3,a3,a6
     ed8:	00d51023          	sh	a3,0(a0)
                else if (cmp(p->info, q->info, res) <= 0)
     edc:	06b05463          	blez	a1,f44 <core_bench_list+0x2e4>
                    qsize--;
     ee0:	00040693          	mv	a3,s0
                    q = q->next;
     ee4:	00042403          	lw	s0,0(s0)
                    qsize--;
     ee8:	fff60613          	addi	a2,a2,-1
                if (tail)
     eec:	02030463          	beqz	t1,f14 <core_bench_list+0x2b4>
                    tail->next = e;
     ef0:	00d32023          	sw	a3,0(t1)
                    list = e;
     ef4:	00068313          	mv	t1,a3
            while (psize > 0 || (qsize > 0 && q))
     ef8:	f80798e3          	bnez	a5,e88 <core_bench_list+0x228>
     efc:	04060c63          	beqz	a2,f54 <core_bench_list+0x2f4>
     f00:	04040c63          	beqz	s0,f58 <core_bench_list+0x2f8>
                    qsize--;
     f04:	00040693          	mv	a3,s0
     f08:	fff60613          	addi	a2,a2,-1
                    q = q->next;
     f0c:	00042403          	lw	s0,0(s0)
                if (tail)
     f10:	fe0310e3          	bnez	t1,ef0 <core_bench_list+0x290>
                    list = e;
     f14:	00068493          	mv	s1,a3
     f18:	00068313          	mv	t1,a3
     f1c:	fddff06f          	j	ef8 <core_bench_list+0x298>
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f20:	0044a783          	lw	a5,4(s1)
     f24:	01412683          	lw	a3,20(sp)
     f28:	0007c783          	lbu	a5,0(a5)
     f2c:	ecd78ce3          	beq	a5,a3,e04 <core_bench_list+0x1a4>
            list = list->next;
     f30:	0004a483          	lw	s1,0(s1)
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f34:	fe0496e3          	bnez	s1,f20 <core_bench_list+0x2c0>
        finder = list->next;
     f38:	00042483          	lw	s1,0(s0)
    while (finder)
     f3c:	ec0494e3          	bnez	s1,e04 <core_bench_list+0x1a4>
     f40:	eedff06f          	j	e2c <core_bench_list+0x1cc>
                    psize--;
     f44:	00070693          	mv	a3,a4
     f48:	fff78793          	addi	a5,a5,-1
                    p = p->next;
     f4c:	00072703          	lw	a4,0(a4)
     f50:	f9dff06f          	j	eec <core_bench_list+0x28c>
        while (p)
     f54:	f00412e3          	bnez	s0,e58 <core_bench_list+0x1f8>
        tail->next = NULL;
     f58:	00032023          	sw	zero,0(t1)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     f5c:	07fe8e63          	beq	t4,t6,fd8 <core_bench_list+0x378>
            return list;

        /* Otherwise repeat, merging lists twice the size */
        insize *= 2;
     f60:	001e1e13          	slli	t3,t3,0x1
        while (p)
     f64:	28048663          	beqz	s1,11f0 <__stack_size+0x1f0>
     f68:	00048413          	mv	s0,s1
        nmerges = 0; /* count number of merges we do in this pass */
     f6c:	00000e93          	li	t4,0
        tail = NULL;
     f70:	00000313          	li	t1,0
        list = NULL;
     f74:	00000493          	li	s1,0
     f78:	ee1ff06f          	j	e58 <core_bench_list+0x1f8>
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f7c:	36040663          	beqz	s0,12e8 <__stack_size+0x2e8>
     f80:	00442703          	lw	a4,4(s0)
     f84:	00040793          	mv	a5,s0
     f88:	00074703          	lbu	a4,0(a4)
     f8c:	00e69c63          	bne	a3,a4,fa4 <core_bench_list+0x344>
     f90:	d75ff06f          	j	d04 <core_bench_list+0xa4>
     f94:	0047a703          	lw	a4,4(a5)
     f98:	01412683          	lw	a3,20(sp)
     f9c:	00074703          	lbu	a4,0(a4)
     fa0:	d6d702e3          	beq	a4,a3,d04 <core_bench_list+0xa4>
            list = list->next;
     fa4:	0007a783          	lw	a5,0(a5)
        while (list && ((list->info->data16 & 0xff) != info->data16))
     fa8:	fe0796e3          	bnez	a5,f94 <core_bench_list+0x334>
     fac:	d59ff06f          	j	d04 <core_bench_list+0xa4>
            retval += (list->next->info->data16 >> 8) & 1;
     fb0:	0046a703          	lw	a4,4(a3)
            missed++;
     fb4:	001e0793          	addi	a5,t3,1
     fb8:	01079e13          	slli	t3,a5,0x10
            retval += (list->next->info->data16 >> 8) & 1;
     fbc:	00170703          	lb	a4,1(a4)
            missed++;
     fc0:	010e5e13          	srli	t3,t3,0x10
            retval += (list->next->info->data16 >> 8) & 1;
     fc4:	00177713          	andi	a4,a4,1
     fc8:	00e80733          	add	a4,a6,a4
     fcc:	01071813          	slli	a6,a4,0x10
     fd0:	01085813          	srli	a6,a6,0x10
     fd4:	d9dff06f          	j	d70 <core_bench_list+0x110>
    finder = list->next;
     fd8:	0004a403          	lw	s0,0(s1)
    while (finder)
     fdc:	30040263          	beqz	s0,12e0 <__stack_size+0x2e0>
        retval = crc16(list->info->data16, retval);
     fe0:	0044a783          	lw	a5,4(s1)
     fe4:	01c12583          	lw	a1,28(sp)
     fe8:	00079503          	lh	a0,0(a5)
     fec:	00002097          	auipc	ra,0x2
     ff0:	cb4080e7          	jalr	-844(ra) # 2ca0 <crc16>
        finder = finder->next;
     ff4:	00042403          	lw	s0,0(s0)
        retval = crc16(list->info->data16, retval);
     ff8:	00a12e23          	sw	a0,28(sp)
    while (finder)
     ffc:	fe0412e3          	bnez	s0,fe0 <core_bench_list+0x380>
}
    1000:	05c12083          	lw	ra,92(sp)
    1004:	05812403          	lw	s0,88(sp)
    1008:	05412483          	lw	s1,84(sp)
    100c:	05012903          	lw	s2,80(sp)
    1010:	04c12983          	lw	s3,76(sp)
    1014:	04812a03          	lw	s4,72(sp)
    1018:	04412a83          	lw	s5,68(sp)
    101c:	04012b03          	lw	s6,64(sp)
    1020:	03c12b83          	lw	s7,60(sp)
    1024:	03812c03          	lw	s8,56(sp)
    1028:	03412c83          	lw	s9,52(sp)
    102c:	03012d03          	lw	s10,48(sp)
    1030:	02c12d83          	lw	s11,44(sp)
    1034:	06010113          	addi	sp,sp,96
    1038:	00008067          	ret
    info.idx = finder_idx;
    103c:	00b12623          	sw	a1,12(sp)
    1040:	00012e23          	sw	zero,28(sp)
    if (finder_idx > 0)
    1044:	d6b058e3          	blez	a1,db4 <core_bench_list+0x154>
        while (p)
    1048:	1a040463          	beqz	s0,11f0 <__stack_size+0x1f0>
    104c:	00100793          	li	a5,1
    1050:	00f12423          	sw	a5,8(sp)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1054:	028c0793          	addi	a5,s8,40
    1058:	00f12c23          	sw	a5,24(sp)
        while (p)
    105c:	00040d13          	mv	s10,s0
        tail = NULL;
    1060:	00000913          	li	s2,0
        list = NULL;
    1064:	00000413          	li	s0,0
        nmerges = 0; /* count number of merges we do in this pass */
    1068:	00012823          	sw	zero,16(sp)
        switch (flag)
    106c:	00100a13          	li	s4,1
            nmerges++; /* there exists a merge to be done */
    1070:	01012783          	lw	a5,16(sp)
    1074:	000d0d93          	mv	s11,s10
            psize = 0;
    1078:	00000b93          	li	s7,0
            nmerges++; /* there exists a merge to be done */
    107c:	00178793          	addi	a5,a5,1
    1080:	00f12823          	sw	a5,16(sp)
                q = q->next;
    1084:	000dad83          	lw	s11,0(s11)
                psize++;
    1088:	001b8b93          	addi	s7,s7,1
                if (!q)
    108c:	000d8663          	beqz	s11,1098 <__stack_size+0x98>
            for (i = 0; i < insize; i++)
    1090:	00812783          	lw	a5,8(sp)
    1094:	fefb98e3          	bne	s7,a5,1084 <__stack_size+0x84>
                    list = e;
    1098:	00812c83          	lw	s9,8(sp)
            while (psize > 0 || (qsize > 0 && q))
    109c:	0e0b8c63          	beqz	s7,1194 <__stack_size+0x194>
                else if (qsize == 0 || !q)
    10a0:	100c8c63          	beqz	s9,11b8 <__stack_size+0x1b8>
    10a4:	100d8a63          	beqz	s11,11b8 <__stack_size+0x1b8>
                else if (cmp(p->info, q->info, res) <= 0)
    10a8:	004d2a83          	lw	s5,4(s10)
    10ac:	004da983          	lw	s3,4(s11)
    ee_s16 data = *pdata;
    10b0:	000a9483          	lh	s1,0(s5)
    if (optype) /* if cached, use cache */
    10b4:	0804f793          	andi	a5,s1,128
        return (data & 0x007f);
    10b8:	07f4fb13          	andi	s6,s1,127
    if (optype) /* if cached, use cache */
    10bc:	04079a63          	bnez	a5,1110 <__stack_size+0x110>
               & 0xf);       /* bits 3-6 is specific data for the operation */
    10c0:	4034d593          	srai	a1,s1,0x3
        ee_s16 dtype
    10c4:	00f5f593          	andi	a1,a1,15
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    10c8:	00459793          	slli	a5,a1,0x4
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    10cc:	0074f713          	andi	a4,s1,7
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    10d0:	00f5e5b3          	or	a1,a1,a5
        switch (flag)
    10d4:	038c5783          	lhu	a5,56(s8)
    10d8:	1c070063          	beqz	a4,1298 <__stack_size+0x298>
    10dc:	19470863          	beq	a4,s4,126c <__stack_size+0x26c>
    10e0:	01049513          	slli	a0,s1,0x10
    10e4:	01055513          	srli	a0,a0,0x10
    10e8:	00048b13          	mv	s6,s1
        res->crc = crcu16(retval, res->crc);
    10ec:	00078593          	mv	a1,a5
    10f0:	00001097          	auipc	ra,0x1
    10f4:	420080e7          	jalr	1056(ra) # 2510 <crcu16>
        retval &= 0x007f;
    10f8:	07fb7b13          	andi	s6,s6,127
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    10fc:	f004f893          	andi	a7,s1,-256
    1100:	011b68b3          	or	a7,s6,a7
        res->crc = crcu16(retval, res->crc);
    1104:	02ac1c23          	sh	a0,56(s8)
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1108:	0808e893          	ori	a7,a7,128
    110c:	011a9023          	sh	a7,0(s5)
    ee_s16 data = *pdata;
    1110:	00099a83          	lh	s5,0(s3)
    if (optype) /* if cached, use cache */
    1114:	080af793          	andi	a5,s5,128
        return (data & 0x007f);
    1118:	07faf493          	andi	s1,s5,127
    if (optype) /* if cached, use cache */
    111c:	04079a63          	bnez	a5,1170 <__stack_size+0x170>
               & 0xf);       /* bits 3-6 is specific data for the operation */
    1120:	403ad593          	srai	a1,s5,0x3
        ee_s16 dtype
    1124:	00f5f593          	andi	a1,a1,15
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1128:	00459793          	slli	a5,a1,0x4
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    112c:	007af713          	andi	a4,s5,7
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1130:	00f5e5b3          	or	a1,a1,a5
        switch (flag)
    1134:	038c5783          	lhu	a5,56(s8)
    1138:	0e070663          	beqz	a4,1224 <__stack_size+0x224>
    113c:	0b470e63          	beq	a4,s4,11f8 <__stack_size+0x1f8>
    1140:	010a9513          	slli	a0,s5,0x10
    1144:	01055513          	srli	a0,a0,0x10
    1148:	000a8493          	mv	s1,s5
        res->crc = crcu16(retval, res->crc);
    114c:	00078593          	mv	a1,a5
    1150:	00001097          	auipc	ra,0x1
    1154:	3c0080e7          	jalr	960(ra) # 2510 <crcu16>
        retval &= 0x007f;
    1158:	07f4f493          	andi	s1,s1,127
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    115c:	f00af893          	andi	a7,s5,-256
    1160:	0114e8b3          	or	a7,s1,a7
        res->crc = crcu16(retval, res->crc);
    1164:	02ac1c23          	sh	a0,56(s8)
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1168:	0808e893          	ori	a7,a7,128
    116c:	01199023          	sh	a7,0(s3)
    return val1 - val2;
    1170:	409b04b3          	sub	s1,s6,s1
                else if (cmp(p->info, q->info, res) <= 0)
    1174:	04905263          	blez	s1,11b8 <__stack_size+0x1b8>
                    qsize--;
    1178:	000d8793          	mv	a5,s11
                    q = q->next;
    117c:	000dad83          	lw	s11,0(s11)
                    qsize--;
    1180:	fffc8c93          	addi	s9,s9,-1
                if (tail)
    1184:	02090463          	beqz	s2,11ac <__stack_size+0x1ac>
                    tail->next = e;
    1188:	00f92023          	sw	a5,0(s2)
                    list = e;
    118c:	00078913          	mv	s2,a5
            while (psize > 0 || (qsize > 0 && q))
    1190:	f00b98e3          	bnez	s7,10a0 <__stack_size+0xa0>
    1194:	020c8a63          	beqz	s9,11c8 <__stack_size+0x1c8>
    1198:	020d8c63          	beqz	s11,11d0 <__stack_size+0x1d0>
                    qsize--;
    119c:	000d8793          	mv	a5,s11
    11a0:	fffc8c93          	addi	s9,s9,-1
                    q = q->next;
    11a4:	000dad83          	lw	s11,0(s11)
                if (tail)
    11a8:	fe0910e3          	bnez	s2,1188 <__stack_size+0x188>
                    list = e;
    11ac:	00078413          	mv	s0,a5
    11b0:	00078913          	mv	s2,a5
    11b4:	fddff06f          	j	1190 <__stack_size+0x190>
                    psize--;
    11b8:	000d0793          	mv	a5,s10
    11bc:	fffb8b93          	addi	s7,s7,-1
                    p = p->next;
    11c0:	000d2d03          	lw	s10,0(s10)
    11c4:	fc1ff06f          	j	1184 <__stack_size+0x184>
    11c8:	000d8d13          	mv	s10,s11
        while (p)
    11cc:	ea0d92e3          	bnez	s11,1070 <__stack_size+0x70>
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    11d0:	01012703          	lw	a4,16(sp)
        tail->next = NULL;
    11d4:	00092023          	sw	zero,0(s2)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    11d8:	00100793          	li	a5,1
    11dc:	bcf70ce3          	beq	a4,a5,db4 <core_bench_list+0x154>
        insize *= 2;
    11e0:	00812783          	lw	a5,8(sp)
    11e4:	00179793          	slli	a5,a5,0x1
    11e8:	00f12423          	sw	a5,8(sp)
        while (p)
    11ec:	e60418e3          	bnez	s0,105c <__stack_size+0x5c>
        tail->next = NULL;
    11f0:	00002023          	sw	zero,0(zero) # 0 <_start>
    11f4:	00100073          	ebreak
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    11f8:	01812503          	lw	a0,24(sp)
    11fc:	00078613          	mv	a2,a5
    1200:	00001097          	auipc	ra,0x1
    1204:	974080e7          	jalr	-1676(ra) # 1b74 <core_bench_matrix>
                if (res->crcmatrix == 0)
    1208:	03cc5783          	lhu	a5,60(s8)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    120c:	01051493          	slli	s1,a0,0x10
    1210:	4104d493          	srai	s1,s1,0x10
                if (res->crcmatrix == 0)
    1214:	04079863          	bnez	a5,1264 <__stack_size+0x264>
                    res->crcmatrix = retval;
    1218:	038c5783          	lhu	a5,56(s8)
    121c:	02ac1e23          	sh	a0,60(s8)
    1220:	f2dff06f          	j	114c <__stack_size+0x14c>
                retval = core_bench_state(res->size,
    1224:	02200693          	li	a3,34
    1228:	00058713          	mv	a4,a1
    122c:	00d5d463          	bge	a1,a3,1234 <__stack_size+0x234>
    1230:	02200713          	li	a4,34
    1234:	002c1683          	lh	a3,2(s8)
    1238:	000c1603          	lh	a2,0(s8)
    123c:	014c2583          	lw	a1,20(s8)
    1240:	018c2503          	lw	a0,24(s8)
    1244:	0ff77713          	andi	a4,a4,255
    1248:	00001097          	auipc	ra,0x1
    124c:	058080e7          	jalr	88(ra) # 22a0 <core_bench_state>
                if (res->crcstate == 0)
    1250:	03ec5783          	lhu	a5,62(s8)
                retval = core_bench_state(res->size,
    1254:	01051493          	slli	s1,a0,0x10
    1258:	4104d493          	srai	s1,s1,0x10
                if (res->crcstate == 0)
    125c:	00079463          	bnez	a5,1264 <__stack_size+0x264>
                    res->crcstate = retval;
    1260:	02ac1f23          	sh	a0,62(s8)
    1264:	038c5783          	lhu	a5,56(s8)
    1268:	ee5ff06f          	j	114c <__stack_size+0x14c>
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    126c:	01812503          	lw	a0,24(sp)
    1270:	00078613          	mv	a2,a5
    1274:	00001097          	auipc	ra,0x1
    1278:	900080e7          	jalr	-1792(ra) # 1b74 <core_bench_matrix>
                if (res->crcmatrix == 0)
    127c:	03cc5783          	lhu	a5,60(s8)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1280:	01051b13          	slli	s6,a0,0x10
    1284:	410b5b13          	srai	s6,s6,0x10
                if (res->crcmatrix == 0)
    1288:	04079863          	bnez	a5,12d8 <__stack_size+0x2d8>
                    res->crcmatrix = retval;
    128c:	038c5783          	lhu	a5,56(s8)
    1290:	02ac1e23          	sh	a0,60(s8)
    1294:	e59ff06f          	j	10ec <__stack_size+0xec>
                retval = core_bench_state(res->size,
    1298:	02200693          	li	a3,34
    129c:	00058713          	mv	a4,a1
    12a0:	00d5d463          	bge	a1,a3,12a8 <__stack_size+0x2a8>
    12a4:	02200713          	li	a4,34
    12a8:	002c1683          	lh	a3,2(s8)
    12ac:	000c1603          	lh	a2,0(s8)
    12b0:	014c2583          	lw	a1,20(s8)
    12b4:	018c2503          	lw	a0,24(s8)
    12b8:	0ff77713          	andi	a4,a4,255
    12bc:	00001097          	auipc	ra,0x1
    12c0:	fe4080e7          	jalr	-28(ra) # 22a0 <core_bench_state>
                if (res->crcstate == 0)
    12c4:	03ec5783          	lhu	a5,62(s8)
                retval = core_bench_state(res->size,
    12c8:	01051b13          	slli	s6,a0,0x10
    12cc:	410b5b13          	srai	s6,s6,0x10
                if (res->crcstate == 0)
    12d0:	00079463          	bnez	a5,12d8 <__stack_size+0x2d8>
                    res->crcstate = retval;
    12d4:	02ac1f23          	sh	a0,62(s8)
    12d8:	038c5783          	lhu	a5,56(s8)
    12dc:	e11ff06f          	j	10ec <__stack_size+0xec>
    12e0:	01c12503          	lw	a0,28(sp)
    12e4:	d1dff06f          	j	1000 <__stack_size>
            retval += (list->next->info->data16 >> 8) & 1;
    12e8:	00002783          	lw	a5,0(zero) # 0 <_start>
    12ec:	00100073          	ebreak

000012f0 <core_list_init>:
    ee_u32 size     = (blksize / per_item)
    12f0:	01400793          	li	a5,20
    12f4:	02f55533          	divu	a0,a0,a5
    list->info->data16 = (ee_s16)0x8080;
    12f8:	ffff87b7          	lui	a5,0xffff8
    list->next         = NULL;
    12fc:	0005a023          	sw	zero,0(a1)
    list->info->data16 = (ee_s16)0x8080;
    1300:	08078813          	addi	a6,a5,128 # ffff8080 <__freertos_irq_stack_top+0xfefe8080>
    if ((*memblock + 1) >= memblock_end)
    1304:	01058693          	addi	a3,a1,16
    memblock++;
    1308:	00858713          	addi	a4,a1,8
    ee_u32 size     = (blksize / per_item)
    130c:	ffe50513          	addi	a0,a0,-2
    list_head *memblock_end  = memblock + size;
    1310:	00351e93          	slli	t4,a0,0x3
    1314:	01d58eb3          	add	t4,a1,t4
    list->info         = datablock;
    1318:	01d5a223          	sw	t4,4(a1)
    list_data *datablock_end = datablock + size;
    131c:	00251f93          	slli	t6,a0,0x2
    list->info->idx    = 0x0000;
    1320:	000e9123          	sh	zero,2(t4)
    list->info->data16 = (ee_s16)0x8080;
    1324:	010e9023          	sh	a6,0(t4)
    list_data *datablock_end = datablock + size;
    1328:	01fe8fb3          	add	t6,t4,t6
    datablock++;
    132c:	004e8893          	addi	a7,t4,4
    if ((*memblock + 1) >= memblock_end)
    1330:	21d6fe63          	bgeu	a3,t4,154c <core_list_init+0x25c>
    if ((*datablock + 1) >= datablock_end)
    1334:	008e8813          	addi	a6,t4,8
    1338:	21f87a63          	bgeu	a6,t6,154c <core_list_init+0x25c>
    newitem->info = *datablock;
    133c:	0115a623          	sw	a7,12(a1)
    newitem->next      = insert_point->next;
    1340:	0005a423          	sw	zero,8(a1)
    insert_point->next = newitem;
    1344:	00e5a023          	sw	a4,0(a1)
    to->idx    = from->idx;
    1348:	fff7c793          	not	a5,a5
    to->data16 = from->data16;
    134c:	fff00893          	li	a7,-1
    1350:	011e9223          	sh	a7,4(t4)
    to->idx    = from->idx;
    1354:	00fe9323          	sh	a5,6(t4)
    for (i = 0; i < size; i++)
    1358:	06050a63          	beqz	a0,13cc <core_list_init+0xdc>
    135c:	01061393          	slli	t2,a2,0x10
    to->idx    = from->idx;
    1360:	ffff82b7          	lui	t0,0xffff8
    1364:	0103d393          	srli	t2,t2,0x10
    for (i = 0; i < size; i++)
    1368:	00000893          	li	a7,0
    to->idx    = from->idx;
    136c:	fff2c293          	not	t0,t0
    if ((*memblock + 1) >= memblock_end)
    1370:	00868e13          	addi	t3,a3,8
    1374:	05de7863          	bgeu	t3,t4,13c4 <core_list_init+0xd4>
    if ((*datablock + 1) >= datablock_end)
    1378:	00480f13          	addi	t5,a6,4
    137c:	05ff7463          	bgeu	t5,t6,13c4 <core_list_init+0xd4>
    1380:	01089313          	slli	t1,a7,0x10
    1384:	01035313          	srli	t1,t1,0x10
        ee_u16 datpat = ((ee_u16)(seed ^ i) & 0xf);
    1388:	007347b3          	xor	a5,t1,t2
            = (datpat << 3) | (i & 0x7); /* alternate between algorithms */
    138c:	00379793          	slli	a5,a5,0x3
    1390:	0787f793          	andi	a5,a5,120
    1394:	00737313          	andi	t1,t1,7
    newitem->next      = insert_point->next;
    1398:	00e6a023          	sw	a4,0(a3)
        ee_u16 dat
    139c:	0067e7b3          	or	a5,a5,t1
    insert_point->next = newitem;
    13a0:	00d5a023          	sw	a3,0(a1)
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    13a4:	00879713          	slli	a4,a5,0x8
    newitem->info = *datablock;
    13a8:	0106a223          	sw	a6,4(a3)
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    13ac:	00f767b3          	or	a5,a4,a5
    to->data16 = from->data16;
    13b0:	00f81023          	sh	a5,0(a6)
    to->idx    = from->idx;
    13b4:	00581123          	sh	t0,2(a6)
    13b8:	00068713          	mv	a4,a3
    13bc:	000f0813          	mv	a6,t5
    13c0:	000e0693          	mv	a3,t3
    for (i = 0; i < size; i++)
    13c4:	00188893          	addi	a7,a7,1
    13c8:	fb1514e3          	bne	a0,a7,1370 <core_list_init+0x80>
    while (finder->next != NULL)
    13cc:	00072783          	lw	a5,0(a4)
    13d0:	02078a63          	beqz	a5,1404 <core_list_init+0x114>
        if (i < size / 5) /* first 20% of the list in order */
    13d4:	00500793          	li	a5,5
    13d8:	02f55533          	divu	a0,a0,a5
                                & (((i & 0x07) << 8)
    13dc:	00004337          	lui	t1,0x4
        if (i < size / 5) /* first 20% of the list in order */
    13e0:	00100693          	li	a3,1
                                & (((i & 0x07) << 8)
    13e4:	fff30313          	addi	t1,t1,-1 # 3fff <__cvt+0x7b>
        if (i < size / 5) /* first 20% of the list in order */
    13e8:	00472883          	lw	a7,4(a4)
    13ec:	12a6f063          	bgeu	a3,a0,150c <core_list_init+0x21c>
        finder = finder->next;
    13f0:	00072703          	lw	a4,0(a4)
            finder->info->idx = i++;
    13f4:	00d89123          	sh	a3,2(a7)
        finder = finder->next;
    13f8:	00168693          	addi	a3,a3,1
    while (finder->next != NULL)
    13fc:	00072783          	lw	a5,0(a4)
    1400:	fe0794e3          	bnez	a5,13e8 <core_list_init+0xf8>
    insize = 1;
    1404:	00100f93          	li	t6,1
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1408:	00100393          	li	t2,1
    insize = 1;
    140c:	00058793          	mv	a5,a1
        tail = NULL;
    1410:	00000893          	li	a7,0
        list = NULL;
    1414:	00000593          	li	a1,0
        nmerges = 0; /* count number of merges we do in this pass */
    1418:	00000f13          	li	t5,0
            nmerges++; /* there exists a merge to be done */
    141c:	001f0f13          	addi	t5,t5,1
    1420:	00078513          	mv	a0,a5
            psize = 0;
    1424:	00000713          	li	a4,0
                q = q->next;
    1428:	00052503          	lw	a0,0(a0)
                psize++;
    142c:	00170713          	addi	a4,a4,1
                if (!q)
    1430:	00050463          	beqz	a0,1438 <core_list_init+0x148>
            for (i = 0; i < insize; i++)
    1434:	fff71ae3          	bne	a4,t6,1428 <core_list_init+0x138>
                    list = e;
    1438:	00078693          	mv	a3,a5
    143c:	000f8613          	mv	a2,t6
    1440:	00050793          	mv	a5,a0
            while (psize > 0 || (qsize > 0 && q))
    1444:	06070c63          	beqz	a4,14bc <core_list_init+0x1cc>
                else if (qsize == 0 || !q)
    1448:	08060c63          	beqz	a2,14e0 <core_list_init+0x1f0>
    144c:	08078a63          	beqz	a5,14e0 <core_list_init+0x1f0>
                else if (cmp(p->info, q->info, res) <= 0)
    1450:	0046ae03          	lw	t3,4(a3)
    1454:	0047a303          	lw	t1,4(a5)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1458:	000e1803          	lh	a6,0(t3)
    return a->idx - b->idx;
    145c:	00231283          	lh	t0,2(t1)
    1460:	002e1503          	lh	a0,2(t3)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1464:	01081e93          	slli	t4,a6,0x10
    1468:	010ede93          	srli	t4,t4,0x10
    146c:	f0087813          	andi	a6,a6,-256
    1470:	008ede93          	srli	t4,t4,0x8
    1474:	01d86833          	or	a6,a6,t4
    1478:	010e1023          	sh	a6,0(t3)
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    147c:	00031803          	lh	a6,0(t1)
    return a->idx - b->idx;
    1480:	40550533          	sub	a0,a0,t0
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    1484:	01081e13          	slli	t3,a6,0x10
    1488:	010e5e13          	srli	t3,t3,0x10
    148c:	f0087813          	andi	a6,a6,-256
    1490:	008e5e13          	srli	t3,t3,0x8
    1494:	01c86833          	or	a6,a6,t3
    1498:	01031023          	sh	a6,0(t1)
                else if (cmp(p->info, q->info, res) <= 0)
    149c:	04a05263          	blez	a0,14e0 <core_list_init+0x1f0>
                    qsize--;
    14a0:	00078813          	mv	a6,a5
                    q = q->next;
    14a4:	0007a783          	lw	a5,0(a5)
                    qsize--;
    14a8:	fff60613          	addi	a2,a2,-1
                if (tail)
    14ac:	02088463          	beqz	a7,14d4 <core_list_init+0x1e4>
                    tail->next = e;
    14b0:	0108a023          	sw	a6,0(a7)
                    list = e;
    14b4:	00080893          	mv	a7,a6
            while (psize > 0 || (qsize > 0 && q))
    14b8:	f80718e3          	bnez	a4,1448 <core_list_init+0x158>
    14bc:	02060a63          	beqz	a2,14f0 <core_list_init+0x200>
    14c0:	02078a63          	beqz	a5,14f4 <core_list_init+0x204>
                    qsize--;
    14c4:	00078813          	mv	a6,a5
    14c8:	fff60613          	addi	a2,a2,-1
                    q = q->next;
    14cc:	0007a783          	lw	a5,0(a5)
                if (tail)
    14d0:	fe0890e3          	bnez	a7,14b0 <core_list_init+0x1c0>
                    list = e;
    14d4:	00080593          	mv	a1,a6
    14d8:	00080893          	mv	a7,a6
    14dc:	fddff06f          	j	14b8 <core_list_init+0x1c8>
                    psize--;
    14e0:	00068813          	mv	a6,a3
    14e4:	fff70713          	addi	a4,a4,-1
                    p = p->next;
    14e8:	0006a683          	lw	a3,0(a3)
    14ec:	fc1ff06f          	j	14ac <core_list_init+0x1bc>
        while (p)
    14f0:	f20796e3          	bnez	a5,141c <core_list_init+0x12c>
        tail->next = NULL;
    14f4:	0008a023          	sw	zero,0(a7)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    14f8:	047f0663          	beq	t5,t2,1544 <core_list_init+0x254>
        insize *= 2;
    14fc:	001f9f93          	slli	t6,t6,0x1
        while (p)
    1500:	f00596e3          	bnez	a1,140c <core_list_init+0x11c>
        tail->next = NULL;
    1504:	00002023          	sw	zero,0(zero) # 0 <_start>
    1508:	00100073          	ebreak
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    150c:	01069813          	slli	a6,a3,0x10
    1510:	01085813          	srli	a6,a6,0x10
                                & (((i & 0x07) << 8)
    1514:	00180793          	addi	a5,a6,1
        finder = finder->next;
    1518:	00072703          	lw	a4,0(a4)
                                & (((i & 0x07) << 8)
    151c:	00879793          	slli	a5,a5,0x8
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    1520:	00c84833          	xor	a6,a6,a2
                                & (((i & 0x07) << 8)
    1524:	7007f793          	andi	a5,a5,1792
                                   | pat); /* make sure the mixed items end up
    1528:	0107e7b3          	or	a5,a5,a6
    while (finder->next != NULL)
    152c:	00072803          	lw	a6,0(a4)
                                & (((i & 0x07) << 8)
    1530:	0067f7b3          	and	a5,a5,t1
            finder->info->idx = 0x3fff
    1534:	00f89123          	sh	a5,2(a7)
        finder = finder->next;
    1538:	00168693          	addi	a3,a3,1
    while (finder->next != NULL)
    153c:	ea0816e3          	bnez	a6,13e8 <core_list_init+0xf8>
    1540:	ec5ff06f          	j	1404 <core_list_init+0x114>
}
    1544:	00058513          	mv	a0,a1
    1548:	00008067          	ret
    memblock++;
    154c:	00070693          	mv	a3,a4
    datablock++;
    1550:	00088813          	mv	a6,a7
    if ((*datablock + 1) >= datablock_end)
    1554:	00000713          	li	a4,0
    1558:	e01ff06f          	j	1358 <core_list_init+0x68>

0000155c <iterate>:
{
    155c:	ff010113          	addi	sp,sp,-16
    1560:	01212023          	sw	s2,0(sp)
    ee_u32        iterations = res->iterations;
    1564:	01c52903          	lw	s2,28(a0)
{
    1568:	00812423          	sw	s0,8(sp)
    156c:	00912223          	sw	s1,4(sp)
    1570:	00112623          	sw	ra,12(sp)
    res->crc                 = 0;
    1574:	02052c23          	sw	zero,56(a0)
    1578:	02052e23          	sw	zero,60(a0)
{
    157c:	00050413          	mv	s0,a0
    for (i = 0; i < iterations; i++)
    1580:	00000493          	li	s1,0
    1584:	04090863          	beqz	s2,15d4 <iterate+0x78>
        crc      = core_bench_list(res, 1);
    1588:	00100593          	li	a1,1
    158c:	00040513          	mv	a0,s0
    1590:	fffff097          	auipc	ra,0xfffff
    1594:	6d0080e7          	jalr	1744(ra) # c60 <core_bench_list>
        res->crc = crcu16(crc, res->crc);
    1598:	03845583          	lhu	a1,56(s0)
    159c:	00001097          	auipc	ra,0x1
    15a0:	f74080e7          	jalr	-140(ra) # 2510 <crcu16>
    15a4:	02a41c23          	sh	a0,56(s0)
        crc      = core_bench_list(res, -1);
    15a8:	fff00593          	li	a1,-1
    15ac:	00040513          	mv	a0,s0
    15b0:	fffff097          	auipc	ra,0xfffff
    15b4:	6b0080e7          	jalr	1712(ra) # c60 <core_bench_list>
        res->crc = crcu16(crc, res->crc);
    15b8:	03845583          	lhu	a1,56(s0)
    15bc:	00001097          	auipc	ra,0x1
    15c0:	f54080e7          	jalr	-172(ra) # 2510 <crcu16>
    15c4:	02a41c23          	sh	a0,56(s0)
        if (i == 0)
    15c8:	02048463          	beqz	s1,15f0 <iterate+0x94>
    for (i = 0; i < iterations; i++)
    15cc:	00148493          	addi	s1,s1,1
    15d0:	fa991ce3          	bne	s2,s1,1588 <iterate+0x2c>
}
    15d4:	00c12083          	lw	ra,12(sp)
    15d8:	00812403          	lw	s0,8(sp)
    15dc:	00412483          	lw	s1,4(sp)
    15e0:	00012903          	lw	s2,0(sp)
    15e4:	00000513          	li	a0,0
    15e8:	01010113          	addi	sp,sp,16
    15ec:	00008067          	ret
            res->crclist = res->crc;
    15f0:	02a41d23          	sh	a0,58(s0)
    for (i = 0; i < iterations; i++)
    15f4:	00100793          	li	a5,1
    15f8:	fcf90ee3          	beq	s2,a5,15d4 <iterate+0x78>
    15fc:	00100493          	li	s1,1
    1600:	f89ff06f          	j	1588 <iterate+0x2c>

00001604 <matrix_test>:

        After the last step, matrix A is back to original contents.
*/
ee_s16
matrix_test(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B, MATDAT val)
{
    1604:	fb010113          	addi	sp,sp,-80
    1608:	03612823          	sw	s6,48(sp)
    160c:	04112623          	sw	ra,76(sp)
    ee_u16 crc     = 0;
    MATDAT clipval = matrix_big(val);
    1610:	fffffb37          	lui	s6,0xfffff
{
    1614:	04812423          	sw	s0,72(sp)
    1618:	04912223          	sw	s1,68(sp)
    161c:	05212023          	sw	s2,64(sp)
    1620:	03312e23          	sw	s3,60(sp)
    1624:	03412c23          	sw	s4,56(sp)
    1628:	03512a23          	sw	s5,52(sp)
    162c:	03712623          	sw	s7,44(sp)
    1630:	03812423          	sw	s8,40(sp)
    1634:	03912223          	sw	s9,36(sp)
    1638:	03a12023          	sw	s10,32(sp)
    163c:	01b12e23          	sw	s11,28(sp)
    1640:	00c12423          	sw	a2,8(sp)
    MATDAT clipval = matrix_big(val);
    1644:	01676b33          	or	s6,a4,s6
*/
void
matrix_add_const(ee_u32 N, MATDAT *A, MATDAT val)
{
    ee_u32 i, j;
    for (i = 0; i < N; i++)
    1648:	4e050663          	beqz	a0,1b34 <matrix_test+0x530>
    164c:	00151b93          	slli	s7,a0,0x1
    1650:	40a008b3          	neg	a7,a0
    1654:	00058d13          	mv	s10,a1
    1658:	01071c13          	slli	s8,a4,0x10
    165c:	017605b3          	add	a1,a2,s7
    1660:	00060913          	mv	s2,a2
    1664:	00189e93          	slli	t4,a7,0x1
    1668:	00050313          	mv	t1,a0
    166c:	00068493          	mv	s1,a3
    1670:	010c5c13          	srli	s8,s8,0x10
    1674:	00058613          	mv	a2,a1
    1678:	00000813          	li	a6,0
    167c:	00289893          	slli	a7,a7,0x2
    1680:	00ce8533          	add	a0,t4,a2
{
    1684:	00050793          	mv	a5,a0
    {
        for (j = 0; j < N; j++)
        {
            A[i * N + j] += val;
    1688:	0007d683          	lhu	a3,0(a5)
    168c:	00278793          	addi	a5,a5,2
    1690:	00dc06b3          	add	a3,s8,a3
    1694:	fed79f23          	sh	a3,-2(a5)
        for (j = 0; j < N; j++)
    1698:	fec798e3          	bne	a5,a2,1688 <matrix_test+0x84>
    for (i = 0; i < N; i++)
    169c:	00180413          	addi	s0,a6,1
    16a0:	41150633          	sub	a2,a0,a7
    16a4:	00830663          	beq	t1,s0,16b0 <matrix_test+0xac>
    16a8:	00040813          	mv	a6,s0
    16ac:	fd5ff06f          	j	1680 <matrix_test+0x7c>
    16b0:	40800f33          	neg	t5,s0
    16b4:	00241d93          	slli	s11,s0,0x2
    16b8:	000d0993          	mv	s3,s10
    16bc:	000d0513          	mv	a0,s10
    for (i = 0; i < N; i++)
    16c0:	00000e13          	li	t3,0
    16c4:	002f1313          	slli	t1,t5,0x2
    16c8:	00be88b3          	add	a7,t4,a1
    for (i = 0; i < N; i++)
    16cc:	00050613          	mv	a2,a0
    16d0:	00088793          	mv	a5,a7
            C[i * N + j] = (MATRES)A[i * N + j] * (MATRES)val;
    16d4:	00079683          	lh	a3,0(a5)
    16d8:	00460613          	addi	a2,a2,4
    16dc:	00278793          	addi	a5,a5,2
    16e0:	02e686b3          	mul	a3,a3,a4
    16e4:	fed62e23          	sw	a3,-4(a2)
        for (j = 0; j < N; j++)
    16e8:	feb796e3          	bne	a5,a1,16d4 <matrix_test+0xd0>
    for (i = 0; i < N; i++)
    16ec:	001e0793          	addi	a5,t3,1
    16f0:	01b50533          	add	a0,a0,s11
    16f4:	406885b3          	sub	a1,a7,t1
    16f8:	010e0663          	beq	t3,a6,1704 <matrix_test+0x100>
    16fc:	00078e13          	mv	t3,a5
    1700:	fc9ff06f          	j	16c8 <matrix_test+0xc4>
    1704:	01bd0ab3          	add	s5,s10,s11
    1708:	000a8893          	mv	a7,s5
    ee_s16 ret = 0;
    170c:	00000513          	li	a0,0
    MATRES tmp = 0, prev = 0, cur = 0;
    1710:	00000793          	li	a5,0
    1714:	00000613          	li	a2,0
    for (i = 0; i < N; i++)
    1718:	00000e93          	li	t4,0
    171c:	003f1f13          	slli	t5,t5,0x3
    1720:	01130e33          	add	t3,t1,a7
    1724:	000e0693          	mv	a3,t3
    1728:	0180006f          	j	1740 <matrix_test+0x13c>
                ret += (cur > prev) ? 1 : 0;
    172c:	01051513          	slli	a0,a0,0x10
    1730:	00468693          	addi	a3,a3,4
    1734:	41055513          	srai	a0,a0,0x10
            cur = C[i * N + j];
    1738:	00070793          	mv	a5,a4
        for (j = 0; j < N; j++)
    173c:	03168e63          	beq	a3,a7,1778 <matrix_test+0x174>
            cur = C[i * N + j];
    1740:	0006a703          	lw	a4,0(a3)
            tmp += cur;
    1744:	01051513          	slli	a0,a0,0x10
    1748:	01055513          	srli	a0,a0,0x10
                ret += (cur > prev) ? 1 : 0;
    174c:	00e7a7b3          	slt	a5,a5,a4
            tmp += cur;
    1750:	00e60633          	add	a2,a2,a4
                ret += 10;
    1754:	00a50593          	addi	a1,a0,10
                ret += (cur > prev) ? 1 : 0;
    1758:	00f50533          	add	a0,a0,a5
            if (tmp > clipval)
    175c:	fccb58e3          	bge	s6,a2,172c <matrix_test+0x128>
                ret += 10;
    1760:	01059513          	slli	a0,a1,0x10
    1764:	00468693          	addi	a3,a3,4
    1768:	41055513          	srai	a0,a0,0x10
                tmp = 0;
    176c:	00000613          	li	a2,0
            cur = C[i * N + j];
    1770:	00070793          	mv	a5,a4
        for (j = 0; j < N; j++)
    1774:	fd1696e3          	bne	a3,a7,1740 <matrix_test+0x13c>
    for (i = 0; i < N; i++)
    1778:	001e8693          	addi	a3,t4,1
    177c:	41ee08b3          	sub	a7,t3,t5
    1780:	01d80663          	beq	a6,t4,178c <matrix_test+0x188>
    1784:	00068e93          	mv	t4,a3
    1788:	f99ff06f          	j	1720 <matrix_test+0x11c>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    178c:	00000593          	li	a1,0
    1790:	00001097          	auipc	ra,0x1
    1794:	510080e7          	jalr	1296(ra) # 2ca0 <crc16>
    1798:	00050a13          	mv	s4,a0
*/
void
matrix_mul_vect(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B)
{
    ee_u32 i, j;
    for (i = 0; i < N; i++)
    179c:	000d8613          	mv	a2,s11
    17a0:	00000593          	li	a1,0
    17a4:	000d0513          	mv	a0,s10
    17a8:	00002097          	auipc	ra,0x2
    17ac:	7c0080e7          	jalr	1984(ra) # 3f68 <memset>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    17b0:	00812883          	lw	a7,8(sp)
    17b4:	01748533          	add	a0,s1,s7
    17b8:	000d0813          	mv	a6,s10
    17bc:	00048793          	mv	a5,s1
    17c0:	00088693          	mv	a3,a7
    17c4:	00000613          	li	a2,0
    {
        C[i] = 0;
        for (j = 0; j < N; j++)
        {
            C[i] += (MATRES)A[i * N + j] * (MATRES)B[j];
    17c8:	00069703          	lh	a4,0(a3)
    17cc:	00079583          	lh	a1,0(a5)
    17d0:	00278793          	addi	a5,a5,2
    17d4:	00268693          	addi	a3,a3,2
    17d8:	02b70733          	mul	a4,a4,a1
    17dc:	00e60633          	add	a2,a2,a4
        for (j = 0; j < N; j++)
    17e0:	fef514e3          	bne	a0,a5,17c8 <matrix_test+0x1c4>
    17e4:	00c82023          	sw	a2,0(a6)
    17e8:	00480813          	addi	a6,a6,4
    17ec:	017888b3          	add	a7,a7,s7
    for (i = 0; i < N; i++)
    17f0:	fd0a96e3          	bne	s5,a6,17bc <matrix_test+0x1b8>
    17f4:	000d0313          	mv	t1,s10
    ee_s16 ret = 0;
    17f8:	00000513          	li	a0,0
    MATRES tmp = 0, prev = 0, cur = 0;
    17fc:	00000793          	li	a5,0
    1800:	00000693          	li	a3,0
    for (i = 0; i < N; i++)
    1804:	00000893          	li	a7,0
    1808:	00030593          	mv	a1,t1
        for (j = 0; j < N; j++)
    180c:	00000613          	li	a2,0
    1810:	01c0006f          	j	182c <matrix_test+0x228>
                ret += (cur > prev) ? 1 : 0;
    1814:	01051513          	slli	a0,a0,0x10
        for (j = 0; j < N; j++)
    1818:	00160613          	addi	a2,a2,1
                ret += (cur > prev) ? 1 : 0;
    181c:	41055513          	srai	a0,a0,0x10
            prev = cur;
    1820:	00458593          	addi	a1,a1,4
            cur = C[i * N + j];
    1824:	00070793          	mv	a5,a4
        for (j = 0; j < N; j++)
    1828:	04867063          	bgeu	a2,s0,1868 <matrix_test+0x264>
            cur = C[i * N + j];
    182c:	0005a703          	lw	a4,0(a1)
            tmp += cur;
    1830:	01051513          	slli	a0,a0,0x10
    1834:	01055513          	srli	a0,a0,0x10
                ret += (cur > prev) ? 1 : 0;
    1838:	00e7a7b3          	slt	a5,a5,a4
            tmp += cur;
    183c:	00e686b3          	add	a3,a3,a4
                ret += 10;
    1840:	00a50813          	addi	a6,a0,10
                ret += (cur > prev) ? 1 : 0;
    1844:	00f50533          	add	a0,a0,a5
            if (tmp > clipval)
    1848:	fcdb56e3          	bge	s6,a3,1814 <matrix_test+0x210>
                ret += 10;
    184c:	01081513          	slli	a0,a6,0x10
        for (j = 0; j < N; j++)
    1850:	00160613          	addi	a2,a2,1
                ret += 10;
    1854:	41055513          	srai	a0,a0,0x10
                tmp = 0;
    1858:	00000693          	li	a3,0
            prev = cur;
    185c:	00458593          	addi	a1,a1,4
            cur = C[i * N + j];
    1860:	00070793          	mv	a5,a4
        for (j = 0; j < N; j++)
    1864:	fc8664e3          	bltu	a2,s0,182c <matrix_test+0x228>
    for (i = 0; i < N; i++)
    1868:	00188893          	addi	a7,a7,1
    186c:	01b30333          	add	t1,t1,s11
    1870:	f888ece3          	bltu	a7,s0,1808 <matrix_test+0x204>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1874:	000a0593          	mv	a1,s4
    1878:	00001097          	auipc	ra,0x1
    187c:	428080e7          	jalr	1064(ra) # 2ca0 <crc16>
    1880:	00a12623          	sw	a0,12(sp)
    ee_u32 i, j, k;
    for (i = 0; i < N; i++)
    {
        for (j = 0; j < N; j++)
        {
            C[i * N + j] = 0;
    1884:	00400a13          	li	s4,4
    1888:	2a041263          	bnez	s0,1b2c <matrix_test+0x528>
    188c:	00812c83          	lw	s9,8(sp)
    1890:	000d0e13          	mv	t3,s10
    for (i = 0; i < N; i++)
    1894:	00000a93          	li	s5,0
    1898:	000e0513          	mv	a0,t3
    189c:	000a0613          	mv	a2,s4
    18a0:	00000593          	li	a1,0
    18a4:	00002097          	auipc	ra,0x2
    18a8:	6c4080e7          	jalr	1732(ra) # 3f68 <memset>
    18ac:	00050e13          	mv	t3,a0
                tmp = 0;
    18b0:	00050813          	mv	a6,a0
    18b4:	00048893          	mv	a7,s1
        for (j = 0; j < N; j++)
    18b8:	00000513          	li	a0,0
    18bc:	00088613          	mv	a2,a7
    18c0:	000c8693          	mv	a3,s9
    18c4:	00000593          	li	a1,0
            for (k = 0; k < N; k++)
    18c8:	00000713          	li	a4,0
            {
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    18cc:	00069783          	lh	a5,0(a3)
    18d0:	00061f03          	lh	t5,0(a2)
            for (k = 0; k < N; k++)
    18d4:	00170713          	addi	a4,a4,1
    18d8:	00268693          	addi	a3,a3,2
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    18dc:	03e787b3          	mul	a5,a5,t5
    18e0:	01760633          	add	a2,a2,s7
    18e4:	00f585b3          	add	a1,a1,a5
            for (k = 0; k < N; k++)
    18e8:	fe8762e3          	bltu	a4,s0,18cc <matrix_test+0x2c8>
    18ec:	00b82023          	sw	a1,0(a6)
        for (j = 0; j < N; j++)
    18f0:	00150513          	addi	a0,a0,1
    18f4:	00480813          	addi	a6,a6,4
    18f8:	00288893          	addi	a7,a7,2
    18fc:	fc8560e3          	bltu	a0,s0,18bc <matrix_test+0x2b8>
    for (i = 0; i < N; i++)
    1900:	001a8a93          	addi	s5,s5,1
    1904:	01be0e33          	add	t3,t3,s11
    1908:	017c8cb3          	add	s9,s9,s7
    190c:	f88ae6e3          	bltu	s5,s0,1898 <matrix_test+0x294>
    1910:	000d0313          	mv	t1,s10
    ee_s16 ret = 0;
    1914:	00000513          	li	a0,0
    MATRES tmp = 0, prev = 0, cur = 0;
    1918:	00000793          	li	a5,0
    191c:	00000693          	li	a3,0
    for (i = 0; i < N; i++)
    1920:	00000893          	li	a7,0
    1924:	00030593          	mv	a1,t1
        for (j = 0; j < N; j++)
    1928:	00000613          	li	a2,0
    192c:	01c0006f          	j	1948 <matrix_test+0x344>
                ret += (cur > prev) ? 1 : 0;
    1930:	01051513          	slli	a0,a0,0x10
        for (j = 0; j < N; j++)
    1934:	00160613          	addi	a2,a2,1
                ret += (cur > prev) ? 1 : 0;
    1938:	41055513          	srai	a0,a0,0x10
            prev = cur;
    193c:	00458593          	addi	a1,a1,4
            cur = C[i * N + j];
    1940:	00070793          	mv	a5,a4
        for (j = 0; j < N; j++)
    1944:	04867063          	bgeu	a2,s0,1984 <matrix_test+0x380>
            cur = C[i * N + j];
    1948:	0005a703          	lw	a4,0(a1)
            tmp += cur;
    194c:	01051513          	slli	a0,a0,0x10
    1950:	01055513          	srli	a0,a0,0x10
                ret += (cur > prev) ? 1 : 0;
    1954:	00e7a7b3          	slt	a5,a5,a4
            tmp += cur;
    1958:	00e686b3          	add	a3,a3,a4
                ret += 10;
    195c:	00a50813          	addi	a6,a0,10
                ret += (cur > prev) ? 1 : 0;
    1960:	00f50533          	add	a0,a0,a5
            if (tmp > clipval)
    1964:	fcdb56e3          	bge	s6,a3,1930 <matrix_test+0x32c>
                ret += 10;
    1968:	01081513          	slli	a0,a6,0x10
        for (j = 0; j < N; j++)
    196c:	00160613          	addi	a2,a2,1
                ret += 10;
    1970:	41055513          	srai	a0,a0,0x10
                tmp = 0;
    1974:	00000693          	li	a3,0
            prev = cur;
    1978:	00458593          	addi	a1,a1,4
            cur = C[i * N + j];
    197c:	00070793          	mv	a5,a4
        for (j = 0; j < N; j++)
    1980:	fc8664e3          	bltu	a2,s0,1948 <matrix_test+0x344>
    for (i = 0; i < N; i++)
    1984:	00188893          	addi	a7,a7,1
    1988:	01b30333          	add	t1,t1,s11
    198c:	f888ece3          	bltu	a7,s0,1924 <matrix_test+0x320>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1990:	00c12583          	lw	a1,12(sp)
*/
void
matrix_mul_matrix_bitextract(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B)
{
    ee_u32 i, j, k;
    for (i = 0; i < N; i++)
    1994:	00000a93          	li	s5,0
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1998:	00001097          	auipc	ra,0x1
    199c:	308080e7          	jalr	776(ra) # 2ca0 <crc16>
    19a0:	00812c83          	lw	s9,8(sp)
    19a4:	00a12623          	sw	a0,12(sp)
    for (i = 0; i < N; i++)
    19a8:	000a0613          	mv	a2,s4
    19ac:	00000593          	li	a1,0
    19b0:	000d0513          	mv	a0,s10
    19b4:	00002097          	auipc	ra,0x2
    19b8:	5b4080e7          	jalr	1460(ra) # 3f68 <memset>
                tmp = 0;
    19bc:	00048e13          	mv	t3,s1
    19c0:	000d0313          	mv	t1,s10
    {
        for (j = 0; j < N; j++)
    19c4:	00000893          	li	a7,0
    19c8:	000e0593          	mv	a1,t3
    19cc:	000c8613          	mv	a2,s9
    19d0:	00000513          	li	a0,0
        {
            C[i * N + j] = 0;
            for (k = 0; k < N; k++)
    19d4:	00000693          	li	a3,0
            {
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    19d8:	00059703          	lh	a4,0(a1)
    19dc:	00061783          	lh	a5,0(a2)
            for (k = 0; k < N; k++)
    19e0:	00168693          	addi	a3,a3,1
    19e4:	00260613          	addi	a2,a2,2
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    19e8:	02e787b3          	mul	a5,a5,a4
                C[i * N + j] += bit_extract(tmp, 2, 4) * bit_extract(tmp, 5, 7);
    19ec:	017585b3          	add	a1,a1,s7
    19f0:	4027d713          	srai	a4,a5,0x2
    19f4:	4057d793          	srai	a5,a5,0x5
    19f8:	00f77713          	andi	a4,a4,15
    19fc:	07f7f793          	andi	a5,a5,127
    1a00:	02f707b3          	mul	a5,a4,a5
    1a04:	00f50533          	add	a0,a0,a5
            for (k = 0; k < N; k++)
    1a08:	fc86e8e3          	bltu	a3,s0,19d8 <matrix_test+0x3d4>
    1a0c:	00a32023          	sw	a0,0(t1)
        for (j = 0; j < N; j++)
    1a10:	00188893          	addi	a7,a7,1
    1a14:	00430313          	addi	t1,t1,4
    1a18:	002e0e13          	addi	t3,t3,2
    1a1c:	fa88e6e3          	bltu	a7,s0,19c8 <matrix_test+0x3c4>
    for (i = 0; i < N; i++)
    1a20:	001a8a93          	addi	s5,s5,1
    1a24:	01bd0d33          	add	s10,s10,s11
    1a28:	017c8cb3          	add	s9,s9,s7
    1a2c:	f68aeee3          	bltu	s5,s0,19a8 <matrix_test+0x3a4>
    ee_s16 ret = 0;
    1a30:	00000513          	li	a0,0
    MATRES tmp = 0, prev = 0, cur = 0;
    1a34:	00000793          	li	a5,0
    1a38:	00000693          	li	a3,0
    for (i = 0; i < N; i++)
    1a3c:	00000893          	li	a7,0
    1a40:	00098593          	mv	a1,s3
        for (j = 0; j < N; j++)
    1a44:	00000613          	li	a2,0
    1a48:	01c0006f          	j	1a64 <matrix_test+0x460>
                ret += (cur > prev) ? 1 : 0;
    1a4c:	01051513          	slli	a0,a0,0x10
        for (j = 0; j < N; j++)
    1a50:	00160613          	addi	a2,a2,1
                ret += (cur > prev) ? 1 : 0;
    1a54:	41055513          	srai	a0,a0,0x10
            prev = cur;
    1a58:	00458593          	addi	a1,a1,4
            cur = C[i * N + j];
    1a5c:	00070793          	mv	a5,a4
        for (j = 0; j < N; j++)
    1a60:	04867063          	bgeu	a2,s0,1aa0 <matrix_test+0x49c>
            cur = C[i * N + j];
    1a64:	0005a703          	lw	a4,0(a1)
            tmp += cur;
    1a68:	01051513          	slli	a0,a0,0x10
    1a6c:	01055513          	srli	a0,a0,0x10
                ret += (cur > prev) ? 1 : 0;
    1a70:	00e7a7b3          	slt	a5,a5,a4
            tmp += cur;
    1a74:	00e686b3          	add	a3,a3,a4
                ret += 10;
    1a78:	00a50813          	addi	a6,a0,10
                ret += (cur > prev) ? 1 : 0;
    1a7c:	00f50533          	add	a0,a0,a5
            if (tmp > clipval)
    1a80:	fcdb56e3          	bge	s6,a3,1a4c <matrix_test+0x448>
                ret += 10;
    1a84:	01081513          	slli	a0,a6,0x10
        for (j = 0; j < N; j++)
    1a88:	00160613          	addi	a2,a2,1
                ret += 10;
    1a8c:	41055513          	srai	a0,a0,0x10
                tmp = 0;
    1a90:	00000693          	li	a3,0
            prev = cur;
    1a94:	00458593          	addi	a1,a1,4
            cur = C[i * N + j];
    1a98:	00070793          	mv	a5,a4
        for (j = 0; j < N; j++)
    1a9c:	fc8664e3          	bltu	a2,s0,1a64 <matrix_test+0x460>
    for (i = 0; i < N; i++)
    1aa0:	00188893          	addi	a7,a7,1
    1aa4:	01b989b3          	add	s3,s3,s11
    1aa8:	f888ece3          	bltu	a7,s0,1a40 <matrix_test+0x43c>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1aac:	00c12583          	lw	a1,12(sp)
    1ab0:	00001097          	auipc	ra,0x1
    1ab4:	1f0080e7          	jalr	496(ra) # 2ca0 <crc16>
    for (i = 0; i < N; i++)
    1ab8:	00000613          	li	a2,0
                tmp = 0;
    1abc:	00090793          	mv	a5,s2
        for (j = 0; j < N; j++)
    1ac0:	00000693          	li	a3,0
            A[i * N + j] += val;
    1ac4:	0007d703          	lhu	a4,0(a5)
    1ac8:	00278793          	addi	a5,a5,2
        for (j = 0; j < N; j++)
    1acc:	00168693          	addi	a3,a3,1
            A[i * N + j] += val;
    1ad0:	41870733          	sub	a4,a4,s8
    1ad4:	fee79f23          	sh	a4,-2(a5)
        for (j = 0; j < N; j++)
    1ad8:	fe86e6e3          	bltu	a3,s0,1ac4 <matrix_test+0x4c0>
    for (i = 0; i < N; i++)
    1adc:	00160613          	addi	a2,a2,1
    1ae0:	01790933          	add	s2,s2,s7
    1ae4:	fc866ce3          	bltu	a2,s0,1abc <matrix_test+0x4b8>
}
    1ae8:	04c12083          	lw	ra,76(sp)
    1aec:	04812403          	lw	s0,72(sp)
    return crc;
    1af0:	01051513          	slli	a0,a0,0x10
}
    1af4:	04412483          	lw	s1,68(sp)
    1af8:	04012903          	lw	s2,64(sp)
    1afc:	03c12983          	lw	s3,60(sp)
    1b00:	03812a03          	lw	s4,56(sp)
    1b04:	03412a83          	lw	s5,52(sp)
    1b08:	03012b03          	lw	s6,48(sp)
    1b0c:	02c12b83          	lw	s7,44(sp)
    1b10:	02812c03          	lw	s8,40(sp)
    1b14:	02412c83          	lw	s9,36(sp)
    1b18:	02012d03          	lw	s10,32(sp)
    1b1c:	01c12d83          	lw	s11,28(sp)
    return crc;
    1b20:	41055513          	srai	a0,a0,0x10
}
    1b24:	05010113          	addi	sp,sp,80
    1b28:	00008067          	ret
            C[i * N + j] = 0;
    1b2c:	000d8a13          	mv	s4,s11
    1b30:	d5dff06f          	j	188c <matrix_test+0x288>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b34:	00000593          	li	a1,0
    1b38:	00001097          	auipc	ra,0x1
    1b3c:	168080e7          	jalr	360(ra) # 2ca0 <crc16>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b40:	00050593          	mv	a1,a0
    1b44:	00000513          	li	a0,0
    1b48:	00001097          	auipc	ra,0x1
    1b4c:	158080e7          	jalr	344(ra) # 2ca0 <crc16>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b50:	00050593          	mv	a1,a0
    1b54:	00000513          	li	a0,0
    1b58:	00001097          	auipc	ra,0x1
    1b5c:	148080e7          	jalr	328(ra) # 2ca0 <crc16>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b60:	00050593          	mv	a1,a0
    1b64:	00000513          	li	a0,0
    1b68:	00001097          	auipc	ra,0x1
    1b6c:	138080e7          	jalr	312(ra) # 2ca0 <crc16>
    matrix_add_const(N, A, -val); /* return matrix to initial value */
    1b70:	f79ff06f          	j	1ae8 <matrix_test+0x4e4>

00001b74 <core_bench_matrix>:
{
    1b74:	ff010113          	addi	sp,sp,-16
    1b78:	00812423          	sw	s0,8(sp)
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1b7c:	00058713          	mv	a4,a1
{
    1b80:	00060413          	mv	s0,a2
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1b84:	00c52583          	lw	a1,12(a0)
    1b88:	00852683          	lw	a3,8(a0)
    1b8c:	00452603          	lw	a2,4(a0)
    1b90:	00052503          	lw	a0,0(a0)
{
    1b94:	00112623          	sw	ra,12(sp)
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1b98:	00000097          	auipc	ra,0x0
    1b9c:	a6c080e7          	jalr	-1428(ra) # 1604 <matrix_test>
    1ba0:	00040593          	mv	a1,s0
}
    1ba4:	00812403          	lw	s0,8(sp)
    1ba8:	00c12083          	lw	ra,12(sp)
    1bac:	01010113          	addi	sp,sp,16
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1bb0:	00001317          	auipc	t1,0x1
    1bb4:	0f030067          	jr	240(t1) # 2ca0 <crc16>

00001bb8 <core_init_matrix>:
{
    1bb8:	ff010113          	addi	sp,sp,-16
    1bbc:	00812623          	sw	s0,12(sp)
    1bc0:	00912423          	sw	s1,8(sp)
    1bc4:	01212223          	sw	s2,4(sp)
    1bc8:	00050813          	mv	a6,a0
    if (seed == 0)
    1bcc:	00061463          	bnez	a2,1bd4 <core_init_matrix+0x1c>
        seed = 1;
    1bd0:	00100613          	li	a2,1
    1bd4:	fff58393          	addi	t2,a1,-1
    1bd8:	ffc3f393          	andi	t2,t2,-4
    1bdc:	00438493          	addi	s1,t2,4
    while (j < blksize)
    1be0:	00000513          	li	a0,0
    1be4:	00081663          	bnez	a6,1bf0 <core_init_matrix+0x38>
    1be8:	0e00006f          	j	1cc8 <core_init_matrix+0x110>
        i++;
    1bec:	00070513          	mv	a0,a4
    1bf0:	00150713          	addi	a4,a0,1
        j = i * i * 2 * 4;
    1bf4:	02e707b3          	mul	a5,a4,a4
    1bf8:	00379793          	slli	a5,a5,0x3
    while (j < blksize)
    1bfc:	ff07e8e3          	bltu	a5,a6,1bec <core_init_matrix+0x34>
    B = A + N * N;
    1c00:	02a502b3          	mul	t0,a0,a0
    1c04:	00050913          	mv	s2,a0
    1c08:	00129293          	slli	t0,t0,0x1
    1c0c:	005483b3          	add	t2,s1,t0
    for (i = 0; i < N; i++)
    1c10:	08050263          	beqz	a0,1c94 <core_init_matrix+0xdc>
            seed         = ((order * seed) % 65536);
    1c14:	00010e37          	lui	t3,0x10
    1c18:	00151413          	slli	s0,a0,0x1
    B = A + N * N;
    1c1c:	00038f93          	mv	t6,t2
    1c20:	00000f13          	li	t5,0
    1c24:	00100813          	li	a6,1
    1c28:	40748eb3          	sub	t4,s1,t2
            seed         = ((order * seed) % 65536);
    1c2c:	fffe0e13          	addi	t3,t3,-1 # ffff <_data_lma+0x59e7>
        seed = 1;
    1c30:	000f8593          	mv	a1,t6
        for (j = 0; j < N; j++)
    1c34:	00000893          	li	a7,0
            seed         = ((order * seed) % 65536);
    1c38:	03060633          	mul	a2,a2,a6
    1c3c:	01081793          	slli	a5,a6,0x10
    1c40:	0107d793          	srli	a5,a5,0x10
            A[i * N + j] = val;
    1c44:	00be8333          	add	t1,t4,a1
    1c48:	00258593          	addi	a1,a1,2
        for (j = 0; j < N; j++)
    1c4c:	00188893          	addi	a7,a7,1
            val          = (seed + order);
    1c50:	00180813          	addi	a6,a6,1
            seed         = ((order * seed) % 65536);
    1c54:	41f65713          	srai	a4,a2,0x1f
    1c58:	01075713          	srli	a4,a4,0x10
    1c5c:	00e60633          	add	a2,a2,a4
    1c60:	01c67633          	and	a2,a2,t3
    1c64:	40e60633          	sub	a2,a2,a4
            val          = (seed + order);
    1c68:	00c78733          	add	a4,a5,a2
    1c6c:	01071713          	slli	a4,a4,0x10
    1c70:	01075713          	srli	a4,a4,0x10
            val          = (val + order);
    1c74:	00f707b3          	add	a5,a4,a5
            B[i * N + j] = val;
    1c78:	fee59f23          	sh	a4,-2(a1)
            val          = matrix_clip(val, 1);
    1c7c:	0ff7f793          	andi	a5,a5,255
            A[i * N + j] = val;
    1c80:	00f31023          	sh	a5,0(t1)
        for (j = 0; j < N; j++)
    1c84:	faa8eae3          	bltu	a7,a0,1c38 <core_init_matrix+0x80>
    for (i = 0; i < N; i++)
    1c88:	001f0f13          	addi	t5,t5,1
    1c8c:	008f8fb3          	add	t6,t6,s0
    1c90:	faaf60e3          	bltu	t5,a0,1c30 <core_init_matrix+0x78>
    p->C = (MATRES *)align_mem(B + N * N);
    1c94:	005387b3          	add	a5,t2,t0
    1c98:	fff78793          	addi	a5,a5,-1
}
    1c9c:	00c12403          	lw	s0,12(sp)
    p->C = (MATRES *)align_mem(B + N * N);
    1ca0:	ffc7f793          	andi	a5,a5,-4
    1ca4:	00478793          	addi	a5,a5,4
    p->A = A;
    1ca8:	0096a223          	sw	s1,4(a3)
    p->N = N;
    1cac:	0126a023          	sw	s2,0(a3)
    p->B = B;
    1cb0:	0076a423          	sw	t2,8(a3)
    p->C = (MATRES *)align_mem(B + N * N);
    1cb4:	00f6a623          	sw	a5,12(a3)
}
    1cb8:	00812483          	lw	s1,8(sp)
    1cbc:	00412903          	lw	s2,4(sp)
    1cc0:	01010113          	addi	sp,sp,16
    1cc4:	00008067          	ret
    B = A + N * N;
    1cc8:	00638393          	addi	t2,t2,6
    1ccc:	fff00913          	li	s2,-1
    N = i - 1;
    1cd0:	fff00513          	li	a0,-1
    B = A + N * N;
    1cd4:	00200293          	li	t0,2
    1cd8:	f3dff06f          	j	1c14 <core_init_matrix+0x5c>

00001cdc <start_time>:


long long timer_0, timer_1;

void
start_time(void) {
    1cdc:	ff010113          	addi	sp,sp,-16
    1ce0:	00112623          	sw	ra,12(sp)
    //GETMYTIME(&start_time_val);
    timer_0 = timer_getms();
    1ce4:	00001097          	auipc	ra,0x1
    1ce8:	24c080e7          	jalr	588(ra) # 2f30 <timer_getms>
}
    1cec:	00c12083          	lw	ra,12(sp)
    timer_0 = timer_getms();
    1cf0:	010017b7          	lui	a5,0x1001
    1cf4:	bca7a823          	sw	a0,-1072(a5) # 1000bd0 <timer_0>
    1cf8:	bcb7aa23          	sw	a1,-1068(a5)
}
    1cfc:	01010113          	addi	sp,sp,16
    1d00:	00008067          	ret

00001d04 <stop_time>:


void
stop_time(void) {
    1d04:	ff010113          	addi	sp,sp,-16
    1d08:	00112623          	sw	ra,12(sp)
    //GETMYTIME(&stop_time_val);
    timer_1 = timer_getms();
    1d0c:	00001097          	auipc	ra,0x1
    1d10:	224080e7          	jalr	548(ra) # 2f30 <timer_getms>
}
    1d14:	00c12083          	lw	ra,12(sp)
    timer_1 = timer_getms();
    1d18:	010017b7          	lui	a5,0x1001
    1d1c:	bca7a423          	sw	a0,-1080(a5) # 1000bc8 <timer_1>
    1d20:	bcb7a623          	sw	a1,-1076(a5)
}
    1d24:	01010113          	addi	sp,sp,16
    1d28:	00008067          	ret

00001d2c <get_time>:

CORE_TICKS
get_time(void) {
    // CORE_TICKS elapsed
    //     = (CORE_TICKS)(MYTIMEDIFF(stop_time_val, start_time_val));
    return timer_1 - timer_0;
    1d2c:	010017b7          	lui	a5,0x1001
    1d30:	bc87a503          	lw	a0,-1080(a5) # 1000bc8 <timer_1>
    1d34:	010017b7          	lui	a5,0x1001
    1d38:	bd07a783          	lw	a5,-1072(a5) # 1000bd0 <timer_0>
}
    1d3c:	40f50533          	sub	a0,a0,a5
    1d40:	00008067          	ret

00001d44 <time_in_secs>:
        The <secs_ret> type is used to accomodate systems with no support for
   floating point. Default implementation implemented by the EE_TICKS_PER_SEC
   macro above.
*/
secs_ret
time_in_secs(CORE_TICKS ticks) {
    1d44:	ff010113          	addi	sp,sp,-16
    1d48:	00112623          	sw	ra,12(sp)
    //secs_ret retval = ((secs_ret)ticks) / (secs_ret)EE_TICKS_PER_SEC;
    return ((double)ticks) / 1000.0;
    1d4c:	00002097          	auipc	ra,0x2
    1d50:	0f0080e7          	jalr	240(ra) # 3e3c <__floatunsidf>
    1d54:	010007b7          	lui	a5,0x1000
    1d58:	4187a603          	lw	a2,1048(a5) # 1000418 <_data+0x418>
    1d5c:	41c7a683          	lw	a3,1052(a5)
    1d60:	00001097          	auipc	ra,0x1
    1d64:	6dc080e7          	jalr	1756(ra) # 343c <__divdf3>
}
    1d68:	00c12083          	lw	ra,12(sp)
    1d6c:	01010113          	addi	sp,sp,16
    1d70:	00008067          	ret

00001d74 <portable_init>:




void
portable_init(core_portable* p, int* argc, char* argv[]) {
    1d74:	ff010113          	addi	sp,sp,-16
    1d78:	00812423          	sw	s0,8(sp)
    1d7c:	00050413          	mv	s0,a0

    printf("start run!!\n");
    1d80:	01000537          	lui	a0,0x1000
    1d84:	40850513          	addi	a0,a0,1032 # 1000408 <_data+0x408>
portable_init(core_portable* p, int* argc, char* argv[]) {
    1d88:	00112623          	sw	ra,12(sp)
    printf("start run!!\n");
    1d8c:	00003097          	auipc	ra,0x3
    1d90:	460080e7          	jalr	1120(ra) # 51ec <puts>
            "pointer!\n");
    }
    if (sizeof(ee_u32) != 4) {
        ee_printf("ERROR! Please define ee_u32 to a 32b unsigned type!\n");
    }
    p->portable_id = 1;
    1d94:	00100793          	li	a5,1
    1d98:	00f40023          	sb	a5,0(s0)
}
    1d9c:	00c12083          	lw	ra,12(sp)
    1da0:	00812403          	lw	s0,8(sp)
    1da4:	01010113          	addi	sp,sp,16
    1da8:	00008067          	ret

00001dac <portable_fini>:
/* Function : portable_fini
        Target specific final code
*/
void
portable_fini(core_portable* p) {
    p->portable_id = 0;
    1dac:	00050023          	sb	zero,0(a0)
}
    1db0:	00008067          	ret

00001db4 <core_init_state>:
    ee_u8 *buf = 0;
#if CORE_DEBUG
    ee_u8 *start = p;
    ee_printf("State: %d,%d\n", size, seed);
#endif
    size--;
    1db4:	fff50893          	addi	a7,a0,-1
    next = 0;
    while ((total + next + 1) < size)
    1db8:	00100793          	li	a5,1
{
    1dbc:	00060f93          	mv	t6,a2
    while ((total + next + 1) < size)
    1dc0:	1917fc63          	bgeu	a5,a7,1f58 <core_init_state+0x1a4>
    1dc4:	00158613          	addi	a2,a1,1
    1dc8:	01061613          	slli	a2,a2,0x10
    1dcc:	01065613          	srli	a2,a2,0x10
                *(p + total + i) = buf[i];
            *(p + total + i) = ',';
            total += next + 1;
        }
        seed++;
        switch (seed & 0x7)
    1dd0:	00767793          	andi	a5,a2,7
    1dd4:	ffd78793          	addi	a5,a5,-3
{
    1dd8:	ff010113          	addi	sp,sp,-16
        switch (seed & 0x7)
    1ddc:	01079793          	slli	a5,a5,0x10
        {
            case 0: /* int */
            case 1: /* int */
            case 2: /* int */
                buf  = intpat[(seed >> 3) & 0x3];
    1de0:	010002b7          	lui	t0,0x1000
        switch (seed & 0x7)
    1de4:	01000837          	lui	a6,0x1000
            case 6: /* scientific */
                buf  = scipat[(seed >> 3) & 0x3];
                next = 8;
                break;
            case 7: /* invalid */
                buf  = errpat[(seed >> 3) & 0x3];
    1de8:	01000f37          	lui	t5,0x1000
                buf  = scipat[(seed >> 3) & 0x3];
    1dec:	01000eb7          	lui	t4,0x1000
                buf  = floatpat[(seed >> 3) & 0x3];
    1df0:	01000e37          	lui	t3,0x1000
    1df4:	00365713          	srli	a4,a2,0x3
{
    1df8:	00812623          	sw	s0,12(sp)
    1dfc:	00912423          	sw	s1,8(sp)
        switch (seed & 0x7)
    1e00:	00400593          	li	a1,4
    1e04:	0107d793          	srli	a5,a5,0x10
    ee_u32 total = 0, next = 0, i;
    1e08:	00000693          	li	a3,0
                buf  = intpat[(seed >> 3) & 0x3];
    1e0c:	45428293          	addi	t0,t0,1108 # 1000454 <intpat>
        switch (seed & 0x7)
    1e10:	42080813          	addi	a6,a6,1056 # 1000420 <_data+0x420>
                buf  = errpat[(seed >> 3) & 0x3];
    1e14:	434f0f13          	addi	t5,t5,1076 # 1000434 <errpat>
                next = 8;
    1e18:	00800393          	li	t2,8
                buf  = scipat[(seed >> 3) & 0x3];
    1e1c:	464e8e93          	addi	t4,t4,1124 # 1000464 <scipat>
                buf  = floatpat[(seed >> 3) & 0x3];
    1e20:	444e0e13          	addi	t3,t3,1092 # 1000444 <floatpat>
            *(p + total + i) = ',';
    1e24:	02c00313          	li	t1,44
    1e28:	00377713          	andi	a4,a4,3
        switch (seed & 0x7)
    1e2c:	0af5e663          	bltu	a1,a5,1ed8 <core_init_state+0x124>
    1e30:	00279793          	slli	a5,a5,0x2
    1e34:	010787b3          	add	a5,a5,a6
    1e38:	0007a783          	lw	a5,0(a5)
                buf  = errpat[(seed >> 3) & 0x3];
    1e3c:	00271713          	slli	a4,a4,0x2
        switch (seed & 0x7)
    1e40:	00078067          	jr	a5
                buf  = floatpat[(seed >> 3) & 0x3];
    1e44:	00ee0733          	add	a4,t3,a4
    1e48:	00160613          	addi	a2,a2,1
    1e4c:	01061613          	slli	a2,a2,0x10
    while ((total + next + 1) < size)
    1e50:	00968793          	addi	a5,a3,9
                buf  = errpat[(seed >> 3) & 0x3];
    1e54:	00072703          	lw	a4,0(a4)
                break;
    1e58:	01065613          	srli	a2,a2,0x10
    while ((total + next + 1) < size)
    1e5c:	0d17f063          	bgeu	a5,a7,1f1c <core_init_state+0x168>
                next = 8;
    1e60:	00800413          	li	s0,8
                *(p + total + i) = buf[i];
    1e64:	00074483          	lbu	s1,0(a4)
    1e68:	00df86b3          	add	a3,t6,a3
    1e6c:	00968023          	sb	s1,0(a3)
    1e70:	00174483          	lbu	s1,1(a4)
    1e74:	009680a3          	sb	s1,1(a3)
    1e78:	00274483          	lbu	s1,2(a4)
    1e7c:	00968123          	sb	s1,2(a3)
    1e80:	00374483          	lbu	s1,3(a4)
    1e84:	009681a3          	sb	s1,3(a3)
            for (i = 0; i < next; i++)
    1e88:	02b40463          	beq	s0,a1,1eb0 <core_init_state+0xfc>
                *(p + total + i) = buf[i];
    1e8c:	00474483          	lbu	s1,4(a4)
    1e90:	00968223          	sb	s1,4(a3)
    1e94:	00574483          	lbu	s1,5(a4)
    1e98:	009682a3          	sb	s1,5(a3)
    1e9c:	00674483          	lbu	s1,6(a4)
    1ea0:	00968323          	sb	s1,6(a3)
            for (i = 0; i < next; i++)
    1ea4:	00741663          	bne	s0,t2,1eb0 <core_init_state+0xfc>
                *(p + total + i) = buf[i];
    1ea8:	00774703          	lbu	a4,7(a4)
    1eac:	00e683a3          	sb	a4,7(a3)
            *(p + total + i) = ',';
    1eb0:	008686b3          	add	a3,a3,s0
    1eb4:	00668023          	sb	t1,0(a3)
    1eb8:	00078693          	mv	a3,a5
        switch (seed & 0x7)
    1ebc:	00767793          	andi	a5,a2,7
    1ec0:	ffd78793          	addi	a5,a5,-3
    1ec4:	01079793          	slli	a5,a5,0x10
    1ec8:	00365713          	srli	a4,a2,0x3
    1ecc:	0107d793          	srli	a5,a5,0x10
    1ed0:	00377713          	andi	a4,a4,3
    1ed4:	f4f5fee3          	bgeu	a1,a5,1e30 <core_init_state+0x7c>
                buf  = intpat[(seed >> 3) & 0x3];
    1ed8:	00271713          	slli	a4,a4,0x2
    1edc:	00160613          	addi	a2,a2,1
    1ee0:	00e28733          	add	a4,t0,a4
    1ee4:	01061613          	slli	a2,a2,0x10
    while ((total + next + 1) < size)
    1ee8:	00568793          	addi	a5,a3,5
                buf  = intpat[(seed >> 3) & 0x3];
    1eec:	00072703          	lw	a4,0(a4)
                break;
    1ef0:	01065613          	srli	a2,a2,0x10
    while ((total + next + 1) < size)
    1ef4:	0317f463          	bgeu	a5,a7,1f1c <core_init_state+0x168>
                next = 4;
    1ef8:	00400413          	li	s0,4
    1efc:	f69ff06f          	j	1e64 <core_init_state+0xb0>
                buf  = scipat[(seed >> 3) & 0x3];
    1f00:	00160613          	addi	a2,a2,1
    1f04:	00ee8733          	add	a4,t4,a4
    1f08:	01061613          	slli	a2,a2,0x10
    while ((total + next + 1) < size)
    1f0c:	00968793          	addi	a5,a3,9
                buf  = errpat[(seed >> 3) & 0x3];
    1f10:	00072703          	lw	a4,0(a4)
                break;
    1f14:	01065613          	srli	a2,a2,0x10
    while ((total + next + 1) < size)
    1f18:	f517e4e3          	bltu	a5,a7,1e60 <core_init_state+0xac>
            default: /* Never happen, just to make some compilers happy */
                break;
        }
    }
    size++;
    while (total < size)
    1f1c:	02a6f663          	bgeu	a3,a0,1f48 <core_init_state+0x194>
        total++;
    }
#if CORE_DEBUG
    ee_printf("State Input: %s\n", start);
#endif
}
    1f20:	00c12403          	lw	s0,12(sp)
    1f24:	00812483          	lw	s1,8(sp)
    1f28:	40d50633          	sub	a2,a0,a3
    1f2c:	00000593          	li	a1,0
    1f30:	00df8533          	add	a0,t6,a3
    1f34:	01010113          	addi	sp,sp,16
    1f38:	00002317          	auipc	t1,0x2
    1f3c:	03030067          	jr	48(t1) # 3f68 <memset>
                buf  = errpat[(seed >> 3) & 0x3];
    1f40:	00ef0733          	add	a4,t5,a4
    1f44:	f05ff06f          	j	1e48 <core_init_state+0x94>
}
    1f48:	00c12403          	lw	s0,12(sp)
    1f4c:	00812483          	lw	s1,8(sp)
    1f50:	01010113          	addi	sp,sp,16
    1f54:	00008067          	ret
    ee_u32 total = 0, next = 0, i;
    1f58:	00000693          	li	a3,0
    1f5c:	40d50633          	sub	a2,a0,a3
    1f60:	00000593          	li	a1,0
    1f64:	00df8533          	add	a0,t6,a3
    1f68:	00002317          	auipc	t1,0x2
    1f6c:	00030067          	jr	t1 # 3f68 <memset>

00001f70 <core_state_transition>:
*/

enum CORE_STATE
core_state_transition(ee_u8 **instr, ee_u32 *transition_count)
{
    ee_u8 *         str = *instr;
    1f70:	00052783          	lw	a5,0(a0)
    ee_u8           NEXT_SYMBOL;
    enum CORE_STATE state = CORE_START;
    for (; *str && state != CORE_INVALID; str++)
    1f74:	0007c683          	lbu	a3,0(a5)
    1f78:	2e068863          	beqz	a3,2268 <core_state_transition+0x2f8>
    {
        NEXT_SYMBOL = *str;
        if (NEXT_SYMBOL == ',') /* end of this input */
    1f7c:	02c00813          	li	a6,44
    1f80:	00178713          	addi	a4,a5,1
    1f84:	2b068e63          	beq	a3,a6,2240 <core_state_transition+0x2d0>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1f88:	0005a883          	lw	a7,0(a1)
    1f8c:	fd068613          	addi	a2,a3,-48
    1f90:	0ff67613          	andi	a2,a2,255
    1f94:	00900313          	li	t1,9
    1f98:	00188893          	addi	a7,a7,1
    1f9c:	0ac36c63          	bltu	t1,a2,2054 <core_state_transition+0xe4>
                else
                {
                    state = CORE_INVALID;
                    transition_count[CORE_INVALID]++;
                }
                transition_count[CORE_START]++;
    1fa0:	0115a023          	sw	a7,0(a1)
    for (; *str && state != CORE_INVALID; str++)
    1fa4:	0017c683          	lbu	a3,1(a5)
    1fa8:	16068463          	beqz	a3,2110 <core_state_transition+0x1a0>
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fac:	00278793          	addi	a5,a5,2
    1fb0:	15068e63          	beq	a3,a6,210c <core_state_transition+0x19c>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fb4:	fd068613          	addi	a2,a3,-48
                    state = CORE_INVALID;
                    transition_count[CORE_S1]++;
                }
                break;
            case CORE_INT:
                if (NEXT_SYMBOL == '.')
    1fb8:	02e00813          	li	a6,46
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fbc:	00900893          	li	a7,9
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fc0:	02c00313          	li	t1,44
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fc4:	0ff67613          	andi	a2,a2,255
                if (NEXT_SYMBOL == '.')
    1fc8:	03068663          	beq	a3,a6,1ff4 <core_state_transition+0x84>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fcc:	0cc8e063          	bltu	a7,a2,208c <core_state_transition+0x11c>
    for (; *str && state != CORE_INVALID; str++)
    1fd0:	00174683          	lbu	a3,1(a4)
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fd4:	00178613          	addi	a2,a5,1
    1fd8:	00078713          	mv	a4,a5
    for (; *str && state != CORE_INVALID; str++)
    1fdc:	12068863          	beqz	a3,210c <core_state_transition+0x19c>
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fe0:	2a668a63          	beq	a3,t1,2294 <core_state_transition+0x324>
    1fe4:	00060793          	mv	a5,a2
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fe8:	fd068613          	addi	a2,a3,-48
    1fec:	0ff67613          	andi	a2,a2,255
                if (NEXT_SYMBOL == '.')
    1ff0:	fd069ee3          	bne	a3,a6,1fcc <core_state_transition+0x5c>
                {
                    state = CORE_FLOAT;
                    transition_count[CORE_INT]++;
    1ff4:	0105a683          	lw	a3,16(a1)
    1ff8:	00168693          	addi	a3,a3,1
    1ffc:	00d5a823          	sw	a3,16(a1)
    for (; *str && state != CORE_INVALID; str++)
    2000:	00174683          	lbu	a3,1(a4)
    2004:	28068263          	beqz	a3,2288 <core_state_transition+0x318>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2008:	02c00713          	li	a4,44
    200c:	00178613          	addi	a2,a5,1
    2010:	22e68263          	beq	a3,a4,2234 <core_state_transition+0x2c4>
                    state = CORE_INVALID;
                    transition_count[CORE_INT]++;
                }
                break;
            case CORE_FLOAT:
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    2014:	04500813          	li	a6,69
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2018:	00900893          	li	a7,9
        if (NEXT_SYMBOL == ',') /* end of this input */
    201c:	02c00313          	li	t1,44
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2020:	fd068713          	addi	a4,a3,-48
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    2024:	0df6f693          	andi	a3,a3,223
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2028:	0ff77713          	andi	a4,a4,255
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    202c:	0f068663          	beq	a3,a6,2118 <core_state_transition+0x1a8>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2030:	1ae8fa63          	bgeu	a7,a4,21e4 <core_state_transition+0x274>
                    transition_count[CORE_FLOAT]++;
                }
                else if (!ee_isdigit(NEXT_SYMBOL))
                {
                    state = CORE_INVALID;
                    transition_count[CORE_FLOAT]++;
    2034:	0145a683          	lw	a3,20(a1)
    2038:	00060713          	mv	a4,a2
                    state = CORE_INVALID;
    203c:	00100793          	li	a5,1
                    transition_count[CORE_FLOAT]++;
    2040:	00168693          	addi	a3,a3,1
    2044:	00d5aa23          	sw	a3,20(a1)
                break;
            default:
                break;
        }
    }
    *instr = str;
    2048:	00e52023          	sw	a4,0(a0)
    return state;
}
    204c:	00078513          	mv	a0,a5
    2050:	00008067          	ret
                else if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    2054:	02b00613          	li	a2,43
    2058:	04c68a63          	beq	a3,a2,20ac <core_state_transition+0x13c>
    205c:	02d00613          	li	a2,45
    2060:	04c68663          	beq	a3,a2,20ac <core_state_transition+0x13c>
                else if (NEXT_SYMBOL == '.')
    2064:	02e00613          	li	a2,46
    2068:	18c68c63          	beq	a3,a2,2200 <core_state_transition+0x290>
                    transition_count[CORE_INVALID]++;
    206c:	0045a683          	lw	a3,4(a1)
                transition_count[CORE_START]++;
    2070:	0115a023          	sw	a7,0(a1)
                    state = CORE_INVALID;
    2074:	00100793          	li	a5,1
                    transition_count[CORE_INVALID]++;
    2078:	00168693          	addi	a3,a3,1
    207c:	00d5a223          	sw	a3,4(a1)
    *instr = str;
    2080:	00e52023          	sw	a4,0(a0)
}
    2084:	00078513          	mv	a0,a5
    2088:	00008067          	ret
                    transition_count[CORE_INT]++;
    208c:	0105a683          	lw	a3,16(a1)
    2090:	00078713          	mv	a4,a5
                    state = CORE_INVALID;
    2094:	00100793          	li	a5,1
                    transition_count[CORE_INT]++;
    2098:	00168693          	addi	a3,a3,1
    209c:	00d5a823          	sw	a3,16(a1)
    *instr = str;
    20a0:	00e52023          	sw	a4,0(a0)
}
    20a4:	00078513          	mv	a0,a5
    20a8:	00008067          	ret
                transition_count[CORE_START]++;
    20ac:	0115a023          	sw	a7,0(a1)
    for (; *str && state != CORE_INVALID; str++)
    20b0:	0017c883          	lbu	a7,1(a5)
    20b4:	1c088063          	beqz	a7,2274 <core_state_transition+0x304>
        if (NEXT_SYMBOL == ',') /* end of this input */
    20b8:	00278713          	addi	a4,a5,2
    20bc:	1b088c63          	beq	a7,a6,2274 <core_state_transition+0x304>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    20c0:	0085a603          	lw	a2,8(a1)
    20c4:	fd088693          	addi	a3,a7,-48
    20c8:	0ff6f693          	andi	a3,a3,255
    20cc:	00900813          	li	a6,9
    20d0:	00160613          	addi	a2,a2,1
    20d4:	02d87063          	bgeu	a6,a3,20f4 <core_state_transition+0x184>
                else if (NEXT_SYMBOL == '.')
    20d8:	02e00693          	li	a3,46
    20dc:	14d88063          	beq	a7,a3,221c <core_state_transition+0x2ac>
                    transition_count[CORE_S1]++;
    20e0:	00c5a423          	sw	a2,8(a1)
                    state = CORE_INVALID;
    20e4:	00100793          	li	a5,1
    *instr = str;
    20e8:	00e52023          	sw	a4,0(a0)
}
    20ec:	00078513          	mv	a0,a5
    20f0:	00008067          	ret
                    transition_count[CORE_S1]++;
    20f4:	00c5a423          	sw	a2,8(a1)
    for (; *str && state != CORE_INVALID; str++)
    20f8:	0027c683          	lbu	a3,2(a5)
    20fc:	00068a63          	beqz	a3,2110 <core_state_transition+0x1a0>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2100:	02c00613          	li	a2,44
    2104:	00170793          	addi	a5,a4,1
    2108:	eac696e3          	bne	a3,a2,1fb4 <core_state_transition+0x44>
    for (; *str && state != CORE_INVALID; str++)
    210c:	00078713          	mv	a4,a5
    2110:	00400793          	li	a5,4
    2114:	f8dff06f          	j	20a0 <core_state_transition+0x130>
                    transition_count[CORE_FLOAT]++;
    2118:	0145a703          	lw	a4,20(a1)
    211c:	00170713          	addi	a4,a4,1
    2120:	00e5aa23          	sw	a4,20(a1)
    for (; *str && state != CORE_INVALID; str++)
    2124:	0017c783          	lbu	a5,1(a5)
    2128:	12078a63          	beqz	a5,225c <core_state_transition+0x2ec>
        if (NEXT_SYMBOL == ',') /* end of this input */
    212c:	02c00813          	li	a6,44
    2130:	00160713          	addi	a4,a2,1
    2134:	13078663          	beq	a5,a6,2260 <core_state_transition+0x2f0>
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    2138:	00c5a683          	lw	a3,12(a1)
    213c:	fd578793          	addi	a5,a5,-43
    2140:	0fd7f793          	andi	a5,a5,253
    2144:	00168693          	addi	a3,a3,1
                    transition_count[CORE_S2]++;
    2148:	00d5a623          	sw	a3,12(a1)
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    214c:	00078a63          	beqz	a5,2160 <core_state_transition+0x1f0>
                    state = CORE_INVALID;
    2150:	00100793          	li	a5,1
    *instr = str;
    2154:	00e52023          	sw	a4,0(a0)
}
    2158:	00078513          	mv	a0,a5
    215c:	00008067          	ret
    for (; *str && state != CORE_INVALID; str++)
    2160:	00164783          	lbu	a5,1(a2)
    2164:	0e078863          	beqz	a5,2254 <core_state_transition+0x2e4>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2168:	00260713          	addi	a4,a2,2
    216c:	0f078463          	beq	a5,a6,2254 <core_state_transition+0x2e4>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2170:	0185a683          	lw	a3,24(a1)
    2174:	fd078793          	addi	a5,a5,-48
    2178:	0ff7f793          	andi	a5,a5,255
    217c:	00168693          	addi	a3,a3,1
    2180:	00900893          	li	a7,9
                    transition_count[CORE_EXPONENT]++;
    2184:	00d5ac23          	sw	a3,24(a1)
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2188:	fcf8e4e3          	bltu	a7,a5,2150 <core_state_transition+0x1e0>
    for (; *str && state != CORE_INVALID; str++)
    218c:	00264683          	lbu	a3,2(a2)
    2190:	0a068e63          	beqz	a3,224c <core_state_transition+0x2dc>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2194:	00360793          	addi	a5,a2,3
    2198:	0b068863          	beq	a3,a6,2248 <core_state_transition+0x2d8>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    219c:	00900613          	li	a2,9
        if (NEXT_SYMBOL == ',') /* end of this input */
    21a0:	02c00893          	li	a7,44
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    21a4:	fd068693          	addi	a3,a3,-48
    21a8:	0ff6f693          	andi	a3,a3,255
    21ac:	00d67e63          	bgeu	a2,a3,21c8 <core_state_transition+0x258>
                    transition_count[CORE_INVALID]++;
    21b0:	0045a683          	lw	a3,4(a1)
    21b4:	00078713          	mv	a4,a5
                    state = CORE_INVALID;
    21b8:	00100793          	li	a5,1
                    transition_count[CORE_INVALID]++;
    21bc:	00168693          	addi	a3,a3,1
    21c0:	00d5a223          	sw	a3,4(a1)
    21c4:	eddff06f          	j	20a0 <core_state_transition+0x130>
    for (; *str && state != CORE_INVALID; str++)
    21c8:	00174683          	lbu	a3,1(a4)
        if (NEXT_SYMBOL == ',') /* end of this input */
    21cc:	00178813          	addi	a6,a5,1
    21d0:	00078713          	mv	a4,a5
    for (; *str && state != CORE_INVALID; str++)
    21d4:	06068a63          	beqz	a3,2248 <core_state_transition+0x2d8>
        if (NEXT_SYMBOL == ',') /* end of this input */
    21d8:	0b168263          	beq	a3,a7,227c <core_state_transition+0x30c>
    21dc:	00080793          	mv	a5,a6
    21e0:	fc5ff06f          	j	21a4 <core_state_transition+0x234>
    for (; *str && state != CORE_INVALID; str++)
    21e4:	0017c683          	lbu	a3,1(a5)
        if (NEXT_SYMBOL == ',') /* end of this input */
    21e8:	00160713          	addi	a4,a2,1
    21ec:	00060793          	mv	a5,a2
    for (; *str && state != CORE_INVALID; str++)
    21f0:	04068263          	beqz	a3,2234 <core_state_transition+0x2c4>
        if (NEXT_SYMBOL == ',') /* end of this input */
    21f4:	04668263          	beq	a3,t1,2238 <core_state_transition+0x2c8>
    21f8:	00070613          	mv	a2,a4
    21fc:	e25ff06f          	j	2020 <core_state_transition+0xb0>
                transition_count[CORE_START]++;
    2200:	0115a023          	sw	a7,0(a1)
    for (; *str && state != CORE_INVALID; str++)
    2204:	0017c683          	lbu	a3,1(a5)
    2208:	02068863          	beqz	a3,2238 <core_state_transition+0x2c8>
        if (NEXT_SYMBOL == ',') /* end of this input */
    220c:	00278613          	addi	a2,a5,2
    2210:	03068263          	beq	a3,a6,2234 <core_state_transition+0x2c4>
    2214:	00070793          	mv	a5,a4
    2218:	dfdff06f          	j	2014 <core_state_transition+0xa4>
                    transition_count[CORE_S1]++;
    221c:	00c5a423          	sw	a2,8(a1)
    for (; *str && state != CORE_INVALID; str++)
    2220:	0027c683          	lbu	a3,2(a5)
    2224:	00068a63          	beqz	a3,2238 <core_state_transition+0x2c8>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2228:	02c00793          	li	a5,44
    222c:	00170613          	addi	a2,a4,1
    2230:	fef692e3          	bne	a3,a5,2214 <core_state_transition+0x2a4>
    for (; *str && state != CORE_INVALID; str++)
    2234:	00060713          	mv	a4,a2
                    state = CORE_FLOAT;
    2238:	00500793          	li	a5,5
    223c:	e65ff06f          	j	20a0 <core_state_transition+0x130>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2240:	00000793          	li	a5,0
            break;
    2244:	e5dff06f          	j	20a0 <core_state_transition+0x130>
    for (; *str && state != CORE_INVALID; str++)
    2248:	00078713          	mv	a4,a5
    224c:	00700793          	li	a5,7
    2250:	e51ff06f          	j	20a0 <core_state_transition+0x130>
                    state = CORE_EXPONENT;
    2254:	00600793          	li	a5,6
    2258:	e49ff06f          	j	20a0 <core_state_transition+0x130>
    for (; *str && state != CORE_INVALID; str++)
    225c:	00060713          	mv	a4,a2
                    state = CORE_S2;
    2260:	00300793          	li	a5,3
    2264:	e3dff06f          	j	20a0 <core_state_transition+0x130>
    for (; *str && state != CORE_INVALID; str++)
    2268:	00078713          	mv	a4,a5
    enum CORE_STATE state = CORE_START;
    226c:	00000793          	li	a5,0
    2270:	e31ff06f          	j	20a0 <core_state_transition+0x130>
                    state = CORE_S1;
    2274:	00200793          	li	a5,2
    2278:	e29ff06f          	j	20a0 <core_state_transition+0x130>
        if (NEXT_SYMBOL == ',') /* end of this input */
    227c:	00080713          	mv	a4,a6
    2280:	00700793          	li	a5,7
    2284:	e1dff06f          	j	20a0 <core_state_transition+0x130>
    for (; *str && state != CORE_INVALID; str++)
    2288:	00078713          	mv	a4,a5
                    state = CORE_FLOAT;
    228c:	00500793          	li	a5,5
    2290:	e11ff06f          	j	20a0 <core_state_transition+0x130>
        if (NEXT_SYMBOL == ',') /* end of this input */
    2294:	00060713          	mv	a4,a2
    2298:	00400793          	li	a5,4
    229c:	e05ff06f          	j	20a0 <core_state_transition+0x130>

000022a0 <core_bench_state>:
{
    22a0:	f8010113          	addi	sp,sp,-128
    22a4:	06812c23          	sw	s0,120(sp)
    22a8:	06912a23          	sw	s1,116(sp)
    22ac:	07212823          	sw	s2,112(sp)
    22b0:	07312623          	sw	s3,108(sp)
    22b4:	07412423          	sw	s4,104(sp)
    22b8:	07612023          	sw	s6,96(sp)
    22bc:	05712e23          	sw	s7,92(sp)
    22c0:	06112e23          	sw	ra,124(sp)
    22c4:	07512223          	sw	s5,100(sp)
    22c8:	00058413          	mv	s0,a1
    while (*p != 0)
    22cc:	0005c583          	lbu	a1,0(a1)
    22d0:	03010493          	addi	s1,sp,48
    22d4:	02012823          	sw	zero,48(sp)
    ee_u8 *p = memblock;
    22d8:	00812623          	sw	s0,12(sp)
    for (i = 0; i < NUM_CORE_STATES; i++)
    22dc:	0004a223          	sw	zero,4(s1)
    22e0:	0004a423          	sw	zero,8(s1)
    22e4:	0004a623          	sw	zero,12(s1)
    22e8:	0004a823          	sw	zero,16(s1)
    22ec:	0004aa23          	sw	zero,20(s1)
    22f0:	0004ac23          	sw	zero,24(s1)
    22f4:	0004ae23          	sw	zero,28(s1)
    22f8:	00012823          	sw	zero,16(sp)
    22fc:	00012a23          	sw	zero,20(sp)
    2300:	00012c23          	sw	zero,24(sp)
    2304:	00012e23          	sw	zero,28(sp)
    2308:	02012023          	sw	zero,32(sp)
    230c:	02012223          	sw	zero,36(sp)
    2310:	02012423          	sw	zero,40(sp)
    2314:	02012623          	sw	zero,44(sp)
{
    2318:	00050b93          	mv	s7,a0
    231c:	00060b13          	mv	s6,a2
    2320:	00068a13          	mv	s4,a3
    2324:	00070913          	mv	s2,a4
    2328:	00078993          	mv	s3,a5
    while (*p != 0)
    232c:	16058663          	beqz	a1,2498 <core_bench_state+0x1f8>
    2330:	00c10a93          	addi	s5,sp,12
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    2334:	00048593          	mv	a1,s1
    2338:	000a8513          	mv	a0,s5
    233c:	00000097          	auipc	ra,0x0
    2340:	c34080e7          	jalr	-972(ra) # 1f70 <core_state_transition>
        final_counts[fstate]++;
    2344:	05010793          	addi	a5,sp,80
    2348:	00251513          	slli	a0,a0,0x2
    234c:	00a78533          	add	a0,a5,a0
    while (*p != 0)
    2350:	00c12703          	lw	a4,12(sp)
        final_counts[fstate]++;
    2354:	fc052783          	lw	a5,-64(a0)
    while (*p != 0)
    2358:	00074703          	lbu	a4,0(a4)
        final_counts[fstate]++;
    235c:	00178793          	addi	a5,a5,1
    2360:	fcf52023          	sw	a5,-64(a0)
    while (*p != 0)
    2364:	fc0718e3          	bnez	a4,2334 <core_bench_state+0x94>
    p = memblock;
    2368:	00812623          	sw	s0,12(sp)
    while (p < (memblock + blksize))
    236c:	01740bb3          	add	s7,s0,s7
    2370:	00044583          	lbu	a1,0(s0)
    2374:	13747863          	bgeu	s0,s7,24a4 <core_bench_state+0x204>
        if (*p != ',')
    2378:	02c00693          	li	a3,44
{
    237c:	00040793          	mv	a5,s0
            *p ^= (ee_u8)seed1;
    2380:	0165c733          	xor	a4,a1,s6
        if (*p != ',')
    2384:	02d58263          	beq	a1,a3,23a8 <core_bench_state+0x108>
            *p ^= (ee_u8)seed1;
    2388:	00e78023          	sb	a4,0(a5)
        p += step;
    238c:	00c12783          	lw	a5,12(sp)
    2390:	012787b3          	add	a5,a5,s2
    2394:	00f12623          	sw	a5,12(sp)
    while (p < (memblock + blksize))
    2398:	0177fe63          	bgeu	a5,s7,23b4 <core_bench_state+0x114>
    239c:	0007c583          	lbu	a1,0(a5)
            *p ^= (ee_u8)seed1;
    23a0:	0165c733          	xor	a4,a1,s6
        if (*p != ',')
    23a4:	fed592e3          	bne	a1,a3,2388 <core_bench_state+0xe8>
        p += step;
    23a8:	012787b3          	add	a5,a5,s2
    23ac:	00f12623          	sw	a5,12(sp)
    while (p < (memblock + blksize))
    23b0:	ff77e6e3          	bltu	a5,s7,239c <core_bench_state+0xfc>
    while (*p != 0)
    23b4:	00044783          	lbu	a5,0(s0)
    p = memblock;
    23b8:	00812623          	sw	s0,12(sp)
    while (*p != 0)
    23bc:	00c10a93          	addi	s5,sp,12
    23c0:	04078063          	beqz	a5,2400 <core_bench_state+0x160>
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    23c4:	00048593          	mv	a1,s1
    23c8:	000a8513          	mv	a0,s5
    23cc:	00000097          	auipc	ra,0x0
    23d0:	ba4080e7          	jalr	-1116(ra) # 1f70 <core_state_transition>
        final_counts[fstate]++;
    23d4:	05010793          	addi	a5,sp,80
    23d8:	00251513          	slli	a0,a0,0x2
    23dc:	00a78533          	add	a0,a5,a0
    while (*p != 0)
    23e0:	00c12703          	lw	a4,12(sp)
        final_counts[fstate]++;
    23e4:	fc052783          	lw	a5,-64(a0)
    while (*p != 0)
    23e8:	00074703          	lbu	a4,0(a4)
        final_counts[fstate]++;
    23ec:	00178793          	addi	a5,a5,1
    23f0:	fcf52023          	sw	a5,-64(a0)
    while (*p != 0)
    23f4:	fc0718e3          	bnez	a4,23c4 <core_bench_state+0x124>
    p = memblock;
    23f8:	00812623          	sw	s0,12(sp)
    while (p < (memblock + blksize))
    23fc:	03747463          	bgeu	s0,s7,2424 <core_bench_state+0x184>
        if (*p != ',')
    2400:	02c00693          	li	a3,44
    2404:	00044783          	lbu	a5,0(s0)
            *p ^= (ee_u8)seed2;
    2408:	0147c733          	xor	a4,a5,s4
        if (*p != ',')
    240c:	06d78e63          	beq	a5,a3,2488 <core_bench_state+0x1e8>
            *p ^= (ee_u8)seed2;
    2410:	00e40023          	sb	a4,0(s0)
        p += step;
    2414:	00c12403          	lw	s0,12(sp)
    2418:	01240433          	add	s0,s0,s2
    241c:	00812623          	sw	s0,12(sp)
    while (p < (memblock + blksize))
    2420:	ff7462e3          	bltu	s0,s7,2404 <core_bench_state+0x164>
    2424:	01010413          	addi	s0,sp,16
    2428:	00048913          	mv	s2,s1
        crc = crcu32(final_counts[i], crc);
    242c:	00042503          	lw	a0,0(s0)
    2430:	00098593          	mv	a1,s3
    2434:	00440413          	addi	s0,s0,4
    2438:	00000097          	auipc	ra,0x0
    243c:	358080e7          	jalr	856(ra) # 2790 <crcu32>
        crc = crcu32(track_counts[i], crc);
    2440:	00050593          	mv	a1,a0
    2444:	00092503          	lw	a0,0(s2)
    2448:	00490913          	addi	s2,s2,4
    244c:	00000097          	auipc	ra,0x0
    2450:	344080e7          	jalr	836(ra) # 2790 <crcu32>
    2454:	00050993          	mv	s3,a0
    for (i = 0; i < NUM_CORE_STATES; i++)
    2458:	fc849ae3          	bne	s1,s0,242c <core_bench_state+0x18c>
}
    245c:	07c12083          	lw	ra,124(sp)
    2460:	07812403          	lw	s0,120(sp)
    2464:	07412483          	lw	s1,116(sp)
    2468:	07012903          	lw	s2,112(sp)
    246c:	06c12983          	lw	s3,108(sp)
    2470:	06812a03          	lw	s4,104(sp)
    2474:	06412a83          	lw	s5,100(sp)
    2478:	06012b03          	lw	s6,96(sp)
    247c:	05c12b83          	lw	s7,92(sp)
    2480:	08010113          	addi	sp,sp,128
    2484:	00008067          	ret
        p += step;
    2488:	01240433          	add	s0,s0,s2
    248c:	00812623          	sw	s0,12(sp)
    while (p < (memblock + blksize))
    2490:	f7746ae3          	bltu	s0,s7,2404 <core_bench_state+0x164>
    2494:	f91ff06f          	j	2424 <core_bench_state+0x184>
    while (p < (memblock + blksize))
    2498:	00a40bb3          	add	s7,s0,a0
    249c:	ed746ee3          	bltu	s0,s7,2378 <core_bench_state+0xd8>
    24a0:	f85ff06f          	j	2424 <core_bench_state+0x184>
    while (*p != 0)
    24a4:	f20590e3          	bnez	a1,23c4 <core_bench_state+0x124>
    24a8:	f7dff06f          	j	2424 <core_bench_state+0x184>

000024ac <get_seed_32>:
extern volatile ee_s32 seed5_volatile;
ee_s32
get_seed_32(int i)
{
    ee_s32 retval;
    switch (i)
    24ac:	00500793          	li	a5,5
    24b0:	04a7ec63          	bltu	a5,a0,2508 <get_seed_32+0x5c>
    24b4:	010007b7          	lui	a5,0x1000
    24b8:	52478793          	addi	a5,a5,1316 # 1000524 <scipat+0xc0>
    24bc:	00251513          	slli	a0,a0,0x2
    24c0:	00f50533          	add	a0,a0,a5
    24c4:	00052783          	lw	a5,0(a0)
    24c8:	00078067          	jr	a5
            break;
        case 4:
            retval = seed4_volatile;
            break;
        case 5:
            retval = seed5_volatile;
    24cc:	010017b7          	lui	a5,0x1001
    24d0:	bb87a503          	lw	a0,-1096(a5) # 1000bb8 <seed5_volatile>
            break;
    24d4:	00008067          	ret
            retval = seed1_volatile;
    24d8:	010017b7          	lui	a5,0x1001
    24dc:	bb07a503          	lw	a0,-1104(a5) # 1000bb0 <seed1_volatile>
            break;
    24e0:	00008067          	ret
            retval = seed2_volatile;
    24e4:	010017b7          	lui	a5,0x1001
    24e8:	bb47a503          	lw	a0,-1100(a5) # 1000bb4 <seed2_volatile>
            break;
    24ec:	00008067          	ret
            retval = seed3_volatile;
    24f0:	010017b7          	lui	a5,0x1001
    24f4:	ba47a503          	lw	a0,-1116(a5) # 1000ba4 <seed3_volatile>
            break;
    24f8:	00008067          	ret
            retval = seed4_volatile;
    24fc:	010017b7          	lui	a5,0x1001
    2500:	ba87a503          	lw	a0,-1112(a5) # 1000ba8 <seed4_volatile>
            break;
    2504:	00008067          	ret
        default:
            retval = 0;
    2508:	00000513          	li	a0,0
            break;
    }
    return retval;
}
    250c:	00008067          	ret

00002510 <crcu16>:
{
    ee_u8 i = 0, x16 = 0, carry = 0;

    for (i = 0; i < 8; i++)
    {
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2510:	00a5c633          	xor	a2,a1,a0
    return crc;
}
ee_u16
crcu16(ee_u16 newval, ee_u16 crc)
{
    crc = crcu8((ee_u8)(newval), crc);
    2514:	0ff57693          	andi	a3,a0,255
        if (x16 == 1)
    2518:	00167613          	andi	a2,a2,1
        data >>= 1;
    251c:	0016d713          	srli	a4,a3,0x1
        if (x16 == 1)
    2520:	0015d793          	srli	a5,a1,0x1
    2524:	00060c63          	beqz	a2,253c <crcu16+0x2c>
            crc |= 0x8000;
    2528:	ffffa637          	lui	a2,0xffffa
    252c:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2530:	00c7c7b3          	xor	a5,a5,a2
    2534:	01079793          	slli	a5,a5,0x10
    2538:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    253c:	00e7c733          	xor	a4,a5,a4
        if (x16 == 1)
    2540:	00177613          	andi	a2,a4,1
    2544:	0017d793          	srli	a5,a5,0x1
        data >>= 1;
    2548:	0026d713          	srli	a4,a3,0x2
        if (x16 == 1)
    254c:	00060c63          	beqz	a2,2564 <crcu16+0x54>
            crc |= 0x8000;
    2550:	ffffa637          	lui	a2,0xffffa
    2554:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2558:	00c7c7b3          	xor	a5,a5,a2
    255c:	01079793          	slli	a5,a5,0x10
    2560:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2564:	00e7c733          	xor	a4,a5,a4
        if (x16 == 1)
    2568:	00177713          	andi	a4,a4,1
        data >>= 1;
    256c:	0036d613          	srli	a2,a3,0x3
        if (x16 == 1)
    2570:	0017d793          	srli	a5,a5,0x1
    2574:	00070c63          	beqz	a4,258c <crcu16+0x7c>
            crc |= 0x8000;
    2578:	ffffa737          	lui	a4,0xffffa
    257c:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2580:	00e7c7b3          	xor	a5,a5,a4
    2584:	01079793          	slli	a5,a5,0x10
    2588:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    258c:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    2590:	00167613          	andi	a2,a2,1
        data >>= 1;
    2594:	0046d713          	srli	a4,a3,0x4
        if (x16 == 1)
    2598:	0017d793          	srli	a5,a5,0x1
    259c:	00060c63          	beqz	a2,25b4 <crcu16+0xa4>
            crc |= 0x8000;
    25a0:	ffffa637          	lui	a2,0xffffa
    25a4:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    25a8:	00c7c7b3          	xor	a5,a5,a2
    25ac:	01079793          	slli	a5,a5,0x10
    25b0:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    25b4:	00e7c733          	xor	a4,a5,a4
        if (x16 == 1)
    25b8:	00177713          	andi	a4,a4,1
        data >>= 1;
    25bc:	0056d613          	srli	a2,a3,0x5
        if (x16 == 1)
    25c0:	0017d793          	srli	a5,a5,0x1
    25c4:	00070c63          	beqz	a4,25dc <crcu16+0xcc>
            crc |= 0x8000;
    25c8:	ffffa737          	lui	a4,0xffffa
    25cc:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    25d0:	00e7c7b3          	xor	a5,a5,a4
    25d4:	01079793          	slli	a5,a5,0x10
    25d8:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    25dc:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    25e0:	00167613          	andi	a2,a2,1
        data >>= 1;
    25e4:	0066d713          	srli	a4,a3,0x6
        if (x16 == 1)
    25e8:	0017d793          	srli	a5,a5,0x1
    25ec:	00060c63          	beqz	a2,2604 <crcu16+0xf4>
            crc |= 0x8000;
    25f0:	ffffa637          	lui	a2,0xffffa
    25f4:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    25f8:	00c7c7b3          	xor	a5,a5,a2
    25fc:	01079793          	slli	a5,a5,0x10
    2600:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2604:	00e7c733          	xor	a4,a5,a4
        if (x16 == 1)
    2608:	00177713          	andi	a4,a4,1
        data >>= 1;
    260c:	0076d693          	srli	a3,a3,0x7
        if (x16 == 1)
    2610:	0017d793          	srli	a5,a5,0x1
    2614:	00070c63          	beqz	a4,262c <crcu16+0x11c>
            crc |= 0x8000;
    2618:	ffffa737          	lui	a4,0xffffa
    261c:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2620:	00e7c7b3          	xor	a5,a5,a4
    2624:	01079793          	slli	a5,a5,0x10
    2628:	0107d793          	srli	a5,a5,0x10
        if (x16 == 1)
    262c:	0017f713          	andi	a4,a5,1
    2630:	0017d793          	srli	a5,a5,0x1
    2634:	00d70c63          	beq	a4,a3,264c <crcu16+0x13c>
            crc |= 0x8000;
    2638:	ffffa737          	lui	a4,0xffffa
    263c:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2640:	00e7c7b3          	xor	a5,a5,a4
    2644:	01079793          	slli	a5,a5,0x10
    2648:	0107d793          	srli	a5,a5,0x10
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    264c:	00855513          	srli	a0,a0,0x8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2650:	00a7c633          	xor	a2,a5,a0
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2654:	0ff57713          	andi	a4,a0,255
        if (x16 == 1)
    2658:	00167613          	andi	a2,a2,1
        data >>= 1;
    265c:	00175693          	srli	a3,a4,0x1
        if (x16 == 1)
    2660:	0017d513          	srli	a0,a5,0x1
    2664:	00060c63          	beqz	a2,267c <crcu16+0x16c>
            crc |= 0x8000;
    2668:	ffffa7b7          	lui	a5,0xffffa
    266c:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2670:	00f54533          	xor	a0,a0,a5
    2674:	01051513          	slli	a0,a0,0x10
    2678:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    267c:	00a6c6b3          	xor	a3,a3,a0
        if (x16 == 1)
    2680:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2684:	00275793          	srli	a5,a4,0x2
        if (x16 == 1)
    2688:	00155513          	srli	a0,a0,0x1
    268c:	00068c63          	beqz	a3,26a4 <crcu16+0x194>
            crc |= 0x8000;
    2690:	ffffa6b7          	lui	a3,0xffffa
    2694:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2698:	00d54533          	xor	a0,a0,a3
    269c:	01051513          	slli	a0,a0,0x10
    26a0:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    26a4:	00f547b3          	xor	a5,a0,a5
        if (x16 == 1)
    26a8:	0017f793          	andi	a5,a5,1
        data >>= 1;
    26ac:	00375693          	srli	a3,a4,0x3
        if (x16 == 1)
    26b0:	00155513          	srli	a0,a0,0x1
    26b4:	00078c63          	beqz	a5,26cc <crcu16+0x1bc>
            crc |= 0x8000;
    26b8:	ffffa7b7          	lui	a5,0xffffa
    26bc:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    26c0:	00f54533          	xor	a0,a0,a5
    26c4:	01051513          	slli	a0,a0,0x10
    26c8:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    26cc:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    26d0:	0016f693          	andi	a3,a3,1
        data >>= 1;
    26d4:	00475793          	srli	a5,a4,0x4
        if (x16 == 1)
    26d8:	00155513          	srli	a0,a0,0x1
    26dc:	00068c63          	beqz	a3,26f4 <crcu16+0x1e4>
            crc |= 0x8000;
    26e0:	ffffa6b7          	lui	a3,0xffffa
    26e4:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    26e8:	00d54533          	xor	a0,a0,a3
    26ec:	01051513          	slli	a0,a0,0x10
    26f0:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    26f4:	00f547b3          	xor	a5,a0,a5
        if (x16 == 1)
    26f8:	0017f793          	andi	a5,a5,1
        data >>= 1;
    26fc:	00575693          	srli	a3,a4,0x5
        if (x16 == 1)
    2700:	00155513          	srli	a0,a0,0x1
    2704:	00078c63          	beqz	a5,271c <crcu16+0x20c>
            crc |= 0x8000;
    2708:	ffffa7b7          	lui	a5,0xffffa
    270c:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2710:	00f54533          	xor	a0,a0,a5
    2714:	01051513          	slli	a0,a0,0x10
    2718:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    271c:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    2720:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2724:	00675793          	srli	a5,a4,0x6
        if (x16 == 1)
    2728:	00155513          	srli	a0,a0,0x1
    272c:	00068c63          	beqz	a3,2744 <crcu16+0x234>
            crc |= 0x8000;
    2730:	ffffa6b7          	lui	a3,0xffffa
    2734:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2738:	00d54533          	xor	a0,a0,a3
    273c:	01051513          	slli	a0,a0,0x10
    2740:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2744:	00f547b3          	xor	a5,a0,a5
        if (x16 == 1)
    2748:	0017f793          	andi	a5,a5,1
        data >>= 1;
    274c:	00775713          	srli	a4,a4,0x7
        if (x16 == 1)
    2750:	00155513          	srli	a0,a0,0x1
    2754:	00078c63          	beqz	a5,276c <crcu16+0x25c>
            crc |= 0x8000;
    2758:	ffffa7b7          	lui	a5,0xffffa
    275c:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2760:	00f54533          	xor	a0,a0,a5
    2764:	01051513          	slli	a0,a0,0x10
    2768:	01055513          	srli	a0,a0,0x10
        if (x16 == 1)
    276c:	00157793          	andi	a5,a0,1
    2770:	00155513          	srli	a0,a0,0x1
    2774:	00e78c63          	beq	a5,a4,278c <crcu16+0x27c>
            crc |= 0x8000;
    2778:	ffffa7b7          	lui	a5,0xffffa
    277c:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2780:	00f54533          	xor	a0,a0,a5
    2784:	01051513          	slli	a0,a0,0x10
    2788:	01055513          	srli	a0,a0,0x10
    return crc;
}
    278c:	00008067          	ret

00002790 <crcu32>:
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2790:	00a5c833          	xor	a6,a1,a0
    crc = crcu8((ee_u8)(newval), crc);
    2794:	0ff57693          	andi	a3,a0,255
    return crc;
}
ee_u16
crc16(ee_s16 newval, ee_u16 crc)
{
    return crcu16((ee_u16)newval, crc);
    2798:	01051713          	slli	a4,a0,0x10
        if (x16 == 1)
    279c:	00187813          	andi	a6,a6,1
    return crcu16((ee_u16)newval, crc);
    27a0:	01075713          	srli	a4,a4,0x10
        data >>= 1;
    27a4:	0016d613          	srli	a2,a3,0x1
        if (x16 == 1)
    27a8:	0015d793          	srli	a5,a1,0x1
    27ac:	00080c63          	beqz	a6,27c4 <crcu32+0x34>
            crc |= 0x8000;
    27b0:	ffffa5b7          	lui	a1,0xffffa
    27b4:	00158593          	addi	a1,a1,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    27b8:	00b7c7b3          	xor	a5,a5,a1
    27bc:	01079793          	slli	a5,a5,0x10
    27c0:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27c4:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    27c8:	00167593          	andi	a1,a2,1
    27cc:	0017d793          	srli	a5,a5,0x1
        data >>= 1;
    27d0:	0026d613          	srli	a2,a3,0x2
        if (x16 == 1)
    27d4:	00058c63          	beqz	a1,27ec <crcu32+0x5c>
            crc |= 0x8000;
    27d8:	ffffa5b7          	lui	a1,0xffffa
    27dc:	00158593          	addi	a1,a1,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    27e0:	00b7c7b3          	xor	a5,a5,a1
    27e4:	01079793          	slli	a5,a5,0x10
    27e8:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27ec:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    27f0:	00167613          	andi	a2,a2,1
        data >>= 1;
    27f4:	0036d593          	srli	a1,a3,0x3
        if (x16 == 1)
    27f8:	0017d793          	srli	a5,a5,0x1
    27fc:	00060c63          	beqz	a2,2814 <crcu32+0x84>
            crc |= 0x8000;
    2800:	ffffa637          	lui	a2,0xffffa
    2804:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2808:	00c7c7b3          	xor	a5,a5,a2
    280c:	01079793          	slli	a5,a5,0x10
    2810:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2814:	00b7c5b3          	xor	a1,a5,a1
        if (x16 == 1)
    2818:	0015f593          	andi	a1,a1,1
        data >>= 1;
    281c:	0046d613          	srli	a2,a3,0x4
        if (x16 == 1)
    2820:	0017d793          	srli	a5,a5,0x1
    2824:	00058c63          	beqz	a1,283c <crcu32+0xac>
            crc |= 0x8000;
    2828:	ffffa5b7          	lui	a1,0xffffa
    282c:	00158593          	addi	a1,a1,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2830:	00b7c7b3          	xor	a5,a5,a1
    2834:	01079793          	slli	a5,a5,0x10
    2838:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    283c:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    2840:	00167613          	andi	a2,a2,1
        data >>= 1;
    2844:	0056d593          	srli	a1,a3,0x5
        if (x16 == 1)
    2848:	0017d793          	srli	a5,a5,0x1
    284c:	00060c63          	beqz	a2,2864 <crcu32+0xd4>
            crc |= 0x8000;
    2850:	ffffa637          	lui	a2,0xffffa
    2854:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2858:	00c7c7b3          	xor	a5,a5,a2
    285c:	01079793          	slli	a5,a5,0x10
    2860:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2864:	00b7c5b3          	xor	a1,a5,a1
        if (x16 == 1)
    2868:	0015f593          	andi	a1,a1,1
        data >>= 1;
    286c:	0066d613          	srli	a2,a3,0x6
        if (x16 == 1)
    2870:	0017d793          	srli	a5,a5,0x1
    2874:	00058c63          	beqz	a1,288c <crcu32+0xfc>
            crc |= 0x8000;
    2878:	ffffa5b7          	lui	a1,0xffffa
    287c:	00158593          	addi	a1,a1,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2880:	00b7c7b3          	xor	a5,a5,a1
    2884:	01079793          	slli	a5,a5,0x10
    2888:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    288c:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    2890:	00167613          	andi	a2,a2,1
        data >>= 1;
    2894:	0076d693          	srli	a3,a3,0x7
        if (x16 == 1)
    2898:	0017d793          	srli	a5,a5,0x1
    289c:	00060c63          	beqz	a2,28b4 <crcu32+0x124>
            crc |= 0x8000;
    28a0:	ffffa637          	lui	a2,0xffffa
    28a4:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    28a8:	00c7c7b3          	xor	a5,a5,a2
    28ac:	01079793          	slli	a5,a5,0x10
    28b0:	0107d793          	srli	a5,a5,0x10
        if (x16 == 1)
    28b4:	0017f613          	andi	a2,a5,1
    28b8:	0017d793          	srli	a5,a5,0x1
    28bc:	00d60c63          	beq	a2,a3,28d4 <crcu32+0x144>
            crc |= 0x8000;
    28c0:	ffffa6b7          	lui	a3,0xffffa
    28c4:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    28c8:	00d7c7b3          	xor	a5,a5,a3
    28cc:	01079793          	slli	a5,a5,0x10
    28d0:	0107d793          	srli	a5,a5,0x10
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    28d4:	00875713          	srli	a4,a4,0x8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    28d8:	00e7c6b3          	xor	a3,a5,a4
        if (x16 == 1)
    28dc:	0016f693          	andi	a3,a3,1
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    28e0:	0ff77713          	andi	a4,a4,255
        data >>= 1;
    28e4:	00175613          	srli	a2,a4,0x1
        if (x16 == 1)
    28e8:	0017d793          	srli	a5,a5,0x1
    28ec:	00068c63          	beqz	a3,2904 <crcu32+0x174>
            crc |= 0x8000;
    28f0:	ffffa6b7          	lui	a3,0xffffa
    28f4:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    28f8:	00d7c7b3          	xor	a5,a5,a3
    28fc:	01079793          	slli	a5,a5,0x10
    2900:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2904:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    2908:	00167613          	andi	a2,a2,1
        data >>= 1;
    290c:	00275693          	srli	a3,a4,0x2
        if (x16 == 1)
    2910:	0017d793          	srli	a5,a5,0x1
    2914:	00060c63          	beqz	a2,292c <crcu32+0x19c>
            crc |= 0x8000;
    2918:	ffffa637          	lui	a2,0xffffa
    291c:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2920:	00c7c7b3          	xor	a5,a5,a2
    2924:	01079793          	slli	a5,a5,0x10
    2928:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    292c:	00d7c6b3          	xor	a3,a5,a3
        if (x16 == 1)
    2930:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2934:	00375613          	srli	a2,a4,0x3
        if (x16 == 1)
    2938:	0017d793          	srli	a5,a5,0x1
    293c:	00068c63          	beqz	a3,2954 <crcu32+0x1c4>
            crc |= 0x8000;
    2940:	ffffa6b7          	lui	a3,0xffffa
    2944:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2948:	00d7c7b3          	xor	a5,a5,a3
    294c:	01079793          	slli	a5,a5,0x10
    2950:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2954:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    2958:	00167613          	andi	a2,a2,1
        data >>= 1;
    295c:	00475693          	srli	a3,a4,0x4
        if (x16 == 1)
    2960:	0017d793          	srli	a5,a5,0x1
    2964:	00060c63          	beqz	a2,297c <crcu32+0x1ec>
            crc |= 0x8000;
    2968:	ffffa637          	lui	a2,0xffffa
    296c:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2970:	00c7c7b3          	xor	a5,a5,a2
    2974:	01079793          	slli	a5,a5,0x10
    2978:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    297c:	00d7c6b3          	xor	a3,a5,a3
        if (x16 == 1)
    2980:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2984:	00575613          	srli	a2,a4,0x5
        if (x16 == 1)
    2988:	0017d793          	srli	a5,a5,0x1
    298c:	00068c63          	beqz	a3,29a4 <crcu32+0x214>
            crc |= 0x8000;
    2990:	ffffa6b7          	lui	a3,0xffffa
    2994:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2998:	00d7c7b3          	xor	a5,a5,a3
    299c:	01079793          	slli	a5,a5,0x10
    29a0:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29a4:	00c7c633          	xor	a2,a5,a2
        if (x16 == 1)
    29a8:	00167613          	andi	a2,a2,1
        data >>= 1;
    29ac:	00675693          	srli	a3,a4,0x6
        if (x16 == 1)
    29b0:	0017d793          	srli	a5,a5,0x1
    29b4:	00060c63          	beqz	a2,29cc <crcu32+0x23c>
            crc |= 0x8000;
    29b8:	ffffa637          	lui	a2,0xffffa
    29bc:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    29c0:	00c7c7b3          	xor	a5,a5,a2
    29c4:	01079793          	slli	a5,a5,0x10
    29c8:	0107d793          	srli	a5,a5,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29cc:	00d7c6b3          	xor	a3,a5,a3
        if (x16 == 1)
    29d0:	0016f693          	andi	a3,a3,1
        data >>= 1;
    29d4:	00775713          	srli	a4,a4,0x7
        if (x16 == 1)
    29d8:	0017d793          	srli	a5,a5,0x1
    29dc:	00068c63          	beqz	a3,29f4 <crcu32+0x264>
            crc |= 0x8000;
    29e0:	ffffa6b7          	lui	a3,0xffffa
    29e4:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    29e8:	00d7c7b3          	xor	a5,a5,a3
    29ec:	01079793          	slli	a5,a5,0x10
    29f0:	0107d793          	srli	a5,a5,0x10
        if (x16 == 1)
    29f4:	0017f693          	andi	a3,a5,1
    29f8:	0017d793          	srli	a5,a5,0x1
    29fc:	00e68c63          	beq	a3,a4,2a14 <crcu32+0x284>
            crc |= 0x8000;
    2a00:	ffffa737          	lui	a4,0xffffa
    2a04:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2a08:	00e7c7b3          	xor	a5,a5,a4
    2a0c:	01079793          	slli	a5,a5,0x10
    2a10:	0107d793          	srli	a5,a5,0x10
    crc = crc16((ee_s16)(newval >> 16), crc);
    2a14:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a18:	00a7c5b3          	xor	a1,a5,a0
    crc = crcu8((ee_u8)(newval), crc);
    2a1c:	0ff57713          	andi	a4,a0,255
    return crcu16((ee_u16)newval, crc);
    2a20:	01051693          	slli	a3,a0,0x10
        if (x16 == 1)
    2a24:	0015f593          	andi	a1,a1,1
    return crcu16((ee_u16)newval, crc);
    2a28:	0106d693          	srli	a3,a3,0x10
        data >>= 1;
    2a2c:	00175613          	srli	a2,a4,0x1
        if (x16 == 1)
    2a30:	0017d513          	srli	a0,a5,0x1
    2a34:	00058c63          	beqz	a1,2a4c <crcu32+0x2bc>
            crc |= 0x8000;
    2a38:	ffffa7b7          	lui	a5,0xffffa
    2a3c:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2a40:	00f54533          	xor	a0,a0,a5
    2a44:	01051513          	slli	a0,a0,0x10
    2a48:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a4c:	00c54633          	xor	a2,a0,a2
        if (x16 == 1)
    2a50:	00167613          	andi	a2,a2,1
        data >>= 1;
    2a54:	00275793          	srli	a5,a4,0x2
        if (x16 == 1)
    2a58:	00155513          	srli	a0,a0,0x1
    2a5c:	00060c63          	beqz	a2,2a74 <crcu32+0x2e4>
            crc |= 0x8000;
    2a60:	ffffa637          	lui	a2,0xffffa
    2a64:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2a68:	00c54533          	xor	a0,a0,a2
    2a6c:	01051513          	slli	a0,a0,0x10
    2a70:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a74:	00f547b3          	xor	a5,a0,a5
        if (x16 == 1)
    2a78:	0017f793          	andi	a5,a5,1
        data >>= 1;
    2a7c:	00375613          	srli	a2,a4,0x3
        if (x16 == 1)
    2a80:	00155513          	srli	a0,a0,0x1
    2a84:	00078c63          	beqz	a5,2a9c <crcu32+0x30c>
            crc |= 0x8000;
    2a88:	ffffa7b7          	lui	a5,0xffffa
    2a8c:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2a90:	00f54533          	xor	a0,a0,a5
    2a94:	01051513          	slli	a0,a0,0x10
    2a98:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a9c:	00c54633          	xor	a2,a0,a2
        if (x16 == 1)
    2aa0:	00167613          	andi	a2,a2,1
        data >>= 1;
    2aa4:	00475793          	srli	a5,a4,0x4
        if (x16 == 1)
    2aa8:	00155513          	srli	a0,a0,0x1
    2aac:	00060c63          	beqz	a2,2ac4 <crcu32+0x334>
            crc |= 0x8000;
    2ab0:	ffffa637          	lui	a2,0xffffa
    2ab4:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2ab8:	00c54533          	xor	a0,a0,a2
    2abc:	01051513          	slli	a0,a0,0x10
    2ac0:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ac4:	00f547b3          	xor	a5,a0,a5
        if (x16 == 1)
    2ac8:	0017f793          	andi	a5,a5,1
        data >>= 1;
    2acc:	00575613          	srli	a2,a4,0x5
        if (x16 == 1)
    2ad0:	00155513          	srli	a0,a0,0x1
    2ad4:	00078c63          	beqz	a5,2aec <crcu32+0x35c>
            crc |= 0x8000;
    2ad8:	ffffa7b7          	lui	a5,0xffffa
    2adc:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2ae0:	00f54533          	xor	a0,a0,a5
    2ae4:	01051513          	slli	a0,a0,0x10
    2ae8:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2aec:	00c54633          	xor	a2,a0,a2
        if (x16 == 1)
    2af0:	00167613          	andi	a2,a2,1
        data >>= 1;
    2af4:	00675793          	srli	a5,a4,0x6
        if (x16 == 1)
    2af8:	00155513          	srli	a0,a0,0x1
    2afc:	00060c63          	beqz	a2,2b14 <crcu32+0x384>
            crc |= 0x8000;
    2b00:	ffffa637          	lui	a2,0xffffa
    2b04:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2b08:	00c54533          	xor	a0,a0,a2
    2b0c:	01051513          	slli	a0,a0,0x10
    2b10:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b14:	00f547b3          	xor	a5,a0,a5
        if (x16 == 1)
    2b18:	0017f793          	andi	a5,a5,1
        data >>= 1;
    2b1c:	00775713          	srli	a4,a4,0x7
        if (x16 == 1)
    2b20:	00155513          	srli	a0,a0,0x1
    2b24:	00078c63          	beqz	a5,2b3c <crcu32+0x3ac>
            crc |= 0x8000;
    2b28:	ffffa7b7          	lui	a5,0xffffa
    2b2c:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2b30:	00f54533          	xor	a0,a0,a5
    2b34:	01051513          	slli	a0,a0,0x10
    2b38:	01055513          	srli	a0,a0,0x10
        if (x16 == 1)
    2b3c:	00157793          	andi	a5,a0,1
    2b40:	00155513          	srli	a0,a0,0x1
    2b44:	00e78c63          	beq	a5,a4,2b5c <crcu32+0x3cc>
            crc |= 0x8000;
    2b48:	ffffa7b7          	lui	a5,0xffffa
    2b4c:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2b50:	00f54533          	xor	a0,a0,a5
    2b54:	01051513          	slli	a0,a0,0x10
    2b58:	01055513          	srli	a0,a0,0x10
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b5c:	0086d793          	srli	a5,a3,0x8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b60:	00f54733          	xor	a4,a0,a5
        if (x16 == 1)
    2b64:	00177713          	andi	a4,a4,1
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b68:	0ff7f793          	andi	a5,a5,255
        data >>= 1;
    2b6c:	0017d693          	srli	a3,a5,0x1
        if (x16 == 1)
    2b70:	00155513          	srli	a0,a0,0x1
    2b74:	00070c63          	beqz	a4,2b8c <crcu32+0x3fc>
            crc |= 0x8000;
    2b78:	ffffa737          	lui	a4,0xffffa
    2b7c:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2b80:	00e54533          	xor	a0,a0,a4
    2b84:	01051513          	slli	a0,a0,0x10
    2b88:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b8c:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    2b90:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2b94:	0027d713          	srli	a4,a5,0x2
        if (x16 == 1)
    2b98:	00155513          	srli	a0,a0,0x1
    2b9c:	00068c63          	beqz	a3,2bb4 <crcu32+0x424>
            crc |= 0x8000;
    2ba0:	ffffa6b7          	lui	a3,0xffffa
    2ba4:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2ba8:	00d54533          	xor	a0,a0,a3
    2bac:	01051513          	slli	a0,a0,0x10
    2bb0:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bb4:	00a74733          	xor	a4,a4,a0
        if (x16 == 1)
    2bb8:	00177713          	andi	a4,a4,1
        data >>= 1;
    2bbc:	0037d693          	srli	a3,a5,0x3
        if (x16 == 1)
    2bc0:	00155513          	srli	a0,a0,0x1
    2bc4:	00070c63          	beqz	a4,2bdc <crcu32+0x44c>
            crc |= 0x8000;
    2bc8:	ffffa737          	lui	a4,0xffffa
    2bcc:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2bd0:	00e54533          	xor	a0,a0,a4
    2bd4:	01051513          	slli	a0,a0,0x10
    2bd8:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bdc:	00a6c6b3          	xor	a3,a3,a0
        if (x16 == 1)
    2be0:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2be4:	0047d713          	srli	a4,a5,0x4
        if (x16 == 1)
    2be8:	00155513          	srli	a0,a0,0x1
    2bec:	00068c63          	beqz	a3,2c04 <crcu32+0x474>
            crc |= 0x8000;
    2bf0:	ffffa6b7          	lui	a3,0xffffa
    2bf4:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2bf8:	00d54533          	xor	a0,a0,a3
    2bfc:	01051513          	slli	a0,a0,0x10
    2c00:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c04:	00a74733          	xor	a4,a4,a0
        if (x16 == 1)
    2c08:	00177713          	andi	a4,a4,1
        data >>= 1;
    2c0c:	0057d693          	srli	a3,a5,0x5
        if (x16 == 1)
    2c10:	00155513          	srli	a0,a0,0x1
    2c14:	00070c63          	beqz	a4,2c2c <crcu32+0x49c>
            crc |= 0x8000;
    2c18:	ffffa737          	lui	a4,0xffffa
    2c1c:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2c20:	00e54533          	xor	a0,a0,a4
    2c24:	01051513          	slli	a0,a0,0x10
    2c28:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c2c:	00a6c6b3          	xor	a3,a3,a0
        if (x16 == 1)
    2c30:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2c34:	0067d713          	srli	a4,a5,0x6
        if (x16 == 1)
    2c38:	00155513          	srli	a0,a0,0x1
    2c3c:	00068c63          	beqz	a3,2c54 <crcu32+0x4c4>
            crc |= 0x8000;
    2c40:	ffffa6b7          	lui	a3,0xffffa
    2c44:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2c48:	00d54533          	xor	a0,a0,a3
    2c4c:	01051513          	slli	a0,a0,0x10
    2c50:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c54:	00a74733          	xor	a4,a4,a0
        if (x16 == 1)
    2c58:	00177713          	andi	a4,a4,1
        data >>= 1;
    2c5c:	0077d793          	srli	a5,a5,0x7
        if (x16 == 1)
    2c60:	00155513          	srli	a0,a0,0x1
    2c64:	00070c63          	beqz	a4,2c7c <crcu32+0x4ec>
            crc |= 0x8000;
    2c68:	ffffa737          	lui	a4,0xffffa
    2c6c:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2c70:	00e54533          	xor	a0,a0,a4
    2c74:	01051513          	slli	a0,a0,0x10
    2c78:	01055513          	srli	a0,a0,0x10
        if (x16 == 1)
    2c7c:	00157713          	andi	a4,a0,1
    2c80:	00155513          	srli	a0,a0,0x1
    2c84:	00f70c63          	beq	a4,a5,2c9c <crcu32+0x50c>
            crc |= 0x8000;
    2c88:	ffffa7b7          	lui	a5,0xffffa
    2c8c:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2c90:	00f54533          	xor	a0,a0,a5
    2c94:	01051513          	slli	a0,a0,0x10
    2c98:	01055513          	srli	a0,a0,0x10
}
    2c9c:	00008067          	ret

00002ca0 <crc16>:
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ca0:	00a5c633          	xor	a2,a1,a0
    crc = crcu8((ee_u8)(newval), crc);
    2ca4:	0ff57713          	andi	a4,a0,255
    return crcu16((ee_u16)newval, crc);
    2ca8:	01051793          	slli	a5,a0,0x10
        if (x16 == 1)
    2cac:	00167613          	andi	a2,a2,1
    return crcu16((ee_u16)newval, crc);
    2cb0:	0107d793          	srli	a5,a5,0x10
        data >>= 1;
    2cb4:	00175693          	srli	a3,a4,0x1
        if (x16 == 1)
    2cb8:	0015d513          	srli	a0,a1,0x1
    2cbc:	00060c63          	beqz	a2,2cd4 <crc16+0x34>
            crc |= 0x8000;
    2cc0:	ffffa5b7          	lui	a1,0xffffa
    2cc4:	00158593          	addi	a1,a1,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2cc8:	00b54533          	xor	a0,a0,a1
    2ccc:	01051513          	slli	a0,a0,0x10
    2cd0:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cd4:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    2cd8:	0016f613          	andi	a2,a3,1
    2cdc:	00155513          	srli	a0,a0,0x1
        data >>= 1;
    2ce0:	00275693          	srli	a3,a4,0x2
        if (x16 == 1)
    2ce4:	00060c63          	beqz	a2,2cfc <crc16+0x5c>
            crc |= 0x8000;
    2ce8:	ffffa5b7          	lui	a1,0xffffa
    2cec:	00158593          	addi	a1,a1,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2cf0:	00b54533          	xor	a0,a0,a1
    2cf4:	01051513          	slli	a0,a0,0x10
    2cf8:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cfc:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    2d00:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2d04:	00375613          	srli	a2,a4,0x3
        if (x16 == 1)
    2d08:	00155513          	srli	a0,a0,0x1
    2d0c:	00068c63          	beqz	a3,2d24 <crc16+0x84>
            crc |= 0x8000;
    2d10:	ffffa6b7          	lui	a3,0xffffa
    2d14:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2d18:	00d54533          	xor	a0,a0,a3
    2d1c:	01051513          	slli	a0,a0,0x10
    2d20:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d24:	00c54633          	xor	a2,a0,a2
        if (x16 == 1)
    2d28:	00167613          	andi	a2,a2,1
        data >>= 1;
    2d2c:	00475693          	srli	a3,a4,0x4
        if (x16 == 1)
    2d30:	00155513          	srli	a0,a0,0x1
    2d34:	00060c63          	beqz	a2,2d4c <crc16+0xac>
            crc |= 0x8000;
    2d38:	ffffa637          	lui	a2,0xffffa
    2d3c:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2d40:	00c54533          	xor	a0,a0,a2
    2d44:	01051513          	slli	a0,a0,0x10
    2d48:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d4c:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    2d50:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2d54:	00575613          	srli	a2,a4,0x5
        if (x16 == 1)
    2d58:	00155513          	srli	a0,a0,0x1
    2d5c:	00068c63          	beqz	a3,2d74 <crc16+0xd4>
            crc |= 0x8000;
    2d60:	ffffa6b7          	lui	a3,0xffffa
    2d64:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2d68:	00d54533          	xor	a0,a0,a3
    2d6c:	01051513          	slli	a0,a0,0x10
    2d70:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d74:	00c54633          	xor	a2,a0,a2
        if (x16 == 1)
    2d78:	00167613          	andi	a2,a2,1
        data >>= 1;
    2d7c:	00675693          	srli	a3,a4,0x6
        if (x16 == 1)
    2d80:	00155513          	srli	a0,a0,0x1
    2d84:	00060c63          	beqz	a2,2d9c <crc16+0xfc>
            crc |= 0x8000;
    2d88:	ffffa637          	lui	a2,0xffffa
    2d8c:	00160613          	addi	a2,a2,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2d90:	00c54533          	xor	a0,a0,a2
    2d94:	01051513          	slli	a0,a0,0x10
    2d98:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d9c:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    2da0:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2da4:	00775713          	srli	a4,a4,0x7
        if (x16 == 1)
    2da8:	00155513          	srli	a0,a0,0x1
    2dac:	00068c63          	beqz	a3,2dc4 <crc16+0x124>
            crc |= 0x8000;
    2db0:	ffffa6b7          	lui	a3,0xffffa
    2db4:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2db8:	00d54533          	xor	a0,a0,a3
    2dbc:	01051513          	slli	a0,a0,0x10
    2dc0:	01055513          	srli	a0,a0,0x10
        if (x16 == 1)
    2dc4:	00157693          	andi	a3,a0,1
    2dc8:	00155513          	srli	a0,a0,0x1
    2dcc:	00e68c63          	beq	a3,a4,2de4 <crc16+0x144>
            crc |= 0x8000;
    2dd0:	ffffa737          	lui	a4,0xffffa
    2dd4:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2dd8:	00e54533          	xor	a0,a0,a4
    2ddc:	01051513          	slli	a0,a0,0x10
    2de0:	01055513          	srli	a0,a0,0x10
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2de4:	0087d793          	srli	a5,a5,0x8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2de8:	00f54733          	xor	a4,a0,a5
        if (x16 == 1)
    2dec:	00177713          	andi	a4,a4,1
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2df0:	0ff7f793          	andi	a5,a5,255
        data >>= 1;
    2df4:	0017d693          	srli	a3,a5,0x1
        if (x16 == 1)
    2df8:	00155513          	srli	a0,a0,0x1
    2dfc:	00070c63          	beqz	a4,2e14 <crc16+0x174>
            crc |= 0x8000;
    2e00:	ffffa737          	lui	a4,0xffffa
    2e04:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2e08:	00e54533          	xor	a0,a0,a4
    2e0c:	01051513          	slli	a0,a0,0x10
    2e10:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e14:	00a6c6b3          	xor	a3,a3,a0
        if (x16 == 1)
    2e18:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2e1c:	0027d713          	srli	a4,a5,0x2
        if (x16 == 1)
    2e20:	00155513          	srli	a0,a0,0x1
    2e24:	00068c63          	beqz	a3,2e3c <crc16+0x19c>
            crc |= 0x8000;
    2e28:	ffffa6b7          	lui	a3,0xffffa
    2e2c:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2e30:	00d54533          	xor	a0,a0,a3
    2e34:	01051513          	slli	a0,a0,0x10
    2e38:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e3c:	00e54733          	xor	a4,a0,a4
        if (x16 == 1)
    2e40:	00177713          	andi	a4,a4,1
        data >>= 1;
    2e44:	0037d693          	srli	a3,a5,0x3
        if (x16 == 1)
    2e48:	00155513          	srli	a0,a0,0x1
    2e4c:	00070c63          	beqz	a4,2e64 <crc16+0x1c4>
            crc |= 0x8000;
    2e50:	ffffa737          	lui	a4,0xffffa
    2e54:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2e58:	00e54533          	xor	a0,a0,a4
    2e5c:	01051513          	slli	a0,a0,0x10
    2e60:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e64:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    2e68:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2e6c:	0047d713          	srli	a4,a5,0x4
        if (x16 == 1)
    2e70:	00155513          	srli	a0,a0,0x1
    2e74:	00068c63          	beqz	a3,2e8c <crc16+0x1ec>
            crc |= 0x8000;
    2e78:	ffffa6b7          	lui	a3,0xffffa
    2e7c:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2e80:	00d54533          	xor	a0,a0,a3
    2e84:	01051513          	slli	a0,a0,0x10
    2e88:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e8c:	00e54733          	xor	a4,a0,a4
        if (x16 == 1)
    2e90:	00177713          	andi	a4,a4,1
        data >>= 1;
    2e94:	0057d693          	srli	a3,a5,0x5
        if (x16 == 1)
    2e98:	00155513          	srli	a0,a0,0x1
    2e9c:	00070c63          	beqz	a4,2eb4 <crc16+0x214>
            crc |= 0x8000;
    2ea0:	ffffa737          	lui	a4,0xffffa
    2ea4:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2ea8:	00e54533          	xor	a0,a0,a4
    2eac:	01051513          	slli	a0,a0,0x10
    2eb0:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2eb4:	00d546b3          	xor	a3,a0,a3
        if (x16 == 1)
    2eb8:	0016f693          	andi	a3,a3,1
        data >>= 1;
    2ebc:	0067d713          	srli	a4,a5,0x6
        if (x16 == 1)
    2ec0:	00155513          	srli	a0,a0,0x1
    2ec4:	00068c63          	beqz	a3,2edc <crc16+0x23c>
            crc |= 0x8000;
    2ec8:	ffffa6b7          	lui	a3,0xffffa
    2ecc:	00168693          	addi	a3,a3,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2ed0:	00d54533          	xor	a0,a0,a3
    2ed4:	01051513          	slli	a0,a0,0x10
    2ed8:	01055513          	srli	a0,a0,0x10
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2edc:	00e54733          	xor	a4,a0,a4
        if (x16 == 1)
    2ee0:	00177713          	andi	a4,a4,1
        data >>= 1;
    2ee4:	0077d793          	srli	a5,a5,0x7
        if (x16 == 1)
    2ee8:	00155513          	srli	a0,a0,0x1
    2eec:	00070c63          	beqz	a4,2f04 <crc16+0x264>
            crc |= 0x8000;
    2ef0:	ffffa737          	lui	a4,0xffffa
    2ef4:	00170713          	addi	a4,a4,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2ef8:	00e54533          	xor	a0,a0,a4
    2efc:	01051513          	slli	a0,a0,0x10
    2f00:	01055513          	srli	a0,a0,0x10
        if (x16 == 1)
    2f04:	00157713          	andi	a4,a0,1
    2f08:	00155513          	srli	a0,a0,0x1
    2f0c:	00f70c63          	beq	a4,a5,2f24 <crc16+0x284>
            crc |= 0x8000;
    2f10:	ffffa7b7          	lui	a5,0xffffa
    2f14:	00178793          	addi	a5,a5,1 # ffffa001 <__freertos_irq_stack_top+0xfefea001>
    2f18:	00f54533          	xor	a0,a0,a5
    2f1c:	01051513          	slli	a0,a0,0x10
    2f20:	01055513          	srli	a0,a0,0x10
}
    2f24:	00008067          	ret

00002f28 <check_data_types>:
    if (retval > 0)
    {
        ee_printf("ERROR: Please modify the datatypes in core_portme.h!\n");
    }
    return retval;
}
    2f28:	00000513          	li	a0,0
    2f2c:	00008067          	ret

00002f30 <timer_getms>:
void timer_clear() {
    TIMER->lo = 0;
    TIMER->hi = 0;
}
uint64_t timer_getms() {
    uint64_t time = (((uint64_t)(TIMER->hi)) << 32) + ((uint64_t)(TIMER->lo));
    2f30:	f20007b7          	lui	a5,0xf2000
    2f34:	0087a583          	lw	a1,8(a5) # f2000008 <__freertos_irq_stack_top+0xf0ff0008>
    2f38:	0047a503          	lw	a0,4(a5)
    time = time / 84000;
    2f3c:	00015637          	lui	a2,0x15
uint64_t timer_getms() {
    2f40:	ff010113          	addi	sp,sp,-16
    uint64_t time = (((uint64_t)(TIMER->hi)) << 32) + ((uint64_t)(TIMER->lo));
    2f44:	41f55793          	srai	a5,a0,0x1f
    time = time / 84000;
    2f48:	82060613          	addi	a2,a2,-2016 # 14820 <_data_lma+0xa208>
    2f4c:	00000693          	li	a3,0
    2f50:	00f585b3          	add	a1,a1,a5
uint64_t timer_getms() {
    2f54:	00112623          	sw	ra,12(sp)
    time = time / 84000;
    2f58:	00000097          	auipc	ra,0x0
    2f5c:	044080e7          	jalr	68(ra) # 2f9c <__udivdi3>
    return time;
    2f60:	00c12083          	lw	ra,12(sp)
    2f64:	01010113          	addi	sp,sp,16
    2f68:	00008067          	ret

00002f6c <_write>:
        }
    }
}

int _write(int fd, char* pBuffer, int size) {
    for (int i = 0;i<size;i++) {
    2f6c:	02c05463          	blez	a2,2f94 <_write+0x28>
    2f70:	00c58833          	add	a6,a1,a2
        int tx_finish = USART->ctrl & 0x1;
    2f74:	f1000737          	lui	a4,0xf1000
        send_char(pBuffer[i]);
    2f78:	0005c683          	lbu	a3,0(a1)
        int tx_finish = USART->ctrl & 0x1;
    2f7c:	00072783          	lw	a5,0(a4) # f1000000 <__freertos_irq_stack_top+0xefff0000>
    2f80:	0017f793          	andi	a5,a5,1
        if (tx_finish) {
    2f84:	fe078ce3          	beqz	a5,2f7c <_write+0x10>
            USART->write = c;
    2f88:	00d72223          	sw	a3,4(a4)
            return;
    2f8c:	00158593          	addi	a1,a1,1
    for (int i = 0;i<size;i++) {
    2f90:	ff0594e3          	bne	a1,a6,2f78 <_write+0xc>
    }
    return size;
}
    2f94:	00060513          	mv	a0,a2
    2f98:	00008067          	ret

00002f9c <__udivdi3>:
    2f9c:	00068793          	mv	a5,a3
    2fa0:	00060893          	mv	a7,a2
    2fa4:	00050313          	mv	t1,a0
    2fa8:	00058813          	mv	a6,a1
    2fac:	1a069663          	bnez	a3,3158 <__udivdi3+0x1bc>
    2fb0:	0cc5fc63          	bgeu	a1,a2,3088 <__udivdi3+0xec>
    2fb4:	00010737          	lui	a4,0x10
    2fb8:	22e66463          	bltu	a2,a4,31e0 <__udivdi3+0x244>
    2fbc:	010007b7          	lui	a5,0x1000
    2fc0:	40f66a63          	bltu	a2,a5,33d4 <__udivdi3+0x438>
    2fc4:	01865693          	srli	a3,a2,0x18
    2fc8:	01800793          	li	a5,24
    2fcc:	00ffd717          	auipc	a4,0xffd
    2fd0:	5b070713          	addi	a4,a4,1456 # 100057c <__clz_tab>
    2fd4:	00d70733          	add	a4,a4,a3
    2fd8:	00074703          	lbu	a4,0(a4)
    2fdc:	00f707b3          	add	a5,a4,a5
    2fe0:	02000713          	li	a4,32
    2fe4:	40f70733          	sub	a4,a4,a5
    2fe8:	00070c63          	beqz	a4,3000 <__udivdi3+0x64>
    2fec:	00e59833          	sll	a6,a1,a4
    2ff0:	00f557b3          	srl	a5,a0,a5
    2ff4:	00e618b3          	sll	a7,a2,a4
    2ff8:	0107e833          	or	a6,a5,a6
    2ffc:	00e51333          	sll	t1,a0,a4
    3000:	0108d613          	srli	a2,a7,0x10
    3004:	02c85533          	divu	a0,a6,a2
    3008:	01089693          	slli	a3,a7,0x10
    300c:	0106d693          	srli	a3,a3,0x10
    3010:	01035793          	srli	a5,t1,0x10
    3014:	02c87733          	remu	a4,a6,a2
    3018:	02a685b3          	mul	a1,a3,a0
    301c:	01071713          	slli	a4,a4,0x10
    3020:	00f76833          	or	a6,a4,a5
    3024:	00b87c63          	bgeu	a6,a1,303c <__udivdi3+0xa0>
    3028:	01180833          	add	a6,a6,a7
    302c:	fff50793          	addi	a5,a0,-1
    3030:	01186463          	bltu	a6,a7,3038 <__udivdi3+0x9c>
    3034:	3eb86863          	bltu	a6,a1,3424 <__udivdi3+0x488>
    3038:	00078513          	mv	a0,a5
    303c:	40b80833          	sub	a6,a6,a1
    3040:	02c85733          	divu	a4,a6,a2
    3044:	01031313          	slli	t1,t1,0x10
    3048:	01035313          	srli	t1,t1,0x10
    304c:	02c87833          	remu	a6,a6,a2
    3050:	02e686b3          	mul	a3,a3,a4
    3054:	01081813          	slli	a6,a6,0x10
    3058:	00686833          	or	a6,a6,t1
    305c:	00d87e63          	bgeu	a6,a3,3078 <__udivdi3+0xdc>
    3060:	01088833          	add	a6,a7,a6
    3064:	fff70793          	addi	a5,a4,-1
    3068:	01186663          	bltu	a6,a7,3074 <__udivdi3+0xd8>
    306c:	ffe70713          	addi	a4,a4,-2
    3070:	00d86463          	bltu	a6,a3,3078 <__udivdi3+0xdc>
    3074:	00078713          	mv	a4,a5
    3078:	01051513          	slli	a0,a0,0x10
    307c:	00e56533          	or	a0,a0,a4
    3080:	00000593          	li	a1,0
    3084:	00008067          	ret
    3088:	00061663          	bnez	a2,3094 <__udivdi3+0xf8>
    308c:	00100713          	li	a4,1
    3090:	02c758b3          	divu	a7,a4,a2
    3094:	00010737          	lui	a4,0x10
    3098:	12e8e863          	bltu	a7,a4,31c8 <__udivdi3+0x22c>
    309c:	010007b7          	lui	a5,0x1000
    30a0:	34f8e063          	bltu	a7,a5,33e0 <__udivdi3+0x444>
    30a4:	0188d693          	srli	a3,a7,0x18
    30a8:	01800793          	li	a5,24
    30ac:	00ffd717          	auipc	a4,0xffd
    30b0:	4d070713          	addi	a4,a4,1232 # 100057c <__clz_tab>
    30b4:	00d70733          	add	a4,a4,a3
    30b8:	00074683          	lbu	a3,0(a4)
    30bc:	00f686b3          	add	a3,a3,a5
    30c0:	02000793          	li	a5,32
    30c4:	40d787b3          	sub	a5,a5,a3
    30c8:	12079863          	bnez	a5,31f8 <__udivdi3+0x25c>
    30cc:	01089e93          	slli	t4,a7,0x10
    30d0:	41158733          	sub	a4,a1,a7
    30d4:	0108df13          	srli	t5,a7,0x10
    30d8:	010ede93          	srli	t4,t4,0x10
    30dc:	00100593          	li	a1,1
    30e0:	01035793          	srli	a5,t1,0x10
    30e4:	03e75533          	divu	a0,a4,t5
    30e8:	03e77733          	remu	a4,a4,t5
    30ec:	03d506b3          	mul	a3,a0,t4
    30f0:	01071713          	slli	a4,a4,0x10
    30f4:	00f767b3          	or	a5,a4,a5
    30f8:	00d7fc63          	bgeu	a5,a3,3110 <__udivdi3+0x174>
    30fc:	011787b3          	add	a5,a5,a7
    3100:	fff50713          	addi	a4,a0,-1
    3104:	0117e463          	bltu	a5,a7,310c <__udivdi3+0x170>
    3108:	32d7e463          	bltu	a5,a3,3430 <__udivdi3+0x494>
    310c:	00070513          	mv	a0,a4
    3110:	40d787b3          	sub	a5,a5,a3
    3114:	03e7d733          	divu	a4,a5,t5
    3118:	01031313          	slli	t1,t1,0x10
    311c:	01035313          	srli	t1,t1,0x10
    3120:	03e7f7b3          	remu	a5,a5,t5
    3124:	03d70eb3          	mul	t4,a4,t4
    3128:	01079793          	slli	a5,a5,0x10
    312c:	0067e7b3          	or	a5,a5,t1
    3130:	01d7fe63          	bgeu	a5,t4,314c <__udivdi3+0x1b0>
    3134:	00f887b3          	add	a5,a7,a5
    3138:	fff70693          	addi	a3,a4,-1
    313c:	0117e663          	bltu	a5,a7,3148 <__udivdi3+0x1ac>
    3140:	ffe70713          	addi	a4,a4,-2
    3144:	01d7e463          	bltu	a5,t4,314c <__udivdi3+0x1b0>
    3148:	00068713          	mv	a4,a3
    314c:	01051513          	slli	a0,a0,0x10
    3150:	00e56533          	or	a0,a0,a4
    3154:	00008067          	ret
    3158:	04d5e863          	bltu	a1,a3,31a8 <__udivdi3+0x20c>
    315c:	000107b7          	lui	a5,0x10
    3160:	04f6ea63          	bltu	a3,a5,31b4 <__udivdi3+0x218>
    3164:	010007b7          	lui	a5,0x1000
    3168:	26f6e063          	bltu	a3,a5,33c8 <__udivdi3+0x42c>
    316c:	0186d713          	srli	a4,a3,0x18
    3170:	01800813          	li	a6,24
    3174:	00ffd797          	auipc	a5,0xffd
    3178:	40878793          	addi	a5,a5,1032 # 100057c <__clz_tab>
    317c:	00e787b3          	add	a5,a5,a4
    3180:	0007c703          	lbu	a4,0(a5)
    3184:	02000e13          	li	t3,32
    3188:	01070733          	add	a4,a4,a6
    318c:	40ee0e33          	sub	t3,t3,a4
    3190:	100e1663          	bnez	t3,329c <__udivdi3+0x300>
    3194:	24b6ec63          	bltu	a3,a1,33ec <__udivdi3+0x450>
    3198:	00c53533          	sltu	a0,a0,a2
    319c:	00154513          	xori	a0,a0,1
    31a0:	00000593          	li	a1,0
    31a4:	00008067          	ret
    31a8:	00000593          	li	a1,0
    31ac:	00000513          	li	a0,0
    31b0:	00008067          	ret
    31b4:	0ff00793          	li	a5,255
    31b8:	24d7f063          	bgeu	a5,a3,33f8 <__udivdi3+0x45c>
    31bc:	0086d713          	srli	a4,a3,0x8
    31c0:	00800813          	li	a6,8
    31c4:	fb1ff06f          	j	3174 <__udivdi3+0x1d8>
    31c8:	0ff00713          	li	a4,255
    31cc:	00088693          	mv	a3,a7
    31d0:	ed177ee3          	bgeu	a4,a7,30ac <__udivdi3+0x110>
    31d4:	0088d693          	srli	a3,a7,0x8
    31d8:	00800793          	li	a5,8
    31dc:	ed1ff06f          	j	30ac <__udivdi3+0x110>
    31e0:	0ff00713          	li	a4,255
    31e4:	00060693          	mv	a3,a2
    31e8:	dec772e3          	bgeu	a4,a2,2fcc <__udivdi3+0x30>
    31ec:	00865693          	srli	a3,a2,0x8
    31f0:	00800793          	li	a5,8
    31f4:	dd9ff06f          	j	2fcc <__udivdi3+0x30>
    31f8:	00f898b3          	sll	a7,a7,a5
    31fc:	00d5d633          	srl	a2,a1,a3
    3200:	0108df13          	srli	t5,a7,0x10
    3204:	03e65e33          	divu	t3,a2,t5
    3208:	00f59733          	sll	a4,a1,a5
    320c:	00d556b3          	srl	a3,a0,a3
    3210:	00e6e733          	or	a4,a3,a4
    3214:	01089e93          	slli	t4,a7,0x10
    3218:	010ede93          	srli	t4,t4,0x10
    321c:	00f51333          	sll	t1,a0,a5
    3220:	01075593          	srli	a1,a4,0x10
    3224:	03e676b3          	remu	a3,a2,t5
    3228:	03ce87b3          	mul	a5,t4,t3
    322c:	01069693          	slli	a3,a3,0x10
    3230:	00b6e6b3          	or	a3,a3,a1
    3234:	00f6fe63          	bgeu	a3,a5,3250 <__udivdi3+0x2b4>
    3238:	011686b3          	add	a3,a3,a7
    323c:	fffe0613          	addi	a2,t3,-1
    3240:	1d16ee63          	bltu	a3,a7,341c <__udivdi3+0x480>
    3244:	1cf6fc63          	bgeu	a3,a5,341c <__udivdi3+0x480>
    3248:	ffee0e13          	addi	t3,t3,-2
    324c:	011686b3          	add	a3,a3,a7
    3250:	40f686b3          	sub	a3,a3,a5
    3254:	03e6d633          	divu	a2,a3,t5
    3258:	01071793          	slli	a5,a4,0x10
    325c:	0107d793          	srli	a5,a5,0x10
    3260:	03e6f6b3          	remu	a3,a3,t5
    3264:	02ce8533          	mul	a0,t4,a2
    3268:	01069713          	slli	a4,a3,0x10
    326c:	00f76733          	or	a4,a4,a5
    3270:	00a77e63          	bgeu	a4,a0,328c <__udivdi3+0x2f0>
    3274:	01170733          	add	a4,a4,a7
    3278:	fff60793          	addi	a5,a2,-1
    327c:	19176863          	bltu	a4,a7,340c <__udivdi3+0x470>
    3280:	18a77663          	bgeu	a4,a0,340c <__udivdi3+0x470>
    3284:	ffe60613          	addi	a2,a2,-2
    3288:	01170733          	add	a4,a4,a7
    328c:	010e1593          	slli	a1,t3,0x10
    3290:	40a70733          	sub	a4,a4,a0
    3294:	00c5e5b3          	or	a1,a1,a2
    3298:	e49ff06f          	j	30e0 <__udivdi3+0x144>
    329c:	00e657b3          	srl	a5,a2,a4
    32a0:	01c696b3          	sll	a3,a3,t3
    32a4:	00d7e6b3          	or	a3,a5,a3
    32a8:	00e5d333          	srl	t1,a1,a4
    32ac:	0106df13          	srli	t5,a3,0x10
    32b0:	03e357b3          	divu	a5,t1,t5
    32b4:	01069e93          	slli	t4,a3,0x10
    32b8:	010ede93          	srli	t4,t4,0x10
    32bc:	01c59833          	sll	a6,a1,t3
    32c0:	00e55733          	srl	a4,a0,a4
    32c4:	01076833          	or	a6,a4,a6
    32c8:	01085893          	srli	a7,a6,0x10
    32cc:	01c61633          	sll	a2,a2,t3
    32d0:	03e37333          	remu	t1,t1,t5
    32d4:	02fe85b3          	mul	a1,t4,a5
    32d8:	01031313          	slli	t1,t1,0x10
    32dc:	011368b3          	or	a7,t1,a7
    32e0:	00b8fe63          	bgeu	a7,a1,32fc <__udivdi3+0x360>
    32e4:	00d888b3          	add	a7,a7,a3
    32e8:	fff78713          	addi	a4,a5,-1
    32ec:	12d8e463          	bltu	a7,a3,3414 <__udivdi3+0x478>
    32f0:	12b8f263          	bgeu	a7,a1,3414 <__udivdi3+0x478>
    32f4:	ffe78793          	addi	a5,a5,-2
    32f8:	00d888b3          	add	a7,a7,a3
    32fc:	40b888b3          	sub	a7,a7,a1
    3300:	03e8d733          	divu	a4,a7,t5
    3304:	01081813          	slli	a6,a6,0x10
    3308:	01085813          	srli	a6,a6,0x10
    330c:	03e8f8b3          	remu	a7,a7,t5
    3310:	02ee8333          	mul	t1,t4,a4
    3314:	01089893          	slli	a7,a7,0x10
    3318:	0108e5b3          	or	a1,a7,a6
    331c:	0065fe63          	bgeu	a1,t1,3338 <__udivdi3+0x39c>
    3320:	00d585b3          	add	a1,a1,a3
    3324:	fff70813          	addi	a6,a4,-1
    3328:	0cd5ee63          	bltu	a1,a3,3404 <__udivdi3+0x468>
    332c:	0c65fc63          	bgeu	a1,t1,3404 <__udivdi3+0x468>
    3330:	ffe70713          	addi	a4,a4,-2
    3334:	00d585b3          	add	a1,a1,a3
    3338:	01079793          	slli	a5,a5,0x10
    333c:	00010f37          	lui	t5,0x10
    3340:	00e7e7b3          	or	a5,a5,a4
    3344:	ffff0713          	addi	a4,t5,-1 # ffff <_data_lma+0x59e7>
    3348:	00e7f6b3          	and	a3,a5,a4
    334c:	0107d893          	srli	a7,a5,0x10
    3350:	00e67733          	and	a4,a2,a4
    3354:	01065613          	srli	a2,a2,0x10
    3358:	02e68eb3          	mul	t4,a3,a4
    335c:	406585b3          	sub	a1,a1,t1
    3360:	02c686b3          	mul	a3,a3,a2
    3364:	010ed813          	srli	a6,t4,0x10
    3368:	02e88733          	mul	a4,a7,a4
    336c:	00e686b3          	add	a3,a3,a4
    3370:	00d806b3          	add	a3,a6,a3
    3374:	02c88633          	mul	a2,a7,a2
    3378:	00e6f463          	bgeu	a3,a4,3380 <__udivdi3+0x3e4>
    337c:	01e60633          	add	a2,a2,t5
    3380:	0106d893          	srli	a7,a3,0x10
    3384:	00c88633          	add	a2,a7,a2
    3388:	02c5ea63          	bltu	a1,a2,33bc <__udivdi3+0x420>
    338c:	00c58863          	beq	a1,a2,339c <__udivdi3+0x400>
    3390:	00078513          	mv	a0,a5
    3394:	00000593          	li	a1,0
    3398:	00008067          	ret
    339c:	00010737          	lui	a4,0x10
    33a0:	fff70713          	addi	a4,a4,-1 # ffff <_data_lma+0x59e7>
    33a4:	00e6f6b3          	and	a3,a3,a4
    33a8:	01069693          	slli	a3,a3,0x10
    33ac:	00eefeb3          	and	t4,t4,a4
    33b0:	01c51533          	sll	a0,a0,t3
    33b4:	01d686b3          	add	a3,a3,t4
    33b8:	fcd57ce3          	bgeu	a0,a3,3390 <__udivdi3+0x3f4>
    33bc:	fff78513          	addi	a0,a5,-1
    33c0:	00000593          	li	a1,0
    33c4:	00008067          	ret
    33c8:	0106d713          	srli	a4,a3,0x10
    33cc:	01000813          	li	a6,16
    33d0:	da5ff06f          	j	3174 <__udivdi3+0x1d8>
    33d4:	01065693          	srli	a3,a2,0x10
    33d8:	01000793          	li	a5,16
    33dc:	bf1ff06f          	j	2fcc <__udivdi3+0x30>
    33e0:	0108d693          	srli	a3,a7,0x10
    33e4:	01000793          	li	a5,16
    33e8:	cc5ff06f          	j	30ac <__udivdi3+0x110>
    33ec:	00000593          	li	a1,0
    33f0:	00100513          	li	a0,1
    33f4:	00008067          	ret
    33f8:	00068713          	mv	a4,a3
    33fc:	00000813          	li	a6,0
    3400:	d75ff06f          	j	3174 <__udivdi3+0x1d8>
    3404:	00080713          	mv	a4,a6
    3408:	f31ff06f          	j	3338 <__udivdi3+0x39c>
    340c:	00078613          	mv	a2,a5
    3410:	e7dff06f          	j	328c <__udivdi3+0x2f0>
    3414:	00070793          	mv	a5,a4
    3418:	ee5ff06f          	j	32fc <__udivdi3+0x360>
    341c:	00060e13          	mv	t3,a2
    3420:	e31ff06f          	j	3250 <__udivdi3+0x2b4>
    3424:	ffe50513          	addi	a0,a0,-2
    3428:	01180833          	add	a6,a6,a7
    342c:	c11ff06f          	j	303c <__udivdi3+0xa0>
    3430:	ffe50513          	addi	a0,a0,-2
    3434:	011787b3          	add	a5,a5,a7
    3438:	cd9ff06f          	j	3110 <__udivdi3+0x174>

0000343c <__divdf3>:
    343c:	fc010113          	addi	sp,sp,-64
    3440:	0145d793          	srli	a5,a1,0x14
    3444:	02812c23          	sw	s0,56(sp)
    3448:	02912a23          	sw	s1,52(sp)
    344c:	03312623          	sw	s3,44(sp)
    3450:	00050493          	mv	s1,a0
    3454:	00c59413          	slli	s0,a1,0xc
    3458:	02112e23          	sw	ra,60(sp)
    345c:	03212823          	sw	s2,48(sp)
    3460:	03412423          	sw	s4,40(sp)
    3464:	03512223          	sw	s5,36(sp)
    3468:	03612023          	sw	s6,32(sp)
    346c:	01712e23          	sw	s7,28(sp)
    3470:	7ff7f513          	andi	a0,a5,2047
    3474:	00c45413          	srli	s0,s0,0xc
    3478:	01f5d993          	srli	s3,a1,0x1f
    347c:	16050a63          	beqz	a0,35f0 <__divdf3+0x1b4>
    3480:	7ff00793          	li	a5,2047
    3484:	1cf50663          	beq	a0,a5,3650 <__divdf3+0x214>
    3488:	01d4da93          	srli	s5,s1,0x1d
    348c:	00341413          	slli	s0,s0,0x3
    3490:	008ae433          	or	s0,s5,s0
    3494:	00800ab7          	lui	s5,0x800
    3498:	00349b13          	slli	s6,s1,0x3
    349c:	01546ab3          	or	s5,s0,s5
    34a0:	c0150913          	addi	s2,a0,-1023
    34a4:	00000493          	li	s1,0
    34a8:	00000b93          	li	s7,0
    34ac:	0146d713          	srli	a4,a3,0x14
    34b0:	00c69413          	slli	s0,a3,0xc
    34b4:	7ff77713          	andi	a4,a4,2047
    34b8:	00c45413          	srli	s0,s0,0xc
    34bc:	01f6da13          	srli	s4,a3,0x1f
    34c0:	0e070063          	beqz	a4,35a0 <__divdf3+0x164>
    34c4:	7ff00793          	li	a5,2047
    34c8:	04f70863          	beq	a4,a5,3518 <__divdf3+0xdc>
    34cc:	00341793          	slli	a5,s0,0x3
    34d0:	01d65413          	srli	s0,a2,0x1d
    34d4:	00f467b3          	or	a5,s0,a5
    34d8:	c0170713          	addi	a4,a4,-1023
    34dc:	00800437          	lui	s0,0x800
    34e0:	0087e433          	or	s0,a5,s0
    34e4:	00361813          	slli	a6,a2,0x3
    34e8:	40e90933          	sub	s2,s2,a4
    34ec:	00000693          	li	a3,0
    34f0:	00f00793          	li	a5,15
    34f4:	0149c5b3          	xor	a1,s3,s4
    34f8:	2697e063          	bltu	a5,s1,3758 <__divdf3+0x31c>
    34fc:	00ffd717          	auipc	a4,0xffd
    3500:	04070713          	addi	a4,a4,64 # 100053c <scipat+0xd8>
    3504:	00249493          	slli	s1,s1,0x2
    3508:	00e484b3          	add	s1,s1,a4
    350c:	0004a783          	lw	a5,0(s1)
    3510:	00e787b3          	add	a5,a5,a4
    3514:	00078067          	jr	a5
    3518:	00c46833          	or	a6,s0,a2
    351c:	80190913          	addi	s2,s2,-2047
    3520:	18081463          	bnez	a6,36a8 <__divdf3+0x26c>
    3524:	0024e493          	ori	s1,s1,2
    3528:	00000413          	li	s0,0
    352c:	00200693          	li	a3,2
    3530:	fc1ff06f          	j	34f0 <__divdf3+0xb4>
    3534:	7ff00713          	li	a4,2047
    3538:	00000793          	li	a5,0
    353c:	00000413          	li	s0,0
    3540:	00c79793          	slli	a5,a5,0xc
    3544:	00040513          	mv	a0,s0
    3548:	03c12083          	lw	ra,60(sp)
    354c:	03812403          	lw	s0,56(sp)
    3550:	01471713          	slli	a4,a4,0x14
    3554:	00c7d793          	srli	a5,a5,0xc
    3558:	01f59593          	slli	a1,a1,0x1f
    355c:	00e7e7b3          	or	a5,a5,a4
    3560:	00b7e7b3          	or	a5,a5,a1
    3564:	03412483          	lw	s1,52(sp)
    3568:	03012903          	lw	s2,48(sp)
    356c:	02c12983          	lw	s3,44(sp)
    3570:	02812a03          	lw	s4,40(sp)
    3574:	02412a83          	lw	s5,36(sp)
    3578:	02012b03          	lw	s6,32(sp)
    357c:	01c12b83          	lw	s7,28(sp)
    3580:	00078593          	mv	a1,a5
    3584:	04010113          	addi	sp,sp,64
    3588:	00008067          	ret
    358c:	00000593          	li	a1,0
    3590:	7ff00713          	li	a4,2047
    3594:	000807b7          	lui	a5,0x80
    3598:	00000413          	li	s0,0
    359c:	fa5ff06f          	j	3540 <__divdf3+0x104>
    35a0:	00c46833          	or	a6,s0,a2
    35a4:	0e080a63          	beqz	a6,3698 <__divdf3+0x25c>
    35a8:	40040063          	beqz	s0,39a8 <__divdf3+0x56c>
    35ac:	00040513          	mv	a0,s0
    35b0:	00c12423          	sw	a2,8(sp)
    35b4:	00001097          	auipc	ra,0x1
    35b8:	920080e7          	jalr	-1760(ra) # 3ed4 <__clzsi2>
    35bc:	00812603          	lw	a2,8(sp)
    35c0:	ff550593          	addi	a1,a0,-11
    35c4:	01d00693          	li	a3,29
    35c8:	ff850713          	addi	a4,a0,-8
    35cc:	40b686b3          	sub	a3,a3,a1
    35d0:	00e417b3          	sll	a5,s0,a4
    35d4:	00d656b3          	srl	a3,a2,a3
    35d8:	00f6e433          	or	s0,a3,a5
    35dc:	00e61833          	sll	a6,a2,a4
    35e0:	01250533          	add	a0,a0,s2
    35e4:	3f350913          	addi	s2,a0,1011
    35e8:	00000693          	li	a3,0
    35ec:	f05ff06f          	j	34f0 <__divdf3+0xb4>
    35f0:	00946ab3          	or	s5,s0,s1
    35f4:	080a8863          	beqz	s5,3684 <__divdf3+0x248>
    35f8:	00d12623          	sw	a3,12(sp)
    35fc:	00c12423          	sw	a2,8(sp)
    3600:	36040a63          	beqz	s0,3974 <__divdf3+0x538>
    3604:	00040513          	mv	a0,s0
    3608:	00001097          	auipc	ra,0x1
    360c:	8cc080e7          	jalr	-1844(ra) # 3ed4 <__clzsi2>
    3610:	00812603          	lw	a2,8(sp)
    3614:	00c12683          	lw	a3,12(sp)
    3618:	00050913          	mv	s2,a0
    361c:	ff550713          	addi	a4,a0,-11
    3620:	01d00a93          	li	s5,29
    3624:	ff890b13          	addi	s6,s2,-8
    3628:	40ea8ab3          	sub	s5,s5,a4
    362c:	01641433          	sll	s0,s0,s6
    3630:	0154dab3          	srl	s5,s1,s5
    3634:	008aeab3          	or	s5,s5,s0
    3638:	01649b33          	sll	s6,s1,s6
    363c:	c0d00513          	li	a0,-1011
    3640:	41250933          	sub	s2,a0,s2
    3644:	00000493          	li	s1,0
    3648:	00000b93          	li	s7,0
    364c:	e61ff06f          	j	34ac <__divdf3+0x70>
    3650:	00946ab3          	or	s5,s0,s1
    3654:	000a9c63          	bnez	s5,366c <__divdf3+0x230>
    3658:	00000b13          	li	s6,0
    365c:	00800493          	li	s1,8
    3660:	7ff00913          	li	s2,2047
    3664:	00200b93          	li	s7,2
    3668:	e45ff06f          	j	34ac <__divdf3+0x70>
    366c:	00048b13          	mv	s6,s1
    3670:	00040a93          	mv	s5,s0
    3674:	00c00493          	li	s1,12
    3678:	7ff00913          	li	s2,2047
    367c:	00300b93          	li	s7,3
    3680:	e2dff06f          	j	34ac <__divdf3+0x70>
    3684:	00000b13          	li	s6,0
    3688:	00400493          	li	s1,4
    368c:	00000913          	li	s2,0
    3690:	00100b93          	li	s7,1
    3694:	e19ff06f          	j	34ac <__divdf3+0x70>
    3698:	0014e493          	ori	s1,s1,1
    369c:	00000413          	li	s0,0
    36a0:	00100693          	li	a3,1
    36a4:	e4dff06f          	j	34f0 <__divdf3+0xb4>
    36a8:	0034e493          	ori	s1,s1,3
    36ac:	00060813          	mv	a6,a2
    36b0:	00300693          	li	a3,3
    36b4:	e3dff06f          	j	34f0 <__divdf3+0xb4>
    36b8:	3c070463          	beqz	a4,3a80 <__divdf3+0x644>
    36bc:	00100793          	li	a5,1
    36c0:	40e787b3          	sub	a5,a5,a4
    36c4:	03800693          	li	a3,56
    36c8:	42f6d463          	bge	a3,a5,3af0 <__divdf3+0x6b4>
    36cc:	00000713          	li	a4,0
    36d0:	00000793          	li	a5,0
    36d4:	00000413          	li	s0,0
    36d8:	e69ff06f          	j	3540 <__divdf3+0x104>
    36dc:	000a0593          	mv	a1,s4
    36e0:	00200793          	li	a5,2
    36e4:	e4f688e3          	beq	a3,a5,3534 <__divdf3+0xf8>
    36e8:	00300793          	li	a5,3
    36ec:	eaf680e3          	beq	a3,a5,358c <__divdf3+0x150>
    36f0:	00100793          	li	a5,1
    36f4:	fcf68ce3          	beq	a3,a5,36cc <__divdf3+0x290>
    36f8:	3ff90713          	addi	a4,s2,1023
    36fc:	fae05ee3          	blez	a4,36b8 <__divdf3+0x27c>
    3700:	00787793          	andi	a5,a6,7
    3704:	34079063          	bnez	a5,3a44 <__divdf3+0x608>
    3708:	00385813          	srli	a6,a6,0x3
    370c:	00741793          	slli	a5,s0,0x7
    3710:	0007da63          	bgez	a5,3724 <__divdf3+0x2e8>
    3714:	ff0007b7          	lui	a5,0xff000
    3718:	fff78793          	addi	a5,a5,-1 # feffffff <__freertos_irq_stack_top+0xfdfeffff>
    371c:	00f47433          	and	s0,s0,a5
    3720:	40090713          	addi	a4,s2,1024
    3724:	7fe00793          	li	a5,2046
    3728:	e0e7c6e3          	blt	a5,a4,3534 <__divdf3+0xf8>
    372c:	00941793          	slli	a5,s0,0x9
    3730:	01d41693          	slli	a3,s0,0x1d
    3734:	0106e433          	or	s0,a3,a6
    3738:	00c7d793          	srli	a5,a5,0xc
    373c:	7ff77713          	andi	a4,a4,2047
    3740:	e01ff06f          	j	3540 <__divdf3+0x104>
    3744:	00098593          	mv	a1,s3
    3748:	000a8413          	mv	s0,s5
    374c:	000b0813          	mv	a6,s6
    3750:	000b8693          	mv	a3,s7
    3754:	f8dff06f          	j	36e0 <__divdf3+0x2a4>
    3758:	2b546c63          	bltu	s0,s5,3a10 <__divdf3+0x5d4>
    375c:	2a8a8863          	beq	s5,s0,3a0c <__divdf3+0x5d0>
    3760:	000b0713          	mv	a4,s6
    3764:	fff90913          	addi	s2,s2,-1
    3768:	00000b13          	li	s6,0
    376c:	00841793          	slli	a5,s0,0x8
    3770:	01885893          	srli	a7,a6,0x18
    3774:	00f8e8b3          	or	a7,a7,a5
    3778:	0108de13          	srli	t3,a7,0x10
    377c:	03cad7b3          	divu	a5,s5,t3
    3780:	01089e93          	slli	t4,a7,0x10
    3784:	010ede93          	srli	t4,t4,0x10
    3788:	01075613          	srli	a2,a4,0x10
    378c:	00881313          	slli	t1,a6,0x8
    3790:	03cafab3          	remu	s5,s5,t3
    3794:	02fe86b3          	mul	a3,t4,a5
    3798:	010a9a93          	slli	s5,s5,0x10
    379c:	01566633          	or	a2,a2,s5
    37a0:	00d67e63          	bgeu	a2,a3,37bc <__divdf3+0x380>
    37a4:	01160633          	add	a2,a2,a7
    37a8:	fff78513          	addi	a0,a5,-1
    37ac:	33166e63          	bltu	a2,a7,3ae8 <__divdf3+0x6ac>
    37b0:	32d67c63          	bgeu	a2,a3,3ae8 <__divdf3+0x6ac>
    37b4:	ffe78793          	addi	a5,a5,-2
    37b8:	01160633          	add	a2,a2,a7
    37bc:	40d60633          	sub	a2,a2,a3
    37c0:	03c65433          	divu	s0,a2,t3
    37c4:	01071713          	slli	a4,a4,0x10
    37c8:	01075713          	srli	a4,a4,0x10
    37cc:	03c67633          	remu	a2,a2,t3
    37d0:	028e86b3          	mul	a3,t4,s0
    37d4:	01061613          	slli	a2,a2,0x10
    37d8:	00c76633          	or	a2,a4,a2
    37dc:	00d67e63          	bgeu	a2,a3,37f8 <__divdf3+0x3bc>
    37e0:	01160633          	add	a2,a2,a7
    37e4:	fff40713          	addi	a4,s0,-1 # 7fffff <_data_lma+0x7f59e7>
    37e8:	2f166c63          	bltu	a2,a7,3ae0 <__divdf3+0x6a4>
    37ec:	2ed67a63          	bgeu	a2,a3,3ae0 <__divdf3+0x6a4>
    37f0:	ffe40413          	addi	s0,s0,-2
    37f4:	01160633          	add	a2,a2,a7
    37f8:	01079793          	slli	a5,a5,0x10
    37fc:	000103b7          	lui	t2,0x10
    3800:	0087e433          	or	s0,a5,s0
    3804:	fff38793          	addi	a5,t2,-1 # ffff <_data_lma+0x59e7>
    3808:	00f47833          	and	a6,s0,a5
    380c:	01045f13          	srli	t5,s0,0x10
    3810:	01035513          	srli	a0,t1,0x10
    3814:	00f377b3          	and	a5,t1,a5
    3818:	02f80fb3          	mul	t6,a6,a5
    381c:	40d60733          	sub	a4,a2,a3
    3820:	02ff02b3          	mul	t0,t5,a5
    3824:	010fd613          	srli	a2,t6,0x10
    3828:	030506b3          	mul	a3,a0,a6
    382c:	005686b3          	add	a3,a3,t0
    3830:	00d606b3          	add	a3,a2,a3
    3834:	02af0833          	mul	a6,t5,a0
    3838:	0056f463          	bgeu	a3,t0,3840 <__divdf3+0x404>
    383c:	00780833          	add	a6,a6,t2
    3840:	00010f37          	lui	t5,0x10
    3844:	ffff0f13          	addi	t5,t5,-1 # ffff <_data_lma+0x59e7>
    3848:	0106d613          	srli	a2,a3,0x10
    384c:	01e6f6b3          	and	a3,a3,t5
    3850:	01069693          	slli	a3,a3,0x10
    3854:	01efff33          	and	t5,t6,t5
    3858:	01060633          	add	a2,a2,a6
    385c:	01e686b3          	add	a3,a3,t5
    3860:	18c76263          	bltu	a4,a2,39e4 <__divdf3+0x5a8>
    3864:	16c70e63          	beq	a4,a2,39e0 <__divdf3+0x5a4>
    3868:	40db06b3          	sub	a3,s6,a3
    386c:	40c70733          	sub	a4,a4,a2
    3870:	00db3b33          	sltu	s6,s6,a3
    3874:	41670b33          	sub	s6,a4,s6
    3878:	3ff90713          	addi	a4,s2,1023
    387c:	1f688663          	beq	a7,s6,3a68 <__divdf3+0x62c>
    3880:	03cb5833          	divu	a6,s6,t3
    3884:	0106d613          	srli	a2,a3,0x10
    3888:	03cb7b33          	remu	s6,s6,t3
    388c:	030e8f33          	mul	t5,t4,a6
    3890:	010b1b13          	slli	s6,s6,0x10
    3894:	01666b33          	or	s6,a2,s6
    3898:	01eb7e63          	bgeu	s6,t5,38b4 <__divdf3+0x478>
    389c:	011b0b33          	add	s6,s6,a7
    38a0:	fff80613          	addi	a2,a6,-1
    38a4:	2d1b6c63          	bltu	s6,a7,3b7c <__divdf3+0x740>
    38a8:	2deb7a63          	bgeu	s6,t5,3b7c <__divdf3+0x740>
    38ac:	ffe80813          	addi	a6,a6,-2
    38b0:	011b0b33          	add	s6,s6,a7
    38b4:	41eb0b33          	sub	s6,s6,t5
    38b8:	03cb5633          	divu	a2,s6,t3
    38bc:	01069693          	slli	a3,a3,0x10
    38c0:	0106d693          	srli	a3,a3,0x10
    38c4:	03cb7b33          	remu	s6,s6,t3
    38c8:	02ce8eb3          	mul	t4,t4,a2
    38cc:	010b1b13          	slli	s6,s6,0x10
    38d0:	0166e6b3          	or	a3,a3,s6
    38d4:	01d6fe63          	bgeu	a3,t4,38f0 <__divdf3+0x4b4>
    38d8:	011686b3          	add	a3,a3,a7
    38dc:	fff60e13          	addi	t3,a2,-1
    38e0:	2916ea63          	bltu	a3,a7,3b74 <__divdf3+0x738>
    38e4:	29d6f863          	bgeu	a3,t4,3b74 <__divdf3+0x738>
    38e8:	ffe60613          	addi	a2,a2,-2
    38ec:	011686b3          	add	a3,a3,a7
    38f0:	01081813          	slli	a6,a6,0x10
    38f4:	00c86833          	or	a6,a6,a2
    38f8:	01081e13          	slli	t3,a6,0x10
    38fc:	01085f93          	srli	t6,a6,0x10
    3900:	010e5e13          	srli	t3,t3,0x10
    3904:	02fe0f33          	mul	t5,t3,a5
    3908:	41d686b3          	sub	a3,a3,t4
    390c:	03c50e33          	mul	t3,a0,t3
    3910:	010f5613          	srli	a2,t5,0x10
    3914:	02ff87b3          	mul	a5,t6,a5
    3918:	00fe0e33          	add	t3,t3,a5
    391c:	01c60633          	add	a2,a2,t3
    3920:	03f50533          	mul	a0,a0,t6
    3924:	00f67663          	bgeu	a2,a5,3930 <__divdf3+0x4f4>
    3928:	000107b7          	lui	a5,0x10
    392c:	00f50533          	add	a0,a0,a5
    3930:	00010e37          	lui	t3,0x10
    3934:	fffe0e13          	addi	t3,t3,-1 # ffff <_data_lma+0x59e7>
    3938:	01065793          	srli	a5,a2,0x10
    393c:	01c67633          	and	a2,a2,t3
    3940:	01061613          	slli	a2,a2,0x10
    3944:	01cf7f33          	and	t5,t5,t3
    3948:	00a78533          	add	a0,a5,a0
    394c:	01e60633          	add	a2,a2,t5
    3950:	0ca6fc63          	bgeu	a3,a0,3a28 <__divdf3+0x5ec>
    3954:	00d886b3          	add	a3,a7,a3
    3958:	fff80793          	addi	a5,a6,-1
    395c:	2516e863          	bltu	a3,a7,3bac <__divdf3+0x770>
    3960:	22a6e263          	bltu	a3,a0,3b84 <__divdf3+0x748>
    3964:	24a68a63          	beq	a3,a0,3bb8 <__divdf3+0x77c>
    3968:	00078813          	mv	a6,a5
    396c:	00186813          	ori	a6,a6,1
    3970:	d8dff06f          	j	36fc <__divdf3+0x2c0>
    3974:	00048513          	mv	a0,s1
    3978:	00000097          	auipc	ra,0x0
    397c:	55c080e7          	jalr	1372(ra) # 3ed4 <__clzsi2>
    3980:	01550713          	addi	a4,a0,21
    3984:	01c00593          	li	a1,28
    3988:	02050913          	addi	s2,a0,32
    398c:	00812603          	lw	a2,8(sp)
    3990:	00c12683          	lw	a3,12(sp)
    3994:	c8e5d6e3          	bge	a1,a4,3620 <__divdf3+0x1e4>
    3998:	ff850413          	addi	s0,a0,-8
    399c:	00849ab3          	sll	s5,s1,s0
    39a0:	00000b13          	li	s6,0
    39a4:	c99ff06f          	j	363c <__divdf3+0x200>
    39a8:	00060513          	mv	a0,a2
    39ac:	00c12423          	sw	a2,8(sp)
    39b0:	00000097          	auipc	ra,0x0
    39b4:	524080e7          	jalr	1316(ra) # 3ed4 <__clzsi2>
    39b8:	01550593          	addi	a1,a0,21
    39bc:	01c00713          	li	a4,28
    39c0:	00050793          	mv	a5,a0
    39c4:	00812603          	lw	a2,8(sp)
    39c8:	02050513          	addi	a0,a0,32
    39cc:	beb75ce3          	bge	a4,a1,35c4 <__divdf3+0x188>
    39d0:	ff878793          	addi	a5,a5,-8 # fff8 <_data_lma+0x59e0>
    39d4:	00000813          	li	a6,0
    39d8:	00f61433          	sll	s0,a2,a5
    39dc:	c05ff06f          	j	35e0 <__divdf3+0x1a4>
    39e0:	e8db74e3          	bgeu	s6,a3,3868 <__divdf3+0x42c>
    39e4:	006b0b33          	add	s6,s6,t1
    39e8:	006b3833          	sltu	a6,s6,t1
    39ec:	01180833          	add	a6,a6,a7
    39f0:	01070733          	add	a4,a4,a6
    39f4:	fff40813          	addi	a6,s0,-1
    39f8:	02e8fe63          	bgeu	a7,a4,3a34 <__divdf3+0x5f8>
    39fc:	16c76063          	bltu	a4,a2,3b5c <__divdf3+0x720>
    3a00:	14e60c63          	beq	a2,a4,3b58 <__divdf3+0x71c>
    3a04:	00080413          	mv	s0,a6
    3a08:	e61ff06f          	j	3868 <__divdf3+0x42c>
    3a0c:	d50b6ae3          	bltu	s6,a6,3760 <__divdf3+0x324>
    3a10:	01fa9713          	slli	a4,s5,0x1f
    3a14:	001b5613          	srli	a2,s6,0x1
    3a18:	001ada93          	srli	s5,s5,0x1
    3a1c:	00c76733          	or	a4,a4,a2
    3a20:	01fb1b13          	slli	s6,s6,0x1f
    3a24:	d49ff06f          	j	376c <__divdf3+0x330>
    3a28:	f4a692e3          	bne	a3,a0,396c <__divdf3+0x530>
    3a2c:	cc0608e3          	beqz	a2,36fc <__divdf3+0x2c0>
    3a30:	f25ff06f          	j	3954 <__divdf3+0x518>
    3a34:	fce898e3          	bne	a7,a4,3a04 <__divdf3+0x5c8>
    3a38:	fc6b72e3          	bgeu	s6,t1,39fc <__divdf3+0x5c0>
    3a3c:	00080413          	mv	s0,a6
    3a40:	e29ff06f          	j	3868 <__divdf3+0x42c>
    3a44:	00f87793          	andi	a5,a6,15
    3a48:	00400693          	li	a3,4
    3a4c:	cad78ee3          	beq	a5,a3,3708 <__divdf3+0x2cc>
    3a50:	ffc83793          	sltiu	a5,a6,-4
    3a54:	00480813          	addi	a6,a6,4
    3a58:	0017c793          	xori	a5,a5,1
    3a5c:	00385813          	srli	a6,a6,0x3
    3a60:	00f40433          	add	s0,s0,a5
    3a64:	ca9ff06f          	j	370c <__divdf3+0x2d0>
    3a68:	00000813          	li	a6,0
    3a6c:	00100793          	li	a5,1
    3a70:	fee048e3          	bgtz	a4,3a60 <__divdf3+0x624>
    3a74:	fff00813          	li	a6,-1
    3a78:	c40712e3          	bnez	a4,36bc <__divdf3+0x280>
    3a7c:	c0100913          	li	s2,-1023
    3a80:	00100793          	li	a5,1
    3a84:	41e90513          	addi	a0,s2,1054
    3a88:	00a41733          	sll	a4,s0,a0
    3a8c:	00f856b3          	srl	a3,a6,a5
    3a90:	00a81533          	sll	a0,a6,a0
    3a94:	00d76733          	or	a4,a4,a3
    3a98:	00a03533          	snez	a0,a0
    3a9c:	00a76733          	or	a4,a4,a0
    3aa0:	00777693          	andi	a3,a4,7
    3aa4:	00f45433          	srl	s0,s0,a5
    3aa8:	02068063          	beqz	a3,3ac8 <__divdf3+0x68c>
    3aac:	00f77793          	andi	a5,a4,15
    3ab0:	00400693          	li	a3,4
    3ab4:	00d78a63          	beq	a5,a3,3ac8 <__divdf3+0x68c>
    3ab8:	00470793          	addi	a5,a4,4
    3abc:	00e7b733          	sltu	a4,a5,a4
    3ac0:	00e40433          	add	s0,s0,a4
    3ac4:	00078713          	mv	a4,a5
    3ac8:	00841793          	slli	a5,s0,0x8
    3acc:	0607d863          	bgez	a5,3b3c <__divdf3+0x700>
    3ad0:	00100713          	li	a4,1
    3ad4:	00000793          	li	a5,0
    3ad8:	00000413          	li	s0,0
    3adc:	a65ff06f          	j	3540 <__divdf3+0x104>
    3ae0:	00070413          	mv	s0,a4
    3ae4:	d15ff06f          	j	37f8 <__divdf3+0x3bc>
    3ae8:	00050793          	mv	a5,a0
    3aec:	cd1ff06f          	j	37bc <__divdf3+0x380>
    3af0:	01f00693          	li	a3,31
    3af4:	f8f6d8e3          	bge	a3,a5,3a84 <__divdf3+0x648>
    3af8:	fe100693          	li	a3,-31
    3afc:	40e68733          	sub	a4,a3,a4
    3b00:	02000613          	li	a2,32
    3b04:	00e456b3          	srl	a3,s0,a4
    3b08:	00c78863          	beq	a5,a2,3b18 <__divdf3+0x6dc>
    3b0c:	43e90793          	addi	a5,s2,1086
    3b10:	00f417b3          	sll	a5,s0,a5
    3b14:	00f86833          	or	a6,a6,a5
    3b18:	01003733          	snez	a4,a6
    3b1c:	00d76733          	or	a4,a4,a3
    3b20:	00777413          	andi	s0,a4,7
    3b24:	00000793          	li	a5,0
    3b28:	02040063          	beqz	s0,3b48 <__divdf3+0x70c>
    3b2c:	00f77793          	andi	a5,a4,15
    3b30:	00400693          	li	a3,4
    3b34:	00000413          	li	s0,0
    3b38:	f8d790e3          	bne	a5,a3,3ab8 <__divdf3+0x67c>
    3b3c:	00941793          	slli	a5,s0,0x9
    3b40:	00c7d793          	srli	a5,a5,0xc
    3b44:	01d41413          	slli	s0,s0,0x1d
    3b48:	00375713          	srli	a4,a4,0x3
    3b4c:	00876433          	or	s0,a4,s0
    3b50:	00000713          	li	a4,0
    3b54:	9edff06f          	j	3540 <__divdf3+0x104>
    3b58:	eadb76e3          	bgeu	s6,a3,3a04 <__divdf3+0x5c8>
    3b5c:	006b0b33          	add	s6,s6,t1
    3b60:	006b3833          	sltu	a6,s6,t1
    3b64:	01180833          	add	a6,a6,a7
    3b68:	ffe40413          	addi	s0,s0,-2
    3b6c:	01070733          	add	a4,a4,a6
    3b70:	cf9ff06f          	j	3868 <__divdf3+0x42c>
    3b74:	000e0613          	mv	a2,t3
    3b78:	d79ff06f          	j	38f0 <__divdf3+0x4b4>
    3b7c:	00060813          	mv	a6,a2
    3b80:	d35ff06f          	j	38b4 <__divdf3+0x478>
    3b84:	00131793          	slli	a5,t1,0x1
    3b88:	0067b333          	sltu	t1,a5,t1
    3b8c:	011308b3          	add	a7,t1,a7
    3b90:	011686b3          	add	a3,a3,a7
    3b94:	ffe80813          	addi	a6,a6,-2
    3b98:	00078313          	mv	t1,a5
    3b9c:	dca698e3          	bne	a3,a0,396c <__divdf3+0x530>
    3ba0:	b4c30ee3          	beq	t1,a2,36fc <__divdf3+0x2c0>
    3ba4:	00186813          	ori	a6,a6,1
    3ba8:	b55ff06f          	j	36fc <__divdf3+0x2c0>
    3bac:	00078813          	mv	a6,a5
    3bb0:	fea688e3          	beq	a3,a0,3ba0 <__divdf3+0x764>
    3bb4:	db9ff06f          	j	396c <__divdf3+0x530>
    3bb8:	fcc366e3          	bltu	t1,a2,3b84 <__divdf3+0x748>
    3bbc:	00078813          	mv	a6,a5
    3bc0:	fec312e3          	bne	t1,a2,3ba4 <__divdf3+0x768>
    3bc4:	b39ff06f          	j	36fc <__divdf3+0x2c0>

00003bc8 <__gedf2>:
    3bc8:	0145d713          	srli	a4,a1,0x14
    3bcc:	001007b7          	lui	a5,0x100
    3bd0:	fff78793          	addi	a5,a5,-1 # fffff <_data_lma+0xf59e7>
    3bd4:	0146d813          	srli	a6,a3,0x14
    3bd8:	7ff77713          	andi	a4,a4,2047
    3bdc:	7ff00893          	li	a7,2047
    3be0:	00b7f333          	and	t1,a5,a1
    3be4:	00050e13          	mv	t3,a0
    3be8:	00d7f7b3          	and	a5,a5,a3
    3bec:	01f5d593          	srli	a1,a1,0x1f
    3bf0:	00060e93          	mv	t4,a2
    3bf4:	7ff87813          	andi	a6,a6,2047
    3bf8:	01f6d693          	srli	a3,a3,0x1f
    3bfc:	05170263          	beq	a4,a7,3c40 <__gedf2+0x78>
    3c00:	03180863          	beq	a6,a7,3c30 <__gedf2+0x68>
    3c04:	04071463          	bnez	a4,3c4c <__gedf2+0x84>
    3c08:	00a36533          	or	a0,t1,a0
    3c0c:	00081663          	bnez	a6,3c18 <__gedf2+0x50>
    3c10:	00c7e633          	or	a2,a5,a2
    3c14:	06060263          	beqz	a2,3c78 <__gedf2+0xb0>
    3c18:	04050a63          	beqz	a0,3c6c <__gedf2+0xa4>
    3c1c:	06d58c63          	beq	a1,a3,3c94 <__gedf2+0xcc>
    3c20:	00100693          	li	a3,1
    3c24:	04059663          	bnez	a1,3c70 <__gedf2+0xa8>
    3c28:	00068513          	mv	a0,a3
    3c2c:	00008067          	ret
    3c30:	00c7e8b3          	or	a7,a5,a2
    3c34:	fc0888e3          	beqz	a7,3c04 <__gedf2+0x3c>
    3c38:	ffe00693          	li	a3,-2
    3c3c:	fedff06f          	j	3c28 <__gedf2+0x60>
    3c40:	00a36533          	or	a0,t1,a0
    3c44:	fe051ae3          	bnez	a0,3c38 <__gedf2+0x70>
    3c48:	02e80e63          	beq	a6,a4,3c84 <__gedf2+0xbc>
    3c4c:	00081663          	bnez	a6,3c58 <__gedf2+0x90>
    3c50:	00c7e633          	or	a2,a5,a2
    3c54:	fc0606e3          	beqz	a2,3c20 <__gedf2+0x58>
    3c58:	fcd594e3          	bne	a1,a3,3c20 <__gedf2+0x58>
    3c5c:	02e85c63          	bge	a6,a4,3c94 <__gedf2+0xcc>
    3c60:	00069863          	bnez	a3,3c70 <__gedf2+0xa8>
    3c64:	00100693          	li	a3,1
    3c68:	fc1ff06f          	j	3c28 <__gedf2+0x60>
    3c6c:	fa069ee3          	bnez	a3,3c28 <__gedf2+0x60>
    3c70:	fff00693          	li	a3,-1
    3c74:	fb5ff06f          	j	3c28 <__gedf2+0x60>
    3c78:	00000693          	li	a3,0
    3c7c:	fa0506e3          	beqz	a0,3c28 <__gedf2+0x60>
    3c80:	fa1ff06f          	j	3c20 <__gedf2+0x58>
    3c84:	00c7e633          	or	a2,a5,a2
    3c88:	fc0608e3          	beqz	a2,3c58 <__gedf2+0x90>
    3c8c:	ffe00693          	li	a3,-2
    3c90:	f99ff06f          	j	3c28 <__gedf2+0x60>
    3c94:	01074a63          	blt	a4,a6,3ca8 <__gedf2+0xe0>
    3c98:	f867e4e3          	bltu	a5,t1,3c20 <__gedf2+0x58>
    3c9c:	00f30c63          	beq	t1,a5,3cb4 <__gedf2+0xec>
    3ca0:	00000693          	li	a3,0
    3ca4:	f8f372e3          	bgeu	t1,a5,3c28 <__gedf2+0x60>
    3ca8:	fc0584e3          	beqz	a1,3c70 <__gedf2+0xa8>
    3cac:	00058693          	mv	a3,a1
    3cb0:	f79ff06f          	j	3c28 <__gedf2+0x60>
    3cb4:	f7cee6e3          	bltu	t4,t3,3c20 <__gedf2+0x58>
    3cb8:	00000693          	li	a3,0
    3cbc:	f7de76e3          	bgeu	t3,t4,3c28 <__gedf2+0x60>
    3cc0:	fe9ff06f          	j	3ca8 <__gedf2+0xe0>

00003cc4 <__ledf2>:
    3cc4:	0145d713          	srli	a4,a1,0x14
    3cc8:	001007b7          	lui	a5,0x100
    3ccc:	fff78793          	addi	a5,a5,-1 # fffff <_data_lma+0xf59e7>
    3cd0:	0146d813          	srli	a6,a3,0x14
    3cd4:	7ff77713          	andi	a4,a4,2047
    3cd8:	7ff00893          	li	a7,2047
    3cdc:	00b7f333          	and	t1,a5,a1
    3ce0:	00050e13          	mv	t3,a0
    3ce4:	00d7f7b3          	and	a5,a5,a3
    3ce8:	01f5d593          	srli	a1,a1,0x1f
    3cec:	00060e93          	mv	t4,a2
    3cf0:	7ff87813          	andi	a6,a6,2047
    3cf4:	01f6d693          	srli	a3,a3,0x1f
    3cf8:	05170a63          	beq	a4,a7,3d4c <__ledf2+0x88>
    3cfc:	03180263          	beq	a6,a7,3d20 <__ledf2+0x5c>
    3d00:	04071c63          	bnez	a4,3d58 <__ledf2+0x94>
    3d04:	00a36533          	or	a0,t1,a0
    3d08:	02081663          	bnez	a6,3d34 <__ledf2+0x70>
    3d0c:	00c7e633          	or	a2,a5,a2
    3d10:	02061263          	bnez	a2,3d34 <__ledf2+0x70>
    3d14:	00000693          	li	a3,0
    3d18:	06050263          	beqz	a0,3d7c <__ledf2+0xb8>
    3d1c:	0200006f          	j	3d3c <__ledf2+0x78>
    3d20:	00c7e8b3          	or	a7,a5,a2
    3d24:	fc088ee3          	beqz	a7,3d00 <__ledf2+0x3c>
    3d28:	00200693          	li	a3,2
    3d2c:	00068513          	mv	a0,a3
    3d30:	00008067          	ret
    3d34:	04050263          	beqz	a0,3d78 <__ledf2+0xb4>
    3d38:	04d58e63          	beq	a1,a3,3d94 <__ledf2+0xd0>
    3d3c:	00100693          	li	a3,1
    3d40:	02058e63          	beqz	a1,3d7c <__ledf2+0xb8>
    3d44:	fff00693          	li	a3,-1
    3d48:	0340006f          	j	3d7c <__ledf2+0xb8>
    3d4c:	00a36533          	or	a0,t1,a0
    3d50:	fc051ce3          	bnez	a0,3d28 <__ledf2+0x64>
    3d54:	02e80863          	beq	a6,a4,3d84 <__ledf2+0xc0>
    3d58:	00081663          	bnez	a6,3d64 <__ledf2+0xa0>
    3d5c:	00c7e633          	or	a2,a5,a2
    3d60:	fc060ee3          	beqz	a2,3d3c <__ledf2+0x78>
    3d64:	fcd59ce3          	bne	a1,a3,3d3c <__ledf2+0x78>
    3d68:	02e85663          	bge	a6,a4,3d94 <__ledf2+0xd0>
    3d6c:	fc069ce3          	bnez	a3,3d44 <__ledf2+0x80>
    3d70:	00100693          	li	a3,1
    3d74:	0080006f          	j	3d7c <__ledf2+0xb8>
    3d78:	fc0686e3          	beqz	a3,3d44 <__ledf2+0x80>
    3d7c:	00068513          	mv	a0,a3
    3d80:	00008067          	ret
    3d84:	00c7e633          	or	a2,a5,a2
    3d88:	fc060ee3          	beqz	a2,3d64 <__ledf2+0xa0>
    3d8c:	00200693          	li	a3,2
    3d90:	f9dff06f          	j	3d2c <__ledf2+0x68>
    3d94:	01074a63          	blt	a4,a6,3da8 <__ledf2+0xe4>
    3d98:	fa67e2e3          	bltu	a5,t1,3d3c <__ledf2+0x78>
    3d9c:	00f30c63          	beq	t1,a5,3db4 <__ledf2+0xf0>
    3da0:	00000693          	li	a3,0
    3da4:	fcf37ce3          	bgeu	t1,a5,3d7c <__ledf2+0xb8>
    3da8:	f8058ee3          	beqz	a1,3d44 <__ledf2+0x80>
    3dac:	00058693          	mv	a3,a1
    3db0:	fcdff06f          	j	3d7c <__ledf2+0xb8>
    3db4:	f9cee4e3          	bltu	t4,t3,3d3c <__ledf2+0x78>
    3db8:	00000693          	li	a3,0
    3dbc:	fdde70e3          	bgeu	t3,t4,3d7c <__ledf2+0xb8>
    3dc0:	fe9ff06f          	j	3da8 <__ledf2+0xe4>

00003dc4 <__fixunsdfsi>:
    3dc4:	0145d793          	srli	a5,a1,0x14
    3dc8:	001006b7          	lui	a3,0x100
    3dcc:	fff68713          	addi	a4,a3,-1 # fffff <_data_lma+0xf59e7>
    3dd0:	7ff7f793          	andi	a5,a5,2047
    3dd4:	3fe00613          	li	a2,1022
    3dd8:	00050813          	mv	a6,a0
    3ddc:	00b77733          	and	a4,a4,a1
    3de0:	00000513          	li	a0,0
    3de4:	01f5d593          	srli	a1,a1,0x1f
    3de8:	00f65663          	bge	a2,a5,3df4 <__fixunsdfsi+0x30>
    3dec:	00058663          	beqz	a1,3df8 <__fixunsdfsi+0x34>
    3df0:	00008067          	ret
    3df4:	00008067          	ret
    3df8:	41e00613          	li	a2,1054
    3dfc:	fff00513          	li	a0,-1
    3e00:	fef648e3          	blt	a2,a5,3df0 <__fixunsdfsi+0x2c>
    3e04:	43300513          	li	a0,1075
    3e08:	40f50533          	sub	a0,a0,a5
    3e0c:	01f00613          	li	a2,31
    3e10:	00d76733          	or	a4,a4,a3
    3e14:	00a64c63          	blt	a2,a0,3e2c <__fixunsdfsi+0x68>
    3e18:	bed78793          	addi	a5,a5,-1043
    3e1c:	00f71733          	sll	a4,a4,a5
    3e20:	00a85533          	srl	a0,a6,a0
    3e24:	00a76533          	or	a0,a4,a0
    3e28:	00008067          	ret
    3e2c:	41300513          	li	a0,1043
    3e30:	40f507b3          	sub	a5,a0,a5
    3e34:	00f75533          	srl	a0,a4,a5
    3e38:	00008067          	ret

00003e3c <__floatunsidf>:
    3e3c:	ff010113          	addi	sp,sp,-16
    3e40:	00812423          	sw	s0,8(sp)
    3e44:	00112623          	sw	ra,12(sp)
    3e48:	00050413          	mv	s0,a0
    3e4c:	04050063          	beqz	a0,3e8c <__floatunsidf+0x50>
    3e50:	00000097          	auipc	ra,0x0
    3e54:	084080e7          	jalr	132(ra) # 3ed4 <__clzsi2>
    3e58:	41e00713          	li	a4,1054
    3e5c:	40a70733          	sub	a4,a4,a0
    3e60:	00a00793          	li	a5,10
    3e64:	7ff77713          	andi	a4,a4,2047
    3e68:	04a7ca63          	blt	a5,a0,3ebc <__floatunsidf+0x80>
    3e6c:	00b00793          	li	a5,11
    3e70:	40a787b3          	sub	a5,a5,a0
    3e74:	00f457b3          	srl	a5,s0,a5
    3e78:	01550513          	addi	a0,a0,21
    3e7c:	00c79793          	slli	a5,a5,0xc
    3e80:	00a41433          	sll	s0,s0,a0
    3e84:	00c7d793          	srli	a5,a5,0xc
    3e88:	00c0006f          	j	3e94 <__floatunsidf+0x58>
    3e8c:	00000713          	li	a4,0
    3e90:	00000793          	li	a5,0
    3e94:	00040513          	mv	a0,s0
    3e98:	00c12083          	lw	ra,12(sp)
    3e9c:	00812403          	lw	s0,8(sp)
    3ea0:	00c79793          	slli	a5,a5,0xc
    3ea4:	01471713          	slli	a4,a4,0x14
    3ea8:	00c7d793          	srli	a5,a5,0xc
    3eac:	00e7e7b3          	or	a5,a5,a4
    3eb0:	00078593          	mv	a1,a5
    3eb4:	01010113          	addi	sp,sp,16
    3eb8:	00008067          	ret
    3ebc:	ff550513          	addi	a0,a0,-11
    3ec0:	00a417b3          	sll	a5,s0,a0
    3ec4:	00c79793          	slli	a5,a5,0xc
    3ec8:	00c7d793          	srli	a5,a5,0xc
    3ecc:	00000413          	li	s0,0
    3ed0:	fc5ff06f          	j	3e94 <__floatunsidf+0x58>

00003ed4 <__clzsi2>:
    3ed4:	000107b7          	lui	a5,0x10
    3ed8:	04f57463          	bgeu	a0,a5,3f20 <__clzsi2+0x4c>
    3edc:	0ff00793          	li	a5,255
    3ee0:	02000713          	li	a4,32
    3ee4:	00a7ee63          	bltu	a5,a0,3f00 <__clzsi2+0x2c>
    3ee8:	00ffc797          	auipc	a5,0xffc
    3eec:	69478793          	addi	a5,a5,1684 # 100057c <__clz_tab>
    3ef0:	00a787b3          	add	a5,a5,a0
    3ef4:	0007c503          	lbu	a0,0(a5)
    3ef8:	40a70533          	sub	a0,a4,a0
    3efc:	00008067          	ret
    3f00:	00855513          	srli	a0,a0,0x8
    3f04:	00ffc797          	auipc	a5,0xffc
    3f08:	67878793          	addi	a5,a5,1656 # 100057c <__clz_tab>
    3f0c:	00a787b3          	add	a5,a5,a0
    3f10:	0007c503          	lbu	a0,0(a5)
    3f14:	01800713          	li	a4,24
    3f18:	40a70533          	sub	a0,a4,a0
    3f1c:	00008067          	ret
    3f20:	010007b7          	lui	a5,0x1000
    3f24:	02f56263          	bltu	a0,a5,3f48 <__clzsi2+0x74>
    3f28:	01855513          	srli	a0,a0,0x18
    3f2c:	00ffc797          	auipc	a5,0xffc
    3f30:	65078793          	addi	a5,a5,1616 # 100057c <__clz_tab>
    3f34:	00a787b3          	add	a5,a5,a0
    3f38:	0007c503          	lbu	a0,0(a5)
    3f3c:	00800713          	li	a4,8
    3f40:	40a70533          	sub	a0,a4,a0
    3f44:	00008067          	ret
    3f48:	01055513          	srli	a0,a0,0x10
    3f4c:	00ffc797          	auipc	a5,0xffc
    3f50:	63078793          	addi	a5,a5,1584 # 100057c <__clz_tab>
    3f54:	00a787b3          	add	a5,a5,a0
    3f58:	0007c503          	lbu	a0,0(a5)
    3f5c:	01000713          	li	a4,16
    3f60:	40a70533          	sub	a0,a4,a0
    3f64:	00008067          	ret

00003f68 <memset>:
    3f68:	00050313          	mv	t1,a0
    3f6c:	00060a63          	beqz	a2,3f80 <memset+0x18>
    3f70:	00b30023          	sb	a1,0(t1)
    3f74:	fff60613          	addi	a2,a2,-1
    3f78:	00130313          	addi	t1,t1,1
    3f7c:	fe061ae3          	bnez	a2,3f70 <memset+0x8>
    3f80:	00008067          	ret

00003f84 <__cvt>:
    3f84:	fd010113          	addi	sp,sp,-48
    3f88:	02812423          	sw	s0,40(sp)
    3f8c:	03212023          	sw	s2,32(sp)
    3f90:	01412c23          	sw	s4,24(sp)
    3f94:	01512a23          	sw	s5,20(sp)
    3f98:	01612823          	sw	s6,16(sp)
    3f9c:	02112623          	sw	ra,44(sp)
    3fa0:	02912223          	sw	s1,36(sp)
    3fa4:	01312e23          	sw	s3,28(sp)
    3fa8:	00070a13          	mv	s4,a4
    3fac:	00058a93          	mv	s5,a1
    3fb0:	00060413          	mv	s0,a2
    3fb4:	00068913          	mv	s2,a3
    3fb8:	00080b13          	mv	s6,a6
    3fbc:	00000713          	li	a4,0
    3fc0:	00065863          	bgez	a2,3fd0 <__cvt+0x4c>
    3fc4:	80000737          	lui	a4,0x80000
    3fc8:	00c74433          	xor	s0,a4,a2
    3fcc:	02d00713          	li	a4,45
    3fd0:	00e78023          	sb	a4,0(a5)
    3fd4:	fdf8f493          	andi	s1,a7,-33
    3fd8:	04600793          	li	a5,70
    3fdc:	00300693          	li	a3,3
    3fe0:	00f48a63          	beq	s1,a5,3ff4 <__cvt+0x70>
    3fe4:	04500793          	li	a5,69
    3fe8:	00200693          	li	a3,2
    3fec:	00f49463          	bne	s1,a5,3ff4 <__cvt+0x70>
    3ff0:	00190913          	addi	s2,s2,1
    3ff4:	000b0793          	mv	a5,s6
    3ff8:	00c10893          	addi	a7,sp,12
    3ffc:	00810813          	addi	a6,sp,8
    4000:	00090713          	mv	a4,s2
    4004:	000a8593          	mv	a1,s5
    4008:	00040613          	mv	a2,s0
    400c:	00001097          	auipc	ra,0x1
    4010:	6b4080e7          	jalr	1716(ra) # 56c0 <_dtoa_r>
    4014:	04700793          	li	a5,71
    4018:	00050993          	mv	s3,a0
    401c:	00f49663          	bne	s1,a5,4028 <__cvt+0xa4>
    4020:	001a7a13          	andi	s4,s4,1
    4024:	060a0c63          	beqz	s4,409c <__cvt+0x118>
    4028:	04600793          	li	a5,70
    402c:	01298a33          	add	s4,s3,s2
    4030:	04f49063          	bne	s1,a5,4070 <__cvt+0xec>
    4034:	0009c703          	lbu	a4,0(s3)
    4038:	03000793          	li	a5,48
    403c:	02f71663          	bne	a4,a5,4068 <__cvt+0xe4>
    4040:	00000613          	li	a2,0
    4044:	00000693          	li	a3,0
    4048:	000a8513          	mv	a0,s5
    404c:	00040593          	mv	a1,s0
    4050:	00005097          	auipc	ra,0x5
    4054:	120080e7          	jalr	288(ra) # 9170 <__eqdf2>
    4058:	00050863          	beqz	a0,4068 <__cvt+0xe4>
    405c:	00100793          	li	a5,1
    4060:	41278933          	sub	s2,a5,s2
    4064:	012b2023          	sw	s2,0(s6) # fffff000 <__freertos_irq_stack_top+0xfefef000>
    4068:	000b2783          	lw	a5,0(s6)
    406c:	00fa0a33          	add	s4,s4,a5
    4070:	00000613          	li	a2,0
    4074:	00000693          	li	a3,0
    4078:	000a8513          	mv	a0,s5
    407c:	00040593          	mv	a1,s0
    4080:	00005097          	auipc	ra,0x5
    4084:	0f0080e7          	jalr	240(ra) # 9170 <__eqdf2>
    4088:	00051463          	bnez	a0,4090 <__cvt+0x10c>
    408c:	01412623          	sw	s4,12(sp)
    4090:	03000713          	li	a4,48
    4094:	00c12783          	lw	a5,12(sp)
    4098:	0547e063          	bltu	a5,s4,40d8 <__cvt+0x154>
    409c:	00c12783          	lw	a5,12(sp)
    40a0:	03012703          	lw	a4,48(sp)
    40a4:	02c12083          	lw	ra,44(sp)
    40a8:	02812403          	lw	s0,40(sp)
    40ac:	413787b3          	sub	a5,a5,s3
    40b0:	00f72023          	sw	a5,0(a4) # 80000000 <__freertos_irq_stack_top+0x7eff0000>
    40b4:	00098513          	mv	a0,s3
    40b8:	02412483          	lw	s1,36(sp)
    40bc:	02012903          	lw	s2,32(sp)
    40c0:	01c12983          	lw	s3,28(sp)
    40c4:	01812a03          	lw	s4,24(sp)
    40c8:	01412a83          	lw	s5,20(sp)
    40cc:	01012b03          	lw	s6,16(sp)
    40d0:	03010113          	addi	sp,sp,48
    40d4:	00008067          	ret
    40d8:	00178693          	addi	a3,a5,1
    40dc:	00d12623          	sw	a3,12(sp)
    40e0:	00e78023          	sb	a4,0(a5)
    40e4:	fb1ff06f          	j	4094 <__cvt+0x110>

000040e8 <__exponent>:
    40e8:	00c50023          	sb	a2,0(a0)
    40ec:	00250713          	addi	a4,a0,2
    40f0:	02b00793          	li	a5,43
    40f4:	0005d663          	bgez	a1,4100 <__exponent+0x18>
    40f8:	40b005b3          	neg	a1,a1
    40fc:	02d00793          	li	a5,45
    4100:	00f500a3          	sb	a5,1(a0)
    4104:	00900793          	li	a5,9
    4108:	06b7d663          	bge	a5,a1,4174 <__exponent+0x8c>
    410c:	ff010113          	addi	sp,sp,-16
    4110:	00f10793          	addi	a5,sp,15
    4114:	00078893          	mv	a7,a5
    4118:	00a00813          	li	a6,10
    411c:	06300313          	li	t1,99
    4120:	0305e6b3          	rem	a3,a1,a6
    4124:	fff78613          	addi	a2,a5,-1
    4128:	03068693          	addi	a3,a3,48
    412c:	fed78fa3          	sb	a3,-1(a5)
    4130:	0305c6b3          	div	a3,a1,a6
    4134:	02b34063          	blt	t1,a1,4154 <__exponent+0x6c>
    4138:	03068693          	addi	a3,a3,48
    413c:	ffe78793          	addi	a5,a5,-2
    4140:	fed60fa3          	sb	a3,-1(a2)
    4144:	0117ee63          	bltu	a5,a7,4160 <__exponent+0x78>
    4148:	40a70533          	sub	a0,a4,a0
    414c:	01010113          	addi	sp,sp,16
    4150:	00008067          	ret
    4154:	00060793          	mv	a5,a2
    4158:	00068593          	mv	a1,a3
    415c:	fc5ff06f          	j	4120 <__exponent+0x38>
    4160:	00178793          	addi	a5,a5,1
    4164:	fff7c683          	lbu	a3,-1(a5)
    4168:	00170713          	addi	a4,a4,1
    416c:	fed70fa3          	sb	a3,-1(a4)
    4170:	fd5ff06f          	j	4144 <__exponent+0x5c>
    4174:	03000793          	li	a5,48
    4178:	00450713          	addi	a4,a0,4
    417c:	03058593          	addi	a1,a1,48
    4180:	00f50123          	sb	a5,2(a0)
    4184:	00b501a3          	sb	a1,3(a0)
    4188:	40a70533          	sub	a0,a4,a0
    418c:	00008067          	ret

00004190 <_printf_float>:
    4190:	f8010113          	addi	sp,sp,-128
    4194:	00e12e23          	sw	a4,28(sp)
    4198:	06112e23          	sw	ra,124(sp)
    419c:	06812c23          	sw	s0,120(sp)
    41a0:	06912a23          	sw	s1,116(sp)
    41a4:	00058413          	mv	s0,a1
    41a8:	07212823          	sw	s2,112(sp)
    41ac:	07312623          	sw	s3,108(sp)
    41b0:	07412423          	sw	s4,104(sp)
    41b4:	00068993          	mv	s3,a3
    41b8:	07612023          	sw	s6,96(sp)
    41bc:	05712e23          	sw	s7,92(sp)
    41c0:	05812c23          	sw	s8,88(sp)
    41c4:	00060913          	mv	s2,a2
    41c8:	07512223          	sw	s5,100(sp)
    41cc:	05912a23          	sw	s9,84(sp)
    41d0:	05a12823          	sw	s10,80(sp)
    41d4:	05b12623          	sw	s11,76(sp)
    41d8:	00050493          	mv	s1,a0
    41dc:	00003097          	auipc	ra,0x3
    41e0:	e58080e7          	jalr	-424(ra) # 7034 <_localeconv_r>
    41e4:	00052b83          	lw	s7,0(a0)
    41e8:	000b8513          	mv	a0,s7
    41ec:	00001097          	auipc	ra,0x1
    41f0:	018080e7          	jalr	24(ra) # 5204 <strlen>
    41f4:	00042b03          	lw	s6,0(s0)
    41f8:	01c12703          	lw	a4,28(sp)
    41fc:	02012c23          	sw	zero,56(sp)
    4200:	100b7693          	andi	a3,s6,256
    4204:	00050c13          	mv	s8,a0
    4208:	01844a03          	lbu	s4,24(s0)
    420c:	00072783          	lw	a5,0(a4)
    4210:	14068c63          	beqz	a3,4368 <_printf_float+0x1d8>
    4214:	00478693          	addi	a3,a5,4
    4218:	00d72023          	sw	a3,0(a4)
    421c:	0007a783          	lw	a5,0(a5)
    4220:	02010513          	addi	a0,sp,32
    4224:	0007a703          	lw	a4,0(a5)
    4228:	02e12023          	sw	a4,32(sp)
    422c:	0047a703          	lw	a4,4(a5)
    4230:	02e12223          	sw	a4,36(sp)
    4234:	0087a703          	lw	a4,8(a5)
    4238:	02e12423          	sw	a4,40(sp)
    423c:	00c7a783          	lw	a5,12(a5)
    4240:	02f12623          	sw	a5,44(sp)
    4244:	00006097          	auipc	ra,0x6
    4248:	03c080e7          	jalr	60(ra) # a280 <__trunctfdf2>
    424c:	04a42423          	sw	a0,72(s0)
    4250:	04b42623          	sw	a1,76(s0)
    4254:	04c42a83          	lw	s5,76(s0)
    4258:	00ffc717          	auipc	a4,0xffc
    425c:	42870713          	addi	a4,a4,1064 # 1000680 <__clz_tab+0x104>
    4260:	04842c83          	lw	s9,72(s0)
    4264:	00072d03          	lw	s10,0(a4)
    4268:	00472d83          	lw	s11,4(a4)
    426c:	001a9793          	slli	a5,s5,0x1
    4270:	0017d793          	srli	a5,a5,0x1
    4274:	000d0613          	mv	a2,s10
    4278:	000d8693          	mv	a3,s11
    427c:	000c8513          	mv	a0,s9
    4280:	00078593          	mv	a1,a5
    4284:	00f12e23          	sw	a5,28(sp)
    4288:	00006097          	auipc	ra,0x6
    428c:	e5c080e7          	jalr	-420(ra) # a0e4 <__unorddf2>
    4290:	0e051e63          	bnez	a0,438c <_printf_float+0x1fc>
    4294:	01c12783          	lw	a5,28(sp)
    4298:	000d0613          	mv	a2,s10
    429c:	000d8693          	mv	a3,s11
    42a0:	000c8513          	mv	a0,s9
    42a4:	00078593          	mv	a1,a5
    42a8:	00000097          	auipc	ra,0x0
    42ac:	a1c080e7          	jalr	-1508(ra) # 3cc4 <__ledf2>
    42b0:	0ca05e63          	blez	a0,438c <_printf_float+0x1fc>
    42b4:	00000613          	li	a2,0
    42b8:	00000693          	li	a3,0
    42bc:	000c8513          	mv	a0,s9
    42c0:	000a8593          	mv	a1,s5
    42c4:	00000097          	auipc	ra,0x0
    42c8:	a00080e7          	jalr	-1536(ra) # 3cc4 <__ledf2>
    42cc:	00055663          	bgez	a0,42d8 <_printf_float+0x148>
    42d0:	02d00793          	li	a5,45
    42d4:	04f401a3          	sb	a5,67(s0)
    42d8:	04700793          	li	a5,71
    42dc:	00ffca97          	auipc	s5,0xffc
    42e0:	3aca8a93          	addi	s5,s5,940 # 1000688 <__clz_tab+0x10c>
    42e4:	0147f663          	bgeu	a5,s4,42f0 <_printf_float+0x160>
    42e8:	00ffca97          	auipc	s5,0xffc
    42ec:	3a4a8a93          	addi	s5,s5,932 # 100068c <__clz_tab+0x110>
    42f0:	ffbb7b13          	andi	s6,s6,-5
    42f4:	00300793          	li	a5,3
    42f8:	01642023          	sw	s6,0(s0)
    42fc:	00f42823          	sw	a5,16(s0)
    4300:	00000b13          	li	s6,0
    4304:	00098713          	mv	a4,s3
    4308:	00090693          	mv	a3,s2
    430c:	03c10613          	addi	a2,sp,60
    4310:	00040593          	mv	a1,s0
    4314:	00048513          	mv	a0,s1
    4318:	00000097          	auipc	ra,0x0
    431c:	634080e7          	jalr	1588(ra) # 494c <_printf_common>
    4320:	fff00c93          	li	s9,-1
    4324:	23951863          	bne	a0,s9,4554 <_printf_float+0x3c4>
    4328:	fff00513          	li	a0,-1
    432c:	07c12083          	lw	ra,124(sp)
    4330:	07812403          	lw	s0,120(sp)
    4334:	07412483          	lw	s1,116(sp)
    4338:	07012903          	lw	s2,112(sp)
    433c:	06c12983          	lw	s3,108(sp)
    4340:	06812a03          	lw	s4,104(sp)
    4344:	06412a83          	lw	s5,100(sp)
    4348:	06012b03          	lw	s6,96(sp)
    434c:	05c12b83          	lw	s7,92(sp)
    4350:	05812c03          	lw	s8,88(sp)
    4354:	05412c83          	lw	s9,84(sp)
    4358:	05012d03          	lw	s10,80(sp)
    435c:	04c12d83          	lw	s11,76(sp)
    4360:	08010113          	addi	sp,sp,128
    4364:	00008067          	ret
    4368:	00778793          	addi	a5,a5,7
    436c:	ff87f793          	andi	a5,a5,-8
    4370:	00878693          	addi	a3,a5,8
    4374:	00d72023          	sw	a3,0(a4)
    4378:	0007a703          	lw	a4,0(a5)
    437c:	0047a783          	lw	a5,4(a5)
    4380:	04e42423          	sw	a4,72(s0)
    4384:	04f42623          	sw	a5,76(s0)
    4388:	ecdff06f          	j	4254 <_printf_float+0xc4>
    438c:	000c8613          	mv	a2,s9
    4390:	000a8693          	mv	a3,s5
    4394:	000c8513          	mv	a0,s9
    4398:	000a8593          	mv	a1,s5
    439c:	00006097          	auipc	ra,0x6
    43a0:	d48080e7          	jalr	-696(ra) # a0e4 <__unorddf2>
    43a4:	02050663          	beqz	a0,43d0 <_printf_float+0x240>
    43a8:	000ad663          	bgez	s5,43b4 <_printf_float+0x224>
    43ac:	02d00793          	li	a5,45
    43b0:	04f401a3          	sb	a5,67(s0)
    43b4:	04700793          	li	a5,71
    43b8:	00ffca97          	auipc	s5,0xffc
    43bc:	2d8a8a93          	addi	s5,s5,728 # 1000690 <__clz_tab+0x114>
    43c0:	f347f8e3          	bgeu	a5,s4,42f0 <_printf_float+0x160>
    43c4:	00ffca97          	auipc	s5,0xffc
    43c8:	2d0a8a93          	addi	s5,s5,720 # 1000694 <__clz_tab+0x118>
    43cc:	f25ff06f          	j	42f0 <_printf_float+0x160>
    43d0:	00442783          	lw	a5,4(s0)
    43d4:	fff00713          	li	a4,-1
    43d8:	0dfa7d13          	andi	s10,s4,223
    43dc:	0ce79663          	bne	a5,a4,44a8 <_printf_float+0x318>
    43e0:	00600793          	li	a5,6
    43e4:	00f42223          	sw	a5,4(s0)
    43e8:	00442683          	lw	a3,4(s0)
    43ec:	400b6713          	ori	a4,s6,1024
    43f0:	03810793          	addi	a5,sp,56
    43f4:	00f12023          	sw	a5,0(sp)
    43f8:	000a8613          	mv	a2,s5
    43fc:	03310793          	addi	a5,sp,51
    4400:	000c8593          	mv	a1,s9
    4404:	00e42023          	sw	a4,0(s0)
    4408:	00012223          	sw	zero,4(sp)
    440c:	000a0893          	mv	a7,s4
    4410:	03410813          	addi	a6,sp,52
    4414:	00048513          	mv	a0,s1
    4418:	00000097          	auipc	ra,0x0
    441c:	b6c080e7          	jalr	-1172(ra) # 3f84 <__cvt>
    4420:	04700793          	li	a5,71
    4424:	00050a93          	mv	s5,a0
    4428:	03412583          	lw	a1,52(sp)
    442c:	00fd1e63          	bne	s10,a5,4448 <_printf_float+0x2b8>
    4430:	ffd00793          	li	a5,-3
    4434:	00f5c663          	blt	a1,a5,4440 <_printf_float+0x2b0>
    4438:	00442783          	lw	a5,4(s0)
    443c:	0cb7de63          	bge	a5,a1,4518 <_printf_float+0x388>
    4440:	ffea0a13          	addi	s4,s4,-2
    4444:	0ffa7a13          	andi	s4,s4,255
    4448:	06500793          	li	a5,101
    444c:	0747e863          	bltu	a5,s4,44bc <_printf_float+0x32c>
    4450:	fff58593          	addi	a1,a1,-1
    4454:	000a0613          	mv	a2,s4
    4458:	05040513          	addi	a0,s0,80
    445c:	02b12a23          	sw	a1,52(sp)
    4460:	00000097          	auipc	ra,0x0
    4464:	c88080e7          	jalr	-888(ra) # 40e8 <__exponent>
    4468:	03812703          	lw	a4,56(sp)
    446c:	00100693          	li	a3,1
    4470:	00050b13          	mv	s6,a0
    4474:	00a707b3          	add	a5,a4,a0
    4478:	00f42823          	sw	a5,16(s0)
    447c:	00e6c863          	blt	a3,a4,448c <_printf_float+0x2fc>
    4480:	00042703          	lw	a4,0(s0)
    4484:	00177713          	andi	a4,a4,1
    4488:	00070663          	beqz	a4,4494 <_printf_float+0x304>
    448c:	00178793          	addi	a5,a5,1
    4490:	00f42823          	sw	a5,16(s0)
    4494:	03314783          	lbu	a5,51(sp)
    4498:	e60786e3          	beqz	a5,4304 <_printf_float+0x174>
    449c:	02d00793          	li	a5,45
    44a0:	04f401a3          	sb	a5,67(s0)
    44a4:	e61ff06f          	j	4304 <_printf_float+0x174>
    44a8:	04700713          	li	a4,71
    44ac:	f2ed1ee3          	bne	s10,a4,43e8 <_printf_float+0x258>
    44b0:	f2079ce3          	bnez	a5,43e8 <_printf_float+0x258>
    44b4:	00100793          	li	a5,1
    44b8:	f2dff06f          	j	43e4 <_printf_float+0x254>
    44bc:	06600793          	li	a5,102
    44c0:	04fa1e63          	bne	s4,a5,451c <_printf_float+0x38c>
    44c4:	00442783          	lw	a5,4(s0)
    44c8:	02b05463          	blez	a1,44f0 <_printf_float+0x360>
    44cc:	00b42823          	sw	a1,16(s0)
    44d0:	00079863          	bnez	a5,44e0 <_printf_float+0x350>
    44d4:	00042703          	lw	a4,0(s0)
    44d8:	00177713          	andi	a4,a4,1
    44dc:	02070863          	beqz	a4,450c <_printf_float+0x37c>
    44e0:	00178793          	addi	a5,a5,1
    44e4:	00b787b3          	add	a5,a5,a1
    44e8:	00f42823          	sw	a5,16(s0)
    44ec:	0200006f          	j	450c <_printf_float+0x37c>
    44f0:	00079a63          	bnez	a5,4504 <_printf_float+0x374>
    44f4:	00042703          	lw	a4,0(s0)
    44f8:	00100693          	li	a3,1
    44fc:	00177713          	andi	a4,a4,1
    4500:	00070463          	beqz	a4,4508 <_printf_float+0x378>
    4504:	00278693          	addi	a3,a5,2
    4508:	00d42823          	sw	a3,16(s0)
    450c:	04b42c23          	sw	a1,88(s0)
    4510:	00000b13          	li	s6,0
    4514:	f81ff06f          	j	4494 <_printf_float+0x304>
    4518:	06700a13          	li	s4,103
    451c:	03812783          	lw	a5,56(sp)
    4520:	00f5ce63          	blt	a1,a5,453c <_printf_float+0x3ac>
    4524:	00042783          	lw	a5,0(s0)
    4528:	00b42823          	sw	a1,16(s0)
    452c:	0017f793          	andi	a5,a5,1
    4530:	fc078ee3          	beqz	a5,450c <_printf_float+0x37c>
    4534:	00158793          	addi	a5,a1,1
    4538:	fb1ff06f          	j	44e8 <_printf_float+0x358>
    453c:	00100713          	li	a4,1
    4540:	00b04663          	bgtz	a1,454c <_printf_float+0x3bc>
    4544:	00200713          	li	a4,2
    4548:	40b70733          	sub	a4,a4,a1
    454c:	00e787b3          	add	a5,a5,a4
    4550:	f99ff06f          	j	44e8 <_printf_float+0x358>
    4554:	00042783          	lw	a5,0(s0)
    4558:	4007f713          	andi	a4,a5,1024
    455c:	02071e63          	bnez	a4,4598 <_printf_float+0x408>
    4560:	01042683          	lw	a3,16(s0)
    4564:	000a8613          	mv	a2,s5
    4568:	00090593          	mv	a1,s2
    456c:	00048513          	mv	a0,s1
    4570:	000980e7          	jalr	s3
    4574:	db950ae3          	beq	a0,s9,4328 <_printf_float+0x198>
    4578:	00042783          	lw	a5,0(s0)
    457c:	0027f793          	andi	a5,a5,2
    4580:	3a079e63          	bnez	a5,493c <_printf_float+0x7ac>
    4584:	03c12783          	lw	a5,60(sp)
    4588:	00c42503          	lw	a0,12(s0)
    458c:	daf550e3          	bge	a0,a5,432c <_printf_float+0x19c>
    4590:	00078513          	mv	a0,a5
    4594:	d99ff06f          	j	432c <_printf_float+0x19c>
    4598:	06500713          	li	a4,101
    459c:	29477663          	bgeu	a4,s4,4828 <_printf_float+0x698>
    45a0:	04842503          	lw	a0,72(s0)
    45a4:	04c42583          	lw	a1,76(s0)
    45a8:	00000613          	li	a2,0
    45ac:	00000693          	li	a3,0
    45b0:	00005097          	auipc	ra,0x5
    45b4:	bc0080e7          	jalr	-1088(ra) # 9170 <__eqdf2>
    45b8:	08051663          	bnez	a0,4644 <_printf_float+0x4b4>
    45bc:	00100693          	li	a3,1
    45c0:	00ffc617          	auipc	a2,0xffc
    45c4:	0d860613          	addi	a2,a2,216 # 1000698 <__clz_tab+0x11c>
    45c8:	00090593          	mv	a1,s2
    45cc:	00048513          	mv	a0,s1
    45d0:	000980e7          	jalr	s3
    45d4:	d5950ae3          	beq	a0,s9,4328 <_printf_float+0x198>
    45d8:	03412703          	lw	a4,52(sp)
    45dc:	03812783          	lw	a5,56(sp)
    45e0:	00f74863          	blt	a4,a5,45f0 <_printf_float+0x460>
    45e4:	00042783          	lw	a5,0(s0)
    45e8:	0017f793          	andi	a5,a5,1
    45ec:	f80786e3          	beqz	a5,4578 <_printf_float+0x3e8>
    45f0:	000c0693          	mv	a3,s8
    45f4:	000b8613          	mv	a2,s7
    45f8:	00090593          	mv	a1,s2
    45fc:	00048513          	mv	a0,s1
    4600:	000980e7          	jalr	s3
    4604:	fff00793          	li	a5,-1
    4608:	d2f500e3          	beq	a0,a5,4328 <_printf_float+0x198>
    460c:	00000a13          	li	s4,0
    4610:	01a40a93          	addi	s5,s0,26
    4614:	fff00b13          	li	s6,-1
    4618:	03812783          	lw	a5,56(sp)
    461c:	fff78793          	addi	a5,a5,-1
    4620:	f4fa5ce3          	bge	s4,a5,4578 <_printf_float+0x3e8>
    4624:	00100693          	li	a3,1
    4628:	000a8613          	mv	a2,s5
    462c:	00090593          	mv	a1,s2
    4630:	00048513          	mv	a0,s1
    4634:	000980e7          	jalr	s3
    4638:	cf6508e3          	beq	a0,s6,4328 <_printf_float+0x198>
    463c:	001a0a13          	addi	s4,s4,1
    4640:	fd9ff06f          	j	4618 <_printf_float+0x488>
    4644:	03412783          	lw	a5,52(sp)
    4648:	0af04863          	bgtz	a5,46f8 <_printf_float+0x568>
    464c:	00100693          	li	a3,1
    4650:	00ffc617          	auipc	a2,0xffc
    4654:	04860613          	addi	a2,a2,72 # 1000698 <__clz_tab+0x11c>
    4658:	00090593          	mv	a1,s2
    465c:	00048513          	mv	a0,s1
    4660:	000980e7          	jalr	s3
    4664:	cd9502e3          	beq	a0,s9,4328 <_printf_float+0x198>
    4668:	03412783          	lw	a5,52(sp)
    466c:	03812703          	lw	a4,56(sp)
    4670:	00e7e7b3          	or	a5,a5,a4
    4674:	00079863          	bnez	a5,4684 <_printf_float+0x4f4>
    4678:	00042783          	lw	a5,0(s0)
    467c:	0017f793          	andi	a5,a5,1
    4680:	ee078ce3          	beqz	a5,4578 <_printf_float+0x3e8>
    4684:	000c0693          	mv	a3,s8
    4688:	000b8613          	mv	a2,s7
    468c:	00090593          	mv	a1,s2
    4690:	00048513          	mv	a0,s1
    4694:	000980e7          	jalr	s3
    4698:	fff00793          	li	a5,-1
    469c:	c8f506e3          	beq	a0,a5,4328 <_printf_float+0x198>
    46a0:	00000a13          	li	s4,0
    46a4:	01a40b13          	addi	s6,s0,26
    46a8:	fff00b93          	li	s7,-1
    46ac:	03412783          	lw	a5,52(sp)
    46b0:	40f007b3          	neg	a5,a5
    46b4:	02fa4263          	blt	s4,a5,46d8 <_printf_float+0x548>
    46b8:	03812683          	lw	a3,56(sp)
    46bc:	000a8613          	mv	a2,s5
    46c0:	00090593          	mv	a1,s2
    46c4:	00048513          	mv	a0,s1
    46c8:	000980e7          	jalr	s3
    46cc:	fff00793          	li	a5,-1
    46d0:	eaf514e3          	bne	a0,a5,4578 <_printf_float+0x3e8>
    46d4:	c55ff06f          	j	4328 <_printf_float+0x198>
    46d8:	00100693          	li	a3,1
    46dc:	000b0613          	mv	a2,s6
    46e0:	00090593          	mv	a1,s2
    46e4:	00048513          	mv	a0,s1
    46e8:	000980e7          	jalr	s3
    46ec:	c3750ee3          	beq	a0,s7,4328 <_printf_float+0x198>
    46f0:	001a0a13          	addi	s4,s4,1
    46f4:	fb9ff06f          	j	46ac <_printf_float+0x51c>
    46f8:	05842783          	lw	a5,88(s0)
    46fc:	03812a03          	lw	s4,56(sp)
    4700:	0147d463          	bge	a5,s4,4708 <_printf_float+0x578>
    4704:	00078a13          	mv	s4,a5
    4708:	03405063          	blez	s4,4728 <_printf_float+0x598>
    470c:	000a0693          	mv	a3,s4
    4710:	000a8613          	mv	a2,s5
    4714:	00090593          	mv	a1,s2
    4718:	00048513          	mv	a0,s1
    471c:	000980e7          	jalr	s3
    4720:	fff00793          	li	a5,-1
    4724:	c0f502e3          	beq	a0,a5,4328 <_printf_float+0x198>
    4728:	00000c93          	li	s9,0
    472c:	01a40d13          	addi	s10,s0,26
    4730:	fff00d93          	li	s11,-1
    4734:	0200006f          	j	4754 <_printf_float+0x5c4>
    4738:	00100693          	li	a3,1
    473c:	000d0613          	mv	a2,s10
    4740:	00090593          	mv	a1,s2
    4744:	00048513          	mv	a0,s1
    4748:	000980e7          	jalr	s3
    474c:	bdb50ee3          	beq	a0,s11,4328 <_printf_float+0x198>
    4750:	001c8c93          	addi	s9,s9,1
    4754:	05842b03          	lw	s6,88(s0)
    4758:	000a0793          	mv	a5,s4
    475c:	000a5463          	bgez	s4,4764 <_printf_float+0x5d4>
    4760:	00000793          	li	a5,0
    4764:	40fb07b3          	sub	a5,s6,a5
    4768:	fcfcc8e3          	blt	s9,a5,4738 <_printf_float+0x5a8>
    476c:	03412703          	lw	a4,52(sp)
    4770:	03812783          	lw	a5,56(sp)
    4774:	04f74a63          	blt	a4,a5,47c8 <_printf_float+0x638>
    4778:	00042783          	lw	a5,0(s0)
    477c:	0017f793          	andi	a5,a5,1
    4780:	04079463          	bnez	a5,47c8 <_printf_float+0x638>
    4784:	03812783          	lw	a5,56(sp)
    4788:	03412703          	lw	a4,52(sp)
    478c:	40e78a33          	sub	s4,a5,a4
    4790:	00eb4463          	blt	s6,a4,4798 <_printf_float+0x608>
    4794:	41678a33          	sub	s4,a5,s6
    4798:	03405063          	blez	s4,47b8 <_printf_float+0x628>
    479c:	000a0693          	mv	a3,s4
    47a0:	016a8633          	add	a2,s5,s6
    47a4:	00090593          	mv	a1,s2
    47a8:	00048513          	mv	a0,s1
    47ac:	000980e7          	jalr	s3
    47b0:	fff00793          	li	a5,-1
    47b4:	b6f50ae3          	beq	a0,a5,4328 <_printf_float+0x198>
    47b8:	00000a93          	li	s5,0
    47bc:	01a40b13          	addi	s6,s0,26
    47c0:	fff00b93          	li	s7,-1
    47c4:	0400006f          	j	4804 <_printf_float+0x674>
    47c8:	000c0693          	mv	a3,s8
    47cc:	000b8613          	mv	a2,s7
    47d0:	00090593          	mv	a1,s2
    47d4:	00048513          	mv	a0,s1
    47d8:	000980e7          	jalr	s3
    47dc:	fff00793          	li	a5,-1
    47e0:	faf512e3          	bne	a0,a5,4784 <_printf_float+0x5f4>
    47e4:	b45ff06f          	j	4328 <_printf_float+0x198>
    47e8:	00100693          	li	a3,1
    47ec:	000b0613          	mv	a2,s6
    47f0:	00090593          	mv	a1,s2
    47f4:	00048513          	mv	a0,s1
    47f8:	000980e7          	jalr	s3
    47fc:	b37506e3          	beq	a0,s7,4328 <_printf_float+0x198>
    4800:	001a8a93          	addi	s5,s5,1
    4804:	03412703          	lw	a4,52(sp)
    4808:	03812783          	lw	a5,56(sp)
    480c:	40e787b3          	sub	a5,a5,a4
    4810:	000a0713          	mv	a4,s4
    4814:	000a5463          	bgez	s4,481c <_printf_float+0x68c>
    4818:	00000713          	li	a4,0
    481c:	40e787b3          	sub	a5,a5,a4
    4820:	fcfac4e3          	blt	s5,a5,47e8 <_printf_float+0x658>
    4824:	d55ff06f          	j	4578 <_printf_float+0x3e8>
    4828:	03812683          	lw	a3,56(sp)
    482c:	00100713          	li	a4,1
    4830:	00d74663          	blt	a4,a3,483c <_printf_float+0x6ac>
    4834:	0017f793          	andi	a5,a5,1
    4838:	0a078c63          	beqz	a5,48f0 <_printf_float+0x760>
    483c:	00100693          	li	a3,1
    4840:	000a8613          	mv	a2,s5
    4844:	00090593          	mv	a1,s2
    4848:	00048513          	mv	a0,s1
    484c:	000980e7          	jalr	s3
    4850:	fff00a13          	li	s4,-1
    4854:	ad450ae3          	beq	a0,s4,4328 <_printf_float+0x198>
    4858:	000c0693          	mv	a3,s8
    485c:	000b8613          	mv	a2,s7
    4860:	00090593          	mv	a1,s2
    4864:	00048513          	mv	a0,s1
    4868:	000980e7          	jalr	s3
    486c:	ab450ee3          	beq	a0,s4,4328 <_printf_float+0x198>
    4870:	04842503          	lw	a0,72(s0)
    4874:	04c42583          	lw	a1,76(s0)
    4878:	00000613          	li	a2,0
    487c:	00000693          	li	a3,0
    4880:	00005097          	auipc	ra,0x5
    4884:	8f0080e7          	jalr	-1808(ra) # 9170 <__eqdf2>
    4888:	04050c63          	beqz	a0,48e0 <_printf_float+0x750>
    488c:	03812683          	lw	a3,56(sp)
    4890:	001a8613          	addi	a2,s5,1
    4894:	00090593          	mv	a1,s2
    4898:	fff68693          	addi	a3,a3,-1
    489c:	00048513          	mv	a0,s1
    48a0:	000980e7          	jalr	s3
    48a4:	a94502e3          	beq	a0,s4,4328 <_printf_float+0x198>
    48a8:	000b0693          	mv	a3,s6
    48ac:	05040613          	addi	a2,s0,80
    48b0:	e11ff06f          	j	46c0 <_printf_float+0x530>
    48b4:	00100693          	li	a3,1
    48b8:	000a8613          	mv	a2,s5
    48bc:	00090593          	mv	a1,s2
    48c0:	00048513          	mv	a0,s1
    48c4:	000980e7          	jalr	s3
    48c8:	a77500e3          	beq	a0,s7,4328 <_printf_float+0x198>
    48cc:	001a0a13          	addi	s4,s4,1
    48d0:	03812783          	lw	a5,56(sp)
    48d4:	fff78793          	addi	a5,a5,-1
    48d8:	fcfa4ee3          	blt	s4,a5,48b4 <_printf_float+0x724>
    48dc:	fcdff06f          	j	48a8 <_printf_float+0x718>
    48e0:	00000a13          	li	s4,0
    48e4:	01a40a93          	addi	s5,s0,26
    48e8:	fff00b93          	li	s7,-1
    48ec:	fe5ff06f          	j	48d0 <_printf_float+0x740>
    48f0:	00100693          	li	a3,1
    48f4:	000a8613          	mv	a2,s5
    48f8:	00090593          	mv	a1,s2
    48fc:	00048513          	mv	a0,s1
    4900:	000980e7          	jalr	s3
    4904:	fb9512e3          	bne	a0,s9,48a8 <_printf_float+0x718>
    4908:	a21ff06f          	j	4328 <_printf_float+0x198>
    490c:	00100693          	li	a3,1
    4910:	000a8613          	mv	a2,s5
    4914:	00090593          	mv	a1,s2
    4918:	00048513          	mv	a0,s1
    491c:	000980e7          	jalr	s3
    4920:	a16504e3          	beq	a0,s6,4328 <_printf_float+0x198>
    4924:	001a0a13          	addi	s4,s4,1
    4928:	00c42783          	lw	a5,12(s0)
    492c:	03c12703          	lw	a4,60(sp)
    4930:	40e787b3          	sub	a5,a5,a4
    4934:	fcfa4ce3          	blt	s4,a5,490c <_printf_float+0x77c>
    4938:	c4dff06f          	j	4584 <_printf_float+0x3f4>
    493c:	00000a13          	li	s4,0
    4940:	01940a93          	addi	s5,s0,25
    4944:	fff00b13          	li	s6,-1
    4948:	fe1ff06f          	j	4928 <_printf_float+0x798>

0000494c <_printf_common>:
    494c:	fd010113          	addi	sp,sp,-48
    4950:	01512a23          	sw	s5,20(sp)
    4954:	0105a783          	lw	a5,16(a1)
    4958:	00070a93          	mv	s5,a4
    495c:	0085a703          	lw	a4,8(a1)
    4960:	02812423          	sw	s0,40(sp)
    4964:	02912223          	sw	s1,36(sp)
    4968:	01312e23          	sw	s3,28(sp)
    496c:	01412c23          	sw	s4,24(sp)
    4970:	02112623          	sw	ra,44(sp)
    4974:	03212023          	sw	s2,32(sp)
    4978:	01612823          	sw	s6,16(sp)
    497c:	01712623          	sw	s7,12(sp)
    4980:	00050993          	mv	s3,a0
    4984:	00058413          	mv	s0,a1
    4988:	00060493          	mv	s1,a2
    498c:	00068a13          	mv	s4,a3
    4990:	00e7d463          	bge	a5,a4,4998 <_printf_common+0x4c>
    4994:	00070793          	mv	a5,a4
    4998:	00f4a023          	sw	a5,0(s1)
    499c:	04344703          	lbu	a4,67(s0)
    49a0:	00070663          	beqz	a4,49ac <_printf_common+0x60>
    49a4:	00178793          	addi	a5,a5,1
    49a8:	00f4a023          	sw	a5,0(s1)
    49ac:	00042783          	lw	a5,0(s0)
    49b0:	0207f793          	andi	a5,a5,32
    49b4:	00078863          	beqz	a5,49c4 <_printf_common+0x78>
    49b8:	0004a783          	lw	a5,0(s1)
    49bc:	00278793          	addi	a5,a5,2
    49c0:	00f4a023          	sw	a5,0(s1)
    49c4:	00042903          	lw	s2,0(s0)
    49c8:	00697913          	andi	s2,s2,6
    49cc:	00091e63          	bnez	s2,49e8 <_printf_common+0x9c>
    49d0:	01940b13          	addi	s6,s0,25
    49d4:	fff00b93          	li	s7,-1
    49d8:	00c42783          	lw	a5,12(s0)
    49dc:	0004a703          	lw	a4,0(s1)
    49e0:	40e787b3          	sub	a5,a5,a4
    49e4:	08f94263          	blt	s2,a5,4a68 <_printf_common+0x11c>
    49e8:	00042783          	lw	a5,0(s0)
    49ec:	04344683          	lbu	a3,67(s0)
    49f0:	0207f793          	andi	a5,a5,32
    49f4:	00d036b3          	snez	a3,a3
    49f8:	0c079063          	bnez	a5,4ab8 <_printf_common+0x16c>
    49fc:	04340613          	addi	a2,s0,67
    4a00:	000a0593          	mv	a1,s4
    4a04:	00098513          	mv	a0,s3
    4a08:	000a80e7          	jalr	s5
    4a0c:	fff00793          	li	a5,-1
    4a10:	06f50863          	beq	a0,a5,4a80 <_printf_common+0x134>
    4a14:	00042783          	lw	a5,0(s0)
    4a18:	00400613          	li	a2,4
    4a1c:	0004a703          	lw	a4,0(s1)
    4a20:	0067f793          	andi	a5,a5,6
    4a24:	00c42683          	lw	a3,12(s0)
    4a28:	00000493          	li	s1,0
    4a2c:	00c79863          	bne	a5,a2,4a3c <_printf_common+0xf0>
    4a30:	40e684b3          	sub	s1,a3,a4
    4a34:	0004d463          	bgez	s1,4a3c <_printf_common+0xf0>
    4a38:	00000493          	li	s1,0
    4a3c:	00842783          	lw	a5,8(s0)
    4a40:	01042703          	lw	a4,16(s0)
    4a44:	00f75663          	bge	a4,a5,4a50 <_printf_common+0x104>
    4a48:	40e787b3          	sub	a5,a5,a4
    4a4c:	00f484b3          	add	s1,s1,a5
    4a50:	00000913          	li	s2,0
    4a54:	01a40413          	addi	s0,s0,26
    4a58:	fff00b13          	li	s6,-1
    4a5c:	09249063          	bne	s1,s2,4adc <_printf_common+0x190>
    4a60:	00000513          	li	a0,0
    4a64:	0200006f          	j	4a84 <_printf_common+0x138>
    4a68:	00100693          	li	a3,1
    4a6c:	000b0613          	mv	a2,s6
    4a70:	000a0593          	mv	a1,s4
    4a74:	00098513          	mv	a0,s3
    4a78:	000a80e7          	jalr	s5
    4a7c:	03751a63          	bne	a0,s7,4ab0 <_printf_common+0x164>
    4a80:	fff00513          	li	a0,-1
    4a84:	02c12083          	lw	ra,44(sp)
    4a88:	02812403          	lw	s0,40(sp)
    4a8c:	02412483          	lw	s1,36(sp)
    4a90:	02012903          	lw	s2,32(sp)
    4a94:	01c12983          	lw	s3,28(sp)
    4a98:	01812a03          	lw	s4,24(sp)
    4a9c:	01412a83          	lw	s5,20(sp)
    4aa0:	01012b03          	lw	s6,16(sp)
    4aa4:	00c12b83          	lw	s7,12(sp)
    4aa8:	03010113          	addi	sp,sp,48
    4aac:	00008067          	ret
    4ab0:	00190913          	addi	s2,s2,1
    4ab4:	f25ff06f          	j	49d8 <_printf_common+0x8c>
    4ab8:	00d40733          	add	a4,s0,a3
    4abc:	03000613          	li	a2,48
    4ac0:	04c701a3          	sb	a2,67(a4)
    4ac4:	04544703          	lbu	a4,69(s0)
    4ac8:	00168793          	addi	a5,a3,1
    4acc:	00f407b3          	add	a5,s0,a5
    4ad0:	00268693          	addi	a3,a3,2
    4ad4:	04e781a3          	sb	a4,67(a5)
    4ad8:	f25ff06f          	j	49fc <_printf_common+0xb0>
    4adc:	00100693          	li	a3,1
    4ae0:	00040613          	mv	a2,s0
    4ae4:	000a0593          	mv	a1,s4
    4ae8:	00098513          	mv	a0,s3
    4aec:	000a80e7          	jalr	s5
    4af0:	f96508e3          	beq	a0,s6,4a80 <_printf_common+0x134>
    4af4:	00190913          	addi	s2,s2,1
    4af8:	f65ff06f          	j	4a5c <_printf_common+0x110>

00004afc <_printf_i>:
    4afc:	fd010113          	addi	sp,sp,-48
    4b00:	02812423          	sw	s0,40(sp)
    4b04:	02912223          	sw	s1,36(sp)
    4b08:	03212023          	sw	s2,32(sp)
    4b0c:	01312e23          	sw	s3,28(sp)
    4b10:	02112623          	sw	ra,44(sp)
    4b14:	01412c23          	sw	s4,24(sp)
    4b18:	01512a23          	sw	s5,20(sp)
    4b1c:	01612823          	sw	s6,16(sp)
    4b20:	00068993          	mv	s3,a3
    4b24:	0185c683          	lbu	a3,24(a1)
    4b28:	06e00793          	li	a5,110
    4b2c:	00060913          	mv	s2,a2
    4b30:	00050493          	mv	s1,a0
    4b34:	00058413          	mv	s0,a1
    4b38:	04358613          	addi	a2,a1,67
    4b3c:	28f68a63          	beq	a3,a5,4dd0 <_printf_i+0x2d4>
    4b40:	06d7ea63          	bltu	a5,a3,4bb4 <_printf_i+0xb8>
    4b44:	06300793          	li	a5,99
    4b48:	0af68e63          	beq	a3,a5,4c04 <_printf_i+0x108>
    4b4c:	00d7ee63          	bltu	a5,a3,4b68 <_printf_i+0x6c>
    4b50:	2a068e63          	beqz	a3,4e0c <_printf_i+0x310>
    4b54:	05800793          	li	a5,88
    4b58:	1ef68c63          	beq	a3,a5,4d50 <_printf_i+0x254>
    4b5c:	04240a93          	addi	s5,s0,66
    4b60:	04d40123          	sb	a3,66(s0)
    4b64:	0b80006f          	j	4c1c <_printf_i+0x120>
    4b68:	06400793          	li	a5,100
    4b6c:	00f68663          	beq	a3,a5,4b78 <_printf_i+0x7c>
    4b70:	06900793          	li	a5,105
    4b74:	fef694e3          	bne	a3,a5,4b5c <_printf_i+0x60>
    4b78:	00042783          	lw	a5,0(s0)
    4b7c:	00072503          	lw	a0,0(a4)
    4b80:	0807f693          	andi	a3,a5,128
    4b84:	00450593          	addi	a1,a0,4
    4b88:	08068e63          	beqz	a3,4c24 <_printf_i+0x128>
    4b8c:	00052783          	lw	a5,0(a0)
    4b90:	00b72023          	sw	a1,0(a4)
    4b94:	0007d863          	bgez	a5,4ba4 <_printf_i+0xa8>
    4b98:	02d00713          	li	a4,45
    4b9c:	40f007b3          	neg	a5,a5
    4ba0:	04e401a3          	sb	a4,67(s0)
    4ba4:	00ffc697          	auipc	a3,0xffc
    4ba8:	af868693          	addi	a3,a3,-1288 # 100069c <__clz_tab+0x120>
    4bac:	00a00713          	li	a4,10
    4bb0:	0d80006f          	j	4c88 <_printf_i+0x18c>
    4bb4:	07300793          	li	a5,115
    4bb8:	26f68063          	beq	a3,a5,4e18 <_printf_i+0x31c>
    4bbc:	02d7e263          	bltu	a5,a3,4be0 <_printf_i+0xe4>
    4bc0:	06f00793          	li	a5,111
    4bc4:	06f68e63          	beq	a3,a5,4c40 <_printf_i+0x144>
    4bc8:	07000793          	li	a5,112
    4bcc:	f8f698e3          	bne	a3,a5,4b5c <_printf_i+0x60>
    4bd0:	0005a783          	lw	a5,0(a1)
    4bd4:	0207e793          	ori	a5,a5,32
    4bd8:	00f5a023          	sw	a5,0(a1)
    4bdc:	0140006f          	j	4bf0 <_printf_i+0xf4>
    4be0:	07500793          	li	a5,117
    4be4:	04f68e63          	beq	a3,a5,4c40 <_printf_i+0x144>
    4be8:	07800793          	li	a5,120
    4bec:	f6f698e3          	bne	a3,a5,4b5c <_printf_i+0x60>
    4bf0:	07800793          	li	a5,120
    4bf4:	04f402a3          	sb	a5,69(s0)
    4bf8:	00ffc697          	auipc	a3,0xffc
    4bfc:	ab868693          	addi	a3,a3,-1352 # 10006b0 <__clz_tab+0x134>
    4c00:	15c0006f          	j	4d5c <_printf_i+0x260>
    4c04:	00072783          	lw	a5,0(a4)
    4c08:	04258a93          	addi	s5,a1,66
    4c0c:	00478693          	addi	a3,a5,4
    4c10:	0007a783          	lw	a5,0(a5)
    4c14:	00d72023          	sw	a3,0(a4)
    4c18:	04f58123          	sb	a5,66(a1)
    4c1c:	00100793          	li	a5,1
    4c20:	22c0006f          	j	4e4c <_printf_i+0x350>
    4c24:	0407f693          	andi	a3,a5,64
    4c28:	00052783          	lw	a5,0(a0)
    4c2c:	00b72023          	sw	a1,0(a4)
    4c30:	f60682e3          	beqz	a3,4b94 <_printf_i+0x98>
    4c34:	01079793          	slli	a5,a5,0x10
    4c38:	4107d793          	srai	a5,a5,0x10
    4c3c:	f59ff06f          	j	4b94 <_printf_i+0x98>
    4c40:	00042583          	lw	a1,0(s0)
    4c44:	00072783          	lw	a5,0(a4)
    4c48:	0805f813          	andi	a6,a1,128
    4c4c:	00478513          	addi	a0,a5,4
    4c50:	00080863          	beqz	a6,4c60 <_printf_i+0x164>
    4c54:	00a72023          	sw	a0,0(a4)
    4c58:	0007a783          	lw	a5,0(a5)
    4c5c:	0140006f          	j	4c70 <_printf_i+0x174>
    4c60:	0405f593          	andi	a1,a1,64
    4c64:	00a72023          	sw	a0,0(a4)
    4c68:	fe0588e3          	beqz	a1,4c58 <_printf_i+0x15c>
    4c6c:	0007d783          	lhu	a5,0(a5)
    4c70:	06f00713          	li	a4,111
    4c74:	14e68263          	beq	a3,a4,4db8 <_printf_i+0x2bc>
    4c78:	00ffc697          	auipc	a3,0xffc
    4c7c:	a2468693          	addi	a3,a3,-1500 # 100069c <__clz_tab+0x120>
    4c80:	00a00713          	li	a4,10
    4c84:	040401a3          	sb	zero,67(s0)
    4c88:	00442583          	lw	a1,4(s0)
    4c8c:	00b42423          	sw	a1,8(s0)
    4c90:	0005c863          	bltz	a1,4ca0 <_printf_i+0x1a4>
    4c94:	00042503          	lw	a0,0(s0)
    4c98:	ffb57513          	andi	a0,a0,-5
    4c9c:	00a42023          	sw	a0,0(s0)
    4ca0:	00079663          	bnez	a5,4cac <_printf_i+0x1b0>
    4ca4:	00060a93          	mv	s5,a2
    4ca8:	02058263          	beqz	a1,4ccc <_printf_i+0x1d0>
    4cac:	00060a93          	mv	s5,a2
    4cb0:	02e7f5b3          	remu	a1,a5,a4
    4cb4:	fffa8a93          	addi	s5,s5,-1
    4cb8:	00b685b3          	add	a1,a3,a1
    4cbc:	0005c583          	lbu	a1,0(a1)
    4cc0:	00ba8023          	sb	a1,0(s5)
    4cc4:	02e7d5b3          	divu	a1,a5,a4
    4cc8:	10e7f063          	bgeu	a5,a4,4dc8 <_printf_i+0x2cc>
    4ccc:	00800793          	li	a5,8
    4cd0:	02f71463          	bne	a4,a5,4cf8 <_printf_i+0x1fc>
    4cd4:	00042783          	lw	a5,0(s0)
    4cd8:	0017f793          	andi	a5,a5,1
    4cdc:	00078e63          	beqz	a5,4cf8 <_printf_i+0x1fc>
    4ce0:	00442703          	lw	a4,4(s0)
    4ce4:	01042783          	lw	a5,16(s0)
    4ce8:	00e7c863          	blt	a5,a4,4cf8 <_printf_i+0x1fc>
    4cec:	03000793          	li	a5,48
    4cf0:	fefa8fa3          	sb	a5,-1(s5)
    4cf4:	fffa8a93          	addi	s5,s5,-1
    4cf8:	41560633          	sub	a2,a2,s5
    4cfc:	00c42823          	sw	a2,16(s0)
    4d00:	00098713          	mv	a4,s3
    4d04:	00090693          	mv	a3,s2
    4d08:	00c10613          	addi	a2,sp,12
    4d0c:	00040593          	mv	a1,s0
    4d10:	00048513          	mv	a0,s1
    4d14:	00000097          	auipc	ra,0x0
    4d18:	c38080e7          	jalr	-968(ra) # 494c <_printf_common>
    4d1c:	fff00a13          	li	s4,-1
    4d20:	13451c63          	bne	a0,s4,4e58 <_printf_i+0x35c>
    4d24:	fff00513          	li	a0,-1
    4d28:	02c12083          	lw	ra,44(sp)
    4d2c:	02812403          	lw	s0,40(sp)
    4d30:	02412483          	lw	s1,36(sp)
    4d34:	02012903          	lw	s2,32(sp)
    4d38:	01c12983          	lw	s3,28(sp)
    4d3c:	01812a03          	lw	s4,24(sp)
    4d40:	01412a83          	lw	s5,20(sp)
    4d44:	01012b03          	lw	s6,16(sp)
    4d48:	03010113          	addi	sp,sp,48
    4d4c:	00008067          	ret
    4d50:	04d582a3          	sb	a3,69(a1)
    4d54:	00ffc697          	auipc	a3,0xffc
    4d58:	94868693          	addi	a3,a3,-1720 # 100069c <__clz_tab+0x120>
    4d5c:	00042583          	lw	a1,0(s0)
    4d60:	00072503          	lw	a0,0(a4)
    4d64:	0805f813          	andi	a6,a1,128
    4d68:	00052783          	lw	a5,0(a0)
    4d6c:	00450513          	addi	a0,a0,4
    4d70:	02080863          	beqz	a6,4da0 <_printf_i+0x2a4>
    4d74:	00a72023          	sw	a0,0(a4)
    4d78:	0015f713          	andi	a4,a1,1
    4d7c:	00070663          	beqz	a4,4d88 <_printf_i+0x28c>
    4d80:	0205e593          	ori	a1,a1,32
    4d84:	00b42023          	sw	a1,0(s0)
    4d88:	01000713          	li	a4,16
    4d8c:	ee079ce3          	bnez	a5,4c84 <_printf_i+0x188>
    4d90:	00042583          	lw	a1,0(s0)
    4d94:	fdf5f593          	andi	a1,a1,-33
    4d98:	00b42023          	sw	a1,0(s0)
    4d9c:	ee9ff06f          	j	4c84 <_printf_i+0x188>
    4da0:	0405f813          	andi	a6,a1,64
    4da4:	00a72023          	sw	a0,0(a4)
    4da8:	fc0808e3          	beqz	a6,4d78 <_printf_i+0x27c>
    4dac:	01079793          	slli	a5,a5,0x10
    4db0:	0107d793          	srli	a5,a5,0x10
    4db4:	fc5ff06f          	j	4d78 <_printf_i+0x27c>
    4db8:	00ffc697          	auipc	a3,0xffc
    4dbc:	8e468693          	addi	a3,a3,-1820 # 100069c <__clz_tab+0x120>
    4dc0:	00800713          	li	a4,8
    4dc4:	ec1ff06f          	j	4c84 <_printf_i+0x188>
    4dc8:	00058793          	mv	a5,a1
    4dcc:	ee5ff06f          	j	4cb0 <_printf_i+0x1b4>
    4dd0:	0005a683          	lw	a3,0(a1)
    4dd4:	00072783          	lw	a5,0(a4)
    4dd8:	0145a583          	lw	a1,20(a1)
    4ddc:	0806f813          	andi	a6,a3,128
    4de0:	00478513          	addi	a0,a5,4
    4de4:	00080a63          	beqz	a6,4df8 <_printf_i+0x2fc>
    4de8:	00a72023          	sw	a0,0(a4)
    4dec:	0007a783          	lw	a5,0(a5)
    4df0:	00b7a023          	sw	a1,0(a5)
    4df4:	0180006f          	j	4e0c <_printf_i+0x310>
    4df8:	00a72023          	sw	a0,0(a4)
    4dfc:	0406f693          	andi	a3,a3,64
    4e00:	0007a783          	lw	a5,0(a5)
    4e04:	fe0686e3          	beqz	a3,4df0 <_printf_i+0x2f4>
    4e08:	00b79023          	sh	a1,0(a5)
    4e0c:	00042823          	sw	zero,16(s0)
    4e10:	00060a93          	mv	s5,a2
    4e14:	eedff06f          	j	4d00 <_printf_i+0x204>
    4e18:	00072783          	lw	a5,0(a4)
    4e1c:	0045a603          	lw	a2,4(a1)
    4e20:	00000593          	li	a1,0
    4e24:	00478693          	addi	a3,a5,4
    4e28:	00d72023          	sw	a3,0(a4)
    4e2c:	0007aa83          	lw	s5,0(a5)
    4e30:	000a8513          	mv	a0,s5
    4e34:	00002097          	auipc	ra,0x2
    4e38:	40c080e7          	jalr	1036(ra) # 7240 <memchr>
    4e3c:	00050663          	beqz	a0,4e48 <_printf_i+0x34c>
    4e40:	41550533          	sub	a0,a0,s5
    4e44:	00a42223          	sw	a0,4(s0)
    4e48:	00442783          	lw	a5,4(s0)
    4e4c:	00f42823          	sw	a5,16(s0)
    4e50:	040401a3          	sb	zero,67(s0)
    4e54:	eadff06f          	j	4d00 <_printf_i+0x204>
    4e58:	01042683          	lw	a3,16(s0)
    4e5c:	000a8613          	mv	a2,s5
    4e60:	00090593          	mv	a1,s2
    4e64:	00048513          	mv	a0,s1
    4e68:	000980e7          	jalr	s3
    4e6c:	eb450ce3          	beq	a0,s4,4d24 <_printf_i+0x228>
    4e70:	00042783          	lw	a5,0(s0)
    4e74:	0027f793          	andi	a5,a5,2
    4e78:	04079463          	bnez	a5,4ec0 <_printf_i+0x3c4>
    4e7c:	00c12783          	lw	a5,12(sp)
    4e80:	00c42503          	lw	a0,12(s0)
    4e84:	eaf552e3          	bge	a0,a5,4d28 <_printf_i+0x22c>
    4e88:	00078513          	mv	a0,a5
    4e8c:	e9dff06f          	j	4d28 <_printf_i+0x22c>
    4e90:	00100693          	li	a3,1
    4e94:	000a8613          	mv	a2,s5
    4e98:	00090593          	mv	a1,s2
    4e9c:	00048513          	mv	a0,s1
    4ea0:	000980e7          	jalr	s3
    4ea4:	e96500e3          	beq	a0,s6,4d24 <_printf_i+0x228>
    4ea8:	001a0a13          	addi	s4,s4,1
    4eac:	00c42783          	lw	a5,12(s0)
    4eb0:	00c12703          	lw	a4,12(sp)
    4eb4:	40e787b3          	sub	a5,a5,a4
    4eb8:	fcfa4ce3          	blt	s4,a5,4e90 <_printf_i+0x394>
    4ebc:	fc1ff06f          	j	4e7c <_printf_i+0x380>
    4ec0:	00000a13          	li	s4,0
    4ec4:	01940a93          	addi	s5,s0,25
    4ec8:	fff00b13          	li	s6,-1
    4ecc:	fe1ff06f          	j	4eac <_printf_i+0x3b0>

00004ed0 <iprintf>:
    4ed0:	fc010113          	addi	sp,sp,-64
    4ed4:	02f12a23          	sw	a5,52(sp)
    4ed8:	02b12223          	sw	a1,36(sp)
    4edc:	02c12423          	sw	a2,40(sp)
    4ee0:	02d12623          	sw	a3,44(sp)
    4ee4:	02e12823          	sw	a4,48(sp)
    4ee8:	03012c23          	sw	a6,56(sp)
    4eec:	03112e23          	sw	a7,60(sp)
    4ef0:	00ffc797          	auipc	a5,0xffc
    4ef4:	cbc78793          	addi	a5,a5,-836 # 1000bac <_impure_ptr>
    4ef8:	00812c23          	sw	s0,24(sp)
    4efc:	0007a403          	lw	s0,0(a5)
    4f00:	00912a23          	sw	s1,20(sp)
    4f04:	00112e23          	sw	ra,28(sp)
    4f08:	00050493          	mv	s1,a0
    4f0c:	00040c63          	beqz	s0,4f24 <iprintf+0x54>
    4f10:	01842783          	lw	a5,24(s0)
    4f14:	00079863          	bnez	a5,4f24 <iprintf+0x54>
    4f18:	00040513          	mv	a0,s0
    4f1c:	00002097          	auipc	ra,0x2
    4f20:	e9c080e7          	jalr	-356(ra) # 6db8 <__sinit>
    4f24:	00842583          	lw	a1,8(s0)
    4f28:	02410693          	addi	a3,sp,36
    4f2c:	00048613          	mv	a2,s1
    4f30:	00040513          	mv	a0,s0
    4f34:	00d12623          	sw	a3,12(sp)
    4f38:	00003097          	auipc	ra,0x3
    4f3c:	1fc080e7          	jalr	508(ra) # 8134 <_vfiprintf_r>
    4f40:	01c12083          	lw	ra,28(sp)
    4f44:	01812403          	lw	s0,24(sp)
    4f48:	01412483          	lw	s1,20(sp)
    4f4c:	04010113          	addi	sp,sp,64
    4f50:	00008067          	ret

00004f54 <putchar>:
    4f54:	fe010113          	addi	sp,sp,-32
    4f58:	00ffc797          	auipc	a5,0xffc
    4f5c:	c5478793          	addi	a5,a5,-940 # 1000bac <_impure_ptr>
    4f60:	00812c23          	sw	s0,24(sp)
    4f64:	0007a403          	lw	s0,0(a5)
    4f68:	00112e23          	sw	ra,28(sp)
    4f6c:	00050593          	mv	a1,a0
    4f70:	02040063          	beqz	s0,4f90 <putchar+0x3c>
    4f74:	01842783          	lw	a5,24(s0)
    4f78:	00079c63          	bnez	a5,4f90 <putchar+0x3c>
    4f7c:	00a12623          	sw	a0,12(sp)
    4f80:	00040513          	mv	a0,s0
    4f84:	00002097          	auipc	ra,0x2
    4f88:	e34080e7          	jalr	-460(ra) # 6db8 <__sinit>
    4f8c:	00c12583          	lw	a1,12(sp)
    4f90:	00842603          	lw	a2,8(s0)
    4f94:	00040513          	mv	a0,s0
    4f98:	01812403          	lw	s0,24(sp)
    4f9c:	01c12083          	lw	ra,28(sp)
    4fa0:	02010113          	addi	sp,sp,32
    4fa4:	00000317          	auipc	t1,0x0
    4fa8:	00830067          	jr	8(t1) # 4fac <_putc_r>

00004fac <_putc_r>:
    4fac:	fe010113          	addi	sp,sp,-32
    4fb0:	00812c23          	sw	s0,24(sp)
    4fb4:	00112e23          	sw	ra,28(sp)
    4fb8:	00050413          	mv	s0,a0
    4fbc:	02050263          	beqz	a0,4fe0 <_putc_r+0x34>
    4fc0:	01852783          	lw	a5,24(a0)
    4fc4:	00079e63          	bnez	a5,4fe0 <_putc_r+0x34>
    4fc8:	00c12623          	sw	a2,12(sp)
    4fcc:	00b12423          	sw	a1,8(sp)
    4fd0:	00002097          	auipc	ra,0x2
    4fd4:	de8080e7          	jalr	-536(ra) # 6db8 <__sinit>
    4fd8:	00c12603          	lw	a2,12(sp)
    4fdc:	00812583          	lw	a1,8(sp)
    4fe0:	00ffb797          	auipc	a5,0xffb
    4fe4:	75078793          	addi	a5,a5,1872 # 1000730 <__sf_fake_stdin>
    4fe8:	04f61263          	bne	a2,a5,502c <_putc_r+0x80>
    4fec:	00442603          	lw	a2,4(s0)
    4ff0:	00862783          	lw	a5,8(a2)
    4ff4:	fff78793          	addi	a5,a5,-1
    4ff8:	00f62423          	sw	a5,8(a2)
    4ffc:	0407dc63          	bgez	a5,5054 <_putc_r+0xa8>
    5000:	01862703          	lw	a4,24(a2)
    5004:	00e7c863          	blt	a5,a4,5014 <_putc_r+0x68>
    5008:	0ff5f793          	andi	a5,a1,255
    500c:	00a00713          	li	a4,10
    5010:	04e79263          	bne	a5,a4,5054 <_putc_r+0xa8>
    5014:	00040513          	mv	a0,s0
    5018:	01812403          	lw	s0,24(sp)
    501c:	01c12083          	lw	ra,28(sp)
    5020:	02010113          	addi	sp,sp,32
    5024:	00000317          	auipc	t1,0x0
    5028:	1fc30067          	jr	508(t1) # 5220 <__swbuf_r>
    502c:	00ffb797          	auipc	a5,0xffb
    5030:	72478793          	addi	a5,a5,1828 # 1000750 <__sf_fake_stdout>
    5034:	00f61663          	bne	a2,a5,5040 <_putc_r+0x94>
    5038:	00842603          	lw	a2,8(s0)
    503c:	fb5ff06f          	j	4ff0 <_putc_r+0x44>
    5040:	00ffb797          	auipc	a5,0xffb
    5044:	6d078793          	addi	a5,a5,1744 # 1000710 <__sf_fake_stderr>
    5048:	faf614e3          	bne	a2,a5,4ff0 <_putc_r+0x44>
    504c:	00c42603          	lw	a2,12(s0)
    5050:	fa1ff06f          	j	4ff0 <_putc_r+0x44>
    5054:	00062783          	lw	a5,0(a2)
    5058:	0ff5f513          	andi	a0,a1,255
    505c:	00178713          	addi	a4,a5,1
    5060:	00e62023          	sw	a4,0(a2)
    5064:	00b78023          	sb	a1,0(a5)
    5068:	01c12083          	lw	ra,28(sp)
    506c:	01812403          	lw	s0,24(sp)
    5070:	02010113          	addi	sp,sp,32
    5074:	00008067          	ret

00005078 <_puts_r>:
    5078:	fe010113          	addi	sp,sp,-32
    507c:	00912a23          	sw	s1,20(sp)
    5080:	01212823          	sw	s2,16(sp)
    5084:	00112e23          	sw	ra,28(sp)
    5088:	00812c23          	sw	s0,24(sp)
    508c:	01312623          	sw	s3,12(sp)
    5090:	01412423          	sw	s4,8(sp)
    5094:	00050493          	mv	s1,a0
    5098:	00058913          	mv	s2,a1
    509c:	00050a63          	beqz	a0,50b0 <_puts_r+0x38>
    50a0:	01852783          	lw	a5,24(a0)
    50a4:	00079663          	bnez	a5,50b0 <_puts_r+0x38>
    50a8:	00002097          	auipc	ra,0x2
    50ac:	d10080e7          	jalr	-752(ra) # 6db8 <__sinit>
    50b0:	0184a783          	lw	a5,24(s1)
    50b4:	0084a403          	lw	s0,8(s1)
    50b8:	00079863          	bnez	a5,50c8 <_puts_r+0x50>
    50bc:	00048513          	mv	a0,s1
    50c0:	00002097          	auipc	ra,0x2
    50c4:	cf8080e7          	jalr	-776(ra) # 6db8 <__sinit>
    50c8:	00ffb797          	auipc	a5,0xffb
    50cc:	66878793          	addi	a5,a5,1640 # 1000730 <__sf_fake_stdin>
    50d0:	06f41063          	bne	s0,a5,5130 <_puts_r+0xb8>
    50d4:	0044a403          	lw	s0,4(s1)
    50d8:	00c45783          	lhu	a5,12(s0)
    50dc:	0087f793          	andi	a5,a5,8
    50e0:	06078c63          	beqz	a5,5158 <_puts_r+0xe0>
    50e4:	01042783          	lw	a5,16(s0)
    50e8:	06078863          	beqz	a5,5158 <_puts_r+0xe0>
    50ec:	fff00993          	li	s3,-1
    50f0:	00a00a13          	li	s4,10
    50f4:	00842783          	lw	a5,8(s0)
    50f8:	00094583          	lbu	a1,0(s2)
    50fc:	fff78793          	addi	a5,a5,-1
    5100:	08059863          	bnez	a1,5190 <_puts_r+0x118>
    5104:	00f42423          	sw	a5,8(s0)
    5108:	0c07d663          	bgez	a5,51d4 <_puts_r+0x15c>
    510c:	00040613          	mv	a2,s0
    5110:	00a00593          	li	a1,10
    5114:	00048513          	mv	a0,s1
    5118:	00000097          	auipc	ra,0x0
    511c:	108080e7          	jalr	264(ra) # 5220 <__swbuf_r>
    5120:	fff00793          	li	a5,-1
    5124:	04f50463          	beq	a0,a5,516c <_puts_r+0xf4>
    5128:	00a00513          	li	a0,10
    512c:	0440006f          	j	5170 <_puts_r+0xf8>
    5130:	00ffb797          	auipc	a5,0xffb
    5134:	62078793          	addi	a5,a5,1568 # 1000750 <__sf_fake_stdout>
    5138:	00f41663          	bne	s0,a5,5144 <_puts_r+0xcc>
    513c:	0084a403          	lw	s0,8(s1)
    5140:	f99ff06f          	j	50d8 <_puts_r+0x60>
    5144:	00ffb797          	auipc	a5,0xffb
    5148:	5cc78793          	addi	a5,a5,1484 # 1000710 <__sf_fake_stderr>
    514c:	f8f416e3          	bne	s0,a5,50d8 <_puts_r+0x60>
    5150:	00c4a403          	lw	s0,12(s1)
    5154:	f85ff06f          	j	50d8 <_puts_r+0x60>
    5158:	00040593          	mv	a1,s0
    515c:	00048513          	mv	a0,s1
    5160:	00000097          	auipc	ra,0x0
    5164:	208080e7          	jalr	520(ra) # 5368 <__swsetup_r>
    5168:	f80502e3          	beqz	a0,50ec <_puts_r+0x74>
    516c:	fff00513          	li	a0,-1
    5170:	01c12083          	lw	ra,28(sp)
    5174:	01812403          	lw	s0,24(sp)
    5178:	01412483          	lw	s1,20(sp)
    517c:	01012903          	lw	s2,16(sp)
    5180:	00c12983          	lw	s3,12(sp)
    5184:	00812a03          	lw	s4,8(sp)
    5188:	02010113          	addi	sp,sp,32
    518c:	00008067          	ret
    5190:	00f42423          	sw	a5,8(s0)
    5194:	00190913          	addi	s2,s2,1
    5198:	0007d863          	bgez	a5,51a8 <_puts_r+0x130>
    519c:	01842703          	lw	a4,24(s0)
    51a0:	00e7ce63          	blt	a5,a4,51bc <_puts_r+0x144>
    51a4:	01458c63          	beq	a1,s4,51bc <_puts_r+0x144>
    51a8:	00042783          	lw	a5,0(s0)
    51ac:	00178713          	addi	a4,a5,1
    51b0:	00e42023          	sw	a4,0(s0)
    51b4:	00b78023          	sb	a1,0(a5)
    51b8:	f3dff06f          	j	50f4 <_puts_r+0x7c>
    51bc:	00040613          	mv	a2,s0
    51c0:	00048513          	mv	a0,s1
    51c4:	00000097          	auipc	ra,0x0
    51c8:	05c080e7          	jalr	92(ra) # 5220 <__swbuf_r>
    51cc:	f33514e3          	bne	a0,s3,50f4 <_puts_r+0x7c>
    51d0:	f9dff06f          	j	516c <_puts_r+0xf4>
    51d4:	00042783          	lw	a5,0(s0)
    51d8:	00178713          	addi	a4,a5,1
    51dc:	00e42023          	sw	a4,0(s0)
    51e0:	00a00713          	li	a4,10
    51e4:	00e78023          	sb	a4,0(a5)
    51e8:	f41ff06f          	j	5128 <_puts_r+0xb0>

000051ec <puts>:
    51ec:	00ffc797          	auipc	a5,0xffc
    51f0:	9c078793          	addi	a5,a5,-1600 # 1000bac <_impure_ptr>
    51f4:	00050593          	mv	a1,a0
    51f8:	0007a503          	lw	a0,0(a5)
    51fc:	00000317          	auipc	t1,0x0
    5200:	e7c30067          	jr	-388(t1) # 5078 <_puts_r>

00005204 <strlen>:
    5204:	00050793          	mv	a5,a0
    5208:	00178793          	addi	a5,a5,1
    520c:	fff7c703          	lbu	a4,-1(a5)
    5210:	fe071ce3          	bnez	a4,5208 <strlen+0x4>
    5214:	40a78533          	sub	a0,a5,a0
    5218:	fff50513          	addi	a0,a0,-1
    521c:	00008067          	ret

00005220 <__swbuf_r>:
    5220:	fe010113          	addi	sp,sp,-32
    5224:	00812c23          	sw	s0,24(sp)
    5228:	00912a23          	sw	s1,20(sp)
    522c:	01212823          	sw	s2,16(sp)
    5230:	00112e23          	sw	ra,28(sp)
    5234:	01312623          	sw	s3,12(sp)
    5238:	00050493          	mv	s1,a0
    523c:	00058913          	mv	s2,a1
    5240:	00060413          	mv	s0,a2
    5244:	00050a63          	beqz	a0,5258 <__swbuf_r+0x38>
    5248:	01852783          	lw	a5,24(a0)
    524c:	00079663          	bnez	a5,5258 <__swbuf_r+0x38>
    5250:	00002097          	auipc	ra,0x2
    5254:	b68080e7          	jalr	-1176(ra) # 6db8 <__sinit>
    5258:	00ffb797          	auipc	a5,0xffb
    525c:	4d878793          	addi	a5,a5,1240 # 1000730 <__sf_fake_stdin>
    5260:	0cf41263          	bne	s0,a5,5324 <__swbuf_r+0x104>
    5264:	0044a403          	lw	s0,4(s1)
    5268:	01842783          	lw	a5,24(s0)
    526c:	00f42423          	sw	a5,8(s0)
    5270:	00c45783          	lhu	a5,12(s0)
    5274:	0087f793          	andi	a5,a5,8
    5278:	0c078a63          	beqz	a5,534c <__swbuf_r+0x12c>
    527c:	01042783          	lw	a5,16(s0)
    5280:	0c078663          	beqz	a5,534c <__swbuf_r+0x12c>
    5284:	01042783          	lw	a5,16(s0)
    5288:	00042503          	lw	a0,0(s0)
    528c:	0ff97993          	andi	s3,s2,255
    5290:	0ff97913          	andi	s2,s2,255
    5294:	40f50533          	sub	a0,a0,a5
    5298:	01442783          	lw	a5,20(s0)
    529c:	00f54c63          	blt	a0,a5,52b4 <__swbuf_r+0x94>
    52a0:	00040593          	mv	a1,s0
    52a4:	00048513          	mv	a0,s1
    52a8:	00002097          	auipc	ra,0x2
    52ac:	958080e7          	jalr	-1704(ra) # 6c00 <_fflush_r>
    52b0:	0a051863          	bnez	a0,5360 <__swbuf_r+0x140>
    52b4:	00842783          	lw	a5,8(s0)
    52b8:	00150513          	addi	a0,a0,1
    52bc:	fff78793          	addi	a5,a5,-1
    52c0:	00f42423          	sw	a5,8(s0)
    52c4:	00042783          	lw	a5,0(s0)
    52c8:	00178713          	addi	a4,a5,1
    52cc:	00e42023          	sw	a4,0(s0)
    52d0:	01378023          	sb	s3,0(a5)
    52d4:	01442783          	lw	a5,20(s0)
    52d8:	00a78c63          	beq	a5,a0,52f0 <__swbuf_r+0xd0>
    52dc:	00c45783          	lhu	a5,12(s0)
    52e0:	0017f793          	andi	a5,a5,1
    52e4:	02078063          	beqz	a5,5304 <__swbuf_r+0xe4>
    52e8:	00a00793          	li	a5,10
    52ec:	00f91c63          	bne	s2,a5,5304 <__swbuf_r+0xe4>
    52f0:	00040593          	mv	a1,s0
    52f4:	00048513          	mv	a0,s1
    52f8:	00002097          	auipc	ra,0x2
    52fc:	908080e7          	jalr	-1784(ra) # 6c00 <_fflush_r>
    5300:	06051063          	bnez	a0,5360 <__swbuf_r+0x140>
    5304:	01c12083          	lw	ra,28(sp)
    5308:	01812403          	lw	s0,24(sp)
    530c:	00090513          	mv	a0,s2
    5310:	01412483          	lw	s1,20(sp)
    5314:	01012903          	lw	s2,16(sp)
    5318:	00c12983          	lw	s3,12(sp)
    531c:	02010113          	addi	sp,sp,32
    5320:	00008067          	ret
    5324:	00ffb797          	auipc	a5,0xffb
    5328:	42c78793          	addi	a5,a5,1068 # 1000750 <__sf_fake_stdout>
    532c:	00f41663          	bne	s0,a5,5338 <__swbuf_r+0x118>
    5330:	0084a403          	lw	s0,8(s1)
    5334:	f35ff06f          	j	5268 <__swbuf_r+0x48>
    5338:	00ffb797          	auipc	a5,0xffb
    533c:	3d878793          	addi	a5,a5,984 # 1000710 <__sf_fake_stderr>
    5340:	f2f414e3          	bne	s0,a5,5268 <__swbuf_r+0x48>
    5344:	00c4a403          	lw	s0,12(s1)
    5348:	f21ff06f          	j	5268 <__swbuf_r+0x48>
    534c:	00040593          	mv	a1,s0
    5350:	00048513          	mv	a0,s1
    5354:	00000097          	auipc	ra,0x0
    5358:	014080e7          	jalr	20(ra) # 5368 <__swsetup_r>
    535c:	f20504e3          	beqz	a0,5284 <__swbuf_r+0x64>
    5360:	fff00913          	li	s2,-1
    5364:	fa1ff06f          	j	5304 <__swbuf_r+0xe4>

00005368 <__swsetup_r>:
    5368:	ff010113          	addi	sp,sp,-16
    536c:	00ffc797          	auipc	a5,0xffc
    5370:	84078793          	addi	a5,a5,-1984 # 1000bac <_impure_ptr>
    5374:	00912223          	sw	s1,4(sp)
    5378:	0007a483          	lw	s1,0(a5)
    537c:	00812423          	sw	s0,8(sp)
    5380:	01212023          	sw	s2,0(sp)
    5384:	00112623          	sw	ra,12(sp)
    5388:	00050913          	mv	s2,a0
    538c:	00058413          	mv	s0,a1
    5390:	00048c63          	beqz	s1,53a8 <__swsetup_r+0x40>
    5394:	0184a783          	lw	a5,24(s1)
    5398:	00079863          	bnez	a5,53a8 <__swsetup_r+0x40>
    539c:	00048513          	mv	a0,s1
    53a0:	00002097          	auipc	ra,0x2
    53a4:	a18080e7          	jalr	-1512(ra) # 6db8 <__sinit>
    53a8:	00ffb797          	auipc	a5,0xffb
    53ac:	38878793          	addi	a5,a5,904 # 1000730 <__sf_fake_stdin>
    53b0:	04f41863          	bne	s0,a5,5400 <__swsetup_r+0x98>
    53b4:	0044a403          	lw	s0,4(s1)
    53b8:	00c41703          	lh	a4,12(s0)
    53bc:	01071793          	slli	a5,a4,0x10
    53c0:	0107d793          	srli	a5,a5,0x10
    53c4:	0087f693          	andi	a3,a5,8
    53c8:	0a069663          	bnez	a3,5474 <__swsetup_r+0x10c>
    53cc:	0107f693          	andi	a3,a5,16
    53d0:	04069c63          	bnez	a3,5428 <__swsetup_r+0xc0>
    53d4:	00900793          	li	a5,9
    53d8:	00f92023          	sw	a5,0(s2)
    53dc:	04076713          	ori	a4,a4,64
    53e0:	00e41623          	sh	a4,12(s0)
    53e4:	fff00513          	li	a0,-1
    53e8:	00c12083          	lw	ra,12(sp)
    53ec:	00812403          	lw	s0,8(sp)
    53f0:	00412483          	lw	s1,4(sp)
    53f4:	00012903          	lw	s2,0(sp)
    53f8:	01010113          	addi	sp,sp,16
    53fc:	00008067          	ret
    5400:	00ffb797          	auipc	a5,0xffb
    5404:	35078793          	addi	a5,a5,848 # 1000750 <__sf_fake_stdout>
    5408:	00f41663          	bne	s0,a5,5414 <__swsetup_r+0xac>
    540c:	0084a403          	lw	s0,8(s1)
    5410:	fa9ff06f          	j	53b8 <__swsetup_r+0x50>
    5414:	00ffb797          	auipc	a5,0xffb
    5418:	2fc78793          	addi	a5,a5,764 # 1000710 <__sf_fake_stderr>
    541c:	f8f41ee3          	bne	s0,a5,53b8 <__swsetup_r+0x50>
    5420:	00c4a403          	lw	s0,12(s1)
    5424:	f95ff06f          	j	53b8 <__swsetup_r+0x50>
    5428:	0047f793          	andi	a5,a5,4
    542c:	02078e63          	beqz	a5,5468 <__swsetup_r+0x100>
    5430:	03442583          	lw	a1,52(s0)
    5434:	00058e63          	beqz	a1,5450 <__swsetup_r+0xe8>
    5438:	04440793          	addi	a5,s0,68
    543c:	00f58863          	beq	a1,a5,544c <__swsetup_r+0xe4>
    5440:	00090513          	mv	a0,s2
    5444:	00003097          	auipc	ra,0x3
    5448:	9b0080e7          	jalr	-1616(ra) # 7df4 <_free_r>
    544c:	02042a23          	sw	zero,52(s0)
    5450:	00c45783          	lhu	a5,12(s0)
    5454:	00042223          	sw	zero,4(s0)
    5458:	fdb7f793          	andi	a5,a5,-37
    545c:	00f41623          	sh	a5,12(s0)
    5460:	01042783          	lw	a5,16(s0)
    5464:	00f42023          	sw	a5,0(s0)
    5468:	00c45783          	lhu	a5,12(s0)
    546c:	0087e793          	ori	a5,a5,8
    5470:	00f41623          	sh	a5,12(s0)
    5474:	01042783          	lw	a5,16(s0)
    5478:	02079263          	bnez	a5,549c <__swsetup_r+0x134>
    547c:	00c45783          	lhu	a5,12(s0)
    5480:	20000713          	li	a4,512
    5484:	2807f793          	andi	a5,a5,640
    5488:	00e78a63          	beq	a5,a4,549c <__swsetup_r+0x134>
    548c:	00040593          	mv	a1,s0
    5490:	00090513          	mv	a0,s2
    5494:	00002097          	auipc	ra,0x2
    5498:	c3c080e7          	jalr	-964(ra) # 70d0 <__smakebuf_r>
    549c:	00c45783          	lhu	a5,12(s0)
    54a0:	0017f713          	andi	a4,a5,1
    54a4:	02070c63          	beqz	a4,54dc <__swsetup_r+0x174>
    54a8:	01442783          	lw	a5,20(s0)
    54ac:	00042423          	sw	zero,8(s0)
    54b0:	40f007b3          	neg	a5,a5
    54b4:	00f42c23          	sw	a5,24(s0)
    54b8:	01042783          	lw	a5,16(s0)
    54bc:	00000513          	li	a0,0
    54c0:	f20794e3          	bnez	a5,53e8 <__swsetup_r+0x80>
    54c4:	00c41783          	lh	a5,12(s0)
    54c8:	0807f713          	andi	a4,a5,128
    54cc:	f0070ee3          	beqz	a4,53e8 <__swsetup_r+0x80>
    54d0:	0407e793          	ori	a5,a5,64
    54d4:	00f41623          	sh	a5,12(s0)
    54d8:	f0dff06f          	j	53e4 <__swsetup_r+0x7c>
    54dc:	0027f793          	andi	a5,a5,2
    54e0:	00000713          	li	a4,0
    54e4:	00079463          	bnez	a5,54ec <__swsetup_r+0x184>
    54e8:	01442703          	lw	a4,20(s0)
    54ec:	00e42423          	sw	a4,8(s0)
    54f0:	fc9ff06f          	j	54b8 <__swsetup_r+0x150>

000054f4 <quorem>:
    54f4:	fe010113          	addi	sp,sp,-32
    54f8:	00812c23          	sw	s0,24(sp)
    54fc:	01052783          	lw	a5,16(a0)
    5500:	0105a403          	lw	s0,16(a1)
    5504:	00112e23          	sw	ra,28(sp)
    5508:	00912a23          	sw	s1,20(sp)
    550c:	01212823          	sw	s2,16(sp)
    5510:	01312623          	sw	s3,12(sp)
    5514:	01412423          	sw	s4,8(sp)
    5518:	01512223          	sw	s5,4(sp)
    551c:	1887ce63          	blt	a5,s0,56b8 <quorem+0x1c4>
    5520:	fff40413          	addi	s0,s0,-1
    5524:	00241813          	slli	a6,s0,0x2
    5528:	01458993          	addi	s3,a1,20
    552c:	01098a33          	add	s4,s3,a6
    5530:	01450913          	addi	s2,a0,20
    5534:	01090833          	add	a6,s2,a6
    5538:	000a2783          	lw	a5,0(s4)
    553c:	00082703          	lw	a4,0(a6)
    5540:	00178793          	addi	a5,a5,1
    5544:	02f754b3          	divu	s1,a4,a5
    5548:	08f76863          	bltu	a4,a5,55d8 <quorem+0xe4>
    554c:	000108b7          	lui	a7,0x10
    5550:	00098313          	mv	t1,s3
    5554:	00090e13          	mv	t3,s2
    5558:	00000e93          	li	t4,0
    555c:	00000f13          	li	t5,0
    5560:	fff88893          	addi	a7,a7,-1 # ffff <_data_lma+0x59e7>
    5564:	00430313          	addi	t1,t1,4
    5568:	ffc32603          	lw	a2,-4(t1)
    556c:	004e0e13          	addi	t3,t3,4
    5570:	01167733          	and	a4,a2,a7
    5574:	01065613          	srli	a2,a2,0x10
    5578:	02970733          	mul	a4,a4,s1
    557c:	02960633          	mul	a2,a2,s1
    5580:	01d70733          	add	a4,a4,t4
    5584:	01075693          	srli	a3,a4,0x10
    5588:	011777b3          	and	a5,a4,a7
    558c:	40ff07b3          	sub	a5,t5,a5
    5590:	00d60633          	add	a2,a2,a3
    5594:	ffce2683          	lw	a3,-4(t3)
    5598:	01065e93          	srli	t4,a2,0x10
    559c:	01167633          	and	a2,a2,a7
    55a0:	0116f733          	and	a4,a3,a7
    55a4:	00e787b3          	add	a5,a5,a4
    55a8:	0106d693          	srli	a3,a3,0x10
    55ac:	4107d713          	srai	a4,a5,0x10
    55b0:	40c686b3          	sub	a3,a3,a2
    55b4:	00e686b3          	add	a3,a3,a4
    55b8:	4106df13          	srai	t5,a3,0x10
    55bc:	0117f7b3          	and	a5,a5,a7
    55c0:	01069693          	slli	a3,a3,0x10
    55c4:	00f6e7b3          	or	a5,a3,a5
    55c8:	fefe2e23          	sw	a5,-4(t3)
    55cc:	f86a7ce3          	bgeu	s4,t1,5564 <quorem+0x70>
    55d0:	00082783          	lw	a5,0(a6)
    55d4:	0a078c63          	beqz	a5,568c <quorem+0x198>
    55d8:	00050a93          	mv	s5,a0
    55dc:	00002097          	auipc	ra,0x2
    55e0:	4b0080e7          	jalr	1200(ra) # 7a8c <__mcmp>
    55e4:	06054a63          	bltz	a0,5658 <quorem+0x164>
    55e8:	00010637          	lui	a2,0x10
    55ec:	00148493          	addi	s1,s1,1
    55f0:	00090593          	mv	a1,s2
    55f4:	00000513          	li	a0,0
    55f8:	fff60613          	addi	a2,a2,-1 # ffff <_data_lma+0x59e7>
    55fc:	00498993          	addi	s3,s3,4
    5600:	ffc9a803          	lw	a6,-4(s3)
    5604:	0005a703          	lw	a4,0(a1)
    5608:	00458593          	addi	a1,a1,4
    560c:	00c876b3          	and	a3,a6,a2
    5610:	40d50533          	sub	a0,a0,a3
    5614:	00c776b3          	and	a3,a4,a2
    5618:	00d506b3          	add	a3,a0,a3
    561c:	01075793          	srli	a5,a4,0x10
    5620:	01085813          	srli	a6,a6,0x10
    5624:	4106d713          	srai	a4,a3,0x10
    5628:	410787b3          	sub	a5,a5,a6
    562c:	00e787b3          	add	a5,a5,a4
    5630:	4107d513          	srai	a0,a5,0x10
    5634:	00c6f6b3          	and	a3,a3,a2
    5638:	01079793          	slli	a5,a5,0x10
    563c:	00d7e7b3          	or	a5,a5,a3
    5640:	fef5ae23          	sw	a5,-4(a1)
    5644:	fb3a7ce3          	bgeu	s4,s3,55fc <quorem+0x108>
    5648:	00241793          	slli	a5,s0,0x2
    564c:	00f907b3          	add	a5,s2,a5
    5650:	0007a703          	lw	a4,0(a5)
    5654:	04070a63          	beqz	a4,56a8 <quorem+0x1b4>
    5658:	00048513          	mv	a0,s1
    565c:	01c12083          	lw	ra,28(sp)
    5660:	01812403          	lw	s0,24(sp)
    5664:	01412483          	lw	s1,20(sp)
    5668:	01012903          	lw	s2,16(sp)
    566c:	00c12983          	lw	s3,12(sp)
    5670:	00812a03          	lw	s4,8(sp)
    5674:	00412a83          	lw	s5,4(sp)
    5678:	02010113          	addi	sp,sp,32
    567c:	00008067          	ret
    5680:	00082783          	lw	a5,0(a6)
    5684:	00079863          	bnez	a5,5694 <quorem+0x1a0>
    5688:	fff40413          	addi	s0,s0,-1
    568c:	ffc80813          	addi	a6,a6,-4
    5690:	ff0968e3          	bltu	s2,a6,5680 <quorem+0x18c>
    5694:	00852823          	sw	s0,16(a0)
    5698:	f41ff06f          	j	55d8 <quorem+0xe4>
    569c:	0007a703          	lw	a4,0(a5)
    56a0:	00071863          	bnez	a4,56b0 <quorem+0x1bc>
    56a4:	fff40413          	addi	s0,s0,-1
    56a8:	ffc78793          	addi	a5,a5,-4
    56ac:	fef968e3          	bltu	s2,a5,569c <quorem+0x1a8>
    56b0:	008aa823          	sw	s0,16(s5)
    56b4:	fa5ff06f          	j	5658 <quorem+0x164>
    56b8:	00000513          	li	a0,0
    56bc:	fa1ff06f          	j	565c <quorem+0x168>

000056c0 <_dtoa_r>:
    56c0:	f7010113          	addi	sp,sp,-144
    56c4:	02f12823          	sw	a5,48(sp)
    56c8:	02452783          	lw	a5,36(a0)
    56cc:	08812423          	sw	s0,136(sp)
    56d0:	08912223          	sw	s1,132(sp)
    56d4:	09212023          	sw	s2,128(sp)
    56d8:	07312e23          	sw	s3,124(sp)
    56dc:	07412c23          	sw	s4,120(sp)
    56e0:	07812423          	sw	s8,104(sp)
    56e4:	08112623          	sw	ra,140(sp)
    56e8:	07512a23          	sw	s5,116(sp)
    56ec:	07612823          	sw	s6,112(sp)
    56f0:	07712623          	sw	s7,108(sp)
    56f4:	07912223          	sw	s9,100(sp)
    56f8:	07a12023          	sw	s10,96(sp)
    56fc:	05b12e23          	sw	s11,92(sp)
    5700:	00d12223          	sw	a3,4(sp)
    5704:	00e12623          	sw	a4,12(sp)
    5708:	01112a23          	sw	a7,20(sp)
    570c:	00050493          	mv	s1,a0
    5710:	00058413          	mv	s0,a1
    5714:	00060913          	mv	s2,a2
    5718:	00080993          	mv	s3,a6
    571c:	00058a13          	mv	s4,a1
    5720:	00060c13          	mv	s8,a2
    5724:	02079263          	bnez	a5,5748 <_dtoa_r+0x88>
    5728:	01000513          	li	a0,16
    572c:	00002097          	auipc	ra,0x2
    5730:	aa0080e7          	jalr	-1376(ra) # 71cc <malloc>
    5734:	02a4a223          	sw	a0,36(s1)
    5738:	00052223          	sw	zero,4(a0)
    573c:	00052423          	sw	zero,8(a0)
    5740:	00052023          	sw	zero,0(a0)
    5744:	00052623          	sw	zero,12(a0)
    5748:	0244a783          	lw	a5,36(s1)
    574c:	0007a583          	lw	a1,0(a5)
    5750:	02058663          	beqz	a1,577c <_dtoa_r+0xbc>
    5754:	0047a703          	lw	a4,4(a5)
    5758:	00100793          	li	a5,1
    575c:	00048513          	mv	a0,s1
    5760:	00e797b3          	sll	a5,a5,a4
    5764:	00f5a423          	sw	a5,8(a1)
    5768:	00e5a223          	sw	a4,4(a1)
    576c:	00002097          	auipc	ra,0x2
    5770:	c08080e7          	jalr	-1016(ra) # 7374 <_Bfree>
    5774:	0244a783          	lw	a5,36(s1)
    5778:	0007a023          	sw	zero,0(a5)
    577c:	04095e63          	bgez	s2,57d8 <_dtoa_r+0x118>
    5780:	00100793          	li	a5,1
    5784:	00191c13          	slli	s8,s2,0x1
    5788:	00f9a023          	sw	a5,0(s3)
    578c:	001c5c13          	srli	s8,s8,0x1
    5790:	7ff007b7          	lui	a5,0x7ff00
    5794:	00fc7733          	and	a4,s8,a5
    5798:	0af71263          	bne	a4,a5,583c <_dtoa_r+0x17c>
    579c:	03012703          	lw	a4,48(sp)
    57a0:	000027b7          	lui	a5,0x2
    57a4:	00cc1c13          	slli	s8,s8,0xc
    57a8:	70f78793          	addi	a5,a5,1807 # 270f <crcu16+0x1ff>
    57ac:	00cc5c13          	srli	s8,s8,0xc
    57b0:	00f72023          	sw	a5,0(a4)
    57b4:	008c6c33          	or	s8,s8,s0
    57b8:	000c1463          	bnez	s8,57c0 <_dtoa_r+0x100>
    57bc:	1cc0106f          	j	6988 <_dtoa_r+0x12c8>
    57c0:	01412783          	lw	a5,20(sp)
    57c4:	00079e63          	bnez	a5,57e0 <_dtoa_r+0x120>
    57c8:	00ffb797          	auipc	a5,0xffb
    57cc:	f4478793          	addi	a5,a5,-188 # 100070c <__clz_tab+0x190>
    57d0:	00f12023          	sw	a5,0(sp)
    57d4:	0280006f          	j	57fc <_dtoa_r+0x13c>
    57d8:	0009a023          	sw	zero,0(s3)
    57dc:	fb5ff06f          	j	5790 <_dtoa_r+0xd0>
    57e0:	00ffb797          	auipc	a5,0xffb
    57e4:	f2c78793          	addi	a5,a5,-212 # 100070c <__clz_tab+0x190>
    57e8:	00f12023          	sw	a5,0(sp)
    57ec:	00ffb797          	auipc	a5,0xffb
    57f0:	f2378793          	addi	a5,a5,-221 # 100070f <__clz_tab+0x193>
    57f4:	01412703          	lw	a4,20(sp)
    57f8:	00f72023          	sw	a5,0(a4)
    57fc:	08c12083          	lw	ra,140(sp)
    5800:	08812403          	lw	s0,136(sp)
    5804:	00012503          	lw	a0,0(sp)
    5808:	08412483          	lw	s1,132(sp)
    580c:	08012903          	lw	s2,128(sp)
    5810:	07c12983          	lw	s3,124(sp)
    5814:	07812a03          	lw	s4,120(sp)
    5818:	07412a83          	lw	s5,116(sp)
    581c:	07012b03          	lw	s6,112(sp)
    5820:	06c12b83          	lw	s7,108(sp)
    5824:	06812c03          	lw	s8,104(sp)
    5828:	06412c83          	lw	s9,100(sp)
    582c:	06012d03          	lw	s10,96(sp)
    5830:	05c12d83          	lw	s11,92(sp)
    5834:	09010113          	addi	sp,sp,144
    5838:	00008067          	ret
    583c:	00000613          	li	a2,0
    5840:	00000693          	li	a3,0
    5844:	00040513          	mv	a0,s0
    5848:	000c0593          	mv	a1,s8
    584c:	00812e23          	sw	s0,28(sp)
    5850:	03812423          	sw	s8,40(sp)
    5854:	00004097          	auipc	ra,0x4
    5858:	91c080e7          	jalr	-1764(ra) # 9170 <__eqdf2>
    585c:	02051863          	bnez	a0,588c <_dtoa_r+0x1cc>
    5860:	03012703          	lw	a4,48(sp)
    5864:	00100793          	li	a5,1
    5868:	00f72023          	sw	a5,0(a4)
    586c:	00ffb797          	auipc	a5,0xffb
    5870:	e2c78793          	addi	a5,a5,-468 # 1000698 <__clz_tab+0x11c>
    5874:	00f12023          	sw	a5,0(sp)
    5878:	01412783          	lw	a5,20(sp)
    587c:	f80780e3          	beqz	a5,57fc <_dtoa_r+0x13c>
    5880:	00ffb797          	auipc	a5,0xffb
    5884:	e1978793          	addi	a5,a5,-487 # 1000699 <__clz_tab+0x11d>
    5888:	f6dff06f          	j	57f4 <_dtoa_r+0x134>
    588c:	04810713          	addi	a4,sp,72
    5890:	04c10693          	addi	a3,sp,76
    5894:	000c0613          	mv	a2,s8
    5898:	00040593          	mv	a1,s0
    589c:	00048513          	mv	a0,s1
    58a0:	014c5913          	srli	s2,s8,0x14
    58a4:	00002097          	auipc	ra,0x2
    58a8:	3b8080e7          	jalr	952(ra) # 7c5c <__d2b>
    58ac:	7ff97913          	andi	s2,s2,2047
    58b0:	00050993          	mv	s3,a0
    58b4:	04812a83          	lw	s5,72(sp)
    58b8:	1c090063          	beqz	s2,5a78 <_dtoa_r+0x3b8>
    58bc:	02812783          	lw	a5,40(sp)
    58c0:	01c12503          	lw	a0,28(sp)
    58c4:	c0190913          	addi	s2,s2,-1023
    58c8:	00c79593          	slli	a1,a5,0xc
    58cc:	00c5d593          	srli	a1,a1,0xc
    58d0:	3ff007b7          	lui	a5,0x3ff00
    58d4:	00f5e5b3          	or	a1,a1,a5
    58d8:	02012c23          	sw	zero,56(sp)
    58dc:	00ffb797          	auipc	a5,0xffb
    58e0:	dec78793          	addi	a5,a5,-532 # 10006c8 <__clz_tab+0x14c>
    58e4:	0007a603          	lw	a2,0(a5)
    58e8:	0047a683          	lw	a3,4(a5)
    58ec:	00004097          	auipc	ra,0x4
    58f0:	f74080e7          	jalr	-140(ra) # 9860 <__subdf3>
    58f4:	00ffb797          	auipc	a5,0xffb
    58f8:	ddc78793          	addi	a5,a5,-548 # 10006d0 <__clz_tab+0x154>
    58fc:	0007a603          	lw	a2,0(a5)
    5900:	0047a683          	lw	a3,4(a5)
    5904:	00004097          	auipc	ra,0x4
    5908:	8f8080e7          	jalr	-1800(ra) # 91fc <__muldf3>
    590c:	00ffb797          	auipc	a5,0xffb
    5910:	dcc78793          	addi	a5,a5,-564 # 10006d8 <__clz_tab+0x15c>
    5914:	0007a603          	lw	a2,0(a5)
    5918:	0047a683          	lw	a3,4(a5)
    591c:	00003097          	auipc	ra,0x3
    5920:	fc8080e7          	jalr	-56(ra) # 88e4 <__adddf3>
    5924:	00050b13          	mv	s6,a0
    5928:	00090513          	mv	a0,s2
    592c:	00058b93          	mv	s7,a1
    5930:	00005097          	auipc	ra,0x5
    5934:	88c080e7          	jalr	-1908(ra) # a1bc <__floatsidf>
    5938:	00ffb797          	auipc	a5,0xffb
    593c:	da878793          	addi	a5,a5,-600 # 10006e0 <__clz_tab+0x164>
    5940:	0007a603          	lw	a2,0(a5)
    5944:	0047a683          	lw	a3,4(a5)
    5948:	00004097          	auipc	ra,0x4
    594c:	8b4080e7          	jalr	-1868(ra) # 91fc <__muldf3>
    5950:	00050613          	mv	a2,a0
    5954:	00058693          	mv	a3,a1
    5958:	000b0513          	mv	a0,s6
    595c:	000b8593          	mv	a1,s7
    5960:	00003097          	auipc	ra,0x3
    5964:	f84080e7          	jalr	-124(ra) # 88e4 <__adddf3>
    5968:	00050b13          	mv	s6,a0
    596c:	00058b93          	mv	s7,a1
    5970:	00004097          	auipc	ra,0x4
    5974:	7c8080e7          	jalr	1992(ra) # a138 <__fixdfsi>
    5978:	00050413          	mv	s0,a0
    597c:	00000613          	li	a2,0
    5980:	00000693          	li	a3,0
    5984:	000b0513          	mv	a0,s6
    5988:	000b8593          	mv	a1,s7
    598c:	ffffe097          	auipc	ra,0xffffe
    5990:	338080e7          	jalr	824(ra) # 3cc4 <__ledf2>
    5994:	02055463          	bgez	a0,59bc <_dtoa_r+0x2fc>
    5998:	00040513          	mv	a0,s0
    599c:	00005097          	auipc	ra,0x5
    59a0:	820080e7          	jalr	-2016(ra) # a1bc <__floatsidf>
    59a4:	000b0613          	mv	a2,s6
    59a8:	000b8693          	mv	a3,s7
    59ac:	00003097          	auipc	ra,0x3
    59b0:	7c4080e7          	jalr	1988(ra) # 9170 <__eqdf2>
    59b4:	00050463          	beqz	a0,59bc <_dtoa_r+0x2fc>
    59b8:	fff40413          	addi	s0,s0,-1
    59bc:	00100713          	li	a4,1
    59c0:	01600793          	li	a5,22
    59c4:	02e12623          	sw	a4,44(sp)
    59c8:	0287ec63          	bltu	a5,s0,5a00 <_dtoa_r+0x340>
    59cc:	00341713          	slli	a4,s0,0x3
    59d0:	00ffb797          	auipc	a5,0xffb
    59d4:	dd878793          	addi	a5,a5,-552 # 10007a8 <__mprec_tens>
    59d8:	00e787b3          	add	a5,a5,a4
    59dc:	0007a603          	lw	a2,0(a5)
    59e0:	0047a683          	lw	a3,4(a5)
    59e4:	01c12503          	lw	a0,28(sp)
    59e8:	02812583          	lw	a1,40(sp)
    59ec:	ffffe097          	auipc	ra,0xffffe
    59f0:	2d8080e7          	jalr	728(ra) # 3cc4 <__ledf2>
    59f4:	00055463          	bgez	a0,59fc <_dtoa_r+0x33c>
    59f8:	fff40413          	addi	s0,s0,-1
    59fc:	02012623          	sw	zero,44(sp)
    5a00:	412a8933          	sub	s2,s5,s2
    5a04:	fff90b93          	addi	s7,s2,-1
    5a08:	00000b13          	li	s6,0
    5a0c:	000bd863          	bgez	s7,5a1c <_dtoa_r+0x35c>
    5a10:	00100b13          	li	s6,1
    5a14:	412b0b33          	sub	s6,s6,s2
    5a18:	00000b93          	li	s7,0
    5a1c:	0a044a63          	bltz	s0,5ad0 <_dtoa_r+0x410>
    5a20:	008b8bb3          	add	s7,s7,s0
    5a24:	00812c23          	sw	s0,24(sp)
    5a28:	00000a93          	li	s5,0
    5a2c:	00412703          	lw	a4,4(sp)
    5a30:	00900793          	li	a5,9
    5a34:	1ee7e463          	bltu	a5,a4,5c1c <_dtoa_r+0x55c>
    5a38:	00500793          	li	a5,5
    5a3c:	00100c93          	li	s9,1
    5a40:	00e7d863          	bge	a5,a4,5a50 <_dtoa_r+0x390>
    5a44:	ffc70793          	addi	a5,a4,-4
    5a48:	00f12223          	sw	a5,4(sp)
    5a4c:	00000c93          	li	s9,0
    5a50:	00412703          	lw	a4,4(sp)
    5a54:	00300793          	li	a5,3
    5a58:	1af70063          	beq	a4,a5,5bf8 <_dtoa_r+0x538>
    5a5c:	08e7c263          	blt	a5,a4,5ae0 <_dtoa_r+0x420>
    5a60:	00200793          	li	a5,2
    5a64:	00012823          	sw	zero,16(sp)
    5a68:	0af70c63          	beq	a4,a5,5b20 <_dtoa_r+0x460>
    5a6c:	00100793          	li	a5,1
    5a70:	00f12823          	sw	a5,16(sp)
    5a74:	08c0006f          	j	5b00 <_dtoa_r+0x440>
    5a78:	04c12903          	lw	s2,76(sp)
    5a7c:	02000793          	li	a5,32
    5a80:	012a8933          	add	s2,s5,s2
    5a84:	43290713          	addi	a4,s2,1074
    5a88:	02e7de63          	bge	a5,a4,5ac4 <_dtoa_r+0x404>
    5a8c:	04000513          	li	a0,64
    5a90:	40e50533          	sub	a0,a0,a4
    5a94:	41290793          	addi	a5,s2,1042
    5a98:	00ac1533          	sll	a0,s8,a0
    5a9c:	00f45433          	srl	s0,s0,a5
    5aa0:	00856533          	or	a0,a0,s0
    5aa4:	ffffe097          	auipc	ra,0xffffe
    5aa8:	398080e7          	jalr	920(ra) # 3e3c <__floatunsidf>
    5aac:	fe1007b7          	lui	a5,0xfe100
    5ab0:	00b785b3          	add	a1,a5,a1
    5ab4:	00100793          	li	a5,1
    5ab8:	fff90913          	addi	s2,s2,-1
    5abc:	02f12c23          	sw	a5,56(sp)
    5ac0:	e1dff06f          	j	58dc <_dtoa_r+0x21c>
    5ac4:	40e78533          	sub	a0,a5,a4
    5ac8:	00a41533          	sll	a0,s0,a0
    5acc:	fd9ff06f          	j	5aa4 <_dtoa_r+0x3e4>
    5ad0:	408b0b33          	sub	s6,s6,s0
    5ad4:	40800ab3          	neg	s5,s0
    5ad8:	00012c23          	sw	zero,24(sp)
    5adc:	f51ff06f          	j	5a2c <_dtoa_r+0x36c>
    5ae0:	00412703          	lw	a4,4(sp)
    5ae4:	00400793          	li	a5,4
    5ae8:	02f70863          	beq	a4,a5,5b18 <_dtoa_r+0x458>
    5aec:	00100713          	li	a4,1
    5af0:	00e12823          	sw	a4,16(sp)
    5af4:	00412703          	lw	a4,4(sp)
    5af8:	00500793          	li	a5,5
    5afc:	10f70063          	beq	a4,a5,5bfc <_dtoa_r+0x53c>
    5b00:	fff00793          	li	a5,-1
    5b04:	00f12423          	sw	a5,8(sp)
    5b08:	fff00d93          	li	s11,-1
    5b0c:	01200793          	li	a5,18
    5b10:	00012623          	sw	zero,12(sp)
    5b14:	0280006f          	j	5b3c <_dtoa_r+0x47c>
    5b18:	00100793          	li	a5,1
    5b1c:	00f12823          	sw	a5,16(sp)
    5b20:	00c12783          	lw	a5,12(sp)
    5b24:	10f04263          	bgtz	a5,5c28 <_dtoa_r+0x568>
    5b28:	00100793          	li	a5,1
    5b2c:	00100713          	li	a4,1
    5b30:	00f12423          	sw	a5,8(sp)
    5b34:	00100d93          	li	s11,1
    5b38:	00e12623          	sw	a4,12(sp)
    5b3c:	0244a903          	lw	s2,36(s1)
    5b40:	00400713          	li	a4,4
    5b44:	00092223          	sw	zero,4(s2)
    5b48:	01470693          	addi	a3,a4,20
    5b4c:	00492583          	lw	a1,4(s2)
    5b50:	0ed7f463          	bgeu	a5,a3,5c38 <_dtoa_r+0x578>
    5b54:	00048513          	mv	a0,s1
    5b58:	00001097          	auipc	ra,0x1
    5b5c:	730080e7          	jalr	1840(ra) # 7288 <_Balloc>
    5b60:	0244a783          	lw	a5,36(s1)
    5b64:	00a92023          	sw	a0,0(s2)
    5b68:	0007a783          	lw	a5,0(a5) # fe100000 <__freertos_irq_stack_top+0xfd0f0000>
    5b6c:	00f12023          	sw	a5,0(sp)
    5b70:	00e00793          	li	a5,14
    5b74:	2db7ea63          	bltu	a5,s11,5e48 <_dtoa_r+0x788>
    5b78:	2c0c8863          	beqz	s9,5e48 <_dtoa_r+0x788>
    5b7c:	12805463          	blez	s0,5ca4 <_dtoa_r+0x5e4>
    5b80:	00f47793          	andi	a5,s0,15
    5b84:	00379713          	slli	a4,a5,0x3
    5b88:	40445c93          	srai	s9,s0,0x4
    5b8c:	00ffb797          	auipc	a5,0xffb
    5b90:	c1c78793          	addi	a5,a5,-996 # 10007a8 <__mprec_tens>
    5b94:	00e787b3          	add	a5,a5,a4
    5b98:	010cf693          	andi	a3,s9,16
    5b9c:	0007a703          	lw	a4,0(a5)
    5ba0:	00200913          	li	s2,2
    5ba4:	0047a783          	lw	a5,4(a5)
    5ba8:	04068263          	beqz	a3,5bec <_dtoa_r+0x52c>
    5bac:	00ffb697          	auipc	a3,0xffb
    5bb0:	bd468693          	addi	a3,a3,-1068 # 1000780 <__mprec_bigtens>
    5bb4:	0206a603          	lw	a2,32(a3)
    5bb8:	01c12503          	lw	a0,28(sp)
    5bbc:	0246a683          	lw	a3,36(a3)
    5bc0:	02812583          	lw	a1,40(sp)
    5bc4:	02e12023          	sw	a4,32(sp)
    5bc8:	02f12223          	sw	a5,36(sp)
    5bcc:	ffffe097          	auipc	ra,0xffffe
    5bd0:	870080e7          	jalr	-1936(ra) # 343c <__divdf3>
    5bd4:	02012703          	lw	a4,32(sp)
    5bd8:	02412783          	lw	a5,36(sp)
    5bdc:	00fcfc93          	andi	s9,s9,15
    5be0:	00050a13          	mv	s4,a0
    5be4:	00058c13          	mv	s8,a1
    5be8:	00300913          	li	s2,3
    5bec:	00ffbd17          	auipc	s10,0xffb
    5bf0:	b94d0d13          	addi	s10,s10,-1132 # 1000780 <__mprec_bigtens>
    5bf4:	0880006f          	j	5c7c <_dtoa_r+0x5bc>
    5bf8:	00012823          	sw	zero,16(sp)
    5bfc:	00c12783          	lw	a5,12(sp)
    5c00:	00f407b3          	add	a5,s0,a5
    5c04:	00f12423          	sw	a5,8(sp)
    5c08:	00178d93          	addi	s11,a5,1
    5c0c:	000d8793          	mv	a5,s11
    5c10:	f3b046e3          	bgtz	s11,5b3c <_dtoa_r+0x47c>
    5c14:	00100793          	li	a5,1
    5c18:	f25ff06f          	j	5b3c <_dtoa_r+0x47c>
    5c1c:	00100c93          	li	s9,1
    5c20:	00012223          	sw	zero,4(sp)
    5c24:	e49ff06f          	j	5a6c <_dtoa_r+0x3ac>
    5c28:	00c12783          	lw	a5,12(sp)
    5c2c:	00f12423          	sw	a5,8(sp)
    5c30:	00078d93          	mv	s11,a5
    5c34:	f09ff06f          	j	5b3c <_dtoa_r+0x47c>
    5c38:	00158593          	addi	a1,a1,1
    5c3c:	00b92223          	sw	a1,4(s2)
    5c40:	00171713          	slli	a4,a4,0x1
    5c44:	f05ff06f          	j	5b48 <_dtoa_r+0x488>
    5c48:	001cf693          	andi	a3,s9,1
    5c4c:	02068463          	beqz	a3,5c74 <_dtoa_r+0x5b4>
    5c50:	000d2603          	lw	a2,0(s10)
    5c54:	004d2683          	lw	a3,4(s10)
    5c58:	00070513          	mv	a0,a4
    5c5c:	00078593          	mv	a1,a5
    5c60:	00003097          	auipc	ra,0x3
    5c64:	59c080e7          	jalr	1436(ra) # 91fc <__muldf3>
    5c68:	00190913          	addi	s2,s2,1
    5c6c:	00050713          	mv	a4,a0
    5c70:	00058793          	mv	a5,a1
    5c74:	401cdc93          	srai	s9,s9,0x1
    5c78:	008d0d13          	addi	s10,s10,8
    5c7c:	fc0c96e3          	bnez	s9,5c48 <_dtoa_r+0x588>
    5c80:	00070613          	mv	a2,a4
    5c84:	00078693          	mv	a3,a5
    5c88:	000a0513          	mv	a0,s4
    5c8c:	000c0593          	mv	a1,s8
    5c90:	ffffd097          	auipc	ra,0xffffd
    5c94:	7ac080e7          	jalr	1964(ra) # 343c <__divdf3>
    5c98:	00050a13          	mv	s4,a0
    5c9c:	00058c13          	mv	s8,a1
    5ca0:	05c0006f          	j	5cfc <_dtoa_r+0x63c>
    5ca4:	00200913          	li	s2,2
    5ca8:	04040a63          	beqz	s0,5cfc <_dtoa_r+0x63c>
    5cac:	40800cb3          	neg	s9,s0
    5cb0:	00fcf793          	andi	a5,s9,15
    5cb4:	00379713          	slli	a4,a5,0x3
    5cb8:	00ffb797          	auipc	a5,0xffb
    5cbc:	af078793          	addi	a5,a5,-1296 # 10007a8 <__mprec_tens>
    5cc0:	00e787b3          	add	a5,a5,a4
    5cc4:	0007a603          	lw	a2,0(a5)
    5cc8:	0047a683          	lw	a3,4(a5)
    5ccc:	01c12503          	lw	a0,28(sp)
    5cd0:	02812583          	lw	a1,40(sp)
    5cd4:	404cdc93          	srai	s9,s9,0x4
    5cd8:	00ffbd17          	auipc	s10,0xffb
    5cdc:	aa8d0d13          	addi	s10,s10,-1368 # 1000780 <__mprec_bigtens>
    5ce0:	00003097          	auipc	ra,0x3
    5ce4:	51c080e7          	jalr	1308(ra) # 91fc <__muldf3>
    5ce8:	00050a13          	mv	s4,a0
    5cec:	00058c13          	mv	s8,a1
    5cf0:	00000793          	li	a5,0
    5cf4:	1e0c9263          	bnez	s9,5ed8 <_dtoa_r+0x818>
    5cf8:	fa0790e3          	bnez	a5,5c98 <_dtoa_r+0x5d8>
    5cfc:	02c12783          	lw	a5,44(sp)
    5d00:	20078263          	beqz	a5,5f04 <_dtoa_r+0x844>
    5d04:	00ffa717          	auipc	a4,0xffa
    5d08:	2fc70713          	addi	a4,a4,764 # 1000000 <_data>
    5d0c:	00072603          	lw	a2,0(a4)
    5d10:	00472683          	lw	a3,4(a4)
    5d14:	000a0513          	mv	a0,s4
    5d18:	000c0593          	mv	a1,s8
    5d1c:	03412023          	sw	s4,32(sp)
    5d20:	ffffe097          	auipc	ra,0xffffe
    5d24:	fa4080e7          	jalr	-92(ra) # 3cc4 <__ledf2>
    5d28:	1c055e63          	bgez	a0,5f04 <_dtoa_r+0x844>
    5d2c:	1e0d8263          	beqz	s11,5f10 <_dtoa_r+0x850>
    5d30:	00812783          	lw	a5,8(sp)
    5d34:	10f05663          	blez	a5,5e40 <_dtoa_r+0x780>
    5d38:	00ffa717          	auipc	a4,0xffa
    5d3c:	2d070713          	addi	a4,a4,720 # 1000008 <_data+0x8>
    5d40:	02012783          	lw	a5,32(sp)
    5d44:	00072603          	lw	a2,0(a4)
    5d48:	00472683          	lw	a3,4(a4)
    5d4c:	00078513          	mv	a0,a5
    5d50:	000c0593          	mv	a1,s8
    5d54:	00003097          	auipc	ra,0x3
    5d58:	4a8080e7          	jalr	1192(ra) # 91fc <__muldf3>
    5d5c:	00812783          	lw	a5,8(sp)
    5d60:	fff40d13          	addi	s10,s0,-1
    5d64:	00050a13          	mv	s4,a0
    5d68:	00058c13          	mv	s8,a1
    5d6c:	00190913          	addi	s2,s2,1
    5d70:	000c0713          	mv	a4,s8
    5d74:	00090513          	mv	a0,s2
    5d78:	02f12e23          	sw	a5,60(sp)
    5d7c:	03412a23          	sw	s4,52(sp)
    5d80:	00070c93          	mv	s9,a4
    5d84:	02e12023          	sw	a4,32(sp)
    5d88:	00004097          	auipc	ra,0x4
    5d8c:	434080e7          	jalr	1076(ra) # a1bc <__floatsidf>
    5d90:	03412803          	lw	a6,52(sp)
    5d94:	02012703          	lw	a4,32(sp)
    5d98:	fcc00937          	lui	s2,0xfcc00
    5d9c:	00080613          	mv	a2,a6
    5da0:	00070693          	mv	a3,a4
    5da4:	00003097          	auipc	ra,0x3
    5da8:	458080e7          	jalr	1112(ra) # 91fc <__muldf3>
    5dac:	00ffb697          	auipc	a3,0xffb
    5db0:	93c68693          	addi	a3,a3,-1732 # 10006e8 <__clz_tab+0x16c>
    5db4:	0006a603          	lw	a2,0(a3)
    5db8:	0046a683          	lw	a3,4(a3)
    5dbc:	000a0c13          	mv	s8,s4
    5dc0:	00003097          	auipc	ra,0x3
    5dc4:	b24080e7          	jalr	-1244(ra) # 88e4 <__adddf3>
    5dc8:	03c12783          	lw	a5,60(sp)
    5dcc:	00050a13          	mv	s4,a0
    5dd0:	00b90933          	add	s2,s2,a1
    5dd4:	14079463          	bnez	a5,5f1c <_dtoa_r+0x85c>
    5dd8:	00ffb797          	auipc	a5,0xffb
    5ddc:	91878793          	addi	a5,a5,-1768 # 10006f0 <__clz_tab+0x174>
    5de0:	03412803          	lw	a6,52(sp)
    5de4:	02012703          	lw	a4,32(sp)
    5de8:	0007a603          	lw	a2,0(a5)
    5dec:	0047a683          	lw	a3,4(a5)
    5df0:	00080513          	mv	a0,a6
    5df4:	00070593          	mv	a1,a4
    5df8:	00004097          	auipc	ra,0x4
    5dfc:	a68080e7          	jalr	-1432(ra) # 9860 <__subdf3>
    5e00:	000a0613          	mv	a2,s4
    5e04:	00090693          	mv	a3,s2
    5e08:	00050c13          	mv	s8,a0
    5e0c:	00058c93          	mv	s9,a1
    5e10:	ffffe097          	auipc	ra,0xffffe
    5e14:	db8080e7          	jalr	-584(ra) # 3bc8 <__gedf2>
    5e18:	08a04ae3          	bgtz	a0,66ac <_dtoa_r+0xfec>
    5e1c:	800007b7          	lui	a5,0x80000
    5e20:	0127c7b3          	xor	a5,a5,s2
    5e24:	000a0613          	mv	a2,s4
    5e28:	00078693          	mv	a3,a5
    5e2c:	000c0513          	mv	a0,s8
    5e30:	000c8593          	mv	a1,s9
    5e34:	ffffe097          	auipc	ra,0xffffe
    5e38:	e90080e7          	jalr	-368(ra) # 3cc4 <__ledf2>
    5e3c:	060542e3          	bltz	a0,66a0 <_dtoa_r+0xfe0>
    5e40:	01c12a03          	lw	s4,28(sp)
    5e44:	02812c03          	lw	s8,40(sp)
    5e48:	04c12783          	lw	a5,76(sp)
    5e4c:	4c07ca63          	bltz	a5,6320 <_dtoa_r+0xc60>
    5e50:	00e00713          	li	a4,14
    5e54:	4c874663          	blt	a4,s0,6320 <_dtoa_r+0xc60>
    5e58:	00341713          	slli	a4,s0,0x3
    5e5c:	00ffb797          	auipc	a5,0xffb
    5e60:	94c78793          	addi	a5,a5,-1716 # 10007a8 <__mprec_tens>
    5e64:	00e787b3          	add	a5,a5,a4
    5e68:	0007ab03          	lw	s6,0(a5)
    5e6c:	0047ab83          	lw	s7,4(a5)
    5e70:	00c12783          	lw	a5,12(sp)
    5e74:	3207da63          	bgez	a5,61a8 <_dtoa_r+0xae8>
    5e78:	33b04863          	bgtz	s11,61a8 <_dtoa_r+0xae8>
    5e7c:	020d92e3          	bnez	s11,66a0 <_dtoa_r+0xfe0>
    5e80:	00ffb797          	auipc	a5,0xffb
    5e84:	87078793          	addi	a5,a5,-1936 # 10006f0 <__clz_tab+0x174>
    5e88:	0007a603          	lw	a2,0(a5)
    5e8c:	0047a683          	lw	a3,4(a5)
    5e90:	000b0513          	mv	a0,s6
    5e94:	000b8593          	mv	a1,s7
    5e98:	00003097          	auipc	ra,0x3
    5e9c:	364080e7          	jalr	868(ra) # 91fc <__muldf3>
    5ea0:	000a0613          	mv	a2,s4
    5ea4:	000c0693          	mv	a3,s8
    5ea8:	ffffe097          	auipc	ra,0xffffe
    5eac:	d20080e7          	jalr	-736(ra) # 3bc8 <__gedf2>
    5eb0:	00000a93          	li	s5,0
    5eb4:	00000913          	li	s2,0
    5eb8:	78055c63          	bgez	a0,6650 <_dtoa_r+0xf90>
    5ebc:	00012783          	lw	a5,0(sp)
    5ec0:	00012703          	lw	a4,0(sp)
    5ec4:	00140413          	addi	s0,s0,1
    5ec8:	00178a13          	addi	s4,a5,1
    5ecc:	03100793          	li	a5,49
    5ed0:	00f70023          	sb	a5,0(a4)
    5ed4:	7880006f          	j	665c <_dtoa_r+0xf9c>
    5ed8:	001cf713          	andi	a4,s9,1
    5edc:	00070e63          	beqz	a4,5ef8 <_dtoa_r+0x838>
    5ee0:	000d2603          	lw	a2,0(s10)
    5ee4:	004d2683          	lw	a3,4(s10)
    5ee8:	00190913          	addi	s2,s2,1 # fcc00001 <__freertos_irq_stack_top+0xfbbf0001>
    5eec:	00003097          	auipc	ra,0x3
    5ef0:	310080e7          	jalr	784(ra) # 91fc <__muldf3>
    5ef4:	00100793          	li	a5,1
    5ef8:	401cdc93          	srai	s9,s9,0x1
    5efc:	008d0d13          	addi	s10,s10,8
    5f00:	df5ff06f          	j	5cf4 <_dtoa_r+0x634>
    5f04:	00040d13          	mv	s10,s0
    5f08:	000d8793          	mv	a5,s11
    5f0c:	e65ff06f          	j	5d70 <_dtoa_r+0x6b0>
    5f10:	00040d13          	mv	s10,s0
    5f14:	00000793          	li	a5,0
    5f18:	e59ff06f          	j	5d70 <_dtoa_r+0x6b0>
    5f1c:	fff78693          	addi	a3,a5,-1
    5f20:	00369613          	slli	a2,a3,0x3
    5f24:	00ffb697          	auipc	a3,0xffb
    5f28:	88468693          	addi	a3,a3,-1916 # 10007a8 <__mprec_tens>
    5f2c:	00c686b3          	add	a3,a3,a2
    5f30:	0006a503          	lw	a0,0(a3)
    5f34:	0046a583          	lw	a1,4(a3)
    5f38:	00012683          	lw	a3,0(sp)
    5f3c:	00f687b3          	add	a5,a3,a5
    5f40:	02f12a23          	sw	a5,52(sp)
    5f44:	01012783          	lw	a5,16(sp)
    5f48:	12078c63          	beqz	a5,6080 <_dtoa_r+0x9c0>
    5f4c:	00ffa797          	auipc	a5,0xffa
    5f50:	7ac78793          	addi	a5,a5,1964 # 10006f8 <__clz_tab+0x17c>
    5f54:	00050613          	mv	a2,a0
    5f58:	00058693          	mv	a3,a1
    5f5c:	0007a503          	lw	a0,0(a5)
    5f60:	0047a583          	lw	a1,4(a5)
    5f64:	03212e23          	sw	s2,60(sp)
    5f68:	03412023          	sw	s4,32(sp)
    5f6c:	ffffd097          	auipc	ra,0xffffd
    5f70:	4d0080e7          	jalr	1232(ra) # 343c <__divdf3>
    5f74:	02012803          	lw	a6,32(sp)
    5f78:	03c12703          	lw	a4,60(sp)
    5f7c:	00ffa917          	auipc	s2,0xffa
    5f80:	08c90913          	addi	s2,s2,140 # 1000008 <_data+0x8>
    5f84:	00080613          	mv	a2,a6
    5f88:	00070693          	mv	a3,a4
    5f8c:	00004097          	auipc	ra,0x4
    5f90:	8d4080e7          	jalr	-1836(ra) # 9860 <__subdf3>
    5f94:	00012a03          	lw	s4,0(sp)
    5f98:	02a12023          	sw	a0,32(sp)
    5f9c:	02b12223          	sw	a1,36(sp)
    5fa0:	000c8593          	mv	a1,s9
    5fa4:	000c0513          	mv	a0,s8
    5fa8:	00004097          	auipc	ra,0x4
    5fac:	190080e7          	jalr	400(ra) # a138 <__fixdfsi>
    5fb0:	02a12e23          	sw	a0,60(sp)
    5fb4:	00004097          	auipc	ra,0x4
    5fb8:	208080e7          	jalr	520(ra) # a1bc <__floatsidf>
    5fbc:	00050613          	mv	a2,a0
    5fc0:	00058693          	mv	a3,a1
    5fc4:	000c0513          	mv	a0,s8
    5fc8:	000c8593          	mv	a1,s9
    5fcc:	00004097          	auipc	ra,0x4
    5fd0:	894080e7          	jalr	-1900(ra) # 9860 <__subdf3>
    5fd4:	03c12783          	lw	a5,60(sp)
    5fd8:	02012603          	lw	a2,32(sp)
    5fdc:	02412683          	lw	a3,36(sp)
    5fe0:	001a0a13          	addi	s4,s4,1
    5fe4:	03078793          	addi	a5,a5,48
    5fe8:	fefa0fa3          	sb	a5,-1(s4)
    5fec:	00050c13          	mv	s8,a0
    5ff0:	00058c93          	mv	s9,a1
    5ff4:	ffffe097          	auipc	ra,0xffffe
    5ff8:	cd0080e7          	jalr	-816(ra) # 3cc4 <__ledf2>
    5ffc:	16054c63          	bltz	a0,6174 <_dtoa_r+0xab4>
    6000:	00ffa797          	auipc	a5,0xffa
    6004:	00078793          	mv	a5,a5
    6008:	0007a503          	lw	a0,0(a5) # 1000000 <_data>
    600c:	0047a583          	lw	a1,4(a5)
    6010:	000c0613          	mv	a2,s8
    6014:	000c8693          	mv	a3,s9
    6018:	00004097          	auipc	ra,0x4
    601c:	848080e7          	jalr	-1976(ra) # 9860 <__subdf3>
    6020:	02012603          	lw	a2,32(sp)
    6024:	02412683          	lw	a3,36(sp)
    6028:	ffffe097          	auipc	ra,0xffffe
    602c:	c9c080e7          	jalr	-868(ra) # 3cc4 <__ledf2>
    6030:	28054063          	bltz	a0,62b0 <_dtoa_r+0xbf0>
    6034:	03412783          	lw	a5,52(sp)
    6038:	e0fa04e3          	beq	s4,a5,5e40 <_dtoa_r+0x780>
    603c:	00092603          	lw	a2,0(s2)
    6040:	00492683          	lw	a3,4(s2)
    6044:	02012503          	lw	a0,32(sp)
    6048:	02412583          	lw	a1,36(sp)
    604c:	00003097          	auipc	ra,0x3
    6050:	1b0080e7          	jalr	432(ra) # 91fc <__muldf3>
    6054:	00092603          	lw	a2,0(s2)
    6058:	00492683          	lw	a3,4(s2)
    605c:	02a12023          	sw	a0,32(sp)
    6060:	02b12223          	sw	a1,36(sp)
    6064:	000c0513          	mv	a0,s8
    6068:	000c8593          	mv	a1,s9
    606c:	00003097          	auipc	ra,0x3
    6070:	190080e7          	jalr	400(ra) # 91fc <__muldf3>
    6074:	00050c13          	mv	s8,a0
    6078:	00058c93          	mv	s9,a1
    607c:	f25ff06f          	j	5fa0 <_dtoa_r+0x8e0>
    6080:	000a0613          	mv	a2,s4
    6084:	00090693          	mv	a3,s2
    6088:	00003097          	auipc	ra,0x3
    608c:	174080e7          	jalr	372(ra) # 91fc <__muldf3>
    6090:	03412a03          	lw	s4,52(sp)
    6094:	00012903          	lw	s2,0(sp)
    6098:	02a12023          	sw	a0,32(sp)
    609c:	02b12223          	sw	a1,36(sp)
    60a0:	000c8593          	mv	a1,s9
    60a4:	000c0513          	mv	a0,s8
    60a8:	00004097          	auipc	ra,0x4
    60ac:	090080e7          	jalr	144(ra) # a138 <__fixdfsi>
    60b0:	02a12e23          	sw	a0,60(sp)
    60b4:	00004097          	auipc	ra,0x4
    60b8:	108080e7          	jalr	264(ra) # a1bc <__floatsidf>
    60bc:	00050613          	mv	a2,a0
    60c0:	00058693          	mv	a3,a1
    60c4:	000c0513          	mv	a0,s8
    60c8:	000c8593          	mv	a1,s9
    60cc:	00003097          	auipc	ra,0x3
    60d0:	794080e7          	jalr	1940(ra) # 9860 <__subdf3>
    60d4:	03c12703          	lw	a4,60(sp)
    60d8:	03412783          	lw	a5,52(sp)
    60dc:	00190913          	addi	s2,s2,1
    60e0:	03070713          	addi	a4,a4,48
    60e4:	fee90fa3          	sb	a4,-1(s2)
    60e8:	00050c13          	mv	s8,a0
    60ec:	00058c93          	mv	s9,a1
    60f0:	08f91a63          	bne	s2,a5,6184 <_dtoa_r+0xac4>
    60f4:	00ffa917          	auipc	s2,0xffa
    60f8:	60490913          	addi	s2,s2,1540 # 10006f8 <__clz_tab+0x17c>
    60fc:	00092603          	lw	a2,0(s2)
    6100:	00492683          	lw	a3,4(s2)
    6104:	02012503          	lw	a0,32(sp)
    6108:	02412583          	lw	a1,36(sp)
    610c:	00002097          	auipc	ra,0x2
    6110:	7d8080e7          	jalr	2008(ra) # 88e4 <__adddf3>
    6114:	00050613          	mv	a2,a0
    6118:	00058693          	mv	a3,a1
    611c:	000c0513          	mv	a0,s8
    6120:	000c8593          	mv	a1,s9
    6124:	ffffe097          	auipc	ra,0xffffe
    6128:	aa4080e7          	jalr	-1372(ra) # 3bc8 <__gedf2>
    612c:	18a04263          	bgtz	a0,62b0 <_dtoa_r+0xbf0>
    6130:	02012603          	lw	a2,32(sp)
    6134:	02412683          	lw	a3,36(sp)
    6138:	00092503          	lw	a0,0(s2)
    613c:	00492583          	lw	a1,4(s2)
    6140:	00003097          	auipc	ra,0x3
    6144:	720080e7          	jalr	1824(ra) # 9860 <__subdf3>
    6148:	00050613          	mv	a2,a0
    614c:	00058693          	mv	a3,a1
    6150:	000c0513          	mv	a0,s8
    6154:	000c8593          	mv	a1,s9
    6158:	ffffe097          	auipc	ra,0xffffe
    615c:	b6c080e7          	jalr	-1172(ra) # 3cc4 <__ledf2>
    6160:	03000793          	li	a5,48
    6164:	cc055ee3          	bgez	a0,5e40 <_dtoa_r+0x780>
    6168:	fffa4703          	lbu	a4,-1(s4)
    616c:	fffa0693          	addi	a3,s4,-1
    6170:	00f70663          	beq	a4,a5,617c <_dtoa_r+0xabc>
    6174:	000d0413          	mv	s0,s10
    6178:	1040006f          	j	627c <_dtoa_r+0xbbc>
    617c:	00068a13          	mv	s4,a3
    6180:	fe9ff06f          	j	6168 <_dtoa_r+0xaa8>
    6184:	00ffa797          	auipc	a5,0xffa
    6188:	e8478793          	addi	a5,a5,-380 # 1000008 <_data+0x8>
    618c:	0007a603          	lw	a2,0(a5)
    6190:	0047a683          	lw	a3,4(a5)
    6194:	00003097          	auipc	ra,0x3
    6198:	068080e7          	jalr	104(ra) # 91fc <__muldf3>
    619c:	00050c13          	mv	s8,a0
    61a0:	00058c93          	mv	s9,a1
    61a4:	efdff06f          	j	60a0 <_dtoa_r+0x9e0>
    61a8:	000c0793          	mv	a5,s8
    61ac:	00078c93          	mv	s9,a5
    61b0:	00012783          	lw	a5,0(sp)
    61b4:	000a0c13          	mv	s8,s4
    61b8:	00ffaa97          	auipc	s5,0xffa
    61bc:	e50a8a93          	addi	s5,s5,-432 # 1000008 <_data+0x8>
    61c0:	00178913          	addi	s2,a5,1
    61c4:	01b78db3          	add	s11,a5,s11
    61c8:	000b0613          	mv	a2,s6
    61cc:	000b8693          	mv	a3,s7
    61d0:	000c0513          	mv	a0,s8
    61d4:	000c8593          	mv	a1,s9
    61d8:	ffffd097          	auipc	ra,0xffffd
    61dc:	264080e7          	jalr	612(ra) # 343c <__divdf3>
    61e0:	00004097          	auipc	ra,0x4
    61e4:	f58080e7          	jalr	-168(ra) # a138 <__fixdfsi>
    61e8:	00050d13          	mv	s10,a0
    61ec:	00004097          	auipc	ra,0x4
    61f0:	fd0080e7          	jalr	-48(ra) # a1bc <__floatsidf>
    61f4:	000b0613          	mv	a2,s6
    61f8:	000b8693          	mv	a3,s7
    61fc:	00003097          	auipc	ra,0x3
    6200:	000080e7          	jalr	ra # 91fc <__muldf3>
    6204:	00050613          	mv	a2,a0
    6208:	00058693          	mv	a3,a1
    620c:	000c0513          	mv	a0,s8
    6210:	000c8593          	mv	a1,s9
    6214:	00003097          	auipc	ra,0x3
    6218:	64c080e7          	jalr	1612(ra) # 9860 <__subdf3>
    621c:	030d0793          	addi	a5,s10,48
    6220:	fef90fa3          	sb	a5,-1(s2)
    6224:	00050613          	mv	a2,a0
    6228:	00058693          	mv	a3,a1
    622c:	00090a13          	mv	s4,s2
    6230:	0b2d9e63          	bne	s11,s2,62ec <_dtoa_r+0xc2c>
    6234:	00002097          	auipc	ra,0x2
    6238:	6b0080e7          	jalr	1712(ra) # 88e4 <__adddf3>
    623c:	000b0613          	mv	a2,s6
    6240:	000b8693          	mv	a3,s7
    6244:	00050c13          	mv	s8,a0
    6248:	00058c93          	mv	s9,a1
    624c:	ffffe097          	auipc	ra,0xffffe
    6250:	97c080e7          	jalr	-1668(ra) # 3bc8 <__gedf2>
    6254:	04a04c63          	bgtz	a0,62ac <_dtoa_r+0xbec>
    6258:	000b0613          	mv	a2,s6
    625c:	000b8693          	mv	a3,s7
    6260:	000c0513          	mv	a0,s8
    6264:	000c8593          	mv	a1,s9
    6268:	00003097          	auipc	ra,0x3
    626c:	f08080e7          	jalr	-248(ra) # 9170 <__eqdf2>
    6270:	00051663          	bnez	a0,627c <_dtoa_r+0xbbc>
    6274:	001d7793          	andi	a5,s10,1
    6278:	02079a63          	bnez	a5,62ac <_dtoa_r+0xbec>
    627c:	00098593          	mv	a1,s3
    6280:	00048513          	mv	a0,s1
    6284:	00001097          	auipc	ra,0x1
    6288:	0f0080e7          	jalr	240(ra) # 7374 <_Bfree>
    628c:	03012783          	lw	a5,48(sp)
    6290:	000a0023          	sb	zero,0(s4)
    6294:	00140413          	addi	s0,s0,1
    6298:	0087a023          	sw	s0,0(a5)
    629c:	01412783          	lw	a5,20(sp)
    62a0:	d4078e63          	beqz	a5,57fc <_dtoa_r+0x13c>
    62a4:	0147a023          	sw	s4,0(a5)
    62a8:	d54ff06f          	j	57fc <_dtoa_r+0x13c>
    62ac:	00040d13          	mv	s10,s0
    62b0:	03900713          	li	a4,57
    62b4:	fffa4683          	lbu	a3,-1(s4)
    62b8:	fffa0793          	addi	a5,s4,-1
    62bc:	00e69c63          	bne	a3,a4,62d4 <_dtoa_r+0xc14>
    62c0:	00012683          	lw	a3,0(sp)
    62c4:	02f69063          	bne	a3,a5,62e4 <_dtoa_r+0xc24>
    62c8:	03000713          	li	a4,48
    62cc:	001d0d13          	addi	s10,s10,1
    62d0:	00e68023          	sb	a4,0(a3)
    62d4:	0007c703          	lbu	a4,0(a5)
    62d8:	00170713          	addi	a4,a4,1
    62dc:	00e78023          	sb	a4,0(a5)
    62e0:	e95ff06f          	j	6174 <_dtoa_r+0xab4>
    62e4:	00078a13          	mv	s4,a5
    62e8:	fcdff06f          	j	62b4 <_dtoa_r+0xbf4>
    62ec:	000aa603          	lw	a2,0(s5)
    62f0:	004aa683          	lw	a3,4(s5)
    62f4:	00190913          	addi	s2,s2,1
    62f8:	00003097          	auipc	ra,0x3
    62fc:	f04080e7          	jalr	-252(ra) # 91fc <__muldf3>
    6300:	00000613          	li	a2,0
    6304:	00000693          	li	a3,0
    6308:	00050c13          	mv	s8,a0
    630c:	00058c93          	mv	s9,a1
    6310:	00003097          	auipc	ra,0x3
    6314:	e60080e7          	jalr	-416(ra) # 9170 <__eqdf2>
    6318:	ea0518e3          	bnez	a0,61c8 <_dtoa_r+0xb08>
    631c:	f61ff06f          	j	627c <_dtoa_r+0xbbc>
    6320:	01012703          	lw	a4,16(sp)
    6324:	18070c63          	beqz	a4,64bc <_dtoa_r+0xdfc>
    6328:	00412683          	lw	a3,4(sp)
    632c:	00100713          	li	a4,1
    6330:	14d74463          	blt	a4,a3,6478 <_dtoa_r+0xdb8>
    6334:	03812703          	lw	a4,56(sp)
    6338:	43378793          	addi	a5,a5,1075
    633c:	00071863          	bnez	a4,634c <_dtoa_r+0xc8c>
    6340:	04812703          	lw	a4,72(sp)
    6344:	03600793          	li	a5,54
    6348:	40e787b3          	sub	a5,a5,a4
    634c:	000a8d13          	mv	s10,s5
    6350:	000b0c93          	mv	s9,s6
    6354:	00100593          	li	a1,1
    6358:	00048513          	mv	a0,s1
    635c:	00fb0b33          	add	s6,s6,a5
    6360:	00fb8bb3          	add	s7,s7,a5
    6364:	00001097          	auipc	ra,0x1
    6368:	2ac080e7          	jalr	684(ra) # 7610 <__i2b>
    636c:	00050913          	mv	s2,a0
    6370:	03905063          	blez	s9,6390 <_dtoa_r+0xcd0>
    6374:	01705e63          	blez	s7,6390 <_dtoa_r+0xcd0>
    6378:	000c8793          	mv	a5,s9
    637c:	019bd463          	bge	s7,s9,6384 <_dtoa_r+0xcc4>
    6380:	000b8793          	mv	a5,s7
    6384:	40fb0b33          	sub	s6,s6,a5
    6388:	40fc8cb3          	sub	s9,s9,a5
    638c:	40fb8bb3          	sub	s7,s7,a5
    6390:	060a8a63          	beqz	s5,6404 <_dtoa_r+0xd44>
    6394:	01012783          	lw	a5,16(sp)
    6398:	12078a63          	beqz	a5,64cc <_dtoa_r+0xe0c>
    639c:	05a05663          	blez	s10,63e8 <_dtoa_r+0xd28>
    63a0:	00090593          	mv	a1,s2
    63a4:	000d0613          	mv	a2,s10
    63a8:	00048513          	mv	a0,s1
    63ac:	00001097          	auipc	ra,0x1
    63b0:	460080e7          	jalr	1120(ra) # 780c <__pow5mult>
    63b4:	00098613          	mv	a2,s3
    63b8:	00050593          	mv	a1,a0
    63bc:	00050913          	mv	s2,a0
    63c0:	00048513          	mv	a0,s1
    63c4:	00001097          	auipc	ra,0x1
    63c8:	284080e7          	jalr	644(ra) # 7648 <__multiply>
    63cc:	00a12e23          	sw	a0,28(sp)
    63d0:	00098593          	mv	a1,s3
    63d4:	00048513          	mv	a0,s1
    63d8:	00001097          	auipc	ra,0x1
    63dc:	f9c080e7          	jalr	-100(ra) # 7374 <_Bfree>
    63e0:	01c12783          	lw	a5,28(sp)
    63e4:	00078993          	mv	s3,a5
    63e8:	41aa8633          	sub	a2,s5,s10
    63ec:	00060c63          	beqz	a2,6404 <_dtoa_r+0xd44>
    63f0:	00098593          	mv	a1,s3
    63f4:	00048513          	mv	a0,s1
    63f8:	00001097          	auipc	ra,0x1
    63fc:	414080e7          	jalr	1044(ra) # 780c <__pow5mult>
    6400:	00050993          	mv	s3,a0
    6404:	00100593          	li	a1,1
    6408:	00048513          	mv	a0,s1
    640c:	00001097          	auipc	ra,0x1
    6410:	204080e7          	jalr	516(ra) # 7610 <__i2b>
    6414:	01812783          	lw	a5,24(sp)
    6418:	00050a93          	mv	s5,a0
    641c:	0af05c63          	blez	a5,64d4 <_dtoa_r+0xe14>
    6420:	00078613          	mv	a2,a5
    6424:	00050593          	mv	a1,a0
    6428:	00048513          	mv	a0,s1
    642c:	00001097          	auipc	ra,0x1
    6430:	3e0080e7          	jalr	992(ra) # 780c <__pow5mult>
    6434:	00412703          	lw	a4,4(sp)
    6438:	00100793          	li	a5,1
    643c:	00050a93          	mv	s5,a0
    6440:	00000d13          	li	s10,0
    6444:	0ae7c663          	blt	a5,a4,64f0 <_dtoa_r+0xe30>
    6448:	00000d13          	li	s10,0
    644c:	080a1c63          	bnez	s4,64e4 <_dtoa_r+0xe24>
    6450:	00cc1793          	slli	a5,s8,0xc
    6454:	000a0d13          	mv	s10,s4
    6458:	08079663          	bnez	a5,64e4 <_dtoa_r+0xe24>
    645c:	7ff005b7          	lui	a1,0x7ff00
    6460:	00bc7c33          	and	s8,s8,a1
    6464:	080c0063          	beqz	s8,64e4 <_dtoa_r+0xe24>
    6468:	001b0b13          	addi	s6,s6,1
    646c:	001b8b93          	addi	s7,s7,1
    6470:	00100d13          	li	s10,1
    6474:	0700006f          	j	64e4 <_dtoa_r+0xe24>
    6478:	fffd8d13          	addi	s10,s11,-1
    647c:	01aacc63          	blt	s5,s10,6494 <_dtoa_r+0xdd4>
    6480:	41aa8d33          	sub	s10,s5,s10
    6484:	020dd663          	bgez	s11,64b0 <_dtoa_r+0xdf0>
    6488:	41bb0cb3          	sub	s9,s6,s11
    648c:	00000793          	li	a5,0
    6490:	ec5ff06f          	j	6354 <_dtoa_r+0xc94>
    6494:	01812783          	lw	a5,24(sp)
    6498:	415d0ab3          	sub	s5,s10,s5
    649c:	015787b3          	add	a5,a5,s5
    64a0:	00f12c23          	sw	a5,24(sp)
    64a4:	000d0a93          	mv	s5,s10
    64a8:	00000d13          	li	s10,0
    64ac:	fd9ff06f          	j	6484 <_dtoa_r+0xdc4>
    64b0:	000b0c93          	mv	s9,s6
    64b4:	000d8793          	mv	a5,s11
    64b8:	e9dff06f          	j	6354 <_dtoa_r+0xc94>
    64bc:	000a8d13          	mv	s10,s5
    64c0:	000b0c93          	mv	s9,s6
    64c4:	00000913          	li	s2,0
    64c8:	ea9ff06f          	j	6370 <_dtoa_r+0xcb0>
    64cc:	000a8613          	mv	a2,s5
    64d0:	f21ff06f          	j	63f0 <_dtoa_r+0xd30>
    64d4:	00412703          	lw	a4,4(sp)
    64d8:	00100793          	li	a5,1
    64dc:	00000d13          	li	s10,0
    64e0:	f6e7d4e3          	bge	a5,a4,6448 <_dtoa_r+0xd88>
    64e4:	01812783          	lw	a5,24(sp)
    64e8:	00100513          	li	a0,1
    64ec:	02078463          	beqz	a5,6514 <_dtoa_r+0xe54>
    64f0:	010aa783          	lw	a5,16(s5)
    64f4:	00378793          	addi	a5,a5,3
    64f8:	00279793          	slli	a5,a5,0x2
    64fc:	00fa87b3          	add	a5,s5,a5
    6500:	0047a503          	lw	a0,4(a5)
    6504:	00001097          	auipc	ra,0x1
    6508:	fec080e7          	jalr	-20(ra) # 74f0 <__hi0bits>
    650c:	02000793          	li	a5,32
    6510:	40a78533          	sub	a0,a5,a0
    6514:	01750533          	add	a0,a0,s7
    6518:	01f57513          	andi	a0,a0,31
    651c:	0e050063          	beqz	a0,65fc <_dtoa_r+0xf3c>
    6520:	02000793          	li	a5,32
    6524:	40a787b3          	sub	a5,a5,a0
    6528:	00400713          	li	a4,4
    652c:	0cf75463          	bge	a4,a5,65f4 <_dtoa_r+0xf34>
    6530:	01c00793          	li	a5,28
    6534:	40a78533          	sub	a0,a5,a0
    6538:	00ab0b33          	add	s6,s6,a0
    653c:	00ac8cb3          	add	s9,s9,a0
    6540:	00ab8bb3          	add	s7,s7,a0
    6544:	01605e63          	blez	s6,6560 <_dtoa_r+0xea0>
    6548:	00098593          	mv	a1,s3
    654c:	000b0613          	mv	a2,s6
    6550:	00048513          	mv	a0,s1
    6554:	00001097          	auipc	ra,0x1
    6558:	3f4080e7          	jalr	1012(ra) # 7948 <__lshift>
    655c:	00050993          	mv	s3,a0
    6560:	01705e63          	blez	s7,657c <_dtoa_r+0xebc>
    6564:	000a8593          	mv	a1,s5
    6568:	000b8613          	mv	a2,s7
    656c:	00048513          	mv	a0,s1
    6570:	00001097          	auipc	ra,0x1
    6574:	3d8080e7          	jalr	984(ra) # 7948 <__lshift>
    6578:	00050a93          	mv	s5,a0
    657c:	02c12783          	lw	a5,44(sp)
    6580:	08078263          	beqz	a5,6604 <_dtoa_r+0xf44>
    6584:	000a8593          	mv	a1,s5
    6588:	00098513          	mv	a0,s3
    658c:	00001097          	auipc	ra,0x1
    6590:	500080e7          	jalr	1280(ra) # 7a8c <__mcmp>
    6594:	06055863          	bgez	a0,6604 <_dtoa_r+0xf44>
    6598:	00098593          	mv	a1,s3
    659c:	00000693          	li	a3,0
    65a0:	00a00613          	li	a2,10
    65a4:	00048513          	mv	a0,s1
    65a8:	00001097          	auipc	ra,0x1
    65ac:	e40080e7          	jalr	-448(ra) # 73e8 <__multadd>
    65b0:	01012783          	lw	a5,16(sp)
    65b4:	fff40413          	addi	s0,s0,-1
    65b8:	00050993          	mv	s3,a0
    65bc:	3e078863          	beqz	a5,69ac <_dtoa_r+0x12ec>
    65c0:	00090593          	mv	a1,s2
    65c4:	00000693          	li	a3,0
    65c8:	00a00613          	li	a2,10
    65cc:	00048513          	mv	a0,s1
    65d0:	00001097          	auipc	ra,0x1
    65d4:	e18080e7          	jalr	-488(ra) # 73e8 <__multadd>
    65d8:	00812783          	lw	a5,8(sp)
    65dc:	00050913          	mv	s2,a0
    65e0:	0ef04463          	bgtz	a5,66c8 <_dtoa_r+0x1008>
    65e4:	00412703          	lw	a4,4(sp)
    65e8:	00200793          	li	a5,2
    65ec:	0ce7de63          	bge	a5,a4,66c8 <_dtoa_r+0x1008>
    65f0:	0280006f          	j	6618 <_dtoa_r+0xf58>
    65f4:	f4e788e3          	beq	a5,a4,6544 <_dtoa_r+0xe84>
    65f8:	00078513          	mv	a0,a5
    65fc:	01c50513          	addi	a0,a0,28
    6600:	f39ff06f          	j	6538 <_dtoa_r+0xe78>
    6604:	0bb04c63          	bgtz	s11,66bc <_dtoa_r+0xffc>
    6608:	00412703          	lw	a4,4(sp)
    660c:	00200793          	li	a5,2
    6610:	0ae7d663          	bge	a5,a4,66bc <_dtoa_r+0xffc>
    6614:	01b12423          	sw	s11,8(sp)
    6618:	00812783          	lw	a5,8(sp)
    661c:	02079a63          	bnez	a5,6650 <_dtoa_r+0xf90>
    6620:	000a8593          	mv	a1,s5
    6624:	00000693          	li	a3,0
    6628:	00500613          	li	a2,5
    662c:	00048513          	mv	a0,s1
    6630:	00001097          	auipc	ra,0x1
    6634:	db8080e7          	jalr	-584(ra) # 73e8 <__multadd>
    6638:	00050a93          	mv	s5,a0
    663c:	00050593          	mv	a1,a0
    6640:	00098513          	mv	a0,s3
    6644:	00001097          	auipc	ra,0x1
    6648:	448080e7          	jalr	1096(ra) # 7a8c <__mcmp>
    664c:	86a048e3          	bgtz	a0,5ebc <_dtoa_r+0x7fc>
    6650:	00c12783          	lw	a5,12(sp)
    6654:	00012a03          	lw	s4,0(sp)
    6658:	fff7c413          	not	s0,a5
    665c:	00000b13          	li	s6,0
    6660:	000a8593          	mv	a1,s5
    6664:	00048513          	mv	a0,s1
    6668:	00001097          	auipc	ra,0x1
    666c:	d0c080e7          	jalr	-756(ra) # 7374 <_Bfree>
    6670:	c00906e3          	beqz	s2,627c <_dtoa_r+0xbbc>
    6674:	000b0c63          	beqz	s6,668c <_dtoa_r+0xfcc>
    6678:	012b0a63          	beq	s6,s2,668c <_dtoa_r+0xfcc>
    667c:	000b0593          	mv	a1,s6
    6680:	00048513          	mv	a0,s1
    6684:	00001097          	auipc	ra,0x1
    6688:	cf0080e7          	jalr	-784(ra) # 7374 <_Bfree>
    668c:	00090593          	mv	a1,s2
    6690:	00048513          	mv	a0,s1
    6694:	00001097          	auipc	ra,0x1
    6698:	ce0080e7          	jalr	-800(ra) # 7374 <_Bfree>
    669c:	be1ff06f          	j	627c <_dtoa_r+0xbbc>
    66a0:	00000a93          	li	s5,0
    66a4:	00000913          	li	s2,0
    66a8:	fa9ff06f          	j	6650 <_dtoa_r+0xf90>
    66ac:	000d0413          	mv	s0,s10
    66b0:	00000a93          	li	s5,0
    66b4:	00000913          	li	s2,0
    66b8:	805ff06f          	j	5ebc <_dtoa_r+0x7fc>
    66bc:	01012783          	lw	a5,16(sp)
    66c0:	01b12423          	sw	s11,8(sp)
    66c4:	2e078e63          	beqz	a5,69c0 <_dtoa_r+0x1300>
    66c8:	01905e63          	blez	s9,66e4 <_dtoa_r+0x1024>
    66cc:	00090593          	mv	a1,s2
    66d0:	000c8613          	mv	a2,s9
    66d4:	00048513          	mv	a0,s1
    66d8:	00001097          	auipc	ra,0x1
    66dc:	270080e7          	jalr	624(ra) # 7948 <__lshift>
    66e0:	00050913          	mv	s2,a0
    66e4:	00090513          	mv	a0,s2
    66e8:	040d0463          	beqz	s10,6730 <_dtoa_r+0x1070>
    66ec:	00492583          	lw	a1,4(s2)
    66f0:	00048513          	mv	a0,s1
    66f4:	00001097          	auipc	ra,0x1
    66f8:	b94080e7          	jalr	-1132(ra) # 7288 <_Balloc>
    66fc:	01092603          	lw	a2,16(s2)
    6700:	00050b13          	mv	s6,a0
    6704:	00c90593          	addi	a1,s2,12
    6708:	00260613          	addi	a2,a2,2
    670c:	00261613          	slli	a2,a2,0x2
    6710:	00c50513          	addi	a0,a0,12
    6714:	00001097          	auipc	ra,0x1
    6718:	b50080e7          	jalr	-1200(ra) # 7264 <memcpy>
    671c:	00100613          	li	a2,1
    6720:	000b0593          	mv	a1,s6
    6724:	00048513          	mv	a0,s1
    6728:	00001097          	auipc	ra,0x1
    672c:	220080e7          	jalr	544(ra) # 7948 <__lshift>
    6730:	00012783          	lw	a5,0(sp)
    6734:	00812703          	lw	a4,8(sp)
    6738:	00090b13          	mv	s6,s2
    673c:	00178c13          	addi	s8,a5,1
    6740:	00e787b3          	add	a5,a5,a4
    6744:	00f12623          	sw	a5,12(sp)
    6748:	001a7793          	andi	a5,s4,1
    674c:	00050913          	mv	s2,a0
    6750:	00f12423          	sw	a5,8(sp)
    6754:	000a8593          	mv	a1,s5
    6758:	00098513          	mv	a0,s3
    675c:	fffff097          	auipc	ra,0xfffff
    6760:	d98080e7          	jalr	-616(ra) # 54f4 <quorem>
    6764:	000b0593          	mv	a1,s6
    6768:	00050d13          	mv	s10,a0
    676c:	03050d93          	addi	s11,a0,48
    6770:	00098513          	mv	a0,s3
    6774:	00001097          	auipc	ra,0x1
    6778:	318080e7          	jalr	792(ra) # 7a8c <__mcmp>
    677c:	00090613          	mv	a2,s2
    6780:	00050b93          	mv	s7,a0
    6784:	000a8593          	mv	a1,s5
    6788:	00048513          	mv	a0,s1
    678c:	00001097          	auipc	ra,0x1
    6790:	354080e7          	jalr	852(ra) # 7ae0 <__mdiff>
    6794:	00c52603          	lw	a2,12(a0)
    6798:	fffc0c93          	addi	s9,s8,-1
    679c:	00050a13          	mv	s4,a0
    67a0:	00100713          	li	a4,1
    67a4:	00061c63          	bnez	a2,67bc <_dtoa_r+0x10fc>
    67a8:	00050593          	mv	a1,a0
    67ac:	00098513          	mv	a0,s3
    67b0:	00001097          	auipc	ra,0x1
    67b4:	2dc080e7          	jalr	732(ra) # 7a8c <__mcmp>
    67b8:	00050713          	mv	a4,a0
    67bc:	000a0593          	mv	a1,s4
    67c0:	00048513          	mv	a0,s1
    67c4:	00e12823          	sw	a4,16(sp)
    67c8:	00001097          	auipc	ra,0x1
    67cc:	bac080e7          	jalr	-1108(ra) # 7374 <_Bfree>
    67d0:	00412783          	lw	a5,4(sp)
    67d4:	01012703          	lw	a4,16(sp)
    67d8:	000c0a13          	mv	s4,s8
    67dc:	00e7e6b3          	or	a3,a5,a4
    67e0:	00812783          	lw	a5,8(sp)
    67e4:	00f6e6b3          	or	a3,a3,a5
    67e8:	00069e63          	bnez	a3,6804 <_dtoa_r+0x1144>
    67ec:	03900713          	li	a4,57
    67f0:	06ed8663          	beq	s11,a4,685c <_dtoa_r+0x119c>
    67f4:	01705463          	blez	s7,67fc <_dtoa_r+0x113c>
    67f8:	031d0d93          	addi	s11,s10,49
    67fc:	01bc8023          	sb	s11,0(s9)
    6800:	e61ff06f          	j	6660 <_dtoa_r+0xfa0>
    6804:	000bcc63          	bltz	s7,681c <_dtoa_r+0x115c>
    6808:	00412783          	lw	a5,4(sp)
    680c:	0177ebb3          	or	s7,a5,s7
    6810:	00812783          	lw	a5,8(sp)
    6814:	00fbebb3          	or	s7,s7,a5
    6818:	060b9263          	bnez	s7,687c <_dtoa_r+0x11bc>
    681c:	fee050e3          	blez	a4,67fc <_dtoa_r+0x113c>
    6820:	00098593          	mv	a1,s3
    6824:	00100613          	li	a2,1
    6828:	00048513          	mv	a0,s1
    682c:	00001097          	auipc	ra,0x1
    6830:	11c080e7          	jalr	284(ra) # 7948 <__lshift>
    6834:	000a8593          	mv	a1,s5
    6838:	00050993          	mv	s3,a0
    683c:	00001097          	auipc	ra,0x1
    6840:	250080e7          	jalr	592(ra) # 7a8c <__mcmp>
    6844:	00a04863          	bgtz	a0,6854 <_dtoa_r+0x1194>
    6848:	fa051ae3          	bnez	a0,67fc <_dtoa_r+0x113c>
    684c:	001df713          	andi	a4,s11,1
    6850:	fa0706e3          	beqz	a4,67fc <_dtoa_r+0x113c>
    6854:	03900713          	li	a4,57
    6858:	faed90e3          	bne	s11,a4,67f8 <_dtoa_r+0x1138>
    685c:	03900793          	li	a5,57
    6860:	00fc8023          	sb	a5,0(s9)
    6864:	03900693          	li	a3,57
    6868:	fffa4783          	lbu	a5,-1(s4)
    686c:	fffa0713          	addi	a4,s4,-1
    6870:	0ed78a63          	beq	a5,a3,6964 <_dtoa_r+0x12a4>
    6874:	00178793          	addi	a5,a5,1
    6878:	1000006f          	j	6978 <_dtoa_r+0x12b8>
    687c:	00e05c63          	blez	a4,6894 <_dtoa_r+0x11d4>
    6880:	03900713          	li	a4,57
    6884:	fced8ce3          	beq	s11,a4,685c <_dtoa_r+0x119c>
    6888:	001d8793          	addi	a5,s11,1
    688c:	00fc8023          	sb	a5,0(s9)
    6890:	dd1ff06f          	j	6660 <_dtoa_r+0xfa0>
    6894:	00c12783          	lw	a5,12(sp)
    6898:	ffbc0fa3          	sb	s11,-1(s8)
    689c:	07878e63          	beq	a5,s8,6918 <_dtoa_r+0x1258>
    68a0:	00098593          	mv	a1,s3
    68a4:	00000693          	li	a3,0
    68a8:	00a00613          	li	a2,10
    68ac:	00048513          	mv	a0,s1
    68b0:	00001097          	auipc	ra,0x1
    68b4:	b38080e7          	jalr	-1224(ra) # 73e8 <__multadd>
    68b8:	00050993          	mv	s3,a0
    68bc:	00000693          	li	a3,0
    68c0:	00a00613          	li	a2,10
    68c4:	000b0593          	mv	a1,s6
    68c8:	00048513          	mv	a0,s1
    68cc:	012b1e63          	bne	s6,s2,68e8 <_dtoa_r+0x1228>
    68d0:	00001097          	auipc	ra,0x1
    68d4:	b18080e7          	jalr	-1256(ra) # 73e8 <__multadd>
    68d8:	00050b13          	mv	s6,a0
    68dc:	00050913          	mv	s2,a0
    68e0:	001c0c13          	addi	s8,s8,1
    68e4:	e71ff06f          	j	6754 <_dtoa_r+0x1094>
    68e8:	00001097          	auipc	ra,0x1
    68ec:	b00080e7          	jalr	-1280(ra) # 73e8 <__multadd>
    68f0:	00090593          	mv	a1,s2
    68f4:	00050b13          	mv	s6,a0
    68f8:	00000693          	li	a3,0
    68fc:	00a00613          	li	a2,10
    6900:	00048513          	mv	a0,s1
    6904:	00001097          	auipc	ra,0x1
    6908:	ae4080e7          	jalr	-1308(ra) # 73e8 <__multadd>
    690c:	00050913          	mv	s2,a0
    6910:	fd1ff06f          	j	68e0 <_dtoa_r+0x1220>
    6914:	00000b13          	li	s6,0
    6918:	00098593          	mv	a1,s3
    691c:	00100613          	li	a2,1
    6920:	00048513          	mv	a0,s1
    6924:	00001097          	auipc	ra,0x1
    6928:	024080e7          	jalr	36(ra) # 7948 <__lshift>
    692c:	000a8593          	mv	a1,s5
    6930:	00050993          	mv	s3,a0
    6934:	00001097          	auipc	ra,0x1
    6938:	158080e7          	jalr	344(ra) # 7a8c <__mcmp>
    693c:	f2a044e3          	bgtz	a0,6864 <_dtoa_r+0x11a4>
    6940:	00051663          	bnez	a0,694c <_dtoa_r+0x128c>
    6944:	001df793          	andi	a5,s11,1
    6948:	f0079ee3          	bnez	a5,6864 <_dtoa_r+0x11a4>
    694c:	03000793          	li	a5,48
    6950:	fffa4703          	lbu	a4,-1(s4)
    6954:	fffa0693          	addi	a3,s4,-1
    6958:	d0f714e3          	bne	a4,a5,6660 <_dtoa_r+0xfa0>
    695c:	00068a13          	mv	s4,a3
    6960:	ff1ff06f          	j	6950 <_dtoa_r+0x1290>
    6964:	00012783          	lw	a5,0(sp)
    6968:	00e79c63          	bne	a5,a4,6980 <_dtoa_r+0x12c0>
    696c:	00012703          	lw	a4,0(sp)
    6970:	00140413          	addi	s0,s0,1
    6974:	03100793          	li	a5,49
    6978:	00f70023          	sb	a5,0(a4)
    697c:	ce5ff06f          	j	6660 <_dtoa_r+0xfa0>
    6980:	00070a13          	mv	s4,a4
    6984:	ee5ff06f          	j	6868 <_dtoa_r+0x11a8>
    6988:	01412703          	lw	a4,20(sp)
    698c:	00ffa797          	auipc	a5,0xffa
    6990:	d7478793          	addi	a5,a5,-652 # 1000700 <__clz_tab+0x184>
    6994:	00f12023          	sw	a5,0(sp)
    6998:	00ffa797          	auipc	a5,0xffa
    699c:	d7078793          	addi	a5,a5,-656 # 1000708 <__clz_tab+0x18c>
    69a0:	00070463          	beqz	a4,69a8 <_dtoa_r+0x12e8>
    69a4:	e51fe06f          	j	57f4 <_dtoa_r+0x134>
    69a8:	e55fe06f          	j	57fc <_dtoa_r+0x13c>
    69ac:	00812783          	lw	a5,8(sp)
    69b0:	00f04863          	bgtz	a5,69c0 <_dtoa_r+0x1300>
    69b4:	00412703          	lw	a4,4(sp)
    69b8:	00200793          	li	a5,2
    69bc:	c4e7cee3          	blt	a5,a4,6618 <_dtoa_r+0xf58>
    69c0:	00012a03          	lw	s4,0(sp)
    69c4:	000a8593          	mv	a1,s5
    69c8:	00098513          	mv	a0,s3
    69cc:	fffff097          	auipc	ra,0xfffff
    69d0:	b28080e7          	jalr	-1240(ra) # 54f4 <quorem>
    69d4:	00012783          	lw	a5,0(sp)
    69d8:	001a0a13          	addi	s4,s4,1
    69dc:	03050d93          	addi	s11,a0,48
    69e0:	40fa0733          	sub	a4,s4,a5
    69e4:	00812783          	lw	a5,8(sp)
    69e8:	ffba0fa3          	sb	s11,-1(s4)
    69ec:	f2f754e3          	bge	a4,a5,6914 <_dtoa_r+0x1254>
    69f0:	00098593          	mv	a1,s3
    69f4:	00000693          	li	a3,0
    69f8:	00a00613          	li	a2,10
    69fc:	00048513          	mv	a0,s1
    6a00:	00001097          	auipc	ra,0x1
    6a04:	9e8080e7          	jalr	-1560(ra) # 73e8 <__multadd>
    6a08:	00050993          	mv	s3,a0
    6a0c:	fb9ff06f          	j	69c4 <_dtoa_r+0x1304>

00006a10 <__sflush_r>:
    6a10:	00c5d783          	lhu	a5,12(a1) # 7ff0000c <__freertos_irq_stack_top+0x7eef000c>
    6a14:	fe010113          	addi	sp,sp,-32
    6a18:	00812c23          	sw	s0,24(sp)
    6a1c:	00912a23          	sw	s1,20(sp)
    6a20:	00112e23          	sw	ra,28(sp)
    6a24:	01212823          	sw	s2,16(sp)
    6a28:	01312623          	sw	s3,12(sp)
    6a2c:	0087f713          	andi	a4,a5,8
    6a30:	00050493          	mv	s1,a0
    6a34:	00058413          	mv	s0,a1
    6a38:	16071063          	bnez	a4,6b98 <__sflush_r+0x188>
    6a3c:	0045a703          	lw	a4,4(a1)
    6a40:	00e04a63          	bgtz	a4,6a54 <__sflush_r+0x44>
    6a44:	0405a703          	lw	a4,64(a1)
    6a48:	00e04663          	bgtz	a4,6a54 <__sflush_r+0x44>
    6a4c:	00000513          	li	a0,0
    6a50:	1200006f          	j	6b70 <__sflush_r+0x160>
    6a54:	02c42703          	lw	a4,44(s0)
    6a58:	fe070ae3          	beqz	a4,6a4c <__sflush_r+0x3c>
    6a5c:	0004a903          	lw	s2,0(s1)
    6a60:	01379693          	slli	a3,a5,0x13
    6a64:	0004a023          	sw	zero,0(s1)
    6a68:	0c06d063          	bgez	a3,6b28 <__sflush_r+0x118>
    6a6c:	05442503          	lw	a0,84(s0)
    6a70:	00c45783          	lhu	a5,12(s0)
    6a74:	0047f793          	andi	a5,a5,4
    6a78:	00078e63          	beqz	a5,6a94 <__sflush_r+0x84>
    6a7c:	00442783          	lw	a5,4(s0)
    6a80:	40f50533          	sub	a0,a0,a5
    6a84:	03442783          	lw	a5,52(s0)
    6a88:	00078663          	beqz	a5,6a94 <__sflush_r+0x84>
    6a8c:	04042783          	lw	a5,64(s0)
    6a90:	40f50533          	sub	a0,a0,a5
    6a94:	02c42783          	lw	a5,44(s0)
    6a98:	02042583          	lw	a1,32(s0)
    6a9c:	00050613          	mv	a2,a0
    6aa0:	00000693          	li	a3,0
    6aa4:	00048513          	mv	a0,s1
    6aa8:	000780e7          	jalr	a5
    6aac:	fff00793          	li	a5,-1
    6ab0:	00c45703          	lhu	a4,12(s0)
    6ab4:	02f51263          	bne	a0,a5,6ad8 <__sflush_r+0xc8>
    6ab8:	0004a683          	lw	a3,0(s1)
    6abc:	01d00793          	li	a5,29
    6ac0:	0cd7e663          	bltu	a5,a3,6b8c <__sflush_r+0x17c>
    6ac4:	204007b7          	lui	a5,0x20400
    6ac8:	00178793          	addi	a5,a5,1 # 20400001 <__freertos_irq_stack_top+0x1f3f0001>
    6acc:	00d7d7b3          	srl	a5,a5,a3
    6ad0:	0017f793          	andi	a5,a5,1
    6ad4:	0a078c63          	beqz	a5,6b8c <__sflush_r+0x17c>
    6ad8:	01042783          	lw	a5,16(s0)
    6adc:	00042223          	sw	zero,4(s0)
    6ae0:	00f42023          	sw	a5,0(s0)
    6ae4:	01371793          	slli	a5,a4,0x13
    6ae8:	0007dc63          	bgez	a5,6b00 <__sflush_r+0xf0>
    6aec:	fff00793          	li	a5,-1
    6af0:	00f51663          	bne	a0,a5,6afc <__sflush_r+0xec>
    6af4:	0004a783          	lw	a5,0(s1)
    6af8:	00079463          	bnez	a5,6b00 <__sflush_r+0xf0>
    6afc:	04a42a23          	sw	a0,84(s0)
    6b00:	03442583          	lw	a1,52(s0)
    6b04:	0124a023          	sw	s2,0(s1)
    6b08:	f40582e3          	beqz	a1,6a4c <__sflush_r+0x3c>
    6b0c:	04440793          	addi	a5,s0,68
    6b10:	00f58863          	beq	a1,a5,6b20 <__sflush_r+0x110>
    6b14:	00048513          	mv	a0,s1
    6b18:	00001097          	auipc	ra,0x1
    6b1c:	2dc080e7          	jalr	732(ra) # 7df4 <_free_r>
    6b20:	02042a23          	sw	zero,52(s0)
    6b24:	f29ff06f          	j	6a4c <__sflush_r+0x3c>
    6b28:	02042583          	lw	a1,32(s0)
    6b2c:	00100693          	li	a3,1
    6b30:	00000613          	li	a2,0
    6b34:	00048513          	mv	a0,s1
    6b38:	000700e7          	jalr	a4
    6b3c:	fff00793          	li	a5,-1
    6b40:	f2f518e3          	bne	a0,a5,6a70 <__sflush_r+0x60>
    6b44:	0004a783          	lw	a5,0(s1)
    6b48:	f20784e3          	beqz	a5,6a70 <__sflush_r+0x60>
    6b4c:	01d00713          	li	a4,29
    6b50:	00e78663          	beq	a5,a4,6b5c <__sflush_r+0x14c>
    6b54:	01600713          	li	a4,22
    6b58:	00e79663          	bne	a5,a4,6b64 <__sflush_r+0x154>
    6b5c:	0124a023          	sw	s2,0(s1)
    6b60:	eedff06f          	j	6a4c <__sflush_r+0x3c>
    6b64:	00c45783          	lhu	a5,12(s0)
    6b68:	0407e793          	ori	a5,a5,64
    6b6c:	00f41623          	sh	a5,12(s0)
    6b70:	01c12083          	lw	ra,28(sp)
    6b74:	01812403          	lw	s0,24(sp)
    6b78:	01412483          	lw	s1,20(sp)
    6b7c:	01012903          	lw	s2,16(sp)
    6b80:	00c12983          	lw	s3,12(sp)
    6b84:	02010113          	addi	sp,sp,32
    6b88:	00008067          	ret
    6b8c:	04076713          	ori	a4,a4,64
    6b90:	00e41623          	sh	a4,12(s0)
    6b94:	fddff06f          	j	6b70 <__sflush_r+0x160>
    6b98:	0105a983          	lw	s3,16(a1)
    6b9c:	ea0988e3          	beqz	s3,6a4c <__sflush_r+0x3c>
    6ba0:	0005a903          	lw	s2,0(a1)
    6ba4:	0037f793          	andi	a5,a5,3
    6ba8:	0135a023          	sw	s3,0(a1)
    6bac:	41390933          	sub	s2,s2,s3
    6bb0:	00000713          	li	a4,0
    6bb4:	00079463          	bnez	a5,6bbc <__sflush_r+0x1ac>
    6bb8:	0145a703          	lw	a4,20(a1)
    6bbc:	00e42423          	sw	a4,8(s0)
    6bc0:	e92056e3          	blez	s2,6a4c <__sflush_r+0x3c>
    6bc4:	02842783          	lw	a5,40(s0)
    6bc8:	02042583          	lw	a1,32(s0)
    6bcc:	00090693          	mv	a3,s2
    6bd0:	00098613          	mv	a2,s3
    6bd4:	00048513          	mv	a0,s1
    6bd8:	000780e7          	jalr	a5
    6bdc:	00a04c63          	bgtz	a0,6bf4 <__sflush_r+0x1e4>
    6be0:	00c45783          	lhu	a5,12(s0)
    6be4:	fff00513          	li	a0,-1
    6be8:	0407e793          	ori	a5,a5,64
    6bec:	00f41623          	sh	a5,12(s0)
    6bf0:	f81ff06f          	j	6b70 <__sflush_r+0x160>
    6bf4:	00a989b3          	add	s3,s3,a0
    6bf8:	40a90933          	sub	s2,s2,a0
    6bfc:	fc5ff06f          	j	6bc0 <__sflush_r+0x1b0>

00006c00 <_fflush_r>:
    6c00:	0105a783          	lw	a5,16(a1)
    6c04:	08078e63          	beqz	a5,6ca0 <_fflush_r+0xa0>
    6c08:	fe010113          	addi	sp,sp,-32
    6c0c:	00812c23          	sw	s0,24(sp)
    6c10:	00112e23          	sw	ra,28(sp)
    6c14:	00050413          	mv	s0,a0
    6c18:	00050e63          	beqz	a0,6c34 <_fflush_r+0x34>
    6c1c:	01852783          	lw	a5,24(a0)
    6c20:	00079a63          	bnez	a5,6c34 <_fflush_r+0x34>
    6c24:	00b12623          	sw	a1,12(sp)
    6c28:	00000097          	auipc	ra,0x0
    6c2c:	190080e7          	jalr	400(ra) # 6db8 <__sinit>
    6c30:	00c12583          	lw	a1,12(sp)
    6c34:	00ffa797          	auipc	a5,0xffa
    6c38:	afc78793          	addi	a5,a5,-1284 # 1000730 <__sf_fake_stdin>
    6c3c:	02f59463          	bne	a1,a5,6c64 <_fflush_r+0x64>
    6c40:	00442583          	lw	a1,4(s0)
    6c44:	00c59783          	lh	a5,12(a1)
    6c48:	04078263          	beqz	a5,6c8c <_fflush_r+0x8c>
    6c4c:	00040513          	mv	a0,s0
    6c50:	01812403          	lw	s0,24(sp)
    6c54:	01c12083          	lw	ra,28(sp)
    6c58:	02010113          	addi	sp,sp,32
    6c5c:	00000317          	auipc	t1,0x0
    6c60:	db430067          	jr	-588(t1) # 6a10 <__sflush_r>
    6c64:	00ffa797          	auipc	a5,0xffa
    6c68:	aec78793          	addi	a5,a5,-1300 # 1000750 <__sf_fake_stdout>
    6c6c:	00f59663          	bne	a1,a5,6c78 <_fflush_r+0x78>
    6c70:	00842583          	lw	a1,8(s0)
    6c74:	fd1ff06f          	j	6c44 <_fflush_r+0x44>
    6c78:	00ffa797          	auipc	a5,0xffa
    6c7c:	a9878793          	addi	a5,a5,-1384 # 1000710 <__sf_fake_stderr>
    6c80:	fcf592e3          	bne	a1,a5,6c44 <_fflush_r+0x44>
    6c84:	00c42583          	lw	a1,12(s0)
    6c88:	fbdff06f          	j	6c44 <_fflush_r+0x44>
    6c8c:	01c12083          	lw	ra,28(sp)
    6c90:	01812403          	lw	s0,24(sp)
    6c94:	00000513          	li	a0,0
    6c98:	02010113          	addi	sp,sp,32
    6c9c:	00008067          	ret
    6ca0:	00000513          	li	a0,0
    6ca4:	00008067          	ret

00006ca8 <std>:
    6ca8:	ff010113          	addi	sp,sp,-16
    6cac:	00812423          	sw	s0,8(sp)
    6cb0:	00112623          	sw	ra,12(sp)
    6cb4:	00050413          	mv	s0,a0
    6cb8:	00b51623          	sh	a1,12(a0)
    6cbc:	00c51723          	sh	a2,14(a0)
    6cc0:	00052023          	sw	zero,0(a0)
    6cc4:	00052223          	sw	zero,4(a0)
    6cc8:	00052423          	sw	zero,8(a0)
    6ccc:	06052223          	sw	zero,100(a0)
    6cd0:	00052823          	sw	zero,16(a0)
    6cd4:	00052a23          	sw	zero,20(a0)
    6cd8:	00052c23          	sw	zero,24(a0)
    6cdc:	00800613          	li	a2,8
    6ce0:	00000593          	li	a1,0
    6ce4:	05c50513          	addi	a0,a0,92
    6ce8:	ffffd097          	auipc	ra,0xffffd
    6cec:	280080e7          	jalr	640(ra) # 3f68 <memset>
    6cf0:	00002797          	auipc	a5,0x2
    6cf4:	87878793          	addi	a5,a5,-1928 # 8568 <__sread>
    6cf8:	02f42223          	sw	a5,36(s0)
    6cfc:	00002797          	auipc	a5,0x2
    6d00:	8c078793          	addi	a5,a5,-1856 # 85bc <__swrite>
    6d04:	02f42423          	sw	a5,40(s0)
    6d08:	00002797          	auipc	a5,0x2
    6d0c:	94078793          	addi	a5,a5,-1728 # 8648 <__sseek>
    6d10:	02f42623          	sw	a5,44(s0)
    6d14:	00002797          	auipc	a5,0x2
    6d18:	99078793          	addi	a5,a5,-1648 # 86a4 <__sclose>
    6d1c:	02842023          	sw	s0,32(s0)
    6d20:	02f42823          	sw	a5,48(s0)
    6d24:	00c12083          	lw	ra,12(sp)
    6d28:	00812403          	lw	s0,8(sp)
    6d2c:	01010113          	addi	sp,sp,16
    6d30:	00008067          	ret

00006d34 <_cleanup_r>:
    6d34:	00000597          	auipc	a1,0x0
    6d38:	ecc58593          	addi	a1,a1,-308 # 6c00 <_fflush_r>
    6d3c:	00000317          	auipc	t1,0x0
    6d40:	24430067          	jr	580(t1) # 6f80 <_fwalk_reent>

00006d44 <__sfmoreglue>:
    6d44:	ff010113          	addi	sp,sp,-16
    6d48:	00912223          	sw	s1,4(sp)
    6d4c:	06800613          	li	a2,104
    6d50:	fff58493          	addi	s1,a1,-1
    6d54:	02c484b3          	mul	s1,s1,a2
    6d58:	01212023          	sw	s2,0(sp)
    6d5c:	00058913          	mv	s2,a1
    6d60:	00812423          	sw	s0,8(sp)
    6d64:	00112623          	sw	ra,12(sp)
    6d68:	07448593          	addi	a1,s1,116
    6d6c:	00001097          	auipc	ra,0x1
    6d70:	19c080e7          	jalr	412(ra) # 7f08 <_malloc_r>
    6d74:	00050413          	mv	s0,a0
    6d78:	02050263          	beqz	a0,6d9c <__sfmoreglue+0x58>
    6d7c:	00052023          	sw	zero,0(a0)
    6d80:	01252223          	sw	s2,4(a0)
    6d84:	00c50513          	addi	a0,a0,12
    6d88:	00a42423          	sw	a0,8(s0)
    6d8c:	06848613          	addi	a2,s1,104
    6d90:	00000593          	li	a1,0
    6d94:	ffffd097          	auipc	ra,0xffffd
    6d98:	1d4080e7          	jalr	468(ra) # 3f68 <memset>
    6d9c:	00040513          	mv	a0,s0
    6da0:	00c12083          	lw	ra,12(sp)
    6da4:	00812403          	lw	s0,8(sp)
    6da8:	00412483          	lw	s1,4(sp)
    6dac:	00012903          	lw	s2,0(sp)
    6db0:	01010113          	addi	sp,sp,16
    6db4:	00008067          	ret

00006db8 <__sinit>:
    6db8:	01852783          	lw	a5,24(a0)
    6dbc:	0c079263          	bnez	a5,6e80 <__sinit+0xc8>
    6dc0:	ff010113          	addi	sp,sp,-16
    6dc4:	00112623          	sw	ra,12(sp)
    6dc8:	00812423          	sw	s0,8(sp)
    6dcc:	00000797          	auipc	a5,0x0
    6dd0:	f6878793          	addi	a5,a5,-152 # 6d34 <_cleanup_r>
    6dd4:	02f52423          	sw	a5,40(a0)
    6dd8:	00004797          	auipc	a5,0x4
    6ddc:	83c78793          	addi	a5,a5,-1988 # a614 <_global_impure_ptr>
    6de0:	0007a783          	lw	a5,0(a5)
    6de4:	04052423          	sw	zero,72(a0)
    6de8:	04052623          	sw	zero,76(a0)
    6dec:	04052823          	sw	zero,80(a0)
    6df0:	00f51663          	bne	a0,a5,6dfc <__sinit+0x44>
    6df4:	00100793          	li	a5,1
    6df8:	00f52c23          	sw	a5,24(a0)
    6dfc:	00050413          	mv	s0,a0
    6e00:	00000097          	auipc	ra,0x0
    6e04:	084080e7          	jalr	132(ra) # 6e84 <__sfp>
    6e08:	00a42223          	sw	a0,4(s0)
    6e0c:	00040513          	mv	a0,s0
    6e10:	00000097          	auipc	ra,0x0
    6e14:	074080e7          	jalr	116(ra) # 6e84 <__sfp>
    6e18:	00a42423          	sw	a0,8(s0)
    6e1c:	00040513          	mv	a0,s0
    6e20:	00000097          	auipc	ra,0x0
    6e24:	064080e7          	jalr	100(ra) # 6e84 <__sfp>
    6e28:	00a42623          	sw	a0,12(s0)
    6e2c:	00442503          	lw	a0,4(s0)
    6e30:	00000613          	li	a2,0
    6e34:	00400593          	li	a1,4
    6e38:	00000097          	auipc	ra,0x0
    6e3c:	e70080e7          	jalr	-400(ra) # 6ca8 <std>
    6e40:	00842503          	lw	a0,8(s0)
    6e44:	00100613          	li	a2,1
    6e48:	00900593          	li	a1,9
    6e4c:	00000097          	auipc	ra,0x0
    6e50:	e5c080e7          	jalr	-420(ra) # 6ca8 <std>
    6e54:	00c42503          	lw	a0,12(s0)
    6e58:	00200613          	li	a2,2
    6e5c:	01200593          	li	a1,18
    6e60:	00000097          	auipc	ra,0x0
    6e64:	e48080e7          	jalr	-440(ra) # 6ca8 <std>
    6e68:	00100793          	li	a5,1
    6e6c:	00f42c23          	sw	a5,24(s0)
    6e70:	00c12083          	lw	ra,12(sp)
    6e74:	00812403          	lw	s0,8(sp)
    6e78:	01010113          	addi	sp,sp,16
    6e7c:	00008067          	ret
    6e80:	00008067          	ret

00006e84 <__sfp>:
    6e84:	ff010113          	addi	sp,sp,-16
    6e88:	00003797          	auipc	a5,0x3
    6e8c:	78c78793          	addi	a5,a5,1932 # a614 <_global_impure_ptr>
    6e90:	00912223          	sw	s1,4(sp)
    6e94:	0007a483          	lw	s1,0(a5)
    6e98:	01212023          	sw	s2,0(sp)
    6e9c:	00112623          	sw	ra,12(sp)
    6ea0:	0184a783          	lw	a5,24(s1)
    6ea4:	00812423          	sw	s0,8(sp)
    6ea8:	00050913          	mv	s2,a0
    6eac:	00079863          	bnez	a5,6ebc <__sfp+0x38>
    6eb0:	00048513          	mv	a0,s1
    6eb4:	00000097          	auipc	ra,0x0
    6eb8:	f04080e7          	jalr	-252(ra) # 6db8 <__sinit>
    6ebc:	04848493          	addi	s1,s1,72
    6ec0:	0084a403          	lw	s0,8(s1)
    6ec4:	0044a783          	lw	a5,4(s1)
    6ec8:	fff78793          	addi	a5,a5,-1
    6ecc:	0007da63          	bgez	a5,6ee0 <__sfp+0x5c>
    6ed0:	0004a783          	lw	a5,0(s1)
    6ed4:	08078263          	beqz	a5,6f58 <__sfp+0xd4>
    6ed8:	0004a483          	lw	s1,0(s1)
    6edc:	fe5ff06f          	j	6ec0 <__sfp+0x3c>
    6ee0:	00c41703          	lh	a4,12(s0)
    6ee4:	06071663          	bnez	a4,6f50 <__sfp+0xcc>
    6ee8:	ffff07b7          	lui	a5,0xffff0
    6eec:	00178793          	addi	a5,a5,1 # ffff0001 <__freertos_irq_stack_top+0xfefe0001>
    6ef0:	06042223          	sw	zero,100(s0)
    6ef4:	00042023          	sw	zero,0(s0)
    6ef8:	00042223          	sw	zero,4(s0)
    6efc:	00042423          	sw	zero,8(s0)
    6f00:	00f42623          	sw	a5,12(s0)
    6f04:	00042823          	sw	zero,16(s0)
    6f08:	00042a23          	sw	zero,20(s0)
    6f0c:	00042c23          	sw	zero,24(s0)
    6f10:	00800613          	li	a2,8
    6f14:	00000593          	li	a1,0
    6f18:	05c40513          	addi	a0,s0,92
    6f1c:	ffffd097          	auipc	ra,0xffffd
    6f20:	04c080e7          	jalr	76(ra) # 3f68 <memset>
    6f24:	02042a23          	sw	zero,52(s0)
    6f28:	02042c23          	sw	zero,56(s0)
    6f2c:	04042423          	sw	zero,72(s0)
    6f30:	04042623          	sw	zero,76(s0)
    6f34:	00040513          	mv	a0,s0
    6f38:	00c12083          	lw	ra,12(sp)
    6f3c:	00812403          	lw	s0,8(sp)
    6f40:	00412483          	lw	s1,4(sp)
    6f44:	00012903          	lw	s2,0(sp)
    6f48:	01010113          	addi	sp,sp,16
    6f4c:	00008067          	ret
    6f50:	06840413          	addi	s0,s0,104
    6f54:	f75ff06f          	j	6ec8 <__sfp+0x44>
    6f58:	00400593          	li	a1,4
    6f5c:	00090513          	mv	a0,s2
    6f60:	00000097          	auipc	ra,0x0
    6f64:	de4080e7          	jalr	-540(ra) # 6d44 <__sfmoreglue>
    6f68:	00a4a023          	sw	a0,0(s1)
    6f6c:	00050413          	mv	s0,a0
    6f70:	f60514e3          	bnez	a0,6ed8 <__sfp+0x54>
    6f74:	00c00793          	li	a5,12
    6f78:	00f92023          	sw	a5,0(s2)
    6f7c:	fb9ff06f          	j	6f34 <__sfp+0xb0>

00006f80 <_fwalk_reent>:
    6f80:	fd010113          	addi	sp,sp,-48
    6f84:	02812423          	sw	s0,40(sp)
    6f88:	03212023          	sw	s2,32(sp)
    6f8c:	01412c23          	sw	s4,24(sp)
    6f90:	01512a23          	sw	s5,20(sp)
    6f94:	01612823          	sw	s6,16(sp)
    6f98:	01712623          	sw	s7,12(sp)
    6f9c:	02112623          	sw	ra,44(sp)
    6fa0:	02912223          	sw	s1,36(sp)
    6fa4:	01312e23          	sw	s3,28(sp)
    6fa8:	00050a13          	mv	s4,a0
    6fac:	00058a93          	mv	s5,a1
    6fb0:	04850413          	addi	s0,a0,72
    6fb4:	00000913          	li	s2,0
    6fb8:	00100b13          	li	s6,1
    6fbc:	fff00b93          	li	s7,-1
    6fc0:	02041a63          	bnez	s0,6ff4 <_fwalk_reent+0x74>
    6fc4:	02c12083          	lw	ra,44(sp)
    6fc8:	02812403          	lw	s0,40(sp)
    6fcc:	00090513          	mv	a0,s2
    6fd0:	02412483          	lw	s1,36(sp)
    6fd4:	02012903          	lw	s2,32(sp)
    6fd8:	01c12983          	lw	s3,28(sp)
    6fdc:	01812a03          	lw	s4,24(sp)
    6fe0:	01412a83          	lw	s5,20(sp)
    6fe4:	01012b03          	lw	s6,16(sp)
    6fe8:	00c12b83          	lw	s7,12(sp)
    6fec:	03010113          	addi	sp,sp,48
    6ff0:	00008067          	ret
    6ff4:	00842483          	lw	s1,8(s0)
    6ff8:	00442983          	lw	s3,4(s0)
    6ffc:	fff98993          	addi	s3,s3,-1
    7000:	0009d663          	bgez	s3,700c <_fwalk_reent+0x8c>
    7004:	00042403          	lw	s0,0(s0)
    7008:	fb9ff06f          	j	6fc0 <_fwalk_reent+0x40>
    700c:	00c4d783          	lhu	a5,12(s1)
    7010:	00fb7e63          	bgeu	s6,a5,702c <_fwalk_reent+0xac>
    7014:	00e49783          	lh	a5,14(s1)
    7018:	01778a63          	beq	a5,s7,702c <_fwalk_reent+0xac>
    701c:	00048593          	mv	a1,s1
    7020:	000a0513          	mv	a0,s4
    7024:	000a80e7          	jalr	s5
    7028:	00a96933          	or	s2,s2,a0
    702c:	06848493          	addi	s1,s1,104
    7030:	fcdff06f          	j	6ffc <_fwalk_reent+0x7c>

00007034 <_localeconv_r>:
    7034:	00ffa517          	auipc	a0,0xffa
    7038:	af050513          	addi	a0,a0,-1296 # 1000b24 <__global_locale+0xf0>
    703c:	00008067          	ret

00007040 <__swhatbuf_r>:
    7040:	f8010113          	addi	sp,sp,-128
    7044:	06912a23          	sw	s1,116(sp)
    7048:	00058493          	mv	s1,a1
    704c:	00e59583          	lh	a1,14(a1)
    7050:	06812c23          	sw	s0,120(sp)
    7054:	06112e23          	sw	ra,124(sp)
    7058:	00060413          	mv	s0,a2
    705c:	0005de63          	bgez	a1,7078 <__swhatbuf_r+0x38>
    7060:	00c4d783          	lhu	a5,12(s1)
    7064:	0006a023          	sw	zero,0(a3)
    7068:	0807f793          	andi	a5,a5,128
    706c:	04079263          	bnez	a5,70b0 <__swhatbuf_r+0x70>
    7070:	40000793          	li	a5,1024
    7074:	0400006f          	j	70b4 <__swhatbuf_r+0x74>
    7078:	01810613          	addi	a2,sp,24
    707c:	00d12623          	sw	a3,12(sp)
    7080:	00001097          	auipc	ra,0x1
    7084:	708080e7          	jalr	1800(ra) # 8788 <_fstat_r>
    7088:	00c12683          	lw	a3,12(sp)
    708c:	fc054ae3          	bltz	a0,7060 <__swhatbuf_r+0x20>
    7090:	01c12703          	lw	a4,28(sp)
    7094:	0000f7b7          	lui	a5,0xf
    7098:	00e7f7b3          	and	a5,a5,a4
    709c:	ffffe737          	lui	a4,0xffffe
    70a0:	00e787b3          	add	a5,a5,a4
    70a4:	0017b793          	seqz	a5,a5
    70a8:	00f6a023          	sw	a5,0(a3)
    70ac:	fc5ff06f          	j	7070 <__swhatbuf_r+0x30>
    70b0:	04000793          	li	a5,64
    70b4:	00f42023          	sw	a5,0(s0)
    70b8:	07c12083          	lw	ra,124(sp)
    70bc:	07812403          	lw	s0,120(sp)
    70c0:	07412483          	lw	s1,116(sp)
    70c4:	00000513          	li	a0,0
    70c8:	08010113          	addi	sp,sp,128
    70cc:	00008067          	ret

000070d0 <__smakebuf_r>:
    70d0:	00c5d783          	lhu	a5,12(a1)
    70d4:	fe010113          	addi	sp,sp,-32
    70d8:	00812c23          	sw	s0,24(sp)
    70dc:	00112e23          	sw	ra,28(sp)
    70e0:	00912a23          	sw	s1,20(sp)
    70e4:	01212823          	sw	s2,16(sp)
    70e8:	0027f793          	andi	a5,a5,2
    70ec:	00058413          	mv	s0,a1
    70f0:	02078863          	beqz	a5,7120 <__smakebuf_r+0x50>
    70f4:	04740793          	addi	a5,s0,71
    70f8:	00f42023          	sw	a5,0(s0)
    70fc:	00f42823          	sw	a5,16(s0)
    7100:	00100793          	li	a5,1
    7104:	00f42a23          	sw	a5,20(s0)
    7108:	01c12083          	lw	ra,28(sp)
    710c:	01812403          	lw	s0,24(sp)
    7110:	01412483          	lw	s1,20(sp)
    7114:	01012903          	lw	s2,16(sp)
    7118:	02010113          	addi	sp,sp,32
    711c:	00008067          	ret
    7120:	00c10693          	addi	a3,sp,12
    7124:	00810613          	addi	a2,sp,8
    7128:	00050493          	mv	s1,a0
    712c:	00000097          	auipc	ra,0x0
    7130:	f14080e7          	jalr	-236(ra) # 7040 <__swhatbuf_r>
    7134:	00812583          	lw	a1,8(sp)
    7138:	00050913          	mv	s2,a0
    713c:	00048513          	mv	a0,s1
    7140:	00001097          	auipc	ra,0x1
    7144:	dc8080e7          	jalr	-568(ra) # 7f08 <_malloc_r>
    7148:	02051063          	bnez	a0,7168 <__smakebuf_r+0x98>
    714c:	00c41783          	lh	a5,12(s0)
    7150:	2007f713          	andi	a4,a5,512
    7154:	fa071ae3          	bnez	a4,7108 <__smakebuf_r+0x38>
    7158:	ffc7f793          	andi	a5,a5,-4
    715c:	0027e793          	ori	a5,a5,2
    7160:	00f41623          	sh	a5,12(s0)
    7164:	f91ff06f          	j	70f4 <__smakebuf_r+0x24>
    7168:	00000797          	auipc	a5,0x0
    716c:	bcc78793          	addi	a5,a5,-1076 # 6d34 <_cleanup_r>
    7170:	02f4a423          	sw	a5,40(s1)
    7174:	00c45783          	lhu	a5,12(s0)
    7178:	00a42023          	sw	a0,0(s0)
    717c:	00a42823          	sw	a0,16(s0)
    7180:	0807e793          	ori	a5,a5,128
    7184:	00f41623          	sh	a5,12(s0)
    7188:	00812783          	lw	a5,8(sp)
    718c:	00f42a23          	sw	a5,20(s0)
    7190:	00c12783          	lw	a5,12(sp)
    7194:	02078463          	beqz	a5,71bc <__smakebuf_r+0xec>
    7198:	00e41583          	lh	a1,14(s0)
    719c:	00048513          	mv	a0,s1
    71a0:	00001097          	auipc	ra,0x1
    71a4:	63c080e7          	jalr	1596(ra) # 87dc <_isatty_r>
    71a8:	00050a63          	beqz	a0,71bc <__smakebuf_r+0xec>
    71ac:	00c45783          	lhu	a5,12(s0)
    71b0:	ffc7f793          	andi	a5,a5,-4
    71b4:	0017e793          	ori	a5,a5,1
    71b8:	00f41623          	sh	a5,12(s0)
    71bc:	00c45783          	lhu	a5,12(s0)
    71c0:	00f96933          	or	s2,s2,a5
    71c4:	01241623          	sh	s2,12(s0)
    71c8:	f41ff06f          	j	7108 <__smakebuf_r+0x38>

000071cc <malloc>:
    71cc:	00ffa797          	auipc	a5,0xffa
    71d0:	9e078793          	addi	a5,a5,-1568 # 1000bac <_impure_ptr>
    71d4:	00050593          	mv	a1,a0
    71d8:	0007a503          	lw	a0,0(a5)
    71dc:	00001317          	auipc	t1,0x1
    71e0:	d2c30067          	jr	-724(t1) # 7f08 <_malloc_r>

000071e4 <__ascii_mbtowc>:
    71e4:	02059a63          	bnez	a1,7218 <__ascii_mbtowc+0x34>
    71e8:	ff010113          	addi	sp,sp,-16
    71ec:	00c10593          	addi	a1,sp,12
    71f0:	00000513          	li	a0,0
    71f4:	00060e63          	beqz	a2,7210 <__ascii_mbtowc+0x2c>
    71f8:	ffe00513          	li	a0,-2
    71fc:	00068a63          	beqz	a3,7210 <__ascii_mbtowc+0x2c>
    7200:	00064783          	lbu	a5,0(a2)
    7204:	00f5a023          	sw	a5,0(a1)
    7208:	00064503          	lbu	a0,0(a2)
    720c:	00a03533          	snez	a0,a0
    7210:	01010113          	addi	sp,sp,16
    7214:	00008067          	ret
    7218:	00000513          	li	a0,0
    721c:	02060063          	beqz	a2,723c <__ascii_mbtowc+0x58>
    7220:	ffe00513          	li	a0,-2
    7224:	00068c63          	beqz	a3,723c <__ascii_mbtowc+0x58>
    7228:	00064783          	lbu	a5,0(a2)
    722c:	00f5a023          	sw	a5,0(a1)
    7230:	00064503          	lbu	a0,0(a2)
    7234:	00a03533          	snez	a0,a0
    7238:	00008067          	ret
    723c:	00008067          	ret

00007240 <memchr>:
    7240:	0ff5f593          	andi	a1,a1,255
    7244:	00c50633          	add	a2,a0,a2
    7248:	00c51663          	bne	a0,a2,7254 <memchr+0x14>
    724c:	00000513          	li	a0,0
    7250:	00008067          	ret
    7254:	00054783          	lbu	a5,0(a0)
    7258:	feb78ce3          	beq	a5,a1,7250 <memchr+0x10>
    725c:	00150513          	addi	a0,a0,1
    7260:	fe9ff06f          	j	7248 <memchr+0x8>

00007264 <memcpy>:
    7264:	00050313          	mv	t1,a0
    7268:	00060e63          	beqz	a2,7284 <memcpy+0x20>
    726c:	00058383          	lb	t2,0(a1)
    7270:	00730023          	sb	t2,0(t1)
    7274:	fff60613          	addi	a2,a2,-1
    7278:	00130313          	addi	t1,t1,1
    727c:	00158593          	addi	a1,a1,1
    7280:	fe0616e3          	bnez	a2,726c <memcpy+0x8>
    7284:	00008067          	ret

00007288 <_Balloc>:
    7288:	02452783          	lw	a5,36(a0)
    728c:	ff010113          	addi	sp,sp,-16
    7290:	00812423          	sw	s0,8(sp)
    7294:	01212023          	sw	s2,0(sp)
    7298:	00112623          	sw	ra,12(sp)
    729c:	00912223          	sw	s1,4(sp)
    72a0:	00050413          	mv	s0,a0
    72a4:	00058913          	mv	s2,a1
    72a8:	02079263          	bnez	a5,72cc <_Balloc+0x44>
    72ac:	01000513          	li	a0,16
    72b0:	00000097          	auipc	ra,0x0
    72b4:	f1c080e7          	jalr	-228(ra) # 71cc <malloc>
    72b8:	02a42223          	sw	a0,36(s0)
    72bc:	00052223          	sw	zero,4(a0)
    72c0:	00052423          	sw	zero,8(a0)
    72c4:	00052023          	sw	zero,0(a0)
    72c8:	00052623          	sw	zero,12(a0)
    72cc:	02442483          	lw	s1,36(s0)
    72d0:	00c4a783          	lw	a5,12(s1)
    72d4:	04078663          	beqz	a5,7320 <_Balloc+0x98>
    72d8:	02442703          	lw	a4,36(s0)
    72dc:	00291793          	slli	a5,s2,0x2
    72e0:	00c72703          	lw	a4,12(a4) # ffffe00c <__freertos_irq_stack_top+0xfefee00c>
    72e4:	00f707b3          	add	a5,a4,a5
    72e8:	0007a503          	lw	a0,0(a5)
    72ec:	06051a63          	bnez	a0,7360 <_Balloc+0xd8>
    72f0:	00100493          	li	s1,1
    72f4:	012494b3          	sll	s1,s1,s2
    72f8:	00548613          	addi	a2,s1,5
    72fc:	00261613          	slli	a2,a2,0x2
    7300:	00100593          	li	a1,1
    7304:	00040513          	mv	a0,s0
    7308:	00001097          	auipc	ra,0x1
    730c:	aa0080e7          	jalr	-1376(ra) # 7da8 <_calloc_r>
    7310:	02050a63          	beqz	a0,7344 <_Balloc+0xbc>
    7314:	01252223          	sw	s2,4(a0)
    7318:	00952423          	sw	s1,8(a0)
    731c:	04c0006f          	j	7368 <_Balloc+0xe0>
    7320:	02100613          	li	a2,33
    7324:	00400593          	li	a1,4
    7328:	00040513          	mv	a0,s0
    732c:	00001097          	auipc	ra,0x1
    7330:	a7c080e7          	jalr	-1412(ra) # 7da8 <_calloc_r>
    7334:	02442783          	lw	a5,36(s0)
    7338:	00a4a623          	sw	a0,12(s1)
    733c:	00c7a783          	lw	a5,12(a5)
    7340:	f8079ce3          	bnez	a5,72d8 <_Balloc+0x50>
    7344:	00000513          	li	a0,0
    7348:	00c12083          	lw	ra,12(sp)
    734c:	00812403          	lw	s0,8(sp)
    7350:	00412483          	lw	s1,4(sp)
    7354:	00012903          	lw	s2,0(sp)
    7358:	01010113          	addi	sp,sp,16
    735c:	00008067          	ret
    7360:	00052703          	lw	a4,0(a0)
    7364:	00e7a023          	sw	a4,0(a5)
    7368:	00052823          	sw	zero,16(a0)
    736c:	00052623          	sw	zero,12(a0)
    7370:	fd9ff06f          	j	7348 <_Balloc+0xc0>

00007374 <_Bfree>:
    7374:	02452783          	lw	a5,36(a0)
    7378:	fe010113          	addi	sp,sp,-32
    737c:	00812c23          	sw	s0,24(sp)
    7380:	00112e23          	sw	ra,28(sp)
    7384:	00050413          	mv	s0,a0
    7388:	02079663          	bnez	a5,73b4 <_Bfree+0x40>
    738c:	01000513          	li	a0,16
    7390:	00b12623          	sw	a1,12(sp)
    7394:	00000097          	auipc	ra,0x0
    7398:	e38080e7          	jalr	-456(ra) # 71cc <malloc>
    739c:	00c12583          	lw	a1,12(sp)
    73a0:	02a42223          	sw	a0,36(s0)
    73a4:	00052223          	sw	zero,4(a0)
    73a8:	00052423          	sw	zero,8(a0)
    73ac:	00052023          	sw	zero,0(a0)
    73b0:	00052623          	sw	zero,12(a0)
    73b4:	02058263          	beqz	a1,73d8 <_Bfree+0x64>
    73b8:	02442683          	lw	a3,36(s0)
    73bc:	0045a783          	lw	a5,4(a1)
    73c0:	00279713          	slli	a4,a5,0x2
    73c4:	00c6a783          	lw	a5,12(a3)
    73c8:	00e787b3          	add	a5,a5,a4
    73cc:	0007a703          	lw	a4,0(a5)
    73d0:	00e5a023          	sw	a4,0(a1)
    73d4:	00b7a023          	sw	a1,0(a5)
    73d8:	01c12083          	lw	ra,28(sp)
    73dc:	01812403          	lw	s0,24(sp)
    73e0:	02010113          	addi	sp,sp,32
    73e4:	00008067          	ret

000073e8 <__multadd>:
    73e8:	fd010113          	addi	sp,sp,-48
    73ec:	01312e23          	sw	s3,28(sp)
    73f0:	00050993          	mv	s3,a0
    73f4:	00010537          	lui	a0,0x10
    73f8:	02812423          	sw	s0,40(sp)
    73fc:	02912223          	sw	s1,36(sp)
    7400:	00058413          	mv	s0,a1
    7404:	0105a483          	lw	s1,16(a1)
    7408:	02112623          	sw	ra,44(sp)
    740c:	03212023          	sw	s2,32(sp)
    7410:	01458593          	addi	a1,a1,20
    7414:	00000813          	li	a6,0
    7418:	fff50513          	addi	a0,a0,-1 # ffff <_data_lma+0x59e7>
    741c:	0005a783          	lw	a5,0(a1)
    7420:	00458593          	addi	a1,a1,4
    7424:	00180813          	addi	a6,a6,1
    7428:	00a7f733          	and	a4,a5,a0
    742c:	02c70733          	mul	a4,a4,a2
    7430:	0107d793          	srli	a5,a5,0x10
    7434:	02c787b3          	mul	a5,a5,a2
    7438:	00d70733          	add	a4,a4,a3
    743c:	01075693          	srli	a3,a4,0x10
    7440:	00a77733          	and	a4,a4,a0
    7444:	00d787b3          	add	a5,a5,a3
    7448:	0107d693          	srli	a3,a5,0x10
    744c:	01079793          	slli	a5,a5,0x10
    7450:	00e787b3          	add	a5,a5,a4
    7454:	fef5ae23          	sw	a5,-4(a1)
    7458:	fc9842e3          	blt	a6,s1,741c <__multadd+0x34>
    745c:	06068a63          	beqz	a3,74d0 <__multadd+0xe8>
    7460:	00842783          	lw	a5,8(s0)
    7464:	04f4ca63          	blt	s1,a5,74b8 <__multadd+0xd0>
    7468:	00442583          	lw	a1,4(s0)
    746c:	00098513          	mv	a0,s3
    7470:	00d12623          	sw	a3,12(sp)
    7474:	00158593          	addi	a1,a1,1
    7478:	00000097          	auipc	ra,0x0
    747c:	e10080e7          	jalr	-496(ra) # 7288 <_Balloc>
    7480:	01042603          	lw	a2,16(s0)
    7484:	00c40593          	addi	a1,s0,12
    7488:	00050913          	mv	s2,a0
    748c:	00260613          	addi	a2,a2,2
    7490:	00261613          	slli	a2,a2,0x2
    7494:	00c50513          	addi	a0,a0,12
    7498:	00000097          	auipc	ra,0x0
    749c:	dcc080e7          	jalr	-564(ra) # 7264 <memcpy>
    74a0:	00040593          	mv	a1,s0
    74a4:	00098513          	mv	a0,s3
    74a8:	00000097          	auipc	ra,0x0
    74ac:	ecc080e7          	jalr	-308(ra) # 7374 <_Bfree>
    74b0:	00c12683          	lw	a3,12(sp)
    74b4:	00090413          	mv	s0,s2
    74b8:	00448793          	addi	a5,s1,4
    74bc:	00279793          	slli	a5,a5,0x2
    74c0:	00f407b3          	add	a5,s0,a5
    74c4:	00d7a223          	sw	a3,4(a5)
    74c8:	00148493          	addi	s1,s1,1
    74cc:	00942823          	sw	s1,16(s0)
    74d0:	00040513          	mv	a0,s0
    74d4:	02c12083          	lw	ra,44(sp)
    74d8:	02812403          	lw	s0,40(sp)
    74dc:	02412483          	lw	s1,36(sp)
    74e0:	02012903          	lw	s2,32(sp)
    74e4:	01c12983          	lw	s3,28(sp)
    74e8:	03010113          	addi	sp,sp,48
    74ec:	00008067          	ret

000074f0 <__hi0bits>:
    74f0:	ffff0737          	lui	a4,0xffff0
    74f4:	00e57733          	and	a4,a0,a4
    74f8:	00050793          	mv	a5,a0
    74fc:	00000513          	li	a0,0
    7500:	00071663          	bnez	a4,750c <__hi0bits+0x1c>
    7504:	01079793          	slli	a5,a5,0x10
    7508:	01000513          	li	a0,16
    750c:	ff000737          	lui	a4,0xff000
    7510:	00e7f733          	and	a4,a5,a4
    7514:	00071663          	bnez	a4,7520 <__hi0bits+0x30>
    7518:	00850513          	addi	a0,a0,8
    751c:	00879793          	slli	a5,a5,0x8
    7520:	f0000737          	lui	a4,0xf0000
    7524:	00e7f733          	and	a4,a5,a4
    7528:	00071663          	bnez	a4,7534 <__hi0bits+0x44>
    752c:	00450513          	addi	a0,a0,4
    7530:	00479793          	slli	a5,a5,0x4
    7534:	c0000737          	lui	a4,0xc0000
    7538:	00e7f733          	and	a4,a5,a4
    753c:	00071663          	bnez	a4,7548 <__hi0bits+0x58>
    7540:	00250513          	addi	a0,a0,2
    7544:	00279793          	slli	a5,a5,0x2
    7548:	0007ca63          	bltz	a5,755c <__hi0bits+0x6c>
    754c:	00179713          	slli	a4,a5,0x1
    7550:	00150513          	addi	a0,a0,1
    7554:	00074463          	bltz	a4,755c <__hi0bits+0x6c>
    7558:	02000513          	li	a0,32
    755c:	00008067          	ret

00007560 <__lo0bits>:
    7560:	00052783          	lw	a5,0(a0)
    7564:	0077f713          	andi	a4,a5,7
    7568:	02070e63          	beqz	a4,75a4 <__lo0bits+0x44>
    756c:	0017f693          	andi	a3,a5,1
    7570:	00000713          	li	a4,0
    7574:	00069c63          	bnez	a3,758c <__lo0bits+0x2c>
    7578:	0027f713          	andi	a4,a5,2
    757c:	00070c63          	beqz	a4,7594 <__lo0bits+0x34>
    7580:	0017d793          	srli	a5,a5,0x1
    7584:	00f52023          	sw	a5,0(a0)
    7588:	00100713          	li	a4,1
    758c:	00070513          	mv	a0,a4
    7590:	00008067          	ret
    7594:	0027d793          	srli	a5,a5,0x2
    7598:	00f52023          	sw	a5,0(a0)
    759c:	00200713          	li	a4,2
    75a0:	fedff06f          	j	758c <__lo0bits+0x2c>
    75a4:	01079693          	slli	a3,a5,0x10
    75a8:	0106d693          	srli	a3,a3,0x10
    75ac:	00000713          	li	a4,0
    75b0:	00069663          	bnez	a3,75bc <__lo0bits+0x5c>
    75b4:	0107d793          	srli	a5,a5,0x10
    75b8:	01000713          	li	a4,16
    75bc:	0ff7f693          	andi	a3,a5,255
    75c0:	00069663          	bnez	a3,75cc <__lo0bits+0x6c>
    75c4:	00870713          	addi	a4,a4,8 # c0000008 <__freertos_irq_stack_top+0xbeff0008>
    75c8:	0087d793          	srli	a5,a5,0x8
    75cc:	00f7f693          	andi	a3,a5,15
    75d0:	00069663          	bnez	a3,75dc <__lo0bits+0x7c>
    75d4:	00470713          	addi	a4,a4,4
    75d8:	0047d793          	srli	a5,a5,0x4
    75dc:	0037f693          	andi	a3,a5,3
    75e0:	00069663          	bnez	a3,75ec <__lo0bits+0x8c>
    75e4:	00270713          	addi	a4,a4,2
    75e8:	0027d793          	srli	a5,a5,0x2
    75ec:	0017f693          	andi	a3,a5,1
    75f0:	00069863          	bnez	a3,7600 <__lo0bits+0xa0>
    75f4:	0017d793          	srli	a5,a5,0x1
    75f8:	00170713          	addi	a4,a4,1
    75fc:	00078663          	beqz	a5,7608 <__lo0bits+0xa8>
    7600:	00f52023          	sw	a5,0(a0)
    7604:	f89ff06f          	j	758c <__lo0bits+0x2c>
    7608:	02000713          	li	a4,32
    760c:	f81ff06f          	j	758c <__lo0bits+0x2c>

00007610 <__i2b>:
    7610:	ff010113          	addi	sp,sp,-16
    7614:	00812423          	sw	s0,8(sp)
    7618:	00058413          	mv	s0,a1
    761c:	00100593          	li	a1,1
    7620:	00112623          	sw	ra,12(sp)
    7624:	00000097          	auipc	ra,0x0
    7628:	c64080e7          	jalr	-924(ra) # 7288 <_Balloc>
    762c:	00852a23          	sw	s0,20(a0)
    7630:	00c12083          	lw	ra,12(sp)
    7634:	00812403          	lw	s0,8(sp)
    7638:	00100713          	li	a4,1
    763c:	00e52823          	sw	a4,16(a0)
    7640:	01010113          	addi	sp,sp,16
    7644:	00008067          	ret

00007648 <__multiply>:
    7648:	0105a703          	lw	a4,16(a1)
    764c:	01062783          	lw	a5,16(a2)
    7650:	fd010113          	addi	sp,sp,-48
    7654:	02912223          	sw	s1,36(sp)
    7658:	02112623          	sw	ra,44(sp)
    765c:	02812423          	sw	s0,40(sp)
    7660:	03212023          	sw	s2,32(sp)
    7664:	01312e23          	sw	s3,28(sp)
    7668:	00058493          	mv	s1,a1
    766c:	00f75663          	bge	a4,a5,7678 <__multiply+0x30>
    7670:	00060493          	mv	s1,a2
    7674:	00058613          	mv	a2,a1
    7678:	0104a983          	lw	s3,16(s1)
    767c:	01062903          	lw	s2,16(a2)
    7680:	0084a783          	lw	a5,8(s1)
    7684:	0044a583          	lw	a1,4(s1)
    7688:	01298433          	add	s0,s3,s2
    768c:	0087d463          	bge	a5,s0,7694 <__multiply+0x4c>
    7690:	00158593          	addi	a1,a1,1
    7694:	00c12623          	sw	a2,12(sp)
    7698:	00000097          	auipc	ra,0x0
    769c:	bf0080e7          	jalr	-1040(ra) # 7288 <_Balloc>
    76a0:	00c12603          	lw	a2,12(sp)
    76a4:	01450813          	addi	a6,a0,20
    76a8:	00241313          	slli	t1,s0,0x2
    76ac:	00680333          	add	t1,a6,t1
    76b0:	00080793          	mv	a5,a6
    76b4:	0467ec63          	bltu	a5,t1,770c <__multiply+0xc4>
    76b8:	01448593          	addi	a1,s1,20
    76bc:	00299893          	slli	a7,s3,0x2
    76c0:	01460613          	addi	a2,a2,20
    76c4:	00291e13          	slli	t3,s2,0x2
    76c8:	000106b7          	lui	a3,0x10
    76cc:	011588b3          	add	a7,a1,a7
    76d0:	01c60e33          	add	t3,a2,t3
    76d4:	fff68693          	addi	a3,a3,-1 # ffff <_data_lma+0x59e7>
    76d8:	05c66063          	bltu	a2,t3,7718 <__multiply+0xd0>
    76dc:	00805863          	blez	s0,76ec <__multiply+0xa4>
    76e0:	ffc30313          	addi	t1,t1,-4
    76e4:	00032783          	lw	a5,0(t1)
    76e8:	10078e63          	beqz	a5,7804 <__multiply+0x1bc>
    76ec:	00852823          	sw	s0,16(a0)
    76f0:	02c12083          	lw	ra,44(sp)
    76f4:	02812403          	lw	s0,40(sp)
    76f8:	02412483          	lw	s1,36(sp)
    76fc:	02012903          	lw	s2,32(sp)
    7700:	01c12983          	lw	s3,28(sp)
    7704:	03010113          	addi	sp,sp,48
    7708:	00008067          	ret
    770c:	0007a023          	sw	zero,0(a5)
    7710:	00478793          	addi	a5,a5,4
    7714:	fa1ff06f          	j	76b4 <__multiply+0x6c>
    7718:	00062f83          	lw	t6,0(a2)
    771c:	00dfffb3          	and	t6,t6,a3
    7720:	060f8463          	beqz	t6,7788 <__multiply+0x140>
    7724:	00080f13          	mv	t5,a6
    7728:	00058293          	mv	t0,a1
    772c:	00000493          	li	s1,0
    7730:	0002a703          	lw	a4,0(t0)
    7734:	000f2383          	lw	t2,0(t5)
    7738:	004f0f13          	addi	t5,t5,4
    773c:	00d77eb3          	and	t4,a4,a3
    7740:	03fe8eb3          	mul	t4,t4,t6
    7744:	00d3f7b3          	and	a5,t2,a3
    7748:	0103d393          	srli	t2,t2,0x10
    774c:	00428293          	addi	t0,t0,4
    7750:	00fe8eb3          	add	t4,t4,a5
    7754:	01075793          	srli	a5,a4,0x10
    7758:	03f787b3          	mul	a5,a5,t6
    775c:	009e8eb3          	add	t4,t4,s1
    7760:	010ed713          	srli	a4,t4,0x10
    7764:	00defeb3          	and	t4,t4,a3
    7768:	007787b3          	add	a5,a5,t2
    776c:	00e787b3          	add	a5,a5,a4
    7770:	0107d493          	srli	s1,a5,0x10
    7774:	01079793          	slli	a5,a5,0x10
    7778:	01d7e7b3          	or	a5,a5,t4
    777c:	feff2e23          	sw	a5,-4(t5)
    7780:	fb12e8e3          	bltu	t0,a7,7730 <__multiply+0xe8>
    7784:	009f2023          	sw	s1,0(t5)
    7788:	00265283          	lhu	t0,2(a2)
    778c:	06028663          	beqz	t0,77f8 <__multiply+0x1b0>
    7790:	00082783          	lw	a5,0(a6)
    7794:	00080e93          	mv	t4,a6
    7798:	00058f13          	mv	t5,a1
    779c:	00000f93          	li	t6,0
    77a0:	000f2703          	lw	a4,0(t5)
    77a4:	002ed383          	lhu	t2,2(t4)
    77a8:	00d7f7b3          	and	a5,a5,a3
    77ac:	00d77733          	and	a4,a4,a3
    77b0:	02570733          	mul	a4,a4,t0
    77b4:	004e8e93          	addi	t4,t4,4
    77b8:	004f0f13          	addi	t5,t5,4
    77bc:	00770733          	add	a4,a4,t2
    77c0:	01f70733          	add	a4,a4,t6
    77c4:	01071f93          	slli	t6,a4,0x10
    77c8:	00ffe7b3          	or	a5,t6,a5
    77cc:	fefeae23          	sw	a5,-4(t4)
    77d0:	ffef5783          	lhu	a5,-2(t5)
    77d4:	000eaf83          	lw	t6,0(t4)
    77d8:	01075713          	srli	a4,a4,0x10
    77dc:	025787b3          	mul	a5,a5,t0
    77e0:	00dfffb3          	and	t6,t6,a3
    77e4:	01f787b3          	add	a5,a5,t6
    77e8:	00e787b3          	add	a5,a5,a4
    77ec:	0107df93          	srli	t6,a5,0x10
    77f0:	fb1f68e3          	bltu	t5,a7,77a0 <__multiply+0x158>
    77f4:	00fea023          	sw	a5,0(t4)
    77f8:	00460613          	addi	a2,a2,4
    77fc:	00480813          	addi	a6,a6,4
    7800:	ed9ff06f          	j	76d8 <__multiply+0x90>
    7804:	fff40413          	addi	s0,s0,-1
    7808:	ed5ff06f          	j	76dc <__multiply+0x94>

0000780c <__pow5mult>:
    780c:	fe010113          	addi	sp,sp,-32
    7810:	00912a23          	sw	s1,20(sp)
    7814:	01212823          	sw	s2,16(sp)
    7818:	01312623          	sw	s3,12(sp)
    781c:	00112e23          	sw	ra,28(sp)
    7820:	00812c23          	sw	s0,24(sp)
    7824:	01412423          	sw	s4,8(sp)
    7828:	00367793          	andi	a5,a2,3
    782c:	00050913          	mv	s2,a0
    7830:	00060493          	mv	s1,a2
    7834:	00058993          	mv	s3,a1
    7838:	02078663          	beqz	a5,7864 <__pow5mult+0x58>
    783c:	fff78793          	addi	a5,a5,-1
    7840:	00ff9717          	auipc	a4,0xff9
    7844:	03070713          	addi	a4,a4,48 # 1000870 <p05.3310>
    7848:	00279793          	slli	a5,a5,0x2
    784c:	00f707b3          	add	a5,a4,a5
    7850:	0007a603          	lw	a2,0(a5)
    7854:	00000693          	li	a3,0
    7858:	00000097          	auipc	ra,0x0
    785c:	b90080e7          	jalr	-1136(ra) # 73e8 <__multadd>
    7860:	00050993          	mv	s3,a0
    7864:	4024d493          	srai	s1,s1,0x2
    7868:	0a048e63          	beqz	s1,7924 <__pow5mult+0x118>
    786c:	02492783          	lw	a5,36(s2)
    7870:	02079263          	bnez	a5,7894 <__pow5mult+0x88>
    7874:	01000513          	li	a0,16
    7878:	00000097          	auipc	ra,0x0
    787c:	954080e7          	jalr	-1708(ra) # 71cc <malloc>
    7880:	02a92223          	sw	a0,36(s2)
    7884:	00052223          	sw	zero,4(a0)
    7888:	00052423          	sw	zero,8(a0)
    788c:	00052023          	sw	zero,0(a0)
    7890:	00052623          	sw	zero,12(a0)
    7894:	02492a03          	lw	s4,36(s2)
    7898:	008a2403          	lw	s0,8(s4)
    789c:	02041063          	bnez	s0,78bc <__pow5mult+0xb0>
    78a0:	27100593          	li	a1,625
    78a4:	00090513          	mv	a0,s2
    78a8:	00000097          	auipc	ra,0x0
    78ac:	d68080e7          	jalr	-664(ra) # 7610 <__i2b>
    78b0:	00aa2423          	sw	a0,8(s4)
    78b4:	00050413          	mv	s0,a0
    78b8:	00052023          	sw	zero,0(a0)
    78bc:	0014f793          	andi	a5,s1,1
    78c0:	02078863          	beqz	a5,78f0 <__pow5mult+0xe4>
    78c4:	00098593          	mv	a1,s3
    78c8:	00040613          	mv	a2,s0
    78cc:	00090513          	mv	a0,s2
    78d0:	00000097          	auipc	ra,0x0
    78d4:	d78080e7          	jalr	-648(ra) # 7648 <__multiply>
    78d8:	00050a13          	mv	s4,a0
    78dc:	00098593          	mv	a1,s3
    78e0:	00090513          	mv	a0,s2
    78e4:	00000097          	auipc	ra,0x0
    78e8:	a90080e7          	jalr	-1392(ra) # 7374 <_Bfree>
    78ec:	000a0993          	mv	s3,s4
    78f0:	4014d493          	srai	s1,s1,0x1
    78f4:	02048863          	beqz	s1,7924 <__pow5mult+0x118>
    78f8:	00042503          	lw	a0,0(s0)
    78fc:	02051063          	bnez	a0,791c <__pow5mult+0x110>
    7900:	00040613          	mv	a2,s0
    7904:	00040593          	mv	a1,s0
    7908:	00090513          	mv	a0,s2
    790c:	00000097          	auipc	ra,0x0
    7910:	d3c080e7          	jalr	-708(ra) # 7648 <__multiply>
    7914:	00a42023          	sw	a0,0(s0)
    7918:	00052023          	sw	zero,0(a0)
    791c:	00050413          	mv	s0,a0
    7920:	f9dff06f          	j	78bc <__pow5mult+0xb0>
    7924:	01c12083          	lw	ra,28(sp)
    7928:	01812403          	lw	s0,24(sp)
    792c:	00098513          	mv	a0,s3
    7930:	01412483          	lw	s1,20(sp)
    7934:	01012903          	lw	s2,16(sp)
    7938:	00c12983          	lw	s3,12(sp)
    793c:	00812a03          	lw	s4,8(sp)
    7940:	02010113          	addi	sp,sp,32
    7944:	00008067          	ret

00007948 <__lshift>:
    7948:	fd010113          	addi	sp,sp,-48
    794c:	02912223          	sw	s1,36(sp)
    7950:	00058493          	mv	s1,a1
    7954:	01312e23          	sw	s3,28(sp)
    7958:	0104a983          	lw	s3,16(s1)
    795c:	02812423          	sw	s0,40(sp)
    7960:	0045a583          	lw	a1,4(a1)
    7964:	40565413          	srai	s0,a2,0x5
    7968:	0084a783          	lw	a5,8(s1)
    796c:	013409b3          	add	s3,s0,s3
    7970:	03212023          	sw	s2,32(sp)
    7974:	01512a23          	sw	s5,20(sp)
    7978:	02112623          	sw	ra,44(sp)
    797c:	01412c23          	sw	s4,24(sp)
    7980:	00050a93          	mv	s5,a0
    7984:	00198913          	addi	s2,s3,1
    7988:	0d27ca63          	blt	a5,s2,7a5c <__lshift+0x114>
    798c:	000a8513          	mv	a0,s5
    7990:	00c12623          	sw	a2,12(sp)
    7994:	00000097          	auipc	ra,0x0
    7998:	8f4080e7          	jalr	-1804(ra) # 7288 <_Balloc>
    799c:	00c12603          	lw	a2,12(sp)
    79a0:	01450793          	addi	a5,a0,20
    79a4:	00050a13          	mv	s4,a0
    79a8:	00078693          	mv	a3,a5
    79ac:	00000713          	li	a4,0
    79b0:	00468693          	addi	a3,a3,4
    79b4:	0a874a63          	blt	a4,s0,7a68 <__lshift+0x120>
    79b8:	00045463          	bgez	s0,79c0 <__lshift+0x78>
    79bc:	00000413          	li	s0,0
    79c0:	0104a683          	lw	a3,16(s1)
    79c4:	00241413          	slli	s0,s0,0x2
    79c8:	00878733          	add	a4,a5,s0
    79cc:	00269693          	slli	a3,a3,0x2
    79d0:	01448793          	addi	a5,s1,20
    79d4:	01f67613          	andi	a2,a2,31
    79d8:	00d786b3          	add	a3,a5,a3
    79dc:	08060c63          	beqz	a2,7a74 <__lshift+0x12c>
    79e0:	02000813          	li	a6,32
    79e4:	40c80833          	sub	a6,a6,a2
    79e8:	00000593          	li	a1,0
    79ec:	0007a503          	lw	a0,0(a5)
    79f0:	00470713          	addi	a4,a4,4
    79f4:	00478793          	addi	a5,a5,4
    79f8:	00c51533          	sll	a0,a0,a2
    79fc:	00b565b3          	or	a1,a0,a1
    7a00:	feb72e23          	sw	a1,-4(a4)
    7a04:	ffc7a583          	lw	a1,-4(a5)
    7a08:	0105d5b3          	srl	a1,a1,a6
    7a0c:	fed7e0e3          	bltu	a5,a3,79ec <__lshift+0xa4>
    7a10:	00b72023          	sw	a1,0(a4)
    7a14:	00058463          	beqz	a1,7a1c <__lshift+0xd4>
    7a18:	00298913          	addi	s2,s3,2
    7a1c:	fff90913          	addi	s2,s2,-1
    7a20:	012a2823          	sw	s2,16(s4)
    7a24:	000a8513          	mv	a0,s5
    7a28:	00048593          	mv	a1,s1
    7a2c:	00000097          	auipc	ra,0x0
    7a30:	948080e7          	jalr	-1720(ra) # 7374 <_Bfree>
    7a34:	02c12083          	lw	ra,44(sp)
    7a38:	02812403          	lw	s0,40(sp)
    7a3c:	000a0513          	mv	a0,s4
    7a40:	02412483          	lw	s1,36(sp)
    7a44:	02012903          	lw	s2,32(sp)
    7a48:	01c12983          	lw	s3,28(sp)
    7a4c:	01812a03          	lw	s4,24(sp)
    7a50:	01412a83          	lw	s5,20(sp)
    7a54:	03010113          	addi	sp,sp,48
    7a58:	00008067          	ret
    7a5c:	00158593          	addi	a1,a1,1
    7a60:	00179793          	slli	a5,a5,0x1
    7a64:	f25ff06f          	j	7988 <__lshift+0x40>
    7a68:	fe06ae23          	sw	zero,-4(a3)
    7a6c:	00170713          	addi	a4,a4,1
    7a70:	f41ff06f          	j	79b0 <__lshift+0x68>
    7a74:	00478793          	addi	a5,a5,4
    7a78:	ffc7a603          	lw	a2,-4(a5)
    7a7c:	00470713          	addi	a4,a4,4
    7a80:	fec72e23          	sw	a2,-4(a4)
    7a84:	fed7e8e3          	bltu	a5,a3,7a74 <__lshift+0x12c>
    7a88:	f95ff06f          	j	7a1c <__lshift+0xd4>

00007a8c <__mcmp>:
    7a8c:	01052783          	lw	a5,16(a0)
    7a90:	0105a703          	lw	a4,16(a1)
    7a94:	40e787b3          	sub	a5,a5,a4
    7a98:	02079c63          	bnez	a5,7ad0 <__mcmp+0x44>
    7a9c:	00271713          	slli	a4,a4,0x2
    7aa0:	01450513          	addi	a0,a0,20
    7aa4:	01458593          	addi	a1,a1,20
    7aa8:	00e506b3          	add	a3,a0,a4
    7aac:	00e585b3          	add	a1,a1,a4
    7ab0:	ffc68693          	addi	a3,a3,-4
    7ab4:	ffc58593          	addi	a1,a1,-4
    7ab8:	0006a603          	lw	a2,0(a3)
    7abc:	0005a703          	lw	a4,0(a1)
    7ac0:	00e60c63          	beq	a2,a4,7ad8 <__mcmp+0x4c>
    7ac4:	fff00793          	li	a5,-1
    7ac8:	00e66463          	bltu	a2,a4,7ad0 <__mcmp+0x44>
    7acc:	00100793          	li	a5,1
    7ad0:	00078513          	mv	a0,a5
    7ad4:	00008067          	ret
    7ad8:	fcd56ce3          	bltu	a0,a3,7ab0 <__mcmp+0x24>
    7adc:	ff5ff06f          	j	7ad0 <__mcmp+0x44>

00007ae0 <__mdiff>:
    7ae0:	fe010113          	addi	sp,sp,-32
    7ae4:	00912a23          	sw	s1,20(sp)
    7ae8:	00058493          	mv	s1,a1
    7aec:	01312623          	sw	s3,12(sp)
    7af0:	00060593          	mv	a1,a2
    7af4:	00050993          	mv	s3,a0
    7af8:	00048513          	mv	a0,s1
    7afc:	00812c23          	sw	s0,24(sp)
    7b00:	00112e23          	sw	ra,28(sp)
    7b04:	01212823          	sw	s2,16(sp)
    7b08:	00060413          	mv	s0,a2
    7b0c:	00000097          	auipc	ra,0x0
    7b10:	f80080e7          	jalr	-128(ra) # 7a8c <__mcmp>
    7b14:	02051e63          	bnez	a0,7b50 <__mdiff+0x70>
    7b18:	00000593          	li	a1,0
    7b1c:	00098513          	mv	a0,s3
    7b20:	fffff097          	auipc	ra,0xfffff
    7b24:	768080e7          	jalr	1896(ra) # 7288 <_Balloc>
    7b28:	00100793          	li	a5,1
    7b2c:	00f52823          	sw	a5,16(a0)
    7b30:	00052a23          	sw	zero,20(a0)
    7b34:	01c12083          	lw	ra,28(sp)
    7b38:	01812403          	lw	s0,24(sp)
    7b3c:	01412483          	lw	s1,20(sp)
    7b40:	01012903          	lw	s2,16(sp)
    7b44:	00c12983          	lw	s3,12(sp)
    7b48:	02010113          	addi	sp,sp,32
    7b4c:	00008067          	ret
    7b50:	00100913          	li	s2,1
    7b54:	00054a63          	bltz	a0,7b68 <__mdiff+0x88>
    7b58:	00040793          	mv	a5,s0
    7b5c:	00000913          	li	s2,0
    7b60:	00048413          	mv	s0,s1
    7b64:	00078493          	mv	s1,a5
    7b68:	00442583          	lw	a1,4(s0)
    7b6c:	00098513          	mv	a0,s3
    7b70:	fffff097          	auipc	ra,0xfffff
    7b74:	718080e7          	jalr	1816(ra) # 7288 <_Balloc>
    7b78:	01042303          	lw	t1,16(s0)
    7b7c:	0104a883          	lw	a7,16(s1)
    7b80:	01440613          	addi	a2,s0,20
    7b84:	00231e13          	slli	t3,t1,0x2
    7b88:	01448813          	addi	a6,s1,20
    7b8c:	00289893          	slli	a7,a7,0x2
    7b90:	00010eb7          	lui	t4,0x10
    7b94:	01252623          	sw	s2,12(a0)
    7b98:	01c60e33          	add	t3,a2,t3
    7b9c:	011808b3          	add	a7,a6,a7
    7ba0:	01450693          	addi	a3,a0,20
    7ba4:	00000f13          	li	t5,0
    7ba8:	fffe8e93          	addi	t4,t4,-1 # ffff <_data_lma+0x59e7>
    7bac:	00062703          	lw	a4,0(a2)
    7bb0:	00082f83          	lw	t6,0(a6)
    7bb4:	00468693          	addi	a3,a3,4
    7bb8:	01d775b3          	and	a1,a4,t4
    7bbc:	01dff7b3          	and	a5,t6,t4
    7bc0:	01e585b3          	add	a1,a1,t5
    7bc4:	40f585b3          	sub	a1,a1,a5
    7bc8:	010fdf93          	srli	t6,t6,0x10
    7bcc:	01075793          	srli	a5,a4,0x10
    7bd0:	41f787b3          	sub	a5,a5,t6
    7bd4:	4105d713          	srai	a4,a1,0x10
    7bd8:	00e787b3          	add	a5,a5,a4
    7bdc:	4107df13          	srai	t5,a5,0x10
    7be0:	01d5f5b3          	and	a1,a1,t4
    7be4:	01079793          	slli	a5,a5,0x10
    7be8:	00b7e7b3          	or	a5,a5,a1
    7bec:	00480813          	addi	a6,a6,4
    7bf0:	fef6ae23          	sw	a5,-4(a3)
    7bf4:	00460613          	addi	a2,a2,4
    7bf8:	fb186ae3          	bltu	a6,a7,7bac <__mdiff+0xcc>
    7bfc:	000105b7          	lui	a1,0x10
    7c00:	fff58593          	addi	a1,a1,-1 # ffff <_data_lma+0x59e7>
    7c04:	01c66c63          	bltu	a2,t3,7c1c <__mdiff+0x13c>
    7c08:	ffc68693          	addi	a3,a3,-4
    7c0c:	0006a783          	lw	a5,0(a3)
    7c10:	04078263          	beqz	a5,7c54 <__mdiff+0x174>
    7c14:	00652823          	sw	t1,16(a0)
    7c18:	f1dff06f          	j	7b34 <__mdiff+0x54>
    7c1c:	00062783          	lw	a5,0(a2)
    7c20:	00468693          	addi	a3,a3,4
    7c24:	00460613          	addi	a2,a2,4
    7c28:	00b7f733          	and	a4,a5,a1
    7c2c:	01e70733          	add	a4,a4,t5
    7c30:	41075813          	srai	a6,a4,0x10
    7c34:	0107d793          	srli	a5,a5,0x10
    7c38:	010787b3          	add	a5,a5,a6
    7c3c:	4107df13          	srai	t5,a5,0x10
    7c40:	00b77733          	and	a4,a4,a1
    7c44:	01079793          	slli	a5,a5,0x10
    7c48:	00e7e7b3          	or	a5,a5,a4
    7c4c:	fef6ae23          	sw	a5,-4(a3)
    7c50:	fb5ff06f          	j	7c04 <__mdiff+0x124>
    7c54:	fff30313          	addi	t1,t1,-1
    7c58:	fb1ff06f          	j	7c08 <__mdiff+0x128>

00007c5c <__d2b>:
    7c5c:	fd010113          	addi	sp,sp,-48
    7c60:	02812423          	sw	s0,40(sp)
    7c64:	00058413          	mv	s0,a1
    7c68:	00100593          	li	a1,1
    7c6c:	02912223          	sw	s1,36(sp)
    7c70:	03212023          	sw	s2,32(sp)
    7c74:	00060493          	mv	s1,a2
    7c78:	01312e23          	sw	s3,28(sp)
    7c7c:	01412c23          	sw	s4,24(sp)
    7c80:	00070913          	mv	s2,a4
    7c84:	02112623          	sw	ra,44(sp)
    7c88:	00068a13          	mv	s4,a3
    7c8c:	fffff097          	auipc	ra,0xfffff
    7c90:	5fc080e7          	jalr	1532(ra) # 7288 <_Balloc>
    7c94:	00100737          	lui	a4,0x100
    7c98:	fff70793          	addi	a5,a4,-1 # fffff <_data_lma+0xf59e7>
    7c9c:	0097f7b3          	and	a5,a5,s1
    7ca0:	0144d493          	srli	s1,s1,0x14
    7ca4:	7ff4f493          	andi	s1,s1,2047
    7ca8:	00050993          	mv	s3,a0
    7cac:	08049c63          	bnez	s1,7d44 <__d2b+0xe8>
    7cb0:	00f12623          	sw	a5,12(sp)
    7cb4:	0a040063          	beqz	s0,7d54 <__d2b+0xf8>
    7cb8:	00810513          	addi	a0,sp,8
    7cbc:	00812423          	sw	s0,8(sp)
    7cc0:	00000097          	auipc	ra,0x0
    7cc4:	8a0080e7          	jalr	-1888(ra) # 7560 <__lo0bits>
    7cc8:	00812683          	lw	a3,8(sp)
    7ccc:	08050063          	beqz	a0,7d4c <__d2b+0xf0>
    7cd0:	00c12703          	lw	a4,12(sp)
    7cd4:	02000793          	li	a5,32
    7cd8:	40a787b3          	sub	a5,a5,a0
    7cdc:	00f717b3          	sll	a5,a4,a5
    7ce0:	00d7e7b3          	or	a5,a5,a3
    7ce4:	00a75733          	srl	a4,a4,a0
    7ce8:	00f9aa23          	sw	a5,20(s3)
    7cec:	00e12623          	sw	a4,12(sp)
    7cf0:	00c12403          	lw	s0,12(sp)
    7cf4:	0089ac23          	sw	s0,24(s3)
    7cf8:	00803433          	snez	s0,s0
    7cfc:	00140413          	addi	s0,s0,1
    7d00:	0089a823          	sw	s0,16(s3)
    7d04:	06048c63          	beqz	s1,7d7c <__d2b+0x120>
    7d08:	bcd48493          	addi	s1,s1,-1075
    7d0c:	00a484b3          	add	s1,s1,a0
    7d10:	03500793          	li	a5,53
    7d14:	009a2023          	sw	s1,0(s4)
    7d18:	40a78533          	sub	a0,a5,a0
    7d1c:	00a92023          	sw	a0,0(s2)
    7d20:	02c12083          	lw	ra,44(sp)
    7d24:	02812403          	lw	s0,40(sp)
    7d28:	00098513          	mv	a0,s3
    7d2c:	02412483          	lw	s1,36(sp)
    7d30:	02012903          	lw	s2,32(sp)
    7d34:	01c12983          	lw	s3,28(sp)
    7d38:	01812a03          	lw	s4,24(sp)
    7d3c:	03010113          	addi	sp,sp,48
    7d40:	00008067          	ret
    7d44:	00e7e7b3          	or	a5,a5,a4
    7d48:	f69ff06f          	j	7cb0 <__d2b+0x54>
    7d4c:	00d9aa23          	sw	a3,20(s3)
    7d50:	fa1ff06f          	j	7cf0 <__d2b+0x94>
    7d54:	00c10513          	addi	a0,sp,12
    7d58:	00000097          	auipc	ra,0x0
    7d5c:	808080e7          	jalr	-2040(ra) # 7560 <__lo0bits>
    7d60:	00c12783          	lw	a5,12(sp)
    7d64:	02050513          	addi	a0,a0,32
    7d68:	00100413          	li	s0,1
    7d6c:	00f9aa23          	sw	a5,20(s3)
    7d70:	00100793          	li	a5,1
    7d74:	00f9a823          	sw	a5,16(s3)
    7d78:	f8dff06f          	j	7d04 <__d2b+0xa8>
    7d7c:	00241793          	slli	a5,s0,0x2
    7d80:	bce50513          	addi	a0,a0,-1074
    7d84:	00f987b3          	add	a5,s3,a5
    7d88:	00aa2023          	sw	a0,0(s4)
    7d8c:	0107a503          	lw	a0,16(a5)
    7d90:	00541413          	slli	s0,s0,0x5
    7d94:	fffff097          	auipc	ra,0xfffff
    7d98:	75c080e7          	jalr	1884(ra) # 74f0 <__hi0bits>
    7d9c:	40a40433          	sub	s0,s0,a0
    7da0:	00892023          	sw	s0,0(s2)
    7da4:	f7dff06f          	j	7d20 <__d2b+0xc4>

00007da8 <_calloc_r>:
    7da8:	02c58633          	mul	a2,a1,a2
    7dac:	fe010113          	addi	sp,sp,-32
    7db0:	00812c23          	sw	s0,24(sp)
    7db4:	00112e23          	sw	ra,28(sp)
    7db8:	00060593          	mv	a1,a2
    7dbc:	00c12623          	sw	a2,12(sp)
    7dc0:	00000097          	auipc	ra,0x0
    7dc4:	148080e7          	jalr	328(ra) # 7f08 <_malloc_r>
    7dc8:	00050413          	mv	s0,a0
    7dcc:	00050a63          	beqz	a0,7de0 <_calloc_r+0x38>
    7dd0:	00c12603          	lw	a2,12(sp)
    7dd4:	00000593          	li	a1,0
    7dd8:	ffffc097          	auipc	ra,0xffffc
    7ddc:	190080e7          	jalr	400(ra) # 3f68 <memset>
    7de0:	00040513          	mv	a0,s0
    7de4:	01c12083          	lw	ra,28(sp)
    7de8:	01812403          	lw	s0,24(sp)
    7dec:	02010113          	addi	sp,sp,32
    7df0:	00008067          	ret

00007df4 <_free_r>:
    7df4:	10058863          	beqz	a1,7f04 <_free_r+0x110>
    7df8:	ffc5a783          	lw	a5,-4(a1)
    7dfc:	ff010113          	addi	sp,sp,-16
    7e00:	00812423          	sw	s0,8(sp)
    7e04:	00112623          	sw	ra,12(sp)
    7e08:	00912223          	sw	s1,4(sp)
    7e0c:	ffc58413          	addi	s0,a1,-4
    7e10:	0007d463          	bgez	a5,7e18 <_free_r+0x24>
    7e14:	00f40433          	add	s0,s0,a5
    7e18:	00050493          	mv	s1,a0
    7e1c:	00001097          	auipc	ra,0x1
    7e20:	a68080e7          	jalr	-1432(ra) # 8884 <__malloc_lock>
    7e24:	00ff9797          	auipc	a5,0xff9
    7e28:	d9878793          	addi	a5,a5,-616 # 1000bbc <__malloc_free_list>
    7e2c:	0007a783          	lw	a5,0(a5)
    7e30:	02079663          	bnez	a5,7e5c <_free_r+0x68>
    7e34:	00042223          	sw	zero,4(s0)
    7e38:	00ff9797          	auipc	a5,0xff9
    7e3c:	d887a223          	sw	s0,-636(a5) # 1000bbc <__malloc_free_list>
    7e40:	00812403          	lw	s0,8(sp)
    7e44:	00c12083          	lw	ra,12(sp)
    7e48:	00048513          	mv	a0,s1
    7e4c:	00412483          	lw	s1,4(sp)
    7e50:	01010113          	addi	sp,sp,16
    7e54:	00001317          	auipc	t1,0x1
    7e58:	a3430067          	jr	-1484(t1) # 8888 <__malloc_unlock>
    7e5c:	02f47663          	bgeu	s0,a5,7e88 <_free_r+0x94>
    7e60:	00042683          	lw	a3,0(s0)
    7e64:	00d40733          	add	a4,s0,a3
    7e68:	00e79a63          	bne	a5,a4,7e7c <_free_r+0x88>
    7e6c:	0007a703          	lw	a4,0(a5)
    7e70:	0047a783          	lw	a5,4(a5)
    7e74:	00d70733          	add	a4,a4,a3
    7e78:	00e42023          	sw	a4,0(s0)
    7e7c:	00f42223          	sw	a5,4(s0)
    7e80:	fb9ff06f          	j	7e38 <_free_r+0x44>
    7e84:	00070793          	mv	a5,a4
    7e88:	0047a703          	lw	a4,4(a5)
    7e8c:	00070463          	beqz	a4,7e94 <_free_r+0xa0>
    7e90:	fee47ae3          	bgeu	s0,a4,7e84 <_free_r+0x90>
    7e94:	0007a683          	lw	a3,0(a5)
    7e98:	00d78633          	add	a2,a5,a3
    7e9c:	02861863          	bne	a2,s0,7ecc <_free_r+0xd8>
    7ea0:	00042603          	lw	a2,0(s0)
    7ea4:	00c686b3          	add	a3,a3,a2
    7ea8:	00d7a023          	sw	a3,0(a5)
    7eac:	00d78633          	add	a2,a5,a3
    7eb0:	f8c718e3          	bne	a4,a2,7e40 <_free_r+0x4c>
    7eb4:	00072603          	lw	a2,0(a4)
    7eb8:	00472703          	lw	a4,4(a4)
    7ebc:	00d606b3          	add	a3,a2,a3
    7ec0:	00d7a023          	sw	a3,0(a5)
    7ec4:	00e7a223          	sw	a4,4(a5)
    7ec8:	f79ff06f          	j	7e40 <_free_r+0x4c>
    7ecc:	00c47863          	bgeu	s0,a2,7edc <_free_r+0xe8>
    7ed0:	00c00793          	li	a5,12
    7ed4:	00f4a023          	sw	a5,0(s1)
    7ed8:	f69ff06f          	j	7e40 <_free_r+0x4c>
    7edc:	00042603          	lw	a2,0(s0)
    7ee0:	00c406b3          	add	a3,s0,a2
    7ee4:	00d71a63          	bne	a4,a3,7ef8 <_free_r+0x104>
    7ee8:	00072683          	lw	a3,0(a4)
    7eec:	00472703          	lw	a4,4(a4)
    7ef0:	00c686b3          	add	a3,a3,a2
    7ef4:	00d42023          	sw	a3,0(s0)
    7ef8:	00e42223          	sw	a4,4(s0)
    7efc:	0087a223          	sw	s0,4(a5)
    7f00:	f41ff06f          	j	7e40 <_free_r+0x4c>
    7f04:	00008067          	ret

00007f08 <_malloc_r>:
    7f08:	fe010113          	addi	sp,sp,-32
    7f0c:	00912a23          	sw	s1,20(sp)
    7f10:	00358493          	addi	s1,a1,3
    7f14:	ffc4f493          	andi	s1,s1,-4
    7f18:	00112e23          	sw	ra,28(sp)
    7f1c:	00812c23          	sw	s0,24(sp)
    7f20:	01212823          	sw	s2,16(sp)
    7f24:	01312623          	sw	s3,12(sp)
    7f28:	00848493          	addi	s1,s1,8
    7f2c:	00c00793          	li	a5,12
    7f30:	08f4f263          	bgeu	s1,a5,7fb4 <_malloc_r+0xac>
    7f34:	00c00493          	li	s1,12
    7f38:	08b4e063          	bltu	s1,a1,7fb8 <_malloc_r+0xb0>
    7f3c:	00050913          	mv	s2,a0
    7f40:	00001097          	auipc	ra,0x1
    7f44:	944080e7          	jalr	-1724(ra) # 8884 <__malloc_lock>
    7f48:	00ff9797          	auipc	a5,0xff9
    7f4c:	c7478793          	addi	a5,a5,-908 # 1000bbc <__malloc_free_list>
    7f50:	0007a703          	lw	a4,0(a5)
    7f54:	00070413          	mv	s0,a4
    7f58:	08041463          	bnez	s0,7fe0 <_malloc_r+0xd8>
    7f5c:	00ff9797          	auipc	a5,0xff9
    7f60:	c6478793          	addi	a5,a5,-924 # 1000bc0 <__malloc_sbrk_start>
    7f64:	0007a783          	lw	a5,0(a5)
    7f68:	00079e63          	bnez	a5,7f84 <_malloc_r+0x7c>
    7f6c:	00000593          	li	a1,0
    7f70:	00090513          	mv	a0,s2
    7f74:	00000097          	auipc	ra,0x0
    7f78:	5a4080e7          	jalr	1444(ra) # 8518 <_sbrk_r>
    7f7c:	00ff9797          	auipc	a5,0xff9
    7f80:	c4a7a223          	sw	a0,-956(a5) # 1000bc0 <__malloc_sbrk_start>
    7f84:	00048593          	mv	a1,s1
    7f88:	00090513          	mv	a0,s2
    7f8c:	00000097          	auipc	ra,0x0
    7f90:	58c080e7          	jalr	1420(ra) # 8518 <_sbrk_r>
    7f94:	fff00993          	li	s3,-1
    7f98:	0d351063          	bne	a0,s3,8058 <_malloc_r+0x150>
    7f9c:	00c00793          	li	a5,12
    7fa0:	00f92023          	sw	a5,0(s2)
    7fa4:	00090513          	mv	a0,s2
    7fa8:	00001097          	auipc	ra,0x1
    7fac:	8e0080e7          	jalr	-1824(ra) # 8888 <__malloc_unlock>
    7fb0:	0100006f          	j	7fc0 <_malloc_r+0xb8>
    7fb4:	f804d2e3          	bgez	s1,7f38 <_malloc_r+0x30>
    7fb8:	00c00793          	li	a5,12
    7fbc:	00f52023          	sw	a5,0(a0)
    7fc0:	00000513          	li	a0,0
    7fc4:	01c12083          	lw	ra,28(sp)
    7fc8:	01812403          	lw	s0,24(sp)
    7fcc:	01412483          	lw	s1,20(sp)
    7fd0:	01012903          	lw	s2,16(sp)
    7fd4:	00c12983          	lw	s3,12(sp)
    7fd8:	02010113          	addi	sp,sp,32
    7fdc:	00008067          	ret
    7fe0:	00042783          	lw	a5,0(s0)
    7fe4:	409787b3          	sub	a5,a5,s1
    7fe8:	0607c263          	bltz	a5,804c <_malloc_r+0x144>
    7fec:	00b00693          	li	a3,11
    7ff0:	00f6fa63          	bgeu	a3,a5,8004 <_malloc_r+0xfc>
    7ff4:	00f42023          	sw	a5,0(s0)
    7ff8:	00f40433          	add	s0,s0,a5
    7ffc:	00942023          	sw	s1,0(s0)
    8000:	0140006f          	j	8014 <_malloc_r+0x10c>
    8004:	00442783          	lw	a5,4(s0)
    8008:	02871e63          	bne	a4,s0,8044 <_malloc_r+0x13c>
    800c:	00ff9717          	auipc	a4,0xff9
    8010:	baf72823          	sw	a5,-1104(a4) # 1000bbc <__malloc_free_list>
    8014:	00090513          	mv	a0,s2
    8018:	00001097          	auipc	ra,0x1
    801c:	870080e7          	jalr	-1936(ra) # 8888 <__malloc_unlock>
    8020:	00b40513          	addi	a0,s0,11
    8024:	00440793          	addi	a5,s0,4
    8028:	ff857513          	andi	a0,a0,-8
    802c:	40f50733          	sub	a4,a0,a5
    8030:	f8070ae3          	beqz	a4,7fc4 <_malloc_r+0xbc>
    8034:	00e40433          	add	s0,s0,a4
    8038:	40a787b3          	sub	a5,a5,a0
    803c:	00f42023          	sw	a5,0(s0)
    8040:	f85ff06f          	j	7fc4 <_malloc_r+0xbc>
    8044:	00f72223          	sw	a5,4(a4)
    8048:	fcdff06f          	j	8014 <_malloc_r+0x10c>
    804c:	00040713          	mv	a4,s0
    8050:	00442403          	lw	s0,4(s0)
    8054:	f05ff06f          	j	7f58 <_malloc_r+0x50>
    8058:	00350413          	addi	s0,a0,3
    805c:	ffc47413          	andi	s0,s0,-4
    8060:	f8850ee3          	beq	a0,s0,7ffc <_malloc_r+0xf4>
    8064:	40a405b3          	sub	a1,s0,a0
    8068:	00090513          	mv	a0,s2
    806c:	00000097          	auipc	ra,0x0
    8070:	4ac080e7          	jalr	1196(ra) # 8518 <_sbrk_r>
    8074:	f93514e3          	bne	a0,s3,7ffc <_malloc_r+0xf4>
    8078:	f25ff06f          	j	7f9c <_malloc_r+0x94>

0000807c <__sfputc_r>:
    807c:	00862783          	lw	a5,8(a2)
    8080:	fff78793          	addi	a5,a5,-1
    8084:	00f62423          	sw	a5,8(a2)
    8088:	0007de63          	bgez	a5,80a4 <__sfputc_r+0x28>
    808c:	01862703          	lw	a4,24(a2)
    8090:	00e7c663          	blt	a5,a4,809c <__sfputc_r+0x20>
    8094:	00a00793          	li	a5,10
    8098:	00f59663          	bne	a1,a5,80a4 <__sfputc_r+0x28>
    809c:	ffffd317          	auipc	t1,0xffffd
    80a0:	18430067          	jr	388(t1) # 5220 <__swbuf_r>
    80a4:	00062783          	lw	a5,0(a2)
    80a8:	00058513          	mv	a0,a1
    80ac:	00178713          	addi	a4,a5,1
    80b0:	00e62023          	sw	a4,0(a2)
    80b4:	00b78023          	sb	a1,0(a5)
    80b8:	00008067          	ret

000080bc <__sfputs_r>:
    80bc:	fe010113          	addi	sp,sp,-32
    80c0:	00812c23          	sw	s0,24(sp)
    80c4:	00912a23          	sw	s1,20(sp)
    80c8:	01212823          	sw	s2,16(sp)
    80cc:	01312623          	sw	s3,12(sp)
    80d0:	01412423          	sw	s4,8(sp)
    80d4:	00112e23          	sw	ra,28(sp)
    80d8:	00050913          	mv	s2,a0
    80dc:	00058993          	mv	s3,a1
    80e0:	00060413          	mv	s0,a2
    80e4:	00d604b3          	add	s1,a2,a3
    80e8:	fff00a13          	li	s4,-1
    80ec:	00941663          	bne	s0,s1,80f8 <__sfputs_r+0x3c>
    80f0:	00000513          	li	a0,0
    80f4:	0200006f          	j	8114 <__sfputs_r+0x58>
    80f8:	00044583          	lbu	a1,0(s0)
    80fc:	00098613          	mv	a2,s3
    8100:	00090513          	mv	a0,s2
    8104:	00000097          	auipc	ra,0x0
    8108:	f78080e7          	jalr	-136(ra) # 807c <__sfputc_r>
    810c:	00140413          	addi	s0,s0,1
    8110:	fd451ee3          	bne	a0,s4,80ec <__sfputs_r+0x30>
    8114:	01c12083          	lw	ra,28(sp)
    8118:	01812403          	lw	s0,24(sp)
    811c:	01412483          	lw	s1,20(sp)
    8120:	01012903          	lw	s2,16(sp)
    8124:	00c12983          	lw	s3,12(sp)
    8128:	00812a03          	lw	s4,8(sp)
    812c:	02010113          	addi	sp,sp,32
    8130:	00008067          	ret

00008134 <_vfiprintf_r>:
    8134:	f6010113          	addi	sp,sp,-160
    8138:	08812c23          	sw	s0,152(sp)
    813c:	08912a23          	sw	s1,148(sp)
    8140:	09212823          	sw	s2,144(sp)
    8144:	09312623          	sw	s3,140(sp)
    8148:	08112e23          	sw	ra,156(sp)
    814c:	09412423          	sw	s4,136(sp)
    8150:	09512223          	sw	s5,132(sp)
    8154:	09612023          	sw	s6,128(sp)
    8158:	07712e23          	sw	s7,124(sp)
    815c:	07812c23          	sw	s8,120(sp)
    8160:	07912a23          	sw	s9,116(sp)
    8164:	00050993          	mv	s3,a0
    8168:	00058493          	mv	s1,a1
    816c:	00060913          	mv	s2,a2
    8170:	00068413          	mv	s0,a3
    8174:	00050a63          	beqz	a0,8188 <_vfiprintf_r+0x54>
    8178:	01852783          	lw	a5,24(a0)
    817c:	00079663          	bnez	a5,8188 <_vfiprintf_r+0x54>
    8180:	fffff097          	auipc	ra,0xfffff
    8184:	c38080e7          	jalr	-968(ra) # 6db8 <__sinit>
    8188:	00ff8797          	auipc	a5,0xff8
    818c:	5a878793          	addi	a5,a5,1448 # 1000730 <__sf_fake_stdin>
    8190:	12f49663          	bne	s1,a5,82bc <_vfiprintf_r+0x188>
    8194:	0049a483          	lw	s1,4(s3)
    8198:	00c4d783          	lhu	a5,12(s1)
    819c:	0087f793          	andi	a5,a5,8
    81a0:	14078263          	beqz	a5,82e4 <_vfiprintf_r+0x1b0>
    81a4:	0104a783          	lw	a5,16(s1)
    81a8:	12078e63          	beqz	a5,82e4 <_vfiprintf_r+0x1b0>
    81ac:	02000793          	li	a5,32
    81b0:	02f104a3          	sb	a5,41(sp)
    81b4:	03000793          	li	a5,48
    81b8:	02012223          	sw	zero,36(sp)
    81bc:	02f10523          	sb	a5,42(sp)
    81c0:	00812623          	sw	s0,12(sp)
    81c4:	02500b93          	li	s7,37
    81c8:	00ff8a97          	auipc	s5,0xff8
    81cc:	6b4a8a93          	addi	s5,s5,1716 # 100087c <p05.3310+0xc>
    81d0:	00100c13          	li	s8,1
    81d4:	00a00b13          	li	s6,10
    81d8:	00090413          	mv	s0,s2
    81dc:	00044783          	lbu	a5,0(s0)
    81e0:	00078463          	beqz	a5,81e8 <_vfiprintf_r+0xb4>
    81e4:	15779663          	bne	a5,s7,8330 <_vfiprintf_r+0x1fc>
    81e8:	41240cb3          	sub	s9,s0,s2
    81ec:	020c8863          	beqz	s9,821c <_vfiprintf_r+0xe8>
    81f0:	000c8693          	mv	a3,s9
    81f4:	00090613          	mv	a2,s2
    81f8:	00048593          	mv	a1,s1
    81fc:	00098513          	mv	a0,s3
    8200:	00000097          	auipc	ra,0x0
    8204:	ebc080e7          	jalr	-324(ra) # 80bc <__sfputs_r>
    8208:	fff00793          	li	a5,-1
    820c:	2cf50a63          	beq	a0,a5,84e0 <_vfiprintf_r+0x3ac>
    8210:	02412683          	lw	a3,36(sp)
    8214:	019686b3          	add	a3,a3,s9
    8218:	02d12223          	sw	a3,36(sp)
    821c:	00044783          	lbu	a5,0(s0)
    8220:	2c078063          	beqz	a5,84e0 <_vfiprintf_r+0x3ac>
    8224:	fff00793          	li	a5,-1
    8228:	00140913          	addi	s2,s0,1
    822c:	00012823          	sw	zero,16(sp)
    8230:	00012e23          	sw	zero,28(sp)
    8234:	00f12a23          	sw	a5,20(sp)
    8238:	00012c23          	sw	zero,24(sp)
    823c:	040109a3          	sb	zero,83(sp)
    8240:	06012423          	sw	zero,104(sp)
    8244:	00094583          	lbu	a1,0(s2)
    8248:	00500613          	li	a2,5
    824c:	000a8513          	mv	a0,s5
    8250:	fffff097          	auipc	ra,0xfffff
    8254:	ff0080e7          	jalr	-16(ra) # 7240 <memchr>
    8258:	00190413          	addi	s0,s2,1
    825c:	01012783          	lw	a5,16(sp)
    8260:	0c051c63          	bnez	a0,8338 <_vfiprintf_r+0x204>
    8264:	0107f713          	andi	a4,a5,16
    8268:	00070663          	beqz	a4,8274 <_vfiprintf_r+0x140>
    826c:	02000713          	li	a4,32
    8270:	04e109a3          	sb	a4,83(sp)
    8274:	0087f713          	andi	a4,a5,8
    8278:	00070663          	beqz	a4,8284 <_vfiprintf_r+0x150>
    827c:	02b00713          	li	a4,43
    8280:	04e109a3          	sb	a4,83(sp)
    8284:	00094683          	lbu	a3,0(s2)
    8288:	02a00713          	li	a4,42
    828c:	0ce68263          	beq	a3,a4,8350 <_vfiprintf_r+0x21c>
    8290:	01c12783          	lw	a5,28(sp)
    8294:	00090413          	mv	s0,s2
    8298:	00000693          	li	a3,0
    829c:	00900613          	li	a2,9
    82a0:	00044703          	lbu	a4,0(s0)
    82a4:	00140593          	addi	a1,s0,1
    82a8:	fd070713          	addi	a4,a4,-48
    82ac:	10e67463          	bgeu	a2,a4,83b4 <_vfiprintf_r+0x280>
    82b0:	0a068c63          	beqz	a3,8368 <_vfiprintf_r+0x234>
    82b4:	00f12e23          	sw	a5,28(sp)
    82b8:	0b00006f          	j	8368 <_vfiprintf_r+0x234>
    82bc:	00ff8797          	auipc	a5,0xff8
    82c0:	49478793          	addi	a5,a5,1172 # 1000750 <__sf_fake_stdout>
    82c4:	00f49663          	bne	s1,a5,82d0 <_vfiprintf_r+0x19c>
    82c8:	0089a483          	lw	s1,8(s3)
    82cc:	ecdff06f          	j	8198 <_vfiprintf_r+0x64>
    82d0:	00ff8797          	auipc	a5,0xff8
    82d4:	44078793          	addi	a5,a5,1088 # 1000710 <__sf_fake_stderr>
    82d8:	ecf490e3          	bne	s1,a5,8198 <_vfiprintf_r+0x64>
    82dc:	00c9a483          	lw	s1,12(s3)
    82e0:	eb9ff06f          	j	8198 <_vfiprintf_r+0x64>
    82e4:	00048593          	mv	a1,s1
    82e8:	00098513          	mv	a0,s3
    82ec:	ffffd097          	auipc	ra,0xffffd
    82f0:	07c080e7          	jalr	124(ra) # 5368 <__swsetup_r>
    82f4:	ea050ce3          	beqz	a0,81ac <_vfiprintf_r+0x78>
    82f8:	fff00513          	li	a0,-1
    82fc:	09c12083          	lw	ra,156(sp)
    8300:	09812403          	lw	s0,152(sp)
    8304:	09412483          	lw	s1,148(sp)
    8308:	09012903          	lw	s2,144(sp)
    830c:	08c12983          	lw	s3,140(sp)
    8310:	08812a03          	lw	s4,136(sp)
    8314:	08412a83          	lw	s5,132(sp)
    8318:	08012b03          	lw	s6,128(sp)
    831c:	07c12b83          	lw	s7,124(sp)
    8320:	07812c03          	lw	s8,120(sp)
    8324:	07412c83          	lw	s9,116(sp)
    8328:	0a010113          	addi	sp,sp,160
    832c:	00008067          	ret
    8330:	00140413          	addi	s0,s0,1
    8334:	ea9ff06f          	j	81dc <_vfiprintf_r+0xa8>
    8338:	41550533          	sub	a0,a0,s5
    833c:	00ac1533          	sll	a0,s8,a0
    8340:	00a7e7b3          	or	a5,a5,a0
    8344:	00f12823          	sw	a5,16(sp)
    8348:	00040913          	mv	s2,s0
    834c:	ef9ff06f          	j	8244 <_vfiprintf_r+0x110>
    8350:	00c12703          	lw	a4,12(sp)
    8354:	00470693          	addi	a3,a4,4
    8358:	00072703          	lw	a4,0(a4)
    835c:	00d12623          	sw	a3,12(sp)
    8360:	04074063          	bltz	a4,83a0 <_vfiprintf_r+0x26c>
    8364:	00e12e23          	sw	a4,28(sp)
    8368:	00044703          	lbu	a4,0(s0)
    836c:	02e00793          	li	a5,46
    8370:	08f71463          	bne	a4,a5,83f8 <_vfiprintf_r+0x2c4>
    8374:	00144703          	lbu	a4,1(s0)
    8378:	02a00793          	li	a5,42
    837c:	04f71a63          	bne	a4,a5,83d0 <_vfiprintf_r+0x29c>
    8380:	00c12783          	lw	a5,12(sp)
    8384:	00240413          	addi	s0,s0,2
    8388:	00478713          	addi	a4,a5,4
    838c:	0007a783          	lw	a5,0(a5)
    8390:	00e12623          	sw	a4,12(sp)
    8394:	0207ca63          	bltz	a5,83c8 <_vfiprintf_r+0x294>
    8398:	00f12a23          	sw	a5,20(sp)
    839c:	05c0006f          	j	83f8 <_vfiprintf_r+0x2c4>
    83a0:	40e00733          	neg	a4,a4
    83a4:	0027e793          	ori	a5,a5,2
    83a8:	00e12e23          	sw	a4,28(sp)
    83ac:	00f12823          	sw	a5,16(sp)
    83b0:	fb9ff06f          	j	8368 <_vfiprintf_r+0x234>
    83b4:	036787b3          	mul	a5,a5,s6
    83b8:	00100693          	li	a3,1
    83bc:	00058413          	mv	s0,a1
    83c0:	00e787b3          	add	a5,a5,a4
    83c4:	eddff06f          	j	82a0 <_vfiprintf_r+0x16c>
    83c8:	fff00793          	li	a5,-1
    83cc:	fcdff06f          	j	8398 <_vfiprintf_r+0x264>
    83d0:	00140413          	addi	s0,s0,1
    83d4:	00012a23          	sw	zero,20(sp)
    83d8:	00000693          	li	a3,0
    83dc:	00000793          	li	a5,0
    83e0:	00900613          	li	a2,9
    83e4:	00044703          	lbu	a4,0(s0)
    83e8:	00140593          	addi	a1,s0,1
    83ec:	fd070713          	addi	a4,a4,-48
    83f0:	0ae67063          	bgeu	a2,a4,8490 <_vfiprintf_r+0x35c>
    83f4:	fa0692e3          	bnez	a3,8398 <_vfiprintf_r+0x264>
    83f8:	00044583          	lbu	a1,0(s0)
    83fc:	00300613          	li	a2,3
    8400:	00ff8517          	auipc	a0,0xff8
    8404:	48450513          	addi	a0,a0,1156 # 1000884 <p05.3310+0x14>
    8408:	fffff097          	auipc	ra,0xfffff
    840c:	e38080e7          	jalr	-456(ra) # 7240 <memchr>
    8410:	02050463          	beqz	a0,8438 <_vfiprintf_r+0x304>
    8414:	00ff8797          	auipc	a5,0xff8
    8418:	47078793          	addi	a5,a5,1136 # 1000884 <p05.3310+0x14>
    841c:	40f50533          	sub	a0,a0,a5
    8420:	04000793          	li	a5,64
    8424:	00a797b3          	sll	a5,a5,a0
    8428:	01012503          	lw	a0,16(sp)
    842c:	00140413          	addi	s0,s0,1
    8430:	00f56533          	or	a0,a0,a5
    8434:	00a12823          	sw	a0,16(sp)
    8438:	00044583          	lbu	a1,0(s0)
    843c:	00600613          	li	a2,6
    8440:	00ff8517          	auipc	a0,0xff8
    8444:	44850513          	addi	a0,a0,1096 # 1000888 <p05.3310+0x18>
    8448:	00140913          	addi	s2,s0,1
    844c:	02b10423          	sb	a1,40(sp)
    8450:	fffff097          	auipc	ra,0xfffff
    8454:	df0080e7          	jalr	-528(ra) # 7240 <memchr>
    8458:	08050e63          	beqz	a0,84f4 <_vfiprintf_r+0x3c0>
    845c:	ffffc797          	auipc	a5,0xffffc
    8460:	d3478793          	addi	a5,a5,-716 # 4190 <_printf_float>
    8464:	04079863          	bnez	a5,84b4 <_vfiprintf_r+0x380>
    8468:	01012703          	lw	a4,16(sp)
    846c:	00c12783          	lw	a5,12(sp)
    8470:	10077713          	andi	a4,a4,256
    8474:	02070863          	beqz	a4,84a4 <_vfiprintf_r+0x370>
    8478:	00478793          	addi	a5,a5,4
    847c:	00f12623          	sw	a5,12(sp)
    8480:	02412783          	lw	a5,36(sp)
    8484:	014787b3          	add	a5,a5,s4
    8488:	02f12223          	sw	a5,36(sp)
    848c:	d4dff06f          	j	81d8 <_vfiprintf_r+0xa4>
    8490:	036787b3          	mul	a5,a5,s6
    8494:	00100693          	li	a3,1
    8498:	00058413          	mv	s0,a1
    849c:	00e787b3          	add	a5,a5,a4
    84a0:	f45ff06f          	j	83e4 <_vfiprintf_r+0x2b0>
    84a4:	00778793          	addi	a5,a5,7
    84a8:	ff87f793          	andi	a5,a5,-8
    84ac:	00878793          	addi	a5,a5,8
    84b0:	fcdff06f          	j	847c <_vfiprintf_r+0x348>
    84b4:	00c10713          	addi	a4,sp,12
    84b8:	00000697          	auipc	a3,0x0
    84bc:	c0468693          	addi	a3,a3,-1020 # 80bc <__sfputs_r>
    84c0:	00048613          	mv	a2,s1
    84c4:	01010593          	addi	a1,sp,16
    84c8:	00098513          	mv	a0,s3
    84cc:	ffffc097          	auipc	ra,0xffffc
    84d0:	cc4080e7          	jalr	-828(ra) # 4190 <_printf_float>
    84d4:	fff00793          	li	a5,-1
    84d8:	00050a13          	mv	s4,a0
    84dc:	faf512e3          	bne	a0,a5,8480 <_vfiprintf_r+0x34c>
    84e0:	00c4d783          	lhu	a5,12(s1)
    84e4:	0407f793          	andi	a5,a5,64
    84e8:	e00798e3          	bnez	a5,82f8 <_vfiprintf_r+0x1c4>
    84ec:	02412503          	lw	a0,36(sp)
    84f0:	e0dff06f          	j	82fc <_vfiprintf_r+0x1c8>
    84f4:	00c10713          	addi	a4,sp,12
    84f8:	00000697          	auipc	a3,0x0
    84fc:	bc468693          	addi	a3,a3,-1084 # 80bc <__sfputs_r>
    8500:	00048613          	mv	a2,s1
    8504:	01010593          	addi	a1,sp,16
    8508:	00098513          	mv	a0,s3
    850c:	ffffc097          	auipc	ra,0xffffc
    8510:	5f0080e7          	jalr	1520(ra) # 4afc <_printf_i>
    8514:	fc1ff06f          	j	84d4 <_vfiprintf_r+0x3a0>

00008518 <_sbrk_r>:
    8518:	ff010113          	addi	sp,sp,-16
    851c:	00812423          	sw	s0,8(sp)
    8520:	00050413          	mv	s0,a0
    8524:	00058513          	mv	a0,a1
    8528:	00ff8797          	auipc	a5,0xff8
    852c:	6a07a823          	sw	zero,1712(a5) # 1000bd8 <errno>
    8530:	00112623          	sw	ra,12(sp)
    8534:	00002097          	auipc	ra,0x2
    8538:	0a0080e7          	jalr	160(ra) # a5d4 <_sbrk>
    853c:	fff00793          	li	a5,-1
    8540:	00f51c63          	bne	a0,a5,8558 <_sbrk_r+0x40>
    8544:	00ff8797          	auipc	a5,0xff8
    8548:	69478793          	addi	a5,a5,1684 # 1000bd8 <errno>
    854c:	0007a783          	lw	a5,0(a5)
    8550:	00078463          	beqz	a5,8558 <_sbrk_r+0x40>
    8554:	00f42023          	sw	a5,0(s0)
    8558:	00c12083          	lw	ra,12(sp)
    855c:	00812403          	lw	s0,8(sp)
    8560:	01010113          	addi	sp,sp,16
    8564:	00008067          	ret

00008568 <__sread>:
    8568:	ff010113          	addi	sp,sp,-16
    856c:	00812423          	sw	s0,8(sp)
    8570:	00058413          	mv	s0,a1
    8574:	00e59583          	lh	a1,14(a1)
    8578:	00112623          	sw	ra,12(sp)
    857c:	00000097          	auipc	ra,0x0
    8580:	310080e7          	jalr	784(ra) # 888c <_read_r>
    8584:	02054063          	bltz	a0,85a4 <__sread+0x3c>
    8588:	05442783          	lw	a5,84(s0)
    858c:	00a787b3          	add	a5,a5,a0
    8590:	04f42a23          	sw	a5,84(s0)
    8594:	00c12083          	lw	ra,12(sp)
    8598:	00812403          	lw	s0,8(sp)
    859c:	01010113          	addi	sp,sp,16
    85a0:	00008067          	ret
    85a4:	00c45783          	lhu	a5,12(s0)
    85a8:	fffff737          	lui	a4,0xfffff
    85ac:	fff70713          	addi	a4,a4,-1 # ffffefff <__freertos_irq_stack_top+0xfefeefff>
    85b0:	00e7f7b3          	and	a5,a5,a4
    85b4:	00f41623          	sh	a5,12(s0)
    85b8:	fddff06f          	j	8594 <__sread+0x2c>

000085bc <__swrite>:
    85bc:	00c5d783          	lhu	a5,12(a1)
    85c0:	fe010113          	addi	sp,sp,-32
    85c4:	00812c23          	sw	s0,24(sp)
    85c8:	00912a23          	sw	s1,20(sp)
    85cc:	01212823          	sw	s2,16(sp)
    85d0:	01312623          	sw	s3,12(sp)
    85d4:	00112e23          	sw	ra,28(sp)
    85d8:	1007f793          	andi	a5,a5,256
    85dc:	00050493          	mv	s1,a0
    85e0:	00058413          	mv	s0,a1
    85e4:	00060913          	mv	s2,a2
    85e8:	00068993          	mv	s3,a3
    85ec:	00078c63          	beqz	a5,8604 <__swrite+0x48>
    85f0:	00e59583          	lh	a1,14(a1)
    85f4:	00200693          	li	a3,2
    85f8:	00000613          	li	a2,0
    85fc:	00000097          	auipc	ra,0x0
    8600:	230080e7          	jalr	560(ra) # 882c <_lseek_r>
    8604:	00c45783          	lhu	a5,12(s0)
    8608:	fffff737          	lui	a4,0xfffff
    860c:	fff70713          	addi	a4,a4,-1 # ffffefff <__freertos_irq_stack_top+0xfefeefff>
    8610:	00e7f7b3          	and	a5,a5,a4
    8614:	00f41623          	sh	a5,12(s0)
    8618:	00e41583          	lh	a1,14(s0)
    861c:	01812403          	lw	s0,24(sp)
    8620:	01c12083          	lw	ra,28(sp)
    8624:	00098693          	mv	a3,s3
    8628:	00090613          	mv	a2,s2
    862c:	00c12983          	lw	s3,12(sp)
    8630:	01012903          	lw	s2,16(sp)
    8634:	00048513          	mv	a0,s1
    8638:	01412483          	lw	s1,20(sp)
    863c:	02010113          	addi	sp,sp,32
    8640:	00000317          	auipc	t1,0x0
    8644:	0a030067          	jr	160(t1) # 86e0 <_write_r>

00008648 <__sseek>:
    8648:	ff010113          	addi	sp,sp,-16
    864c:	00812423          	sw	s0,8(sp)
    8650:	00058413          	mv	s0,a1
    8654:	00e59583          	lh	a1,14(a1)
    8658:	00112623          	sw	ra,12(sp)
    865c:	00000097          	auipc	ra,0x0
    8660:	1d0080e7          	jalr	464(ra) # 882c <_lseek_r>
    8664:	fff00793          	li	a5,-1
    8668:	00c45703          	lhu	a4,12(s0)
    866c:	02f51263          	bne	a0,a5,8690 <__sseek+0x48>
    8670:	fffff7b7          	lui	a5,0xfffff
    8674:	fff78793          	addi	a5,a5,-1 # ffffefff <__freertos_irq_stack_top+0xfefeefff>
    8678:	00e7f7b3          	and	a5,a5,a4
    867c:	00f41623          	sh	a5,12(s0)
    8680:	00c12083          	lw	ra,12(sp)
    8684:	00812403          	lw	s0,8(sp)
    8688:	01010113          	addi	sp,sp,16
    868c:	00008067          	ret
    8690:	000017b7          	lui	a5,0x1
    8694:	00f767b3          	or	a5,a4,a5
    8698:	00f41623          	sh	a5,12(s0)
    869c:	04a42a23          	sw	a0,84(s0)
    86a0:	fe1ff06f          	j	8680 <__sseek+0x38>

000086a4 <__sclose>:
    86a4:	00e59583          	lh	a1,14(a1)
    86a8:	00000317          	auipc	t1,0x0
    86ac:	09030067          	jr	144(t1) # 8738 <_close_r>

000086b0 <__ascii_wctomb>:
    86b0:	02058463          	beqz	a1,86d8 <__ascii_wctomb+0x28>
    86b4:	0ff00793          	li	a5,255
    86b8:	00c7fa63          	bgeu	a5,a2,86cc <__ascii_wctomb+0x1c>
    86bc:	08a00793          	li	a5,138
    86c0:	00f52023          	sw	a5,0(a0)
    86c4:	fff00513          	li	a0,-1
    86c8:	00008067          	ret
    86cc:	00c58023          	sb	a2,0(a1)
    86d0:	00100513          	li	a0,1
    86d4:	00008067          	ret
    86d8:	00000513          	li	a0,0
    86dc:	00008067          	ret

000086e0 <_write_r>:
    86e0:	ff010113          	addi	sp,sp,-16
    86e4:	00812423          	sw	s0,8(sp)
    86e8:	00050413          	mv	s0,a0
    86ec:	00058513          	mv	a0,a1
    86f0:	00060593          	mv	a1,a2
    86f4:	00068613          	mv	a2,a3
    86f8:	00ff8797          	auipc	a5,0xff8
    86fc:	4e07a023          	sw	zero,1248(a5) # 1000bd8 <errno>
    8700:	00112623          	sw	ra,12(sp)
    8704:	ffffb097          	auipc	ra,0xffffb
    8708:	868080e7          	jalr	-1944(ra) # 2f6c <_write>
    870c:	fff00793          	li	a5,-1
    8710:	00f51c63          	bne	a0,a5,8728 <_write_r+0x48>
    8714:	00ff8797          	auipc	a5,0xff8
    8718:	4c478793          	addi	a5,a5,1220 # 1000bd8 <errno>
    871c:	0007a783          	lw	a5,0(a5)
    8720:	00078463          	beqz	a5,8728 <_write_r+0x48>
    8724:	00f42023          	sw	a5,0(s0)
    8728:	00c12083          	lw	ra,12(sp)
    872c:	00812403          	lw	s0,8(sp)
    8730:	01010113          	addi	sp,sp,16
    8734:	00008067          	ret

00008738 <_close_r>:
    8738:	ff010113          	addi	sp,sp,-16
    873c:	00812423          	sw	s0,8(sp)
    8740:	00050413          	mv	s0,a0
    8744:	00058513          	mv	a0,a1
    8748:	00ff8797          	auipc	a5,0xff8
    874c:	4807a823          	sw	zero,1168(a5) # 1000bd8 <errno>
    8750:	00112623          	sw	ra,12(sp)
    8754:	00002097          	auipc	ra,0x2
    8758:	e1c080e7          	jalr	-484(ra) # a570 <_close>
    875c:	fff00793          	li	a5,-1
    8760:	00f51c63          	bne	a0,a5,8778 <_close_r+0x40>
    8764:	00ff8797          	auipc	a5,0xff8
    8768:	47478793          	addi	a5,a5,1140 # 1000bd8 <errno>
    876c:	0007a783          	lw	a5,0(a5)
    8770:	00078463          	beqz	a5,8778 <_close_r+0x40>
    8774:	00f42023          	sw	a5,0(s0)
    8778:	00c12083          	lw	ra,12(sp)
    877c:	00812403          	lw	s0,8(sp)
    8780:	01010113          	addi	sp,sp,16
    8784:	00008067          	ret

00008788 <_fstat_r>:
    8788:	ff010113          	addi	sp,sp,-16
    878c:	00812423          	sw	s0,8(sp)
    8790:	00050413          	mv	s0,a0
    8794:	00058513          	mv	a0,a1
    8798:	00060593          	mv	a1,a2
    879c:	00ff8797          	auipc	a5,0xff8
    87a0:	4207ae23          	sw	zero,1084(a5) # 1000bd8 <errno>
    87a4:	00112623          	sw	ra,12(sp)
    87a8:	00002097          	auipc	ra,0x2
    87ac:	ddc080e7          	jalr	-548(ra) # a584 <_fstat>
    87b0:	fff00793          	li	a5,-1
    87b4:	00f51c63          	bne	a0,a5,87cc <_fstat_r+0x44>
    87b8:	00ff8797          	auipc	a5,0xff8
    87bc:	42078793          	addi	a5,a5,1056 # 1000bd8 <errno>
    87c0:	0007a783          	lw	a5,0(a5)
    87c4:	00078463          	beqz	a5,87cc <_fstat_r+0x44>
    87c8:	00f42023          	sw	a5,0(s0)
    87cc:	00c12083          	lw	ra,12(sp)
    87d0:	00812403          	lw	s0,8(sp)
    87d4:	01010113          	addi	sp,sp,16
    87d8:	00008067          	ret

000087dc <_isatty_r>:
    87dc:	ff010113          	addi	sp,sp,-16
    87e0:	00812423          	sw	s0,8(sp)
    87e4:	00050413          	mv	s0,a0
    87e8:	00058513          	mv	a0,a1
    87ec:	00ff8797          	auipc	a5,0xff8
    87f0:	3e07a623          	sw	zero,1004(a5) # 1000bd8 <errno>
    87f4:	00112623          	sw	ra,12(sp)
    87f8:	00002097          	auipc	ra,0x2
    87fc:	da0080e7          	jalr	-608(ra) # a598 <_isatty>
    8800:	fff00793          	li	a5,-1
    8804:	00f51c63          	bne	a0,a5,881c <_isatty_r+0x40>
    8808:	00ff8797          	auipc	a5,0xff8
    880c:	3d078793          	addi	a5,a5,976 # 1000bd8 <errno>
    8810:	0007a783          	lw	a5,0(a5)
    8814:	00078463          	beqz	a5,881c <_isatty_r+0x40>
    8818:	00f42023          	sw	a5,0(s0)
    881c:	00c12083          	lw	ra,12(sp)
    8820:	00812403          	lw	s0,8(sp)
    8824:	01010113          	addi	sp,sp,16
    8828:	00008067          	ret

0000882c <_lseek_r>:
    882c:	ff010113          	addi	sp,sp,-16
    8830:	00812423          	sw	s0,8(sp)
    8834:	00050413          	mv	s0,a0
    8838:	00058513          	mv	a0,a1
    883c:	00060593          	mv	a1,a2
    8840:	00068613          	mv	a2,a3
    8844:	00ff8797          	auipc	a5,0xff8
    8848:	3807aa23          	sw	zero,916(a5) # 1000bd8 <errno>
    884c:	00112623          	sw	ra,12(sp)
    8850:	00002097          	auipc	ra,0x2
    8854:	d5c080e7          	jalr	-676(ra) # a5ac <_lseek>
    8858:	fff00793          	li	a5,-1
    885c:	00f51c63          	bne	a0,a5,8874 <_lseek_r+0x48>
    8860:	00ff8797          	auipc	a5,0xff8
    8864:	37878793          	addi	a5,a5,888 # 1000bd8 <errno>
    8868:	0007a783          	lw	a5,0(a5)
    886c:	00078463          	beqz	a5,8874 <_lseek_r+0x48>
    8870:	00f42023          	sw	a5,0(s0)
    8874:	00c12083          	lw	ra,12(sp)
    8878:	00812403          	lw	s0,8(sp)
    887c:	01010113          	addi	sp,sp,16
    8880:	00008067          	ret

00008884 <__malloc_lock>:
    8884:	00008067          	ret

00008888 <__malloc_unlock>:
    8888:	00008067          	ret

0000888c <_read_r>:
    888c:	ff010113          	addi	sp,sp,-16
    8890:	00812423          	sw	s0,8(sp)
    8894:	00050413          	mv	s0,a0
    8898:	00058513          	mv	a0,a1
    889c:	00060593          	mv	a1,a2
    88a0:	00068613          	mv	a2,a3
    88a4:	00ff8797          	auipc	a5,0xff8
    88a8:	3207aa23          	sw	zero,820(a5) # 1000bd8 <errno>
    88ac:	00112623          	sw	ra,12(sp)
    88b0:	00002097          	auipc	ra,0x2
    88b4:	d10080e7          	jalr	-752(ra) # a5c0 <_read>
    88b8:	fff00793          	li	a5,-1
    88bc:	00f51c63          	bne	a0,a5,88d4 <_read_r+0x48>
    88c0:	00ff8797          	auipc	a5,0xff8
    88c4:	31878793          	addi	a5,a5,792 # 1000bd8 <errno>
    88c8:	0007a783          	lw	a5,0(a5)
    88cc:	00078463          	beqz	a5,88d4 <_read_r+0x48>
    88d0:	00f42023          	sw	a5,0(s0)
    88d4:	00c12083          	lw	ra,12(sp)
    88d8:	00812403          	lw	s0,8(sp)
    88dc:	01010113          	addi	sp,sp,16
    88e0:	00008067          	ret

000088e4 <__adddf3>:
    88e4:	00100837          	lui	a6,0x100
    88e8:	fe010113          	addi	sp,sp,-32
    88ec:	fff80813          	addi	a6,a6,-1 # fffff <_data_lma+0xf59e7>
    88f0:	00b87733          	and	a4,a6,a1
    88f4:	00912a23          	sw	s1,20(sp)
    88f8:	00d87833          	and	a6,a6,a3
    88fc:	0145d493          	srli	s1,a1,0x14
    8900:	0146d313          	srli	t1,a3,0x14
    8904:	00371e13          	slli	t3,a4,0x3
    8908:	01312623          	sw	s3,12(sp)
    890c:	01d55713          	srli	a4,a0,0x1d
    8910:	00381813          	slli	a6,a6,0x3
    8914:	01d65793          	srli	a5,a2,0x1d
    8918:	7ff4f493          	andi	s1,s1,2047
    891c:	7ff37313          	andi	t1,t1,2047
    8920:	00112e23          	sw	ra,28(sp)
    8924:	00812c23          	sw	s0,24(sp)
    8928:	01212823          	sw	s2,16(sp)
    892c:	01f5d993          	srli	s3,a1,0x1f
    8930:	01f6de93          	srli	t4,a3,0x1f
    8934:	01c76733          	or	a4,a4,t3
    8938:	00351f13          	slli	t5,a0,0x3
    893c:	0107e833          	or	a6,a5,a6
    8940:	00361f93          	slli	t6,a2,0x3
    8944:	40648e33          	sub	t3,s1,t1
    8948:	1dd98663          	beq	s3,t4,8b14 <__adddf3+0x230>
    894c:	17c05a63          	blez	t3,8ac0 <__adddf3+0x1dc>
    8950:	20030c63          	beqz	t1,8b68 <__adddf3+0x284>
    8954:	008006b7          	lui	a3,0x800
    8958:	7ff00793          	li	a5,2047
    895c:	00d86833          	or	a6,a6,a3
    8960:	42f48263          	beq	s1,a5,8d84 <__adddf3+0x4a0>
    8964:	03800793          	li	a5,56
    8968:	3dc7ce63          	blt	a5,t3,8d44 <__adddf3+0x460>
    896c:	01f00793          	li	a5,31
    8970:	55c7ca63          	blt	a5,t3,8ec4 <__adddf3+0x5e0>
    8974:	02000513          	li	a0,32
    8978:	41c50533          	sub	a0,a0,t3
    897c:	01cfd7b3          	srl	a5,t6,t3
    8980:	00a816b3          	sll	a3,a6,a0
    8984:	00af9933          	sll	s2,t6,a0
    8988:	00f6e6b3          	or	a3,a3,a5
    898c:	01203933          	snez	s2,s2
    8990:	01c857b3          	srl	a5,a6,t3
    8994:	0126e933          	or	s2,a3,s2
    8998:	40f70733          	sub	a4,a4,a5
    899c:	412f0933          	sub	s2,t5,s2
    89a0:	012f37b3          	sltu	a5,t5,s2
    89a4:	40f70633          	sub	a2,a4,a5
    89a8:	00861793          	slli	a5,a2,0x8
    89ac:	2a07d463          	bgez	a5,8c54 <__adddf3+0x370>
    89b0:	00800737          	lui	a4,0x800
    89b4:	fff70713          	addi	a4,a4,-1 # 7fffff <_data_lma+0x7f59e7>
    89b8:	00e67433          	and	s0,a2,a4
    89bc:	36040063          	beqz	s0,8d1c <__adddf3+0x438>
    89c0:	00040513          	mv	a0,s0
    89c4:	ffffb097          	auipc	ra,0xffffb
    89c8:	510080e7          	jalr	1296(ra) # 3ed4 <__clzsi2>
    89cc:	ff850713          	addi	a4,a0,-8
    89d0:	02000793          	li	a5,32
    89d4:	40e787b3          	sub	a5,a5,a4
    89d8:	00f957b3          	srl	a5,s2,a5
    89dc:	00e41633          	sll	a2,s0,a4
    89e0:	00c7e7b3          	or	a5,a5,a2
    89e4:	00e91933          	sll	s2,s2,a4
    89e8:	30974c63          	blt	a4,s1,8d00 <__adddf3+0x41c>
    89ec:	40970533          	sub	a0,a4,s1
    89f0:	00150613          	addi	a2,a0,1
    89f4:	01f00713          	li	a4,31
    89f8:	44c74863          	blt	a4,a2,8e48 <__adddf3+0x564>
    89fc:	02000713          	li	a4,32
    8a00:	40c70733          	sub	a4,a4,a2
    8a04:	00c956b3          	srl	a3,s2,a2
    8a08:	00e91933          	sll	s2,s2,a4
    8a0c:	00e79733          	sll	a4,a5,a4
    8a10:	00d76733          	or	a4,a4,a3
    8a14:	01203933          	snez	s2,s2
    8a18:	01276933          	or	s2,a4,s2
    8a1c:	00c7d633          	srl	a2,a5,a2
    8a20:	00000493          	li	s1,0
    8a24:	00797793          	andi	a5,s2,7
    8a28:	02078063          	beqz	a5,8a48 <__adddf3+0x164>
    8a2c:	00f97713          	andi	a4,s2,15
    8a30:	00400793          	li	a5,4
    8a34:	00f70a63          	beq	a4,a5,8a48 <__adddf3+0x164>
    8a38:	00490713          	addi	a4,s2,4
    8a3c:	01273933          	sltu	s2,a4,s2
    8a40:	01260633          	add	a2,a2,s2
    8a44:	00070913          	mv	s2,a4
    8a48:	00861793          	slli	a5,a2,0x8
    8a4c:	2007d863          	bgez	a5,8c5c <__adddf3+0x378>
    8a50:	00148513          	addi	a0,s1,1
    8a54:	7ff00793          	li	a5,2047
    8a58:	00098593          	mv	a1,s3
    8a5c:	24f50c63          	beq	a0,a5,8cb4 <__adddf3+0x3d0>
    8a60:	ff8007b7          	lui	a5,0xff800
    8a64:	fff78793          	addi	a5,a5,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    8a68:	00f677b3          	and	a5,a2,a5
    8a6c:	01d79893          	slli	a7,a5,0x1d
    8a70:	00395913          	srli	s2,s2,0x3
    8a74:	00979793          	slli	a5,a5,0x9
    8a78:	0128e8b3          	or	a7,a7,s2
    8a7c:	00c7d793          	srli	a5,a5,0xc
    8a80:	7ff57513          	andi	a0,a0,2047
    8a84:	00c79693          	slli	a3,a5,0xc
    8a88:	01451513          	slli	a0,a0,0x14
    8a8c:	01c12083          	lw	ra,28(sp)
    8a90:	01812403          	lw	s0,24(sp)
    8a94:	00c6d693          	srli	a3,a3,0xc
    8a98:	01f59593          	slli	a1,a1,0x1f
    8a9c:	00a6e6b3          	or	a3,a3,a0
    8aa0:	00b6e6b3          	or	a3,a3,a1
    8aa4:	01412483          	lw	s1,20(sp)
    8aa8:	01012903          	lw	s2,16(sp)
    8aac:	00c12983          	lw	s3,12(sp)
    8ab0:	00088513          	mv	a0,a7
    8ab4:	00068593          	mv	a1,a3
    8ab8:	02010113          	addi	sp,sp,32
    8abc:	00008067          	ret
    8ac0:	0c0e1463          	bnez	t3,8b88 <__adddf3+0x2a4>
    8ac4:	00148313          	addi	t1,s1,1
    8ac8:	7fe37313          	andi	t1,t1,2046
    8acc:	28031263          	bnez	t1,8d50 <__adddf3+0x46c>
    8ad0:	01e767b3          	or	a5,a4,t5
    8ad4:	01f868b3          	or	a7,a6,t6
    8ad8:	1e049663          	bnez	s1,8cc4 <__adddf3+0x3e0>
    8adc:	4c078263          	beqz	a5,8fa0 <__adddf3+0x6bc>
    8ae0:	50088a63          	beqz	a7,8ff4 <__adddf3+0x710>
    8ae4:	41ff0933          	sub	s2,t5,t6
    8ae8:	410707b3          	sub	a5,a4,a6
    8aec:	012f3633          	sltu	a2,t5,s2
    8af0:	40c78633          	sub	a2,a5,a2
    8af4:	00861793          	slli	a5,a2,0x8
    8af8:	5a07d663          	bgez	a5,90a4 <__adddf3+0x7c0>
    8afc:	41ef8933          	sub	s2,t6,t5
    8b00:	40e807b3          	sub	a5,a6,a4
    8b04:	012fb633          	sltu	a2,t6,s2
    8b08:	40c78633          	sub	a2,a5,a2
    8b0c:	000e8993          	mv	s3,t4
    8b10:	f15ff06f          	j	8a24 <__adddf3+0x140>
    8b14:	0fc05a63          	blez	t3,8c08 <__adddf3+0x324>
    8b18:	0c030863          	beqz	t1,8be8 <__adddf3+0x304>
    8b1c:	008006b7          	lui	a3,0x800
    8b20:	7ff00793          	li	a5,2047
    8b24:	00d86833          	or	a6,a6,a3
    8b28:	46f48063          	beq	s1,a5,8f88 <__adddf3+0x6a4>
    8b2c:	03800793          	li	a5,56
    8b30:	15c7cc63          	blt	a5,t3,8c88 <__adddf3+0x3a4>
    8b34:	01f00793          	li	a5,31
    8b38:	3fc7dc63          	bge	a5,t3,8f30 <__adddf3+0x64c>
    8b3c:	fe0e0913          	addi	s2,t3,-32
    8b40:	02000793          	li	a5,32
    8b44:	012856b3          	srl	a3,a6,s2
    8b48:	00fe0a63          	beq	t3,a5,8b5c <__adddf3+0x278>
    8b4c:	04000913          	li	s2,64
    8b50:	41c90933          	sub	s2,s2,t3
    8b54:	01281933          	sll	s2,a6,s2
    8b58:	012fefb3          	or	t6,t6,s2
    8b5c:	01f03933          	snez	s2,t6
    8b60:	00d96933          	or	s2,s2,a3
    8b64:	12c0006f          	j	8c90 <__adddf3+0x3ac>
    8b68:	01f867b3          	or	a5,a6,t6
    8b6c:	22078863          	beqz	a5,8d9c <__adddf3+0x4b8>
    8b70:	fffe0793          	addi	a5,t3,-1
    8b74:	44078663          	beqz	a5,8fc0 <__adddf3+0x6dc>
    8b78:	7ff00693          	li	a3,2047
    8b7c:	20de0463          	beq	t3,a3,8d84 <__adddf3+0x4a0>
    8b80:	00078e13          	mv	t3,a5
    8b84:	de1ff06f          	j	8964 <__adddf3+0x80>
    8b88:	409305b3          	sub	a1,t1,s1
    8b8c:	28049863          	bnez	s1,8e1c <__adddf3+0x538>
    8b90:	01e767b3          	or	a5,a4,t5
    8b94:	3c078463          	beqz	a5,8f5c <__adddf3+0x678>
    8b98:	fff58793          	addi	a5,a1,-1
    8b9c:	50078e63          	beqz	a5,90b8 <__adddf3+0x7d4>
    8ba0:	7ff00693          	li	a3,2047
    8ba4:	28d58463          	beq	a1,a3,8e2c <__adddf3+0x548>
    8ba8:	00078593          	mv	a1,a5
    8bac:	03800793          	li	a5,56
    8bb0:	34b7c063          	blt	a5,a1,8ef0 <__adddf3+0x60c>
    8bb4:	01f00793          	li	a5,31
    8bb8:	4ab7c463          	blt	a5,a1,9060 <__adddf3+0x77c>
    8bbc:	02000793          	li	a5,32
    8bc0:	40b787b3          	sub	a5,a5,a1
    8bc4:	00f71933          	sll	s2,a4,a5
    8bc8:	00bf56b3          	srl	a3,t5,a1
    8bcc:	00ff17b3          	sll	a5,t5,a5
    8bd0:	00d96933          	or	s2,s2,a3
    8bd4:	00f037b3          	snez	a5,a5
    8bd8:	00b75733          	srl	a4,a4,a1
    8bdc:	00f96933          	or	s2,s2,a5
    8be0:	40e80833          	sub	a6,a6,a4
    8be4:	3140006f          	j	8ef8 <__adddf3+0x614>
    8be8:	01f867b3          	or	a5,a6,t6
    8bec:	3e078663          	beqz	a5,8fd8 <__adddf3+0x6f4>
    8bf0:	fffe0793          	addi	a5,t3,-1
    8bf4:	28078463          	beqz	a5,8e7c <__adddf3+0x598>
    8bf8:	7ff00693          	li	a3,2047
    8bfc:	38de0663          	beq	t3,a3,8f88 <__adddf3+0x6a4>
    8c00:	00078e13          	mv	t3,a5
    8c04:	f29ff06f          	j	8b2c <__adddf3+0x248>
    8c08:	1a0e1863          	bnez	t3,8db8 <__adddf3+0x4d4>
    8c0c:	00148693          	addi	a3,s1,1
    8c10:	7fe6f793          	andi	a5,a3,2046
    8c14:	3e079c63          	bnez	a5,900c <__adddf3+0x728>
    8c18:	01e767b3          	or	a5,a4,t5
    8c1c:	36049063          	bnez	s1,8f7c <__adddf3+0x698>
    8c20:	4a078a63          	beqz	a5,90d4 <__adddf3+0x7f0>
    8c24:	01f867b3          	or	a5,a6,t6
    8c28:	3c078663          	beqz	a5,8ff4 <__adddf3+0x710>
    8c2c:	01ff0933          	add	s2,t5,t6
    8c30:	010707b3          	add	a5,a4,a6
    8c34:	01e93f33          	sltu	t5,s2,t5
    8c38:	01e78633          	add	a2,a5,t5
    8c3c:	00861793          	slli	a5,a2,0x8
    8c40:	0007da63          	bgez	a5,8c54 <__adddf3+0x370>
    8c44:	ff8007b7          	lui	a5,0xff800
    8c48:	fff78793          	addi	a5,a5,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    8c4c:	00f67633          	and	a2,a2,a5
    8c50:	00100493          	li	s1,1
    8c54:	00797793          	andi	a5,s2,7
    8c58:	dc079ae3          	bnez	a5,8a2c <__adddf3+0x148>
    8c5c:	01d61793          	slli	a5,a2,0x1d
    8c60:	00395893          	srli	a7,s2,0x3
    8c64:	00f8e8b3          	or	a7,a7,a5
    8c68:	00365793          	srli	a5,a2,0x3
    8c6c:	7ff00713          	li	a4,2047
    8c70:	06e48a63          	beq	s1,a4,8ce4 <__adddf3+0x400>
    8c74:	00c79793          	slli	a5,a5,0xc
    8c78:	00c7d793          	srli	a5,a5,0xc
    8c7c:	7ff4f513          	andi	a0,s1,2047
    8c80:	00098593          	mv	a1,s3
    8c84:	e01ff06f          	j	8a84 <__adddf3+0x1a0>
    8c88:	01f86933          	or	s2,a6,t6
    8c8c:	01203933          	snez	s2,s2
    8c90:	01e90933          	add	s2,s2,t5
    8c94:	01e937b3          	sltu	a5,s2,t5
    8c98:	00e78633          	add	a2,a5,a4
    8c9c:	00861793          	slli	a5,a2,0x8
    8ca0:	fa07dae3          	bgez	a5,8c54 <__adddf3+0x370>
    8ca4:	00148493          	addi	s1,s1,1
    8ca8:	7ff00793          	li	a5,2047
    8cac:	1ef49863          	bne	s1,a5,8e9c <__adddf3+0x5b8>
    8cb0:	00098593          	mv	a1,s3
    8cb4:	7ff00513          	li	a0,2047
    8cb8:	00000793          	li	a5,0
    8cbc:	00000893          	li	a7,0
    8cc0:	dc5ff06f          	j	8a84 <__adddf3+0x1a0>
    8cc4:	0a079e63          	bnez	a5,8d80 <__adddf3+0x49c>
    8cc8:	46088663          	beqz	a7,9134 <__adddf3+0x850>
    8ccc:	00361693          	slli	a3,a2,0x3
    8cd0:	01d81793          	slli	a5,a6,0x1d
    8cd4:	0036d693          	srli	a3,a3,0x3
    8cd8:	00d7e8b3          	or	a7,a5,a3
    8cdc:	000e8993          	mv	s3,t4
    8ce0:	00385793          	srli	a5,a6,0x3
    8ce4:	00f8e7b3          	or	a5,a7,a5
    8ce8:	fc0784e3          	beqz	a5,8cb0 <__adddf3+0x3cc>
    8cec:	00000593          	li	a1,0
    8cf0:	7ff00513          	li	a0,2047
    8cf4:	000807b7          	lui	a5,0x80
    8cf8:	00000893          	li	a7,0
    8cfc:	d89ff06f          	j	8a84 <__adddf3+0x1a0>
    8d00:	ff800637          	lui	a2,0xff800
    8d04:	fff60613          	addi	a2,a2,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    8d08:	00c7f633          	and	a2,a5,a2
    8d0c:	00797793          	andi	a5,s2,7
    8d10:	40e484b3          	sub	s1,s1,a4
    8d14:	d0079ce3          	bnez	a5,8a2c <__adddf3+0x148>
    8d18:	f45ff06f          	j	8c5c <__adddf3+0x378>
    8d1c:	00090513          	mv	a0,s2
    8d20:	ffffb097          	auipc	ra,0xffffb
    8d24:	1b4080e7          	jalr	436(ra) # 3ed4 <__clzsi2>
    8d28:	01850713          	addi	a4,a0,24
    8d2c:	01f00793          	li	a5,31
    8d30:	cae7d0e3          	bge	a5,a4,89d0 <__adddf3+0xec>
    8d34:	ff850613          	addi	a2,a0,-8
    8d38:	00c917b3          	sll	a5,s2,a2
    8d3c:	00000913          	li	s2,0
    8d40:	ca9ff06f          	j	89e8 <__adddf3+0x104>
    8d44:	01f86933          	or	s2,a6,t6
    8d48:	01203933          	snez	s2,s2
    8d4c:	c51ff06f          	j	899c <__adddf3+0xb8>
    8d50:	41ff0933          	sub	s2,t5,t6
    8d54:	41070633          	sub	a2,a4,a6
    8d58:	012f3433          	sltu	s0,t5,s2
    8d5c:	40860433          	sub	s0,a2,s0
    8d60:	00841793          	slli	a5,s0,0x8
    8d64:	2c07cc63          	bltz	a5,903c <__adddf3+0x758>
    8d68:	008968b3          	or	a7,s2,s0
    8d6c:	c40898e3          	bnez	a7,89bc <__adddf3+0xd8>
    8d70:	00000793          	li	a5,0
    8d74:	00000993          	li	s3,0
    8d78:	00000493          	li	s1,0
    8d7c:	ef9ff06f          	j	8c74 <__adddf3+0x390>
    8d80:	f60896e3          	bnez	a7,8cec <__adddf3+0x408>
    8d84:	00351513          	slli	a0,a0,0x3
    8d88:	01d71793          	slli	a5,a4,0x1d
    8d8c:	00355513          	srli	a0,a0,0x3
    8d90:	00a7e8b3          	or	a7,a5,a0
    8d94:	00375793          	srli	a5,a4,0x3
    8d98:	f4dff06f          	j	8ce4 <__adddf3+0x400>
    8d9c:	00351513          	slli	a0,a0,0x3
    8da0:	01d71793          	slli	a5,a4,0x1d
    8da4:	00355513          	srli	a0,a0,0x3
    8da8:	00a7e8b3          	or	a7,a5,a0
    8dac:	000e0493          	mv	s1,t3
    8db0:	00375793          	srli	a5,a4,0x3
    8db4:	eb9ff06f          	j	8c6c <__adddf3+0x388>
    8db8:	40930533          	sub	a0,t1,s1
    8dbc:	14048a63          	beqz	s1,8f10 <__adddf3+0x62c>
    8dc0:	008006b7          	lui	a3,0x800
    8dc4:	7ff00793          	li	a5,2047
    8dc8:	00d76733          	or	a4,a4,a3
    8dcc:	38f30663          	beq	t1,a5,9158 <__adddf3+0x874>
    8dd0:	03800793          	li	a5,56
    8dd4:	28a7c063          	blt	a5,a0,9054 <__adddf3+0x770>
    8dd8:	01f00793          	li	a5,31
    8ddc:	32a7c663          	blt	a5,a0,9108 <__adddf3+0x824>
    8de0:	02000793          	li	a5,32
    8de4:	40a787b3          	sub	a5,a5,a0
    8de8:	00f71933          	sll	s2,a4,a5
    8dec:	00af56b3          	srl	a3,t5,a0
    8df0:	00ff17b3          	sll	a5,t5,a5
    8df4:	00d96933          	or	s2,s2,a3
    8df8:	00f037b3          	snez	a5,a5
    8dfc:	00a75733          	srl	a4,a4,a0
    8e00:	00f96933          	or	s2,s2,a5
    8e04:	00e80833          	add	a6,a6,a4
    8e08:	01f90933          	add	s2,s2,t6
    8e0c:	01f937b3          	sltu	a5,s2,t6
    8e10:	01078633          	add	a2,a5,a6
    8e14:	00030493          	mv	s1,t1
    8e18:	e85ff06f          	j	8c9c <__adddf3+0x3b8>
    8e1c:	008006b7          	lui	a3,0x800
    8e20:	7ff00793          	li	a5,2047
    8e24:	00d76733          	or	a4,a4,a3
    8e28:	d8f312e3          	bne	t1,a5,8bac <__adddf3+0x2c8>
    8e2c:	00361793          	slli	a5,a2,0x3
    8e30:	0037d793          	srli	a5,a5,0x3
    8e34:	01d81893          	slli	a7,a6,0x1d
    8e38:	0117e8b3          	or	a7,a5,a7
    8e3c:	000e8993          	mv	s3,t4
    8e40:	00385793          	srli	a5,a6,0x3
    8e44:	ea1ff06f          	j	8ce4 <__adddf3+0x400>
    8e48:	fe150713          	addi	a4,a0,-31
    8e4c:	02000693          	li	a3,32
    8e50:	00e7d733          	srl	a4,a5,a4
    8e54:	00d60a63          	beq	a2,a3,8e68 <__adddf3+0x584>
    8e58:	04000693          	li	a3,64
    8e5c:	40c68633          	sub	a2,a3,a2
    8e60:	00c79633          	sll	a2,a5,a2
    8e64:	00c96933          	or	s2,s2,a2
    8e68:	01203933          	snez	s2,s2
    8e6c:	00e96933          	or	s2,s2,a4
    8e70:	00000613          	li	a2,0
    8e74:	00000493          	li	s1,0
    8e78:	dddff06f          	j	8c54 <__adddf3+0x370>
    8e7c:	01ff0933          	add	s2,t5,t6
    8e80:	010707b3          	add	a5,a4,a6
    8e84:	01e93633          	sltu	a2,s2,t5
    8e88:	00c78633          	add	a2,a5,a2
    8e8c:	00861793          	slli	a5,a2,0x8
    8e90:	00100493          	li	s1,1
    8e94:	dc07d0e3          	bgez	a5,8c54 <__adddf3+0x370>
    8e98:	00200493          	li	s1,2
    8e9c:	ff8007b7          	lui	a5,0xff800
    8ea0:	fff78793          	addi	a5,a5,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    8ea4:	00f677b3          	and	a5,a2,a5
    8ea8:	00195713          	srli	a4,s2,0x1
    8eac:	00197913          	andi	s2,s2,1
    8eb0:	01276933          	or	s2,a4,s2
    8eb4:	01f79893          	slli	a7,a5,0x1f
    8eb8:	0128e933          	or	s2,a7,s2
    8ebc:	0017d613          	srli	a2,a5,0x1
    8ec0:	b65ff06f          	j	8a24 <__adddf3+0x140>
    8ec4:	fe0e0913          	addi	s2,t3,-32
    8ec8:	02000793          	li	a5,32
    8ecc:	012856b3          	srl	a3,a6,s2
    8ed0:	00fe0a63          	beq	t3,a5,8ee4 <__adddf3+0x600>
    8ed4:	04000913          	li	s2,64
    8ed8:	41c90933          	sub	s2,s2,t3
    8edc:	01281933          	sll	s2,a6,s2
    8ee0:	012fefb3          	or	t6,t6,s2
    8ee4:	01f03933          	snez	s2,t6
    8ee8:	00d96933          	or	s2,s2,a3
    8eec:	ab1ff06f          	j	899c <__adddf3+0xb8>
    8ef0:	01e76933          	or	s2,a4,t5
    8ef4:	01203933          	snez	s2,s2
    8ef8:	412f8933          	sub	s2,t6,s2
    8efc:	012fb7b3          	sltu	a5,t6,s2
    8f00:	40f80633          	sub	a2,a6,a5
    8f04:	00030493          	mv	s1,t1
    8f08:	000e8993          	mv	s3,t4
    8f0c:	a9dff06f          	j	89a8 <__adddf3+0xc4>
    8f10:	01e767b3          	or	a5,a4,t5
    8f14:	1c078c63          	beqz	a5,90ec <__adddf3+0x808>
    8f18:	fff50793          	addi	a5,a0,-1
    8f1c:	22078463          	beqz	a5,9144 <__adddf3+0x860>
    8f20:	7ff00693          	li	a3,2047
    8f24:	16d50463          	beq	a0,a3,908c <__adddf3+0x7a8>
    8f28:	00078513          	mv	a0,a5
    8f2c:	ea5ff06f          	j	8dd0 <__adddf3+0x4ec>
    8f30:	02000793          	li	a5,32
    8f34:	41c787b3          	sub	a5,a5,t3
    8f38:	00f816b3          	sll	a3,a6,a5
    8f3c:	00ff9933          	sll	s2,t6,a5
    8f40:	01cfd633          	srl	a2,t6,t3
    8f44:	00c6e6b3          	or	a3,a3,a2
    8f48:	01203933          	snez	s2,s2
    8f4c:	01c857b3          	srl	a5,a6,t3
    8f50:	0126e933          	or	s2,a3,s2
    8f54:	00f70733          	add	a4,a4,a5
    8f58:	d39ff06f          	j	8c90 <__adddf3+0x3ac>
    8f5c:	00361793          	slli	a5,a2,0x3
    8f60:	0037d793          	srli	a5,a5,0x3
    8f64:	01d81893          	slli	a7,a6,0x1d
    8f68:	0117e8b3          	or	a7,a5,a7
    8f6c:	00058493          	mv	s1,a1
    8f70:	00385793          	srli	a5,a6,0x3
    8f74:	000e8993          	mv	s3,t4
    8f78:	cf5ff06f          	j	8c6c <__adddf3+0x388>
    8f7c:	10078863          	beqz	a5,908c <__adddf3+0x7a8>
    8f80:	01f86933          	or	s2,a6,t6
    8f84:	d60914e3          	bnez	s2,8cec <__adddf3+0x408>
    8f88:	00351513          	slli	a0,a0,0x3
    8f8c:	01d71793          	slli	a5,a4,0x1d
    8f90:	00355513          	srli	a0,a0,0x3
    8f94:	00f568b3          	or	a7,a0,a5
    8f98:	00375793          	srli	a5,a4,0x3
    8f9c:	d49ff06f          	j	8ce4 <__adddf3+0x400>
    8fa0:	10088663          	beqz	a7,90ac <__adddf3+0x7c8>
    8fa4:	00361693          	slli	a3,a2,0x3
    8fa8:	01d81793          	slli	a5,a6,0x1d
    8fac:	0036d693          	srli	a3,a3,0x3
    8fb0:	00d7e8b3          	or	a7,a5,a3
    8fb4:	000e8993          	mv	s3,t4
    8fb8:	00385793          	srli	a5,a6,0x3
    8fbc:	cb9ff06f          	j	8c74 <__adddf3+0x390>
    8fc0:	41ff0933          	sub	s2,t5,t6
    8fc4:	410707b3          	sub	a5,a4,a6
    8fc8:	012f3f33          	sltu	t5,t5,s2
    8fcc:	41e78633          	sub	a2,a5,t5
    8fd0:	00100493          	li	s1,1
    8fd4:	9d5ff06f          	j	89a8 <__adddf3+0xc4>
    8fd8:	00351513          	slli	a0,a0,0x3
    8fdc:	01d71793          	slli	a5,a4,0x1d
    8fe0:	00355513          	srli	a0,a0,0x3
    8fe4:	00f568b3          	or	a7,a0,a5
    8fe8:	000e0493          	mv	s1,t3
    8fec:	00375793          	srli	a5,a4,0x3
    8ff0:	c7dff06f          	j	8c6c <__adddf3+0x388>
    8ff4:	00351513          	slli	a0,a0,0x3
    8ff8:	01d71793          	slli	a5,a4,0x1d
    8ffc:	00355513          	srli	a0,a0,0x3
    9000:	00a7e8b3          	or	a7,a5,a0
    9004:	00375793          	srli	a5,a4,0x3
    9008:	c6dff06f          	j	8c74 <__adddf3+0x390>
    900c:	7ff00793          	li	a5,2047
    9010:	caf680e3          	beq	a3,a5,8cb0 <__adddf3+0x3cc>
    9014:	01ff0933          	add	s2,t5,t6
    9018:	01e93633          	sltu	a2,s2,t5
    901c:	010707b3          	add	a5,a4,a6
    9020:	00c787b3          	add	a5,a5,a2
    9024:	01f79893          	slli	a7,a5,0x1f
    9028:	00195913          	srli	s2,s2,0x1
    902c:	0128e933          	or	s2,a7,s2
    9030:	0017d613          	srli	a2,a5,0x1
    9034:	00068493          	mv	s1,a3
    9038:	c1dff06f          	j	8c54 <__adddf3+0x370>
    903c:	41ef8933          	sub	s2,t6,t5
    9040:	40e80733          	sub	a4,a6,a4
    9044:	012fb633          	sltu	a2,t6,s2
    9048:	40c70433          	sub	s0,a4,a2
    904c:	000e8993          	mv	s3,t4
    9050:	96dff06f          	j	89bc <__adddf3+0xd8>
    9054:	01e76933          	or	s2,a4,t5
    9058:	01203933          	snez	s2,s2
    905c:	dadff06f          	j	8e08 <__adddf3+0x524>
    9060:	fe058793          	addi	a5,a1,-32
    9064:	02000693          	li	a3,32
    9068:	00f757b3          	srl	a5,a4,a5
    906c:	00d58a63          	beq	a1,a3,9080 <__adddf3+0x79c>
    9070:	04000693          	li	a3,64
    9074:	40b685b3          	sub	a1,a3,a1
    9078:	00b71733          	sll	a4,a4,a1
    907c:	00ef6f33          	or	t5,t5,a4
    9080:	01e03933          	snez	s2,t5
    9084:	00f96933          	or	s2,s2,a5
    9088:	e71ff06f          	j	8ef8 <__adddf3+0x614>
    908c:	00361793          	slli	a5,a2,0x3
    9090:	0037d793          	srli	a5,a5,0x3
    9094:	01d81893          	slli	a7,a6,0x1d
    9098:	0117e8b3          	or	a7,a5,a7
    909c:	00385793          	srli	a5,a6,0x3
    90a0:	c45ff06f          	j	8ce4 <__adddf3+0x400>
    90a4:	00c968b3          	or	a7,s2,a2
    90a8:	ba0896e3          	bnez	a7,8c54 <__adddf3+0x370>
    90ac:	00000793          	li	a5,0
    90b0:	00000993          	li	s3,0
    90b4:	bc1ff06f          	j	8c74 <__adddf3+0x390>
    90b8:	41ef8933          	sub	s2,t6,t5
    90bc:	40e807b3          	sub	a5,a6,a4
    90c0:	012fb633          	sltu	a2,t6,s2
    90c4:	40c78633          	sub	a2,a5,a2
    90c8:	000e8993          	mv	s3,t4
    90cc:	00100493          	li	s1,1
    90d0:	8d9ff06f          	j	89a8 <__adddf3+0xc4>
    90d4:	00361693          	slli	a3,a2,0x3
    90d8:	01d81793          	slli	a5,a6,0x1d
    90dc:	0036d693          	srli	a3,a3,0x3
    90e0:	00d7e8b3          	or	a7,a5,a3
    90e4:	00385793          	srli	a5,a6,0x3
    90e8:	b8dff06f          	j	8c74 <__adddf3+0x390>
    90ec:	00361693          	slli	a3,a2,0x3
    90f0:	01d81793          	slli	a5,a6,0x1d
    90f4:	0036d693          	srli	a3,a3,0x3
    90f8:	00d7e8b3          	or	a7,a5,a3
    90fc:	00050493          	mv	s1,a0
    9100:	00385793          	srli	a5,a6,0x3
    9104:	b69ff06f          	j	8c6c <__adddf3+0x388>
    9108:	fe050793          	addi	a5,a0,-32
    910c:	02000693          	li	a3,32
    9110:	00f757b3          	srl	a5,a4,a5
    9114:	00d50a63          	beq	a0,a3,9128 <__adddf3+0x844>
    9118:	04000693          	li	a3,64
    911c:	40a68533          	sub	a0,a3,a0
    9120:	00a71733          	sll	a4,a4,a0
    9124:	00ef6f33          	or	t5,t5,a4
    9128:	01e03933          	snez	s2,t5
    912c:	00f96933          	or	s2,s2,a5
    9130:	cd9ff06f          	j	8e08 <__adddf3+0x524>
    9134:	00000593          	li	a1,0
    9138:	7ff00513          	li	a0,2047
    913c:	000807b7          	lui	a5,0x80
    9140:	945ff06f          	j	8a84 <__adddf3+0x1a0>
    9144:	01ff0933          	add	s2,t5,t6
    9148:	010707b3          	add	a5,a4,a6
    914c:	01f93633          	sltu	a2,s2,t6
    9150:	00c78633          	add	a2,a5,a2
    9154:	d39ff06f          	j	8e8c <__adddf3+0x5a8>
    9158:	00361693          	slli	a3,a2,0x3
    915c:	01d81793          	slli	a5,a6,0x1d
    9160:	0036d693          	srli	a3,a3,0x3
    9164:	00d7e8b3          	or	a7,a5,a3
    9168:	00385793          	srli	a5,a6,0x3
    916c:	b79ff06f          	j	8ce4 <__adddf3+0x400>

00009170 <__eqdf2>:
    9170:	0145d713          	srli	a4,a1,0x14
    9174:	001007b7          	lui	a5,0x100
    9178:	fff78793          	addi	a5,a5,-1 # fffff <_data_lma+0xf59e7>
    917c:	0146d813          	srli	a6,a3,0x14
    9180:	7ff77713          	andi	a4,a4,2047
    9184:	7ff00893          	li	a7,2047
    9188:	00b7fe33          	and	t3,a5,a1
    918c:	00050e93          	mv	t4,a0
    9190:	00d7f7b3          	and	a5,a5,a3
    9194:	01f5d593          	srli	a1,a1,0x1f
    9198:	00060f13          	mv	t5,a2
    919c:	7ff87813          	andi	a6,a6,2047
    91a0:	01f6d693          	srli	a3,a3,0x1f
    91a4:	01170e63          	beq	a4,a7,91c0 <__eqdf2+0x50>
    91a8:	00100313          	li	t1,1
    91ac:	01180663          	beq	a6,a7,91b8 <__eqdf2+0x48>
    91b0:	01071463          	bne	a4,a6,91b8 <__eqdf2+0x48>
    91b4:	02fe0263          	beq	t3,a5,91d8 <__eqdf2+0x68>
    91b8:	00030513          	mv	a0,t1
    91bc:	00008067          	ret
    91c0:	00ae68b3          	or	a7,t3,a0
    91c4:	00100313          	li	t1,1
    91c8:	fe0898e3          	bnez	a7,91b8 <__eqdf2+0x48>
    91cc:	fee816e3          	bne	a6,a4,91b8 <__eqdf2+0x48>
    91d0:	00c7e7b3          	or	a5,a5,a2
    91d4:	fe0792e3          	bnez	a5,91b8 <__eqdf2+0x48>
    91d8:	00100313          	li	t1,1
    91dc:	fdee9ee3          	bne	t4,t5,91b8 <__eqdf2+0x48>
    91e0:	00000313          	li	t1,0
    91e4:	fcd58ae3          	beq	a1,a3,91b8 <__eqdf2+0x48>
    91e8:	00100313          	li	t1,1
    91ec:	fc0716e3          	bnez	a4,91b8 <__eqdf2+0x48>
    91f0:	00ae6533          	or	a0,t3,a0
    91f4:	00a03333          	snez	t1,a0
    91f8:	fc1ff06f          	j	91b8 <__eqdf2+0x48>

000091fc <__muldf3>:
    91fc:	fc010113          	addi	sp,sp,-64
    9200:	0145d793          	srli	a5,a1,0x14
    9204:	02812c23          	sw	s0,56(sp)
    9208:	03212823          	sw	s2,48(sp)
    920c:	03412423          	sw	s4,40(sp)
    9210:	00c59413          	slli	s0,a1,0xc
    9214:	02112e23          	sw	ra,60(sp)
    9218:	02912a23          	sw	s1,52(sp)
    921c:	03312623          	sw	s3,44(sp)
    9220:	03512223          	sw	s5,36(sp)
    9224:	03612023          	sw	s6,32(sp)
    9228:	01712e23          	sw	s7,28(sp)
    922c:	7ff7f793          	andi	a5,a5,2047
    9230:	00050913          	mv	s2,a0
    9234:	00c45413          	srli	s0,s0,0xc
    9238:	01f5da13          	srli	s4,a1,0x1f
    923c:	14078c63          	beqz	a5,9394 <__muldf3+0x198>
    9240:	7ff00713          	li	a4,2047
    9244:	20e78c63          	beq	a5,a4,945c <__muldf3+0x260>
    9248:	00341513          	slli	a0,s0,0x3
    924c:	01d95413          	srli	s0,s2,0x1d
    9250:	00a46433          	or	s0,s0,a0
    9254:	00800537          	lui	a0,0x800
    9258:	00a46433          	or	s0,s0,a0
    925c:	00391493          	slli	s1,s2,0x3
    9260:	c0178b13          	addi	s6,a5,-1023
    9264:	00000993          	li	s3,0
    9268:	00000b93          	li	s7,0
    926c:	0146d793          	srli	a5,a3,0x14
    9270:	00c69913          	slli	s2,a3,0xc
    9274:	7ff7f793          	andi	a5,a5,2047
    9278:	00c95913          	srli	s2,s2,0xc
    927c:	01f6da93          	srli	s5,a3,0x1f
    9280:	18078463          	beqz	a5,9408 <__muldf3+0x20c>
    9284:	7ff00713          	li	a4,2047
    9288:	04e78c63          	beq	a5,a4,92e0 <__muldf3+0xe4>
    928c:	00391513          	slli	a0,s2,0x3
    9290:	01d65913          	srli	s2,a2,0x1d
    9294:	00a96933          	or	s2,s2,a0
    9298:	c0178793          	addi	a5,a5,-1023
    929c:	00800537          	lui	a0,0x800
    92a0:	00a96933          	or	s2,s2,a0
    92a4:	00361593          	slli	a1,a2,0x3
    92a8:	00fb0b33          	add	s6,s6,a5
    92ac:	00000813          	li	a6,0
    92b0:	015a46b3          	xor	a3,s4,s5
    92b4:	00f00793          	li	a5,15
    92b8:	00068513          	mv	a0,a3
    92bc:	001b0613          	addi	a2,s6,1
    92c0:	2337e063          	bltu	a5,s3,94e0 <__muldf3+0x2e4>
    92c4:	00ff7797          	auipc	a5,0xff7
    92c8:	6d078793          	addi	a5,a5,1744 # 1000994 <_ctype_+0x104>
    92cc:	00299993          	slli	s3,s3,0x2
    92d0:	00f989b3          	add	s3,s3,a5
    92d4:	0009a703          	lw	a4,0(s3)
    92d8:	00f70733          	add	a4,a4,a5
    92dc:	00070067          	jr	a4
    92e0:	00c965b3          	or	a1,s2,a2
    92e4:	7ffb0b13          	addi	s6,s6,2047
    92e8:	1c059463          	bnez	a1,94b0 <__muldf3+0x2b4>
    92ec:	0029e993          	ori	s3,s3,2
    92f0:	00000913          	li	s2,0
    92f4:	00200813          	li	a6,2
    92f8:	fb9ff06f          	j	92b0 <__muldf3+0xb4>
    92fc:	00000693          	li	a3,0
    9300:	7ff00793          	li	a5,2047
    9304:	00080437          	lui	s0,0x80
    9308:	00000493          	li	s1,0
    930c:	00c41413          	slli	s0,s0,0xc
    9310:	01479793          	slli	a5,a5,0x14
    9314:	00c45413          	srli	s0,s0,0xc
    9318:	01f69693          	slli	a3,a3,0x1f
    931c:	00f46433          	or	s0,s0,a5
    9320:	00d46433          	or	s0,s0,a3
    9324:	00040593          	mv	a1,s0
    9328:	03c12083          	lw	ra,60(sp)
    932c:	03812403          	lw	s0,56(sp)
    9330:	00048513          	mv	a0,s1
    9334:	03012903          	lw	s2,48(sp)
    9338:	03412483          	lw	s1,52(sp)
    933c:	02c12983          	lw	s3,44(sp)
    9340:	02812a03          	lw	s4,40(sp)
    9344:	02412a83          	lw	s5,36(sp)
    9348:	02012b03          	lw	s6,32(sp)
    934c:	01c12b83          	lw	s7,28(sp)
    9350:	04010113          	addi	sp,sp,64
    9354:	00008067          	ret
    9358:	000a8513          	mv	a0,s5
    935c:	00090413          	mv	s0,s2
    9360:	00058493          	mv	s1,a1
    9364:	00080b93          	mv	s7,a6
    9368:	00200793          	li	a5,2
    936c:	16fb8063          	beq	s7,a5,94cc <__muldf3+0x2d0>
    9370:	00300793          	li	a5,3
    9374:	f8fb84e3          	beq	s7,a5,92fc <__muldf3+0x100>
    9378:	00100793          	li	a5,1
    937c:	00050693          	mv	a3,a0
    9380:	4cfb9c63          	bne	s7,a5,9858 <__muldf3+0x65c>
    9384:	00000793          	li	a5,0
    9388:	00000413          	li	s0,0
    938c:	00000493          	li	s1,0
    9390:	f7dff06f          	j	930c <__muldf3+0x110>
    9394:	00a464b3          	or	s1,s0,a0
    9398:	10048263          	beqz	s1,949c <__muldf3+0x2a0>
    939c:	00d12623          	sw	a3,12(sp)
    93a0:	00c12423          	sw	a2,8(sp)
    93a4:	38040e63          	beqz	s0,9740 <__muldf3+0x544>
    93a8:	00040513          	mv	a0,s0
    93ac:	ffffb097          	auipc	ra,0xffffb
    93b0:	b28080e7          	jalr	-1240(ra) # 3ed4 <__clzsi2>
    93b4:	00812603          	lw	a2,8(sp)
    93b8:	00c12683          	lw	a3,12(sp)
    93bc:	00050793          	mv	a5,a0
    93c0:	ff550593          	addi	a1,a0,-11 # 7ffff5 <_data_lma+0x7f59dd>
    93c4:	01d00713          	li	a4,29
    93c8:	ff878493          	addi	s1,a5,-8
    93cc:	40b70733          	sub	a4,a4,a1
    93d0:	00941433          	sll	s0,s0,s1
    93d4:	00e95733          	srl	a4,s2,a4
    93d8:	00876433          	or	s0,a4,s0
    93dc:	009914b3          	sll	s1,s2,s1
    93e0:	c0d00b13          	li	s6,-1011
    93e4:	40fb0b33          	sub	s6,s6,a5
    93e8:	0146d793          	srli	a5,a3,0x14
    93ec:	00c69913          	slli	s2,a3,0xc
    93f0:	7ff7f793          	andi	a5,a5,2047
    93f4:	00000993          	li	s3,0
    93f8:	00000b93          	li	s7,0
    93fc:	00c95913          	srli	s2,s2,0xc
    9400:	01f6da93          	srli	s5,a3,0x1f
    9404:	e80790e3          	bnez	a5,9284 <__muldf3+0x88>
    9408:	00c965b3          	or	a1,s2,a2
    940c:	06058663          	beqz	a1,9478 <__muldf3+0x27c>
    9410:	2e090e63          	beqz	s2,970c <__muldf3+0x510>
    9414:	00090513          	mv	a0,s2
    9418:	00c12423          	sw	a2,8(sp)
    941c:	ffffb097          	auipc	ra,0xffffb
    9420:	ab8080e7          	jalr	-1352(ra) # 3ed4 <__clzsi2>
    9424:	00812603          	lw	a2,8(sp)
    9428:	00050793          	mv	a5,a0
    942c:	ff550693          	addi	a3,a0,-11
    9430:	01d00713          	li	a4,29
    9434:	ff878593          	addi	a1,a5,-8
    9438:	40d70733          	sub	a4,a4,a3
    943c:	00b91933          	sll	s2,s2,a1
    9440:	00e65733          	srl	a4,a2,a4
    9444:	01276933          	or	s2,a4,s2
    9448:	00b615b3          	sll	a1,a2,a1
    944c:	40fb07b3          	sub	a5,s6,a5
    9450:	c0d78b13          	addi	s6,a5,-1011
    9454:	00000813          	li	a6,0
    9458:	e59ff06f          	j	92b0 <__muldf3+0xb4>
    945c:	00a464b3          	or	s1,s0,a0
    9460:	02049463          	bnez	s1,9488 <__muldf3+0x28c>
    9464:	00000413          	li	s0,0
    9468:	00800993          	li	s3,8
    946c:	7ff00b13          	li	s6,2047
    9470:	00200b93          	li	s7,2
    9474:	df9ff06f          	j	926c <__muldf3+0x70>
    9478:	0019e993          	ori	s3,s3,1
    947c:	00000913          	li	s2,0
    9480:	00100813          	li	a6,1
    9484:	e2dff06f          	j	92b0 <__muldf3+0xb4>
    9488:	00050493          	mv	s1,a0
    948c:	00c00993          	li	s3,12
    9490:	7ff00b13          	li	s6,2047
    9494:	00300b93          	li	s7,3
    9498:	dd5ff06f          	j	926c <__muldf3+0x70>
    949c:	00000413          	li	s0,0
    94a0:	00400993          	li	s3,4
    94a4:	00000b13          	li	s6,0
    94a8:	00100b93          	li	s7,1
    94ac:	dc1ff06f          	j	926c <__muldf3+0x70>
    94b0:	0039e993          	ori	s3,s3,3
    94b4:	00060593          	mv	a1,a2
    94b8:	00300813          	li	a6,3
    94bc:	df5ff06f          	j	92b0 <__muldf3+0xb4>
    94c0:	00200793          	li	a5,2
    94c4:	000a0513          	mv	a0,s4
    94c8:	eafb94e3          	bne	s7,a5,9370 <__muldf3+0x174>
    94cc:	00050693          	mv	a3,a0
    94d0:	7ff00793          	li	a5,2047
    94d4:	00000413          	li	s0,0
    94d8:	00000493          	li	s1,0
    94dc:	e31ff06f          	j	930c <__muldf3+0x110>
    94e0:	00010e37          	lui	t3,0x10
    94e4:	fffe0713          	addi	a4,t3,-1 # ffff <_data_lma+0x59e7>
    94e8:	0104d793          	srli	a5,s1,0x10
    94ec:	0105d813          	srli	a6,a1,0x10
    94f0:	00e4f4b3          	and	s1,s1,a4
    94f4:	00e5f5b3          	and	a1,a1,a4
    94f8:	02958733          	mul	a4,a1,s1
    94fc:	02b78333          	mul	t1,a5,a1
    9500:	01075513          	srli	a0,a4,0x10
    9504:	029808b3          	mul	a7,a6,s1
    9508:	006888b3          	add	a7,a7,t1
    950c:	01150533          	add	a0,a0,a7
    9510:	03078f33          	mul	t5,a5,a6
    9514:	00657463          	bgeu	a0,t1,951c <__muldf3+0x320>
    9518:	01cf0f33          	add	t5,t5,t3
    951c:	00010eb7          	lui	t4,0x10
    9520:	fffe8893          	addi	a7,t4,-1 # ffff <_data_lma+0x59e7>
    9524:	01095293          	srli	t0,s2,0x10
    9528:	01197933          	and	s2,s2,a7
    952c:	01157333          	and	t1,a0,a7
    9530:	01177733          	and	a4,a4,a7
    9534:	01031313          	slli	t1,t1,0x10
    9538:	029908b3          	mul	a7,s2,s1
    953c:	00e30333          	add	t1,t1,a4
    9540:	01055513          	srli	a0,a0,0x10
    9544:	03278fb3          	mul	t6,a5,s2
    9548:	0108de13          	srli	t3,a7,0x10
    954c:	029284b3          	mul	s1,t0,s1
    9550:	01f484b3          	add	s1,s1,t6
    9554:	009e04b3          	add	s1,t3,s1
    9558:	02578733          	mul	a4,a5,t0
    955c:	01f4f463          	bgeu	s1,t6,9564 <__muldf3+0x368>
    9560:	01d70733          	add	a4,a4,t4
    9564:	000109b7          	lui	s3,0x10
    9568:	fff98e13          	addi	t3,s3,-1 # ffff <_data_lma+0x59e7>
    956c:	01c477b3          	and	a5,s0,t3
    9570:	01c4feb3          	and	t4,s1,t3
    9574:	01045f93          	srli	t6,s0,0x10
    9578:	0104d493          	srli	s1,s1,0x10
    957c:	01c8f8b3          	and	a7,a7,t3
    9580:	02f583b3          	mul	t2,a1,a5
    9584:	00e48e33          	add	t3,s1,a4
    9588:	010e9e93          	slli	t4,t4,0x10
    958c:	011e8eb3          	add	t4,t4,a7
    9590:	01d50533          	add	a0,a0,t4
    9594:	02f80733          	mul	a4,a6,a5
    9598:	0103d893          	srli	a7,t2,0x10
    959c:	02bf85b3          	mul	a1,t6,a1
    95a0:	00b70733          	add	a4,a4,a1
    95a4:	00e888b3          	add	a7,a7,a4
    95a8:	03f80833          	mul	a6,a6,t6
    95ac:	00b8f463          	bgeu	a7,a1,95b4 <__muldf3+0x3b8>
    95b0:	01380833          	add	a6,a6,s3
    95b4:	00010737          	lui	a4,0x10
    95b8:	fff70413          	addi	s0,a4,-1 # ffff <_data_lma+0x59e7>
    95bc:	0088f5b3          	and	a1,a7,s0
    95c0:	0108d893          	srli	a7,a7,0x10
    95c4:	010888b3          	add	a7,a7,a6
    95c8:	0083f3b3          	and	t2,t2,s0
    95cc:	01059593          	slli	a1,a1,0x10
    95d0:	02f90833          	mul	a6,s2,a5
    95d4:	007585b3          	add	a1,a1,t2
    95d8:	032f8933          	mul	s2,t6,s2
    95dc:	01085413          	srli	s0,a6,0x10
    95e0:	02f287b3          	mul	a5,t0,a5
    95e4:	012787b3          	add	a5,a5,s2
    95e8:	00f407b3          	add	a5,s0,a5
    95ec:	03f28fb3          	mul	t6,t0,t6
    95f0:	0127f463          	bgeu	a5,s2,95f8 <__muldf3+0x3fc>
    95f4:	00ef8fb3          	add	t6,t6,a4
    95f8:	000102b7          	lui	t0,0x10
    95fc:	fff28293          	addi	t0,t0,-1 # ffff <_data_lma+0x59e7>
    9600:	0057f733          	and	a4,a5,t0
    9604:	00587833          	and	a6,a6,t0
    9608:	01071713          	slli	a4,a4,0x10
    960c:	01e50533          	add	a0,a0,t5
    9610:	01070733          	add	a4,a4,a6
    9614:	01d53eb3          	sltu	t4,a0,t4
    9618:	01c70733          	add	a4,a4,t3
    961c:	00b50533          	add	a0,a0,a1
    9620:	01d70433          	add	s0,a4,t4
    9624:	00b535b3          	sltu	a1,a0,a1
    9628:	01140833          	add	a6,s0,a7
    962c:	00b80f33          	add	t5,a6,a1
    9630:	01c73733          	sltu	a4,a4,t3
    9634:	01d43433          	sltu	s0,s0,t4
    9638:	00876433          	or	s0,a4,s0
    963c:	0107d793          	srli	a5,a5,0x10
    9640:	011838b3          	sltu	a7,a6,a7
    9644:	00bf35b3          	sltu	a1,t5,a1
    9648:	00f40433          	add	s0,s0,a5
    964c:	00b8e5b3          	or	a1,a7,a1
    9650:	00951493          	slli	s1,a0,0x9
    9654:	00b40433          	add	s0,s0,a1
    9658:	01f40433          	add	s0,s0,t6
    965c:	0064e4b3          	or	s1,s1,t1
    9660:	00941713          	slli	a4,s0,0x9
    9664:	009034b3          	snez	s1,s1
    9668:	017f5413          	srli	s0,t5,0x17
    966c:	01755513          	srli	a0,a0,0x17
    9670:	009f1793          	slli	a5,t5,0x9
    9674:	00a4e4b3          	or	s1,s1,a0
    9678:	00876433          	or	s0,a4,s0
    967c:	00f4e4b3          	or	s1,s1,a5
    9680:	00741793          	slli	a5,s0,0x7
    9684:	0207d063          	bgez	a5,96a4 <__muldf3+0x4a8>
    9688:	0014d793          	srli	a5,s1,0x1
    968c:	0014f493          	andi	s1,s1,1
    9690:	01f41713          	slli	a4,s0,0x1f
    9694:	0097e4b3          	or	s1,a5,s1
    9698:	00e4e4b3          	or	s1,s1,a4
    969c:	00145413          	srli	s0,s0,0x1
    96a0:	00060b13          	mv	s6,a2
    96a4:	3ffb0713          	addi	a4,s6,1023
    96a8:	0ce05463          	blez	a4,9770 <__muldf3+0x574>
    96ac:	0074f793          	andi	a5,s1,7
    96b0:	02078063          	beqz	a5,96d0 <__muldf3+0x4d4>
    96b4:	00f4f793          	andi	a5,s1,15
    96b8:	00400613          	li	a2,4
    96bc:	00c78a63          	beq	a5,a2,96d0 <__muldf3+0x4d4>
    96c0:	00448793          	addi	a5,s1,4
    96c4:	0097b4b3          	sltu	s1,a5,s1
    96c8:	00940433          	add	s0,s0,s1
    96cc:	00078493          	mv	s1,a5
    96d0:	00741793          	slli	a5,s0,0x7
    96d4:	0007da63          	bgez	a5,96e8 <__muldf3+0x4ec>
    96d8:	ff0007b7          	lui	a5,0xff000
    96dc:	fff78793          	addi	a5,a5,-1 # feffffff <__freertos_irq_stack_top+0xfdfeffff>
    96e0:	00f47433          	and	s0,s0,a5
    96e4:	400b0713          	addi	a4,s6,1024
    96e8:	7fe00793          	li	a5,2046
    96ec:	14e7ce63          	blt	a5,a4,9848 <__muldf3+0x64c>
    96f0:	0034d793          	srli	a5,s1,0x3
    96f4:	01d41493          	slli	s1,s0,0x1d
    96f8:	00941413          	slli	s0,s0,0x9
    96fc:	00f4e4b3          	or	s1,s1,a5
    9700:	00c45413          	srli	s0,s0,0xc
    9704:	7ff77793          	andi	a5,a4,2047
    9708:	c05ff06f          	j	930c <__muldf3+0x110>
    970c:	00060513          	mv	a0,a2
    9710:	00c12423          	sw	a2,8(sp)
    9714:	ffffa097          	auipc	ra,0xffffa
    9718:	7c0080e7          	jalr	1984(ra) # 3ed4 <__clzsi2>
    971c:	01550693          	addi	a3,a0,21
    9720:	01c00713          	li	a4,28
    9724:	02050793          	addi	a5,a0,32
    9728:	00812603          	lw	a2,8(sp)
    972c:	d0d752e3          	bge	a4,a3,9430 <__muldf3+0x234>
    9730:	ff850513          	addi	a0,a0,-8
    9734:	00000593          	li	a1,0
    9738:	00a61933          	sll	s2,a2,a0
    973c:	d11ff06f          	j	944c <__muldf3+0x250>
    9740:	ffffa097          	auipc	ra,0xffffa
    9744:	794080e7          	jalr	1940(ra) # 3ed4 <__clzsi2>
    9748:	01550593          	addi	a1,a0,21
    974c:	01c00713          	li	a4,28
    9750:	02050793          	addi	a5,a0,32
    9754:	00812603          	lw	a2,8(sp)
    9758:	00c12683          	lw	a3,12(sp)
    975c:	c6b754e3          	bge	a4,a1,93c4 <__muldf3+0x1c8>
    9760:	ff850513          	addi	a0,a0,-8
    9764:	00000493          	li	s1,0
    9768:	00a91433          	sll	s0,s2,a0
    976c:	c75ff06f          	j	93e0 <__muldf3+0x1e4>
    9770:	00100613          	li	a2,1
    9774:	40e60633          	sub	a2,a2,a4
    9778:	06071063          	bnez	a4,97d8 <__muldf3+0x5dc>
    977c:	41eb0793          	addi	a5,s6,1054
    9780:	00f49733          	sll	a4,s1,a5
    9784:	00f417b3          	sll	a5,s0,a5
    9788:	00c4d4b3          	srl	s1,s1,a2
    978c:	0097e4b3          	or	s1,a5,s1
    9790:	00e03733          	snez	a4,a4
    9794:	00e4e4b3          	or	s1,s1,a4
    9798:	0074f793          	andi	a5,s1,7
    979c:	00c45633          	srl	a2,s0,a2
    97a0:	02078063          	beqz	a5,97c0 <__muldf3+0x5c4>
    97a4:	00f4f793          	andi	a5,s1,15
    97a8:	00400713          	li	a4,4
    97ac:	00e78a63          	beq	a5,a4,97c0 <__muldf3+0x5c4>
    97b0:	00448793          	addi	a5,s1,4
    97b4:	0097b4b3          	sltu	s1,a5,s1
    97b8:	00960633          	add	a2,a2,s1
    97bc:	00078493          	mv	s1,a5
    97c0:	00861793          	slli	a5,a2,0x8
    97c4:	0607d463          	bgez	a5,982c <__muldf3+0x630>
    97c8:	00100793          	li	a5,1
    97cc:	00000413          	li	s0,0
    97d0:	00000493          	li	s1,0
    97d4:	b39ff06f          	j	930c <__muldf3+0x110>
    97d8:	03800793          	li	a5,56
    97dc:	bac7c4e3          	blt	a5,a2,9384 <__muldf3+0x188>
    97e0:	01f00793          	li	a5,31
    97e4:	f8c7dce3          	bge	a5,a2,977c <__muldf3+0x580>
    97e8:	fe100793          	li	a5,-31
    97ec:	40e78733          	sub	a4,a5,a4
    97f0:	02000793          	li	a5,32
    97f4:	00e45733          	srl	a4,s0,a4
    97f8:	00f60863          	beq	a2,a5,9808 <__muldf3+0x60c>
    97fc:	43eb0793          	addi	a5,s6,1086
    9800:	00f417b3          	sll	a5,s0,a5
    9804:	00f4e4b3          	or	s1,s1,a5
    9808:	009034b3          	snez	s1,s1
    980c:	00e4e4b3          	or	s1,s1,a4
    9810:	0074f613          	andi	a2,s1,7
    9814:	00000413          	li	s0,0
    9818:	02060063          	beqz	a2,9838 <__muldf3+0x63c>
    981c:	00f4f793          	andi	a5,s1,15
    9820:	00400713          	li	a4,4
    9824:	00000613          	li	a2,0
    9828:	f8e794e3          	bne	a5,a4,97b0 <__muldf3+0x5b4>
    982c:	00961413          	slli	s0,a2,0x9
    9830:	00c45413          	srli	s0,s0,0xc
    9834:	01d61613          	slli	a2,a2,0x1d
    9838:	0034d493          	srli	s1,s1,0x3
    983c:	00c4e4b3          	or	s1,s1,a2
    9840:	00000793          	li	a5,0
    9844:	ac9ff06f          	j	930c <__muldf3+0x110>
    9848:	7ff00793          	li	a5,2047
    984c:	00000413          	li	s0,0
    9850:	00000493          	li	s1,0
    9854:	ab9ff06f          	j	930c <__muldf3+0x110>
    9858:	00060b13          	mv	s6,a2
    985c:	e49ff06f          	j	96a4 <__muldf3+0x4a8>

00009860 <__subdf3>:
    9860:	00100737          	lui	a4,0x100
    9864:	fff70713          	addi	a4,a4,-1 # fffff <_data_lma+0xf59e7>
    9868:	fe010113          	addi	sp,sp,-32
    986c:	00b77333          	and	t1,a4,a1
    9870:	0146d893          	srli	a7,a3,0x14
    9874:	00d77733          	and	a4,a4,a3
    9878:	01d65e93          	srli	t4,a2,0x1d
    987c:	00812c23          	sw	s0,24(sp)
    9880:	00912a23          	sw	s1,20(sp)
    9884:	00331313          	slli	t1,t1,0x3
    9888:	0145d493          	srli	s1,a1,0x14
    988c:	01d55793          	srli	a5,a0,0x1d
    9890:	00371713          	slli	a4,a4,0x3
    9894:	00112e23          	sw	ra,28(sp)
    9898:	01212823          	sw	s2,16(sp)
    989c:	01312623          	sw	s3,12(sp)
    98a0:	7ff8f893          	andi	a7,a7,2047
    98a4:	7ff00e13          	li	t3,2047
    98a8:	00eee733          	or	a4,t4,a4
    98ac:	7ff4f493          	andi	s1,s1,2047
    98b0:	01f5d413          	srli	s0,a1,0x1f
    98b4:	0067e333          	or	t1,a5,t1
    98b8:	00351f13          	slli	t5,a0,0x3
    98bc:	01f6d693          	srli	a3,a3,0x1f
    98c0:	00361e93          	slli	t4,a2,0x3
    98c4:	1dc88863          	beq	a7,t3,9a94 <__subdf3+0x234>
    98c8:	0016c693          	xori	a3,a3,1
    98cc:	411485b3          	sub	a1,s1,a7
    98d0:	16d40a63          	beq	s0,a3,9a44 <__subdf3+0x1e4>
    98d4:	1cb05a63          	blez	a1,9aa8 <__subdf3+0x248>
    98d8:	20088663          	beqz	a7,9ae4 <__subdf3+0x284>
    98dc:	008007b7          	lui	a5,0x800
    98e0:	00f76733          	or	a4,a4,a5
    98e4:	67c48e63          	beq	s1,t3,9f60 <__subdf3+0x700>
    98e8:	03800793          	li	a5,56
    98ec:	3eb7c663          	blt	a5,a1,9cd8 <__subdf3+0x478>
    98f0:	01f00793          	li	a5,31
    98f4:	54b7ce63          	blt	a5,a1,9e50 <__subdf3+0x5f0>
    98f8:	02000793          	li	a5,32
    98fc:	40b787b3          	sub	a5,a5,a1
    9900:	00bed9b3          	srl	s3,t4,a1
    9904:	00f71833          	sll	a6,a4,a5
    9908:	00fe9eb3          	sll	t4,t4,a5
    990c:	01386833          	or	a6,a6,s3
    9910:	00b75733          	srl	a4,a4,a1
    9914:	01d039b3          	snez	s3,t4
    9918:	01386833          	or	a6,a6,s3
    991c:	40e30333          	sub	t1,t1,a4
    9920:	410f09b3          	sub	s3,t5,a6
    9924:	013f37b3          	sltu	a5,t5,s3
    9928:	40f30633          	sub	a2,t1,a5
    992c:	00861793          	slli	a5,a2,0x8
    9930:	2a07da63          	bgez	a5,9be4 <__subdf3+0x384>
    9934:	00800937          	lui	s2,0x800
    9938:	fff90913          	addi	s2,s2,-1 # 7fffff <_data_lma+0x7f59e7>
    993c:	01267933          	and	s2,a2,s2
    9940:	36090863          	beqz	s2,9cb0 <__subdf3+0x450>
    9944:	00090513          	mv	a0,s2
    9948:	ffffa097          	auipc	ra,0xffffa
    994c:	58c080e7          	jalr	1420(ra) # 3ed4 <__clzsi2>
    9950:	ff850713          	addi	a4,a0,-8
    9954:	02000793          	li	a5,32
    9958:	40e787b3          	sub	a5,a5,a4
    995c:	00f9d7b3          	srl	a5,s3,a5
    9960:	00e91633          	sll	a2,s2,a4
    9964:	00c7e7b3          	or	a5,a5,a2
    9968:	00e999b3          	sll	s3,s3,a4
    996c:	32974463          	blt	a4,s1,9c94 <__subdf3+0x434>
    9970:	40970733          	sub	a4,a4,s1
    9974:	00170613          	addi	a2,a4,1
    9978:	01f00693          	li	a3,31
    997c:	44c6cc63          	blt	a3,a2,9dd4 <__subdf3+0x574>
    9980:	02000713          	li	a4,32
    9984:	40c70733          	sub	a4,a4,a2
    9988:	00c9d6b3          	srl	a3,s3,a2
    998c:	00e99833          	sll	a6,s3,a4
    9990:	00e79733          	sll	a4,a5,a4
    9994:	00d76733          	or	a4,a4,a3
    9998:	01003833          	snez	a6,a6
    999c:	010769b3          	or	s3,a4,a6
    99a0:	00c7d633          	srl	a2,a5,a2
    99a4:	00000493          	li	s1,0
    99a8:	0079f793          	andi	a5,s3,7
    99ac:	02078063          	beqz	a5,99cc <__subdf3+0x16c>
    99b0:	00f9f693          	andi	a3,s3,15
    99b4:	00400793          	li	a5,4
    99b8:	00f68a63          	beq	a3,a5,99cc <__subdf3+0x16c>
    99bc:	00498693          	addi	a3,s3,4
    99c0:	0136b833          	sltu	a6,a3,s3
    99c4:	01060633          	add	a2,a2,a6
    99c8:	00068993          	mv	s3,a3
    99cc:	00861793          	slli	a5,a2,0x8
    99d0:	2007de63          	bgez	a5,9bec <__subdf3+0x38c>
    99d4:	00148713          	addi	a4,s1,1
    99d8:	7ff00793          	li	a5,2047
    99dc:	00147413          	andi	s0,s0,1
    99e0:	26f70463          	beq	a4,a5,9c48 <__subdf3+0x3e8>
    99e4:	ff8007b7          	lui	a5,0xff800
    99e8:	fff78793          	addi	a5,a5,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    99ec:	00f677b3          	and	a5,a2,a5
    99f0:	01d79813          	slli	a6,a5,0x1d
    99f4:	0039d993          	srli	s3,s3,0x3
    99f8:	00979793          	slli	a5,a5,0x9
    99fc:	01386833          	or	a6,a6,s3
    9a00:	00c7d793          	srli	a5,a5,0xc
    9a04:	7ff77713          	andi	a4,a4,2047
    9a08:	00c79693          	slli	a3,a5,0xc
    9a0c:	01471713          	slli	a4,a4,0x14
    9a10:	00c6d693          	srli	a3,a3,0xc
    9a14:	01f41413          	slli	s0,s0,0x1f
    9a18:	00e6e6b3          	or	a3,a3,a4
    9a1c:	0086e6b3          	or	a3,a3,s0
    9a20:	01c12083          	lw	ra,28(sp)
    9a24:	01812403          	lw	s0,24(sp)
    9a28:	01412483          	lw	s1,20(sp)
    9a2c:	01012903          	lw	s2,16(sp)
    9a30:	00c12983          	lw	s3,12(sp)
    9a34:	00080513          	mv	a0,a6
    9a38:	00068593          	mv	a1,a3
    9a3c:	02010113          	addi	sp,sp,32
    9a40:	00008067          	ret
    9a44:	0ab05e63          	blez	a1,9b00 <__subdf3+0x2a0>
    9a48:	14088a63          	beqz	a7,9b9c <__subdf3+0x33c>
    9a4c:	008007b7          	lui	a5,0x800
    9a50:	00f76733          	or	a4,a4,a5
    9a54:	33c48e63          	beq	s1,t3,9d90 <__subdf3+0x530>
    9a58:	03800793          	li	a5,56
    9a5c:	1cb7c063          	blt	a5,a1,9c1c <__subdf3+0x3bc>
    9a60:	01f00793          	li	a5,31
    9a64:	44b7dc63          	bge	a5,a1,9ebc <__subdf3+0x65c>
    9a68:	fe058813          	addi	a6,a1,-32
    9a6c:	02000793          	li	a5,32
    9a70:	010759b3          	srl	s3,a4,a6
    9a74:	00f58a63          	beq	a1,a5,9a88 <__subdf3+0x228>
    9a78:	04000793          	li	a5,64
    9a7c:	40b785b3          	sub	a1,a5,a1
    9a80:	00b71733          	sll	a4,a4,a1
    9a84:	00eeeeb3          	or	t4,t4,a4
    9a88:	01d03833          	snez	a6,t4
    9a8c:	01386833          	or	a6,a6,s3
    9a90:	1940006f          	j	9c24 <__subdf3+0x3c4>
    9a94:	01d767b3          	or	a5,a4,t4
    9a98:	80148593          	addi	a1,s1,-2047
    9a9c:	00079463          	bnez	a5,9aa4 <__subdf3+0x244>
    9aa0:	0016c693          	xori	a3,a3,1
    9aa4:	04d40e63          	beq	s0,a3,9b00 <__subdf3+0x2a0>
    9aa8:	08059a63          	bnez	a1,9b3c <__subdf3+0x2dc>
    9aac:	00148793          	addi	a5,s1,1
    9ab0:	7fe7f793          	andi	a5,a5,2046
    9ab4:	24079463          	bnez	a5,9cfc <__subdf3+0x49c>
    9ab8:	01e367b3          	or	a5,t1,t5
    9abc:	01d76833          	or	a6,a4,t4
    9ac0:	18049c63          	bnez	s1,9c58 <__subdf3+0x3f8>
    9ac4:	46078263          	beqz	a5,9f28 <__subdf3+0x6c8>
    9ac8:	4e081063          	bnez	a6,9fa8 <__subdf3+0x748>
    9acc:	00351813          	slli	a6,a0,0x3
    9ad0:	01d31693          	slli	a3,t1,0x1d
    9ad4:	00385813          	srli	a6,a6,0x3
    9ad8:	0106e833          	or	a6,a3,a6
    9adc:	00335793          	srli	a5,t1,0x3
    9ae0:	1280006f          	j	9c08 <__subdf3+0x3a8>
    9ae4:	01d767b3          	or	a5,a4,t4
    9ae8:	1e078e63          	beqz	a5,9ce4 <__subdf3+0x484>
    9aec:	fff58793          	addi	a5,a1,-1
    9af0:	44078c63          	beqz	a5,9f48 <__subdf3+0x6e8>
    9af4:	29c58e63          	beq	a1,t3,9d90 <__subdf3+0x530>
    9af8:	00078593          	mv	a1,a5
    9afc:	dedff06f          	j	98e8 <__subdf3+0x88>
    9b00:	22059463          	bnez	a1,9d28 <__subdf3+0x4c8>
    9b04:	00148693          	addi	a3,s1,1
    9b08:	7fe6f793          	andi	a5,a3,2046
    9b0c:	0a079663          	bnez	a5,9bb8 <__subdf3+0x358>
    9b10:	01e367b3          	or	a5,t1,t5
    9b14:	3e049863          	bnez	s1,9f04 <__subdf3+0x6a4>
    9b18:	50078a63          	beqz	a5,a02c <__subdf3+0x7cc>
    9b1c:	01d767b3          	or	a5,a4,t4
    9b20:	52079263          	bnez	a5,a044 <__subdf3+0x7e4>
    9b24:	00351513          	slli	a0,a0,0x3
    9b28:	01d31813          	slli	a6,t1,0x1d
    9b2c:	00355513          	srli	a0,a0,0x3
    9b30:	00a86833          	or	a6,a6,a0
    9b34:	00335793          	srli	a5,t1,0x3
    9b38:	0d00006f          	j	9c08 <__subdf3+0x3a8>
    9b3c:	409885b3          	sub	a1,a7,s1
    9b40:	26049463          	bnez	s1,9da8 <__subdf3+0x548>
    9b44:	01e367b3          	or	a5,t1,t5
    9b48:	3a078063          	beqz	a5,9ee8 <__subdf3+0x688>
    9b4c:	fff58793          	addi	a5,a1,-1
    9b50:	4c078063          	beqz	a5,a010 <__subdf3+0x7b0>
    9b54:	7ff00513          	li	a0,2047
    9b58:	26a58063          	beq	a1,a0,9db8 <__subdf3+0x558>
    9b5c:	00078593          	mv	a1,a5
    9b60:	03800793          	li	a5,56
    9b64:	30b7cc63          	blt	a5,a1,9e7c <__subdf3+0x61c>
    9b68:	01f00793          	li	a5,31
    9b6c:	46b7cc63          	blt	a5,a1,9fe4 <__subdf3+0x784>
    9b70:	02000793          	li	a5,32
    9b74:	40b787b3          	sub	a5,a5,a1
    9b78:	00f31833          	sll	a6,t1,a5
    9b7c:	00bf5633          	srl	a2,t5,a1
    9b80:	00ff17b3          	sll	a5,t5,a5
    9b84:	00c86833          	or	a6,a6,a2
    9b88:	00f039b3          	snez	s3,a5
    9b8c:	00b35333          	srl	t1,t1,a1
    9b90:	01386833          	or	a6,a6,s3
    9b94:	40670733          	sub	a4,a4,t1
    9b98:	2ec0006f          	j	9e84 <__subdf3+0x624>
    9b9c:	01d767b3          	or	a5,a4,t4
    9ba0:	14078263          	beqz	a5,9ce4 <__subdf3+0x484>
    9ba4:	fff58793          	addi	a5,a1,-1
    9ba8:	26078063          	beqz	a5,9e08 <__subdf3+0x5a8>
    9bac:	37c58263          	beq	a1,t3,9f10 <__subdf3+0x6b0>
    9bb0:	00078593          	mv	a1,a5
    9bb4:	ea5ff06f          	j	9a58 <__subdf3+0x1f8>
    9bb8:	7ff00793          	li	a5,2047
    9bbc:	08f68463          	beq	a3,a5,9c44 <__subdf3+0x3e4>
    9bc0:	01df0eb3          	add	t4,t5,t4
    9bc4:	01eeb633          	sltu	a2,t4,t5
    9bc8:	00e307b3          	add	a5,t1,a4
    9bcc:	00c787b3          	add	a5,a5,a2
    9bd0:	01f79813          	slli	a6,a5,0x1f
    9bd4:	001ede93          	srli	t4,t4,0x1
    9bd8:	01d869b3          	or	s3,a6,t4
    9bdc:	0017d613          	srli	a2,a5,0x1
    9be0:	00068493          	mv	s1,a3
    9be4:	0079f793          	andi	a5,s3,7
    9be8:	dc0794e3          	bnez	a5,99b0 <__subdf3+0x150>
    9bec:	01d61793          	slli	a5,a2,0x1d
    9bf0:	0039d813          	srli	a6,s3,0x3
    9bf4:	00f86833          	or	a6,a6,a5
    9bf8:	00048593          	mv	a1,s1
    9bfc:	00365793          	srli	a5,a2,0x3
    9c00:	7ff00713          	li	a4,2047
    9c04:	06e58a63          	beq	a1,a4,9c78 <__subdf3+0x418>
    9c08:	00c79793          	slli	a5,a5,0xc
    9c0c:	00c7d793          	srli	a5,a5,0xc
    9c10:	7ff5f713          	andi	a4,a1,2047
    9c14:	00147413          	andi	s0,s0,1
    9c18:	df1ff06f          	j	9a08 <__subdf3+0x1a8>
    9c1c:	01d76733          	or	a4,a4,t4
    9c20:	00e03833          	snez	a6,a4
    9c24:	01e809b3          	add	s3,a6,t5
    9c28:	01e9b7b3          	sltu	a5,s3,t5
    9c2c:	00678633          	add	a2,a5,t1
    9c30:	00861793          	slli	a5,a2,0x8
    9c34:	fa07d8e3          	bgez	a5,9be4 <__subdf3+0x384>
    9c38:	00148493          	addi	s1,s1,1
    9c3c:	7ff00793          	li	a5,2047
    9c40:	1ef49463          	bne	s1,a5,9e28 <__subdf3+0x5c8>
    9c44:	00147413          	andi	s0,s0,1
    9c48:	7ff00713          	li	a4,2047
    9c4c:	00000793          	li	a5,0
    9c50:	00000813          	li	a6,0
    9c54:	db5ff06f          	j	9a08 <__subdf3+0x1a8>
    9c58:	12079a63          	bnez	a5,9d8c <__subdf3+0x52c>
    9c5c:	46080263          	beqz	a6,a0c0 <__subdf3+0x860>
    9c60:	00361813          	slli	a6,a2,0x3
    9c64:	01d71793          	slli	a5,a4,0x1d
    9c68:	00385813          	srli	a6,a6,0x3
    9c6c:	00f86833          	or	a6,a6,a5
    9c70:	00068413          	mv	s0,a3
    9c74:	00375793          	srli	a5,a4,0x3
    9c78:	00f867b3          	or	a5,a6,a5
    9c7c:	fc0784e3          	beqz	a5,9c44 <__subdf3+0x3e4>
    9c80:	00000413          	li	s0,0
    9c84:	7ff00713          	li	a4,2047
    9c88:	000807b7          	lui	a5,0x80
    9c8c:	00000813          	li	a6,0
    9c90:	d79ff06f          	j	9a08 <__subdf3+0x1a8>
    9c94:	ff800637          	lui	a2,0xff800
    9c98:	fff60613          	addi	a2,a2,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    9c9c:	00c7f633          	and	a2,a5,a2
    9ca0:	0079f793          	andi	a5,s3,7
    9ca4:	40e484b3          	sub	s1,s1,a4
    9ca8:	d00794e3          	bnez	a5,99b0 <__subdf3+0x150>
    9cac:	f41ff06f          	j	9bec <__subdf3+0x38c>
    9cb0:	00098513          	mv	a0,s3
    9cb4:	ffffa097          	auipc	ra,0xffffa
    9cb8:	220080e7          	jalr	544(ra) # 3ed4 <__clzsi2>
    9cbc:	01850713          	addi	a4,a0,24
    9cc0:	01f00793          	li	a5,31
    9cc4:	c8e7d8e3          	bge	a5,a4,9954 <__subdf3+0xf4>
    9cc8:	ff850613          	addi	a2,a0,-8
    9ccc:	00c997b3          	sll	a5,s3,a2
    9cd0:	00000993          	li	s3,0
    9cd4:	c99ff06f          	j	996c <__subdf3+0x10c>
    9cd8:	01d76833          	or	a6,a4,t4
    9cdc:	01003833          	snez	a6,a6
    9ce0:	c41ff06f          	j	9920 <__subdf3+0xc0>
    9ce4:	00351813          	slli	a6,a0,0x3
    9ce8:	01d31793          	slli	a5,t1,0x1d
    9cec:	00385813          	srli	a6,a6,0x3
    9cf0:	00f86833          	or	a6,a6,a5
    9cf4:	00335793          	srli	a5,t1,0x3
    9cf8:	f09ff06f          	j	9c00 <__subdf3+0x3a0>
    9cfc:	41df09b3          	sub	s3,t5,t4
    9d00:	40e30933          	sub	s2,t1,a4
    9d04:	013f3633          	sltu	a2,t5,s3
    9d08:	40c90933          	sub	s2,s2,a2
    9d0c:	00891793          	slli	a5,s2,0x8
    9d10:	2607c463          	bltz	a5,9f78 <__subdf3+0x718>
    9d14:	0129e833          	or	a6,s3,s2
    9d18:	c20814e3          	bnez	a6,9940 <__subdf3+0xe0>
    9d1c:	00000793          	li	a5,0
    9d20:	00000413          	li	s0,0
    9d24:	ee5ff06f          	j	9c08 <__subdf3+0x3a8>
    9d28:	409885b3          	sub	a1,a7,s1
    9d2c:	16048863          	beqz	s1,9e9c <__subdf3+0x63c>
    9d30:	008006b7          	lui	a3,0x800
    9d34:	7ff00793          	li	a5,2047
    9d38:	00d36333          	or	t1,t1,a3
    9d3c:	24f88a63          	beq	a7,a5,9f90 <__subdf3+0x730>
    9d40:	03800793          	li	a5,56
    9d44:	28b7ca63          	blt	a5,a1,9fd8 <__subdf3+0x778>
    9d48:	01f00793          	li	a5,31
    9d4c:	34b7c463          	blt	a5,a1,a094 <__subdf3+0x834>
    9d50:	02000793          	li	a5,32
    9d54:	40b787b3          	sub	a5,a5,a1
    9d58:	00f31833          	sll	a6,t1,a5
    9d5c:	00bf56b3          	srl	a3,t5,a1
    9d60:	00ff17b3          	sll	a5,t5,a5
    9d64:	00d86833          	or	a6,a6,a3
    9d68:	00f039b3          	snez	s3,a5
    9d6c:	00b35333          	srl	t1,t1,a1
    9d70:	01386833          	or	a6,a6,s3
    9d74:	00670733          	add	a4,a4,t1
    9d78:	01d809b3          	add	s3,a6,t4
    9d7c:	01d9b7b3          	sltu	a5,s3,t4
    9d80:	00e78633          	add	a2,a5,a4
    9d84:	00088493          	mv	s1,a7
    9d88:	ea9ff06f          	j	9c30 <__subdf3+0x3d0>
    9d8c:	ee081ae3          	bnez	a6,9c80 <__subdf3+0x420>
    9d90:	00351813          	slli	a6,a0,0x3
    9d94:	01d31793          	slli	a5,t1,0x1d
    9d98:	00385813          	srli	a6,a6,0x3
    9d9c:	00f86833          	or	a6,a6,a5
    9da0:	00335793          	srli	a5,t1,0x3
    9da4:	ed5ff06f          	j	9c78 <__subdf3+0x418>
    9da8:	00800537          	lui	a0,0x800
    9dac:	7ff00793          	li	a5,2047
    9db0:	00a36333          	or	t1,t1,a0
    9db4:	daf896e3          	bne	a7,a5,9b60 <__subdf3+0x300>
    9db8:	00361613          	slli	a2,a2,0x3
    9dbc:	01d71813          	slli	a6,a4,0x1d
    9dc0:	00365613          	srli	a2,a2,0x3
    9dc4:	00c86833          	or	a6,a6,a2
    9dc8:	00375793          	srli	a5,a4,0x3
    9dcc:	00068413          	mv	s0,a3
    9dd0:	ea9ff06f          	j	9c78 <__subdf3+0x418>
    9dd4:	fe170713          	addi	a4,a4,-31
    9dd8:	02000693          	li	a3,32
    9ddc:	00e7d733          	srl	a4,a5,a4
    9de0:	00d60a63          	beq	a2,a3,9df4 <__subdf3+0x594>
    9de4:	04000693          	li	a3,64
    9de8:	40c68633          	sub	a2,a3,a2
    9dec:	00c79633          	sll	a2,a5,a2
    9df0:	00c9e9b3          	or	s3,s3,a2
    9df4:	01303833          	snez	a6,s3
    9df8:	00e869b3          	or	s3,a6,a4
    9dfc:	00000613          	li	a2,0
    9e00:	00000493          	li	s1,0
    9e04:	de1ff06f          	j	9be4 <__subdf3+0x384>
    9e08:	01df09b3          	add	s3,t5,t4
    9e0c:	00e307b3          	add	a5,t1,a4
    9e10:	01e9bf33          	sltu	t5,s3,t5
    9e14:	01e78633          	add	a2,a5,t5
    9e18:	00861793          	slli	a5,a2,0x8
    9e1c:	00100493          	li	s1,1
    9e20:	dc07d2e3          	bgez	a5,9be4 <__subdf3+0x384>
    9e24:	00200493          	li	s1,2
    9e28:	ff8007b7          	lui	a5,0xff800
    9e2c:	fff78793          	addi	a5,a5,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    9e30:	00f677b3          	and	a5,a2,a5
    9e34:	0019d713          	srli	a4,s3,0x1
    9e38:	0019f813          	andi	a6,s3,1
    9e3c:	01076833          	or	a6,a4,a6
    9e40:	01f79993          	slli	s3,a5,0x1f
    9e44:	0109e9b3          	or	s3,s3,a6
    9e48:	0017d613          	srli	a2,a5,0x1
    9e4c:	b5dff06f          	j	99a8 <__subdf3+0x148>
    9e50:	fe058813          	addi	a6,a1,-32
    9e54:	02000793          	li	a5,32
    9e58:	010759b3          	srl	s3,a4,a6
    9e5c:	00f58a63          	beq	a1,a5,9e70 <__subdf3+0x610>
    9e60:	04000793          	li	a5,64
    9e64:	40b785b3          	sub	a1,a5,a1
    9e68:	00b71733          	sll	a4,a4,a1
    9e6c:	00eeeeb3          	or	t4,t4,a4
    9e70:	01d03833          	snez	a6,t4
    9e74:	01386833          	or	a6,a6,s3
    9e78:	aa9ff06f          	j	9920 <__subdf3+0xc0>
    9e7c:	01e36333          	or	t1,t1,t5
    9e80:	00603833          	snez	a6,t1
    9e84:	410e89b3          	sub	s3,t4,a6
    9e88:	013eb7b3          	sltu	a5,t4,s3
    9e8c:	40f70633          	sub	a2,a4,a5
    9e90:	00088493          	mv	s1,a7
    9e94:	00068413          	mv	s0,a3
    9e98:	a95ff06f          	j	992c <__subdf3+0xcc>
    9e9c:	01e367b3          	or	a5,t1,t5
    9ea0:	1c078863          	beqz	a5,a070 <__subdf3+0x810>
    9ea4:	fff58793          	addi	a5,a1,-1
    9ea8:	22078463          	beqz	a5,a0d0 <__subdf3+0x870>
    9eac:	7ff00693          	li	a3,2047
    9eb0:	0ed58063          	beq	a1,a3,9f90 <__subdf3+0x730>
    9eb4:	00078593          	mv	a1,a5
    9eb8:	e89ff06f          	j	9d40 <__subdf3+0x4e0>
    9ebc:	02000793          	li	a5,32
    9ec0:	40b787b3          	sub	a5,a5,a1
    9ec4:	00bed9b3          	srl	s3,t4,a1
    9ec8:	00f71833          	sll	a6,a4,a5
    9ecc:	00fe9eb3          	sll	t4,t4,a5
    9ed0:	01386833          	or	a6,a6,s3
    9ed4:	00b75733          	srl	a4,a4,a1
    9ed8:	01d039b3          	snez	s3,t4
    9edc:	01386833          	or	a6,a6,s3
    9ee0:	00e30333          	add	t1,t1,a4
    9ee4:	d41ff06f          	j	9c24 <__subdf3+0x3c4>
    9ee8:	00361813          	slli	a6,a2,0x3
    9eec:	01d71793          	slli	a5,a4,0x1d
    9ef0:	00385813          	srli	a6,a6,0x3
    9ef4:	0107e833          	or	a6,a5,a6
    9ef8:	00068413          	mv	s0,a3
    9efc:	00375793          	srli	a5,a4,0x3
    9f00:	d01ff06f          	j	9c00 <__subdf3+0x3a0>
    9f04:	08078663          	beqz	a5,9f90 <__subdf3+0x730>
    9f08:	01d76733          	or	a4,a4,t4
    9f0c:	d6071ae3          	bnez	a4,9c80 <__subdf3+0x420>
    9f10:	00351513          	slli	a0,a0,0x3
    9f14:	01d31813          	slli	a6,t1,0x1d
    9f18:	00355513          	srli	a0,a0,0x3
    9f1c:	00a86833          	or	a6,a6,a0
    9f20:	00335793          	srli	a5,t1,0x3
    9f24:	d55ff06f          	j	9c78 <__subdf3+0x418>
    9f28:	de080ae3          	beqz	a6,9d1c <__subdf3+0x4bc>
    9f2c:	00361813          	slli	a6,a2,0x3
    9f30:	01d71793          	slli	a5,a4,0x1d
    9f34:	00385813          	srli	a6,a6,0x3
    9f38:	00f86833          	or	a6,a6,a5
    9f3c:	00068413          	mv	s0,a3
    9f40:	00375793          	srli	a5,a4,0x3
    9f44:	cc5ff06f          	j	9c08 <__subdf3+0x3a8>
    9f48:	41df09b3          	sub	s3,t5,t4
    9f4c:	40e307b3          	sub	a5,t1,a4
    9f50:	013f3f33          	sltu	t5,t5,s3
    9f54:	41e78633          	sub	a2,a5,t5
    9f58:	00100493          	li	s1,1
    9f5c:	9d1ff06f          	j	992c <__subdf3+0xcc>
    9f60:	00351813          	slli	a6,a0,0x3
    9f64:	01d31693          	slli	a3,t1,0x1d
    9f68:	00385813          	srli	a6,a6,0x3
    9f6c:	0106e833          	or	a6,a3,a6
    9f70:	00335793          	srli	a5,t1,0x3
    9f74:	d05ff06f          	j	9c78 <__subdf3+0x418>
    9f78:	41ee89b3          	sub	s3,t4,t5
    9f7c:	40670633          	sub	a2,a4,t1
    9f80:	013eb933          	sltu	s2,t4,s3
    9f84:	41260933          	sub	s2,a2,s2
    9f88:	00068413          	mv	s0,a3
    9f8c:	9b5ff06f          	j	9940 <__subdf3+0xe0>
    9f90:	00361613          	slli	a2,a2,0x3
    9f94:	01d71813          	slli	a6,a4,0x1d
    9f98:	00365613          	srli	a2,a2,0x3
    9f9c:	00c86833          	or	a6,a6,a2
    9fa0:	00375793          	srli	a5,a4,0x3
    9fa4:	cd5ff06f          	j	9c78 <__subdf3+0x418>
    9fa8:	41df09b3          	sub	s3,t5,t4
    9fac:	40e307b3          	sub	a5,t1,a4
    9fb0:	013f3633          	sltu	a2,t5,s3
    9fb4:	40c78633          	sub	a2,a5,a2
    9fb8:	00861793          	slli	a5,a2,0x8
    9fbc:	0c07d663          	bgez	a5,a088 <__subdf3+0x828>
    9fc0:	41ee89b3          	sub	s3,t4,t5
    9fc4:	406707b3          	sub	a5,a4,t1
    9fc8:	013ebeb3          	sltu	t4,t4,s3
    9fcc:	41d78633          	sub	a2,a5,t4
    9fd0:	00068413          	mv	s0,a3
    9fd4:	9d5ff06f          	j	99a8 <__subdf3+0x148>
    9fd8:	01e36333          	or	t1,t1,t5
    9fdc:	00603833          	snez	a6,t1
    9fe0:	d99ff06f          	j	9d78 <__subdf3+0x518>
    9fe4:	fe058813          	addi	a6,a1,-32
    9fe8:	02000793          	li	a5,32
    9fec:	010359b3          	srl	s3,t1,a6
    9ff0:	00f58a63          	beq	a1,a5,a004 <__subdf3+0x7a4>
    9ff4:	04000793          	li	a5,64
    9ff8:	40b785b3          	sub	a1,a5,a1
    9ffc:	00b31333          	sll	t1,t1,a1
    a000:	006f6f33          	or	t5,t5,t1
    a004:	01e03833          	snez	a6,t5
    a008:	01386833          	or	a6,a6,s3
    a00c:	e79ff06f          	j	9e84 <__subdf3+0x624>
    a010:	41ee89b3          	sub	s3,t4,t5
    a014:	406707b3          	sub	a5,a4,t1
    a018:	013ebeb3          	sltu	t4,t4,s3
    a01c:	41d78633          	sub	a2,a5,t4
    a020:	00068413          	mv	s0,a3
    a024:	00100493          	li	s1,1
    a028:	905ff06f          	j	992c <__subdf3+0xcc>
    a02c:	00361813          	slli	a6,a2,0x3
    a030:	01d71793          	slli	a5,a4,0x1d
    a034:	00385813          	srli	a6,a6,0x3
    a038:	00f86833          	or	a6,a6,a5
    a03c:	00375793          	srli	a5,a4,0x3
    a040:	bc9ff06f          	j	9c08 <__subdf3+0x3a8>
    a044:	01df09b3          	add	s3,t5,t4
    a048:	00e307b3          	add	a5,t1,a4
    a04c:	01e9bf33          	sltu	t5,s3,t5
    a050:	01e78633          	add	a2,a5,t5
    a054:	00861793          	slli	a5,a2,0x8
    a058:	b807d6e3          	bgez	a5,9be4 <__subdf3+0x384>
    a05c:	ff8007b7          	lui	a5,0xff800
    a060:	fff78793          	addi	a5,a5,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    a064:	00f67633          	and	a2,a2,a5
    a068:	00100493          	li	s1,1
    a06c:	b79ff06f          	j	9be4 <__subdf3+0x384>
    a070:	00361613          	slli	a2,a2,0x3
    a074:	01d71813          	slli	a6,a4,0x1d
    a078:	00365613          	srli	a2,a2,0x3
    a07c:	00c86833          	or	a6,a6,a2
    a080:	00375793          	srli	a5,a4,0x3
    a084:	b7dff06f          	j	9c00 <__subdf3+0x3a0>
    a088:	00c9e833          	or	a6,s3,a2
    a08c:	c80808e3          	beqz	a6,9d1c <__subdf3+0x4bc>
    a090:	b55ff06f          	j	9be4 <__subdf3+0x384>
    a094:	fe058813          	addi	a6,a1,-32
    a098:	02000793          	li	a5,32
    a09c:	010359b3          	srl	s3,t1,a6
    a0a0:	00f58a63          	beq	a1,a5,a0b4 <__subdf3+0x854>
    a0a4:	04000793          	li	a5,64
    a0a8:	40b785b3          	sub	a1,a5,a1
    a0ac:	00b31333          	sll	t1,t1,a1
    a0b0:	006f6f33          	or	t5,t5,t1
    a0b4:	01e03833          	snez	a6,t5
    a0b8:	01386833          	or	a6,a6,s3
    a0bc:	cbdff06f          	j	9d78 <__subdf3+0x518>
    a0c0:	00000413          	li	s0,0
    a0c4:	7ff00713          	li	a4,2047
    a0c8:	000807b7          	lui	a5,0x80
    a0cc:	93dff06f          	j	9a08 <__subdf3+0x1a8>
    a0d0:	01df09b3          	add	s3,t5,t4
    a0d4:	00e307b3          	add	a5,t1,a4
    a0d8:	01d9beb3          	sltu	t4,s3,t4
    a0dc:	01d78633          	add	a2,a5,t4
    a0e0:	d39ff06f          	j	9e18 <__subdf3+0x5b8>

0000a0e4 <__unorddf2>:
    a0e4:	0145d713          	srli	a4,a1,0x14
    a0e8:	001007b7          	lui	a5,0x100
    a0ec:	fff78793          	addi	a5,a5,-1 # fffff <_data_lma+0xf59e7>
    a0f0:	fff74713          	not	a4,a4
    a0f4:	0146d813          	srli	a6,a3,0x14
    a0f8:	00b7f5b3          	and	a1,a5,a1
    a0fc:	00d7f7b3          	and	a5,a5,a3
    a100:	01571693          	slli	a3,a4,0x15
    a104:	7ff87813          	andi	a6,a6,2047
    a108:	02068063          	beqz	a3,a128 <__unorddf2+0x44>
    a10c:	7ff00713          	li	a4,2047
    a110:	00000513          	li	a0,0
    a114:	00e80463          	beq	a6,a4,a11c <__unorddf2+0x38>
    a118:	00008067          	ret
    a11c:	00c7e7b3          	or	a5,a5,a2
    a120:	00f03533          	snez	a0,a5
    a124:	00008067          	ret
    a128:	00a5e5b3          	or	a1,a1,a0
    a12c:	00100513          	li	a0,1
    a130:	fc058ee3          	beqz	a1,a10c <__unorddf2+0x28>
    a134:	00008067          	ret

0000a138 <__fixdfsi>:
    a138:	0145d793          	srli	a5,a1,0x14
    a13c:	001006b7          	lui	a3,0x100
    a140:	fff68713          	addi	a4,a3,-1 # fffff <_data_lma+0xf59e7>
    a144:	7ff7f793          	andi	a5,a5,2047
    a148:	3fe00613          	li	a2,1022
    a14c:	00b77733          	and	a4,a4,a1
    a150:	01f5d593          	srli	a1,a1,0x1f
    a154:	00f65e63          	bge	a2,a5,a170 <__fixdfsi+0x38>
    a158:	41d00613          	li	a2,1053
    a15c:	00f65e63          	bge	a2,a5,a178 <__fixdfsi+0x40>
    a160:	80000537          	lui	a0,0x80000
    a164:	fff54513          	not	a0,a0
    a168:	00a58533          	add	a0,a1,a0
    a16c:	00008067          	ret
    a170:	00000513          	li	a0,0
    a174:	00008067          	ret
    a178:	43300613          	li	a2,1075
    a17c:	40f60633          	sub	a2,a2,a5
    a180:	01f00813          	li	a6,31
    a184:	00d76733          	or	a4,a4,a3
    a188:	02c85063          	bge	a6,a2,a1a8 <__fixdfsi+0x70>
    a18c:	41300693          	li	a3,1043
    a190:	40f687b3          	sub	a5,a3,a5
    a194:	00f757b3          	srl	a5,a4,a5
    a198:	40f00533          	neg	a0,a5
    a19c:	fc059ce3          	bnez	a1,a174 <__fixdfsi+0x3c>
    a1a0:	00078513          	mv	a0,a5
    a1a4:	00008067          	ret
    a1a8:	bed78793          	addi	a5,a5,-1043
    a1ac:	00f717b3          	sll	a5,a4,a5
    a1b0:	00c55533          	srl	a0,a0,a2
    a1b4:	00a7e7b3          	or	a5,a5,a0
    a1b8:	fe1ff06f          	j	a198 <__fixdfsi+0x60>

0000a1bc <__floatsidf>:
    a1bc:	ff010113          	addi	sp,sp,-16
    a1c0:	00112623          	sw	ra,12(sp)
    a1c4:	00812423          	sw	s0,8(sp)
    a1c8:	00912223          	sw	s1,4(sp)
    a1cc:	04050c63          	beqz	a0,a224 <__floatsidf+0x68>
    a1d0:	41f55793          	srai	a5,a0,0x1f
    a1d4:	00a7c4b3          	xor	s1,a5,a0
    a1d8:	40f484b3          	sub	s1,s1,a5
    a1dc:	00050413          	mv	s0,a0
    a1e0:	00048513          	mv	a0,s1
    a1e4:	ffffa097          	auipc	ra,0xffffa
    a1e8:	cf0080e7          	jalr	-784(ra) # 3ed4 <__clzsi2>
    a1ec:	41e00693          	li	a3,1054
    a1f0:	40a686b3          	sub	a3,a3,a0
    a1f4:	00a00793          	li	a5,10
    a1f8:	01f45413          	srli	s0,s0,0x1f
    a1fc:	7ff6f693          	andi	a3,a3,2047
    a200:	06a7c463          	blt	a5,a0,a268 <__floatsidf+0xac>
    a204:	00b00713          	li	a4,11
    a208:	40a70733          	sub	a4,a4,a0
    a20c:	00e4d7b3          	srl	a5,s1,a4
    a210:	01550513          	addi	a0,a0,21 # 80000015 <__freertos_irq_stack_top+0x7eff0015>
    a214:	00c79793          	slli	a5,a5,0xc
    a218:	00a494b3          	sll	s1,s1,a0
    a21c:	00c7d793          	srli	a5,a5,0xc
    a220:	0140006f          	j	a234 <__floatsidf+0x78>
    a224:	00000413          	li	s0,0
    a228:	00000693          	li	a3,0
    a22c:	00000793          	li	a5,0
    a230:	00000493          	li	s1,0
    a234:	00c79793          	slli	a5,a5,0xc
    a238:	01469693          	slli	a3,a3,0x14
    a23c:	00c7d793          	srli	a5,a5,0xc
    a240:	01f41413          	slli	s0,s0,0x1f
    a244:	00d7e7b3          	or	a5,a5,a3
    a248:	0087e7b3          	or	a5,a5,s0
    a24c:	00c12083          	lw	ra,12(sp)
    a250:	00812403          	lw	s0,8(sp)
    a254:	00048513          	mv	a0,s1
    a258:	00078593          	mv	a1,a5
    a25c:	00412483          	lw	s1,4(sp)
    a260:	01010113          	addi	sp,sp,16
    a264:	00008067          	ret
    a268:	ff550513          	addi	a0,a0,-11
    a26c:	00a497b3          	sll	a5,s1,a0
    a270:	00c79793          	slli	a5,a5,0xc
    a274:	00c7d793          	srli	a5,a5,0xc
    a278:	00000493          	li	s1,0
    a27c:	fb9ff06f          	j	a234 <__floatsidf+0x78>

0000a280 <__trunctfdf2>:
    a280:	00c52803          	lw	a6,12(a0)
    a284:	00052703          	lw	a4,0(a0)
    a288:	00452683          	lw	a3,4(a0)
    a28c:	00852583          	lw	a1,8(a0)
    a290:	00008537          	lui	a0,0x8
    a294:	fff50793          	addi	a5,a0,-1 # 7fff <_malloc_r+0xf7>
    a298:	01085613          	srli	a2,a6,0x10
    a29c:	00359e13          	slli	t3,a1,0x3
    a2a0:	00f67633          	and	a2,a2,a5
    a2a4:	01d75893          	srli	a7,a4,0x1d
    a2a8:	01d6d793          	srli	a5,a3,0x1d
    a2ac:	01081313          	slli	t1,a6,0x10
    a2b0:	00369693          	slli	a3,a3,0x3
    a2b4:	ff010113          	addi	sp,sp,-16
    a2b8:	01c7e7b3          	or	a5,a5,t3
    a2bc:	0116e6b3          	or	a3,a3,a7
    a2c0:	01035313          	srli	t1,t1,0x10
    a2c4:	00371e13          	slli	t3,a4,0x3
    a2c8:	00160893          	addi	a7,a2,1
    a2cc:	ffe50513          	addi	a0,a0,-2
    a2d0:	01d5d593          	srli	a1,a1,0x1d
    a2d4:	00331313          	slli	t1,t1,0x3
    a2d8:	00f12423          	sw	a5,8(sp)
    a2dc:	00d12223          	sw	a3,4(sp)
    a2e0:	01c12023          	sw	t3,0(sp)
    a2e4:	00a8f533          	and	a0,a7,a0
    a2e8:	01f85813          	srli	a6,a6,0x1f
    a2ec:	0065e5b3          	or	a1,a1,t1
    a2f0:	04050663          	beqz	a0,a33c <__trunctfdf2+0xbc>
    a2f4:	ffffc737          	lui	a4,0xffffc
    a2f8:	40070713          	addi	a4,a4,1024 # ffffc400 <__freertos_irq_stack_top+0xfefec400>
    a2fc:	00e60633          	add	a2,a2,a4
    a300:	7fe00713          	li	a4,2046
    a304:	08c75463          	bge	a4,a2,a38c <__trunctfdf2+0x10c>
    a308:	7ff00613          	li	a2,2047
    a30c:	00000713          	li	a4,0
    a310:	00000793          	li	a5,0
    a314:	00c71713          	slli	a4,a4,0xc
    a318:	01461613          	slli	a2,a2,0x14
    a31c:	00c75713          	srli	a4,a4,0xc
    a320:	01f81813          	slli	a6,a6,0x1f
    a324:	00c76733          	or	a4,a4,a2
    a328:	01076733          	or	a4,a4,a6
    a32c:	00078513          	mv	a0,a5
    a330:	00070593          	mv	a1,a4
    a334:	01010113          	addi	sp,sp,16
    a338:	00008067          	ret
    a33c:	00f6e7b3          	or	a5,a3,a5
    a340:	00b7e7b3          	or	a5,a5,a1
    a344:	01c7e7b3          	or	a5,a5,t3
    a348:	02061663          	bnez	a2,a374 <__trunctfdf2+0xf4>
    a34c:	10078a63          	beqz	a5,a460 <__trunctfdf2+0x1e0>
    a350:	00000793          	li	a5,0
    a354:	00500693          	li	a3,5
    a358:	0036d593          	srli	a1,a3,0x3
    a35c:	00979713          	slli	a4,a5,0x9
    a360:	01d79693          	slli	a3,a5,0x1d
    a364:	00b6e7b3          	or	a5,a3,a1
    a368:	00c75713          	srli	a4,a4,0xc
    a36c:	7ff67613          	andi	a2,a2,2047
    a370:	fa5ff06f          	j	a314 <__trunctfdf2+0x94>
    a374:	f8078ae3          	beqz	a5,a308 <__trunctfdf2+0x88>
    a378:	00000813          	li	a6,0
    a37c:	7ff00613          	li	a2,2047
    a380:	00080737          	lui	a4,0x80
    a384:	00000793          	li	a5,0
    a388:	f8dff06f          	j	a314 <__trunctfdf2+0x94>
    a38c:	0ec04063          	bgtz	a2,a46c <__trunctfdf2+0x1ec>
    a390:	fcc00793          	li	a5,-52
    a394:	14f64a63          	blt	a2,a5,a4e8 <__trunctfdf2+0x268>
    a398:	03d00793          	li	a5,61
    a39c:	40c78633          	sub	a2,a5,a2
    a3a0:	40565793          	srai	a5,a2,0x5
    a3a4:	00080737          	lui	a4,0x80
    a3a8:	00e5e5b3          	or	a1,a1,a4
    a3ac:	00279513          	slli	a0,a5,0x2
    a3b0:	00010713          	mv	a4,sp
    a3b4:	00000693          	li	a3,0
    a3b8:	00b12623          	sw	a1,12(sp)
    a3bc:	00a108b3          	add	a7,sp,a0
    a3c0:	00470713          	addi	a4,a4,4 # 80004 <_data_lma+0x759ec>
    a3c4:	01f67613          	andi	a2,a2,31
    a3c8:	01c6e6b3          	or	a3,a3,t3
    a3cc:	01170a63          	beq	a4,a7,a3e0 <__trunctfdf2+0x160>
    a3d0:	00072e03          	lw	t3,0(a4)
    a3d4:	00470713          	addi	a4,a4,4
    a3d8:	01c6e6b3          	or	a3,a3,t3
    a3dc:	ff171ae3          	bne	a4,a7,a3d0 <__trunctfdf2+0x150>
    a3e0:	00300713          	li	a4,3
    a3e4:	40f70733          	sub	a4,a4,a5
    a3e8:	12060463          	beqz	a2,a510 <__trunctfdf2+0x290>
    a3ec:	01010893          	addi	a7,sp,16
    a3f0:	00a888b3          	add	a7,a7,a0
    a3f4:	ff08a883          	lw	a7,-16(a7)
    a3f8:	02000e13          	li	t3,32
    a3fc:	40ce0e33          	sub	t3,t3,a2
    a400:	01c898b3          	sll	a7,a7,t3
    a404:	0116e6b3          	or	a3,a3,a7
    a408:	14070e63          	beqz	a4,a564 <__trunctfdf2+0x2e4>
    a40c:	00271713          	slli	a4,a4,0x2
    a410:	00a10533          	add	a0,sp,a0
    a414:	00e10eb3          	add	t4,sp,a4
    a418:	00010893          	mv	a7,sp
    a41c:	00052583          	lw	a1,0(a0)
    a420:	00452303          	lw	t1,4(a0)
    a424:	00488893          	addi	a7,a7,4
    a428:	00c5d5b3          	srl	a1,a1,a2
    a42c:	01c31333          	sll	t1,t1,t3
    a430:	0065e5b3          	or	a1,a1,t1
    a434:	feb8ae23          	sw	a1,-4(a7)
    a438:	00450513          	addi	a0,a0,4
    a43c:	ff1e90e3          	bne	t4,a7,a41c <__trunctfdf2+0x19c>
    a440:	00400593          	li	a1,4
    a444:	40f587b3          	sub	a5,a1,a5
    a448:	00c12583          	lw	a1,12(sp)
    a44c:	01010513          	addi	a0,sp,16
    a450:	00e50733          	add	a4,a0,a4
    a454:	00c5d5b3          	srl	a1,a1,a2
    a458:	feb72823          	sw	a1,-16(a4)
    a45c:	0d80006f          	j	a534 <__trunctfdf2+0x2b4>
    a460:	00000613          	li	a2,0
    a464:	00000713          	li	a4,0
    a468:	eadff06f          	j	a314 <__trunctfdf2+0x94>
    a46c:	00469713          	slli	a4,a3,0x4
    a470:	00479513          	slli	a0,a5,0x4
    a474:	01c76733          	or	a4,a4,t3
    a478:	01c6d693          	srli	a3,a3,0x1c
    a47c:	01c7d793          	srli	a5,a5,0x1c
    a480:	00459593          	slli	a1,a1,0x4
    a484:	00e03733          	snez	a4,a4
    a488:	00a6e6b3          	or	a3,a3,a0
    a48c:	00b7e7b3          	or	a5,a5,a1
    a490:	00d766b3          	or	a3,a4,a3
    a494:	0076f713          	andi	a4,a3,7
    a498:	00070863          	beqz	a4,a4a8 <__trunctfdf2+0x228>
    a49c:	00f6f713          	andi	a4,a3,15
    a4a0:	00400593          	li	a1,4
    a4a4:	04b71863          	bne	a4,a1,a4f4 <__trunctfdf2+0x274>
    a4a8:	00800737          	lui	a4,0x800
    a4ac:	00e7f733          	and	a4,a5,a4
    a4b0:	ea0704e3          	beqz	a4,a358 <__trunctfdf2+0xd8>
    a4b4:	00160613          	addi	a2,a2,1
    a4b8:	7ff00713          	li	a4,2047
    a4bc:	e4e606e3          	beq	a2,a4,a308 <__trunctfdf2+0x88>
    a4c0:	ff800737          	lui	a4,0xff800
    a4c4:	fff70713          	addi	a4,a4,-1 # ff7fffff <__freertos_irq_stack_top+0xfe7effff>
    a4c8:	00e7f733          	and	a4,a5,a4
    a4cc:	01d71793          	slli	a5,a4,0x1d
    a4d0:	0036d693          	srli	a3,a3,0x3
    a4d4:	00971713          	slli	a4,a4,0x9
    a4d8:	7ff67613          	andi	a2,a2,2047
    a4dc:	00d7e7b3          	or	a5,a5,a3
    a4e0:	00c75713          	srli	a4,a4,0xc
    a4e4:	e31ff06f          	j	a314 <__trunctfdf2+0x94>
    a4e8:	00100693          	li	a3,1
    a4ec:	00000793          	li	a5,0
    a4f0:	00000613          	li	a2,0
    a4f4:	ffc6b713          	sltiu	a4,a3,-4
    a4f8:	00174713          	xori	a4,a4,1
    a4fc:	00e787b3          	add	a5,a5,a4
    a500:	00800737          	lui	a4,0x800
    a504:	00468693          	addi	a3,a3,4
    a508:	00e7f733          	and	a4,a5,a4
    a50c:	fa5ff06f          	j	a4b0 <__trunctfdf2+0x230>
    a510:	00010593          	mv	a1,sp
    a514:	00a588b3          	add	a7,a1,a0
    a518:	0008a883          	lw	a7,0(a7)
    a51c:	00458593          	addi	a1,a1,4
    a520:	00160613          	addi	a2,a2,1
    a524:	ff15ae23          	sw	a7,-4(a1)
    a528:	fec756e3          	bge	a4,a2,a514 <__trunctfdf2+0x294>
    a52c:	00400713          	li	a4,4
    a530:	40f707b3          	sub	a5,a4,a5
    a534:	00279793          	slli	a5,a5,0x2
    a538:	00f107b3          	add	a5,sp,a5
    a53c:	01010713          	addi	a4,sp,16
    a540:	0007a023          	sw	zero,0(a5)
    a544:	00478793          	addi	a5,a5,4
    a548:	fee79ce3          	bne	a5,a4,a540 <__trunctfdf2+0x2c0>
    a54c:	00012703          	lw	a4,0(sp)
    a550:	00d036b3          	snez	a3,a3
    a554:	00412783          	lw	a5,4(sp)
    a558:	00e6e6b3          	or	a3,a3,a4
    a55c:	00000613          	li	a2,0
    a560:	f35ff06f          	j	a494 <__trunctfdf2+0x214>
    a564:	00100793          	li	a5,1
    a568:	00000713          	li	a4,0
    a56c:	ee1ff06f          	j	a44c <__trunctfdf2+0x1cc>

0000a570 <_close>:
    a570:	05800793          	li	a5,88
    a574:	00ff6717          	auipc	a4,0xff6
    a578:	66f72223          	sw	a5,1636(a4) # 1000bd8 <errno>
    a57c:	fff00513          	li	a0,-1
    a580:	00008067          	ret

0000a584 <_fstat>:
    a584:	05800793          	li	a5,88
    a588:	00ff6717          	auipc	a4,0xff6
    a58c:	64f72823          	sw	a5,1616(a4) # 1000bd8 <errno>
    a590:	fff00513          	li	a0,-1
    a594:	00008067          	ret

0000a598 <_isatty>:
    a598:	05800793          	li	a5,88
    a59c:	00ff6717          	auipc	a4,0xff6
    a5a0:	62f72e23          	sw	a5,1596(a4) # 1000bd8 <errno>
    a5a4:	00000513          	li	a0,0
    a5a8:	00008067          	ret

0000a5ac <_lseek>:
    a5ac:	05800793          	li	a5,88
    a5b0:	00ff6717          	auipc	a4,0xff6
    a5b4:	62f72423          	sw	a5,1576(a4) # 1000bd8 <errno>
    a5b8:	fff00513          	li	a0,-1
    a5bc:	00008067          	ret

0000a5c0 <_read>:
    a5c0:	05800793          	li	a5,88
    a5c4:	00ff6717          	auipc	a4,0xff6
    a5c8:	60f72a23          	sw	a5,1556(a4) # 1000bd8 <errno>
    a5cc:	fff00513          	li	a0,-1
    a5d0:	00008067          	ret

0000a5d4 <_sbrk>:
    a5d4:	00ff6797          	auipc	a5,0xff6
    a5d8:	5f078793          	addi	a5,a5,1520 # 1000bc4 <heap_end.1518>
    a5dc:	0007a783          	lw	a5,0(a5)
    a5e0:	00078c63          	beqz	a5,a5f8 <_sbrk+0x24>
    a5e4:	00a78533          	add	a0,a5,a0
    a5e8:	00ff6717          	auipc	a4,0xff6
    a5ec:	5ca72e23          	sw	a0,1500(a4) # 1000bc4 <heap_end.1518>
    a5f0:	00078513          	mv	a0,a5
    a5f4:	00008067          	ret
    a5f8:	00ff6797          	auipc	a5,0xff6
    a5fc:	5e878793          	addi	a5,a5,1512 # 1000be0 <_end>
    a600:	00a78533          	add	a0,a5,a0
    a604:	00ff6717          	auipc	a4,0xff6
    a608:	5ca72023          	sw	a0,1472(a4) # 1000bc4 <heap_end.1518>
    a60c:	00078513          	mv	a0,a5
    a610:	00008067          	ret

Disassembly of section .sdata2._global_impure_ptr:

0000a614 <_global_impure_ptr>:
    a614:	09d4                	addi	a3,sp,212
    a616:	0100                	addi	s0,sp,128

Disassembly of section .data:

01000000 <errpat-0x434>:
 1000000:	0000                	unimp
 1000002:	0000                	unimp
 1000004:	0000                	unimp
 1000006:	3ff0                	fld	fa2,248(a5)
 1000008:	0000                	unimp
 100000a:	0000                	unimp
 100000c:	0000                	unimp
 100000e:	4024                	lw	s1,64(s0)
 1000010:	6b36                	flw	fs6,76(sp)
 1000012:	7020                	flw	fs0,96(s0)
 1000014:	7265                	lui	tp,0xffff9
 1000016:	6f66                	flw	ft10,88(sp)
 1000018:	6d72                	flw	fs10,28(sp)
 100001a:	6e61                	lui	t3,0x18
 100001c:	72206563          	bltu	zero,sp,1000746 <__sf_fake_stdin+0x16>
 1000020:	6e75                	lui	t3,0x1d
 1000022:	7020                	flw	fs0,96(s0)
 1000024:	7261                	lui	tp,0xffff8
 1000026:	6d61                	lui	s10,0x18
 1000028:	7465                	lui	s0,0xffff9
 100002a:	7265                	lui	tp,0xffff9
 100002c:	6f662073          	csrs	0x6f6,a2
 1000030:	2072                	fld	ft0,280(sp)
 1000032:	65726f63          	bltu	tp,s7,1000690 <__clz_tab+0x114>
 1000036:	616d                	addi	sp,sp,240
 1000038:	6b72                	flw	fs6,28(sp)
 100003a:	002e                	c.slli	zero,0xb
 100003c:	6b36                	flw	fs6,76(sp)
 100003e:	7620                	flw	fs0,104(a2)
 1000040:	6c61                	lui	s8,0x18
 1000042:	6469                	lui	s0,0x1a
 1000044:	7461                	lui	s0,0xffff8
 1000046:	6f69                	lui	t5,0x1a
 1000048:	206e                	fld	ft0,216(sp)
 100004a:	7572                	flw	fa0,60(sp)
 100004c:	206e                	fld	ft0,216(sp)
 100004e:	6170                	flw	fa2,68(a0)
 1000050:	6172                	flw	ft2,28(sp)
 1000052:	656d                	lui	a0,0x1b
 1000054:	6574                	flw	fa3,76(a0)
 1000056:	7372                	flw	ft6,60(sp)
 1000058:	6620                	flw	fs0,72(a2)
 100005a:	6320726f          	jal	tp,100768c <__global_pointer$+0x62ec>
 100005e:	6d65726f          	jal	tp,1057734 <__freertos_irq_stack_top+0x47734>
 1000062:	7261                	lui	tp,0xffff8
 1000064:	00002e6b          	0x2e6b
 1000068:	7250                	flw	fa2,36(a2)
 100006a:	6c69666f          	jal	a2,1096730 <__freertos_irq_stack_top+0x86730>
 100006e:	2065                	jal	1000116 <_data+0x116>
 1000070:	656e6567          	0x656e6567
 1000074:	6172                	flw	ft2,28(sp)
 1000076:	6974                	flw	fa3,84(a0)
 1000078:	72206e6f          	jal	t3,100679a <__global_pointer$+0x53fa>
 100007c:	6e75                	lui	t3,0x1d
 100007e:	7020                	flw	fs0,96(s0)
 1000080:	7261                	lui	tp,0xffff8
 1000082:	6d61                	lui	s10,0x18
 1000084:	7465                	lui	s0,0xffff9
 1000086:	7265                	lui	tp,0xffff9
 1000088:	6f662073          	csrs	0x6f6,a2
 100008c:	2072                	fld	ft0,280(sp)
 100008e:	65726f63          	bltu	tp,s7,10006ec <__clz_tab+0x170>
 1000092:	616d                	addi	sp,sp,240
 1000094:	6b72                	flw	fs6,28(sp)
 1000096:	002e                	c.slli	zero,0xb
 1000098:	4b32                	lw	s6,12(sp)
 100009a:	7020                	flw	fs0,96(s0)
 100009c:	7265                	lui	tp,0xffff9
 100009e:	6f66                	flw	ft10,88(sp)
 10000a0:	6d72                	flw	fs10,28(sp)
 10000a2:	6e61                	lui	t3,0x18
 10000a4:	72206563          	bltu	zero,sp,10007ce <__mprec_tens+0x26>
 10000a8:	6e75                	lui	t3,0x1d
 10000aa:	7020                	flw	fs0,96(s0)
 10000ac:	7261                	lui	tp,0xffff8
 10000ae:	6d61                	lui	s10,0x18
 10000b0:	7465                	lui	s0,0xffff9
 10000b2:	7265                	lui	tp,0xffff9
 10000b4:	6f662073          	csrs	0x6f6,a2
 10000b8:	2072                	fld	ft0,280(sp)
 10000ba:	65726f63          	bltu	tp,s7,1000718 <__sf_fake_stderr+0x8>
 10000be:	616d                	addi	sp,sp,240
 10000c0:	6b72                	flw	fs6,28(sp)
 10000c2:	002e                	c.slli	zero,0xb
 10000c4:	4b32                	lw	s6,12(sp)
 10000c6:	7620                	flw	fs0,104(a2)
 10000c8:	6c61                	lui	s8,0x18
 10000ca:	6469                	lui	s0,0x1a
 10000cc:	7461                	lui	s0,0xffff8
 10000ce:	6f69                	lui	t5,0x1a
 10000d0:	206e                	fld	ft0,216(sp)
 10000d2:	7572                	flw	fa0,60(sp)
 10000d4:	206e                	fld	ft0,216(sp)
 10000d6:	6170                	flw	fa2,68(a0)
 10000d8:	6172                	flw	ft2,28(sp)
 10000da:	656d                	lui	a0,0x1b
 10000dc:	6574                	flw	fa3,76(a0)
 10000de:	7372                	flw	ft6,60(sp)
 10000e0:	6620                	flw	fs0,72(a2)
 10000e2:	6320726f          	jal	tp,1007714 <__global_pointer$+0x6374>
 10000e6:	6d65726f          	jal	tp,10577bc <__freertos_irq_stack_top+0x477bc>
 10000ea:	7261                	lui	tp,0xffff8
 10000ec:	00002e6b          	0x2e6b
 10000f0:	5d75255b          	0x5d75255b
 10000f4:	5245                	li	tp,-15
 10000f6:	4f52                	lw	t5,20(sp)
 10000f8:	2152                	fld	ft2,272(sp)
 10000fa:	6c20                	flw	fs0,88(s0)
 10000fc:	7369                	lui	t1,0xffffa
 10000fe:	2074                	fld	fa3,192(s0)
 1000100:	20637263          	bgeu	t1,t1,1000304 <_data+0x304>
 1000104:	7830                	flw	fa2,112(s0)
 1000106:	3025                	jal	fff92e <_data_lma+0xff5316>
 1000108:	7834                	flw	fa3,112(s0)
 100010a:	2d20                	fld	fs0,88(a0)
 100010c:	7320                	flw	fs0,96(a4)
 100010e:	6f68                	flw	fa0,92(a4)
 1000110:	6c75                	lui	s8,0x1d
 1000112:	2064                	fld	fs1,192(s0)
 1000114:	6562                	flw	fa0,24(sp)
 1000116:	3020                	fld	fs0,96(s0)
 1000118:	2578                	fld	fa4,200(a0)
 100011a:	3430                	fld	fa2,104(s0)
 100011c:	0a78                	addi	a4,sp,284
 100011e:	0000                	unimp
 1000120:	5d75255b          	0x5d75255b
 1000124:	5245                	li	tp,-15
 1000126:	4f52                	lw	t5,20(sp)
 1000128:	2152                	fld	ft2,272(sp)
 100012a:	6d20                	flw	fs0,88(a0)
 100012c:	7461                	lui	s0,0xffff8
 100012e:	6972                	flw	fs2,28(sp)
 1000130:	2078                	fld	fa4,192(s0)
 1000132:	20637263          	bgeu	t1,t1,1000336 <_data+0x336>
 1000136:	7830                	flw	fa2,112(s0)
 1000138:	3025                	jal	fff960 <_data_lma+0xff5348>
 100013a:	7834                	flw	fa3,112(s0)
 100013c:	2d20                	fld	fs0,88(a0)
 100013e:	7320                	flw	fs0,96(a4)
 1000140:	6f68                	flw	fa0,92(a4)
 1000142:	6c75                	lui	s8,0x1d
 1000144:	2064                	fld	fs1,192(s0)
 1000146:	6562                	flw	fa0,24(sp)
 1000148:	3020                	fld	fs0,96(s0)
 100014a:	2578                	fld	fa4,200(a0)
 100014c:	3430                	fld	fa2,104(s0)
 100014e:	0a78                	addi	a4,sp,284
 1000150:	0000                	unimp
 1000152:	0000                	unimp
 1000154:	5d75255b          	0x5d75255b
 1000158:	5245                	li	tp,-15
 100015a:	4f52                	lw	t5,20(sp)
 100015c:	2152                	fld	ft2,272(sp)
 100015e:	7320                	flw	fs0,96(a4)
 1000160:	6174                	flw	fa3,68(a0)
 1000162:	6574                	flw	fa3,76(a0)
 1000164:	6320                	flw	fs0,64(a4)
 1000166:	6372                	flw	ft6,28(sp)
 1000168:	3020                	fld	fs0,96(s0)
 100016a:	2578                	fld	fa4,200(a0)
 100016c:	3430                	fld	fa2,104(s0)
 100016e:	2078                	fld	fa4,192(s0)
 1000170:	202d                	jal	100019a <_data+0x19a>
 1000172:	756f6873          	csrrsi	a6,0x756,30
 1000176:	646c                	flw	fa1,76(s0)
 1000178:	6220                	flw	fs0,64(a2)
 100017a:	2065                	jal	1000222 <_data+0x222>
 100017c:	7830                	flw	fa2,112(s0)
 100017e:	3025                	jal	fff9a6 <_data_lma+0xff538e>
 1000180:	7834                	flw	fa3,112(s0)
 1000182:	000a                	c.slli	zero,0x2
 1000184:	65726f43          	0x65726f43
 1000188:	614d                	addi	sp,sp,176
 100018a:	6b72                	flw	fs6,28(sp)
 100018c:	5320                	lw	s0,96(a4)
 100018e:	7a69                	lui	s4,0xffffa
 1000190:	2065                	jal	1000238 <_data+0x238>
 1000192:	2020                	fld	fs0,64(s0)
 1000194:	3a20                	fld	fs0,112(a2)
 1000196:	2520                	fld	fs0,72(a0)
 1000198:	0a64                	addi	s1,sp,284
 100019a:	0000                	unimp
 100019c:	6f54                	flw	fa3,28(a4)
 100019e:	6174                	flw	fa3,68(a0)
 10001a0:	206c                	fld	fa1,192(s0)
 10001a2:	6974                	flw	fa3,84(a0)
 10001a4:	20736b63          	bltu	t1,t2,10003ba <_data+0x3ba>
 10001a8:	2020                	fld	fs0,64(s0)
 10001aa:	2020                	fld	fs0,64(s0)
 10001ac:	3a20                	fld	fs0,112(a2)
 10001ae:	2520                	fld	fs0,72(a0)
 10001b0:	0a64                	addi	s1,sp,284
 10001b2:	0000                	unimp
 10001b4:	6f54                	flw	fa3,28(a4)
 10001b6:	6174                	flw	fa3,68(a0)
 10001b8:	206c                	fld	fa1,192(s0)
 10001ba:	6974                	flw	fa3,84(a0)
 10001bc:	656d                	lui	a0,0x1b
 10001be:	2820                	fld	fs0,80(s0)
 10001c0:	73636573          	csrrsi	a0,0x736,6
 10001c4:	3a29                	jal	fffade <_data_lma+0xff54c6>
 10001c6:	2520                	fld	fs0,72(a0)
 10001c8:	666c                	flw	fa1,76(a2)
 10001ca:	000a                	c.slli	zero,0x2
 10001cc:	7449                	lui	s0,0xffff2
 10001ce:	7265                	lui	tp,0xffff9
 10001d0:	7461                	lui	s0,0xffff8
 10001d2:	6f69                	lui	t5,0x1a
 10001d4:	736e                	flw	ft6,248(sp)
 10001d6:	6365532f          	0x6365532f
 10001da:	2020                	fld	fs0,64(s0)
 10001dc:	3a20                	fld	fs0,112(a2)
 10001de:	2520                	fld	fs0,72(a0)
 10001e0:	666c                	flw	fa1,76(a2)
 10001e2:	000a                	c.slli	zero,0x2
 10001e4:	5245                	li	tp,-15
 10001e6:	4f52                	lw	t5,20(sp)
 10001e8:	2152                	fld	ft2,272(sp)
 10001ea:	4d20                	lw	s0,88(a0)
 10001ec:	7375                	lui	t1,0xffffd
 10001ee:	2074                	fld	fa3,192(s0)
 10001f0:	7865                	lui	a6,0xffff9
 10001f2:	6365                	lui	t1,0x19
 10001f4:	7475                	lui	s0,0xffffd
 10001f6:	2065                	jal	100029e <_data+0x29e>
 10001f8:	6f66                	flw	ft10,88(sp)
 10001fa:	2072                	fld	ft0,280(sp)
 10001fc:	7461                	lui	s0,0xffff8
 10001fe:	6c20                	flw	fs0,88(s0)
 1000200:	6165                	addi	sp,sp,112
 1000202:	31207473          	csrrci	s0,0x312,0
 1000206:	2030                	fld	fa2,64(s0)
 1000208:	73636573          	csrrsi	a0,0x736,6
 100020c:	6620                	flw	fs0,72(a2)
 100020e:	6120726f          	jal	tp,1007820 <__global_pointer$+0x6480>
 1000212:	7620                	flw	fs0,104(a2)
 1000214:	6c61                	lui	s8,0x18
 1000216:	6469                	lui	s0,0x1a
 1000218:	7220                	flw	fs0,96(a2)
 100021a:	7365                	lui	t1,0xffff9
 100021c:	6c75                	lui	s8,0x1d
 100021e:	2174                	fld	fa3,192(a0)
 1000220:	0000                	unimp
 1000222:	0000                	unimp
 1000224:	7449                	lui	s0,0xffff2
 1000226:	7265                	lui	tp,0xffff9
 1000228:	7461                	lui	s0,0xffff8
 100022a:	6f69                	lui	t5,0x1a
 100022c:	736e                	flw	ft6,248(sp)
 100022e:	2020                	fld	fs0,64(s0)
 1000230:	2020                	fld	fs0,64(s0)
 1000232:	2020                	fld	fs0,64(s0)
 1000234:	3a20                	fld	fs0,112(a2)
 1000236:	2520                	fld	fs0,72(a0)
 1000238:	756c                	flw	fa1,108(a0)
 100023a:	000a                	c.slli	zero,0x2
 100023c:	38434347          	fmsub.s	ft6,ft6,ft4,ft7,rmm
 1000240:	332e                	fld	ft6,232(sp)
 1000242:	302e                	fld	ft0,232(sp)
 1000244:	0000                	unimp
 1000246:	0000                	unimp
 1000248:	706d6f43          	fmadd.s	ft10,fs10,ft6,fa4,unknown
 100024c:	6c69                	lui	s8,0x1a
 100024e:	7265                	lui	tp,0xffff9
 1000250:	7620                	flw	fs0,104(a2)
 1000252:	7265                	lui	tp,0xffff9
 1000254:	6e6f6973          	csrrsi	s2,0x6e6,30
 1000258:	3a20                	fld	fs0,112(a2)
 100025a:	2520                	fld	fs0,72(a0)
 100025c:	00000a73          	0xa73
 1000260:	4f2d                	li	t5,11
 1000262:	6f430033          	0x6f430033
 1000266:	706d                	c.lui	zero,0xffffb
 1000268:	6c69                	lui	s8,0x1a
 100026a:	7265                	lui	tp,0xffff9
 100026c:	6620                	flw	fs0,72(a2)
 100026e:	616c                	flw	fa1,68(a0)
 1000270:	20207367          	0x20207367
 1000274:	3a20                	fld	fs0,112(a2)
 1000276:	2520                	fld	fs0,72(a0)
 1000278:	00000a73          	0xa73
 100027c:	43415453          	0x43415453
 1000280:	0000004b          	fnmsub.s	ft0,ft0,ft0,ft0,rne
 1000284:	654d                	lui	a0,0x13
 1000286:	6f6d                	lui	t5,0x1b
 1000288:	7972                	flw	fs2,60(sp)
 100028a:	6c20                	flw	fs0,88(s0)
 100028c:	7461636f          	jal	t1,10169d2 <__freertos_irq_stack_top+0x69d2>
 1000290:	6f69                	lui	t5,0x1a
 1000292:	206e                	fld	ft0,216(sp)
 1000294:	3a20                	fld	fs0,112(a2)
 1000296:	2520                	fld	fs0,72(a0)
 1000298:	00000a73          	0xa73
 100029c:	64656573          	csrrsi	a0,0x646,10
 10002a0:	20637263          	bgeu	t1,t1,10004a4 <scipat+0x40>
 10002a4:	2020                	fld	fs0,64(s0)
 10002a6:	2020                	fld	fs0,64(s0)
 10002a8:	2020                	fld	fs0,64(s0)
 10002aa:	2020                	fld	fs0,64(s0)
 10002ac:	3a20                	fld	fs0,112(a2)
 10002ae:	3020                	fld	fs0,96(s0)
 10002b0:	2578                	fld	fa4,200(a0)
 10002b2:	3430                	fld	fa2,104(s0)
 10002b4:	0a78                	addi	a4,sp,284
 10002b6:	0000                	unimp
 10002b8:	5d64255b          	0x5d64255b
 10002bc:	6c637263          	bgeu	t1,t1,1000980 <_ctype_+0xf0>
 10002c0:	7369                	lui	t1,0xffffa
 10002c2:	2074                	fld	fa3,192(s0)
 10002c4:	2020                	fld	fs0,64(s0)
 10002c6:	2020                	fld	fs0,64(s0)
 10002c8:	2020                	fld	fs0,64(s0)
 10002ca:	203a                	fld	ft0,392(sp)
 10002cc:	7830                	flw	fa2,112(s0)
 10002ce:	3025                	jal	fffaf6 <_data_lma+0xff54de>
 10002d0:	7834                	flw	fa3,112(s0)
 10002d2:	000a                	c.slli	zero,0x2
 10002d4:	5d64255b          	0x5d64255b
 10002d8:	6d637263          	bgeu	t1,s6,100099c <_ctype_+0x10c>
 10002dc:	7461                	lui	s0,0xffff8
 10002de:	6972                	flw	fs2,28(sp)
 10002e0:	2078                	fld	fa4,192(s0)
 10002e2:	2020                	fld	fs0,64(s0)
 10002e4:	2020                	fld	fs0,64(s0)
 10002e6:	203a                	fld	ft0,392(sp)
 10002e8:	7830                	flw	fa2,112(s0)
 10002ea:	3025                	jal	fffb12 <_data_lma+0xff54fa>
 10002ec:	7834                	flw	fa3,112(s0)
 10002ee:	000a                	c.slli	zero,0x2
 10002f0:	5d64255b          	0x5d64255b
 10002f4:	73637263          	bgeu	t1,s6,1000a18 <impure_data+0x44>
 10002f8:	6174                	flw	fa3,68(a0)
 10002fa:	6574                	flw	fa3,76(a0)
 10002fc:	2020                	fld	fs0,64(s0)
 10002fe:	2020                	fld	fs0,64(s0)
 1000300:	2020                	fld	fs0,64(s0)
 1000302:	203a                	fld	ft0,392(sp)
 1000304:	7830                	flw	fa2,112(s0)
 1000306:	3025                	jal	fffb2e <_data_lma+0xff5516>
 1000308:	7834                	flw	fa3,112(s0)
 100030a:	000a                	c.slli	zero,0x2
 100030c:	5d64255b          	0x5d64255b
 1000310:	66637263          	bgeu	t1,t1,1000974 <_ctype_+0xe4>
 1000314:	6e69                	lui	t3,0x1a
 1000316:	6c61                	lui	s8,0x18
 1000318:	2020                	fld	fs0,64(s0)
 100031a:	2020                	fld	fs0,64(s0)
 100031c:	2020                	fld	fs0,64(s0)
 100031e:	203a                	fld	ft0,392(sp)
 1000320:	7830                	flw	fa2,112(s0)
 1000322:	3025                	jal	fffb4a <_data_lma+0xff5532>
 1000324:	7834                	flw	fa3,112(s0)
 1000326:	000a                	c.slli	zero,0x2
 1000328:	72726f43          	fmadd.d	ft10,ft4,ft7,fa4,unknown
 100032c:	6365                	lui	t1,0x19
 100032e:	2074                	fld	fa3,192(s0)
 1000330:	7265706f          	j	1057a56 <__freertos_irq_stack_top+0x47a56>
 1000334:	7461                	lui	s0,0xffff8
 1000336:	6f69                	lui	t5,0x1a
 1000338:	206e                	fld	ft0,216(sp)
 100033a:	6176                	flw	ft2,92(sp)
 100033c:	696c                	flw	fa1,84(a0)
 100033e:	6164                	flw	fs1,68(a0)
 1000340:	6574                	flw	fa3,76(a0)
 1000342:	2e64                	fld	fs1,216(a2)
 1000344:	5320                	lw	s0,96(a4)
 1000346:	6565                	lui	a0,0x19
 1000348:	5220                	lw	s0,96(a2)
 100034a:	4145                	li	sp,17
 100034c:	4d44                	lw	s1,28(a0)
 100034e:	2e45                	jal	10006fe <__clz_tab+0x182>
 1000350:	646d                	lui	s0,0x1b
 1000352:	6620                	flw	fs0,72(a2)
 1000354:	7220726f          	jal	tp,1007a76 <__global_pointer$+0x66d6>
 1000358:	6e75                	lui	t3,0x1d
 100035a:	6120                	flw	fs0,64(a0)
 100035c:	646e                	flw	fs0,216(sp)
 100035e:	7220                	flw	fs0,96(a2)
 1000360:	7065                	c.lui	zero,0xffff9
 1000362:	6974726f          	jal	tp,10481f8 <__freertos_irq_stack_top+0x381f8>
 1000366:	676e                	flw	fa4,216(sp)
 1000368:	7220                	flw	fs0,96(a2)
 100036a:	6c75                	lui	s8,0x1d
 100036c:	7365                	lui	t1,0xffff9
 100036e:	002e                	c.slli	zero,0xb
 1000370:	65726f43          	0x65726f43
 1000374:	614d                	addi	sp,sp,176
 1000376:	6b72                	flw	fs6,28(sp)
 1000378:	3120                	fld	fs0,96(a0)
 100037a:	302e                	fld	ft0,232(sp)
 100037c:	3a20                	fld	fs0,112(a2)
 100037e:	2520                	fld	fs0,72(a0)
 1000380:	2066                	fld	ft0,88(sp)
 1000382:	7325202f          	0x7325202f
 1000386:	2520                	fld	fs0,72(a0)
 1000388:	00000073          	ecall
 100038c:	2f20                	fld	fs0,88(a4)
 100038e:	2520                	fld	fs0,72(a0)
 1000390:	00000073          	ecall
 1000394:	7245                	lui	tp,0xffff1
 1000396:	6f72                	flw	ft10,28(sp)
 1000398:	7372                	flw	ft6,60(sp)
 100039a:	6420                	flw	fs0,72(s0)
 100039c:	7465                	lui	s0,0xffff9
 100039e:	6365                	lui	t1,0x19
 10003a0:	6574                	flw	fa3,76(a0)
 10003a2:	0064                	addi	s1,sp,12
 10003a4:	6e6e6143          	fmadd.q	ft2,ft8,ft6,fa3,unknown
 10003a8:	7620746f          	jal	s0,1007b0a <__global_pointer$+0x676a>
 10003ac:	6c61                	lui	s8,0x18
 10003ae:	6469                	lui	s0,0x1a
 10003b0:	7461                	lui	s0,0xffff8
 10003b2:	2065                	jal	100045a <intpat+0x6>
 10003b4:	7265706f          	j	1057ada <__freertos_irq_stack_top+0x47ada>
 10003b8:	7461                	lui	s0,0xffff8
 10003ba:	6f69                	lui	t5,0x1a
 10003bc:	206e                	fld	ft0,216(sp)
 10003be:	6f66                	flw	ft10,88(sp)
 10003c0:	2072                	fld	ft0,280(sp)
 10003c2:	6874                	flw	fa3,84(s0)
 10003c4:	7365                	lui	t1,0xffff9
 10003c6:	2065                	jal	100046e <scipat+0xa>
 10003c8:	64656573          	csrrsi	a0,0x646,10
 10003cc:	7620                	flw	fs0,104(a2)
 10003ce:	6c61                	lui	s8,0x18
 10003d0:	6575                	lui	a0,0x1d
 10003d2:	70202c73          	csrr	s8,0x702
 10003d6:	656c                	flw	fa1,76(a0)
 10003d8:	7361                	lui	t1,0xffff8
 10003da:	2065                	jal	1000482 <scipat+0x1e>
 10003dc:	706d6f63          	bltu	s10,t1,1000afa <__global_locale+0xc6>
 10003e0:	7261                	lui	tp,0xffff8
 10003e2:	2065                	jal	100048a <scipat+0x26>
 10003e4:	68746977          	0x68746977
 10003e8:	7220                	flw	fs0,96(a2)
 10003ea:	7365                	lui	t1,0xffff9
 10003ec:	6c75                	lui	s8,0x1d
 10003ee:	7374                	flw	fa3,100(a4)
 10003f0:	6f20                	flw	fs0,88(a4)
 10003f2:	206e                	fld	ft0,216(sp)
 10003f4:	2061                	jal	100047c <scipat+0x18>
 10003f6:	776f6e6b          	0x776f6e6b
 10003fa:	206e                	fld	ft0,216(sp)
 10003fc:	6c70                	flw	fa2,92(s0)
 10003fe:	7461                	lui	s0,0xffff8
 1000400:	6f66                	flw	ft10,88(sp)
 1000402:	6d72                	flw	fs10,28(sp)
 1000404:	002e                	c.slli	zero,0xb
 1000406:	0000                	unimp
 1000408:	72617473          	csrrci	s0,0x726,2
 100040c:	2074                	fld	fa3,192(s0)
 100040e:	7572                	flw	fa0,60(sp)
 1000410:	216e                	fld	ft2,216(sp)
 1000412:	0021                	c.nop	8
	...
 100041c:	4000                	lw	s0,0(s0)
 100041e:	1e44408f          	0x1e44408f
 1000422:	0000                	unimp
 1000424:	1e44                	addi	s1,sp,820
 1000426:	0000                	unimp
 1000428:	1f00                	addi	s0,sp,944
 100042a:	0000                	unimp
 100042c:	1f00                	addi	s0,sp,944
 100042e:	0000                	unimp
 1000430:	1f40                	addi	s0,sp,948
	...

01000434 <errpat>:
static ee_u8 *errpat[4]   = { (ee_u8 *)"T0.3e-1F",
 1000434:	0474                	addi	a3,sp,524
 1000436:	0100                	addi	s0,sp,128
 1000438:	0480                	addi	s0,sp,576
 100043a:	0100                	addi	s0,sp,128
 100043c:	048c                	addi	a1,sp,576
 100043e:	0100                	addi	s0,sp,128
 1000440:	0498                	addi	a4,sp,576
 1000442:	0100                	addi	s0,sp,128

01000444 <floatpat>:
static ee_u8 *floatpat[4] = { (ee_u8 *)"35.54400",
 1000444:	04d4                	addi	a3,sp,580
 1000446:	0100                	addi	s0,sp,128
 1000448:	04e0                	addi	s0,sp,588
 100044a:	0100                	addi	s0,sp,128
 100044c:	04ec                	addi	a1,sp,588
 100044e:	0100                	addi	s0,sp,128
 1000450:	04f8                	addi	a4,sp,588
 1000452:	0100                	addi	s0,sp,128

01000454 <intpat>:
static ee_u8 *intpat[4]
 1000454:	0504                	addi	s1,sp,640
 1000456:	0100                	addi	s0,sp,128
 1000458:	050c                	addi	a1,sp,640
 100045a:	0100                	addi	s0,sp,128
 100045c:	0514                	addi	a3,sp,640
 100045e:	0100                	addi	s0,sp,128
 1000460:	051c                	addi	a5,sp,640
 1000462:	0100                	addi	s0,sp,128

01000464 <scipat>:
static ee_u8 *scipat[4]   = { (ee_u8 *)"5.500e+3",
 1000464:	04a4                	addi	s1,sp,584
 1000466:	0100                	addi	s0,sp,128
 1000468:	04b0                	addi	a2,sp,584
 100046a:	0100                	addi	s0,sp,128
 100046c:	04bc                	addi	a5,sp,584
 100046e:	0100                	addi	s0,sp,128
 1000470:	04c8                	addi	a0,sp,580
 1000472:	0100                	addi	s0,sp,128
 1000474:	3054                	fld	fa3,160(s0)
 1000476:	332e                	fld	ft6,232(sp)
 1000478:	2d65                	jal	1000b30 <__global_locale+0xfc>
 100047a:	4631                	li	a2,12
 100047c:	0000                	unimp
 100047e:	0000                	unimp
 1000480:	542d                	li	s0,-21
 1000482:	542e                	lw	s0,232(sp)
 1000484:	71542b2b          	0x71542b2b
 1000488:	0000                	unimp
 100048a:	0000                	unimp
 100048c:	5431                	li	s0,-20
 100048e:	65342e33          	0x65342e33
 1000492:	7a34                	flw	fa3,112(a2)
 1000494:	0000                	unimp
 1000496:	0000                	unimp
 1000498:	302e3433          	0x302e3433
 100049c:	2d65                	jal	1000b54 <__global_locale+0x120>
 100049e:	5e54                	lw	a3,60(a2)
 10004a0:	0000                	unimp
 10004a2:	0000                	unimp
 10004a4:	2e35                	jal	10007e0 <__mprec_tens+0x38>
 10004a6:	3035                	jal	fffcd2 <_data_lma+0xff56ba>
 10004a8:	6530                	flw	fa2,72(a0)
 10004aa:	0000332b          	0x332b
 10004ae:	0000                	unimp
 10004b0:	2e2d                	jal	10007ea <__mprec_tens+0x42>
 10004b2:	3231                	jal	fffdbe <_data_lma+0xff57a6>
 10004b4:	322d6533          	0x322d6533
 10004b8:	0000                	unimp
 10004ba:	0000                	unimp
 10004bc:	382d                	jal	fffcf6 <_data_lma+0xff56de>
 10004be:	382b6537          	lui	a0,0x382b6
 10004c2:	00003233          	snez	tp,zero
 10004c6:	0000                	unimp
 10004c8:	362e302b          	0x362e302b
 10004cc:	2d65                	jal	1000b84 <__global_locale+0x150>
 10004ce:	3231                	jal	fffdda <_data_lma+0xff57c2>
 10004d0:	0000                	unimp
 10004d2:	0000                	unimp
 10004d4:	352e3533          	0x352e3533
 10004d8:	3434                	fld	fa3,104(s0)
 10004da:	3030                	fld	fa2,96(s0)
 10004dc:	0000                	unimp
 10004de:	0000                	unimp
 10004e0:	312e                	fld	ft2,232(sp)
 10004e2:	3332                	fld	ft6,296(sp)
 10004e4:	3534                	fld	fa3,104(a0)
 10004e6:	3030                	fld	fa2,96(s0)
 10004e8:	0000                	unimp
 10004ea:	0000                	unimp
 10004ec:	312d                	jal	1000116 <_data+0x116>
 10004ee:	3031                	jal	fffcfa <_data_lma+0xff56e2>
 10004f0:	372e                	fld	fa4,232(sp)
 10004f2:	3030                	fld	fa2,96(s0)
 10004f4:	0000                	unimp
 10004f6:	0000                	unimp
 10004f8:	362e302b          	0x362e302b
 10004fc:	3434                	fld	fa3,104(s0)
 10004fe:	3030                	fld	fa2,96(s0)
 1000500:	0000                	unimp
 1000502:	0000                	unimp
 1000504:	3035                	jal	fffd30 <_data_lma+0xff5718>
 1000506:	3231                	jal	fffe12 <_data_lma+0xff57fa>
 1000508:	0000                	unimp
 100050a:	0000                	unimp
 100050c:	3231                	jal	fffe18 <_data_lma+0xff5800>
 100050e:	00003433          	snez	s0,zero
 1000512:	0000                	unimp
 1000514:	382d                	jal	fffd4e <_data_lma+0xff5736>
 1000516:	00003437          	lui	s0,0x3
 100051a:	0000                	unimp
 100051c:	3232312b          	0x3232312b
 1000520:	0000                	unimp
 1000522:	0000                	unimp
 1000524:	2508                	fld	fa0,8(a0)
 1000526:	0000                	unimp
 1000528:	24d8                	fld	fa4,136(s1)
 100052a:	0000                	unimp
 100052c:	24e4                	fld	fs1,200(s1)
 100052e:	0000                	unimp
 1000530:	24f0                	fld	fa2,200(s1)
 1000532:	0000                	unimp
 1000534:	24fc                	fld	fa5,200(s1)
 1000536:	0000                	unimp
 1000538:	24cc                	fld	fa1,136(s1)
 100053a:	0000                	unimp
 100053c:	321c                	fld	fa5,32(a2)
 100053e:	ff00                	fsw	fs0,56(a4)
 1000540:	2ff8                	fld	fa4,216(a5)
 1000542:	ff00                	fsw	fs0,56(a4)
 1000544:	3190                	fld	fa2,32(a1)
 1000546:	ff00                	fsw	fs0,56(a4)
 1000548:	31a0                	fld	fs0,96(a1)
 100054a:	ff00                	fsw	fs0,56(a4)
 100054c:	3190                	fld	fa2,32(a1)
 100054e:	ff00                	fsw	fs0,56(a4)
 1000550:	3050                	fld	fa2,160(s0)
 1000552:	ff00                	fsw	fs0,56(a4)
 1000554:	3190                	fld	fa2,32(a1)
 1000556:	ff00                	fsw	fs0,56(a4)
 1000558:	31a0                	fld	fs0,96(a1)
 100055a:	ff00                	fsw	fs0,56(a4)
 100055c:	2ff8                	fld	fa4,216(a5)
 100055e:	ff00                	fsw	fs0,56(a4)
 1000560:	2ff8                	fld	fa4,216(a5)
 1000562:	ff00                	fsw	fs0,56(a4)
 1000564:	3050                	fld	fa2,160(s0)
 1000566:	ff00                	fsw	fs0,56(a4)
 1000568:	31a0                	fld	fs0,96(a1)
 100056a:	ff00                	fsw	fs0,56(a4)
 100056c:	3208                	fld	fa0,32(a2)
 100056e:	ff00                	fsw	fs0,56(a4)
 1000570:	3208                	fld	fa0,32(a2)
 1000572:	ff00                	fsw	fs0,56(a4)
 1000574:	3208                	fld	fa0,32(a2)
 1000576:	ff00                	fsw	fs0,56(a4)
 1000578:	3050                	fld	fa2,160(s0)
 100057a:	ff00                	fsw	fs0,56(a4)

0100057c <__clz_tab>:
 100057c:	0100                	addi	s0,sp,128
 100057e:	0202                	c.slli64	tp
 1000580:	03030303          	lb	t1,48(t1) # ffff9030 <__freertos_irq_stack_top+0xfefe9030>
 1000584:	0404                	addi	s1,sp,512
 1000586:	0404                	addi	s1,sp,512
 1000588:	0404                	addi	s1,sp,512
 100058a:	0404                	addi	s1,sp,512
 100058c:	0505                	addi	a0,a0,1
 100058e:	0505                	addi	a0,a0,1
 1000590:	0505                	addi	a0,a0,1
 1000592:	0505                	addi	a0,a0,1
 1000594:	0505                	addi	a0,a0,1
 1000596:	0505                	addi	a0,a0,1
 1000598:	0505                	addi	a0,a0,1
 100059a:	0505                	addi	a0,a0,1
 100059c:	0606                	slli	a2,a2,0x1
 100059e:	0606                	slli	a2,a2,0x1
 10005a0:	0606                	slli	a2,a2,0x1
 10005a2:	0606                	slli	a2,a2,0x1
 10005a4:	0606                	slli	a2,a2,0x1
 10005a6:	0606                	slli	a2,a2,0x1
 10005a8:	0606                	slli	a2,a2,0x1
 10005aa:	0606                	slli	a2,a2,0x1
 10005ac:	0606                	slli	a2,a2,0x1
 10005ae:	0606                	slli	a2,a2,0x1
 10005b0:	0606                	slli	a2,a2,0x1
 10005b2:	0606                	slli	a2,a2,0x1
 10005b4:	0606                	slli	a2,a2,0x1
 10005b6:	0606                	slli	a2,a2,0x1
 10005b8:	0606                	slli	a2,a2,0x1
 10005ba:	0606                	slli	a2,a2,0x1
 10005bc:	07070707          	0x7070707
 10005c0:	07070707          	0x7070707
 10005c4:	07070707          	0x7070707
 10005c8:	07070707          	0x7070707
 10005cc:	07070707          	0x7070707
 10005d0:	07070707          	0x7070707
 10005d4:	07070707          	0x7070707
 10005d8:	07070707          	0x7070707
 10005dc:	07070707          	0x7070707
 10005e0:	07070707          	0x7070707
 10005e4:	07070707          	0x7070707
 10005e8:	07070707          	0x7070707
 10005ec:	07070707          	0x7070707
 10005f0:	07070707          	0x7070707
 10005f4:	07070707          	0x7070707
 10005f8:	07070707          	0x7070707
 10005fc:	0808                	addi	a0,sp,16
 10005fe:	0808                	addi	a0,sp,16
 1000600:	0808                	addi	a0,sp,16
 1000602:	0808                	addi	a0,sp,16
 1000604:	0808                	addi	a0,sp,16
 1000606:	0808                	addi	a0,sp,16
 1000608:	0808                	addi	a0,sp,16
 100060a:	0808                	addi	a0,sp,16
 100060c:	0808                	addi	a0,sp,16
 100060e:	0808                	addi	a0,sp,16
 1000610:	0808                	addi	a0,sp,16
 1000612:	0808                	addi	a0,sp,16
 1000614:	0808                	addi	a0,sp,16
 1000616:	0808                	addi	a0,sp,16
 1000618:	0808                	addi	a0,sp,16
 100061a:	0808                	addi	a0,sp,16
 100061c:	0808                	addi	a0,sp,16
 100061e:	0808                	addi	a0,sp,16
 1000620:	0808                	addi	a0,sp,16
 1000622:	0808                	addi	a0,sp,16
 1000624:	0808                	addi	a0,sp,16
 1000626:	0808                	addi	a0,sp,16
 1000628:	0808                	addi	a0,sp,16
 100062a:	0808                	addi	a0,sp,16
 100062c:	0808                	addi	a0,sp,16
 100062e:	0808                	addi	a0,sp,16
 1000630:	0808                	addi	a0,sp,16
 1000632:	0808                	addi	a0,sp,16
 1000634:	0808                	addi	a0,sp,16
 1000636:	0808                	addi	a0,sp,16
 1000638:	0808                	addi	a0,sp,16
 100063a:	0808                	addi	a0,sp,16
 100063c:	0808                	addi	a0,sp,16
 100063e:	0808                	addi	a0,sp,16
 1000640:	0808                	addi	a0,sp,16
 1000642:	0808                	addi	a0,sp,16
 1000644:	0808                	addi	a0,sp,16
 1000646:	0808                	addi	a0,sp,16
 1000648:	0808                	addi	a0,sp,16
 100064a:	0808                	addi	a0,sp,16
 100064c:	0808                	addi	a0,sp,16
 100064e:	0808                	addi	a0,sp,16
 1000650:	0808                	addi	a0,sp,16
 1000652:	0808                	addi	a0,sp,16
 1000654:	0808                	addi	a0,sp,16
 1000656:	0808                	addi	a0,sp,16
 1000658:	0808                	addi	a0,sp,16
 100065a:	0808                	addi	a0,sp,16
 100065c:	0808                	addi	a0,sp,16
 100065e:	0808                	addi	a0,sp,16
 1000660:	0808                	addi	a0,sp,16
 1000662:	0808                	addi	a0,sp,16
 1000664:	0808                	addi	a0,sp,16
 1000666:	0808                	addi	a0,sp,16
 1000668:	0808                	addi	a0,sp,16
 100066a:	0808                	addi	a0,sp,16
 100066c:	0808                	addi	a0,sp,16
 100066e:	0808                	addi	a0,sp,16
 1000670:	0808                	addi	a0,sp,16
 1000672:	0808                	addi	a0,sp,16
 1000674:	0808                	addi	a0,sp,16
 1000676:	0808                	addi	a0,sp,16
 1000678:	0808                	addi	a0,sp,16
 100067a:	0808                	addi	a0,sp,16
 100067c:	0000                	unimp
 100067e:	0000                	unimp
 1000680:	ffff                	0xffff
 1000682:	ffff                	0xffff
 1000684:	ffff                	0xffff
 1000686:	4e497fef          	jal	t6,1097b6a <__freertos_irq_stack_top+0x87b6a>
 100068a:	0046                	c.slli	zero,0x11
 100068c:	6e69                	lui	t3,0x1a
 100068e:	0066                	c.slli	zero,0x19
 1000690:	414e                	lw	sp,208(sp)
 1000692:	004e                	c.slli	zero,0x13
 1000694:	616e                	flw	ft2,216(sp)
 1000696:	006e                	c.slli	zero,0x1b
 1000698:	0030                	addi	a2,sp,8
 100069a:	0000                	unimp
 100069c:	3130                	fld	fa2,96(a0)
 100069e:	3332                	fld	ft6,296(sp)
 10006a0:	3534                	fld	fa3,104(a0)
 10006a2:	3736                	fld	fa4,360(sp)
 10006a4:	3938                	fld	fa4,112(a0)
 10006a6:	4241                	li	tp,16
 10006a8:	46454443          	fmadd.q	fs0,fa0,ft4,fs0,rmm
 10006ac:	0000                	unimp
 10006ae:	0000                	unimp
 10006b0:	3130                	fld	fa2,96(a0)
 10006b2:	3332                	fld	ft6,296(sp)
 10006b4:	3534                	fld	fa3,104(a0)
 10006b6:	3736                	fld	fa4,360(sp)
 10006b8:	3938                	fld	fa4,112(a0)
 10006ba:	6261                	lui	tp,0x18
 10006bc:	66656463          	bltu	a0,t1,1000d24 <_end+0x144>
	...
 10006cc:	0000                	unimp
 10006ce:	3ff8                	fld	fa4,248(a5)
 10006d0:	4361                	li	t1,24
 10006d2:	87a7636f          	jal	t1,f7674c <_data_lma+0xf6c134>
 10006d6:	3fd2                	fld	ft11,304(sp)
 10006d8:	8b60c8b3          	0x8b60c8b3
 10006dc:	8a28                	0x8a28
 10006de:	3fc6                	fld	ft11,112(sp)
 10006e0:	509f79fb          	0x509f79fb
 10006e4:	3fd34413          	xori	s0,t1,1021
 10006e8:	0000                	unimp
 10006ea:	0000                	unimp
 10006ec:	0000                	unimp
 10006ee:	401c                	lw	a5,0(s0)
 10006f0:	0000                	unimp
 10006f2:	0000                	unimp
 10006f4:	0000                	unimp
 10006f6:	4014                	lw	a3,0(s0)
 10006f8:	0000                	unimp
 10006fa:	0000                	unimp
 10006fc:	0000                	unimp
 10006fe:	3fe0                	fld	fs0,248(a5)
 1000700:	6e49                	lui	t3,0x12
 1000702:	6966                	flw	fs2,88(sp)
 1000704:	696e                	flw	fs2,216(sp)
 1000706:	7974                	flw	fa3,116(a0)
 1000708:	0000                	unimp
 100070a:	0000                	unimp
 100070c:	614e                	flw	ft2,208(sp)
 100070e:	004e                	c.slli	zero,0x13

01000710 <__sf_fake_stderr>:
	...

01000730 <__sf_fake_stdin>:
	...

01000750 <__sf_fake_stdout>:
	...
 1000770:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
 1000774:	4f50                	lw	a2,28(a4)
 1000776:	00584953          	fadd.s	fs2,fa6,ft5,rmm
 100077a:	0000                	unimp
 100077c:	0000                	unimp
	...

01000780 <__mprec_bigtens>:
 1000780:	8000                	0x8000
 1000782:	37e0                	fld	fs0,232(a5)
 1000784:	c379                	beqz	a4,100084a <__mprec_tens+0xa2>
 1000786:	4341                	li	t1,16
 1000788:	b5056e17          	auipc	t3,0xb5056
 100078c:	b8b5                	j	1000008 <_data+0x8>
 100078e:	f9f54693          	xori	a3,a0,-97
 1000792:	4f03e93f 1d324d38 	0x1d324d384f03e93f
 100079a:	f930                	fsw	fa2,112(a0)
 100079c:	7748                	flw	fa0,44(a4)
 100079e:	5a82                	lw	s5,32(sp)
 10007a0:	bf3c                	fsd	fa5,120(a4)
 10007a2:	4fdd7f73          	csrrci	t5,0x4fd,26
 10007a6:	7515                	lui	a0,0xfffe5

010007a8 <__mprec_tens>:
 10007a8:	0000                	unimp
 10007aa:	0000                	unimp
 10007ac:	0000                	unimp
 10007ae:	3ff0                	fld	fa2,248(a5)
 10007b0:	0000                	unimp
 10007b2:	0000                	unimp
 10007b4:	0000                	unimp
 10007b6:	4024                	lw	s1,64(s0)
 10007b8:	0000                	unimp
 10007ba:	0000                	unimp
 10007bc:	0000                	unimp
 10007be:	4059                	c.li	zero,22
 10007c0:	0000                	unimp
 10007c2:	0000                	unimp
 10007c4:	4000                	lw	s0,0(s0)
 10007c6:	0000408f          	0x408f
 10007ca:	0000                	unimp
 10007cc:	8800                	0x8800
 10007ce:	000040c3          	fmadd.s	ft1,ft0,ft0,ft0,rmm
 10007d2:	0000                	unimp
 10007d4:	6a00                	flw	fs0,16(a2)
 10007d6:	40f8                	lw	a4,68(s1)
 10007d8:	0000                	unimp
 10007da:	0000                	unimp
 10007dc:	8480                	0x8480
 10007de:	412e                	lw	sp,200(sp)
 10007e0:	0000                	unimp
 10007e2:	0000                	unimp
 10007e4:	12d0                	addi	a2,sp,356
 10007e6:	00004163          	bltz	zero,10007e8 <__mprec_tens+0x40>
 10007ea:	0000                	unimp
 10007ec:	d784                	sw	s1,40(a5)
 10007ee:	00004197          	auipc	gp,0x4
 10007f2:	0000                	unimp
 10007f4:	cd65                	beqz	a0,10008ec <_ctype_+0x5c>
 10007f6:	41cd                	li	gp,19
 10007f8:	0000                	unimp
 10007fa:	2000                	fld	fs0,0(s0)
 10007fc:	a05f 4202 0000      	0x4202a05f
 1000802:	e800                	fsw	fs0,16(s0)
 1000804:	4876                	lw	a6,92(sp)
 1000806:	00004237          	lui	tp,0x4
 100080a:	a200                	fsd	fs0,0(a2)
 100080c:	1a94                	addi	a3,sp,368
 100080e:	426d                	li	tp,27
 1000810:	0000                	unimp
 1000812:	e540                	fsw	fs0,12(a0)
 1000814:	309c                	fld	fa5,32(s1)
 1000816:	42a2                	lw	t0,8(sp)
 1000818:	0000                	unimp
 100081a:	1e90                	addi	a2,sp,880
 100081c:	bcc4                	fsd	fs1,184(s1)
 100081e:	42d6                	lw	t0,84(sp)
 1000820:	0000                	unimp
 1000822:	2634                	fld	fa3,72(a2)
 1000824:	6bf5                	lui	s7,0x1d
 1000826:	430c                	lw	a1,0(a4)
 1000828:	8000                	0x8000
 100082a:	37e0                	fld	fs0,232(a5)
 100082c:	c379                	beqz	a4,10008f2 <_ctype_+0x62>
 100082e:	4341                	li	t1,16
 1000830:	a000                	fsd	fs0,0(s0)
 1000832:	85d8                	0x85d8
 1000834:	43763457          	0x43763457
 1000838:	c800                	sw	s0,16(s0)
 100083a:	674e                	flw	fa4,208(sp)
 100083c:	c16d                	beqz	a0,100091e <_ctype_+0x8e>
 100083e:	3d0043ab          	0x3d0043ab
 1000842:	6091                	lui	ra,0x4
 1000844:	58e4                	lw	s1,116(s1)
 1000846:	43e1                	li	t2,24
 1000848:	8c40                	0x8c40
 100084a:	78b5                	lui	a7,0xfffed
 100084c:	af1d                	j	1000f82 <_end+0x3a2>
 100084e:	4415                	li	s0,5
 1000850:	ef50                	fsw	fa2,28(a4)
 1000852:	d6e2                	sw	s8,108(sp)
 1000854:	1ae4                	addi	s1,sp,380
 1000856:	d592444b          	0xd592444b
 100085a:	064d                	addi	a2,a2,19
 100085c:	4480f0cf          	0x4480f0cf
 1000860:	4af6                	lw	s5,92(sp)
 1000862:	c7e1                	beqz	a5,100092a <_ctype_+0x9a>
 1000864:	2d02                	fld	fs10,0(sp)
 1000866:	44b5                	li	s1,13
 1000868:	9db4                	0x9db4
 100086a:	79d9                	lui	s3,0xffff6
 100086c:	44ea7843          	0x44ea7843

01000870 <p05.3310>:
 1000870:	0005                	c.nop	1
 1000872:	0000                	unimp
 1000874:	0019                	c.nop	6
 1000876:	0000                	unimp
 1000878:	007d                	c.nop	31
 100087a:	0000                	unimp
 100087c:	2b302d23          	sw	s3,698(zero) # 2ba <main+0x242>
 1000880:	0020                	addi	s0,sp,8
 1000882:	0000                	unimp
 1000884:	6c68                	flw	fa0,92(s0)
 1000886:	004c                	addi	a1,sp,4
 1000888:	6665                	lui	a2,0x19
 100088a:	47464567          	0x47464567
	...

01000890 <_ctype_>:
 1000890:	2000                	fld	fs0,0(s0)
 1000892:	2020                	fld	fs0,64(s0)
 1000894:	2020                	fld	fs0,64(s0)
 1000896:	2020                	fld	fs0,64(s0)
 1000898:	2020                	fld	fs0,64(s0)
 100089a:	2828                	fld	fa0,80(s0)
 100089c:	2828                	fld	fa0,80(s0)
 100089e:	2028                	fld	fa0,64(s0)
 10008a0:	2020                	fld	fs0,64(s0)
 10008a2:	2020                	fld	fs0,64(s0)
 10008a4:	2020                	fld	fs0,64(s0)
 10008a6:	2020                	fld	fs0,64(s0)
 10008a8:	2020                	fld	fs0,64(s0)
 10008aa:	2020                	fld	fs0,64(s0)
 10008ac:	2020                	fld	fs0,64(s0)
 10008ae:	2020                	fld	fs0,64(s0)
 10008b0:	8820                	0x8820
 10008b2:	1010                	addi	a2,sp,32
 10008b4:	1010                	addi	a2,sp,32
 10008b6:	1010                	addi	a2,sp,32
 10008b8:	1010                	addi	a2,sp,32
 10008ba:	1010                	addi	a2,sp,32
 10008bc:	1010                	addi	a2,sp,32
 10008be:	1010                	addi	a2,sp,32
 10008c0:	0410                	addi	a2,sp,512
 10008c2:	0404                	addi	s1,sp,512
 10008c4:	0404                	addi	s1,sp,512
 10008c6:	0404                	addi	s1,sp,512
 10008c8:	0404                	addi	s1,sp,512
 10008ca:	1004                	addi	s1,sp,32
 10008cc:	1010                	addi	a2,sp,32
 10008ce:	1010                	addi	a2,sp,32
 10008d0:	1010                	addi	a2,sp,32
 10008d2:	4141                	li	sp,16
 10008d4:	4141                	li	sp,16
 10008d6:	4141                	li	sp,16
 10008d8:	0101                	addi	sp,sp,0
 10008da:	0101                	addi	sp,sp,0
 10008dc:	0101                	addi	sp,sp,0
 10008de:	0101                	addi	sp,sp,0
 10008e0:	0101                	addi	sp,sp,0
 10008e2:	0101                	addi	sp,sp,0
 10008e4:	0101                	addi	sp,sp,0
 10008e6:	0101                	addi	sp,sp,0
 10008e8:	0101                	addi	sp,sp,0
 10008ea:	0101                	addi	sp,sp,0
 10008ec:	1010                	addi	a2,sp,32
 10008ee:	1010                	addi	a2,sp,32
 10008f0:	1010                	addi	a2,sp,32
 10008f2:	4242                	lw	tp,16(sp)
 10008f4:	4242                	lw	tp,16(sp)
 10008f6:	4242                	lw	tp,16(sp)
 10008f8:	0202                	c.slli64	tp
 10008fa:	0202                	c.slli64	tp
 10008fc:	0202                	c.slli64	tp
 10008fe:	0202                	c.slli64	tp
 1000900:	0202                	c.slli64	tp
 1000902:	0202                	c.slli64	tp
 1000904:	0202                	c.slli64	tp
 1000906:	0202                	c.slli64	tp
 1000908:	0202                	c.slli64	tp
 100090a:	0202                	c.slli64	tp
 100090c:	1010                	addi	a2,sp,32
 100090e:	1010                	addi	a2,sp,32
 1000910:	0020                	addi	s0,sp,8
	...
 1000992:	0000                	unimp
 1000994:	8b4c                	0x8b4c
 1000996:	ff00                	fsw	fs0,56(a4)
 1000998:	89c8                	0x89c8
 100099a:	ff00                	fsw	fs0,56(a4)
 100099c:	89c8                	0x89c8
 100099e:	ff00                	fsw	fs0,56(a4)
 10009a0:	89c4                	0x89c4
 10009a2:	ff00                	fsw	fs0,56(a4)
 10009a4:	89d4                	0x89d4
 10009a6:	ff00                	fsw	fs0,56(a4)
 10009a8:	89d4                	0x89d4
 10009aa:	ff00                	fsw	fs0,56(a4)
 10009ac:	8968                	0x8968
 10009ae:	ff00                	fsw	fs0,56(a4)
 10009b0:	89c4                	0x89c4
 10009b2:	ff00                	fsw	fs0,56(a4)
 10009b4:	89d4                	0x89d4
 10009b6:	ff00                	fsw	fs0,56(a4)
 10009b8:	8968                	0x8968
 10009ba:	ff00                	fsw	fs0,56(a4)
 10009bc:	89d4                	0x89d4
 10009be:	ff00                	fsw	fs0,56(a4)
 10009c0:	89c4                	0x89c4
 10009c2:	ff00                	fsw	fs0,56(a4)
 10009c4:	8b2c                	0x8b2c
 10009c6:	ff00                	fsw	fs0,56(a4)
 10009c8:	8b2c                	0x8b2c
 10009ca:	ff00                	fsw	fs0,56(a4)
 10009cc:	8b2c                	0x8b2c
 10009ce:	ff00                	fsw	fs0,56(a4)
 10009d0:	8968                	0x8968
 10009d2:	ff00                	fsw	fs0,56(a4)

010009d4 <impure_data>:
 10009d4:	0000                	unimp
 10009d6:	0000                	unimp
 10009d8:	0730                	addi	a2,sp,904
 10009da:	0100                	addi	s0,sp,128
 10009dc:	0750                	addi	a2,sp,900
 10009de:	0100                	addi	s0,sp,128
 10009e0:	0710                	addi	a2,sp,896
 10009e2:	0100                	addi	s0,sp,128
	...

01000a34 <__global_locale>:
 1000a34:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000a54:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000a74:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000a94:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000ab4:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000ad4:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000af4:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
	...
 1000b14:	86b0                	0x86b0
 1000b16:	0000                	unimp
 1000b18:	71e4                	flw	fs1,100(a1)
 1000b1a:	0000                	unimp
 1000b1c:	0000                	unimp
 1000b1e:	0000                	unimp
 1000b20:	0890                	addi	a2,sp,80
 1000b22:	0100                	addi	s0,sp,128
 1000b24:	0404                	addi	s1,sp,512
 1000b26:	0100                	addi	s0,sp,128
 1000b28:	0150                	addi	a2,sp,132
 1000b2a:	0100                	addi	s0,sp,128
 1000b2c:	0150                	addi	a2,sp,132
 1000b2e:	0100                	addi	s0,sp,128
 1000b30:	0150                	addi	a2,sp,132
 1000b32:	0100                	addi	s0,sp,128
 1000b34:	0150                	addi	a2,sp,132
 1000b36:	0100                	addi	s0,sp,128
 1000b38:	0150                	addi	a2,sp,132
 1000b3a:	0100                	addi	s0,sp,128
 1000b3c:	0150                	addi	a2,sp,132
 1000b3e:	0100                	addi	s0,sp,128
 1000b40:	0150                	addi	a2,sp,132
 1000b42:	0100                	addi	s0,sp,128
 1000b44:	0150                	addi	a2,sp,132
 1000b46:	0100                	addi	s0,sp,128
 1000b48:	0150                	addi	a2,sp,132
 1000b4a:	0100                	addi	s0,sp,128
 1000b4c:	ffff                	0xffff
 1000b4e:	ffff                	0xffff
 1000b50:	ffff                	0xffff
 1000b52:	ffff                	0xffff
 1000b54:	ffff                	0xffff
 1000b56:	ffff                	0xffff
 1000b58:	ffff                	0xffff
 1000b5a:	0000                	unimp
 1000b5c:	0001                	nop
 1000b5e:	5341                	li	t1,-16
 1000b60:	00494943          	fmadd.s	fs2,fs2,ft4,ft0,rmm
	...
 1000b7c:	0000                	unimp
 1000b7e:	5341                	li	t1,-16
 1000b80:	00494943          	fmadd.s	fs2,fs2,ft4,ft0,rmm
	...

01000ba0 <default_num_contexts>:
 1000ba0:	0001                	nop
	...

01000ba4 <seed3_volatile>:
volatile ee_s32 seed3_volatile = 0x66;
 1000ba4:	0066                	c.slli	zero,0x19
	...

01000ba8 <seed4_volatile>:
volatile ee_s32 seed4_volatile = ITERATIONS;
 1000ba8:	0bb8                	addi	a4,sp,472
	...

01000bac <_impure_ptr>:
 1000bac:	09d4                	addi	a3,sp,212
 1000bae:	0100                	addi	s0,sp,128

Disassembly of section .bss:

01000bb0 <seed1_volatile>:
volatile ee_s32 seed1_volatile = 0x0;
 1000bb0:	0000                	unimp
	...

01000bb4 <seed2_volatile>:
volatile ee_s32 seed2_volatile = 0x0;
 1000bb4:	0000                	unimp
	...

01000bb8 <seed5_volatile>:
volatile ee_s32 seed5_volatile = 0;
 1000bb8:	0000                	unimp
	...

01000bbc <__malloc_free_list>:
 1000bbc:	0000                	unimp
	...

01000bc0 <__malloc_sbrk_start>:
 1000bc0:	0000                	unimp
	...

01000bc4 <heap_end.1518>:
 1000bc4:	0000                	unimp
	...

01000bc8 <timer_1>:
	...

01000bd0 <timer_0>:
	...

01000bd8 <errno>:
 1000bd8:	0000                	unimp
	...

Disassembly of section .stack:

0100f000 <__freertos_irq_stack_top-0x1000>:
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
	la gp, __global_pointer$
       0:	1a65                	addi	s4,s4,-7
       2:	0000                	unimp
       4:	0004                	0x4
       6:	0000                	unimp
	la sp, _sp 
       8:	0000                	unimp
       a:	0104                	addi	s1,sp,128
       c:	0686                	slli	a3,a3,0x1
       e:	0000                	unimp
	la a0, _data_lma 
      10:	840c                	0x840c
      12:	0004                	0x4
      14:	5b00                	lw	s0,48(a4)
      16:	0002                	c.slli64	zero
	la a1, _data
      18:	4800                	lw	s0,16(s0)
      1a:	00000003          	lb	zero,0(zero) # 0 <_start>
      1e:	0000                	unimp
	la a2, _edata
      20:	0000                	unimp
      22:	0000                	unimp
      24:	0200                	addi	s0,sp,256
      26:	0704                	addi	s1,sp,896
	bgeu a1, a2, 2f
      28:	01a4                	addi	s1,sp,200
      2a:	0000                	unimp
	lw t0, (a0)
      2c:	0102                	c.slli64	sp
      2e:	c606                	sw	ra,12(sp)
	sw t0, (a1)
      30:	0005                	c.nop	1
      32:	0200                	addi	s0,sp,256
	lw t1, (a1)
      34:	0801                	addi	a6,a6,0
      36:	05c4                	addi	s1,sp,708
	addi a0, a0, 4
      38:	0000                	unimp
      3a:	0202                	c.slli64	tp
	addi a1, a1, 4
      3c:	7a05                	lui	s4,0xfffe1
      3e:	0004                	0x4
	bltu a1, a2, 1b
      40:	0200                	addi	s0,sp,256
      42:	0702                	c.slli64	a4
	la a0, __bss_start
      44:	070c                	addi	a1,sp,896
      46:	0000                	unimp
      48:	0402                	c.slli64	s0
      4a:	8805                	andi	s0,s0,1
	la a1, _end
      4c:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
      50:	0704                	addi	s1,sp,896
      52:	019f 0000 0802      	0x8020000019f
	sw zero, (a0)
      58:	8305                	srli	a4,a4,0x1
      5a:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
	addi a0, a0, 4
      5e:	0708                	addi	a0,sp,896
	bltu a0, a1, 1b
      60:	019a                	slli	gp,gp,0x6
      62:	0000                	unimp
    li x31,0xa0
      64:	69050403          	lb	s0,1680(a0) # fffe5690 <__freertos_irq_stack_top+0xfefd5690>
    call main
      68:	746e                	flw	fs0,248(sp)
      6a:	0200                	addi	s0,sp,256
      6c:	0410                	addi	a2,sp,512
      6e:	043d                	addi	s0,s0,15
    li x31,0xaa
      70:	0000                	unimp
      72:	7f04                	flw	fs1,56(a4)
    j loop
      74:	0005                	c.nop	1
      76:	0200                	addi	s0,sp,256
{
      78:	0165                	addi	sp,sp,25
      7a:	00002517          	auipc	a0,0x2
    portable_init(&(results[0].port), &argc, argv);
      7e:	0500                	addi	s0,sp,640
{
      80:	0735                	addi	a4,a4,13
      82:	0000                	unimp
      84:	480e2e03          	lw	t3,1152(t3) # b6056c08 <__freertos_irq_stack_top+0xb5046c08>
      88:	0000                	unimp
      8a:	0500                	addi	s0,sp,640
      8c:	00f0                	addi	a2,sp,76
      8e:	0000                	unimp
      90:	480e7403          	0x480e7403
      94:	0000                	unimp
      96:	0500                	addi	s0,sp,640
      98:	06fc                	addi	a5,sp,844
      9a:	0000                	unimp
      9c:	64179303          	lh	t1,1601(a5)
      a0:	0000                	unimp
      a2:	0600                	addi	s0,sp,768
      a4:	0304                	addi	s1,sp,384
      a6:	03a5                	addi	t2,t2,9
      a8:	00c5                	addi	ra,ra,17
      aa:	0000                	unimp
      ac:	00032607          	flw	fa2,0(t1)
      b0:	0300                	addi	s0,sp,384
      b2:	00720ca7          	0x720ca7
      b6:	0000                	unimp
      b8:	0004dd07          	0x4dd07
    portable_init(&(results[0].port), &argc, argv);
      bc:	0300                	addi	s0,sp,384
      be:	13a8                	addi	a0,sp,488
      c0:	00c5                	addi	ra,ra,17
      c2:	0000                	unimp
      c4:	0800                	addi	s0,sp,16
      c6:	00000033          	add	zero,zero,zero
      ca:	00d5                	addi	ra,ra,21
{
      cc:	0000                	unimp
      ce:	2509                	jal	6d0 <main+0x658>
    portable_init(&(results[0].port), &argc, argv);
      d0:	0000                	unimp
      d2:	0300                	addi	s0,sp,384
      d4:	0a00                	addi	s0,sp,272
      d6:	0308                	addi	a0,sp,384
      d8:	09a2                	slli	s3,s3,0x8
      da:	00f9                	addi	ra,ra,30
      dc:	0000                	unimp
      de:	0001660b          	0x1660b
    results[0].seed1      = get_seed(1);
      e2:	0300                	addi	s0,sp,384
      e4:	07a4                	addi	s1,sp,968
      e6:	0064                	addi	s1,sp,12
      e8:	0000                	unimp
      ea:	0b00                	addi	s0,sp,400
      ec:	0296                	slli	t0,t0,0x5
      ee:	0000                	unimp
    results[0].seed2      = get_seed(2);
      f0:	a305a903          	lw	s2,-1488(a1)
      f4:	0000                	unimp
      f6:	0400                	addi	s0,sp,512
      f8:	0500                	addi	s0,sp,640
      fa:	00000407          	0x407
      fe:	d503aa03          	lw	s4,-688(t2)
    results[0].seed3      = get_seed(3);
     102:	0000                	unimp
     104:	0c00                	addi	s0,sp,528
     106:	0504                	addi	s1,sp,640
     108:	000003bb          	0x3bb
     10c:	1604                	addi	s1,sp,800
     10e:	4f19                	li	t5,6
    results[0].iterations = get_seed_32(4);
     110:	0000                	unimp
     112:	0500                	addi	s0,sp,640
     114:	00b0                	addi	a2,sp,72
     116:	0000                	unimp
     118:	0c05                	addi	s8,s8,1
     11a:	640d                	lui	s0,0x3
     11c:	0000                	unimp
     11e:	0500                	addi	s0,sp,640
    results[0].execs = get_seed_32(5);
     120:	030e                	slli	t1,t1,0x3
     122:	0000                	unimp
     124:	2304                	fld	fs1,0(a4)
     126:	0001131b          	0x1131b
     12a:	0d00                	addi	s0,sp,656
    if (results[0].execs == 0)
     12c:	012a                	slli	sp,sp,0xa
     12e:	0000                	unimp
    results[0].execs = get_seed_32(5);
     130:	0418                	addi	a4,sp,512
     132:	0834                	addi	a3,sp,24
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
     134:	0185                	addi	gp,gp,1
     136:	0000                	unimp
     138:	00079f0b          	0x79f0b
     13c:	0400                	addi	s0,sp,512
     13e:	1336                	slli	t1,t1,0x2d
     140:	0185                	addi	gp,gp,1
     142:	0000                	unimp
     144:	0e00                	addi	s0,sp,784
     146:	6b5f 0400 0737      	0x73704006b5f
     14c:	0064                	addi	s1,sp,12
     14e:	0000                	unimp
     150:	0b04                	addi	s1,sp,400
     152:	0542                	slli	a0,a0,0x10
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     154:	0000                	unimp
     156:	3704                	fld	fs1,40(a4)
     158:	0000640b          	0x640b
        && (results[0].seed3 == 0))
     15c:	0800                	addi	s0,sp,16
     15e:	0004ba0b          	0x4ba0b
     162:	0400                	addi	s0,sp,512
     164:	00641437          	lui	s0,0x641
        results[0].seed1 = 0x3415;
     168:	0000                	unimp
     16a:	0b0c                	addi	a1,sp,400
     16c:	01c6                	slli	gp,gp,0x11
     16e:	0000                	unimp
     170:	3704                	fld	fs1,40(a4)
     172:	0000641b          	0x641b
     176:	1000                	addi	s0,sp,32
        results[0].seed3 = 0x66;
     178:	5f0e                	lw	t5,224(sp)
     17a:	0078                	addi	a4,sp,12
     17c:	3804                	fld	fs1,48(s0)
     17e:	00018b0b          	0x18b0b
        if ((1 << (ee_u32)i) & results[0].execs)
     182:	1400                	addi	s0,sp,544
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     184:	0f00                	addi	s0,sp,912
     186:	2b04                	fld	fs1,16(a4)
     188:	0001                	nop
     18a:	0800                	addi	s0,sp,16
     18c:	00000107          	0x107
     190:	0000019b          	0x19b
     194:	2509                	jal	796 <main+0x71e>
     196:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     198:	0000                	unimp
     19a:	0d00                	addi	s0,sp,656
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     19c:	056d                	addi	a0,a0,27
     19e:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     1a0:	0424                	addi	s1,sp,520
     1a2:	083c                	addi	a5,sp,24
            num_algorithms++;
     1a4:	021e                	slli	tp,tp,0x7
     1a6:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1a8:	00022d0b          	0x22d0b
     1ac:	0400                	addi	s0,sp,512
     1ae:	093e                	slli	s2,s2,0xf
    results[i].err         = 0;
     1b0:	0064                	addi	s1,sp,12
     1b2:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     1b4:	0b00                	addi	s0,sp,400
     1b6:	0178                	addi	a4,sp,140
            num_algorithms++;
     1b8:	0000                	unimp
     1ba:	3f04                	fld	fs1,56(a4)
        if ((1 << (ee_u32)i) & results[0].execs)
     1bc:	6409                	lui	s0,0x2
     1be:	0000                	unimp
            num_algorithms++;
     1c0:	0400                	addi	s0,sp,512
     1c2:	0001560b          	0x1560b
     1c6:	0400                	addi	s0,sp,512
     1c8:	0940                	addi	s0,sp,148
     1ca:	0064                	addi	s1,sp,12
        results[i].size = results[i].size / num_algorithms;
     1cc:	0000                	unimp
     1ce:	0b08                	addi	a0,sp,400
     1d0:	02c6                	slli	t0,t0,0x11
     1d2:	0000                	unimp
     1d4:	4104                	lw	s1,0(a0)
     1d6:	6409                	lui	s0,0x2
        if ((1 << (ee_u32)i) & results[0].execs)
     1d8:	0000                	unimp
     1da:	0c00                	addi	s0,sp,528
        results[i].size = results[i].size / num_algorithms;
     1dc:	0004340b          	0x4340b
        if ((1 << (ee_u32)i) & results[0].execs)
     1e0:	0400                	addi	s0,sp,512
     1e2:	0942                	slli	s2,s2,0x10
     1e4:	0064                	addi	s1,sp,12
     1e6:	0000                	unimp
     1e8:	0b10                	addi	a2,sp,400
     1ea:	000004f7          	0x4f7
        if (results[i].execs & ID_LIST)
     1ee:	4304                	lw	s1,0(a4)
        if (results[i].execs & ID_MATRIX)
     1f0:	6409                	lui	s0,0x2
     1f2:	0000                	unimp
        if (results[i].execs & ID_STATE)
     1f4:	1400                	addi	s0,sp,544
     1f6:	0001320b          	0x1320b
     1fa:	0400                	addi	s0,sp,512
            core_init_state(
     1fc:	0944                	addi	s1,sp,148
     1fe:	0064                	addi	s1,sp,12
     200:	0000                	unimp
     202:	0b18                	addi	a4,sp,400
                results[0].size, results[i].seed1, results[i].memblock[3]);
     204:	0236                	slli	tp,tp,0xd
     206:	0000                	unimp
            core_init_state(
     208:	4504                	lw	s1,8(a0)
     20a:	6409                	lui	s0,0x2
     20c:	0000                	unimp
     20e:	1c00                	addi	s0,sp,560
     210:	00041a0b          	0x41a0b
     214:	0400                	addi	s0,sp,512
     216:	0946                	slli	s2,s2,0x11
     218:	0064                	addi	s1,sp,12
     21a:	0000                	unimp
     21c:	0020                	addi	s0,sp,8
     21e:	2910                	fld	fa2,16(a0)
     220:	0000                	unimp
     222:	0800                	addi	s0,sp,16
     224:	0401                	addi	s0,s0,0
     226:	0263084f          	fnmadd.d	fa6,ft6,ft6,ft0,rne
    if (results[0].iterations == 0)
     22a:	0000                	unimp
     22c:	0004120b          	0x4120b
        while (secs_passed < (secs_ret)1)
     230:	0400                	addi	s0,sp,512
     232:	0a50                	addi	a2,sp,276
     234:	00000263          	beqz	zero,238 <main+0x1c0>
     238:	0b00                	addi	s0,sp,400
     23a:	05a9                	addi	a1,a1,10
        results[0].iterations = 1;
     23c:	0000                	unimp
     23e:	5104                	lw	s1,32(a0)
     240:	6309                	lui	t1,0x2
     242:	0002                	c.slli64	zero
        crc      = core_bench_list(res, 1);
     244:	8000                	0x8000
     246:	2611                	jal	54a <main+0x4d2>
     248:	04000007          	0x4000007
     24c:	01070a53          	fadd.s	fs4,fa4,fa6,rne
     250:	0000                	unimp
     252:	0100                	addi	s0,sp,128
     254:	8411                	srai	s0,s0,0x4
     256:	04000007          	0x4000007
     25a:	0a56                	slli	s4,s4,0x15
            results[0].iterations *= 10;
     25c:	00000107          	0x107
    for (i = 0; i < iterations; i++)
     260:	0104                	addi	s1,sp,128
     262:	0800                	addi	s0,sp,16
            results[0].iterations *= 10;
     264:	0105                	addi	sp,sp,1
     266:	0000                	unimp
     268:	00000273          	0x273
     26c:	2509                	jal	86e <main+0x7f6>
     26e:	0000                	unimp
     270:	1f00                	addi	s0,sp,944
     272:	1000                	addi	s0,sp,32
            start_time();
     274:	0460                	addi	s0,sp,524
     276:	0000                	unimp
     278:	0190                	addi	a2,sp,192
     27a:	6204                	flw	fs1,0(a2)
    ee_u32        iterations = res->iterations;
     27c:	b608                	fsd	fa0,40(a2)
     27e:	0002                	c.slli64	zero
    res->crc                 = 0;
     280:	0b00                	addi	s0,sp,400
     282:	079f 0000 6304      	0x63040000079f
    for (i = 0; i < iterations; i++)
     288:	b612                	fsd	ft4,296(sp)
     28a:	0002                	c.slli64	zero
        crc      = core_bench_list(res, 1);
     28c:	0000                	unimp
     28e:	0002450b          	0x2450b
     292:	0400                	addi	s0,sp,512
     294:	0664                	addi	s1,sp,780
     296:	0064                	addi	s1,sp,12
     298:	0000                	unimp
     29a:	0b04                	addi	s1,sp,400
        res->crc = crcu16(crc, res->crc);
     29c:	0109                	addi	sp,sp,2
     29e:	0000                	unimp
     2a0:	6604                	flw	fs1,8(a2)
     2a2:	bc09                	j	fffffcb4 <__freertos_irq_stack_top+0xfefefcb4>
     2a4:	0002                	c.slli64	zero
     2a6:	0800                	addi	s0,sp,16
     2a8:	0000290b          	0x290b
        crc      = core_bench_list(res, -1);
     2ac:	0400                	addi	s0,sp,512
     2ae:	021e1e67          	0x21e1e67
     2b2:	0000                	unimp
     2b4:	0088                	addi	a0,sp,64
     2b6:	0273040f          	0x273040f
     2ba:	0000                	unimp
        res->crc = crcu16(crc, res->crc);
     2bc:	cc08                	sw	a0,24(s0)
     2be:	0002                	c.slli64	zero
     2c0:	cc00                	sw	s0,24(s0)
     2c2:	0002                	c.slli64	zero
     2c4:	0900                	addi	s0,sp,144
     2c6:	0025                	c.nop	9
     2c8:	0000                	unimp
     2ca:	001f 040f 02d2      	0x2d2040f001f
    for (i = 0; i < iterations; i++)
     2d0:	0000                	unimp
     2d2:	0d12                	slli	s10,s10,0x4
     2d4:	0636                	slli	a2,a2,0xd
     2d6:	0000                	unimp
            stop_time();
     2d8:	0408                	addi	a0,sp,512
     2da:	087a                	slli	a6,a6,0x1e
     2dc:	000002fb          	0x2fb
            secs_passed = time_in_secs(get_time());
     2e0:	0003a50b          	0x3a50b
     2e4:	0400                	addi	s0,sp,512
     2e6:	02fb117b          	0x2fb117b
     2ea:	0000                	unimp
     2ec:	0b00                	addi	s0,sp,400
     2ee:	0000072f          	0x72f
        while (secs_passed < (secs_ret)1)
     2f2:	7c04                	flw	fs1,56(s0)
     2f4:	6406                	flw	fs0,64(sp)
     2f6:	0000                	unimp
            secs_passed = time_in_secs(get_time());
     2f8:	0400                	addi	s0,sp,512
     2fa:	0f00                	addi	s0,sp,912
     2fc:	3304                	fld	fs1,32(a4)
     2fe:	0000                	unimp
        while (secs_passed < (secs_ret)1)
     300:	0d00                	addi	s0,sp,656
     302:	01be                	slli	gp,gp,0xf
     304:	0000                	unimp
     306:	0468                	addi	a0,sp,524
     308:	08ba                	slli	a7,a7,0xe
     30a:	0444                	addi	s1,sp,516
        divisor = (ee_u32)secs_passed;
     30c:	0000                	unimp
     30e:	5f0e                	lw	t5,224(sp)
     310:	0070                	addi	a2,sp,12
     312:	bb04                	fsd	fs1,48(a4)
     314:	fb12                	fsw	ft4,180(sp)
     316:	0002                	c.slli64	zero
     318:	0000                	unimp
     31a:	5f0e                	lw	t5,224(sp)
        if (divisor == 0) /* some machines cast float to int as 0 since this
     31c:	0072                	c.slli	zero,0x1c
     31e:	bc04                	fsd	fs1,56(s0)
            divisor = 1;
     320:	00006407          	0x6407
        results[0].iterations *= 1 + 10 / divisor;
     324:	0400                	addi	s0,sp,512
     326:	5f0e                	lw	t5,224(sp)
     328:	bd040077          	0xbd040077
     32c:	00006407          	0x6407
     330:	0800                	addi	s0,sp,16
     332:	00007f0b          	0x7f0b
     336:	0400                	addi	s0,sp,512
     338:	09be                	slli	s3,s3,0xf
     33a:	003a                	c.slli	zero,0xe
    start_time();
     33c:	0000                	unimp
     33e:	0b0c                	addi	a1,sp,400
     340:	03d9                	addi	t2,t2,22
     342:	0000                	unimp
    iterate(&results[0]);
     344:	bf04                	fsd	fs1,56(a4)
     346:	3a09                	jal	fffffc58 <__freertos_irq_stack_top+0xfefefc58>
     348:	0000                	unimp
     34a:	0e00                	addi	s0,sp,784
     34c:	5f0e                	lw	t5,224(sp)
     34e:	6662                	flw	fa2,24(sp)
     350:	0400                	addi	s0,sp,512
     352:	11c0                	addi	s0,sp,228
     354:	000002d3          	fadd.s	ft5,ft0,ft0,rne
     358:	0b10                	addi	a2,sp,400
     35a:	0076                	c.slli	zero,0x1d
     35c:	0000                	unimp
     35e:	c104                	sw	s1,0(a0)
     360:	00006407          	0x6407
    stop_time();
     364:	1800                	addi	s0,sp,48
     366:	0001140b          	0x1140b
     36a:	0400                	addi	s0,sp,512
    total_time = get_time();
     36c:	0ac8                	addi	a0,sp,340
     36e:	0105                	addi	sp,sp,1
     370:	0000                	unimp
     372:	0b1c                	addi	a5,sp,400
    seedcrc = crc16(results[0].seed1, seedcrc);
     374:	00c2                	slli	ra,ra,0x10
     376:	0000                	unimp
     378:	ca04                	sw	s1,16(a2)
     37a:	c81d                	beqz	s0,3b0 <main+0x338>
     37c:	0005                	c.nop	1
     37e:	2000                	fld	fs0,0(s0)
    total_time = get_time();
     380:	0004490b          	0x4490b
    seedcrc = crc16(results[0].seed1, seedcrc);
     384:	0400                	addi	s0,sp,512
     386:	1dcc                	addi	a1,sp,756
     388:	05f2                	slli	a1,a1,0x1c
     38a:	0000                	unimp
     38c:	0b24                	addi	s1,sp,408
     38e:	07b0                	addi	a2,sp,968
     390:	0000                	unimp
     392:	cf04                	sw	s1,24(a4)
     394:	160d                	addi	a2,a2,-29
     396:	0006                	c.slli	zero,0x1
    seedcrc = crc16(results[0].seed2, seedcrc);
     398:	2800                	fld	fs0,16(s0)
     39a:	0003320b          	0x3320b
     39e:	0400                	addi	s0,sp,512
     3a0:	09d0                	addi	a2,sp,212
     3a2:	0630                	addi	a2,sp,776
     3a4:	0000                	unimp
     3a6:	0e2c                	addi	a1,sp,792
     3a8:	755f 0062 d304      	0xd3040062755f
    seedcrc = crc16(results[0].seed3, seedcrc);
     3ae:	d311                	beqz	a4,2b2 <main+0x23a>
     3b0:	0002                	c.slli64	zero
     3b2:	3000                	fld	fs0,32(s0)
     3b4:	5f0e                	lw	t5,224(sp)
     3b6:	7075                	c.lui	zero,0xffffd
     3b8:	0400                	addi	s0,sp,512
     3ba:	12d4                	addi	a3,sp,356
     3bc:	000002fb          	0x2fb
    seedcrc = crc16(results[0].size, seedcrc);
     3c0:	0e38                	addi	a4,sp,792
     3c2:	755f 0072 d504      	0xd5040072755f
     3c8:	00006407          	0x6407
     3cc:	3c00                	fld	fs0,56(s0)
     3ce:	0007e00b          	0x7e00b
    switch (seedcrc)
     3d2:	0400                	addi	s0,sp,512
     3d4:	11d8                	addi	a4,sp,228
     3d6:	0636                	slli	a2,a2,0xd
    seedcrc = crc16(results[0].size, seedcrc);
     3d8:	0000                	unimp
     3da:	0b40                	addi	s0,sp,404
    switch (seedcrc)
     3dc:	073c                	addi	a5,sp,904
     3de:	0000                	unimp
     3e0:	d904                	sw	s1,48(a0)
     3e2:	4611                	li	a2,4
     3e4:	0006                	c.slli	zero,0x1
     3e6:	4300                	lw	s0,0(a4)
     3e8:	5f0e                	lw	t5,224(sp)
     3ea:	626c                	flw	fa1,68(a2)
     3ec:	0400                	addi	s0,sp,512
     3ee:	11dc                	addi	a5,sp,228
     3f0:	000002d3          	fadd.s	ft5,ft0,ft0,rne
     3f4:	0b44                	addi	s1,sp,404
     3f6:	0564                	addi	s1,sp,652
     3f8:	0000                	unimp
     3fa:	df04                	sw	s1,56(a4)
            ee_printf("2K performance run parameters for coremark.\n");
     3fc:	00006407          	0x6407
     400:	4c00                	lw	s0,24(s0)
     402:	0001ff0b          	0x1ff0b
     406:	0400                	addi	s0,sp,512
     408:	0ae0                	addi	s0,sp,348
     40a:	007f                	0x7f
     40c:	0000                	unimp
     40e:	0b50                	addi	a2,sp,404
     410:	0172                	slli	sp,sp,0x1c
     412:	0000                	unimp
     414:	e304                	fsw	fs1,0(a4)
     416:	6212                	flw	ft4,4(sp)
            known_id = 3;
     418:	0004                	0x4
     41a:	5400                	lw	s0,40(s0)
            ee_printf("2K performance run parameters for coremark.\n");
     41c:	0005720b          	0x5720b
     420:	0400                	addi	s0,sp,512
     422:	011f0ce7          	jalr	s9,17(t5) # 1a011 <_data_lma+0xf9f9>
     426:	0000                	unimp
            known_id = 3;
     428:	0b58                	addi	a4,sp,404
     42a:	0468                	addi	a0,sp,524
        for (i = 0; i < default_num_contexts; i++)
     42c:	0000                	unimp
     42e:	e904                	fsw	fs1,16(a0)
     430:	f90e                	fsw	ft3,176(sp)
     432:	0000                	unimp
     434:	5c00                	lw	s0,56(s0)
     436:	00077c0b          	0x77c0b
     43a:	0400                	addi	s0,sp,512
     43c:	09ea                	slli	s3,s3,0x1a
     43e:	0064                	addi	s1,sp,12
            results[i].err = 0;
     440:	0000                	unimp
     442:	0064                	addi	s1,sp,12
     444:	00009713          	slli	a4,ra,0x0
     448:	6200                	flw	fs0,0(a2)
     44a:	0004                	0x4
     44c:	1400                	addi	s0,sp,544
     44e:	0462                	slli	s0,s0,0x18
     450:	0000                	unimp
     452:	0514                	addi	a3,sp,640
     454:	0001                	nop
     456:	1400                	addi	s0,sp,544
     458:	05b6                	slli	a1,a1,0xd
     45a:	0000                	unimp
     45c:	6414                	flw	fa3,8(s0)
     45e:	0000                	unimp
     460:	0000                	unimp
     462:	046d040f          	0x46d040f
     466:	0000                	unimp
     468:	6215                	lui	tp,0x5
     46a:	0004                	0x4
     46c:	1600                	addi	s0,sp,800
     46e:	0705                	addi	a4,a4,1
     470:	0000                	unimp
     472:	0428                	addi	a0,sp,520
     474:	6504                	flw	fs1,8(a0)
     476:	0802                	c.slli64	a6
            total_errors += results[i].err;
     478:	05b6                	slli	a1,a1,0xd
     47a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     47c:	00042d17          	auipc	s10,0x42
            total_errors += results[i].err;
     480:	0400                	addi	s0,sp,512
     482:	64070267          	jalr	tp,1600(a4)
        for (i = 0; i < default_num_contexts; i++)
     486:	0000                	unimp
            total_errors += results[i].err;
     488:	0000                	unimp
     48a:	00036617          	auipc	a2,0x36
        for (i = 0; i < default_num_contexts; i++)
     48e:	0400                	addi	s0,sp,512
            total_errors += results[i].err;
     490:	026c                	addi	a1,sp,268
     492:	0006a20b          	0x6a20b
        for (i = 0; i < default_num_contexts; i++)
     496:	0400                	addi	s0,sp,512
            total_errors += results[i].err;
     498:	0000e817          	auipc	a6,0xe
        for (i = 0; i < default_num_contexts; i++)
     49c:	0400                	addi	s0,sp,512
     49e:	026c                	addi	a1,sp,268
            results[i].err = 0;
     4a0:	a214                	fsd	fa3,0(a2)
     4a2:	0006                	c.slli	zero,0x1
     4a4:	0800                	addi	s0,sp,16
     4a6:	0007cf17          	auipc	t5,0x7c
     4aa:	0400                	addi	s0,sp,512
     4ac:	026c                	addi	a1,sp,268
     4ae:	a21e                	fsd	ft7,256(sp)
     4b0:	0006                	c.slli	zero,0x1
     4b2:	0c00                	addi	s0,sp,528
     4b4:	00024017          	auipc	zero,0x24
            if ((results[i].execs & ID_LIST)
     4b8:	0400                	addi	s0,sp,512
     4ba:	026e                	slli	tp,tp,0x1b
            results[i].err = 0;
     4bc:	6408                	flw	fa0,8(s0)
     4be:	0000                	unimp
            if ((results[i].execs & ID_LIST)
     4c0:	1000                	addi	s0,sp,32
     4c2:	00020717          	auipc	a4,0x20
     4c6:	0400                	addi	s0,sp,512
                && (results[i].crclist != list_known_crc[known_id]))
     4c8:	a208026f          	jal	tp,fff806e8 <__freertos_irq_stack_top+0xfef706e8>
     4cc:	0008                	0x8
     4ce:	1400                	addi	s0,sp,544
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
     4d0:	00076317          	auipc	t1,0x76
     4d4:	0400                	addi	s0,sp,512
     4d6:	0272                	slli	tp,tp,0x1c
     4d8:	00006407          	0x6407
     4dc:	3000                	fld	fs0,32(s0)
     4de:	0006f417          	auipc	s0,0x6f
     4e2:	0400                	addi	s0,sp,512
     4e4:	b7160273          	0xb7160273
                results[i].err++;
     4e8:	0008                	0x8
     4ea:	3400                	fld	fs0,40(s0)
     4ec:	00033f17          	auipc	t5,0x33
     4f0:	0400                	addi	s0,sp,512
     4f2:	0275                	addi	tp,tp,29
            if ((results[i].execs & ID_MATRIX)
     4f4:	00006407          	0x6407
     4f8:	3800                	fld	fs0,48(s0)
     4fa:	0003f117          	auipc	sp,0x3f
     4fe:	0400                	addi	s0,sp,512
     500:	c80a0277          	0xc80a0277
     504:	0008                	0x8
     506:	3c00                	fld	fs0,56(s0)
     508:	00014e17          	auipc	t3,0x14
     50c:	0400                	addi	s0,sp,512
     50e:	027a                	slli	tp,tp,0x1e
     510:	00018513          	mv	a0,gp
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
     514:	4000                	lw	s0,0(s0)
     516:	00019017          	auipc	zero,0x19
     51a:	0400                	addi	s0,sp,512
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
     51c:	6407027b          	0x6407027b
     520:	0000                	unimp
     522:	4400                	lw	s0,8(s0)
     524:	00029e17          	auipc	t3,0x29
     528:	0400                	addi	s0,sp,512
     52a:	027c                	addi	a5,sp,268
     52c:	00018513          	mv	a0,gp
     530:	4800                	lw	s0,16(s0)
     532:	0003ab17          	auipc	s6,0x3a
                results[i].err++;
     536:	0400                	addi	s0,sp,512
     538:	027d                	addi	tp,tp,31
     53a:	ce14                	sw	a3,24(a2)
     53c:	0008                	0x8
     53e:	4c00                	lw	s0,24(s0)
     540:	00053a17          	auipc	s4,0x53
            if ((results[i].execs & ID_STATE)
     544:	0400                	addi	s0,sp,512
     546:	0280                	addi	s0,sp,320
     548:	00006407          	0x6407
                && (results[i].crcstate != state_known_crc[known_id]))
     54c:	5000                	lw	s0,32(s0)
     54e:	0005bc17          	auipc	s8,0x5b
     552:	0400                	addi	s0,sp,512
     554:	0281                	addi	t0,t0,0
     556:	b609                	j	58 <_start+0x58>
     558:	0005                	c.nop	1
     55a:	5400                	lw	s0,40(s0)
     55c:	0005ee17          	auipc	t3,0x5e
     560:	0400                	addi	s0,sp,512
     562:	02a4                	addi	s1,sp,328
     564:	00087d07          	0x87d07
     568:	5800                	lw	s0,48(s0)
     56a:	6018                	flw	fa4,0(s0)
     56c:	0004                	0x4
     56e:	0400                	addi	s0,sp,512
        && (results[0].seed3 == 0))
     570:	02a8                	addi	a0,sp,328
     572:	0002b613          	sltiu	a2,t0,0
     576:	4800                	lw	s0,16(s0)
     578:	1801                	addi	a6,a6,-32
     57a:	02e9                	addi	t0,t0,26
        results[0].seed3 = 0x66;
     57c:	0000                	unimp
     57e:	a904                	fsd	fs1,16(a0)
     580:	1202                	slli	tp,tp,0x20
     582:	00000273          	0x273
     586:	014c                	addi	a1,sp,132
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     588:	d018                	sw	a4,32(s0)
     58a:	0002                	c.slli64	zero
            results[i].list = core_list_init(
     58c:	0400                	addi	s0,sp,512
     58e:	02ad                	addi	t0,t0,11
     590:	df0c                	sw	a1,56(a4)
     592:	0008                	0x8
     594:	dc00                	sw	s0,56(s0)
     596:	1802                	slli	a6,a6,0x20
     598:	00000663          	beqz	zero,5a4 <main+0x52c>
     59c:	b204                	fsd	fs1,32(a2)
     59e:	1002                	c.slli	zero,0x20
     5a0:	00000663          	beqz	zero,5ac <main+0x534>
     5a4:	02e0                	addi	s0,sp,332
     5a6:	b518                	fsd	fa4,40(a0)
     5a8:	0004                	0x4
     5aa:	0400                	addi	s0,sp,512
     5ac:	02b4                	addi	a3,sp,328
     5ae:	eb0a                	fsw	ft2,148(sp)
     5b0:	0008                	0x8
     5b2:	ec00                	fsw	fs0,24(s0)
     5b4:	0002                	c.slli64	zero
     5b6:	05bc040f          	0x5bc040f
     5ba:	0000                	unimp
     5bc:	0102                	c.slli64	sp
     5be:	cd08                	sw	a0,24(a0)
        if (results[i].execs & ID_MATRIX)
     5c0:	0005                	c.nop	1
     5c2:	1500                	addi	s0,sp,672
                                 | (((ee_s32)results[i].seed2) << 16),
     5c4:	05bc                	addi	a5,sp,712
     5c6:	0000                	unimp
     5c8:	0444040f          	0x444040f
     5cc:	0000                	unimp
     5ce:	00009713          	slli	a4,ra,0x0
            core_init_matrix(results[0].size,
     5d2:	ec00                	fsw	fs0,24(s0)
                                 | (((ee_s32)results[i].seed2) << 16),
     5d4:	0005                	c.nop	1
     5d6:	1400                	addi	s0,sp,544
     5d8:	0462                	slli	s0,s0,0x18
     5da:	0000                	unimp
                             (ee_s32)results[i].seed1
     5dc:	0514                	addi	a3,sp,640
     5de:	0001                	nop
                                 | (((ee_s32)results[i].seed2) << 16),
     5e0:	1400                	addi	s0,sp,544
     5e2:	05ec                	addi	a1,sp,716
            core_init_matrix(results[0].size,
     5e4:	0000                	unimp
     5e6:	6414                	flw	fa3,8(s0)
                             (ee_s32)results[i].seed1
     5e8:	0000                	unimp
     5ea:	0000                	unimp
            core_init_matrix(results[0].size,
     5ec:	05c3040f          	0x5c3040f
                                 | (((ee_s32)results[i].seed2) << 16),
     5f0:	0000                	unimp
     5f2:	05ce040f          	0x5ce040f
            core_init_matrix(results[0].size,
     5f6:	0000                	unimp
     5f8:	00008b13          	mv	s6,ra
     5fc:	1600                	addi	s0,sp,800
     5fe:	0006                	c.slli	zero,0x1
     600:	1400                	addi	s0,sp,544
     602:	0462                	slli	s0,s0,0x18
     604:	0000                	unimp
     606:	0514                	addi	a3,sp,640
     608:	0001                	nop
     60a:	1400                	addi	s0,sp,544
    switch (seedcrc)
     60c:	0000008b          	0x8b
     610:	6414                	flw	fa3,8(s0)
     612:	0000                	unimp
     614:	0000                	unimp
     616:	05f8040f          	0x5f8040f
     61a:	0000                	unimp
     61c:	00006413          	ori	s0,zero,0
     620:	3000                	fld	fs0,32(s0)
     622:	0006                	c.slli	zero,0x1
            ee_printf("Profile generation run parameters for coremark.\n");
     624:	1400                	addi	s0,sp,544
     626:	0462                	slli	s0,s0,0x18
     628:	0000                	unimp
     62a:	0514                	addi	a3,sp,640
     62c:	0001                	nop
     62e:	0000                	unimp
     630:	061c040f          	0x61c040f
     634:	0000                	unimp
     636:	3308                	fld	fa0,32(a4)
     638:	0000                	unimp
     63a:	4600                	lw	s0,8(a2)
     63c:	0006                	c.slli	zero,0x1
     63e:	0900                	addi	s0,sp,144
            known_id = 2;
     640:	0025                	c.nop	9
     642:	0000                	unimp
            ee_printf("Profile generation run parameters for coremark.\n");
     644:	0002                	c.slli64	zero
     646:	3308                	fld	fa0,32(a4)
     648:	0000                	unimp
     64a:	5600                	lw	s0,40(a2)
     64c:	0006                	c.slli	zero,0x1
     64e:	0900                	addi	s0,sp,144
            known_id = 2;
     650:	0025                	c.nop	9
     652:	0000                	unimp
     654:	0000                	unimp
     656:	f804                	fsw	fs1,48(s0)
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
     658:	0001                	nop
     65a:	0400                	addi	s0,sp,512
     65c:	0124                	addi	s1,sp,136
     65e:	011a                	slli	sp,sp,0x6
     660:	19000003          	lb	zero,400(zero) # 190 <main+0x118>
     664:	0648                	addi	a0,sp,772
     666:	0000                	unimp
     668:	040c                	addi	a1,sp,512
     66a:	0128                	addi	a0,sp,136
     66c:	9c08                	0x9c08
     66e:	0006                	c.slli	zero,0x1
                results[i].err++;
     670:	1700                	addi	s0,sp,928
     672:	079f 0000 2a04      	0x2a040000079f
     678:	1101                	addi	sp,sp,-32
     67a:	069c                	addi	a5,sp,832
     67c:	0000                	unimp
     67e:	1700                	addi	s0,sp,928
     680:	0578                	addi	a4,sp,652
     682:	0000                	unimp
     684:	2b04                	fld	fs1,16(a4)
     686:	0701                	addi	a4,a4,0
    switch (seedcrc)
     688:	0064                	addi	s1,sp,12
     68a:	0000                	unimp
    ee_s16       known_id = -1, total_errors = 0;
     68c:	1704                	addi	s1,sp,928
     68e:	032c                	addi	a1,sp,392
    switch (seedcrc)
     690:	0000                	unimp
     692:	2c04                	fld	fs1,24(s0)
    ee_s16       known_id = -1, total_errors = 0;
     694:	0b01                	addi	s6,s6,0
     696:	06a2                	slli	a3,a3,0x8
     698:	0000                	unimp
     69a:	0008                	0x8
    total_errors += check_data_types();
     69c:	0663040f          	0x663040f
     6a0:	0000                	unimp
     6a2:	0656040f          	0x656040f
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     6a6:	0000                	unimp
    total_errors += check_data_types();
     6a8:	8819                	andi	s0,s0,6
     6aa:	0001                	nop
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     6ac:	0e00                	addi	s0,sp,784
     6ae:	4404                	lw	s1,8(s0)
     6b0:	0801                	addi	a6,a6,0
     6b2:	06e1                	addi	a3,a3,24
     6b4:	0000                	unimp
     6b6:	00079417          	auipc	s0,0x79
     6ba:	0400                	addi	s0,sp,512
    ee_printf("Total ticks      : %d\n", (int)total_time);
     6bc:	0145                	addi	sp,sp,17
     6be:	e112                	fsw	ft4,128(sp)
     6c0:	0006                	c.slli	zero,0x1
     6c2:	0000                	unimp
     6c4:	0003b517          	auipc	a0,0x3b
     6c8:	0400                	addi	s0,sp,512
     6ca:	0146                	slli	sp,sp,0x11
     6cc:	e112                	fsw	ft4,128(sp)
     6ce:	0006                	c.slli	zero,0x1
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
     6d0:	0600                	addi	s0,sp,768
     6d2:	00061217          	auipc	tp,0x61
     6d6:	0400                	addi	s0,sp,512
     6d8:	41120147          	fmsub.s	ft2,ft4,fa7,fs0,rne
     6dc:	0000                	unimp
     6de:	0c00                	addi	s0,sp,528
     6e0:	0800                	addi	s0,sp,16
     6e2:	0041                	c.nop	16
     6e4:	0000                	unimp
     6e6:	06f1                	addi	a3,a3,28
     6e8:	0000                	unimp
     6ea:	2509                	jal	cec <core_bench_list+0x8c>
     6ec:	0000                	unimp
     6ee:	0200                	addi	s0,sp,256
     6f0:	1a00                	addi	s0,sp,304
     6f2:	04d0                	addi	a2,sp,580
    if (time_in_secs(total_time) > 0)
     6f4:	0285                	addi	t0,t0,1
     6f6:	00080607          	0x80607
     6fa:	1700                	addi	s0,sp,928
     6fc:	0742                	slli	a4,a4,0x10
     6fe:	0000                	unimp
    total_errors += check_data_types();
     700:	8704                	0x8704
     702:	1802                	slli	a6,a6,0x20
    if (time_in_secs(total_time) > 0)
     704:	0025                	c.nop	9
     706:	0000                	unimp
     708:	1700                	addi	s0,sp,928
     70a:	0000066b          	0x66b
    total_errors += check_data_types();
     70e:	8804                	0x8804
    if (time_in_secs(total_time) > 0)
     710:	1202                	slli	tp,tp,0x20
     712:	05b6                	slli	a1,a1,0xd
     714:	0000                	unimp
     716:	1704                	addi	s1,sp,928
     718:	01b1                	addi	gp,gp,12
     71a:	0000                	unimp
                  default_num_contexts * results[0].iterations
     71c:	8904                	0x8904
     71e:	1002                	c.slli	zero,0x20
        ee_printf("Iterations/Sec   : %lf\n",
     720:	0806                	slli	a6,a6,0x1
     722:	0000                	unimp
     724:	1708                	addi	a0,sp,928
     726:	050e                	slli	a0,a0,0x3
     728:	0000                	unimp
     72a:	8a04                	0x8a04
     72c:	1702                	slli	a4,a4,0x20
     72e:	0000019b          	0x19b
     732:	1724                	addi	s1,sp,936
                      / time_in_secs(total_time));
     734:	036d                	addi	t1,t1,27
     736:	0000                	unimp
        ee_printf("Iterations/Sec   : %lf\n",
     738:	8b04                	0x8b04
     73a:	0f02                	c.slli64	t5
                      / time_in_secs(total_time));
     73c:	0064                	addi	s1,sp,12
     73e:	0000                	unimp
     740:	1748                	addi	a0,sp,932
     742:	079a                	slli	a5,a5,0x6
        ee_printf("Iterations/Sec   : %lf\n",
     744:	0000                	unimp
     746:	8c04                	0x8c04
     748:	2c02                	fld	fs8,0(sp)
     74a:	005d                	c.nop	23
     74c:	0000                	unimp
     74e:	1750                	addi	a2,sp,932
     750:	005e                	c.slli	zero,0x17
     752:	0000                	unimp
     754:	8d04                	0x8d04
     756:	1a02                	slli	s4,s4,0x20
     758:	06a8                	addi	a0,sp,840
     75a:	0000                	unimp
     75c:	1758                	addi	a4,sp,932
     75e:	02b9                	addi	t0,t0,14
     760:	0000                	unimp
     762:	8e04                	0x8e04
     764:	1602                	slli	a2,a2,0x20
     766:	00f9                	addi	ra,ra,30
     768:	0000                	unimp
     76a:	1768                	addi	a0,sp,940
     76c:	0678                	addi	a4,sp,780
     76e:	0000                	unimp
     770:	8f04                	0x8f04
     772:	1602                	slli	a2,a2,0x20
    if (time_in_secs(total_time) < 10)
     774:	00f9                	addi	ra,ra,30
     776:	0000                	unimp
     778:	1770                	addi	a2,sp,940
     77a:	0041                	c.nop	16
     77c:	0000                	unimp
     77e:	9004                	0x9004
     780:	1602                	slli	a2,a2,0x20
     782:	00f9                	addi	ra,ra,30
     784:	0000                	unimp
     786:	1778                	addi	a4,sp,940
     788:	054a                	slli	a0,a0,0x12
     78a:	0000                	unimp
     78c:	9104                	0x9104
     78e:	1002                	c.slli	zero,0x20
     790:	0816                	slli	a6,a6,0x5
     792:	0000                	unimp
     794:	1780                	addi	s0,sp,992
     796:	00000063          	beqz	zero,796 <main+0x71e>
    ee_printf("Iterations       : %lu\n",
     79a:	9204                	0x9204
     79c:	1002                	c.slli	zero,0x20
     79e:	0826                	slli	a6,a6,0x9
     7a0:	0000                	unimp
     7a2:	1788                	addi	a0,sp,992
     7a4:	000005f3          	0x5f3
     7a8:	9304                	0x9304
     7aa:	0f02                	c.slli64	t5
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     7ac:	0064                	addi	s1,sp,12
     7ae:	0000                	unimp
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     7b0:	17a0                	addi	s0,sp,1000
     7b2:	00c8                	addi	a0,sp,68
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     7b4:	0000                	unimp
     7b6:	9404                	0x9404
        total_errors++;
     7b8:	1602                	slli	a2,a2,0x20
     7ba:	00f9                	addi	ra,ra,30
     7bc:	0000                	unimp
     7be:	17a4                	addi	s1,sp,1000
    ee_printf("Iterations       : %lu\n",
     7c0:	02da                	slli	t0,t0,0x16
     7c2:	0000                	unimp
     7c4:	9504                	0x9504
     7c6:	1602                	slli	a2,a2,0x20
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     7c8:	00f9                	addi	ra,ra,30
     7ca:	0000                	unimp
     7cc:	17ac                	addi	a1,sp,1000
     7ce:	024a                	slli	tp,tp,0x12
     7d0:	0000                	unimp
     7d2:	9604                	0x9604
     7d4:	1602                	slli	a2,a2,0x20
     7d6:	00f9                	addi	ra,ra,30
     7d8:	0000                	unimp
     7da:	17b4                	addi	a3,sp,1000
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     7dc:	03ca                	slli	t2,t2,0x12
     7de:	0000                	unimp
     7e0:	9704                	0x9704
     7e2:	1602                	slli	a2,a2,0x20
     7e4:	00f9                	addi	ra,ra,30
     7e6:	0000                	unimp
     7e8:	17bc                	addi	a5,sp,1000
     7ea:	02a8                	addi	a0,sp,328
     7ec:	0000                	unimp
     7ee:	9804                	0x9804
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     7f0:	1602                	slli	a2,a2,0x20
     7f2:	00f9                	addi	ra,ra,30
     7f4:	0000                	unimp
     7f6:	17c4                	addi	s1,sp,996
     7f8:	0000042b          	0x42b
     7fc:	9904                	0x9904
     7fe:	0802                	c.slli64	a6
     800:	0064                	addi	s1,sp,12
     802:	0000                	unimp
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
     804:	00cc                	addi	a1,sp,68
     806:	bc08                	fsd	fa0,56(s0)
     808:	0005                	c.nop	1
     80a:	1600                	addi	s0,sp,800
     80c:	0008                	0x8
     80e:	0900                	addi	s0,sp,144
     810:	0025                	c.nop	9
     812:	0000                	unimp
     814:	0019                	c.nop	6
     816:	bc08                	fsd	fa0,56(s0)
    if (results[0].execs & ID_LIST)
     818:	0005                	c.nop	1
     81a:	2600                	fld	fs0,8(a2)
     81c:	0008                	0x8
     81e:	0900                	addi	s0,sp,144
     820:	0025                	c.nop	9
     822:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     824:	bc080007          	0xbc080007
     828:	0005                	c.nop	1
     82a:	3600                	fld	fs0,40(a2)
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     82c:	0008                	0x8
     82e:	0900                	addi	s0,sp,144
     830:	0025                	c.nop	9
     832:	0000                	unimp
     834:	f01a0017          	auipc	zero,0xf01a0
     838:	9e04                	0x9e04
     83a:	0702                	c.slli64	a4
     83c:	085d                	addi	a6,a6,23
     83e:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     840:	00018117          	auipc	sp,0x18
     844:	0400                	addi	s0,sp,512
     846:	02a1                	addi	t0,t0,8
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     848:	00085d1b          	0x85d1b
     84c:	0000                	unimp
     84e:	0007d717          	auipc	a4,0x7d
     852:	0400                	addi	s0,sp,512
     854:	02a2                	slli	t0,t0,0x8
     856:	6d18                	flw	fa4,24(a0)
     858:	0008                	0x8
     85a:	7800                	flw	fs0,48(s0)
     85c:	0800                	addi	s0,sp,16
     85e:	000002fb          	0x2fb
     862:	086d                	addi	a6,a6,27
     864:	0000                	unimp
     866:	2509                	jal	e68 <core_bench_list+0x208>
     868:	0000                	unimp
     86a:	1d00                	addi	s0,sp,688
     86c:	0800                	addi	s0,sp,16
     86e:	0025                	c.nop	9
     870:	0000                	unimp
     872:	087d                	addi	a6,a6,31
     874:	0000                	unimp
     876:	2509                	jal	e78 <core_bench_list+0x218>
     878:	0000                	unimp
     87a:	1d00                	addi	s0,sp,688
        for (i = 0; i < default_num_contexts; i++)
     87c:	1b00                	addi	s0,sp,432
     87e:	04f0                	addi	a2,sp,588
     880:	a2030283          	lb	t0,-1504(t1) # 75ef0 <_data_lma+0x6b8d8>
     884:	0008                	0x8
     886:	1c00                	addi	s0,sp,560
     888:	0705                	addi	a4,a4,1
     88a:	0000                	unimp
     88c:	9a04                	0x9a04
     88e:	0b02                	c.slli64	s6
     890:	06f1                	addi	a3,a3,28
     892:	0000                	unimp
    if (results[0].execs & ID_MATRIX)
     894:	1d1c                	addi	a5,sp,688
     896:	0005                	c.nop	1
     898:	0400                	addi	s0,sp,512
     89a:	360b02a3          	sb	zero,869(s6) # 3a897 <_data_lma+0x3027f>
        for (i = 0; i < default_num_contexts; i++)
     89e:	0008                	0x8
     8a0:	0000                	unimp
     8a2:	bc08                	fsd	fa0,56(s0)
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     8a4:	0005                	c.nop	1
     8a6:	b200                	fsd	fs0,32(a2)
     8a8:	0008                	0x8
     8aa:	0900                	addi	s0,sp,144
     8ac:	0025                	c.nop	9
     8ae:	0000                	unimp
     8b0:	0018                	0x18
     8b2:	a51d                	j	ed8 <core_bench_list+0x278>
     8b4:	0f000007          	0xf000007
        for (i = 0; i < default_num_contexts; i++)
     8b8:	b204                	fsd	fs1,32(a2)
     8ba:	0008                	0x8
     8bc:	1e00                	addi	s0,sp,816
     8be:	08c8                	addi	a0,sp,84
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     8c0:	0000                	unimp
     8c2:	6214                	flw	fa3,0(a2)
     8c4:	0004                	0x4
     8c6:	0000                	unimp
     8c8:	08bd040f          	0x8bd040f
     8cc:	0000                	unimp
     8ce:	0185040f          	0x185040f
     8d2:	0000                	unimp
     8d4:	df1e                	sw	t2,188(sp)
     8d6:	0008                	0x8
     8d8:	1400                	addi	s0,sp,544
     8da:	0064                	addi	s1,sp,12
     8dc:	0000                	unimp
     8de:	0f00                	addi	s0,sp,912
     8e0:	e504                	fsw	fs1,8(a0)
     8e2:	0008                	0x8
     8e4:	0f00                	addi	s0,sp,912
     8e6:	d404                	sw	s1,40(s0)
     8e8:	0008                	0x8
     8ea:	0800                	addi	s0,sp,16
     8ec:	0656                	slli	a2,a2,0x15
     8ee:	0000                	unimp
     8f0:	000008fb          	0x8fb
        for (i = 0; i < default_num_contexts; i++)
     8f4:	2509                	jal	ef6 <core_bench_list+0x296>
     8f6:	0000                	unimp
     8f8:	0200                	addi	s0,sp,256
     8fa:	1f00                	addi	s0,sp,944
     8fc:	000004eb          	0x4eb
     900:	3304                	fld	fs1,32(a4)
     902:	04621703          	lh	a4,70(tp) # 61718 <_data_lma+0x57100>
     906:	0000                	unimp
     908:	e41f 0004 0400      	0x4000004e41f
    if (results[0].execs & ID_STATE)
     90e:	0334                	addi	a3,sp,392
     910:	681d                	lui	a6,0x7
     912:	0004                	0x4
        for (i = 0; i < default_num_contexts; i++)
     914:	2000                	fld	fs0,0(s0)
     916:	034a                	slli	t1,t1,0x12
     918:	0000                	unimp
     91a:	9a06                	add	s4,s4,ra
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     91c:	4816                	lw	a6,68(sp)
     91e:	0000                	unimp
     920:	2000                	fld	fs0,0(s0)
     922:	00000037          	lui	zero,0x0
     926:	9b06                	add	s6,s6,ra
     928:	6415                	lui	s0,0x5
     92a:	0000                	unimp
     92c:	0800                	addi	s0,sp,16
     92e:	05b6                	slli	a1,a1,0xd
        for (i = 0; i < default_num_contexts; i++)
     930:	0000                	unimp
     932:	093d                	addi	s2,s2,15
     934:	0000                	unimp
     936:	2509                	jal	f38 <core_bench_list+0x2d8>
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     938:	0000                	unimp
     93a:	0100                	addi	s0,sp,128
     93c:	2000                	fld	fs0,0(s0)
     93e:	028e                	slli	t0,t0,0x3
     940:	0000                	unimp
     942:	9e06                	add	t3,t3,ra
     944:	00092d17          	auipc	s10,0x92
     948:	0500                	addi	s0,sp,640
     94a:	008d                	addi	ra,ra,3
     94c:	0000                	unimp
     94e:	3a185e07          	0x3a185e07
     952:	0000                	unimp
     954:	0500                	addi	s0,sp,640
     956:	065c                	addi	a5,sp,772
     958:	0000                	unimp
     95a:	41185f07          	0x41185f07
     95e:	0000                	unimp
     960:	0500                	addi	s0,sp,640
     962:	0000074f          	fnmadd.s	fa4,ft0,ft0,ft0,rne
     966:	64186007          	0x64186007
     96a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     96c:	0200                	addi	s0,sp,256
     96e:	0408                	addi	a0,sp,512
     970:	0442                	slli	s0,s0,0x10
     972:	0000                	unimp
     974:	f205                	bnez	a2,894 <main+0x81c>
     976:	0002                	c.slli64	zero
     978:	0700                	addi	s0,sp,896
     97a:	1862                	slli	a6,a6,0x38
     97c:	00000033          	add	zero,zero,zero
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     980:	1705                	addi	a4,a4,-31
     982:	0000                	unimp
    for (i = 0; i < default_num_contexts; i++)
     984:	0700                	addi	s0,sp,896
     986:	00251863          	bne	a0,sp,996 <main+0x91e>
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     98a:	0000                	unimp
     98c:	1720                	addi	s0,sp,936
     98e:	0006                	c.slli	zero,0x1
     990:	0700                	addi	s0,sp,896
     992:	0fba                	slli	t6,t6,0xe
    for (i = 0; i < default_num_contexts; i++)
     994:	0980                	addi	s0,sp,208
     996:	0000                	unimp
     998:	bf0d                	j	8ca <main+0x852>
     99a:	01000007          	0x1000007
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     99e:	b310bc07          	fld	fs8,-1231(ra) # 3b31 <__divdf3+0x6f5>
     9a2:	0009                	c.nop	2
    for (i = 0; i < default_num_contexts; i++)
     9a4:	0b00                	addi	s0,sp,400
     9a6:	01ec                	addi	a1,sp,204
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     9a8:	0000                	unimp
     9aa:	740bbe07          	fld	ft8,1856(s7) # 1d740 <_data_lma+0x13128>
     9ae:	0009                	c.nop	2
     9b0:	0000                	unimp
     9b2:	0500                	addi	s0,sp,640
     9b4:	064e                	slli	a2,a2,0x13
     9b6:	0000                	unimp
     9b8:	9803bf07          	fld	ft10,-1664(t2)
     9bc:	0009                	c.nop	2
     9be:	0d00                	addi	s0,sp,656
     9c0:	000003fb          	0x3fb
     9c4:	0804                	addi	s1,sp,16
     9c6:	09e71043          	fmadd.s	ft0,fa4,ft10,ft1,rtz
     9ca:	0000                	unimp
     9cc:	00071f0b          	0x71f0b
    for (i = 0; i < default_num_contexts; i++)
     9d0:	0800                	addi	s0,sp,16
     9d2:	0c45                	addi	s8,s8,17
     9d4:	0949                	addi	s2,s2,18
     9d6:	0000                	unimp
     9d8:	0e00                	addi	s0,sp,784
     9da:	6469                	lui	s0,0x1a
     9dc:	0078                	addi	a4,sp,12
     9de:	4608                	lw	a0,8(a2)
     9e0:	490c                	lw	a1,16(a0)
     9e2:	0009                	c.nop	2
    if (total_errors == 0)
     9e4:	0200                	addi	s0,sp,256
     9e6:	0500                	addi	s0,sp,640
    if (total_errors > 0)
     9e8:	016e                	slli	sp,sp,0x1b
     9ea:	0000                	unimp
        ee_printf("Errors detected\n");
     9ec:	4708                	lw	a0,8(a4)
     9ee:	0009bf03          	0x9bf03
     9f2:	0d00                	addi	s0,sp,656
     9f4:	05d2                	slli	a1,a1,0x14
     9f6:	0000                	unimp
     9f8:	0808                	addi	a0,sp,16
     9fa:	1049                	c.nop	-14
    portable_fini(&(results[0].port));
     9fc:	00000a1b          	0xa1b
     a00:	0007a00b          	0x7a00b
     a04:	0800                	addi	s0,sp,16
     a06:	0a1b194b          	fnmsub.d	fs2,fs6,ft1,ft1,rtz
}
     a0a:	0000                	unimp
     a0c:	0b00                	addi	s0,sp,400
     a0e:	00000777          	0x777
     a12:	4c08                	lw	a0,24(s0)
     a14:	2119                	jal	e1a <core_bench_list+0x1ba>
     a16:	000a                	c.slli	zero,0x2
     a18:	0400                	addi	s0,sp,512
     a1a:	0f00                	addi	s0,sp,912
     a1c:	f304                	fsw	fs1,32(a4)
     a1e:	0009                	c.nop	2
     a20:	0f00                	addi	s0,sp,912
     a22:	bf04                	fsd	fs1,56(a4)
     a24:	0009                	c.nop	2
     a26:	0500                	addi	s0,sp,640
     a28:	062c                	addi	a1,sp,776
     a2a:	0000                	unimp
     a2c:	4d08                	lw	a0,24(a0)
     a2e:	0009f303          	0x9f303
     a32:	0500                	addi	s0,sp,640
     a34:	000001cb          	fnmsub.s	ft3,ft0,ft0,ft0,rne
     a38:	5208                	lw	a0,32(a2)
     a3a:	4910                	lw	a2,16(a0)
     a3c:	0009                	c.nop	2
     a3e:	0500                	addi	s0,sp,640
     a40:	0000006f          	j	a40 <main+0x9c8>
     a44:	5308                	lw	a0,32(a4)
     a46:	6110                	flw	fa2,0(a0)
     a48:	0009                	c.nop	2
     a4a:	0d00                	addi	s0,sp,656
        results[0].execs = ALL_ALGORITHMS_MASK;
     a4c:	0094                	addi	a3,sp,64
     a4e:	0000                	unimp
     a50:	0810                	addi	a2,sp,16
     a52:	1059                	c.nop	-10
     a54:	0a85                	addi	s5,s5,1
     a56:	0000                	unimp
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a58:	4e0e                	lw	t3,192(sp)
     a5a:	0800                	addi	s0,sp,16
     a5c:	00640d5b          	0x640d5b
     a60:	0000                	unimp
     a62:	0e00                	addi	s0,sp,784
     a64:	0041                	c.nop	16
     a66:	5c08                	lw	a0,56(s0)
     a68:	850d                	srai	a0,a0,0x3
     a6a:	000a                	c.slli	zero,0x2
     a6c:	0400                	addi	s0,sp,512
     a6e:	420e                	lw	tp,192(sp)
     a70:	0800                	addi	s0,sp,16
     a72:	0d5d                	addi	s10,s10,23
            j++;
     a74:	0a85                	addi	s5,s5,1
     a76:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     a78:	0e08                	addi	a0,sp,784
     a7a:	5e080043          	fmadd.q	ft0,fa6,ft0,fa1,rne
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a7e:	8b0d                	andi	a4,a4,3
     a80:	000a                	c.slli	zero,0x2
     a82:	0c00                	addi	s0,sp,528
     a84:	0f00                	addi	s0,sp,912
     a86:	3304                	fld	fs1,32(a4)
            j++;
     a88:	000a                	c.slli	zero,0x2
     a8a:	0f00                	addi	s0,sp,912
     a8c:	3f04                	fld	fs1,56(a4)
     a8e:	000a                	c.slli	zero,0x2
     a90:	0500                	addi	s0,sp,640
     a92:	0000035b          	0x35b
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a96:	5f08                	lw	a0,56(a4)
     a98:	000a4b03          	lbu	s6,0(s4) # 53540 <_data_lma+0x48f28>
     a9c:	0d00                	addi	s0,sp,656
     a9e:	0456                	slli	s0,s0,0x15
     aa0:	0000                	unimp
     aa2:	0844                	addi	s1,sp,20
     aa4:	1071                	c.nop	-4
     aa6:	0b6e                	slli	s6,s6,0x1b
     aa8:	0000                	unimp
     aaa:	0004c00b          	0x4c00b
     aae:	0800                	addi	s0,sp,16
        if ((1 << (ee_u32)i) & results[0].execs)
     ab0:	1974                	addi	a3,sp,188
     ab2:	0949                	addi	s2,s2,18
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     ab4:	0000                	unimp
     ab6:	0b00                	addi	s0,sp,400
     ab8:	04c6                	slli	s1,s1,0x11
     aba:	0000                	unimp
     abc:	7508                	flw	fa0,40(a0)
     abe:	4919                	li	s2,6
     ac0:	0009                	c.nop	2
     ac2:	0200                	addi	s0,sp,256
        if (results[i].execs & ID_LIST)
     ac4:	0004cc0b          	0x4cc0b
     ac8:	0800                	addi	s0,sp,16
     aca:	1976                	slli	s2,s2,0x3d
        ee_printf(
     acc:	0949                	addi	s2,s2,18
     ace:	0000                	unimp
     ad0:	0b04                	addi	s1,sp,400
     ad2:	0931                	addi	s2,s2,12
     ad4:	0000                	unimp
     ad6:	7708                	flw	fa0,40(a4)
     ad8:	6e19                	lui	t3,0x6
     ada:	0800000b          	0x800000b
     ade:	0007300b          	0x7300b
            res->crclist = res->crc;
     ae2:	0800                	addi	s0,sp,16
    for (i = 0; i < iterations; i++)
     ae4:	1978                	addi	a4,sp,188
     ae6:	0980                	addi	s0,sp,208
     ae8:	0000                	unimp
     aea:	0b18                	addi	a4,sp,400
     aec:	063d                	addi	a2,a2,15
     aee:	0000                	unimp
     af0:	7908                	flw	fa0,48(a0)
     af2:	8019                	srli	s0,s0,0x6
        ee_printf(
     af4:	0009                	c.nop	2
     af6:	1c00                	addi	s0,sp,560
     af8:	0004500b          	0x4500b
     afc:	0800                	addi	s0,sp,16
     afe:	197a                	slli	s2,s2,0x3e
     b00:	0980                	addi	s0,sp,208
     b02:	0000                	unimp
        if (known_id == 3)
     b04:	0b20                	addi	s0,sp,408
     b06:	01dd                	addi	gp,gp,23
     b08:	0000                	unimp
     b0a:	7b08                	flw	fa0,48(a4)
     b0c:	1b19                	addi	s6,s6,-26
     b0e:	000a                	c.slli	zero,0x2
                      default_num_contexts * results[0].iterations
     b10:	2400                	fld	fs0,8(s0)
     b12:	6d0e                	flw	fs10,192(sp)
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b14:	7461                	lui	s0,0xffff8
     b16:	0800                	addi	s0,sp,16
     b18:	197c                	addi	a5,sp,188
     b1a:	0a91                	addi	s5,s5,4
     b1c:	0000                	unimp
     b1e:	0e28                	addi	a0,sp,792
     b20:	00637263          	bgeu	t1,t1,b24 <main+0xaac>
     b24:	7e08                	flw	fa0,56(a2)
     b26:	550c                	lw	a1,40(a0)
                          / time_in_secs(total_time),
     b28:	0009                	c.nop	2
     b2a:	3800                	fld	fs0,48(s0)
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b2c:	0005930b          	0x5930b
                          / time_in_secs(total_time),
     b30:	0800                	addi	s0,sp,16
     b32:	0c7f                	0xc7f
     b34:	0955                	addi	s2,s2,21
     b36:	0000                	unimp
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b38:	0b3a                	slli	s6,s6,0xe
     b3a:	000004ab          	0x4ab
     b3e:	8008                	0x8008
     b40:	550c                	lw	a1,40(a0)
     b42:	0009                	c.nop	2
     b44:	3c00                	fld	fs0,56(s0)
     b46:	0007b60b          	0x7b60b
     b4a:	0800                	addi	s0,sp,16
     b4c:	0c81                	addi	s9,s9,0
     b4e:	0955                	addi	s2,s2,21
     b50:	0000                	unimp
     b52:	0e3e                	slli	t3,t3,0xf
     b54:	7265                	lui	tp,0xffff9
     b56:	0072                	c.slli	zero,0x1c
     b58:	8208                	0x8208
     b5a:	490c                	lw	a1,16(a0)
     b5c:	0009                	c.nop	2
     b5e:	4000                	lw	s0,0(s0)
     b60:	0002a30b          	0x2a30b
     b64:	0800                	addi	s0,sp,16
     b66:	1384                	addi	s1,sp,480
     b68:	000009b3          	add	s3,zero,zero
     b6c:	0042                	c.slli	zero,0x10
     b6e:	0508                	addi	a0,sp,640
            ee_printf(" / %s", MEM_LOCATION);
     b70:	0001                	nop
     b72:	7e00                	flw	fs0,56(a2)
     b74:	0900000b          	0x900000b
     b78:	0025                	c.nop	9
     b7a:	0000                	unimp
     b7c:	05050003          	lb	zero,80(a0) # 3b714 <_data_lma+0x310fc>
     b80:	0006                	c.slli	zero,0x1
     b82:	0800                	addi	s0,sp,16
            ee_printf("\n");
     b84:	0385                	addi	t2,t2,1
     b86:	0a9d                	addi	s5,s5,7
     b88:	0000                	unimp
     b8a:	2505                	jal	11aa <__stack_size+0x1aa>
     b8c:	0005                	c.nop	1
     b8e:	0100                	addi	s0,sp,128
     b90:	1240                	addi	s0,sp,292
     b92:	0b96                	slli	s7,s7,0x5
        ee_printf(
     b94:	0000                	unimp
     b96:	0b9c040f          	0xb9c040f
     b9a:	0000                	unimp
     b9c:	00096113          	ori	sp,s2,0
     ba0:	b500                	fsd	fs0,40(a0)
     ba2:	1400000b          	0x1400000b
        total_errors++;
     ba6:	0bb5                	addi	s7,s7,13
     ba8:	0000                	unimp
     baa:	b514                	fsd	fa3,40(a0)
    if (results[0].execs & ID_STATE)
     bac:	1400000b          	0x1400000b
     bb0:	00000bbb          	0xbbb
     bb4:	0f00                	addi	s0,sp,912
     bb6:	e704                	fsw	fs1,8(a4)
            ee_printf("6k validation run parameters for coremark.\n");
     bb8:	0009                	c.nop	2
     bba:	0f00                	addi	s0,sp,912
     bbc:	7e04                	flw	fs1,56(a2)
     bbe:	2100000b          	0x2100000b
     bc2:	0391                	addi	t2,t2,4
     bc4:	0000                	unimp
     bc6:	f401                	bnez	s0,ace <main+0xa56>
     bc8:	0101                	addi	sp,sp,0
     bca:	0c68                	addi	a0,sp,540
     bcc:	0000                	unimp
     bce:	6801                	0x6801
     bd0:	000c                	0xc
     bd2:	2200                	fld	fs0,0(a2)
     bd4:	01dd                	addi	gp,gp,23
     bd6:	0000                	unimp
            known_id = 1;
     bd8:	f401                	bnez	s0,ae0 <main+0xa68>
     bda:	2001                	jal	bda <main+0xb62>
            ee_printf("6k validation run parameters for coremark.\n");
     bdc:	0c68                	addi	a0,sp,540
     bde:	0000                	unimp
     be0:	706d6323          	0x706d6323
     be4:	0100                	addi	s0,sp,128
     be6:	01f4                	addi	a3,sp,204
            known_id = 1;
     be8:	000b8a2f          	0xb8a2f
     bec:	2300                	fld	fs0,0(a4)
     bee:	6572                	flw	fa0,28(sp)
            ee_printf("6k performance run parameters for coremark.\n");
     bf0:	f4010073          	0xf4010073
     bf4:	4201                	li	tp,0
     bf6:	00000bbb          	0xbbb
     bfa:	7024                	flw	fs1,96(s0)
     bfc:	0100                	addi	s0,sp,128
     bfe:	01f6                	slli	gp,gp,0x1d
     c00:	6810                	flw	fa2,16(s0)
     c02:	000c                	0xc
     c04:	2400                	fld	fs0,8(s0)
     c06:	0071                	c.nop	28
     c08:	f601                	bnez	a2,b10 <main+0xa98>
     c0a:	1401                	addi	s0,s0,-32
     c0c:	0c68                	addi	a0,sp,540
     c0e:	0000                	unimp
     c10:	6524                	flw	fs1,72(a0)
     c12:	0100                	addi	s0,sp,128
     c14:	01f6                	slli	gp,gp,0x1d
     c16:	6818                	flw	fa4,16(s0)
     c18:	000c                	0xc
     c1a:	2500                	fld	fs0,8(a0)
            known_id = 0;
     c1c:	0600                	addi	s0,sp,768
     c1e:	0000                	unimp
     c20:	f601                	bnez	a2,b28 <main+0xab0>
     c22:	1c01                	addi	s8,s8,-32
            ee_printf("2K validation run parameters for coremark.\n");
     c24:	0c68                	addi	a0,sp,540
     c26:	0000                	unimp
     c28:	b525                	j	a50 <main+0x9d8>
     c2a:	0005                	c.nop	1
     c2c:	0100                	addi	s0,sp,128
     c2e:	611001f7          	0x611001f7
     c32:	0009                	c.nop	2
     c34:	2500                	fld	fs0,8(a0)
     c36:	078c                	addi	a1,sp,960
     c38:	0000                	unimp
     c3a:	f701                	bnez	a4,b42 <main+0xaca>
            known_id = 4;
     c3c:	1801                	addi	a6,a6,-32
     c3e:	0961                	addi	s2,s2,24
            ee_printf("2K validation run parameters for coremark.\n");
     c40:	0000                	unimp
     c42:	1125                	addi	sp,sp,-23
     c44:	0000                	unimp
     c46:	0100                	addi	s0,sp,128
     c48:	612101f7          	0x612101f7
     c4c:	0009                	c.nop	2
     c4e:	2500                	fld	fs0,8(a0)
            known_id = 4;
     c50:	0160                	addi	s0,sp,140
     c52:	0000                	unimp
     c54:	f701                	bnez	a4,b5c <main+0xae4>
     c56:	2801                	jal	c66 <core_bench_list+0x6>
        for (i = 0; i < default_num_contexts; i++)
     c58:	0961                	addi	s2,s2,24
     c5a:	0000                	unimp
     c5c:	6924                	flw	fs1,80(a0)
     c5e:	0100                	addi	s0,sp,128
    ee_s16     find_num = res->seed3;
     c60:	612f01f7          	0x612f01f7
{
     c64:	0009                	c.nop	2
     c66:	0000                	unimp
     c68:	0a27040f          	0xa27040f
     c6c:	0000                	unimp
     c6e:	3c21                	jal	686 <main+0x60e>
     c70:	0001                	nop
     c72:	0100                	addi	s0,sp,128
     c74:	01d1                	addi	gp,gp,20
     c76:	6801                	0x6801
     c78:	000c                	0xc
     c7a:	0100                	addi	s0,sp,128
     c7c:	0ca8                	addi	a0,sp,600
     c7e:	0000                	unimp
     c80:	dd22                	sw	s0,184(sp)
     c82:	0001                	nop
     c84:	0100                	addi	s0,sp,128
     c86:	01d1                	addi	gp,gp,20
     c88:	681e                	flw	fa6,196(sp)
     c8a:	000c                	0xc
     c8c:	2500                	fld	fs0,8(a0)
     c8e:	07a0                	addi	s0,sp,968
     c90:	0000                	unimp
     c92:	d301                	beqz	a4,b92 <main+0xb1a>
     c94:	1001                	c.nop	-32
     c96:	0c68                	addi	a0,sp,540
     c98:	0000                	unimp
     c9a:	7424                	flw	fs1,104(s0)
     c9c:	706d                	c.lui	zero,0xffffb
     c9e:	0100                	addi	s0,sp,128
     ca0:	681e01d3          	0x681e01d3
    list_head *list     = res->list;
     ca4:	000c                	0xc
     ca6:	0000                	unimp
    for (i = 0; i < find_num; i++)
     ca8:	1721                	addi	a4,a4,-24
     caa:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
    info.idx = finder_idx;
     cae:	680101b3          	0x680101b3
    for (i = 0; i < find_num; i++)
     cb2:	000c                	0xc
    ee_u16     found = 0, missed = 0;
     cb4:	0100                	addi	s0,sp,128
     cb6:	0cd5                	addi	s9,s9,21
     cb8:	0000                	unimp
     cba:	dd22                	sw	s0,184(sp)
    ee_u16     retval = 0;
     cbc:	0001                	nop
     cbe:	0100                	addi	s0,sp,128
    if (info->idx >= 0)
     cc0:	681b01b3          	0x681b01b3
        info.data16 = (i & 0xff);
     cc4:	000c                	0xc
     cc6:	2200                	fld	fs0,0(a2)
     cc8:	00000777          	0x777
    if (info->idx >= 0)
     ccc:	b301                	j	9cc <main+0x954>
     cce:	2c01                	jal	ede <core_bench_list+0x27e>
        while (list && (list->info->idx != info->idx))
     cd0:	0bb5                	addi	s7,s7,13
     cd2:	0000                	unimp
     cd4:	2100                	fld	fs0,0(a0)
     cd6:	02f8                	addi	a4,sp,332
     cd8:	0000                	unimp
     cda:	9801                	andi	s0,s0,-32
     cdc:	0101                	addi	sp,sp,0
     cde:	0c68                	addi	a0,sp,540
     ce0:	0000                	unimp
     ce2:	0f01                	addi	t5,t5,0
     ce4:	000d                	c.nop	3
     ce6:	2200                	fld	fs0,0(a2)
     ce8:	0756                	slli	a4,a4,0x15
     cea:	0000                	unimp
     cec:	9801                	andi	s0,s0,-32
     cee:	2201                	jal	dee <core_bench_list+0x18e>
     cf0:	0c68                	addi	a0,sp,540
     cf2:	0000                	unimp
     cf4:	1c22                	slli	s8,s8,0x28
     cf6:	0001                	nop
     cf8:	0100                	addi	s0,sp,128
     cfa:	0198                	addi	a4,sp,192
            list = list->next;
     cfc:	000c683b          	0xc683b
        while (list && (list->info->idx != info->idx))
     d00:	2400                	fld	fs0,8(s0)
     d02:	6d74                	flw	fa3,92(a0)
     d04:	0070                	addi	a2,sp,12
     d06:	9a01                	andi	a2,a2,-32
     d08:	1001                	c.nop	-32
     d0a:	0bb5                	addi	s7,s7,13
    while (list)
     d0c:	0000                	unimp
     d0e:	2100                	fld	fs0,0(a0)
     d10:	00f8                	addi	a4,sp,76
     d12:	0000                	unimp
        tmp        = list->next;
     d14:	7901                	lui	s2,0xfffe0
     d16:	0101                	addi	sp,sp,0
        list->next = next;
     d18:	0c68                	addi	a0,sp,540
     d1a:	0000                	unimp
    while (list)
     d1c:	4901                	li	s2,0
     d1e:	000d                	c.nop	3
        if (this_find == NULL)
     d20:	2200                	fld	fs0,0(a2)
     d22:	0475                	addi	s0,s0,29
            if (this_find->info->data16 & 0x1) /* use found value */
     d24:	0000                	unimp
     d26:	7901                	lui	s2,0xfffe0
            found++;
     d28:	1d01                	addi	s10,s10,-32
     d2a:	0c68                	addi	a0,sp,540
     d2c:	0000                	unimp
     d2e:	7424                	flw	fs1,104(s0)
            if (this_find->info->data16 & 0x1) /* use found value */
     d30:	706d                	c.lui	zero,0xffffb
     d32:	0100                	addi	s0,sp,128
            found++;
     d34:	b510017b          	0xb510017b
            if (this_find->info->data16 & 0x1) /* use found value */
     d38:	2400000b          	0x2400000b
     d3c:	6572                	flw	fa0,28(sp)
     d3e:	0074                	addi	a3,sp,12
                retval += (this_find->info->data16 >> 9) & 1;
     d40:	7c01                	lui	s8,0xfffe0
     d42:	1001                	c.nop	-32
     d44:	0c68                	addi	a0,sp,540
     d46:	0000                	unimp
     d48:	2100                	fld	fs0,0(a0)
     d4a:	05de                	slli	a1,a1,0x17
     d4c:	0000                	unimp
     d4e:	5001                	c.li	zero,-32
     d50:	0101                	addi	sp,sp,0
     d52:	0c68                	addi	a0,sp,540
            if (this_find->next != NULL)
     d54:	0000                	unimp
     d56:	b701                	j	c56 <main+0xbde>
     d58:	000d                	c.nop	3
     d5a:	2200                	fld	fs0,0(a2)
                this_find->next = finder->next;
     d5c:	0501                	addi	a0,a0,0
     d5e:	0000                	unimp
     d60:	5001                	c.li	zero,-32
     d62:	2201                	jal	e62 <core_bench_list+0x202>
                finder->next    = list->next;
     d64:	0c68                	addi	a0,sp,540
     d66:	0000                	unimp
     d68:	7722                	flw	fa4,40(sp)
     d6a:	01000007          	0x1000007
                list->next      = finder;
     d6e:	0151                	addi	sp,sp,20
        if (info.idx >= 0)
     d70:	b522                	fsd	fs0,168(sp)
     d72:	2200000b          	0x2200000b
     d76:	0931                	addi	s2,s2,12
            info.idx++;
     d78:	0000                	unimp
     d7a:	5201                	li	tp,-32
     d7c:	2201                	jal	e7c <core_bench_list+0x21c>
     d7e:	00000db7          	lui	s11,0x0
     d82:	a622                	fsd	fs0,264(sp)
     d84:	0000                	unimp
     d86:	0100                	addi	s0,sp,128
     d88:	bd220153          	0xbd220153
     d8c:	000d                	c.nop	3
     d8e:	2200                	fld	fs0,0(a2)
     d90:	0586                	slli	a1,a1,0x1
     d92:	0000                	unimp
    for (i = 0; i < find_num; i++)
     d94:	5401                	li	s0,-32
     d96:	2201                	jal	e96 <core_bench_list+0x236>
     d98:	0c68                	addi	a0,sp,540
     d9a:	0000                	unimp
     d9c:	9b22                	add	s6,s6,s0
     d9e:	0005                	c.nop	1
     da0:	0100                	addi	s0,sp,128
     da2:	0155                	addi	sp,sp,21
     da4:	b522                	fsd	fs0,168(sp)
     da6:	2500000b          	0x2500000b
     daa:	0554                	addi	a3,sp,644
     dac:	0000                	unimp
     dae:	5701                	li	a4,-32
    if (finder_idx > 0)
     db0:	1001                	c.nop	-32
     db2:	0c68                	addi	a0,sp,540
    remover = core_list_remove(list->next);
     db4:	0000                	unimp
     db6:	0f00                	addi	s0,sp,912
    if (info->idx >= 0)
     db8:	6804                	flw	fs1,16(s0)
     dba:	000c                	0xc
    list_head *ret = item->next;
     dbc:	0f00                	addi	s0,sp,912
     dbe:	b504                	fsd	fs1,40(a0)
    tmp        = item->info;
     dc0:	2600000b          	0x2600000b
    item->info = ret->info;
     dc4:	0000004f          	fnmadd.s	ft0,ft0,ft0,ft0,rne
    item->next = item->next->next;
     dc8:	fb01                	bnez	a4,cd8 <core_bench_list+0x78>
     dca:	6801                	0x6801
    item->info = ret->info;
     dcc:	000c                	0xc
     dce:	f000                	fsw	fs0,32(s0)
    ret->info  = tmp;
     dd0:	0012                	c.slli	zero,0x4
     dd2:	6c00                	flw	fs0,24(s0)
    item->next = item->next->next;
     dd4:	0002                	c.slli64	zero
     dd6:	0100                	addi	s0,sp,128
    if (info->idx >= 0)
     dd8:	979c                	0x979c
     dda:	0010                	0x10
    ret->next  = NULL;
     ddc:	2700                	fld	fs0,8(a4)
     dde:	0565                	addi	a0,a0,25
    if (info->idx >= 0)
     de0:	0000                	unimp
     de2:	fb01                	bnez	a4,cf2 <core_bench_list+0x92>
        while (list && (list->info->idx != info->idx))
     de4:	00098017          	auipc	zero,0x98
     de8:	0000                	unimp
     dea:	0000                	unimp
     dec:	2700                	fld	fs0,8(a4)
     dee:	0931                	addi	s2,s2,12
     df0:	0000                	unimp
     df2:	fb01                	bnez	a4,d02 <core_bench_list+0xa2>
            list = list->next;
     df4:	000c682b          	0xc682b
        while (list && (list->info->idx != info->idx))
     df8:	2100                	fld	fs0,0(a0)
     dfa:	0000                	unimp
        finder = list->next;
     dfc:	2700                	fld	fs0,8(a4)
     dfe:	0795                	addi	a5,a5,5
    while (finder)
     e00:	0000                	unimp
     e02:	fb01                	bnez	a4,d12 <core_bench_list+0xb2>
        retval = crc16(list->info->data16, retval);
     e04:	493c                	lw	a5,80(a0)
     e06:	0009                	c.nop	2
     e08:	7600                	flw	fs0,40(a2)
     e0a:	0000                	unimp
     e0c:	2800                	fld	fs0,16(s0)
     e0e:	0471                	addi	s0,s0,28
     e10:	0000                	unimp
     e12:	fe01                	bnez	a2,d2a <core_bench_list+0xca>
     e14:	800c                	0x800c
     e16:	0009                	c.nop	2
        finder = finder->next;
     e18:	1400                	addi	s0,sp,544
     e1a:	3029                	jal	624 <main+0x5ac>
        retval = crc16(list->info->data16, retval);
     e1c:	01000007          	0x1000007
    while (finder)
     e20:	0cff                	0xcff
     e22:	0980                	addi	s0,sp,208
     e24:	0000                	unimp
     e26:	000000bb          	0xbb
     e2a:	862a                	mv	a2,a0
    item_removed->info  = item_modified->info;
     e2c:	0005                	c.nop	1
     e2e:	0100                	addi	s0,sp,128
    item_removed->next  = item_modified->next;
     e30:	0102                	c.slli64	sp
     e32:	6810                	flw	fa2,16(s0)
    insize = 1;
     e34:	000c                	0xc
     e36:	f100                	fsw	fs0,32(a0)
    item_removed->info  = item_modified->info;
     e38:	0000                	unimp
     e3a:	2a00                	fld	fs0,16(a2)
    item_modified->info = tmp;
     e3c:	00a6                	slli	ra,ra,0x9
     e3e:	0000                	unimp
    item_removed->next  = item_modified->next;
     e40:	0301                	addi	t1,t1,0
     e42:	1001                	c.nop	-32
    item_modified->next = item_removed;
     e44:	0bb5                	addi	s7,s7,13
     e46:	0000                	unimp
        tail = NULL;
     e48:	0156                	slli	sp,sp,0x15
     e4a:	0000                	unimp
        list = NULL;
     e4c:	9b2a                	add	s6,s6,a0
     e4e:	0005                	c.nop	1
        nmerges = 0; /* count number of merges we do in this pass */
     e50:	0100                	addi	s0,sp,128
     e52:	0104                	addi	s1,sp,128
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     e54:	b510                	fsd	fa2,40(a0)
     e56:	a000000b          	0xa000000b
            nmerges++; /* there exists a merge to be done */
     e5a:	0001                	nop
     e5c:	2b00                	fld	fs0,16(a4)
     e5e:	0069                	c.nop	26
            psize = 0;
     e60:	0601                	addi	a2,a2,0
     e62:	1001                	c.nop	-32
                q = q->next;
     e64:	0980                	addi	s0,sp,208
     e66:	0000                	unimp
                psize++;
     e68:	0222                	slli	tp,tp,0x8
     e6a:	0000                	unimp
                if (!q)
     e6c:	c32a                	sw	a0,132(sp)
     e6e:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
            for (i = 0; i < insize; i++)
     e72:	68100107          	0x68100107
     e76:	000c                	0xc
                    list = e;
     e78:	8800                	0x8800
     e7a:	0002                	c.slli64	zero
     e7c:	2a00                	fld	fs0,16(a2)
     e7e:	01dd                	addi	gp,gp,23
     e80:	0000                	unimp
     e82:	0701                	addi	a4,a4,0
            while (psize > 0 || (qsize > 0 && q))
     e84:	1901                	addi	s2,s2,-32
     e86:	0c68                	addi	a0,sp,540
                else if (qsize == 0 || !q)
     e88:	0000                	unimp
     e8a:	02c8                	addi	a0,sp,324
     e8c:	0000                	unimp
     e8e:	772a                	flw	fa4,168(sp)
                else if (cmp(p->info, q->info, res) <= 0)
     e90:	01000007          	0x1000007
     e94:	0108                	addi	a0,sp,128
     e96:	e710                	fsw	fa2,8(a4)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     e98:	0009                	c.nop	2
     e9a:	0d00                	addi	s0,sp,656
    return a->idx - b->idx;
     e9c:	2c000003          	lb	zero,704(zero) # 2c0 <main+0x248>
     ea0:	0278                	addi	a4,sp,268
     ea2:	0000                	unimp
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     ea4:	0f46                	slli	t5,t5,0x11
     ea6:	0000                	unimp
     ea8:	862a                	mv	a2,a0
     eaa:	0000                	unimp
     eac:	0100                	addi	s0,sp,128
     eae:	0119                	addi	sp,sp,6
     eb0:	5510                	lw	a2,40(a0)
     eb2:	0009                	c.nop	2
     eb4:	8500                	0x8500
     eb6:	2b000003          	lb	zero,688(zero) # 2b0 <main+0x238>
     eba:	6164                	flw	fs1,68(a0)
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     ebc:	0074                	addi	a3,sp,12
     ebe:	1a01                	addi	s4,s4,-32
    return a->idx - b->idx;
     ec0:	1001                	c.nop	-32
     ec2:	0955                	addi	s2,s2,21
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     ec4:	0000                	unimp
     ec6:	039f 0000 492d      	0x492d0000039f
     ecc:	000d                	c.nop	3
     ece:	6000                	flw	fs0,0(s0)
     ed0:	90000013          	li	zero,-1792
     ed4:	0002                	c.slli64	zero
     ed6:	0100                	addi	s0,sp,128
     ed8:	011e                	slli	sp,sp,0x7
     eda:	2e09                	jal	11ec <__stack_size+0x1ec>
                else if (cmp(p->info, q->info, res) <= 0)
     edc:	0d9c                	addi	a5,sp,720
     ede:	0000                	unimp
                    qsize--;
     ee0:	03c1                	addi	t2,t2,16
     ee2:	0000                	unimp
                    q = q->next;
     ee4:	8f2e                	mv	t5,a1
     ee6:	000d                	c.nop	3
                    qsize--;
     ee8:	d400                	sw	s0,40(s0)
     eea:	2e000003          	lb	zero,736(zero) # 2e0 <main+0x268>
                if (tail)
     eee:	0d82                	c.slli64	s11
                    tail->next = e;
     ef0:	0000                	unimp
     ef2:	000003e7          	jalr	t2,zero # 0 <_start>
                    list = e;
     ef6:	752e                	flw	fa0,232(sp)
            while (psize > 0 || (qsize > 0 && q))
     ef8:	000d                	c.nop	3
     efa:	ff00                	fsw	fs0,56(a4)
     efc:	2e000003          	lb	zero,736(zero) # 2e0 <main+0x268>
     f00:	0d68                	addi	a0,sp,668
     f02:	0000                	unimp
                    qsize--;
     f04:	00000417          	auipc	s0,0x0
     f08:	5b2e                	lw	s6,232(sp)
     f0a:	000d                	c.nop	3
                    q = q->next;
     f0c:	2f00                	fld	fs0,24(a4)
     f0e:	0004                	0x4
                if (tail)
     f10:	2f00                	fld	fs0,24(a4)
     f12:	0290                	addi	a2,sp,320
                    list = e;
     f14:	0000                	unimp
     f16:	a930                	fsd	fa2,80(a0)
     f18:	000d                	c.nop	3
     f1a:	4200                	lw	s0,0(a2)
     f1c:	0004                	0x4
     f1e:	2d00                	fld	fs0,24(a0)
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f20:	1552                	slli	a0,a0,0x34
     f22:	0000                	unimp
     f24:	1360                	addi	s0,sp,428
     f26:	0000                	unimp
     f28:	02d0                	addi	a2,sp,324
     f2a:	0000                	unimp
     f2c:	6501                	0x6501
     f2e:	0501                	addi	a0,a0,0
            list = list->next;
     f30:	6a2e                	flw	fs4,200(sp)
     f32:	0015                	c.nop	5
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f34:	5500                	lw	s0,40(a0)
     f36:	0004                	0x4
        finder = list->next;
     f38:	2e00                	fld	fs0,24(a2)
     f3a:	155f 0000 046d      	0x46d0000155f
    while (finder)
     f40:	0000                	unimp
     f42:	0000                	unimp
                    psize--;
     f44:	0000                	unimp
     f46:	002c                	addi	a1,sp,8
     f48:	61000003          	lb	zero,1552(zero) # 610 <main+0x598>
                    p = p->next;
     f4c:	2b00000f          	0x2b00000f
     f50:	6170                	flw	fa2,68(a0)
     f52:	0074                	addi	a3,sp,12
        while (p)
     f54:	2a01                	jal	1064 <__stack_size+0x64>
     f56:	1401                	addi	s0,s0,-32
        tail->next = NULL;
     f58:	0955                	addi	s2,s2,21
     f5a:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     f5c:	0480                	addi	s0,sp,576
     f5e:	0000                	unimp
        insize *= 2;
     f60:	3100                	fld	fs0,32(a0)
     f62:	0d49                	addi	s10,s10,18
        while (p)
     f64:	0000                	unimp
     f66:	1304                	addi	s1,sp,416
     f68:	0000                	unimp
     f6a:	0258                	addi	a4,sp,260
        nmerges = 0; /* count number of merges we do in this pass */
     f6c:	0000                	unimp
     f6e:	1301                	addi	t1,t1,-32
        tail = NULL;
     f70:	0501                	addi	a0,a0,0
     f72:	0fe9                	addi	t6,t6,26
        list = NULL;
     f74:	0000                	unimp
     f76:	9c2e                	add	s8,s8,a1
     f78:	000d                	c.nop	3
     f7a:	c000                	sw	s0,0(s0)
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f7c:	0004                	0x4
     f7e:	2e00                	fld	fs0,24(a2)
     f80:	00000d8f          	0xd8f
     f84:	0542                	slli	a0,a0,0x10
     f86:	0000                	unimp
     f88:	8232                	mv	tp,a2
     f8a:	000d                	c.nop	3
     f8c:	0600                	addi	s0,sp,768
     f8e:	3bf2                	fld	fs7,312(sp)
     f90:	000e                	c.slli	zero,0x3
     f92:	0000                	unimp
     f94:	7532                	flw	fa0,44(sp)
     f96:	000d                	c.nop	3
     f98:	0600                	addi	s0,sp,768
     f9a:	edf2                	fsw	ft8,216(sp)
     f9c:	000d                	c.nop	3
     f9e:	0000                	unimp
     fa0:	6832                	flw	fa6,12(sp)
     fa2:	000d                	c.nop	3
            list = list->next;
     fa4:	0600                	addi	s0,sp,768
     fa6:	8ef2                	mv	t4,t3
        while (list && ((list->info->data16 & 0xff) != info->data16))
     fa8:	000e                	c.slli	zero,0x3
     faa:	0000                	unimp
     fac:	5b2e                	lw	s6,232(sp)
     fae:	000d                	c.nop	3
            retval += (list->next->info->data16 >> 8) & 1;
     fb0:	a700                	fsd	fs0,8(a4)
     fb2:	0005                	c.nop	1
            missed++;
     fb4:	2f00                	fld	fs0,24(a4)
     fb6:	0258                	addi	a4,sp,260
     fb8:	0000                	unimp
     fba:	a930                	fsd	fa2,80(a0)
            retval += (list->next->info->data16 >> 8) & 1;
     fbc:	000d                	c.nop	3
     fbe:	ec00                	fsw	fs0,24(s0)
            missed++;
     fc0:	0005                	c.nop	1
     fc2:	3300                	fld	fs0,32(a4)
            retval += (list->next->info->data16 >> 8) & 1;
     fc4:	1552                	slli	a0,a0,0x34
     fc6:	0000                	unimp
     fc8:	1348                	addi	a0,sp,420
     fca:	0000                	unimp
     fcc:	0010                	0x10
     fce:	0000                	unimp
     fd0:	6501                	0x6501
     fd2:	0501                	addi	a0,a0,0
     fd4:	6a2e                	flw	fs4,200(sp)
     fd6:	0015                	c.nop	5
    finder = list->next;
     fd8:	ff00                	fsw	fs0,56(a4)
     fda:	0005                	c.nop	1
    while (finder)
     fdc:	2e00                	fld	fs0,24(a2)
     fde:	155f 0000 0617      	0x6170000155f
        retval = crc16(list->info->data16, retval);
     fe4:	0000                	unimp
     fe6:	0000                	unimp
     fe8:	3300                	fld	fs0,32(a4)
     fea:	0bc1                	addi	s7,s7,16
     fec:	0000                	unimp
     fee:	1404                	addi	s1,sp,544
     ff0:	0000                	unimp
     ff2:	0108                	addi	a0,sp,128
        finder = finder->next;
     ff4:	0000                	unimp
     ff6:	3201                	jal	8f6 <main+0x87e>
        retval = crc16(list->info->data16, retval);
     ff8:	0c01                	addi	s8,s8,0
     ffa:	ed34                	fsw	fa3,88(a0)
    while (finder)
     ffc:	3400000b          	0x3400000b
}
    1000:	0be0                	addi	s0,sp,476
    1002:	0000                	unimp
    1004:	d32e                	sw	a1,164(sp)
    1006:	3600000b          	0x3600000b
    100a:	0006                	c.slli	zero,0x1
    100c:	3500                	fld	fs0,40(a0)
    100e:	1404                	addi	s1,sp,544
    1010:	0000                	unimp
    1012:	0108                	addi	a0,sp,128
    1014:	0000                	unimp
    1016:	fa30                	fsw	fa2,112(a2)
    1018:	7700000b          	0x7700000b
    101c:	0006                	c.slli	zero,0x1
    101e:	3000                	fld	fs0,32(s0)
    1020:	0c05                	addi	s8,s8,1
    1022:	0000                	unimp
    1024:	06cd                	addi	a3,a3,19
    1026:	0000                	unimp
    1028:	1030                	addi	a2,sp,40
    102a:	000c                	0xc
    102c:	3a00                	fld	fs0,48(a2)
    102e:	30000007          	0x30000007
    1032:	00000c1b          	0xc1b
    1036:	0784                	addi	s1,sp,960
    1038:	0000                	unimp
    103a:	2830                	fld	fa2,80(s0)
    info.idx = finder_idx;
    103c:	000c                	0xc
    103e:	db00                	sw	s0,48(a4)
    1040:	30000007          	0x30000007
    if (finder_idx > 0)
    1044:	0c35                	addi	s8,s8,13
    1046:	0000                	unimp
        while (p)
    1048:	0805                	addi	a6,a6,1
    104a:	0000                	unimp
    104c:	4230                	lw	a2,64(a2)
    104e:	000c                	0xc
    1050:	3b00                	fld	fs0,48(a4)
    1052:	0008                	0x8
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1054:	3000                	fld	fs0,32(s0)
    1056:	00000c4f          	fnmadd.s	fs8,ft0,ft0,ft0,rne
    105a:	0865                	addi	a6,a6,25
        while (p)
    105c:	0000                	unimp
    105e:	5c30                	lw	a2,120(s0)
        tail = NULL;
    1060:	000c                	0xc
    1062:	8300                	0x8300
        list = NULL;
    1064:	0008                	0x8
    1066:	3300                	fld	fs0,32(a4)
        nmerges = 0; /* count number of merges we do in this pass */
    1068:	00001577          	0x1577
        switch (flag)
    106c:	1458                	addi	a4,sp,548
    106e:	0000                	unimp
            nmerges++; /* there exists a merge to be done */
    1070:	0044                	addi	s1,sp,4
    1072:	0000                	unimp
    1074:	2701                	jal	1774 <matrix_test+0x170>
    1076:	1a02                	slli	s4,s4,0x20
            psize = 0;
    1078:	9c2e                	add	s8,s8,a1
    107a:	0015                	c.nop	5
            nmerges++; /* there exists a merge to be done */
    107c:	ba00                	fsd	fs0,48(a2)
    107e:	0008                	0x8
    1080:	2e00                	fld	fs0,24(a2)
    1082:	1592                	slli	a1,a1,0x24
                q = q->next;
    1084:	0000                	unimp
    1086:	08ce                	slli	a7,a7,0x13
                psize++;
    1088:	0000                	unimp
    108a:	882e                	mv	a6,a1
                if (!q)
    108c:	0015                	c.nop	5
    108e:	e100                	fsw	fs0,0(a0)
            for (i = 0; i < insize; i++)
    1090:	0008                	0x8
    1092:	0000                	unimp
    1094:	0000                	unimp
    1096:	2600                	fld	fs0,8(a2)
                    list = e;
    1098:	01d2                	slli	gp,gp,0x14
    109a:	0000                	unimp
            while (psize > 0 || (qsize > 0 && q))
    109c:	9f01                	0x9f01
    109e:	5501                	li	a0,-32
                else if (qsize == 0 || !q)
    10a0:	0009                	c.nop	2
    10a2:	6000                	flw	fs0,0(s0)
    10a4:	000c                	0xc
    10a6:	9000                	0x9000
                else if (cmp(p->info, q->info, res) <= 0)
    10a8:	0006                	c.slli	zero,0x1
    10aa:	0100                	addi	s0,sp,128
    10ac:	529c                	lw	a5,32(a3)
    10ae:	0015                	c.nop	5
    ee_s16 data = *pdata;
    10b0:	3600                	fld	fs0,40(a2)
    10b2:	6572                	flw	fa0,28(sp)
    if (optype) /* if cached, use cache */
    10b4:	9f010073          	0x9f010073
        return (data & 0x007f);
    10b8:	bb1f 000b 0000      	0xbbb1f
    if (optype) /* if cached, use cache */
    10be:	0009                	c.nop	2
               & 0xf);       /* bits 3-6 is specific data for the operation */
    10c0:	2700                	fld	fs0,8(a4)
    10c2:	04d2                	slli	s1,s1,0x14
        ee_s16 dtype
    10c4:	0000                	unimp
    10c6:	9f01                	0x9f01
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    10c8:	0009492b          	0x9492b
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    10cc:	4200                	lw	s0,0(a2)
    10ce:	0009                	c.nop	2
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    10d0:	2900                	fld	fs0,16(a0)
    10d2:	0354                	addi	a3,sp,388
        switch (flag)
    10d4:	0000                	unimp
    10d6:	a101                	j	14d6 <core_list_init+0x1e6>
    10d8:	5510                	lw	a2,40(a0)
    10da:	0009                	c.nop	2
    10dc:	a000                	fsd	fs0,0(s0)
    10de:	0009                	c.nop	2
    10e0:	2900                	fld	fs0,16(a0)
    10e2:	010e                	slli	sp,sp,0x3
    10e4:	0000                	unimp
    10e6:	a201                	j	11e6 <__stack_size+0x1e6>
    10e8:	5510                	lw	a2,40(a0)
    10ea:	0009                	c.nop	2
        res->crc = crcu16(retval, res->crc);
    10ec:	1f00                	addi	s0,sp,944
    10ee:	000a                	c.slli	zero,0x2
    10f0:	2900                	fld	fs0,16(a0)
    10f2:	04a4                	addi	s1,sp,584
    10f4:	0000                	unimp
    10f6:	a201                	j	11f6 <__stack_size+0x1f6>
        retval &= 0x007f;
    10f8:	0009551b          	0x9551b
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    10fc:	6b00                	flw	fs0,16(a4)
    10fe:	000a                	c.slli	zero,0x2
    1100:	2900                	fld	fs0,16(a0)
    1102:	01dd                	addi	gp,gp,23
        res->crc = crcu16(retval, res->crc);
    1104:	0000                	unimp
    1106:	a301                	j	1606 <matrix_test+0x2>
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1108:	6810                	flw	fa2,16(s0)
    110a:	000c                	0xc
    110c:	9600                	0x9600
    110e:	000a                	c.slli	zero,0x2
    ee_s16 data = *pdata;
    1110:	2900                	fld	fs0,16(a0)
    1112:	0285                	addi	t0,t0,1
    if (optype) /* if cached, use cache */
    1114:	0000                	unimp
    1116:	a401                	j	1316 <core_list_init+0x26>
        return (data & 0x007f);
    1118:	4910                	lw	a2,16(a0)
    111a:	0009                	c.nop	2
    if (optype) /* if cached, use cache */
    111c:	f600                	fsw	fs0,40(a2)
    111e:	000a                	c.slli	zero,0x2
               & 0xf);       /* bits 3-6 is specific data for the operation */
    1120:	2900                	fld	fs0,16(a0)
    1122:	00000007          	0x7
        ee_s16 dtype
    1126:	a501                	j	1726 <matrix_test+0x122>
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1128:	6810                	flw	fa2,16(s0)
    112a:	000c                	0xc
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    112c:	2a00                	fld	fs0,16(a2)
    112e:	2900000b          	0x2900000b
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1132:	000003c3          	fmadd.s	ft7,ft0,ft0,ft0,rne
        switch (flag)
    1136:	a601                	j	1436 <core_list_init+0x146>
    1138:	6810                	flw	fa2,16(s0)
    113a:	000c                	0xc
    113c:	4800                	lw	s0,16(s0)
    113e:	2900000b          	0x2900000b
    1142:	055c                	addi	a5,sp,644
    1144:	0000                	unimp
    1146:	a601                	j	1446 <core_list_init+0x156>
    1148:	6819                	lui	a6,0x6
    114a:	000c                	0xc
        res->crc = crcu16(retval, res->crc);
    114c:	b500                	fsd	fs0,40(a0)
    114e:	2900000b          	0x2900000b
    1152:	00000777          	0x777
    1156:	a701                	j	1856 <matrix_test+0x252>
        retval &= 0x007f;
    1158:	e710                	fsw	fa2,8(a4)
    115a:	0009                	c.nop	2
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    115c:	de00                	sw	s0,56(a2)
    115e:	3700000b          	0x3700000b
    1162:	0069                	c.nop	26
        res->crc = crcu16(retval, res->crc);
    1164:	a801                	j	1174 <__stack_size+0x174>
    1166:	4910                	lw	a2,16(a0)
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1168:	0009                	c.nop	2
    116a:	8900                	0x8900
    116c:	000c                	0xc
    116e:	3800                	fld	fs0,48(s0)
    return val1 - val2;
    1170:	0ca8                	addi	a0,sp,600
    1172:	0000                	unimp
                else if (cmp(p->info, q->info, res) <= 0)
    1174:	0cc0                	addi	s0,sp,596
    1176:	0000                	unimp
                    qsize--;
    1178:	00c8                	addi	a0,sp,68
    117a:	0000                	unimp
                    q = q->next;
    117c:	b001                	j	97c <main+0x904>
    117e:	0011b617          	auipc	a2,0x11b
                    qsize--;
    1182:	2e00                	fld	fs0,24(a2)
                if (tail)
    1184:	00000cc7          	fmsub.s	fs9,ft0,ft0,ft0,rne
                    tail->next = e;
    1188:	0cd5                	addi	s9,s9,21
    118a:	0000                	unimp
                    list = e;
    118c:	ba2e                	fsd	fa1,304(sp)
    118e:	000c                	0xc
            while (psize > 0 || (qsize > 0 && q))
    1190:	0d00                	addi	s0,sp,656
    1192:	000d                	c.nop	3
    1194:	3300                	fld	fs0,32(a4)
    1196:	0ca8                	addi	a0,sp,600
    1198:	0000                	unimp
    119a:	0f7c                	addi	a5,sp,924
                    qsize--;
    119c:	0000                	unimp
    119e:	0034                	addi	a3,sp,8
    11a0:	0000                	unimp
    11a2:	b301                	j	ea2 <core_bench_list+0x242>
                    q = q->next;
    11a4:	0101                	addi	sp,sp,0
    11a6:	c734                	sw	a3,72(a4)
                if (tail)
    11a8:	000c                	0xc
    11aa:	2e00                	fld	fs0,24(a2)
                    list = e;
    11ac:	0cba                	slli	s9,s9,0xe
    11ae:	0000                	unimp
    11b0:	0d41                	addi	s10,s10,16
    11b2:	0000                	unimp
    11b4:	0000                	unimp
    11b6:	6e38                	flw	fa4,88(a2)
                    psize--;
    11b8:	000c                	0xc
    11ba:	0400                	addi	s0,sp,512
    11bc:	000d                	c.nop	3
    11be:	f000                	fsw	fs0,32(s0)
                    p = p->next;
    11c0:	0000                	unimp
    11c2:	0100                	addi	s0,sp,128
    11c4:	17b1                	addi	a5,a5,-20
    11c6:	11ec                	addi	a1,sp,236
    11c8:	0000                	unimp
    11ca:	802e                	c.mv	zero,a1
        while (p)
    11cc:	000c                	0xc
    11ce:	5f00                	lw	s0,56(a4)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    11d0:	000d                	c.nop	3
    11d2:	2f00                	fld	fs0,24(a4)
        tail->next = NULL;
    11d4:	00f0                	addi	a2,sp,76
    11d6:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    11d8:	8d30                	0x8d30
    11da:	000c                	0xc
    11dc:	9300                	0x9300
    11de:	000d                	c.nop	3
        insize *= 2;
    11e0:	3000                	fld	fs0,32(s0)
    11e2:	0c9a                	slli	s9,s9,0x6
    11e4:	0000                	unimp
    11e6:	0dc8                	addi	a0,sp,724
    11e8:	0000                	unimp
    11ea:	0000                	unimp
        while (p)
    11ec:	0f38                	addi	a4,sp,920
    11ee:	000d                	c.nop	3
        tail->next = NULL;
    11f0:	b800                	fsd	fs0,48(s0)
    11f2:	000d                	c.nop	3
    11f4:	0800                	addi	s0,sp,16
    11f6:	0001                	nop
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    11f8:	0100                	addi	s0,sp,128
    11fa:	12220fcf          	fnmadd.d	ft11,ft4,ft2,ft2,rne
    11fe:	0000                	unimp
    1200:	212e                	fld	ft2,200(sp)
    1202:	000d                	c.nop	3
    1204:	e600                	fsw	fs0,8(a2)
    1206:	000d                	c.nop	3
                if (res->crcmatrix == 0)
    1208:	2f00                	fld	fs0,24(a4)
    120a:	0108                	addi	a0,sp,128
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    120c:	0000                	unimp
    120e:	2e30                	fld	fa2,88(a2)
    1210:	000d                	c.nop	3
    1212:	f900                	fsw	fs0,48(a0)
                if (res->crcmatrix == 0)
    1214:	000d                	c.nop	3
    1216:	3000                	fld	fs0,32(s0)
                    res->crcmatrix = retval;
    1218:	00000d3b          	0xd3b
    121c:	0e0c                	addi	a1,sp,784
    121e:	0000                	unimp
    1220:	0000                	unimp
    1222:	a838                	fsd	fa4,80(s0)
                retval = core_bench_state(res->size,
    1224:	000c                	0xc
    1226:	b800                	fsd	fs0,48(s0)
    1228:	000d                	c.nop	3
    122a:	2800                	fld	fs0,16(s0)
    122c:	0001                	nop
    122e:	0100                	addi	s0,sp,128
    1230:	0ed2                	slli	t4,t4,0x14
    1232:	1269                	addi	tp,tp,-6
    1234:	0000                	unimp
    1236:	c72e                	sw	a1,140(sp)
    1238:	000c                	0xc
    123a:	1f00                	addi	s0,sp,944
    123c:	000e                	c.slli	zero,0x3
    123e:	2e00                	fld	fs0,24(a2)
    1240:	0cba                	slli	s9,s9,0xe
    1242:	0000                	unimp
    1244:	00000e47          	fmsub.s	ft8,ft0,ft0,ft0,rne
    1248:	000ca833          	sltz	a6,s9
    124c:	2000                	fld	fs0,0(s0)
    124e:	1800000f          	0x1800000f
                if (res->crcstate == 0)
    1252:	0000                	unimp
                retval = core_bench_state(res->size,
    1254:	0100                	addi	s0,sp,128
    1256:	340101b3          	0x340101b3
    125a:	00000cc7          	fmsub.s	fs9,ft0,ft0,ft0,rne
                if (res->crcstate == 0)
    125e:	ba2e                	fsd	fa1,304(sp)
                    res->crcstate = retval;
    1260:	000c                	0xc
    1262:	7000                	flw	fs0,32(s0)
    1264:	000e                	c.slli	zero,0x3
    1266:	0000                	unimp
    1268:	3800                	fld	fs0,48(s0)
    126a:	0cd5                	addi	s9,s9,21
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    126c:	0000                	unimp
    126e:	0e2c                	addi	a1,sp,792
    1270:	0000                	unimp
    1272:	0150                	addi	a2,sp,132
    1274:	0000                	unimp
    1276:	dd01                	beqz	a0,118e <__stack_size+0x18e>
    1278:	00129f0f          	0x129f0f
                if (res->crcmatrix == 0)
    127c:	2e00                	fld	fs0,24(a2)
    127e:	0cf4                	addi	a3,sp,604
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1280:	0000                	unimp
    1282:	00000e83          	lb	t4,0(zero) # 0 <_start>
    1286:	e72e                	fsw	fa1,140(sp)
                if (res->crcmatrix == 0)
    1288:	000c                	0xc
    128a:	9700                	0x9700
                    res->crcmatrix = retval;
    128c:	000e                	c.slli	zero,0x3
    128e:	2f00                	fld	fs0,24(a4)
    1290:	0150                	addi	a2,sp,132
    1292:	0000                	unimp
    1294:	0130                	addi	a2,sp,136
    1296:	000d                	c.nop	3
                retval = core_bench_state(res->size,
    1298:	aa00                	fsd	fs0,16(a2)
    129a:	000e                	c.slli	zero,0x3
    129c:	0000                	unimp
    129e:	3800                	fld	fs0,48(s0)
    12a0:	0bc1                	addi	s7,s7,16
    12a2:	0000                	unimp
    12a4:	0e34                	addi	a3,sp,792
    12a6:	0000                	unimp
    12a8:	0168                	addi	a0,sp,140
    12aa:	0000                	unimp
    12ac:	df01                	beqz	a4,11c4 <__stack_size+0x1c4>
    12ae:	530c                	lw	a1,32(a4)
    12b0:	2e000013          	li	zero,736
    12b4:	0bed                	addi	s7,s7,27
    12b6:	0000                	unimp
    12b8:	0ebe                	slli	t4,t4,0xf
    12ba:	0000                	unimp
    12bc:	e02e                	fsw	fa1,0(sp)
    12be:	de00000b          	0xde00000b
    12c2:	000e                	c.slli	zero,0x3
                if (res->crcstate == 0)
    12c4:	2e00                	fld	fs0,24(a2)
    12c6:	00000bd3          	fadd.s	fs7,ft0,ft0,rne
                retval = core_bench_state(res->size,
    12ca:	0f06                	slli	t5,t5,0x1
    12cc:	0000                	unimp
    12ce:	0001682f          	0x1682f
                if (res->crcstate == 0)
    12d2:	3000                	fld	fs0,32(s0)
                    res->crcstate = retval;
    12d4:	0bfa                	slli	s7,s7,0x1e
    12d6:	0000                	unimp
    12d8:	0f3c                	addi	a5,sp,920
    12da:	0000                	unimp
    12dc:	0530                	addi	a2,sp,648
    12de:	000c                	0xc
    12e0:	9e00                	0x9e00
    12e2:	3000000f          	0x3000000f
    12e6:	0c10                	addi	a2,sp,528
            retval += (list->next->info->data16 >> 8) & 1;
    12e8:	0000                	unimp
    12ea:	0000100b          	0x100b
    12ee:	1b30                	addi	a2,sp,440
    ee_u32 size     = (blksize / per_item)
    12f0:	000c                	0xc
    12f2:	6000                	flw	fs0,0(s0)
    12f4:	0010                	0x10
    12f6:	3000                	fld	fs0,32(s0)
    list->info->data16 = (ee_s16)0x8080;
    12f8:	0c28                	addi	a0,sp,536
    12fa:	0000                	unimp
    list->next         = NULL;
    12fc:	1096                	slli	ra,ra,0x25
    12fe:	0000                	unimp
    list->info->data16 = (ee_s16)0x8080;
    1300:	3530                	fld	fa2,104(a0)
    1302:	000c                	0xc
    if ((*memblock + 1) >= memblock_end)
    1304:	b500                	fsd	fs0,40(a0)
    1306:	0010                	0x10
    memblock++;
    1308:	3000                	fld	fs0,32(s0)
    130a:	0c42                	slli	s8,s8,0x10
    ee_u32 size     = (blksize / per_item)
    130c:	0000                	unimp
    130e:	000010eb          	0x10eb
    list_head *memblock_end  = memblock + size;
    1312:	4f30                	lw	a2,88(a4)
    1314:	000c                	0xc
    1316:	2000                	fld	fs0,0(s0)
    list->info         = datablock;
    1318:	0011                	c.nop	4
    131a:	3000                	fld	fs0,32(s0)
    list_data *datablock_end = datablock + size;
    131c:	0c5c                	addi	a5,sp,532
    131e:	0000                	unimp
    list->info->idx    = 0x0000;
    1320:	113e                	slli	sp,sp,0x2f
    1322:	0000                	unimp
    list->info->data16 = (ee_s16)0x8080;
    1324:	00157733          	and	a4,a0,ra
    list_data *datablock_end = datablock + size;
    1328:	9800                	0x9800
    132a:	000e                	c.slli	zero,0x3
    datablock++;
    132c:	4400                	lw	s0,8(s0)
    132e:	0000                	unimp
    if ((*memblock + 1) >= memblock_end)
    1330:	0100                	addi	s0,sp,128
    1332:	2e1a0227          	0x2e1a0227
    if ((*datablock + 1) >= datablock_end)
    1336:	159c                	addi	a5,sp,736
    1338:	0000                	unimp
    133a:	1175                	addi	sp,sp,-3
    newitem->info = *datablock;
    133c:	0000                	unimp
    133e:	922e                	add	tp,tp,a1
    newitem->next      = insert_point->next;
    1340:	0015                	c.nop	5
    1342:	8900                	0x8900
    insert_point->next = newitem;
    1344:	0011                	c.nop	4
    1346:	2e00                	fld	fs0,24(a2)
    to->idx    = from->idx;
    1348:	1588                	addi	a0,sp,736
    134a:	0000                	unimp
    to->data16 = from->data16;
    134c:	119c                	addi	a5,sp,224
    134e:	0000                	unimp
    1350:	0000                	unimp
    1352:	3800                	fld	fs0,48(s0)
    to->idx    = from->idx;
    1354:	0bc1                	addi	s7,s7,16
    1356:	0000                	unimp
    for (i = 0; i < size; i++)
    1358:	1048                	addi	a0,sp,36
    135a:	0000                	unimp
    135c:	0198                	addi	a4,sp,192
    135e:	0000                	unimp
    to->idx    = from->idx;
    1360:	ce01                	beqz	a2,1378 <core_list_init+0x88>
    1362:	2710                	fld	fa2,8(a4)
    1364:	0015                	c.nop	5
    1366:	3400                	fld	fs0,40(s0)
    for (i = 0; i < size; i++)
    1368:	0bed                	addi	s7,s7,27
    136a:	0000                	unimp
    to->idx    = from->idx;
    136c:	e034                	fsw	fa3,64(s0)
    136e:	2e00000b          	0x2e00000b
    if ((*memblock + 1) >= memblock_end)
    1372:	00000bd3          	fadd.s	fs7,ft0,ft0,rne
    1376:	000011bb          	0x11bb
    if ((*datablock + 1) >= datablock_end)
    137a:	0001982f          	0x1982f
    137e:	3000                	fld	fs0,32(s0)
    1380:	0bfa                	slli	s7,s7,0x1e
    1382:	0000                	unimp
    1384:	1208                	addi	a0,sp,288
    1386:	0000                	unimp
        ee_u16 datpat = ((ee_u16)(seed ^ i) & 0xf);
    1388:	0530                	addi	a2,sp,648
    138a:	000c                	0xc
            = (datpat << 3) | (i & 0x7); /* alternate between algorithms */
    138c:	7500                	flw	fs0,40(a0)
    138e:	0012                	c.slli	zero,0x4
    1390:	3000                	fld	fs0,32(s0)
    1392:	0c10                	addi	a2,sp,528
    1394:	0000                	unimp
    1396:	12cc                	addi	a1,sp,356
    newitem->next      = insert_point->next;
    1398:	0000                	unimp
    139a:	1b30                	addi	a2,sp,440
        ee_u16 dat
    139c:	000c                	0xc
    139e:	1600                	addi	s0,sp,800
    insert_point->next = newitem;
    13a0:	30000013          	li	zero,768
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    13a4:	0c28                	addi	a0,sp,536
    13a6:	0000                	unimp
    newitem->info = *datablock;
    13a8:	1379                	addi	t1,t1,-2
    13aa:	0000                	unimp
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    13ac:	3530                	fld	fa2,104(a0)
    13ae:	000c                	0xc
    to->data16 = from->data16;
    13b0:	b200                	fsd	fs0,32(a2)
    13b2:	30000013          	li	zero,768
    to->idx    = from->idx;
    13b6:	0c42                	slli	s8,s8,0x10
    13b8:	0000                	unimp
    13ba:	13f8                	addi	a4,sp,492
    13bc:	0000                	unimp
    13be:	4f30                	lw	a2,88(a4)
    13c0:	000c                	0xc
    13c2:	1600                	addi	s0,sp,800
    for (i = 0; i < size; i++)
    13c4:	0014                	0x14
    13c6:	3000                	fld	fs0,32(s0)
    13c8:	0c5c                	addi	a5,sp,532
    13ca:	0000                	unimp
    while (finder->next != NULL)
    13cc:	1434                	addi	a3,sp,552
    13ce:	0000                	unimp
    13d0:	a92d                	j	180a <matrix_test+0x206>
    13d2:	0015                	c.nop	5
        if (i < size / 5) /* first 20% of the list in order */
    13d4:	5400                	lw	s0,40(s0)
    13d6:	0010                	0x10
    13d8:	b000                	fsd	fs0,32(s0)
    13da:	0001                	nop
                                & (((i & 0x07) << 8)
    13dc:	0100                	addi	s0,sp,128
    13de:	2e1a0227          	0x2e1a0227
        if (i < size / 5) /* first 20% of the list in order */
    13e2:	15ce                	slli	a1,a1,0x33
                                & (((i & 0x07) << 8)
    13e4:	0000                	unimp
    13e6:	145f 0000 c42e      	0xc42e0000145f
        if (i < size / 5) /* first 20% of the list in order */
    13ec:	0015                	c.nop	5
    13ee:	7d00                	flw	fs0,56(a0)
        finder = finder->next;
    13f0:	0014                	0x14
    13f2:	2e00                	fld	fs0,24(a2)
            finder->info->idx = i++;
    13f4:	15ba                	slli	a1,a1,0x2e
    13f6:	0000                	unimp
        finder = finder->next;
    13f8:	0000149b          	0x149b
    while (finder->next != NULL)
    13fc:	0001b02f          	0x1b02f
    1400:	3000                	fld	fs0,32(s0)
    1402:	15da                	slli	a1,a1,0x36
    insize = 1;
    1404:	0000                	unimp
    1406:	14b9                	addi	s1,s1,-18
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1408:	0000                	unimp
    140a:	e639                	bnez	a2,1458 <core_list_init+0x168>
    insize = 1;
    140c:	0015                	c.nop	5
    140e:	3800                	fld	fs0,48(s0)
        tail = NULL;
    1410:	000015f3          	csrrw	a1,ustatus,zero
        list = NULL;
    1414:	1054                	addi	a3,sp,36
    1416:	0000                	unimp
        nmerges = 0; /* count number of merges we do in this pass */
    1418:	01d8                	addi	a4,sp,196
    141a:	0000                	unimp
            nmerges++; /* there exists a merge to be done */
    141c:	7c01                	lui	s8,0xfffe0
    141e:	00149b13          	slli	s6,s1,0x1
    1422:	2e00                	fld	fs0,24(a2)
            psize = 0;
    1424:	1610                	addi	a2,sp,800
    1426:	0000                	unimp
                q = q->next;
    1428:	000014d7          	0x14d7
                psize++;
    142c:	042e                	slli	s0,s0,0xb
    142e:	0016                	c.slli	zero,0x5
                if (!q)
    1430:	f500                	fsw	fs0,40(a0)
    1432:	0014                	0x14
            for (i = 0; i < insize; i++)
    1434:	2f00                	fld	fs0,24(a4)
    1436:	01d8                	addi	a4,sp,196
                    list = e;
    1438:	0000                	unimp
    143a:	1c30                	addi	a2,sp,568
    143c:	0016                	c.slli	zero,0x5
    143e:	1300                	addi	s0,sp,416
    1440:	0015                	c.nop	5
    1442:	3000                	fld	fs0,32(s0)
            while (psize > 0 || (qsize > 0 && q))
    1444:	1628                	addi	a0,sp,808
    1446:	0000                	unimp
                else if (qsize == 0 || !q)
    1448:	1531                	addi	a0,a0,-20
    144a:	0000                	unimp
    144c:	3430                	fld	fa2,104(s0)
    144e:	0016                	c.slli	zero,0x5
                else if (cmp(p->info, q->info, res) <= 0)
    1450:	6500                	flw	fs0,8(a0)
    1452:	0015                	c.nop	5
    1454:	3a00                	fld	fs0,48(a2)
    1456:	16a1                	addi	a3,a3,-24
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1458:	0000                	unimp
    145a:	0200                	addi	s0,sp,256
    return a->idx - b->idx;
    145c:	0000                	unimp
    145e:	4130                	lw	a2,64(a0)
    1460:	0016                	c.slli	zero,0x5
    1462:	8f00                	0x8f00
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1464:	0015                	c.nop	5
    1466:	3000                	fld	fs0,32(s0)
    1468:	164d                	addi	a2,a2,-13
    146a:	0000                	unimp
    146c:	15e5                	addi	a1,a1,-7
    146e:	0000                	unimp
    1470:	0011583b          	0x11583b
    1474:	3800                	fld	fs0,48(s0)
    1476:	001a                	c.slli	zero,0x6
    1478:	3c00                	fld	fs0,56(s0)
    147a:	1208                	addi	a0,sp,288
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    147c:	0000                	unimp
    147e:	1a44                	addi	s1,sp,308
    return a->idx - b->idx;
    1480:	0000                	unimp
    1482:	0000148f          	0x148f
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    1486:	013d                	addi	sp,sp,15
    1488:	045a                	slli	s0,s0,0x16
    148a:	b891                	j	cde <core_bench_list+0x7e>
    148c:	067f                	0x67f
    148e:	3b00                	fld	fs0,48(a4)
    1490:	1250                	addi	a2,sp,292
    1492:	0000                	unimp
    1494:	1a50                	addi	a2,sp,308
    1496:	0000                	unimp
    1498:	0000                	unimp
    149a:	3e00                	fld	fs0,56(a2)
                else if (cmp(p->info, q->info, res) <= 0)
    149c:	000015f3          	csrrw	a1,ustatus,zero
                    qsize--;
    14a0:	10b0                	addi	a2,sp,104
    14a2:	0000                	unimp
                    q = q->next;
    14a4:	0228                	addi	a0,sp,264
    14a6:	0000                	unimp
                    qsize--;
    14a8:	7b01                	lui	s6,0xfffe0
    14aa:	16102e13          	slti	t3,zero,353
                if (tail)
    14ae:	0000                	unimp
                    tail->next = e;
    14b0:	1662                	slli	a2,a2,0x38
    14b2:	0000                	unimp
                    list = e;
    14b4:	042e                	slli	s0,s0,0xb
    14b6:	0016                	c.slli	zero,0x5
            while (psize > 0 || (qsize > 0 && q))
    14b8:	8000                	0x8000
    14ba:	0016                	c.slli	zero,0x5
    14bc:	2f00                	fld	fs0,24(a4)
    14be:	0228                	addi	a0,sp,264
    14c0:	0000                	unimp
    14c2:	1c30                	addi	a2,sp,568
                    qsize--;
    14c4:	0016                	c.slli	zero,0x5
    14c6:	9e00                	0x9e00
    14c8:	0016                	c.slli	zero,0x5
    14ca:	3000                	fld	fs0,32(s0)
                    q = q->next;
    14cc:	1628                	addi	a0,sp,808
    14ce:	0000                	unimp
                if (tail)
    14d0:	16bc                	addi	a5,sp,872
    14d2:	0000                	unimp
                    list = e;
    14d4:	3430                	fld	fa2,104(s0)
    14d6:	0016                	c.slli	zero,0x5
    14d8:	f000                	fsw	fs0,32(s0)
    14da:	0016                	c.slli	zero,0x5
    14dc:	3a00                	fld	fs0,48(a2)
    14de:	16a1                	addi	a3,a3,-24
                    psize--;
    14e0:	0000                	unimp
    14e2:	0240                	addi	s0,sp,260
    14e4:	0000                	unimp
    14e6:	4130                	lw	a2,64(a0)
                    p = p->next;
    14e8:	0016                	c.slli	zero,0x5
    14ea:	1a00                	addi	s0,sp,304
    14ec:	30000017          	auipc	zero,0x30000
        while (p)
    14f0:	164d                	addi	a2,a2,-13
    14f2:	0000                	unimp
        tail->next = NULL;
    14f4:	1770                	addi	a2,sp,940
    14f6:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    14f8:	0010f83b          	0x10f83b
        insize *= 2;
    14fc:	3800                	fld	fs0,48(s0)
    14fe:	001a                	c.slli	zero,0x6
        while (p)
    1500:	3c00                	fld	fs0,56(s0)
    1502:	127c                	addi	a5,sp,300
        tail->next = NULL;
    1504:	0000                	unimp
    1506:	1a44                	addi	s1,sp,308
    1508:	0000                	unimp
    150a:	00001517          	auipc	a0,0x1
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    150e:	013d                	addi	sp,sp,15
    1510:	045a                	slli	s0,s0,0x16
    1512:	b891                	j	d66 <core_bench_list+0x106>
                                & (((i & 0x07) << 8)
    1514:	067f                	0x67f
    1516:	3b00                	fld	fs0,48(a4)
        finder = finder->next;
    1518:	12c4                	addi	s1,sp,356
    151a:	0000                	unimp
                                & (((i & 0x07) << 8)
    151c:	1a50                	addi	a2,sp,308
	...
    1526:	3c00                	fld	fs0,56(s0)
                                   | pat); /* make sure the mixed items end up
    1528:	0e18                	addi	a4,sp,784
    152a:	0000                	unimp
    while (finder->next != NULL)
    152c:	1a5c                	addi	a5,sp,308
    152e:	0000                	unimp
                                & (((i & 0x07) << 8)
    1530:	153e                	slli	a0,a0,0x2f
    1532:	0000                	unimp
            finder->info->idx = 0x3fff
    1534:	013d                	addi	sp,sp,15
    1536:	bc91055b          	0xbc91055b
        finder = finder->next;
    153a:	947f                	0x947f
    while (finder->next != NULL)
    153c:	0002                	c.slli64	zero
    153e:	000ff43f 001a5c00 	0x1a5c00000ff43f
}
    1546:	3d00                	fld	fs0,56(a0)
    1548:	5b01                	li	s6,-32
    154a:	9105                	srli	a0,a0,0x21
    memblock++;
    154c:	7fbc                	flw	fa5,120(a5)
    154e:	0294                	addi	a3,sp,320
    datablock++;
    1550:	0000                	unimp
    1552:	1240                	addi	s0,sp,292
    if ((*datablock + 1) >= datablock_end)
    1554:	0002                	c.slli64	zero
    1556:	0100                	addi	s0,sp,128
    1558:	0191                	addi	gp,gp,4
    155a:	7701                	lui	a4,0xfffe0
{
    155c:	0015                	c.nop	5
    155e:	4100                	lw	s0,0(a0)
    1560:	6f74                	flw	fa3,92(a4)
    1562:	0100                	addi	s0,sp,128
    ee_u32        iterations = res->iterations;
    1564:	1691                	addi	a3,a3,-28
    1566:	0bb5                	addi	s7,s7,13
{
    1568:	0000                	unimp
    156a:	2442                	fld	fs0,16(sp)
    156c:	0000                	unimp
    156e:	0100                	addi	s0,sp,128
    1570:	2591                	jal	1bb4 <core_bench_matrix+0x40>
    1572:	0bb5                	addi	s7,s7,13
    res->crc                 = 0;
    1574:	0000                	unimp
    1576:	4300                	lw	s0,0(a4)
    1578:	00d6                	slli	ra,ra,0x15
    157a:	0000                	unimp
{
    157c:	8601                	c.srai64	a2
    157e:	6101                	0x6101
    for (i = 0; i < iterations; i++)
    1580:	0009                	c.nop	2
    1582:	0100                	addi	s0,sp,128
    1584:	15a9                	addi	a1,a1,-22
    1586:	0000                	unimp
        crc      = core_bench_list(res, 1);
    1588:	6141                	addi	sp,sp,16
    158a:	0100                	addi	s0,sp,128
    158c:	1486                	slli	s1,s1,0x21
    158e:	0bb5                	addi	s7,s7,13
    1590:	0000                	unimp
    1592:	6241                	lui	tp,0x10
    1594:	0100                	addi	s0,sp,128
    1596:	2286                	fld	ft5,64(sp)
        res->crc = crcu16(crc, res->crc);
    1598:	0bb5                	addi	s7,s7,13
    159a:	0000                	unimp
    159c:	7241                	lui	tp,0xffff0
    159e:	7365                	lui	t1,0xffff9
    15a0:	0100                	addi	s0,sp,128
    15a2:	3386                	fld	ft7,96(sp)
    15a4:	00000bbb          	0xbbb
        crc      = core_bench_list(res, -1);
    15a8:	4300                	lw	s0,0(a4)
    15aa:	052e                	slli	a0,a0,0xb
    15ac:	0000                	unimp
    15ae:	7901                	lui	s2,0xfffe0
    15b0:	6101                	0x6101
    15b2:	0009                	c.nop	2
    15b4:	0100                	addi	s0,sp,128
    15b6:	000015f3          	csrrw	a1,ustatus,zero
        res->crc = crcu16(crc, res->crc);
    15ba:	6141                	addi	sp,sp,16
    15bc:	0100                	addi	s0,sp,128
    15be:	1879                	addi	a6,a6,-2
    15c0:	0bb5                	addi	s7,s7,13
    15c2:	0000                	unimp
    15c4:	6241                	lui	tp,0x10
    15c6:	0100                	addi	s0,sp,128
        if (i == 0)
    15c8:	2679                	jal	1956 <matrix_test+0x352>
    15ca:	0bb5                	addi	s7,s7,13
    for (i = 0; i < iterations; i++)
    15cc:	0000                	unimp
    15ce:	7241                	lui	tp,0xffff0
    15d0:	7365                	lui	t1,0xffff9
    15d2:	0100                	addi	s0,sp,128
}
    15d4:	3779                	jal	1562 <iterate+0x6>
    15d6:	00000bbb          	0xbbb
    15da:	de44                	sw	s1,60(a2)
    15dc:	0000                	unimp
    15de:	0100                	addi	s0,sp,128
    15e0:	09490c7b          	0x9490c7b
    15e4:	0000                	unimp
    15e6:	e344                	fsw	fs1,4(a4)
    15e8:	0000                	unimp
    15ea:	0100                	addi	s0,sp,128
    15ec:	0c7c                	addi	a5,sp,540
    15ee:	0949                	addi	s2,s2,18
            res->crclist = res->crc;
    15f0:	0000                	unimp
    15f2:	4300                	lw	s0,0(a4)
    for (i = 0; i < iterations; i++)
    15f4:	01e2                	slli	gp,gp,0x18
    15f6:	0000                	unimp
    15f8:	4601                	li	a2,0
    15fa:	4901                	li	s2,0
    15fc:	0009                	c.nop	2
    15fe:	0100                	addi	s0,sp,128
    1600:	0000165b          	0x165b
{
    1604:	2542                	fld	fa0,16(sp)
    1606:	0004                	0x4
    1608:	0100                	addi	s0,sp,128
    160a:	1346                	slli	t1,t1,0x31
    160c:	0000165b          	0x165b
    MATDAT clipval = matrix_big(val);
    1610:	7241                	lui	tp,0xffff0
    1612:	7365                	lui	t1,0xffff9
{
    1614:	0100                	addi	s0,sp,128
    1616:	2846                	fld	fa6,80(sp)
    1618:	00000bbb          	0xbbb
    161c:	7344                	flw	fs1,36(a4)
    161e:	0001                	nop
    1620:	0100                	addi	s0,sp,128
    1622:	0c48                	addi	a0,sp,532
    1624:	0949                	addi	s2,s2,18
    1626:	0000                	unimp
    1628:	5444                	lw	s1,44(s0)
    162a:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
    162e:	0c49                	addi	s8,s8,18
    1630:	0949                	addi	s2,s2,18
    1632:	0000                	unimp
    1634:	0044                	addi	s1,sp,4
    1636:	0000                	unimp
    1638:	0100                	addi	s0,sp,128
    163a:	0c4a                	slli	s8,s8,0x12
    163c:	0974                	addi	a3,sp,156
    163e:	0000                	unimp
    1640:	4445                	li	s0,17
    1642:	00a1                	addi	ra,ra,8
    MATDAT clipval = matrix_big(val);
    1644:	0000                	unimp
    1646:	5101                	li	sp,-32
    for (i = 0; i < N; i++)
    1648:	4910                	lw	a2,16(a0)
    164a:	0009                	c.nop	2
    164c:	4400                	lw	s0,8(s0)
    164e:	0339                	addi	t1,t1,14
    1650:	0000                	unimp
    1652:	5201                	li	tp,-32
    1654:	4910                	lw	a2,16(a0)
    1656:	0009                	c.nop	2
    1658:	0000                	unimp
    165a:	0f00                	addi	s0,sp,912
    165c:	4904                	lw	s1,16(a0)
    165e:	0009                	c.nop	2
    1660:	4600                	lw	s0,8(a2)
    1662:	000015f3          	csrrw	a1,ustatus,zero
	...
    166e:	9c01                	0x9c01
    1670:	16dc                	addi	a5,sp,868
    1672:	0000                	unimp
    1674:	042e                	slli	s0,s0,0xb
    1676:	0016                	c.slli	zero,0x5
    1678:	ed00                	fsw	fs0,24(a0)
    167a:	2e000017          	auipc	zero,0x2e000
    167e:	1610                	addi	a2,sp,800
    1680:	0000                	unimp
    1682:	1845                	addi	a6,a6,-15
{
    1684:	0000                	unimp
    1686:	1c30                	addi	a2,sp,568
            A[i * N + j] += val;
    1688:	0016                	c.slli	zero,0x5
    168a:	7c00                	flw	fs0,56(s0)
    168c:	0018                	0x18
    168e:	3000                	fld	fs0,32(s0)
    1690:	1628                	addi	a0,sp,808
    1692:	0000                	unimp
    1694:	189a                	slli	a7,a7,0x26
    1696:	0000                	unimp
        for (j = 0; j < N; j++)
    1698:	3430                	fld	fa2,104(s0)
    169a:	0016                	c.slli	zero,0x5
    for (i = 0; i < N; i++)
    169c:	ce00                	sw	s0,24(a2)
    169e:	0018                	0x18
    16a0:	2f00                	fld	fs0,24(a4)
    16a2:	0000                	unimp
    16a4:	0000                	unimp
    16a6:	4130                	lw	a2,64(a0)
    16a8:	0016                	c.slli	zero,0x5
    16aa:	f800                	fsw	fs0,48(s0)
    16ac:	0018                	0x18
    16ae:	3000                	fld	fs0,32(s0)
    16b0:	164d                	addi	a2,a2,-13
    16b2:	0000                	unimp
    16b4:	194e                	slli	s2,s2,0x33
    16b6:	0000                	unimp
    16b8:	0000003b          	0x3b
    16bc:	3800                	fld	fs0,48(s0)
    16be:	001a                	c.slli	zero,0x6
    for (i = 0; i < N; i++)
    16c0:	3b00                	fld	fs0,48(a4)
    16c2:	0000                	unimp
    16c4:	0000                	unimp
    16c6:	1a50                	addi	a2,sp,308
    16c8:	0000                	unimp
    16ca:	0000003f 001a4400 	0x1a44000000003f
    for (i = 0; i < N; i++)
    16d2:	3d00                	fld	fs0,56(a0)
            C[i * N + j] = (MATRES)A[i * N + j] * (MATRES)val;
    16d4:	5a01                	li	s4,-32
    16d6:	7902                	flw	fs2,32(sp)
    16d8:	0028                	addi	a0,sp,8
    16da:	0000                	unimp
    16dc:	a946                	fsd	fa7,144(sp)
    16de:	0015                	c.nop	5
	...
        for (j = 0; j < N; j++)
    16e8:	0100                	addi	s0,sp,128
    16ea:	259c                	fld	fa5,8(a1)
    for (i = 0; i < N; i++)
    16ec:	0018                	0x18
    16ee:	2e00                	fld	fs0,24(a2)
    16f0:	15ba                	slli	a1,a1,0x2e
    16f2:	0000                	unimp
    16f4:	000019cb          	fnmsub.s	fs3,ft0,ft0,ft0,rtz
    16f8:	c42e                	sw	a1,8(sp)
    16fa:	0015                	c.nop	5
    16fc:	3f00                	fld	fs0,56(a4)
    16fe:	001a                	c.slli	zero,0x6
    1700:	2e00                	fld	fs0,24(a2)
    1702:	15ce                	slli	a1,a1,0x33
    1704:	0000                	unimp
    1706:	1a76                	slli	s4,s4,0x3d
    1708:	0000                	unimp
    170a:	da30                	sw	a2,112(a2)
    ee_s16 ret = 0;
    170c:	0015                	c.nop	5
    170e:	ad00                	fsd	fs0,24(a0)
    MATRES tmp = 0, prev = 0, cur = 0;
    1710:	001a                	c.slli	zero,0x6
    1712:	3000                	fld	fs0,32(s0)
    1714:	15e6                	slli	a1,a1,0x39
    1716:	0000                	unimp
    for (i = 0; i < N; i++)
    1718:	1ad6                	slli	s5,s5,0x35
    171a:	0000                	unimp
    171c:	f338                	fsw	fa4,96(a4)
    171e:	0015                	c.nop	5
    1720:	0000                	unimp
    1722:	0000                	unimp
    1724:	2000                	fld	fs0,0(s0)
    1726:	0000                	unimp
    1728:	0100                	addi	s0,sp,128
    172a:	17a2137b          	0x17a2137b
                ret += (cur > prev) ? 1 : 0;
    172e:	0000                	unimp
    1730:	102e                	c.slli	zero,0x2b
    1732:	0016                	c.slli	zero,0x5
    1734:	e900                	fsw	fs0,16(a0)
    1736:	001a                	c.slli	zero,0x6
            cur = C[i * N + j];
    1738:	2e00                	fld	fs0,24(a2)
    173a:	1604                	addi	s1,sp,800
        for (j = 0; j < N; j++)
    173c:	0000                	unimp
    173e:	1b1d                	addi	s6,s6,-25
            cur = C[i * N + j];
    1740:	0000                	unimp
    1742:	0000202f          	amoadd.w	zero,zero,(zero)
            tmp += cur;
    1746:	3000                	fld	fs0,32(s0)
    1748:	161c                	addi	a5,sp,800
    174a:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    174c:	00001b67          	0x1b67
            tmp += cur;
    1750:	2830                	fld	fa2,80(s0)
    1752:	0016                	c.slli	zero,0x5
                ret += 10;
    1754:	9000                	0x9000
    1756:	3000001b          	0x3000001b
                ret += (cur > prev) ? 1 : 0;
    175a:	1634                	addi	a3,sp,808
            if (tmp > clipval)
    175c:	0000                	unimp
    175e:	1bc4                	addi	s1,sp,500
                ret += 10;
    1760:	0000                	unimp
    1762:	a13a                	fsd	fa4,128(sp)
    1764:	0016                	c.slli	zero,0x5
    1766:	5800                	lw	s0,48(s0)
    1768:	0000                	unimp
    176a:	3000                	fld	fs0,32(s0)
                tmp = 0;
    176c:	1641                	addi	a2,a2,-16
    176e:	0000                	unimp
            cur = C[i * N + j];
    1770:	1bff                	0x1bff
    1772:	0000                	unimp
        for (j = 0; j < N; j++)
    1774:	4d30                	lw	a2,88(a0)
    1776:	0016                	c.slli	zero,0x5
    for (i = 0; i < N; i++)
    1778:	5500                	lw	s0,40(a0)
    177a:	001c                	0x1c
    177c:	3b00                	fld	fs0,48(a4)
    177e:	0000                	unimp
    1780:	0000                	unimp
    1782:	1a38                	addi	a4,sp,312
    1784:	0000                	unimp
    1786:	0000003b          	0x3b
    178a:	5000                	lw	s0,32(s0)
    crc = crc16(matrix_sum(N, C, clipval), crc);
    178c:	001a                	c.slli	zero,0x6
    178e:	3f00                	fld	fs0,56(a4)
    1790:	0000                	unimp
    1792:	0000                	unimp
    1794:	1a44                	addi	s1,sp,308
    1796:	0000                	unimp
    1798:	013d                	addi	sp,sp,15
    179a:	025a                	slli	tp,tp,0x16
    for (i = 0; i < N; i++)
    179c:	2879                	jal	183a <matrix_test+0x236>
    179e:	0000                	unimp
    17a0:	0000                	unimp
    17a2:	f33e                	fsw	fa5,164(sp)
    17a4:	0015                	c.nop	5
    17a6:	0000                	unimp
    17a8:	0000                	unimp
    17aa:	8000                	0x8000
    17ac:	0000                	unimp
    17ae:	0100                	addi	s0,sp,128
    crc = crc16(matrix_sum(N, C, clipval), crc);
    17b0:	137c                	addi	a5,sp,428
    17b2:	102e                	c.slli	zero,0x2b
    17b4:	0016                	c.slli	zero,0x5
    17b6:	d200                	sw	s0,32(a2)
    17b8:	001c                	0x1c
    17ba:	2e00                	fld	fs0,24(a2)
    17bc:	1604                	addi	s1,sp,800
    17be:	0000                	unimp
    17c0:	00001cfb          	0x1cfb
    17c4:	0000802f          	0x802f
            C[i] += (MATRES)A[i * N + j] * (MATRES)B[j];
    17c8:	3000                	fld	fs0,32(s0)
    17ca:	161c                	addi	a5,sp,800
    17cc:	0000                	unimp
    17ce:	1d24                	addi	s1,sp,696
    17d0:	0000                	unimp
    17d2:	2830                	fld	fa2,80(s0)
    17d4:	0016                	c.slli	zero,0x5
    17d6:	4d00                	lw	s0,24(a0)
    17d8:	001d                	c.nop	7
    17da:	3000                	fld	fs0,32(s0)
    17dc:	1634                	addi	a3,sp,808
    17de:	0000                	unimp
        for (j = 0; j < N; j++)
    17e0:	1d81                	addi	s11,s11,-32
    17e2:	0000                	unimp
    17e4:	a13a                	fsd	fa4,128(sp)
    17e6:	0016                	c.slli	zero,0x5
    17e8:	a000                	fsd	fs0,0(s0)
    17ea:	0000                	unimp
    17ec:	3000                	fld	fs0,32(s0)
    17ee:	1641                	addi	a2,a2,-16
    for (i = 0; i < N; i++)
    17f0:	0000                	unimp
    17f2:	1dbc                	addi	a5,sp,760
    17f4:	0000                	unimp
    17f6:	4d30                	lw	a2,88(a0)
    ee_s16 ret = 0;
    17f8:	0016                	c.slli	zero,0x5
    17fa:	1200                	addi	s0,sp,288
    MATRES tmp = 0, prev = 0, cur = 0;
    17fc:	001e                	c.slli	zero,0x7
    17fe:	3b00                	fld	fs0,48(a4)
    1800:	0000                	unimp
    1802:	0000                	unimp
    for (i = 0; i < N; i++)
    1804:	1a38                	addi	a4,sp,312
    1806:	0000                	unimp
    1808:	0000003b          	0x3b
        for (j = 0; j < N; j++)
    180c:	5000                	lw	s0,32(s0)
    180e:	001a                	c.slli	zero,0x6
    1810:	3f00                	fld	fs0,56(a4)
    1812:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    1814:	0000                	unimp
    1816:	1a44                	addi	s1,sp,308
        for (j = 0; j < N; j++)
    1818:	0000                	unimp
    181a:	013d                	addi	sp,sp,15
                ret += (cur > prev) ? 1 : 0;
    181c:	025a                	slli	tp,tp,0x16
    181e:	2879                	jal	18bc <matrix_test+0x2b8>
            prev = cur;
    1820:	0000                	unimp
    1822:	0000                	unimp
            cur = C[i * N + j];
    1824:	4600                	lw	s0,8(a2)
    1826:	00001577          	0x1577
	...
            tmp += cur;
    1832:	9c01                	0x9c01
    1834:	1850                	addi	a2,sp,52
    1836:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    1838:	882e                	mv	a6,a1
    183a:	0015                	c.nop	5
            tmp += cur;
    183c:	8f00                	0x8f00
    183e:	001e                	c.slli	zero,0x7
                ret += 10;
    1840:	3200                	fld	fs0,32(a2)
    1842:	1592                	slli	a1,a1,0x24
                ret += (cur > prev) ? 1 : 0;
    1844:	0000                	unimp
    1846:	5b01                	li	s6,-32
            if (tmp > clipval)
    1848:	9c32                	add	s8,s8,a2
    184a:	0015                	c.nop	5
                ret += 10;
    184c:	0100                	addi	s0,sp,128
    184e:	005c                	addi	a5,sp,4
        for (j = 0; j < N; j++)
    1850:	5246                	lw	tp,112(sp)
    1852:	0015                	c.nop	5
	...
            prev = cur;
    185c:	0100                	addi	s0,sp,128
    185e:	729c                	flw	fa5,32(a3)
            cur = C[i * N + j];
    1860:	0018                	0x18
    1862:	3200                	fld	fs0,32(a2)
        for (j = 0; j < N; j++)
    1864:	155f 0000 5a01      	0x5a010000155f
    for (i = 0; i < N; i++)
    186a:	6a32                	flw	fs4,12(sp)
    186c:	0015                	c.nop	5
    186e:	0100                	addi	s0,sp,128
    1870:	4946005b          	0x4946005b
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1874:	000d                	c.nop	3
	...
    187e:	0100                	addi	s0,sp,128
    1880:	e59c                	fsw	fa5,8(a1)
    1882:	0018                	0x18
            C[i * N + j] = 0;
    1884:	2e00                	fld	fs0,24(a2)
    1886:	00000d5b          	0xd5b
    188a:	1ec9                	addi	t4,t4,-14
    188c:	0000                	unimp
    188e:	6832                	flw	fa6,12(sp)
    1890:	000d                	c.nop	3
    1892:	0100                	addi	s0,sp,128
    for (i = 0; i < N; i++)
    1894:	0d752e5b          	0xd752e5b
    1898:	0000                	unimp
    189a:	00001f03          	lh	t5,0(zero) # 0 <_start>
    189e:	8232                	mv	tp,a2
    18a0:	000d                	c.nop	3
    18a2:	0100                	addi	s0,sp,128
    18a4:	2e5d                	jal	1c5a <core_init_matrix+0xa2>
    18a6:	00000d8f          	0xd8f
    18aa:	00001f2f          	0x1f2f
    18ae:	9c2e                	add	s8,s8,a1
                tmp = 0;
    18b0:	000d                	c.nop	3
    18b2:	5000                	lw	s0,32(s0)
    18b4:	001f 3000 0da9      	0xda93000001f
        for (j = 0; j < N; j++)
    18ba:	0000                	unimp
    18bc:	1f7c                	addi	a5,sp,956
    18be:	0000                	unimp
    18c0:	522d                	li	tp,-21
    18c2:	0015                	c.nop	5
    18c4:	0000                	unimp
    18c6:	0000                	unimp
            for (k = 0; k < N; k++)
    18c8:	3000                	fld	fs0,32(s0)
    18ca:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    18ce:	0165                	addi	sp,sp,25
    18d0:	2e05                	jal	1c00 <core_init_matrix+0x48>
    18d2:	156a                	slli	a0,a0,0x3a
            for (k = 0; k < N; k++)
    18d4:	0000                	unimp
    18d6:	00001f8f          	0x1f8f
    18da:	5f2e                	lw	t5,232(sp)
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    18dc:	0015                	c.nop	5
    18de:	a200                	fsd	fs0,0(a2)
    18e0:	001f 0000 4600      	0x46000000001f
    18e6:	00000d0f          	0xd0f
	...
        for (j = 0; j < N; j++)
    18f2:	9c01                	0x9c01
    18f4:	1910                	addi	a2,sp,176
    18f6:	0000                	unimp
    18f8:	212e                	fld	ft2,200(sp)
    18fa:	000d                	c.nop	3
    18fc:	b500                	fsd	fs0,40(a0)
    18fe:	001f 4700 0d2e      	0xd2e4700001f
    for (i = 0; i < N; i++)
    1904:	0000                	unimp
    1906:	5c01                	li	s8,-32
    1908:	000d3b47          	fmsub.s	fs6,fs10,ft0,ft0,rup
    190c:	0100                	addi	s0,sp,128
    190e:	005f d546 000c      	0xcd546005f
	...
    MATRES tmp = 0, prev = 0, cur = 0;
    191c:	0100                	addi	s0,sp,128
    191e:	399c                	fld	fa5,48(a1)
    for (i = 0; i < N; i++)
    1920:	0019                	c.nop	6
    1922:	3200                	fld	fs0,32(a2)
    1924:	00000ce7          	jalr	s9,zero # 0 <_start>
        for (j = 0; j < N; j++)
    1928:	5a01                	li	s4,-32
    192a:	f432                	fsw	fa2,40(sp)
    192c:	000c                	0xc
    192e:	0100                	addi	s0,sp,128
                ret += (cur > prev) ? 1 : 0;
    1930:	0d01475b          	0xd01475b
        for (j = 0; j < N; j++)
    1934:	0000                	unimp
    1936:	5d01                	li	s10,-32
                ret += (cur > prev) ? 1 : 0;
    1938:	4600                	lw	s0,8(a2)
    193a:	0ca8                	addi	a0,sp,600
	...
        for (j = 0; j < N; j++)
    1944:	0000                	unimp
    1946:	9c01                	0x9c01
            cur = C[i * N + j];
    1948:	197d                	addi	s2,s2,-1
    194a:	0000                	unimp
            tmp += cur;
    194c:	ba2e                	fsd	fa1,304(sp)
    194e:	000c                	0xc
    1950:	d300                	sw	s0,32(a4)
    1952:	001f 3200 0cc7      	0xcc73200001f
    1958:	0000                	unimp
    195a:	5b01                	li	s6,-32
                ret += 10;
    195c:	000ca833          	sltz	a6,s9
	...
    1968:	0100                	addi	s0,sp,128
    196a:	340101b3          	0x340101b3
        for (j = 0; j < N; j++)
    196e:	00000cc7          	fmsub.s	fs9,ft0,ft0,ft0,rne
                ret += 10;
    1972:	ba2e                	fsd	fa1,304(sp)
                tmp = 0;
    1974:	000c                	0xc
    1976:	1500                	addi	s0,sp,672
            prev = cur;
    1978:	0020                	addi	s0,sp,8
    197a:	0000                	unimp
            cur = C[i * N + j];
    197c:	4600                	lw	s0,8(a2)
    197e:	0c6e                	slli	s8,s8,0x1b
	...
    for (i = 0; i < N; i++)
    1988:	0000                	unimp
    198a:	9c01                	0x9c01
    198c:	19ac                	addi	a1,sp,248
    198e:	0000                	unimp
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1990:	802e                	c.mv	zero,a1
    1992:	000c                	0xc
    for (i = 0; i < N; i++)
    1994:	3300                	fld	fs0,32(a4)
    1996:	0020                	addi	s0,sp,8
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1998:	3000                	fld	fs0,32(s0)
    199a:	0c8d                	addi	s9,s9,3
    199c:	0000                	unimp
    199e:	00002067          	0x2067
    19a2:	9a30                	0x9a30
    19a4:	000c                	0xc
    19a6:	9c00                	0x9c00
    for (i = 0; i < N; i++)
    19a8:	0020                	addi	s0,sp,8
    19aa:	0000                	unimp
    19ac:	c146                	sw	a7,128(sp)
    19ae:	0000000b          	0xb
    19b2:	0000                	unimp
    19b4:	0000                	unimp
    19b6:	0000                	unimp
    19b8:	0100                	addi	s0,sp,128
    19ba:	389c                	fld	fa5,48(s1)
                tmp = 0;
    19bc:	001a                	c.slli	zero,0x6
    19be:	2e00                	fld	fs0,24(a2)
    19c0:	00000bd3          	fadd.s	fs7,ft0,ft0,rne
        for (j = 0; j < N; j++)
    19c4:	20ba                	fld	ft1,392(sp)
    19c6:	0000                	unimp
    19c8:	e02e                	fsw	fa1,0(sp)
    19ca:	1d00000b          	0x1d00000b
    19ce:	0021                	c.nop	8
    19d0:	2e00                	fld	fs0,24(a2)
    19d2:	0bed                	addi	s7,s7,27
            for (k = 0; k < N; k++)
    19d4:	0000                	unimp
    19d6:	2154                	fld	fa3,128(a0)
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    19d8:	0000                	unimp
    19da:	fa30                	fsw	fa2,112(a2)
    19dc:	8b00000b          	0x8b00000b
            for (k = 0; k < N; k++)
    19e0:	0021                	c.nop	8
    19e2:	3000                	fld	fs0,32(s0)
    19e4:	0c05                	addi	s8,s8,1
    19e6:	0000                	unimp
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    19e8:	2202                	fld	ft4,0(sp)
    19ea:	0000                	unimp
                C[i * N + j] += bit_extract(tmp, 2, 4) * bit_extract(tmp, 5, 7);
    19ec:	1030                	addi	a2,sp,40
    19ee:	000c                	0xc
    19f0:	5900                	lw	s0,48(a0)
    19f2:	0022                	c.slli	zero,0x8
    19f4:	3000                	fld	fs0,32(s0)
    19f6:	00000c1b          	0xc1b
    19fa:	000022a3          	sw	zero,5(zero) # 5 <_start+0x5>
    19fe:	2830                	fld	fa2,80(s0)
    1a00:	000c                	0xc
    1a02:	0600                	addi	s0,sp,768
    1a04:	30000023          	sb	zero,768(zero) # 300 <main+0x288>
            for (k = 0; k < N; k++)
    1a08:	0c35                	addi	s8,s8,13
    1a0a:	0000                	unimp
    1a0c:	2331                	jal	1f18 <core_init_state+0x164>
    1a0e:	0000                	unimp
        for (j = 0; j < N; j++)
    1a10:	4230                	lw	a2,64(a2)
    1a12:	000c                	0xc
    1a14:	7300                	flw	fs0,32(a4)
    1a16:	30000023          	sb	zero,768(zero) # 300 <main+0x288>
    1a1a:	00000c4f          	fnmadd.s	fs8,ft0,ft0,ft0,rne
    1a1e:	2392                	fld	ft7,256(sp)
    for (i = 0; i < N; i++)
    1a20:	0000                	unimp
    1a22:	5c30                	lw	a2,120(s0)
    1a24:	000c                	0xc
    1a26:	a500                	fsd	fs0,8(a0)
    1a28:	48000023          	sb	zero,1152(zero) # 480 <main+0x408>
    1a2c:	0000                	unimp
    1a2e:	0000                	unimp
    ee_s16 ret = 0;
    1a30:	013d                	addi	sp,sp,15
    1a32:	025c                	addi	a5,sp,260
    MATRES tmp = 0, prev = 0, cur = 0;
    1a34:	0088                	addi	a0,sp,64
    1a36:	0000                	unimp
    1a38:	7c49                	lui	s8,0xffff2
    1a3a:	7c000003          	lb	zero,1984(zero) # 7c0 <main+0x748>
    for (i = 0; i < N; i++)
    1a3e:	08000003          	lb	zero,128(zero) # 80 <main+0x8>
    1a42:	0834                	addi	a3,sp,24
        for (j = 0; j < N; j++)
    1a44:	df49                	beqz	a4,19de <matrix_test+0x3da>
    1a46:	df000003          	lb	zero,-528(zero) # fffffdf0 <__freertos_irq_stack_top+0xfefefdf0>
    1a4a:	08000003          	lb	zero,128(zero) # 80 <main+0x8>
                ret += (cur > prev) ? 1 : 0;
    1a4e:	089f 1c49 0002      	0x21c49089f
    1a54:	1c00                	addi	s0,sp,560
    1a56:	0002                	c.slli64	zero
            prev = cur;
    1a58:	0800                	addi	s0,sp,16
    1a5a:	1e490893          	addi	a7,s2,484 # fffe01e4 <__freertos_irq_stack_top+0xfefd01e4>
            cur = C[i * N + j];
    1a5e:	0000                	unimp
        for (j = 0; j < N; j++)
    1a60:	1e00                	addi	s0,sp,816
    1a62:	0000                	unimp
            cur = C[i * N + j];
    1a64:	0800                	addi	s0,sp,16
    1a66:	fa000833          	0xfa000833
            tmp += cur;
    1a6a:	04000013          	li	zero,64
    1a6e:	0500                	addi	s0,sp,640
                ret += (cur > prev) ? 1 : 0;
    1a70:	0004                	0x4
    1a72:	0400                	addi	s0,sp,512
            tmp += cur;
    1a74:	8601                	c.srai64	a2
    1a76:	0006                	c.slli	zero,0x1
                ret += 10;
    1a78:	0c00                	addi	s0,sp,528
    1a7a:	08a5                	addi	a7,a7,9
                ret += (cur > prev) ? 1 : 0;
    1a7c:	0000                	unimp
    1a7e:	0000025b          	0x25b
            if (tmp > clipval)
    1a82:	0410                	addi	a2,sp,512
                ret += 10;
    1a84:	0000                	unimp
    1a86:	0000                	unimp
        for (j = 0; j < N; j++)
    1a88:	0000                	unimp
    1a8a:	24b6                	fld	fs1,328(sp)
                ret += 10;
    1a8c:	0000                	unimp
    1a8e:	0102                	c.slli64	sp
                tmp = 0;
    1a90:	c606                	sw	ra,12(sp)
    1a92:	0005                	c.nop	1
            prev = cur;
    1a94:	0200                	addi	s0,sp,256
    1a96:	0801                	addi	a6,a6,0
            cur = C[i * N + j];
    1a98:	05c4                	addi	s1,sp,708
    1a9a:	0000                	unimp
        for (j = 0; j < N; j++)
    1a9c:	0202                	c.slli64	tp
    1a9e:	7a05                	lui	s4,0xfffe1
    for (i = 0; i < N; i++)
    1aa0:	0004                	0x4
    1aa2:	0200                	addi	s0,sp,256
    1aa4:	0702                	c.slli64	a4
    1aa6:	070c                	addi	a1,sp,896
    1aa8:	0000                	unimp
    1aaa:	0402                	c.slli64	s0
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1aac:	8805                	andi	s0,s0,1
    1aae:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
    1ab2:	0704                	addi	s1,sp,896
    1ab4:	019f 0000 0802      	0x8020000019f
    for (i = 0; i < N; i++)
    1aba:	8305                	srli	a4,a4,0x1
                tmp = 0;
    1abc:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
        for (j = 0; j < N; j++)
    1ac0:	0708                	addi	a0,sp,896
    1ac2:	019a                	slli	gp,gp,0x6
            A[i * N + j] += val;
    1ac4:	0000                	unimp
    1ac6:	69050403          	lb	s0,1680(a0) # 2b9a <crcu32+0x40a>
    1aca:	746e                	flw	fs0,248(sp)
        for (j = 0; j < N; j++)
    1acc:	0200                	addi	s0,sp,256
    1ace:	0704                	addi	s1,sp,896
            A[i * N + j] += val;
    1ad0:	01a4                	addi	s1,sp,200
    1ad2:	0000                	unimp
    1ad4:	1002                	c.slli	zero,0x20
    1ad6:	3d04                	fld	fs1,56(a0)
        for (j = 0; j < N; j++)
    1ad8:	0004                	0x4
    1ada:	0400                	addi	s0,sp,512
    for (i = 0; i < N; i++)
    1adc:	057f                	0x57f
    1ade:	0000                	unimp
    1ae0:	6502                	flw	fa0,0(sp)
    1ae2:	1701                	addi	a4,a4,-32
    1ae4:	0064                	addi	s1,sp,12
    1ae6:	0000                	unimp
}
    1ae8:	3505                	jal	1908 <matrix_test+0x304>
    1aea:	03000007          	0x3000007
    1aee:	0e2e                	slli	t3,t3,0xb
    return crc;
    1af0:	0041                	c.nop	16
    1af2:	0000                	unimp
}
    1af4:	f005                	bnez	s0,1a14 <matrix_test+0x410>
    1af6:	0000                	unimp
    1af8:	0300                	addi	s0,sp,384
    1afa:	0e74                	addi	a3,sp,796
    1afc:	0041                	c.nop	16
    1afe:	0000                	unimp
    1b00:	fc05                	bnez	s0,1a38 <matrix_test+0x434>
    1b02:	0006                	c.slli	zero,0x1
    1b04:	0300                	addi	s0,sp,384
    1b06:	005d1793          	slli	a5,s10,0x5
    1b0a:	0000                	unimp
    1b0c:	0406                	slli	s0,s0,0x1
    1b0e:	c503a503          	lw	a0,-944(t2)
    1b12:	0000                	unimp
    1b14:	0700                	addi	s0,sp,896
    1b16:	0326                	slli	t1,t1,0x9
    1b18:	0000                	unimp
    1b1a:	720ca703          	lw	a4,1824(s9)
    1b1e:	0000                	unimp
    return crc;
    1b20:	0700                	addi	s0,sp,896
    1b22:	04dd                	addi	s1,s1,23
}
    1b24:	0000                	unimp
    1b26:	c513a803          	lw	a6,-943(t2)
    1b2a:	0000                	unimp
            C[i * N + j] = 0;
    1b2c:	0000                	unimp
    1b2e:	2c08                	fld	fa0,24(s0)
    1b30:	0000                	unimp
    1b32:	d500                	sw	s0,40(a0)
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b34:	0000                	unimp
    1b36:	0900                	addi	s0,sp,144
    1b38:	0064                	addi	s1,sp,12
    1b3a:	0000                	unimp
    1b3c:	080a0003          	lb	zero,128(s4) # fffe1080 <__freertos_irq_stack_top+0xfefd1080>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b40:	f909a203          	lw	tp,-112(s3) # ffff5f90 <__freertos_irq_stack_top+0xfefe5f90>
    1b44:	0000                	unimp
    1b46:	0b00                	addi	s0,sp,400
    1b48:	0166                	slli	sp,sp,0x19
    1b4a:	0000                	unimp
    1b4c:	5d07a403          	lw	s0,1488(a5)
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b50:	0000                	unimp
    1b52:	0000                	unimp
    1b54:	0002960b          	0x2960b
    1b58:	0300                	addi	s0,sp,384
    1b5a:	05a9                	addi	a1,a1,10
    1b5c:	000000a3          	sb	zero,1(zero) # 1 <_start+0x1>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b60:	0004                	0x4
    1b62:	0705                	addi	a4,a4,1
    1b64:	0004                	0x4
    1b66:	0300                	addi	s0,sp,384
    1b68:	03aa                	slli	t2,t2,0xa
    1b6a:	00d5                	addi	ra,ra,21
    1b6c:	0000                	unimp
    1b6e:	040c                	addi	a1,sp,512
    matrix_add_const(N, A, -val); /* return matrix to initial value */
    1b70:	bb05                	j	18a0 <matrix_test+0x29c>
    1b72:	04000003          	lb	zero,64(zero) # 40 <_start+0x40>
{
    1b76:	1916                	slli	s2,s2,0x25
    1b78:	0048                	addi	a0,sp,4
    1b7a:	0000                	unimp
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1b7c:	b005                	j	139c <core_list_init+0xac>
    1b7e:	0000                	unimp
{
    1b80:	0500                	addi	s0,sp,640
    1b82:	0d0c                	addi	a1,sp,656
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1b84:	005d                	c.nop	23
    1b86:	0000                	unimp
    1b88:	0e05                	addi	t3,t3,1
    1b8a:	04000003          	lb	zero,64(zero) # 40 <_start+0x40>
    1b8e:	01131b23          	sh	a7,22(t1) # ffff9016 <__freertos_irq_stack_top+0xfefe9016>
    1b92:	0000                	unimp
{
    1b94:	2a0d                	jal	1cc6 <core_init_matrix+0x10e>
    1b96:	0001                	nop
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1b98:	1800                	addi	s0,sp,48
    1b9a:	3404                	fld	fs1,40(s0)
    1b9c:	8508                	0x8508
    1b9e:	0001                	nop
    1ba0:	0b00                	addi	s0,sp,400
    1ba2:	079f 0000 3604      	0x36040000079f
}
    1ba8:	00018513          	mv	a0,gp
    1bac:	0000                	unimp
    1bae:	5f0e                	lw	t5,224(sp)
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1bb0:	3704006b          	0x3704006b
    1bb4:	00005d07          	0x5d07
{
    1bb8:	0400                	addi	s0,sp,512
    1bba:	0005420b          	0x5420b
    1bbe:	0400                	addi	s0,sp,512
    1bc0:	005d0b37          	lui	s6,0x5d0
    1bc4:	0000                	unimp
    1bc6:	0b08                	addi	a0,sp,400
    1bc8:	04ba                	slli	s1,s1,0xe
    1bca:	0000                	unimp
    if (seed == 0)
    1bcc:	3704                	fld	fs1,40(a4)
    1bce:	5d14                	lw	a3,56(a0)
        seed = 1;
    1bd0:	0000                	unimp
    1bd2:	0c00                	addi	s0,sp,528
    1bd4:	0001c60b          	0x1c60b
    1bd8:	0400                	addi	s0,sp,512
    1bda:	005d1b37          	lui	s6,0x5d1
    1bde:	0000                	unimp
    while (j < blksize)
    1be0:	0e10                	addi	a2,sp,784
    1be2:	785f 0400 0b38      	0xb380400785f
    1be8:	0000018b          	0x18b
        i++;
    1bec:	0014                	0x14
    1bee:	012b040f          	0x12b040f
    1bf2:	0000                	unimp
        j = i * i * 2 * 4;
    1bf4:	0708                	addi	a0,sp,896
    1bf6:	0001                	nop
    1bf8:	9b00                	0x9b00
    1bfa:	0001                	nop
    while (j < blksize)
    1bfc:	0900                	addi	s0,sp,144
    1bfe:	0064                	addi	s1,sp,12
    B = A + N * N;
    1c00:	0000                	unimp
    1c02:	0000                	unimp
    1c04:	6d0d                	lui	s10,0x3
    1c06:	0005                	c.nop	1
    1c08:	2400                	fld	fs0,8(s0)
    1c0a:	3c04                	fld	fs1,56(s0)
    1c0c:	1e08                	addi	a0,sp,816
    1c0e:	0002                	c.slli64	zero
    for (i = 0; i < N; i++)
    1c10:	0b00                	addi	s0,sp,400
    1c12:	022d                	addi	tp,tp,11
            seed         = ((order * seed) % 65536);
    1c14:	0000                	unimp
    1c16:	3e04                	fld	fs1,56(a2)
    1c18:	5d09                	li	s10,-30
    1c1a:	0000                	unimp
    B = A + N * N;
    1c1c:	0000                	unimp
    1c1e:	0001780b          	0x1780b
    1c22:	0400                	addi	s0,sp,512
    1c24:	005d093f 0b040000 	0xb040000005d093f
            seed         = ((order * seed) % 65536);
    1c2c:	0156                	slli	sp,sp,0x15
    1c2e:	0000                	unimp
        seed = 1;
    1c30:	4004                	lw	s1,0(s0)
    1c32:	5d09                	li	s10,-30
        for (j = 0; j < N; j++)
    1c34:	0000                	unimp
    1c36:	0800                	addi	s0,sp,16
            seed         = ((order * seed) % 65536);
    1c38:	0002c60b          	0x2c60b
    1c3c:	0400                	addi	s0,sp,512
    1c3e:	0941                	addi	s2,s2,16
    1c40:	005d                	c.nop	23
    1c42:	0000                	unimp
            A[i * N + j] = val;
    1c44:	0b0c                	addi	a1,sp,400
    1c46:	0434                	addi	a3,sp,520
    1c48:	0000                	unimp
    1c4a:	4204                	lw	s1,0(a2)
        for (j = 0; j < N; j++)
    1c4c:	5d09                	li	s10,-30
    1c4e:	0000                	unimp
            val          = (seed + order);
    1c50:	1000                	addi	s0,sp,32
    1c52:	0004f70b          	0x4f70b
            seed         = ((order * seed) % 65536);
    1c56:	0400                	addi	s0,sp,512
    1c58:	005d0943          	fmadd.s	fs2,fs10,ft5,ft0,rne
    1c5c:	0000                	unimp
    1c5e:	0b14                	addi	a3,sp,400
    1c60:	0132                	slli	sp,sp,0xc
    1c62:	0000                	unimp
    1c64:	4404                	lw	s1,8(s0)
    1c66:	5d09                	li	s10,-30
            val          = (seed + order);
    1c68:	0000                	unimp
    1c6a:	1800                	addi	s0,sp,48
    1c6c:	0002360b          	0x2360b
    1c70:	0400                	addi	s0,sp,512
    1c72:	0945                	addi	s2,s2,17
            val          = (val + order);
    1c74:	005d                	c.nop	23
    1c76:	0000                	unimp
            B[i * N + j] = val;
    1c78:	0b1c                	addi	a5,sp,400
    1c7a:	041a                	slli	s0,s0,0x6
            val          = matrix_clip(val, 1);
    1c7c:	0000                	unimp
    1c7e:	4604                	lw	s1,8(a2)
            A[i * N + j] = val;
    1c80:	5d09                	li	s10,-30
    1c82:	0000                	unimp
        for (j = 0; j < N; j++)
    1c84:	2000                	fld	fs0,0(s0)
    1c86:	1000                	addi	s0,sp,32
    for (i = 0; i < N; i++)
    1c88:	0029                	c.nop	10
    1c8a:	0000                	unimp
    1c8c:	0108                	addi	a0,sp,128
    1c8e:	4f04                	lw	s1,24(a4)
    1c90:	6308                	flw	fa0,0(a4)
    1c92:	0002                	c.slli64	zero
    p->C = (MATRES *)align_mem(B + N * N);
    1c94:	0b00                	addi	s0,sp,400
    1c96:	0412                	slli	s0,s0,0x4
    1c98:	0000                	unimp
    1c9a:	5004                	lw	s1,32(s0)
}
    1c9c:	630a                	flw	ft6,128(sp)
    1c9e:	0002                	c.slli64	zero
    p->C = (MATRES *)align_mem(B + N * N);
    1ca0:	0000                	unimp
    1ca2:	0005a90b          	0x5a90b
    1ca6:	0400                	addi	s0,sp,512
    p->A = A;
    1ca8:	0951                	addi	s2,s2,20
    1caa:	00000263          	beqz	zero,1cae <core_init_matrix+0xf6>
    p->N = N;
    1cae:	1180                	addi	s0,sp,224
    p->B = B;
    1cb0:	0726                	slli	a4,a4,0x9
    1cb2:	0000                	unimp
    p->C = (MATRES *)align_mem(B + N * N);
    1cb4:	5304                	lw	s1,32(a4)
    1cb6:	070a                	slli	a4,a4,0x2
}
    1cb8:	0001                	nop
    1cba:	0000                	unimp
    1cbc:	1101                	addi	sp,sp,-32
    1cbe:	0784                	addi	s1,sp,960
    1cc0:	0000                	unimp
    1cc2:	5604                	lw	s1,40(a2)
    1cc4:	070a                	slli	a4,a4,0x2
    1cc6:	0001                	nop
    B = A + N * N;
    1cc8:	0400                	addi	s0,sp,512
    1cca:	0001                	nop
    1ccc:	0508                	addi	a0,sp,640
    1cce:	0001                	nop
    N = i - 1;
    1cd0:	7300                	flw	fs0,32(a4)
    1cd2:	0002                	c.slli64	zero
    B = A + N * N;
    1cd4:	0900                	addi	s0,sp,144
    1cd6:	0064                	addi	s1,sp,12
    1cd8:	0000                	unimp
    1cda:	001f 6010 0004      	0x46010001f
start_time(void) {
    1ce0:	9000                	0x9000
    1ce2:	0401                	addi	s0,s0,0
    timer_0 = timer_getms();
    1ce4:	0862                	slli	a6,a6,0x18
    1ce6:	02b6                	slli	t0,t0,0xd
    1ce8:	0000                	unimp
    1cea:	00079f0b          	0x79f0b
}
    1cee:	0400                	addi	s0,sp,512
    timer_0 = timer_getms();
    1cf0:	02b61263          	bne	a2,a1,1d14 <stop_time+0x10>
    1cf4:	0000                	unimp
    1cf6:	0b00                	addi	s0,sp,400
    1cf8:	0245                	addi	tp,tp,17
    1cfa:	0000                	unimp
}
    1cfc:	6404                	flw	fs1,8(s0)
    1cfe:	5d06                	lw	s10,96(sp)
    1d00:	0000                	unimp
    1d02:	0400                	addi	s0,sp,512
stop_time(void) {
    1d04:	0001090b          	0x1090b
    1d08:	0400                	addi	s0,sp,512
    1d0a:	0966                	slli	s2,s2,0x19
    timer_1 = timer_getms();
    1d0c:	02bc                	addi	a5,sp,328
    1d0e:	0000                	unimp
    1d10:	0b08                	addi	a0,sp,400
    1d12:	0029                	c.nop	10
}
    1d14:	0000                	unimp
    1d16:	6704                	flw	fs1,8(a4)
    timer_1 = timer_getms();
    1d18:	1e1e                	slli	t3,t3,0x27
    1d1a:	0002                	c.slli64	zero
    1d1c:	8800                	0x8800
    1d1e:	0f00                	addi	s0,sp,912
    1d20:	7304                	flw	fs1,32(a4)
    1d22:	0002                	c.slli64	zero
}
    1d24:	0800                	addi	s0,sp,16
    1d26:	02cc                	addi	a1,sp,324
    1d28:	0000                	unimp
    1d2a:	02cc                	addi	a1,sp,324
    return timer_1 - timer_0;
    1d2c:	0000                	unimp
    1d2e:	6409                	lui	s0,0x2
    1d30:	0000                	unimp
    1d32:	1f00                	addi	s0,sp,944
    1d34:	0f00                	addi	s0,sp,912
    1d36:	d204                	sw	s1,32(a2)
    1d38:	0002                	c.slli64	zero
    1d3a:	1200                	addi	s0,sp,288
}
    1d3c:	360d                	jal	185e <matrix_test+0x25a>
    1d3e:	0006                	c.slli	zero,0x1
    1d40:	0800                	addi	s0,sp,16
    1d42:	7a04                	flw	fs1,48(a2)
time_in_secs(CORE_TICKS ticks) {
    1d44:	fb08                	fsw	fa0,48(a4)
    1d46:	0002                	c.slli64	zero
    1d48:	0b00                	addi	s0,sp,400
    1d4a:	03a5                	addi	t2,t2,9
    return ((double)ticks) / 1000.0;
    1d4c:	0000                	unimp
    1d4e:	7b04                	flw	fs1,48(a4)
    1d50:	fb11                	bnez	a4,1c64 <core_init_matrix+0xac>
    1d52:	0002                	c.slli64	zero
    1d54:	0000                	unimp
    1d56:	00072f0b          	0x72f0b
    1d5a:	0400                	addi	s0,sp,512
    1d5c:	067c                	addi	a5,sp,780
    1d5e:	005d                	c.nop	23
    1d60:	0000                	unimp
    1d62:	0004                	0x4
    1d64:	002c040f          	0x2c040f
}
    1d68:	0000                	unimp
    1d6a:	be0d                	j	189c <matrix_test+0x298>
    1d6c:	0001                	nop
    1d6e:	6800                	flw	fs0,16(s0)
    1d70:	ba04                	fsd	fs1,48(a2)
    1d72:	4408                	lw	a0,8(s0)
portable_init(core_portable* p, int* argc, char* argv[]) {
    1d74:	0004                	0x4
    1d76:	0e00                	addi	s0,sp,784
    1d78:	705f 0400 12bb      	0x12bb0400705f
    1d7e:	000002fb          	0x2fb
    printf("start run!!\n");
    1d82:	0e00                	addi	s0,sp,784
    1d84:	725f 0400 07bc      	0x7bc0400725f
portable_init(core_portable* p, int* argc, char* argv[]) {
    1d8a:	005d                	c.nop	23
    printf("start run!!\n");
    1d8c:	0000                	unimp
    1d8e:	0e04                	addi	s1,sp,784
    1d90:	775f 0400 07bd      	0x7bd0400775f
    p->portable_id = 1;
    1d96:	005d                	c.nop	23
    1d98:	0000                	unimp
    1d9a:	0b08                	addi	a0,sp,400
}
    1d9c:	007f                	0x7f
    1d9e:	0000                	unimp
    1da0:	be04                	fsd	fs1,56(a2)
    1da2:	3309                	jal	1aa4 <matrix_test+0x4a0>
    1da4:	0000                	unimp
    1da6:	0c00                	addi	s0,sp,528
    1da8:	0003d90b          	0x3d90b
    p->portable_id = 0;
    1dac:	0400                	addi	s0,sp,512
    1dae:	003309bf 0e0e0000 	0xe0e0000003309bf
    size--;
    1db6:	625f 0066 c004      	0xc0040066625f
{
    1dbc:	d311                	beqz	a4,1cc0 <core_init_matrix+0x108>
    1dbe:	0002                	c.slli64	zero
    while ((total + next + 1) < size)
    1dc0:	1000                	addi	s0,sp,32
    1dc2:	0000760b          	0x760b
    1dc6:	0400                	addi	s0,sp,512
    1dc8:	07c1                	addi	a5,a5,16
    1dca:	005d                	c.nop	23
    1dcc:	0000                	unimp
    1dce:	0b18                	addi	a4,sp,400
        switch (seed & 0x7)
    1dd0:	0114                	addi	a3,sp,128
    1dd2:	0000                	unimp
    1dd4:	c804                	sw	s1,16(s0)
    1dd6:	050a                	slli	a0,a0,0x2
{
    1dd8:	0001                	nop
    1dda:	1c00                	addi	s0,sp,560
        switch (seed & 0x7)
    1ddc:	0000c20b          	0xc20b
                buf  = intpat[(seed >> 3) & 0x3];
    1de0:	0400                	addi	s0,sp,512
    1de2:	1dca                	slli	s11,s11,0x32
        switch (seed & 0x7)
    1de4:	05c8                	addi	a0,sp,708
    1de6:	0000                	unimp
                buf  = errpat[(seed >> 3) & 0x3];
    1de8:	0b20                	addi	s0,sp,408
    1dea:	0449                	addi	s0,s0,18
                buf  = scipat[(seed >> 3) & 0x3];
    1dec:	0000                	unimp
    1dee:	cc04                	sw	s1,24(s0)
                buf  = floatpat[(seed >> 3) & 0x3];
    1df0:	f21d                	bnez	a2,1d16 <stop_time+0x12>
    1df2:	0005                	c.nop	1
    1df4:	2400                	fld	fs0,8(s0)
    1df6:	0007b00b          	0x7b00b
{
    1dfa:	0400                	addi	s0,sp,512
    1dfc:	06160dcf          	fnmadd.q	fs11,fa2,ft1,ft0,rne
        switch (seed & 0x7)
    1e00:	0000                	unimp
    1e02:	0b28                	addi	a0,sp,408
    1e04:	0332                	slli	t1,t1,0xc
    1e06:	0000                	unimp
    ee_u32 total = 0, next = 0, i;
    1e08:	d004                	sw	s1,32(s0)
    1e0a:	3009                	jal	160c <matrix_test+0x8>
                buf  = intpat[(seed >> 3) & 0x3];
    1e0c:	0006                	c.slli	zero,0x1
    1e0e:	2c00                	fld	fs0,24(s0)
        switch (seed & 0x7)
    1e10:	5f0e                	lw	t5,224(sp)
    1e12:	6275                	lui	tp,0x1d
                buf  = errpat[(seed >> 3) & 0x3];
    1e14:	0400                	addi	s0,sp,512
    1e16:	02d311d3          	fadd.d	ft3,ft6,fa3,rtz
                next = 8;
    1e1a:	0000                	unimp
                buf  = scipat[(seed >> 3) & 0x3];
    1e1c:	0e30                	addi	a2,sp,792
    1e1e:	755f 0070 d404      	0xd4040070755f
            *(p + total + i) = ',';
    1e24:	fb12                	fsw	ft4,180(sp)
    1e26:	0002                	c.slli64	zero
    1e28:	3800                	fld	fs0,48(s0)
    1e2a:	5f0e                	lw	t5,224(sp)
        switch (seed & 0x7)
    1e2c:	7275                	lui	tp,0xffffd
    1e2e:	0400                	addi	s0,sp,512
    1e30:	07d5                	addi	a5,a5,21
    1e32:	005d                	c.nop	23
    1e34:	0000                	unimp
    1e36:	0b3c                	addi	a5,sp,408
    1e38:	07e0                	addi	s0,sp,972
    1e3a:	0000                	unimp
                buf  = errpat[(seed >> 3) & 0x3];
    1e3c:	d804                	sw	s1,48(s0)
    1e3e:	3611                	jal	1942 <matrix_test+0x33e>
        switch (seed & 0x7)
    1e40:	0006                	c.slli	zero,0x1
    1e42:	4000                	lw	s0,0(s0)
                buf  = floatpat[(seed >> 3) & 0x3];
    1e44:	00073c0b          	0x73c0b
    1e48:	0400                	addi	s0,sp,512
    1e4a:	11d9                	addi	gp,gp,-10
    1e4c:	0646                	slli	a2,a2,0x11
    1e4e:	0000                	unimp
    while ((total + next + 1) < size)
    1e50:	6c5f0e43          	0x6c5f0e43
                buf  = errpat[(seed >> 3) & 0x3];
    1e54:	0062                	c.slli	zero,0x18
    1e56:	dc04                	sw	s1,56(s0)
                break;
    1e58:	d311                	beqz	a4,1d5c <time_in_secs+0x18>
    1e5a:	0002                	c.slli64	zero
    while ((total + next + 1) < size)
    1e5c:	4400                	lw	s0,8(s0)
    1e5e:	0005640b          	0x5640b
                next = 8;
    1e62:	0400                	addi	s0,sp,512
                *(p + total + i) = buf[i];
    1e64:	07df 005d 0000      	0x5d07df
    1e6a:	0b4c                	addi	a1,sp,404
    1e6c:	01ff                	0x1ff
    1e6e:	0000                	unimp
    1e70:	e004                	fsw	fs1,0(s0)
    1e72:	7f0a                	flw	ft10,160(sp)
    1e74:	0000                	unimp
    1e76:	5000                	lw	s0,32(s0)
    1e78:	0001720b          	0x1720b
    1e7c:	0400                	addi	s0,sp,512
    1e7e:	046212e3          	bne	tp,t1,26c2 <crcu16+0x1b2>
    1e82:	0000                	unimp
    1e84:	0b54                	addi	a3,sp,404
    1e86:	0572                	slli	a0,a0,0x1c
            for (i = 0; i < next; i++)
    1e88:	0000                	unimp
    1e8a:	e704                	fsw	fs1,8(a4)
                *(p + total + i) = buf[i];
    1e8c:	1f0c                	addi	a1,sp,944
    1e8e:	0001                	nop
    1e90:	5800                	lw	s0,48(s0)
    1e92:	0004680b          	0x4680b
    1e96:	0400                	addi	s0,sp,512
    1e98:	0ee9                	addi	t4,t4,26
    1e9a:	00f9                	addi	ra,ra,30
    1e9c:	0000                	unimp
    1e9e:	0b5c                	addi	a5,sp,404
    1ea0:	077c                	addi	a5,sp,908
    1ea2:	0000                	unimp
            for (i = 0; i < next; i++)
    1ea4:	ea04                	fsw	fs1,16(a2)
    1ea6:	5d09                	li	s10,-30
                *(p + total + i) = buf[i];
    1ea8:	0000                	unimp
    1eaa:	6400                	flw	fs0,8(s0)
    1eac:	1300                	addi	s0,sp,416
    1eae:	00000097          	auipc	ra,0x0
            *(p + total + i) = ',';
    1eb2:	0462                	slli	s0,s0,0x18
    1eb4:	0000                	unimp
    1eb6:	6214                	flw	fa3,0(a2)
    1eb8:	0004                	0x4
    1eba:	1400                	addi	s0,sp,544
        switch (seed & 0x7)
    1ebc:	0105                	addi	sp,sp,1
    1ebe:	0000                	unimp
    1ec0:	b614                	fsd	fa3,40(a2)
    1ec2:	0005                	c.nop	1
    1ec4:	1400                	addi	s0,sp,544
    1ec6:	005d                	c.nop	23
    1ec8:	0000                	unimp
    1eca:	0f00                	addi	s0,sp,912
    1ecc:	6d04                	flw	fs1,24(a0)
    1ece:	0004                	0x4
    1ed0:	1500                	addi	s0,sp,672
    1ed2:	0462                	slli	s0,s0,0x18
    1ed4:	0000                	unimp
    1ed6:	0516                	slli	a0,a0,0x5
                buf  = intpat[(seed >> 3) & 0x3];
    1ed8:	28000007          	0x28000007
    1edc:	0404                	addi	s1,sp,512
    1ede:	0265                	addi	tp,tp,25
    1ee0:	b608                	fsd	fa0,40(a2)
    1ee2:	0005                	c.nop	1
    1ee4:	1700                	addi	s0,sp,928
    1ee6:	042d                	addi	s0,s0,11
    while ((total + next + 1) < size)
    1ee8:	0000                	unimp
    1eea:	6704                	flw	fs1,8(a4)
                buf  = intpat[(seed >> 3) & 0x3];
    1eec:	0702                	c.slli64	a4
    1eee:	005d                	c.nop	23
                break;
    1ef0:	0000                	unimp
    1ef2:	1700                	addi	s0,sp,928
    while ((total + next + 1) < size)
    1ef4:	0366                	slli	t1,t1,0x19
    1ef6:	0000                	unimp
                next = 4;
    1ef8:	6c04                	flw	fs1,24(s0)
    1efa:	0b02                	c.slli64	s6
    1efc:	06a2                	slli	a3,a3,0x8
    1efe:	0000                	unimp
                buf  = scipat[(seed >> 3) & 0x3];
    1f00:	1704                	addi	s1,sp,928
    1f02:	00e8                	addi	a0,sp,76
    1f04:	0000                	unimp
    1f06:	6c04                	flw	fs1,24(s0)
    1f08:	1402                	slli	s0,s0,0x20
    1f0a:	06a2                	slli	a3,a3,0x8
    while ((total + next + 1) < size)
    1f0c:	0000                	unimp
    1f0e:	1708                	addi	a0,sp,928
                buf  = errpat[(seed >> 3) & 0x3];
    1f10:	000007cf          	fnmadd.s	fa5,ft0,ft0,ft0,rne
                break;
    1f14:	6c04                	flw	fs1,24(s0)
    1f16:	1e02                	slli	t3,t3,0x20
    while ((total + next + 1) < size)
    1f18:	06a2                	slli	a3,a3,0x8
    1f1a:	0000                	unimp
    while (total < size)
    1f1c:	170c                	addi	a1,sp,928
    1f1e:	0240                	addi	s0,sp,260
}
    1f20:	0000                	unimp
    1f22:	6e04                	flw	fs1,24(a2)
    1f24:	0802                	c.slli64	a6
    1f26:	005d                	c.nop	23
    1f28:	0000                	unimp
    1f2a:	1710                	addi	a2,sp,928
    1f2c:	00000207          	0x207
    1f30:	6f04                	flw	fs1,24(a4)
    1f32:	0802                	c.slli64	a6
    1f34:	08a2                	slli	a7,a7,0x8
    1f36:	0000                	unimp
    1f38:	1714                	addi	a3,sp,928
    1f3a:	00000763          	beqz	zero,1f48 <core_init_state+0x194>
    1f3e:	7204                	flw	fs1,32(a2)
                buf  = errpat[(seed >> 3) & 0x3];
    1f40:	0702                	c.slli64	a4
    1f42:	005d                	c.nop	23
    1f44:	0000                	unimp
    1f46:	1730                	addi	a2,sp,936
}
    1f48:	06f4                	addi	a3,sp,844
    1f4a:	0000                	unimp
    1f4c:	7304                	flw	fs1,32(a4)
    1f4e:	1602                	slli	a2,a2,0x20
    1f50:	000008b7          	lui	a7,0x0
    1f54:	1734                	addi	a3,sp,936
    1f56:	0000033f 07027504 	0x70275040000033f
    ee_u32 total = 0, next = 0, i;
    1f5e:	005d                	c.nop	23
    1f60:	0000                	unimp
    1f62:	1738                	addi	a4,sp,936
    1f64:	03f1                	addi	t2,t2,28
    1f66:	0000                	unimp
    1f68:	7704                	flw	fs1,40(a4)
    1f6a:	0a02                	c.slli64	s4
    1f6c:	08c8                	addi	a0,sp,84
    1f6e:	0000                	unimp
    ee_u8 *         str = *instr;
    1f70:	173c                	addi	a5,sp,936
    1f72:	014e                	slli	sp,sp,0x13
    for (; *str && state != CORE_INVALID; str++)
    1f74:	0000                	unimp
    1f76:	7a04                	flw	fs1,48(a2)
    1f78:	1302                	slli	t1,t1,0x20
    1f7a:	0185                	addi	gp,gp,1
        if (NEXT_SYMBOL == ',') /* end of this input */
    1f7c:	0000                	unimp
    1f7e:	1740                	addi	s0,sp,932
    1f80:	0190                	addi	a2,sp,192
    1f82:	0000                	unimp
    1f84:	7b04                	flw	fs1,48(a4)
    1f86:	0702                	c.slli64	a4
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1f88:	005d                	c.nop	23
    1f8a:	0000                	unimp
    1f8c:	1744                	addi	s1,sp,932
    1f8e:	029e                	slli	t0,t0,0x7
    1f90:	0000                	unimp
    1f92:	7c04                	flw	fs1,56(s0)
    1f94:	1302                	slli	t1,t1,0x20
    1f96:	0185                	addi	gp,gp,1
    1f98:	0000                	unimp
    1f9a:	1748                	addi	a0,sp,932
    1f9c:	000003ab          	0x3ab
                transition_count[CORE_START]++;
    1fa0:	7d04                	flw	fs1,56(a0)
    1fa2:	1402                	slli	s0,s0,0x20
    for (; *str && state != CORE_INVALID; str++)
    1fa4:	08ce                	slli	a7,a7,0x13
    1fa6:	0000                	unimp
    1fa8:	174c                	addi	a1,sp,932
    1faa:	053a                	slli	a0,a0,0xe
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fac:	0000                	unimp
    1fae:	8004                	0x8004
    1fb0:	0702                	c.slli64	a4
    1fb2:	005d                	c.nop	23
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fb4:	0000                	unimp
    1fb6:	1750                	addi	a2,sp,932
                if (NEXT_SYMBOL == '.')
    1fb8:	05bc                	addi	a5,sp,712
    1fba:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fbc:	8104                	0x8104
    1fbe:	0902                	c.slli64	s2
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fc0:	05b6                	slli	a1,a1,0xd
    1fc2:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fc4:	1754                	addi	a3,sp,932
    1fc6:	05ee                	slli	a1,a1,0x1b
                if (NEXT_SYMBOL == '.')
    1fc8:	0000                	unimp
    1fca:	a404                	fsd	fs1,8(s0)
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fcc:	0702                	c.slli64	a4
    1fce:	087d                	addi	a6,a6,31
    for (; *str && state != CORE_INVALID; str++)
    1fd0:	0000                	unimp
    1fd2:	1858                	addi	a4,sp,52
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fd4:	0460                	addi	s0,sp,524
    1fd6:	0000                	unimp
    1fd8:	a804                	fsd	fs1,16(s0)
    1fda:	1302                	slli	t1,t1,0x20
    for (; *str && state != CORE_INVALID; str++)
    1fdc:	02b6                	slli	t0,t0,0xd
    1fde:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fe0:	0148                	addi	a0,sp,132
    1fe2:	e918                	fsw	fa4,16(a0)
    1fe4:	0002                	c.slli64	zero
    1fe6:	0400                	addi	s0,sp,512
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fe8:	02a9                	addi	t0,t0,10
    1fea:	7312                	flw	ft6,36(sp)
    1fec:	0002                	c.slli64	zero
    1fee:	4c00                	lw	s0,24(s0)
                if (NEXT_SYMBOL == '.')
    1ff0:	1801                	addi	a6,a6,-32
    1ff2:	02d0                	addi	a2,sp,324
                    transition_count[CORE_INT]++;
    1ff4:	0000                	unimp
    1ff6:	ad04                	fsd	fs1,24(a0)
    1ff8:	0c02                	c.slli64	s8
    1ffa:	08df 0000 02dc      	0x2dc000008df
    for (; *str && state != CORE_INVALID; str++)
    2000:	6318                	flw	fa4,0(a4)
    2002:	0006                	c.slli	zero,0x1
    2004:	0400                	addi	s0,sp,512
    2006:	02b2                	slli	t0,t0,0xc
        if (NEXT_SYMBOL == ',') /* end of this input */
    2008:	6310                	flw	fa2,0(a4)
    200a:	0006                	c.slli	zero,0x1
    200c:	e000                	fsw	fs0,0(s0)
    200e:	1802                	slli	a6,a6,0x20
    2010:	04b5                	addi	s1,s1,13
    2012:	0000                	unimp
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    2014:	b404                	fsd	fs1,40(s0)
    2016:	0a02                	c.slli64	s4
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2018:	000008eb          	0x8eb
        if (NEXT_SYMBOL == ',') /* end of this input */
    201c:	02ec                	addi	a1,sp,332
    201e:	0f00                	addi	s0,sp,912
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2020:	bc04                	fsd	fs1,56(s0)
    2022:	0005                	c.nop	1
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    2024:	0200                	addi	s0,sp,256
    2026:	0801                	addi	a6,a6,0
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2028:	05cd                	addi	a1,a1,19
    202a:	0000                	unimp
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    202c:	bc15                	j	1a60 <matrix_test+0x45c>
    202e:	0005                	c.nop	1
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2030:	0f00                	addi	s0,sp,912
    2032:	4404                	lw	s1,8(s0)
                    transition_count[CORE_FLOAT]++;
    2034:	0004                	0x4
    2036:	1300                	addi	s0,sp,416
    2038:	00000097          	auipc	ra,0x0
                    state = CORE_INVALID;
    203c:	05ec                	addi	a1,sp,716
    203e:	0000                	unimp
                    transition_count[CORE_FLOAT]++;
    2040:	6214                	flw	fa3,0(a2)
    2042:	0004                	0x4
    2044:	1400                	addi	s0,sp,544
    2046:	0105                	addi	sp,sp,1
    *instr = str;
    2048:	0000                	unimp
    204a:	ec14                	fsw	fa3,24(s0)
}
    204c:	0005                	c.nop	1
    204e:	1400                	addi	s0,sp,544
    2050:	005d                	c.nop	23
    2052:	0000                	unimp
                else if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    2054:	0f00                	addi	s0,sp,912
    2056:	c304                	sw	s1,0(a4)
    2058:	0005                	c.nop	1
    205a:	0f00                	addi	s0,sp,912
    205c:	ce04                	sw	s1,24(a2)
    205e:	0005                	c.nop	1
    2060:	1300                	addi	s0,sp,416
    2062:	0000008b          	0x8b
                else if (NEXT_SYMBOL == '.')
    2066:	0616                	slli	a2,a2,0x5
    2068:	0000                	unimp
    206a:	6214                	flw	fa3,0(a2)
                    transition_count[CORE_INVALID]++;
    206c:	0004                	0x4
    206e:	1400                	addi	s0,sp,544
                transition_count[CORE_START]++;
    2070:	0105                	addi	sp,sp,1
    2072:	0000                	unimp
                    state = CORE_INVALID;
    2074:	8b14                	0x8b14
    2076:	0000                	unimp
                    transition_count[CORE_INVALID]++;
    2078:	1400                	addi	s0,sp,544
    207a:	005d                	c.nop	23
    207c:	0000                	unimp
    207e:	0f00                	addi	s0,sp,912
    *instr = str;
    2080:	f804                	fsw	fs1,48(s0)
    2082:	0005                	c.nop	1
}
    2084:	1300                	addi	s0,sp,416
    2086:	005d                	c.nop	23
    2088:	0000                	unimp
    208a:	0630                	addi	a2,sp,776
                    transition_count[CORE_INT]++;
    208c:	0000                	unimp
    208e:	6214                	flw	fa3,0(a2)
    2090:	0004                	0x4
    2092:	1400                	addi	s0,sp,544
                    state = CORE_INVALID;
    2094:	0105                	addi	sp,sp,1
    2096:	0000                	unimp
                    transition_count[CORE_INT]++;
    2098:	0f00                	addi	s0,sp,912
    209a:	1c04                	addi	s1,sp,560
    209c:	0006                	c.slli	zero,0x1
    209e:	0800                	addi	s0,sp,16
    *instr = str;
    20a0:	002c                	addi	a1,sp,8
    20a2:	0000                	unimp
}
    20a4:	0646                	slli	a2,a2,0x11
    20a6:	0000                	unimp
    20a8:	6409                	lui	s0,0x2
    20aa:	0000                	unimp
                transition_count[CORE_START]++;
    20ac:	0200                	addi	s0,sp,256
    20ae:	0800                	addi	s0,sp,16
    for (; *str && state != CORE_INVALID; str++)
    20b0:	002c                	addi	a1,sp,8
    20b2:	0000                	unimp
    20b4:	0656                	slli	a2,a2,0x15
    20b6:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    20b8:	6409                	lui	s0,0x2
    20ba:	0000                	unimp
    20bc:	0000                	unimp
    20be:	0400                	addi	s0,sp,512
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    20c0:	01f8                	addi	a4,sp,204
    20c2:	0000                	unimp
    20c4:	2404                	fld	fs1,8(s0)
    20c6:	1a01                	addi	s4,s4,-32
    20c8:	0301                	addi	t1,t1,0
    20ca:	0000                	unimp
    20cc:	4819                	li	a6,6
    20ce:	0006                	c.slli	zero,0x1
    20d0:	0c00                	addi	s0,sp,528
    20d2:	2804                	fld	fs1,16(s0)
    20d4:	0801                	addi	a6,a6,0
    20d6:	069c                	addi	a5,sp,832
                else if (NEXT_SYMBOL == '.')
    20d8:	0000                	unimp
    20da:	00079f17          	auipc	t5,0x79
    20de:	0400                	addi	s0,sp,512
                    transition_count[CORE_S1]++;
    20e0:	012a                	slli	sp,sp,0xa
    20e2:	9c11                	0x9c11
                    state = CORE_INVALID;
    20e4:	0006                	c.slli	zero,0x1
    20e6:	0000                	unimp
    *instr = str;
    20e8:	00057817          	auipc	a6,0x57
}
    20ec:	0400                	addi	s0,sp,512
    20ee:	5d07012b          	0x5d07012b
    20f2:	0000                	unimp
                    transition_count[CORE_S1]++;
    20f4:	0400                	addi	s0,sp,512
    20f6:	00032c17          	auipc	s8,0x32
    for (; *str && state != CORE_INVALID; str++)
    20fa:	0400                	addi	s0,sp,512
    20fc:	012c                	addi	a1,sp,136
    20fe:	0006a20b          	0x6a20b
        if (NEXT_SYMBOL == ',') /* end of this input */
    2102:	0800                	addi	s0,sp,16
    2104:	0f00                	addi	s0,sp,912
    2106:	6304                	flw	fs1,0(a4)
    2108:	0006                	c.slli	zero,0x1
    210a:	0f00                	addi	s0,sp,912
    for (; *str && state != CORE_INVALID; str++)
    210c:	5604                	lw	s1,40(a2)
    210e:	0006                	c.slli	zero,0x1
    2110:	1900                	addi	s0,sp,176
    2112:	0188                	addi	a0,sp,192
    2114:	0000                	unimp
    2116:	040e                	slli	s0,s0,0x3
                    transition_count[CORE_FLOAT]++;
    2118:	0144                	addi	s1,sp,132
    211a:	e108                	fsw	fa0,0(a0)
    211c:	0006                	c.slli	zero,0x1
    211e:	1700                	addi	s0,sp,928
    2120:	0794                	addi	a3,sp,960
    2122:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    2124:	4504                	lw	s1,8(a0)
    2126:	1201                	addi	tp,tp,-32
    2128:	06e1                	addi	a3,a3,24
    212a:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    212c:	1700                	addi	s0,sp,928
    212e:	03b5                	addi	t2,t2,13
    2130:	0000                	unimp
    2132:	4604                	lw	s1,8(a2)
    2134:	1201                	addi	tp,tp,-32
    2136:	06e1                	addi	a3,a3,24
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    2138:	0000                	unimp
    213a:	1706                	slli	a4,a4,0x21
    213c:	0612                	slli	a2,a2,0x4
    213e:	0000                	unimp
    2140:	4704                	lw	s1,8(a4)
    2142:	1201                	addi	tp,tp,-32
    2144:	003a                	c.slli	zero,0xe
    2146:	0000                	unimp
                    transition_count[CORE_S2]++;
    2148:	000c                	0xc
    214a:	3a08                	fld	fa0,48(a2)
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    214c:	0000                	unimp
    214e:	f100                	fsw	fs0,32(a0)
                    state = CORE_INVALID;
    2150:	0006                	c.slli	zero,0x1
    2152:	0900                	addi	s0,sp,144
    *instr = str;
    2154:	0064                	addi	s1,sp,12
    2156:	0000                	unimp
}
    2158:	0002                	c.slli64	zero
    215a:	d01a                	sw	t1,32(sp)
    215c:	8504                	0x8504
    215e:	0702                	c.slli64	a4
    for (; *str && state != CORE_INVALID; str++)
    2160:	0806                	slli	a6,a6,0x1
    2162:	0000                	unimp
    2164:	00074217          	auipc	tp,0x74
        if (NEXT_SYMBOL == ',') /* end of this input */
    2168:	0400                	addi	s0,sp,512
    216a:	64180287          	0x64180287
    216e:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2170:	0000                	unimp
    2172:	00066b17          	auipc	s6,0x66
    2176:	0400                	addi	s0,sp,512
    2178:	0288                	addi	a0,sp,320
    217a:	b612                	fsd	ft4,296(sp)
    217c:	0005                	c.nop	1
    217e:	0400                	addi	s0,sp,512
    2180:	0001b117          	auipc	sp,0x1b
                    transition_count[CORE_EXPONENT]++;
    2184:	0400                	addi	s0,sp,512
    2186:	0289                	addi	t0,t0,2
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2188:	0610                	addi	a2,sp,768
    218a:	0008                	0x8
    for (; *str && state != CORE_INVALID; str++)
    218c:	0800                	addi	s0,sp,16
    218e:	00050e17          	auipc	t3,0x50
    2192:	0400                	addi	s0,sp,512
        if (NEXT_SYMBOL == ',') /* end of this input */
    2194:	028a                	slli	t0,t0,0x2
    2196:	00019b17          	auipc	s6,0x19
    219a:	2400                	fld	fs0,8(s0)
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    219c:	00036d17          	auipc	s10,0x36
        if (NEXT_SYMBOL == ',') /* end of this input */
    21a0:	0400                	addi	s0,sp,512
    21a2:	5d0f028b          	0x5d0f028b
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    21a6:	0000                	unimp
    21a8:	4800                	lw	s0,16(s0)
    21aa:	00079a17          	auipc	s4,0x79
    21ae:	0400                	addi	s0,sp,512
                    transition_count[CORE_INVALID]++;
    21b0:	028c                	addi	a1,sp,320
    21b2:	562c                	lw	a1,104(a2)
    21b4:	0000                	unimp
    21b6:	5000                	lw	s0,32(s0)
                    state = CORE_INVALID;
    21b8:	00005e17          	auipc	t3,0x5
                    transition_count[CORE_INVALID]++;
    21bc:	0400                	addi	s0,sp,512
    21be:	028d                	addi	t0,t0,3
    21c0:	a81a                	fsd	ft6,16(sp)
    21c2:	0006                	c.slli	zero,0x1
    21c4:	5800                	lw	s0,48(s0)
    21c6:	0002b917          	auipc	s2,0x2b
    for (; *str && state != CORE_INVALID; str++)
    21ca:	0400                	addi	s0,sp,512
        if (NEXT_SYMBOL == ',') /* end of this input */
    21cc:	028e                	slli	t0,t0,0x3
    21ce:	f916                	fsw	ft5,176(sp)
    21d0:	0000                	unimp
    21d2:	6800                	flw	fs0,16(s0)
    for (; *str && state != CORE_INVALID; str++)
    21d4:	00067817          	auipc	a6,0x67
        if (NEXT_SYMBOL == ',') /* end of this input */
    21d8:	0400                	addi	s0,sp,512
    21da:	f916028f          	0xf916028f
    21de:	0000                	unimp
    21e0:	7000                	flw	fs0,32(s0)
    21e2:	00004117          	auipc	sp,0x4
    for (; *str && state != CORE_INVALID; str++)
    21e6:	0400                	addi	s0,sp,512
        if (NEXT_SYMBOL == ',') /* end of this input */
    21e8:	0290                	addi	a2,sp,320
    21ea:	f916                	fsw	ft5,176(sp)
    21ec:	0000                	unimp
    21ee:	7800                	flw	fs0,48(s0)
    for (; *str && state != CORE_INVALID; str++)
    21f0:	00054a17          	auipc	s4,0x54
        if (NEXT_SYMBOL == ',') /* end of this input */
    21f4:	0400                	addi	s0,sp,512
    21f6:	0291                	addi	t0,t0,4
    21f8:	1610                	addi	a2,sp,800
    21fa:	0008                	0x8
    21fc:	8000                	0x8000
    21fe:	00006317          	auipc	t1,0x6
                transition_count[CORE_START]++;
    2202:	0400                	addi	s0,sp,512
    for (; *str && state != CORE_INVALID; str++)
    2204:	0292                	slli	t0,t0,0x4
    2206:	2610                	fld	fa2,8(a2)
    2208:	0008                	0x8
    220a:	8800                	0x8800
        if (NEXT_SYMBOL == ',') /* end of this input */
    220c:	0005f317          	auipc	t1,0x5f
    2210:	0400                	addi	s0,sp,512
    2212:	5d0f0293          	addi	t0,t5,1488 # 7b6aa <_data_lma+0x71092>
    2216:	0000                	unimp
    2218:	a000                	fsd	fs0,0(s0)
    221a:	0000c817          	auipc	a6,0xc
                    transition_count[CORE_S1]++;
    221e:	0400                	addi	s0,sp,512
    for (; *str && state != CORE_INVALID; str++)
    2220:	0294                	addi	a3,sp,320
    2222:	f916                	fsw	ft5,176(sp)
    2224:	0000                	unimp
    2226:	a400                	fsd	fs0,8(s0)
        if (NEXT_SYMBOL == ',') /* end of this input */
    2228:	0002da17          	auipc	s4,0x2d
    222c:	0400                	addi	s0,sp,512
    222e:	0295                	addi	t0,t0,5
    2230:	f916                	fsw	ft5,176(sp)
    2232:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    2234:	ac00                	fsd	fs0,24(s0)
    2236:	00024a17          	auipc	s4,0x24
                    state = CORE_FLOAT;
    223a:	0400                	addi	s0,sp,512
    223c:	0296                	slli	t0,t0,0x5
    223e:	f916                	fsw	ft5,176(sp)
        if (NEXT_SYMBOL == ',') /* end of this input */
    2240:	0000                	unimp
    2242:	b400                	fsd	fs0,40(s0)
            break;
    2244:	0003ca17          	auipc	s4,0x3c
    for (; *str && state != CORE_INVALID; str++)
    2248:	0400                	addi	s0,sp,512
    224a:	f9160297          	auipc	t0,0xf9160
    224e:	0000                	unimp
    2250:	bc00                	fsd	fs0,56(s0)
    2252:	0002a817          	auipc	a6,0x2a
                    state = CORE_EXPONENT;
    2256:	0400                	addi	s0,sp,512
    2258:	0298                	addi	a4,sp,320
    225a:	f916                	fsw	ft5,176(sp)
    for (; *str && state != CORE_INVALID; str++)
    225c:	0000                	unimp
    225e:	c400                	sw	s0,8(s0)
                    state = CORE_S2;
    2260:	00042b17          	auipc	s6,0x42
    2264:	0400                	addi	s0,sp,512
    2266:	0299                	addi	t0,t0,6
    for (; *str && state != CORE_INVALID; str++)
    2268:	5d08                	lw	a0,56(a0)
    226a:	0000                	unimp
    enum CORE_STATE state = CORE_START;
    226c:	cc00                	sw	s0,24(s0)
    226e:	0800                	addi	s0,sp,16
    2270:	05bc                	addi	a5,sp,712
    2272:	0000                	unimp
                    state = CORE_S1;
    2274:	0816                	slli	a6,a6,0x5
    2276:	0000                	unimp
    2278:	6409                	lui	s0,0x2
    227a:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    227c:	1900                	addi	s0,sp,176
    227e:	0800                	addi	s0,sp,16
    2280:	05bc                	addi	a5,sp,712
    2282:	0000                	unimp
    2284:	0826                	slli	a6,a6,0x9
    2286:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    2288:	6409                	lui	s0,0x2
    228a:	0000                	unimp
                    state = CORE_FLOAT;
    228c:	0700                	addi	s0,sp,896
    228e:	0800                	addi	s0,sp,16
    2290:	05bc                	addi	a5,sp,712
    2292:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    2294:	0836                	slli	a6,a6,0xd
    2296:	0000                	unimp
    2298:	6409                	lui	s0,0x2
    229a:	0000                	unimp
    229c:	1700                	addi	s0,sp,928
    229e:	1a00                	addi	s0,sp,304
{
    22a0:	04f0                	addi	a2,sp,588
    22a2:	029e                	slli	t0,t0,0x7
    22a4:	00085d07          	0x85d07
    22a8:	1700                	addi	s0,sp,928
    22aa:	0181                	addi	gp,gp,0
    22ac:	0000                	unimp
    22ae:	a104                	fsd	fs1,0(a0)
    22b0:	1b02                	slli	s6,s6,0x20
    22b2:	085d                	addi	a6,a6,23
    22b4:	0000                	unimp
    22b6:	1700                	addi	s0,sp,928
    22b8:	000007d7          	0x7d7
    22bc:	a204                	fsd	fs1,0(a2)
    22be:	1802                	slli	a6,a6,0x20
    22c0:	086d                	addi	a6,a6,27
    22c2:	0000                	unimp
    22c4:	0078                	addi	a4,sp,12
    22c6:	fb08                	fsw	fa0,48(a4)
    22c8:	0002                	c.slli64	zero
    22ca:	6d00                	flw	fs0,24(a0)
    while (*p != 0)
    22cc:	0008                	0x8
    22ce:	0900                	addi	s0,sp,144
    22d0:	0064                	addi	s1,sp,12
    22d2:	0000                	unimp
    22d4:	001d                	c.nop	7
    22d6:	6408                	flw	fa0,8(s0)
    ee_u8 *p = memblock;
    22d8:	0000                	unimp
    22da:	7d00                	flw	fs0,56(a0)
    for (i = 0; i < NUM_CORE_STATES; i++)
    22dc:	0008                	0x8
    22de:	0900                	addi	s0,sp,144
    22e0:	0064                	addi	s1,sp,12
    22e2:	0000                	unimp
    22e4:	001d                	c.nop	7
    22e6:	8304f01b          	0x8304f01b
    22ea:	0302                	c.slli64	t1
    22ec:	08a2                	slli	a7,a7,0x8
    22ee:	0000                	unimp
    22f0:	051c                	addi	a5,sp,640
    22f2:	04000007          	0x4000007
    22f6:	029a                	slli	t0,t0,0x6
    22f8:	0006f10b          	0x6f10b
    22fc:	1c00                	addi	s0,sp,560
    22fe:	051d                	addi	a0,a0,7
    2300:	0000                	unimp
    2302:	a304                	fsd	fs1,0(a4)
    2304:	0b02                	c.slli64	s6
    2306:	0836                	slli	a6,a6,0xd
    2308:	0000                	unimp
    230a:	0800                	addi	s0,sp,16
    230c:	05bc                	addi	a5,sp,712
    230e:	0000                	unimp
    2310:	08b2                	slli	a7,a7,0xc
    2312:	0000                	unimp
    2314:	6409                	lui	s0,0x2
    2316:	0000                	unimp
{
    2318:	1800                	addi	s0,sp,48
    231a:	1d00                	addi	s0,sp,688
    231c:	07a5                	addi	a5,a5,9
    231e:	0000                	unimp
    2320:	08b2040f          	0x8b2040f
    2324:	0000                	unimp
    2326:	c81e                	sw	t2,16(sp)
    2328:	0008                	0x8
    232a:	1400                	addi	s0,sp,544
    while (*p != 0)
    232c:	0462                	slli	s0,s0,0x18
    232e:	0000                	unimp
    2330:	0f00                	addi	s0,sp,912
    2332:	bd04                	fsd	fs1,56(a0)
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    2334:	0008                	0x8
    2336:	0f00                	addi	s0,sp,912
    2338:	8504                	0x8504
    233a:	0001                	nop
    233c:	1e00                	addi	s0,sp,816
    233e:	08df 0000 5d14      	0x5d14000008df
        final_counts[fstate]++;
    2344:	0000                	unimp
    2346:	0000                	unimp
    2348:	08e5040f          	0x8e5040f
    234c:	0000                	unimp
    234e:	08d4040f          	0x8d4040f
    while (*p != 0)
    2352:	0000                	unimp
        final_counts[fstate]++;
    2354:	5608                	lw	a0,40(a2)
    2356:	0006                	c.slli	zero,0x1
    while (*p != 0)
    2358:	fb00                	fsw	fs0,48(a4)
    235a:	0008                	0x8
        final_counts[fstate]++;
    235c:	0900                	addi	s0,sp,144
    235e:	0064                	addi	s1,sp,12
    2360:	0000                	unimp
    2362:	0002                	c.slli64	zero
    while (*p != 0)
    2364:	eb1f 0004 0400      	0x4000004eb1f
    p = memblock;
    236a:	62170333          	0x62170333
    while (p < (memblock + blksize))
    236e:	0004                	0x4
    2370:	1f00                	addi	s0,sp,944
    2372:	04e4                	addi	s1,sp,588
    2374:	0000                	unimp
    2376:	3404                	fld	fs1,40(s0)
        if (*p != ',')
    2378:	04681d03          	lh	s10,70(a6) # 2c298 <_data_lma+0x21c80>
{
    237c:	0000                	unimp
    237e:	6105                	addi	sp,sp,32
            *p ^= (ee_u8)seed1;
    2380:	0008                	0x8
    2382:	0600                	addi	s0,sp,768
        if (*p != ',')
    2384:	0048136b          	0x48136b
            *p ^= (ee_u8)seed1;
    2388:	0000                	unimp
    238a:	4a20                	lw	s0,80(a2)
        p += step;
    238c:	07000003          	lb	zero,112(zero) # 70 <_start+0x70>
    2390:	169a                	slli	a3,a3,0x26
    2392:	0041                	c.nop	16
    2394:	0000                	unimp
    2396:	3720                	fld	fs0,104(a4)
    while (p < (memblock + blksize))
    2398:	0000                	unimp
    239a:	0700                	addi	s0,sp,896
    239c:	005d159b          	0x5d159b
            *p ^= (ee_u8)seed1;
    23a0:	0000                	unimp
    23a2:	b608                	fsd	fa0,40(a2)
        if (*p != ',')
    23a4:	0005                	c.nop	1
    23a6:	4900                	lw	s0,16(a0)
        p += step;
    23a8:	0009                	c.nop	2
    23aa:	0900                	addi	s0,sp,144
    23ac:	0064                	addi	s1,sp,12
    23ae:	0000                	unimp
    while (p < (memblock + blksize))
    23b0:	0001                	nop
    23b2:	8e20                	0x8e20
    while (*p != 0)
    23b4:	0002                	c.slli64	zero
    23b6:	0700                	addi	s0,sp,896
    p = memblock;
    23b8:	179e                	slli	a5,a5,0x27
    23ba:	0939                	addi	s2,s2,14
    while (*p != 0)
    23bc:	0000                	unimp
    23be:	fd05                	bnez	a0,22f6 <core_bench_state+0x56>
    23c0:	08000007          	0x8000007
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    23c4:	1142                	slli	sp,sp,0x30
    23c6:	0915                	addi	s2,s2,5
    23c8:	0000                	unimp
    23ca:	8d05                	sub	a0,a0,s1
    23cc:	0000                	unimp
    23ce:	0800                	addi	s0,sp,16
    23d0:	185e                	slli	a6,a6,0x37
    23d2:	00000033          	add	zero,zero,zero
        final_counts[fstate]++;
    23d6:	5c05                	li	s8,-31
    23d8:	0006                	c.slli	zero,0x1
    23da:	0800                	addi	s0,sp,16
    23dc:	185f 003a 0000      	0x3a185f
    while (*p != 0)
    23e2:	4f05                	li	t5,1
        final_counts[fstate]++;
    23e4:	08000007          	0x8000007
    while (*p != 0)
    23e8:	1860                	addi	s0,sp,60
    23ea:	005d                	c.nop	23
        final_counts[fstate]++;
    23ec:	0000                	unimp
    23ee:	0802                	c.slli64	a6
    23f0:	4204                	lw	s1,0(a2)
    23f2:	0004                	0x4
    while (*p != 0)
    23f4:	0500                	addi	s0,sp,640
    23f6:	02f2                	slli	t0,t0,0x1c
    p = memblock;
    23f8:	0000                	unimp
    23fa:	6208                	flw	fa0,0(a2)
    while (p < (memblock + blksize))
    23fc:	2c18                	fld	fa4,24(s0)
    23fe:	0000                	unimp
        if (*p != ',')
    2400:	0500                	addi	s0,sp,640
    2402:	00000017          	auipc	zero,0x0
    2406:	6308                	flw	fa0,0(a4)
            *p ^= (ee_u8)seed2;
    2408:	6418                	flw	fa4,8(s0)
    240a:	0000                	unimp
        if (*p != ',')
    240c:	2000                	fld	fs0,0(s0)
    240e:	00000617          	auipc	a2,0x0
            *p ^= (ee_u8)seed2;
    2412:	ba08                	fsd	fa0,48(a2)
        p += step;
    2414:	0009980f          	0x9980f
    2418:	0d00                	addi	s0,sp,656
    241a:	000007bf 10bc0801 	0x10bc0801000007bf
    while (p < (memblock + blksize))
    2422:	000009cb          	fnmsub.s	fs3,ft0,ft0,ft0,rne
    2426:	0001ec0b          	0x1ec0b
    242a:	0800                	addi	s0,sp,16
        crc = crcu32(final_counts[i], crc);
    242c:	0bbe                	slli	s7,s7,0xf
    242e:	098c                	addi	a1,sp,208
    2430:	0000                	unimp
    2432:	0000                	unimp
    2434:	4e05                	li	t3,1
    2436:	0006                	c.slli	zero,0x1
    2438:	0800                	addi	s0,sp,16
    243a:	09b003bf 15050000 	0x1505000009b003bf
        crc = crcu32(track_counts[i], crc);
    2442:	0008                	0x8
    2444:	0900                	addi	s0,sp,144
    2446:	101f 0985 0000      	0x985101f
    244c:	fb0d                	bnez	a4,237e <core_bench_state+0xde>
    244e:	04000003          	lb	zero,64(zero) # 40 <_start+0x40>
    2452:	4309                	li	t1,2
    2454:	0b10                	addi	a2,sp,400
    2456:	000a                	c.slli	zero,0x2
    for (i = 0; i < NUM_CORE_STATES; i++)
    2458:	0b00                	addi	s0,sp,400
    245a:	071f 0000 4509      	0x45090000071f
}
    2460:	610c                	flw	fa1,0(a0)
    2462:	0009                	c.nop	2
    2464:	0000                	unimp
    2466:	690e                	flw	fs2,192(sp)
    2468:	7864                	flw	fs1,116(s0)
    246a:	0900                	addi	s0,sp,144
    246c:	0c46                	slli	s8,s8,0x11
    246e:	0961                	addi	s2,s2,24
    2470:	0000                	unimp
    2472:	0002                	c.slli64	zero
    2474:	d20d                	beqz	a2,2396 <core_bench_state+0xf6>
    2476:	0005                	c.nop	1
    2478:	0800                	addi	s0,sp,16
    247a:	4909                	li	s2,2
    247c:	3310                	fld	fa2,32(a4)
    247e:	000a                	c.slli	zero,0x2
    2480:	0b00                	addi	s0,sp,400
    2482:	07a0                	addi	s0,sp,968
    2484:	0000                	unimp
    2486:	4b09                	li	s6,2
        p += step;
    2488:	3319                	jal	218e <core_state_transition+0x21e>
    248a:	000a                	c.slli	zero,0x2
    248c:	0000                	unimp
    248e:	0007770b          	0x7770b
    while (p < (memblock + blksize))
    2492:	0900                	addi	s0,sp,144
    2494:	194c                	addi	a1,sp,180
    2496:	0a39                	addi	s4,s4,14
    while (p < (memblock + blksize))
    2498:	0000                	unimp
    249a:	0004                	0x4
    249c:	0a0b040f          	0xa0b040f
    24a0:	0000                	unimp
    24a2:	09e3040f          	0x9e3040f
    while (*p != 0)
    24a6:	0000                	unimp
    24a8:	cb05                	beqz	a4,24d8 <get_seed_32+0x2c>
    24aa:	0001                	nop
    switch (i)
    24ac:	0900                	addi	s0,sp,144
    24ae:	1052                	c.slli	zero,0x34
    24b0:	0961                	addi	s2,s2,24
    24b2:	0000                	unimp
    24b4:	6f05                	lui	t5,0x1
    24b6:	0000                	unimp
    24b8:	0900                	addi	s0,sp,144
    24ba:	09791053          	fsub.s	ft0,fs2,fs7,rtz
    24be:	0000                	unimp
    24c0:	940d                	srai	s0,s0,0x23
    24c2:	0000                	unimp
    24c4:	1000                	addi	s0,sp,32
    24c6:	5909                	li	s2,-30
    24c8:	9110                	0x9110
    24ca:	000a                	c.slli	zero,0x2
            retval = seed5_volatile;
    24cc:	0e00                	addi	s0,sp,784
    24ce:	004e                	c.slli	zero,0x13
    24d0:	5b09                	li	s6,-30
    24d2:	5d0d                	li	s10,-29
            break;
    24d4:	0000                	unimp
    24d6:	0000                	unimp
            retval = seed1_volatile;
    24d8:	410e                	lw	sp,192(sp)
    24da:	0900                	addi	s0,sp,144
    24dc:	0d5c                	addi	a5,sp,660
    24de:	0a91                	addi	s5,s5,4
            break;
    24e0:	0000                	unimp
    24e2:	0e04                	addi	s1,sp,784
            retval = seed2_volatile;
    24e4:	0042                	c.slli	zero,0x10
    24e6:	5d09                	li	s10,-30
    24e8:	910d                	srli	a0,a0,0x23
    24ea:	000a                	c.slli	zero,0x2
            break;
    24ec:	0800                	addi	s0,sp,16
    24ee:	430e                	lw	t1,192(sp)
            retval = seed3_volatile;
    24f0:	0900                	addi	s0,sp,144
    24f2:	0d5e                	slli	s10,s10,0x17
    24f4:	00000a97          	auipc	s5,0x0
            break;
    24f8:	000c                	0xc
    24fa:	0a3f040f          	0xa3f040f
            retval = seed4_volatile;
    24fe:	0000                	unimp
    2500:	0a4b040f          	0xa4b040f
            break;
    2504:	0000                	unimp
    2506:	5b05                	li	s6,-31
            retval = 0;
    2508:	09000003          	lb	zero,144(zero) # 90 <main+0x18>
}
    250c:	035f 0a57 0000      	0xa57035f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2512:	560d                	li	a2,-29
    crc = crcu8((ee_u8)(newval), crc);
    2514:	0004                	0x4
    2516:	4400                	lw	s0,8(s0)
        if (x16 == 1)
    2518:	7109                	addi	sp,sp,-384
    251a:	7a10                	flw	fa2,48(a2)
        data >>= 1;
    251c:	0b00000b          	0xb00000b
        if (x16 == 1)
    2520:	04c0                	addi	s0,sp,580
    2522:	0000                	unimp
    2524:	7409                	lui	s0,0xfffe2
    2526:	6119                	addi	sp,sp,384
            crc |= 0x8000;
    2528:	0009                	c.nop	2
    252a:	0000                	unimp
    252c:	0004c60b          	0x4c60b
    2530:	0900                	addi	s0,sp,144
    2532:	1975                	addi	s2,s2,-3
    2534:	0961                	addi	s2,s2,24
    2536:	0000                	unimp
    2538:	0b02                	c.slli64	s6
    253a:	04cc                	addi	a1,sp,580
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    253c:	0000                	unimp
    253e:	7609                	lui	a2,0xfffe2
        if (x16 == 1)
    2540:	6119                	addi	sp,sp,384
    2542:	0009                	c.nop	2
    2544:	0400                	addi	s0,sp,512
    2546:	0009310b          	0x9310b
        data >>= 1;
    254a:	0900                	addi	s0,sp,144
        if (x16 == 1)
    254c:	0b7a1977          	0xb7a1977
            crc |= 0x8000;
    2550:	0000                	unimp
    2552:	0b08                	addi	a0,sp,400
    2554:	0730                	addi	a2,sp,904
    2556:	0000                	unimp
    2558:	7809                	lui	a6,0xfffe2
    255a:	9819                	andi	s0,s0,-26
    255c:	0009                	c.nop	2
    255e:	1800                	addi	s0,sp,48
    2560:	00063d0b          	0x63d0b
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2564:	0900                	addi	s0,sp,144
    2566:	1979                	addi	s2,s2,-2
        if (x16 == 1)
    2568:	0998                	addi	a4,sp,208
    256a:	0000                	unimp
        data >>= 1;
    256c:	0b1c                	addi	a5,sp,400
    256e:	0450                	addi	a2,sp,516
        if (x16 == 1)
    2570:	0000                	unimp
    2572:	7a09                	lui	s4,0xfffe2
    2574:	9819                	andi	s0,s0,-26
    2576:	0009                	c.nop	2
            crc |= 0x8000;
    2578:	2000                	fld	fs0,0(s0)
    257a:	0001dd0b          	0x1dd0b
    257e:	0900                	addi	s0,sp,144
    2580:	0a33197b          	0xa33197b
    2584:	0000                	unimp
    2586:	0e24                	addi	s1,sp,792
    2588:	616d                	addi	sp,sp,240
    258a:	0074                	addi	a3,sp,12
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    258c:	7c09                	lui	s8,0xfffe2
    258e:	9d19                	0x9d19
        if (x16 == 1)
    2590:	000a                	c.slli	zero,0x2
    2592:	2800                	fld	fs0,16(s0)
        data >>= 1;
    2594:	630e                	flw	ft6,192(sp)
    2596:	6372                	flw	ft6,28(sp)
        if (x16 == 1)
    2598:	0900                	addi	s0,sp,144
    259a:	0c7e                	slli	s8,s8,0x1f
    259c:	096d                	addi	s2,s2,27
    259e:	0000                	unimp
            crc |= 0x8000;
    25a0:	0b38                	addi	a4,sp,408
    25a2:	00000593          	li	a1,0
    25a6:	7f09                	lui	t5,0xfffe2
    25a8:	6d0c                	flw	fa1,24(a0)
    25aa:	0009                	c.nop	2
    25ac:	3a00                	fld	fs0,48(a2)
    25ae:	0004ab0b          	0x4ab0b
    25b2:	0900                	addi	s0,sp,144
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    25b4:	0c80                	addi	s0,sp,592
    25b6:	096d                	addi	s2,s2,27
        if (x16 == 1)
    25b8:	0000                	unimp
    25ba:	0b3c                	addi	a5,sp,408
        data >>= 1;
    25bc:	07b6                	slli	a5,a5,0xd
    25be:	0000                	unimp
        if (x16 == 1)
    25c0:	8109                	srli	a0,a0,0x2
    25c2:	6d0c                	flw	fa1,24(a0)
    25c4:	0009                	c.nop	2
    25c6:	3e00                	fld	fs0,56(a2)
            crc |= 0x8000;
    25c8:	650e                	flw	fa0,192(sp)
    25ca:	7272                	flw	ft4,60(sp)
    25cc:	0900                	addi	s0,sp,144
    25ce:	0c82                	c.slli64	s9
    25d0:	0961                	addi	s2,s2,24
    25d2:	0000                	unimp
    25d4:	0b40                	addi	s0,sp,404
    25d6:	000002a3          	sb	zero,5(zero) # 5 <_start+0x5>
    25da:	8409                	srai	s0,s0,0x2
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    25dc:	0009cb13          	xori	s6,s3,0
        if (x16 == 1)
    25e0:	4200                	lw	s0,0(a2)
    25e2:	0800                	addi	s0,sp,16
        data >>= 1;
    25e4:	0105                	addi	sp,sp,1
    25e6:	0000                	unimp
        if (x16 == 1)
    25e8:	0b8a                	slli	s7,s7,0x2
    25ea:	0000                	unimp
    25ec:	6409                	lui	s0,0x2
    25ee:	0000                	unimp
            crc |= 0x8000;
    25f0:	0300                	addi	s0,sp,384
    25f2:	0500                	addi	s0,sp,640
    25f4:	0605                	addi	a2,a2,1
    25f6:	0000                	unimp
    25f8:	8509                	srai	a0,a0,0x2
    25fa:	000aa903          	lw	s2,0(s5) # 24f4 <get_seed_32+0x48>
    25fe:	0800                	addi	s0,sp,16
    2600:	096d                	addi	s2,s2,27
    2602:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2604:	0ba6                	slli	s7,s7,0x9
    2606:	0000                	unimp
        if (x16 == 1)
    2608:	6409                	lui	s0,0x2
    260a:	0000                	unimp
        data >>= 1;
    260c:	0400                	addi	s0,sp,512
    260e:	2100                	fld	fs0,0(a0)
        if (x16 == 1)
    2610:	07ee                	slli	a5,a5,0x1b
    2612:	0000                	unimp
    2614:	0501                	addi	a0,a0,0
    2616:	000b960f          	0xb960f
            crc |= 0x8000;
    261a:	2100                	fld	fs0,0(a0)
    261c:	0969                	addi	s2,s2,26
    261e:	0000                	unimp
    2620:	0a01                	addi	s4,s4,0
    2622:	000b960f          	0xb960f
    2626:	2100                	fld	fs0,0(a0)
    2628:	090a                	slli	s2,s2,0x2
    262a:	0000                	unimp
        if (x16 == 1)
    262c:	0f01                	addi	t5,t5,0
    262e:	000b960f          	0xb960f
    2632:	0800                	addi	s0,sp,16
    2634:	05b6                	slli	a1,a1,0xd
    2636:	0000                	unimp
            crc |= 0x8000;
    2638:	0bda                	slli	s7,s7,0x16
    263a:	0000                	unimp
    263c:	6409                	lui	s0,0x2
    263e:	0000                	unimp
    2640:	0200                	addi	s0,sp,256
    2642:	2200                	fld	fs0,0(a2)
    2644:	0960                	addi	s0,sp,156
    2646:	0000                	unimp
    2648:	3801                	jal	1e58 <core_init_state+0xa4>
    264a:	000bca07          	flq	fs4,0(s7)
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    264e:	0500                	addi	s0,sp,640
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2650:	00000003          	lb	zero,0(zero) # 0 <_start>
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2654:	2300                	fld	fs0,0(a4)
    2656:	08f1                	addi	a7,a7,28
        if (x16 == 1)
    2658:	0000                	unimp
    265a:	5401                	li	s0,-32
        data >>= 1;
    265c:	5d01                	li	s10,-32
    265e:	0000                	unimp
        if (x16 == 1)
    2660:	7800                	flw	fs0,48(s0)
    2662:	0000                	unimp
    2664:	e800                	fsw	fs0,16(s0)
    2666:	0100000b          	0x100000b
            crc |= 0x8000;
    266a:	349c                	fld	fa5,40(s1)
    266c:	0012                	c.slli	zero,0x4
    266e:	2400                	fld	fs0,8(s0)
    2670:	000008e7          	jalr	a7,zero # 0 <_start>
    2674:	5401                	li	s0,-32
    2676:	5d0a                	lw	s10,160(sp)
    2678:	0000                	unimp
    267a:	dc00                	sw	s0,56(s0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    267c:	24000023          	sb	zero,576(zero) # 240 <main+0x1c8>
        if (x16 == 1)
    2680:	08ec                	addi	a1,sp,92
    2682:	0000                	unimp
        data >>= 1;
    2684:	5401                	li	s0,-32
    2686:	3416                	fld	fs0,352(sp)
        if (x16 == 1)
    2688:	0012                	c.slli	zero,0x4
    268a:	fc00                	fsw	fs0,56(s0)
    268c:	25000023          	sb	a6,576(zero) # 240 <main+0x1c8>
            crc |= 0x8000;
    2690:	0069                	c.nop	26
    2692:	5701                	li	a4,-32
    2694:	6d12                	flw	fs10,4(sp)
    2696:	0009                	c.nop	2
    2698:	2800                	fld	fs0,16(s0)
    269a:	0024                	addi	s1,sp,8
    269c:	2500                	fld	fs0,8(a0)
    269e:	006a                	c.slli	zero,0x1a
    26a0:	5701                	li	a4,-32
    26a2:	6d15                	lui	s10,0x5
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    26a4:	0009                	c.nop	2
    26a6:	8d00                	0x8d00
        if (x16 == 1)
    26a8:	0025                	c.nop	9
    26aa:	2600                	fld	fs0,8(a2)
        data >>= 1;
    26ac:	00000823          	sb	zero,16(zero) # 10 <_start+0x10>
        if (x16 == 1)
    26b0:	5701                	li	a4,-32
    26b2:	6d1c                	flw	fa5,24(a0)
    26b4:	0009                	c.nop	2
    26b6:	c500                	sw	s0,8(a0)
            crc |= 0x8000;
    26b8:	0025                	c.nop	9
    26ba:	2600                	fld	fs0,8(a2)
    26bc:	0878                	addi	a4,sp,28
    26be:	0000                	unimp
    26c0:	5801                	li	a6,-32
    26c2:	6112                	flw	ft2,4(sp)
    26c4:	0009                	c.nop	2
    26c6:	2f00                	fld	fs0,24(a4)
    26c8:	0026                	c.slli	zero,0x9
    26ca:	2600                	fld	fs0,8(a2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    26cc:	00000953          	fadd.s	fs2,ft0,ft0,rne
        if (x16 == 1)
    26d0:	5801                	li	a6,-32
    26d2:	6121                	addi	sp,sp,64
        data >>= 1;
    26d4:	0009                	c.nop	2
    26d6:	b400                	fsd	fs0,40(s0)
        if (x16 == 1)
    26d8:	0026                	c.slli	zero,0x9
    26da:	2600                	fld	fs0,8(a2)
    26dc:	0902                	c.slli64	s2
    26de:	0000                	unimp
            crc |= 0x8000;
    26e0:	5901                	li	s2,-32
    26e2:	6d12                	flw	fs10,4(sp)
    26e4:	0009                	c.nop	2
    26e6:	7400                	flw	fs0,40(s0)
    26e8:	26000027          	0x26000027
    26ec:	0948                	addi	a0,sp,148
    26ee:	0000                	unimp
    26f0:	5a01                	li	s4,-32
    26f2:	5512                	lw	a0,36(sp)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    26f4:	0009                	c.nop	2
    26f6:	0f00                	addi	s0,sp,912
        if (x16 == 1)
    26f8:	0028                	addi	a0,sp,8
    26fa:	2700                	fld	fs0,8(a4)
        data >>= 1;
    26fc:	060a                	slli	a2,a2,0x2
    26fe:	0000                	unimp
        if (x16 == 1)
    2700:	5b01                	li	s6,-32
    2702:	3a12                	fld	fs4,288(sp)
    2704:	0012                	c.slli	zero,0x4
    2706:	0300                	addi	s0,sp,384
            crc |= 0x8000;
    2708:	ac91                	j	295c <crcu32+0x1cc>
    270a:	092b276f          	jal	a4,b479c <_data_lma+0xaa184>
    270e:	0000                	unimp
    2710:	5d01                	li	s10,-32
    2712:	00124a0b          	0x124a0b
    2716:	0300                	addi	s0,sp,384
    2718:	f091                	bnez	s1,261c <crcu16+0x10c>
    271a:	03b0286f          	jal	a6,4f54 <putchar>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    271e:	0000                	unimp
        if (x16 == 1)
    2720:	0ccc                	addi	a1,sp,596
    2722:	0000                	unimp
        data >>= 1;
    2724:	6325                	lui	t1,0x9
    2726:	7874                	flw	fa3,116(s0)
        if (x16 == 1)
    2728:	0100                	addi	s0,sp,128
    272a:	10b2                	slli	ra,ra,0x2c
    272c:	0998                	addi	a4,sp,208
    272e:	0000                	unimp
            crc |= 0x8000;
    2730:	284e                	fld	fa6,208(sp)
    2732:	0000                	unimp
    2734:	2800                	fld	fs0,16(s0)
    2736:	03d0                	addi	a2,sp,452
    2738:	0000                	unimp
    273a:	00000da7          	0xda7
    273e:	f626                	fsw	fs1,44(sp)
    2740:	0008                	0x8
    2742:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2744:	12d5                	addi	t0,t0,-11
    2746:	000009d7          	0x9d7
        if (x16 == 1)
    274a:	289e                	fld	fa7,448(sp)
        data >>= 1;
    274c:	0000                	unimp
    274e:	5926                	lw	s2,104(sp)
        if (x16 == 1)
    2750:	0008                	0x8
    2752:	0100                	addi	s0,sp,128
    2754:	12d6                	slli	t0,t0,0x35
    2756:	0998                	addi	a4,sp,208
            crc |= 0x8000;
    2758:	0000                	unimp
    275a:	28de                	fld	fa7,464(sp)
    275c:	0000                	unimp
    275e:	5b29                	li	s6,-22
    2760:	0012                	c.slli	zero,0x4
    2762:	4400                	lw	s0,8(s0)
    2764:	0002                	c.slli64	zero
    2766:	e800                	fsw	fs0,16(s0)
    2768:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
        if (x16 == 1)
    276c:	0ddc                	addi	a5,sp,724
    276e:	0d82                	c.slli64	s11
    2770:	0000                	unimp
    2772:	6c2a                	flw	fs8,136(sp)
    2774:	0012                	c.slli	zero,0x4
    2776:	f100                	fsw	fs0,32(a0)
            crc |= 0x8000;
    2778:	0028                	addi	a0,sp,8
    277a:	2b00                	fld	fs0,16(a4)
    277c:	03e8                	addi	a0,sp,460
    277e:	0000                	unimp
    2780:	782c                	flw	fa1,112(s0)
    2782:	0012                	c.slli	zero,0x4
    2784:	1500                	addi	s0,sp,672
    2786:	0029                	c.nop	10
    2788:	2c00                	fld	fs0,24(s0)
    278a:	1282                	slli	t0,t0,0x20
}
    278c:	0000                	unimp
    278e:	294c                	fld	fa1,144(a0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2790:	0000                	unimp
    2792:	8e2c                	0x8e2c
    crc = crcu8((ee_u8)(newval), crc);
    2794:	0012                	c.slli	zero,0x4
    2796:	6a00                	flw	fs0,16(a2)
    return crcu16((ee_u16)newval, crc);
    2798:	0029                	c.nop	10
    279a:	2c00                	fld	fs0,24(s0)
        if (x16 == 1)
    279c:	129a                	slli	t0,t0,0x26
    279e:	0000                	unimp
    return crcu16((ee_u16)newval, crc);
    27a0:	298e                	fld	fs3,192(sp)
    27a2:	0000                	unimp
        data >>= 1;
    27a4:	9c2d                	0x9c2d
    27a6:	0002                	c.slli64	zero
        if (x16 == 1)
    27a8:	3300                	fld	fs0,32(a4)
    27aa:	54000013          	li	zero,1344
    27ae:	000d                	c.nop	3
            crc |= 0x8000;
    27b0:	2e00                	fld	fs0,24(a2)
    27b2:	5a01                	li	s4,-32
    27b4:	7902                	flw	fs2,32(sp)
    27b6:	2e00                	fld	fs0,24(a2)
    27b8:	5b01                	li	s6,-32
    27ba:	3101                	jal	23ba <core_bench_state+0x11a>
    27bc:	2f00                	fld	fs0,24(a4)
    27be:	02a8                	addi	a0,sp,328
    27c0:	0000                	unimp
    27c2:	0000133f 0002bc2d 	0x2bc2d0000133f
        if (x16 == 1)
    27ca:	3300                	fld	fs0,32(a4)
    27cc:	77000013          	li	zero,1904
        data >>= 1;
    27d0:	000d                	c.nop	3
    27d2:	2e00                	fld	fs0,24(a2)
        if (x16 == 1)
    27d4:	5a01                	li	s4,-32
    27d6:	7902                	flw	fs2,32(sp)
            crc |= 0x8000;
    27d8:	2e00                	fld	fs0,24(a2)
    27da:	5b01                	li	s6,-32
    27dc:	0902                	c.slli64	s2
    27de:	00ff                	0xff
    27e0:	0002c82f          	0x2c82f
    27e4:	3f00                	fld	fs0,56(a4)
    27e6:	00000013          	nop
    27ea:	2f00                	fld	fs0,24(a4)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27ec:	027c                	addi	a5,sp,268
    27ee:	0000                	unimp
        if (x16 == 1)
    27f0:	0000134b          	fnmsub.s	ft6,ft0,ft0,ft0,rtz
        data >>= 1;
    27f4:	0002e02f          	0x2e02f
        if (x16 == 1)
    27f8:	5700                	lw	s0,40(a4)
    27fa:	2f000013          	li	zero,752
    27fe:	02e8                	addi	a0,sp,332
            crc |= 0x8000;
    2800:	0000                	unimp
    2802:	00001363          	bnez	zero,2808 <crcu32+0x78>
    2806:	0002f02f          	0x2f02f
    280a:	6f00                	flw	fs0,24(a4)
    280c:	00000013          	nop
    2810:	e02d                	bnez	s0,2872 <crcu32+0xe2>
    2812:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2814:	7b00                	flw	fs0,48(a4)
    2816:	ca000013          	li	zero,-864
        if (x16 == 1)
    281a:	000d                	c.nop	3
        data >>= 1;
    281c:	2e00                	fld	fs0,24(a2)
    281e:	5a01                	li	s4,-32
        if (x16 == 1)
    2820:	6fee9103          	lh	sp,1790(t4)
    2824:	012e                	slli	sp,sp,0xb
    2826:	9c91035b          	0x9c91035b
            crc |= 0x8000;
    282a:	5c012e6f          	jal	t3,14dea <_data_lma+0xa7d2>
    282e:	5b01f303          	0x5b01f303
    2832:	2d00                	fld	fs0,24(a0)
    2834:	00ec                	addi	a1,sp,76
    2836:	0000                	unimp
    2838:	00001387          	0x1387
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    283c:	0ddd                	addi	s11,s11,23
    283e:	0000                	unimp
        if (x16 == 1)
    2840:	012e                	slli	sp,sp,0xb
    2842:	015a                	slli	sp,sp,0x16
        data >>= 1;
    2844:	0031                	c.nop	12
    2846:	fc2d                	bnez	s0,27c0 <crcu32+0x30>
        if (x16 == 1)
    2848:	0000                	unimp
    284a:	8700                	0x8700
    284c:	f0000013          	li	zero,-256
            crc |= 0x8000;
    2850:	000d                	c.nop	3
    2852:	2e00                	fld	fs0,24(a2)
    2854:	5a01                	li	s4,-32
    2856:	3201                	jal	2156 <core_state_transition+0x1e6>
    2858:	2d00                	fld	fs0,24(a0)
    285a:	010c                	addi	a1,sp,128
    285c:	0000                	unimp
    285e:	00001387          	0x1387
    2862:	00000e03          	lb	t3,0(zero) # 0 <_start>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2866:	012e                	slli	sp,sp,0xb
        if (x16 == 1)
    2868:	015a                	slli	sp,sp,0x16
    286a:	1c2d0033          	0x1c2d0033
        data >>= 1;
    286e:	0001                	nop
        if (x16 == 1)
    2870:	8700                	0x8700
    2872:	16000013          	li	zero,352
    2876:	000e                	c.slli	zero,0x3
            crc |= 0x8000;
    2878:	2e00                	fld	fs0,24(a2)
    287a:	5a01                	li	s4,-32
    287c:	3401                	jal	227c <core_state_transition+0x30c>
    287e:	2d00                	fld	fs0,24(a0)
    2880:	012c                	addi	a1,sp,136
    2882:	0000                	unimp
    2884:	00001387          	0x1387
    2888:	0e29                	addi	t3,t3,10
    288a:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    288c:	012e                	slli	sp,sp,0xb
    288e:	015a                	slli	sp,sp,0x16
        if (x16 == 1)
    2890:	0035                	c.nop	13
    2892:	0002282f          	amoadd.w	a6,zero,(tp)
        data >>= 1;
    2896:	9300                	0x9300
        if (x16 == 1)
    2898:	2f000013          	li	zero,752
    289c:	0344                	addi	s1,sp,388
    289e:	0000                	unimp
            crc |= 0x8000;
    28a0:	0000134b          	fnmsub.s	ft6,ft0,ft0,ft0,rtz
    28a4:	642d                	lui	s0,0xb
    28a6:	5b000003          	lb	zero,1456(zero) # 5b0 <main+0x538>
    28aa:	0012                	c.slli	zero,0x4
    28ac:	5900                	lw	s0,48(a0)
    28ae:	000e                	c.slli	zero,0x3
    28b0:	2e00                	fld	fs0,24(a2)
    28b2:	5a01                	li	s4,-32
        if (x16 == 1)
    28b4:	910c                	0x910c
    28b6:	7800                	flw	fs0,48(s0)
    28b8:	2200                	fld	fs0,0(a2)
    28ba:	0079                	c.nop	30
    28bc:	0a22                	slli	s4,s4,0x8
    28be:	0854                	addi	a3,sp,20
            crc |= 0x8000;
    28c0:	001c                	0x1c
    28c2:	00036c2f          	0x36c2f
    28c6:	5700                	lw	s0,40(a4)
    28c8:	2f000013          	li	zero,752
    28cc:	0374                	addi	a3,sp,396
    28ce:	0000                	unimp
    28d0:	00001363          	bnez	zero,28d6 <crcu32+0x146>
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    28d4:	982d                	andi	s0,s0,-21
    28d6:	9f000003          	lb	zero,-1552(zero) # fffff9f0 <__freertos_irq_stack_top+0xfefef9f0>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    28da:	7e000013          	li	zero,2016
        if (x16 == 1)
    28de:	000e                	c.slli	zero,0x3
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    28e0:	2e00                	fld	fs0,24(a2)
    28e2:	5b01                	li	s6,-32
        data >>= 1;
    28e4:	3001                	jal	20e4 <core_state_transition+0x174>
    28e6:	2f00                	fld	fs0,24(a4)
        if (x16 == 1)
    28e8:	03ac                	addi	a1,sp,456
    28ea:	0000                	unimp
    28ec:	139f 0000 c02f      	0xc02f0000139f
            crc |= 0x8000;
    28f2:	9f000003          	lb	zero,-1552(zero) # fffff9f0 <__freertos_irq_stack_top+0xfefef9f0>
    28f6:	2f000013          	li	zero,752
    28fa:	03d0                	addi	a2,sp,452
    28fc:	0000                	unimp
    28fe:	139f 0000 0c2d      	0xc2d0000139f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2904:	0004                	0x4
    2906:	ab00                	fsd	fs0,16(a4)
        if (x16 == 1)
    2908:	b0000013          	li	zero,-1280
        data >>= 1;
    290c:	000e                	c.slli	zero,0x3
    290e:	2e00                	fld	fs0,24(a2)
        if (x16 == 1)
    2910:	5a01                	li	s4,-32
    2912:	0305                	addi	t1,t1,1
    2914:	0098                	addi	a4,sp,64
    2916:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2918:	2d00                	fld	fs0,24(a0)
    291a:	04e8                	addi	a0,sp,588
    291c:	0000                	unimp
    291e:	13b6                	slli	t2,t2,0x2d
    2920:	0000                	unimp
    2922:	00000ed3          	fadd.s	ft9,ft0,ft0,rne
    2926:	012e                	slli	sp,sp,0xb
    2928:	055a                	slli	a0,a0,0x16
    292a:	0000f003          	0xf003
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    292e:	2e01                	jal	2c3e <crcu32+0x4ae>
        if (x16 == 1)
    2930:	5b01                	li	s6,-32
    2932:	8a02                	jr	s4
        data >>= 1;
    2934:	2e00                	fld	fs0,24(a2)
    2936:	5d01                	li	s10,-32
        if (x16 == 1)
    2938:	8502                	jr	a0
    293a:	0000                	unimp
    293c:	342d                	jal	2366 <core_bench_state+0xc6>
    293e:	0005                	c.nop	1
            crc |= 0x8000;
    2940:	b600                	fsd	fs0,40(a2)
    2942:	f6000013          	li	zero,-160
    2946:	000e                	c.slli	zero,0x3
    2948:	2e00                	fld	fs0,24(a2)
    294a:	5a01                	li	s4,-32
    294c:	0305                	addi	t1,t1,1
    294e:	0120                	addi	s0,sp,136
    2950:	0100                	addi	s0,sp,128
    2952:	012e                	slli	sp,sp,0xb
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2954:	008a025b          	0x8a025b
        if (x16 == 1)
    2958:	012e                	slli	sp,sp,0xb
    295a:	025d                	addi	tp,tp,23
        data >>= 1;
    295c:	0086                	slli	ra,ra,0x1
    295e:	2f00                	fld	fs0,24(a4)
        if (x16 == 1)
    2960:	05b4                	addi	a3,sp,712
    2962:	0000                	unimp
    2964:	13c2                	slli	t2,t2,0x30
    2966:	0000                	unimp
            crc |= 0x8000;
    2968:	042d                	addi	s0,s0,11
    296a:	0006                	c.slli	zero,0x1
    296c:	ce00                	sw	s0,24(a2)
    296e:	14000013          	li	zero,320
    2972:	2e00000f          	0x2e00000f
    2976:	5d01                	li	s10,-32
    2978:	6fd49103          	lh	sp,1789(s1)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    297c:	2d00                	fld	fs0,24(a0)
    297e:	0634                	addi	a3,sp,776
        if (x16 == 1)
    2980:	0000                	unimp
    2982:	000013ab          	0x13ab
        data >>= 1;
    2986:	00000f2b          	0xf2b
        if (x16 == 1)
    298a:	012e                	slli	sp,sp,0xb
    298c:	055a                	slli	a0,a0,0x16
    298e:	00006803          	0x6803
            crc |= 0x8000;
    2992:	0001                	nop
    2994:	702d                	c.lui	zero,0xfffeb
    2996:	0006                	c.slli	zero,0x1
    2998:	b600                	fsd	fs0,40(a2)
    299a:	4e000013          	li	zero,1248
    299e:	2e00000f          	0x2e00000f
    29a2:	5a01                	li	s4,-32
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29a4:	0305                	addi	t1,t1,1
    29a6:	0154                	addi	a3,sp,132
        if (x16 == 1)
    29a8:	0100                	addi	s0,sp,128
    29aa:	012e                	slli	sp,sp,0xb
        data >>= 1;
    29ac:	008a025b          	0x8a025b
        if (x16 == 1)
    29b0:	012e                	slli	sp,sp,0xb
    29b2:	025d                	addi	tp,tp,23
    29b4:	0082                	c.slli64	ra
    29b6:	2f00                	fld	fs0,24(a4)
            crc |= 0x8000;
    29b8:	06a4                	addi	s1,sp,840
    29ba:	0000                	unimp
    29bc:	13da                	slli	t2,t2,0x36
    29be:	0000                	unimp
    29c0:	bc2d                	j	23fa <core_bench_state+0x15a>
    29c2:	0006                	c.slli	zero,0x1
    29c4:	b600                	fsd	fs0,40(a2)
    29c6:	6e000013          	li	zero,1760
    29ca:	2e00000f          	0x2e00000f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29ce:	5a01                	li	s4,-32
        if (x16 == 1)
    29d0:	0305                	addi	t1,t1,1
    29d2:	0184                	addi	s1,sp,192
        data >>= 1;
    29d4:	0100                	addi	s0,sp,128
    29d6:	2d00                	fld	fs0,24(a0)
        if (x16 == 1)
    29d8:	06d0                	addi	a2,sp,836
    29da:	0000                	unimp
    29dc:	13b6                	slli	t2,t2,0x2d
    29de:	0000                	unimp
            crc |= 0x8000;
    29e0:	00000f8b          	0xf8b
    29e4:	012e                	slli	sp,sp,0xb
    29e6:	055a                	slli	a0,a0,0x16
    29e8:	00019c03          	lh	s8,0(gp) # 10047ee <__global_pointer$+0x344e>
    29ec:	2e01                	jal	2cfc <crc16+0x5c>
    29ee:	5b01                	li	s6,-32
    29f0:	8402                	jr	s0
    29f2:	0000                	unimp
        if (x16 == 1)
    29f4:	dc2d                	beqz	s0,296e <crcu32+0x1de>
    29f6:	0006                	c.slli	zero,0x1
    29f8:	6f00                	flw	fs0,24(a4)
    29fa:	9f000013          	li	zero,-1552
    29fe:	2e00000f          	0x2e00000f
            crc |= 0x8000;
    2a02:	5a01                	li	s4,-32
    2a04:	8402                	jr	s0
    2a06:	0000                	unimp
    2a08:	f42d                	bnez	s0,2972 <crcu32+0x1e2>
    2a0a:	0006                	c.slli	zero,0x1
    2a0c:	b600                	fsd	fs0,40(a2)
    2a0e:	b6000013          	li	zero,-1184
    2a12:	2e00000f          	0x2e00000f
    crc = crc16((ee_s16)(newval >> 16), crc);
    2a16:	5a01                	li	s4,-32
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a18:	0305                	addi	t1,t1,1
    2a1a:	01b4                	addi	a3,sp,200
    crc = crcu8((ee_u8)(newval), crc);
    2a1c:	0100                	addi	s0,sp,128
    2a1e:	2d00                	fld	fs0,24(a0)
    return crcu16((ee_u16)newval, crc);
    2a20:	0700                	addi	s0,sp,896
    2a22:	0000                	unimp
        if (x16 == 1)
    2a24:	0000136f          	jal	t1,3a24 <__divdf3+0x5e8>
    return crcu16((ee_u16)newval, crc);
    2a28:	0fca                	slli	t6,t6,0x12
    2a2a:	0000                	unimp
        data >>= 1;
    2a2c:	012e                	slli	sp,sp,0xb
    2a2e:	025a                	slli	tp,tp,0x16
        if (x16 == 1)
    2a30:	0084                	addi	s1,sp,64
    2a32:	2d00                	fld	fs0,24(a0)
    2a34:	0744                	addi	s1,sp,900
    2a36:	0000                	unimp
            crc |= 0x8000;
    2a38:	0000136f          	jal	t1,3a38 <__divdf3+0x5fc>
    2a3c:	0fde                	slli	t6,t6,0x17
    2a3e:	0000                	unimp
    2a40:	012e                	slli	sp,sp,0xb
    2a42:	025a                	slli	tp,tp,0x16
    2a44:	0084                	addi	s1,sp,64
    2a46:	2d00                	fld	fs0,24(a0)
    2a48:	0774                	addi	a3,sp,908
    2a4a:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a4c:	13b6                	slli	t2,t2,0x2d
    2a4e:	0000                	unimp
        if (x16 == 1)
    2a50:	0ff5                	addi	t6,t6,29
    2a52:	0000                	unimp
        data >>= 1;
    2a54:	012e                	slli	sp,sp,0xb
    2a56:	055a                	slli	a0,a0,0x16
        if (x16 == 1)
    2a58:	0001cc03          	lbu	s8,0(gp) # 10013a0 <__global_pointer$>
    2a5c:	0001                	nop
    2a5e:	802d                	srli	s0,s0,0xb
            crc |= 0x8000;
    2a60:	6f000007          	0x6f000007
    2a64:	09000013          	li	zero,144
    2a68:	0010                	0x10
    2a6a:	2e00                	fld	fs0,24(a2)
    2a6c:	5a01                	li	s4,-32
    2a6e:	8402                	jr	s0
    2a70:	0000                	unimp
    2a72:	c82d                	beqz	s0,2ae4 <crcu32+0x354>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a74:	b6000007          	0xb6000007
        if (x16 == 1)
    2a78:	20000013          	li	zero,512
        data >>= 1;
    2a7c:	0010                	0x10
    2a7e:	2e00                	fld	fs0,24(a2)
        if (x16 == 1)
    2a80:	5a01                	li	s4,-32
    2a82:	0305                	addi	t1,t1,1
    2a84:	0224                	addi	s1,sp,264
    2a86:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2a88:	2d00                	fld	fs0,24(a0)
    2a8a:	07dc                	addi	a5,sp,964
    2a8c:	0000                	unimp
    2a8e:	13b6                	slli	t2,t2,0x2d
    2a90:	0000                	unimp
    2a92:	1040                	addi	s0,sp,36
    2a94:	0000                	unimp
    2a96:	012e                	slli	sp,sp,0xb
    2a98:	055a                	slli	a0,a0,0x16
    2a9a:	00024803          	lbu	a6,0(tp) # 76164 <_data_lma+0x6bb4c>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a9e:	2e01                	jal	2dae <crc16+0x10e>
        if (x16 == 1)
    2aa0:	5b01                	li	s6,-32
    2aa2:	0305                	addi	t1,t1,1
        data >>= 1;
    2aa4:	023c                	addi	a5,sp,264
    2aa6:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2aa8:	2d00                	fld	fs0,24(a0)
    2aaa:	07f0                	addi	a2,sp,972
    2aac:	0000                	unimp
    2aae:	13b6                	slli	t2,t2,0x2d
            crc |= 0x8000;
    2ab0:	0000                	unimp
    2ab2:	1060                	addi	s0,sp,44
    2ab4:	0000                	unimp
    2ab6:	012e                	slli	sp,sp,0xb
    2ab8:	055a                	slli	a0,a0,0x16
    2aba:	00026403          	0x26403
    2abe:	2e01                	jal	2dce <crc16+0x12e>
    2ac0:	5b01                	li	s6,-32
    2ac2:	0305                	addi	t1,t1,1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ac4:	0260                	addi	s0,sp,268
    2ac6:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2ac8:	2d00                	fld	fs0,24(a0)
    2aca:	0804                	addi	s1,sp,16
        data >>= 1;
    2acc:	0000                	unimp
    2ace:	13b6                	slli	t2,t2,0x2d
        if (x16 == 1)
    2ad0:	0000                	unimp
    2ad2:	1080                	addi	s0,sp,96
    2ad4:	0000                	unimp
    2ad6:	012e                	slli	sp,sp,0xb
            crc |= 0x8000;
    2ad8:	055a                	slli	a0,a0,0x16
    2ada:	00028403          	lb	s0,0(t0) # f916224a <__freertos_irq_stack_top+0xf815224a>
    2ade:	2e01                	jal	2dee <crc16+0x14e>
    2ae0:	5b01                	li	s6,-32
    2ae2:	0305                	addi	t1,t1,1
    2ae4:	027c                	addi	a5,sp,268
    2ae6:	0100                	addi	s0,sp,128
    2ae8:	2d00                	fld	fs0,24(a0)
    2aea:	0818                	addi	a4,sp,16
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2aec:	0000                	unimp
    2aee:	13b6                	slli	t2,t2,0x2d
        if (x16 == 1)
    2af0:	0000                	unimp
    2af2:	109d                	addi	ra,ra,-25
        data >>= 1;
    2af4:	0000                	unimp
    2af6:	012e                	slli	sp,sp,0xb
        if (x16 == 1)
    2af8:	055a                	slli	a0,a0,0x16
    2afa:	00029c03          	lh	s8,0(t0)
    2afe:	2e01                	jal	2e0e <crc16+0x16e>
            crc |= 0x8000;
    2b00:	5b01                	li	s6,-32
    2b02:	8302                	jr	t1
    2b04:	0000                	unimp
    2b06:	7c2d                	lui	s8,0xfffeb
    2b08:	0008                	0x8
    2b0a:	b600                	fsd	fs0,40(a2)
    2b0c:	ba000013          	li	zero,-1120
    2b10:	0010                	0x10
    2b12:	2e00                	fld	fs0,24(a2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b14:	5a01                	li	s4,-32
    2b16:	0305                	addi	t1,t1,1
        if (x16 == 1)
    2b18:	02b8                	addi	a4,sp,328
    2b1a:	0100                	addi	s0,sp,128
        data >>= 1;
    2b1c:	012e                	slli	sp,sp,0xb
    2b1e:	0083025b          	0x83025b
        if (x16 == 1)
    2b22:	2d00                	fld	fs0,24(a0)
    2b24:	08f4                	addi	a3,sp,92
    2b26:	0000                	unimp
            crc |= 0x8000;
    2b28:	13b6                	slli	t2,t2,0x2d
    2b2a:	0000                	unimp
    2b2c:	000010d7          	0x10d7
    2b30:	012e                	slli	sp,sp,0xb
    2b32:	055a                	slli	a0,a0,0x16
    2b34:	0002d403          	lhu	s0,0(t0)
    2b38:	2e01                	jal	2e48 <crc16+0x1a8>
    2b3a:	5b01                	li	s6,-32
        if (x16 == 1)
    2b3c:	8302                	jr	t1
    2b3e:	0000                	unimp
    2b40:	6c2d                	lui	s8,0xb
    2b42:	0009                	c.nop	2
    2b44:	b600                	fsd	fs0,40(a2)
    2b46:	f4000013          	li	zero,-192
            crc |= 0x8000;
    2b4a:	0010                	0x10
    2b4c:	2e00                	fld	fs0,24(a2)
    2b4e:	5a01                	li	s4,-32
    2b50:	0305                	addi	t1,t1,1
    2b52:	02f0                	addi	a2,sp,332
    2b54:	0100                	addi	s0,sp,128
    2b56:	012e                	slli	sp,sp,0xb
    2b58:	0083025b          	0x83025b
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b5c:	2d00                	fld	fs0,24(a0)
    2b5e:	09d0                	addi	a2,sp,212
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b60:	0000                	unimp
    2b62:	13b6                	slli	t2,t2,0x2d
        if (x16 == 1)
    2b64:	0000                	unimp
    2b66:	1111                	addi	sp,sp,-28
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b68:	0000                	unimp
    2b6a:	012e                	slli	sp,sp,0xb
        data >>= 1;
    2b6c:	055a                	slli	a0,a0,0x16
    2b6e:	00030c03          	lb	s8,0(t1) # 9000 <__adddf3+0x71c>
        if (x16 == 1)
    2b72:	2e01                	jal	2e82 <crc16+0x1e2>
    2b74:	5b01                	li	s6,-32
    2b76:	8902                	jr	s2
            crc |= 0x8000;
    2b78:	0000                	unimp
    2b7a:	fc2d                	bnez	s0,2af4 <crcu32+0x364>
    2b7c:	0009                	c.nop	2
    2b7e:	ab00                	fsd	fs0,16(a4)
    2b80:	28000013          	li	zero,640
    2b84:	0011                	c.nop	4
    2b86:	2e00                	fld	fs0,24(a2)
    2b88:	5a01                	li	s4,-32
    2b8a:	0305                	addi	t1,t1,1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b8c:	0394                	addi	a3,sp,448
    2b8e:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2b90:	2d00                	fld	fs0,24(a0)
    2b92:	0a08                	addi	a0,sp,272
        data >>= 1;
    2b94:	0000                	unimp
    2b96:	13e6                	slli	t2,t2,0x39
        if (x16 == 1)
    2b98:	0000                	unimp
    2b9a:	113d                	addi	sp,sp,-17
    2b9c:	0000                	unimp
    2b9e:	012e                	slli	sp,sp,0xb
            crc |= 0x8000;
    2ba0:	035a                	slli	t1,t1,0x16
    2ba2:	ee91                	bnez	a3,2bbe <crcu32+0x42e>
    2ba4:	dc2d006f          	j	fffd3166 <__freertos_irq_stack_top+0xfefc3166>
    2ba8:	000a                	c.slli	zero,0x2
    2baa:	ab00                	fsd	fs0,16(a4)
    2bac:	54000013          	li	zero,1344
    2bb0:	0011                	c.nop	4
    2bb2:	2e00                	fld	fs0,24(a2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bb4:	5a01                	li	s4,-32
    2bb6:	0305                	addi	t1,t1,1
        if (x16 == 1)
    2bb8:	03a4                	addi	s1,sp,456
    2bba:	0100                	addi	s0,sp,128
        data >>= 1;
    2bbc:	2d00                	fld	fs0,24(a0)
    2bbe:	0b04                	addi	s1,sp,400
        if (x16 == 1)
    2bc0:	0000                	unimp
    2bc2:	000013ab          	0x13ab
    2bc6:	0000116b          	0x116b
            crc |= 0x8000;
    2bca:	012e                	slli	sp,sp,0xb
    2bcc:	055a                	slli	a0,a0,0x16
    2bce:	00032803          	lw	a6,0(t1)
    2bd2:	0001                	nop
    2bd4:	382d                	jal	240e <core_bench_state+0x16e>
    2bd6:	6f00000b          	0x6f00000b
    2bda:	7f000013          	li	zero,2032
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bde:	0011                	c.nop	4
        if (x16 == 1)
    2be0:	2e00                	fld	fs0,24(a2)
    2be2:	5a01                	li	s4,-32
        data >>= 1;
    2be4:	8402                	jr	s0
    2be6:	0000                	unimp
        if (x16 == 1)
    2be8:	702d                	c.lui	zero,0xfffeb
    2bea:	b600000b          	0xb600000b
    2bee:	a8000013          	li	zero,-1408
            crc |= 0x8000;
    2bf2:	0011                	c.nop	4
    2bf4:	2e00                	fld	fs0,24(a2)
    2bf6:	5a01                	li	s4,-32
    2bf8:	0305                	addi	t1,t1,1
    2bfa:	0370                	addi	a2,sp,396
    2bfc:	0100                	addi	s0,sp,128
    2bfe:	012e                	slli	sp,sp,0xb
    2c00:	055e                	slli	a0,a0,0x17
    2c02:	00023c03          	0x23c03
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c06:	2e01                	jal	2f16 <crc16+0x276>
        if (x16 == 1)
    2c08:	5f01                	li	t5,-32
    2c0a:	0305                	addi	t1,t1,1
        data >>= 1;
    2c0c:	0260                	addi	s0,sp,268
    2c0e:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2c10:	2d00                	fld	fs0,24(a0)
    2c12:	0b84                	addi	s1,sp,464
    2c14:	0000                	unimp
    2c16:	13b6                	slli	t2,t2,0x2d
            crc |= 0x8000;
    2c18:	0000                	unimp
    2c1a:	11c8                	addi	a0,sp,228
    2c1c:	0000                	unimp
    2c1e:	012e                	slli	sp,sp,0xb
    2c20:	055a                	slli	a0,a0,0x16
    2c22:	00038c03          	lb	s8,0(t2)
    2c26:	2e01                	jal	2f36 <timer_getms+0x6>
    2c28:	5b01                	li	s6,-32
    2c2a:	0305                	addi	t1,t1,1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c2c:	027c                	addi	a5,sp,268
    2c2e:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2c30:	2d00                	fld	fs0,24(a0)
    2c32:	0b90                	addi	a2,sp,464
        data >>= 1;
    2c34:	0000                	unimp
    2c36:	13f2                	slli	t2,t2,0x3c
        if (x16 == 1)
    2c38:	0000                	unimp
    2c3a:	000011db          	0x11db
    2c3e:	012e                	slli	sp,sp,0xb
            crc |= 0x8000;
    2c40:	015a                	slli	sp,sp,0x16
    2c42:	003a                	c.slli	zero,0xe
    2c44:	a42d                	j	2e6e <crc16+0x1ce>
    2c46:	ab00000b          	0xab00000b
    2c4a:	f2000013          	li	zero,-224
    2c4e:	0011                	c.nop	4
    2c50:	2e00                	fld	fs0,24(a2)
    2c52:	5a01                	li	s4,-32
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c54:	0305                	addi	t1,t1,1
    2c56:	01e4                	addi	s1,sp,204
        if (x16 == 1)
    2c58:	0100                	addi	s0,sp,128
    2c5a:	2d00                	fld	fs0,24(a0)
        data >>= 1;
    2c5c:	0bc8                	addi	a0,sp,468
    2c5e:	0000                	unimp
        if (x16 == 1)
    2c60:	000013ab          	0x13ab
    2c64:	1209                	addi	tp,tp,-30
    2c66:	0000                	unimp
            crc |= 0x8000;
    2c68:	012e                	slli	sp,sp,0xb
    2c6a:	055a                	slli	a0,a0,0x16
    2c6c:	00003c03          	0x3c03
    2c70:	0001                	nop
    2c72:	102d                	c.nop	-21
    2c74:	000c                	0xc
    2c76:	ab00                	fsd	fs0,16(a4)
    2c78:	20000013          	li	zero,512
        if (x16 == 1)
    2c7c:	0012                	c.slli	zero,0x4
    2c7e:	2e00                	fld	fs0,24(a2)
    2c80:	5a01                	li	s4,-32
    2c82:	0305                	addi	t1,t1,1
    2c84:	0010                	0x10
    2c86:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2c88:	3000                	fld	fs0,32(s0)
    2c8a:	0c34                	addi	a3,sp,536
    2c8c:	0000                	unimp
    2c8e:	000013ab          	0x13ab
    2c92:	012e                	slli	sp,sp,0xb
    2c94:	055a                	slli	a0,a0,0x16
    2c96:	0000c403          	lbu	s0,0(ra) # 2038 <core_state_transition+0xc8>
    2c9a:	0001                	nop
}
    2c9c:	0f00                	addi	s0,sp,912
    2c9e:	b604                	fsd	fs1,40(a2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ca0:	0005                	c.nop	1
    2ca2:	0800                	addi	s0,sp,16
    crc = crcu8((ee_u8)(newval), crc);
    2ca4:	0b8a                	slli	s7,s7,0x2
    2ca6:	0000                	unimp
    return crcu16((ee_u16)newval, crc);
    2ca8:	124a                	slli	tp,tp,0x32
    2caa:	0000                	unimp
        if (x16 == 1)
    2cac:	6409                	lui	s0,0x2
    2cae:	0000                	unimp
    return crcu16((ee_u16)newval, crc);
    2cb0:	0000                	unimp
    2cb2:	0800                	addi	s0,sp,16
        data >>= 1;
    2cb4:	098c                	addi	a1,sp,208
    2cb6:	0000                	unimp
        if (x16 == 1)
    2cb8:	0000125b          	0x125b
    2cbc:	6431                	lui	s0,0xc
    2cbe:	0000                	unimp
            crc |= 0x8000;
    2cc0:	cf00                	sw	s0,24(a4)
    2cc2:	e6320007          	0xe6320007
    2cc6:	01000007          	0x1000007
    2cca:	0115                	addi	sp,sp,5
    2ccc:	0105                	addi	sp,sp,1
    2cce:	0000                	unimp
    2cd0:	a701                	j	33d0 <__udivdi3+0x434>
    2cd2:	0012                	c.slli	zero,0x4
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cd4:	3300                	fld	fs0,32(a4)
    2cd6:	081e                	slli	a6,a6,0x7
        if (x16 == 1)
    2cd8:	0000                	unimp
    2cda:	1501                	addi	a0,a0,-32
    2cdc:	0001050f          	0x1050f
        data >>= 1;
    2ce0:	3400                	fld	fs0,40(s0)
    2ce2:	0069                	c.nop	26
        if (x16 == 1)
    2ce4:	1701                	addi	a4,a4,-32
    2ce6:	00099813          	slli	a6,s3,0x0
            crc |= 0x8000;
    2cea:	3400                	fld	fs0,40(s0)
    2cec:	00637263          	bgeu	t1,t1,2cf0 <crc16+0x50>
    2cf0:	1801                	addi	a6,a6,-32
    2cf2:	00096d13          	ori	s10,s2,0
    2cf6:	3400                	fld	fs0,40(s0)
    2cf8:	6572                	flw	fa0,28(sp)
    2cfa:	19010073          	0x19010073
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cfe:	0012a713          	slti	a4,t0,1
        if (x16 == 1)
    2d02:	2100                	fld	fs0,0(a0)
        data >>= 1;
    2d04:	063d                	addi	a2,a2,15
    2d06:	0000                	unimp
        if (x16 == 1)
    2d08:	1a01                	addi	s4,s4,-32
    2d0a:	00099813          	slli	a6,s3,0x0
    2d0e:	0000                	unimp
            crc |= 0x8000;
    2d10:	0b8a040f          	0xb8a040f
    2d14:	0000                	unimp
    2d16:	5b35                	li	s6,-19
    2d18:	0012                	c.slli	zero,0x4
    2d1a:	5c00                	lw	s0,56(s0)
    2d1c:	0015                	c.nop	5
    2d1e:	a800                	fsd	fs0,16(s0)
    2d20:	0000                	unimp
    2d22:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d24:	339c                	fld	fa5,32(a5)
    2d26:	2a000013          	li	zero,672
        if (x16 == 1)
    2d2a:	126c                	addi	a1,sp,300
        data >>= 1;
    2d2c:	0000                	unimp
    2d2e:	29ac                	fld	fa1,80(a1)
        if (x16 == 1)
    2d30:	0000                	unimp
    2d32:	782c                	flw	fa1,112(s0)
    2d34:	0012                	c.slli	zero,0x4
    2d36:	e300                	fsw	fs0,0(a4)
            crc |= 0x8000;
    2d38:	0029                	c.nop	10
    2d3a:	2c00                	fld	fs0,24(s0)
    2d3c:	1282                	slli	t0,t0,0x20
    2d3e:	0000                	unimp
    2d40:	2a1a                	fld	fs4,384(sp)
    2d42:	0000                	unimp
    2d44:	8e2c                	0x8e2c
    2d46:	0012                	c.slli	zero,0x4
    2d48:	3800                	fld	fs0,48(s0)
    2d4a:	002a                	c.slli	zero,0xa
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d4c:	2c00                	fld	fs0,24(s0)
    2d4e:	129a                	slli	t0,t0,0x26
        if (x16 == 1)
    2d50:	0000                	unimp
    2d52:	00002a6f          	jal	s4,4d52 <_printf_i+0x256>
        data >>= 1;
    2d56:	982d                	andi	s0,s0,-21
        if (x16 == 1)
    2d58:	0015                	c.nop	5
    2d5a:	3300                	fld	fs0,32(a4)
    2d5c:	06000013          	li	zero,96
            crc |= 0x8000;
    2d60:	2e000013          	li	zero,736
    2d64:	5a01                	li	s4,-32
    2d66:	7802                	flw	fa6,32(sp)
    2d68:	2e00                	fld	fs0,24(a2)
    2d6a:	5b01                	li	s6,-32
    2d6c:	3101                	jal	296c <crcu32+0x1dc>
    2d6e:	2f00                	fld	fs0,24(a4)
    2d70:	15a4                	addi	s1,sp,744
    2d72:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d74:	0000133f 0015b82d 	0x15b82d0000133f
        data >>= 1;
    2d7c:	3300                	fld	fs0,32(a4)
    2d7e:	29000013          	li	zero,656
        if (x16 == 1)
    2d82:	2e000013          	li	zero,736
    2d86:	5a01                	li	s4,-32
            crc |= 0x8000;
    2d88:	7802                	flw	fa6,32(sp)
    2d8a:	2e00                	fld	fs0,24(a2)
    2d8c:	5b01                	li	s6,-32
    2d8e:	0902                	c.slli64	s2
    2d90:	00ff                	0xff
    2d92:	0015c42f          	0x15c42f
    2d96:	3f00                	fld	fs0,56(a4)
    2d98:	00000013          	nop
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d9c:	d236                	sw	a3,36(sp)
    2d9e:	0001                	nop
        if (x16 == 1)
    2da0:	d200                	sw	s0,32(a2)
    2da2:	0001                	nop
        data >>= 1;
    2da4:	0900                	addi	s0,sp,144
    2da6:	7c360c8f          	0x7c360c8f
        if (x16 == 1)
    2daa:	7c000003          	lb	zero,1984(zero) # 7c0 <main+0x748>
    2dae:	09000003          	lb	zero,144(zero) # 90 <main+0x18>
            crc |= 0x8000;
    2db2:	0834                	addi	a3,sp,24
    2db4:	c036                	sw	a3,0(sp)
    2db6:	0008                	0x8
    2db8:	c000                	sw	s0,0(s0)
    2dba:	0008                	0x8
    2dbc:	0900                	addi	s0,sp,144
    2dbe:	0c2c                	addi	a1,sp,536
    2dc0:	dd36                	sw	a3,184(sp)
    2dc2:	0008                	0x8
        if (x16 == 1)
    2dc4:	dd00                	sw	s0,56(a0)
    2dc6:	0008                	0x8
    2dc8:	0900                	addi	s0,sp,144
    2dca:	0c2d                	addi	s8,s8,11
    2dcc:	3236                	fld	ft4,360(sp)
    2dce:	0008                	0x8
            crc |= 0x8000;
    2dd0:	3200                	fld	fs0,32(a2)
    2dd2:	0008                	0x8
    2dd4:	0900                	addi	s0,sp,144
    2dd6:	0c2e                	slli	s8,s8,0xb
    2dd8:	0836                	slli	a6,a6,0xd
    2dda:	0008                	0x8
    2ddc:	0800                	addi	s0,sp,16
    2dde:	0008                	0x8
    2de0:	0900                	addi	s0,sp,144
    2de2:	3b360c2f          	0x3b360c2f
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2de6:	0008                	0x8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2de8:	3b00                	fld	fs0,48(a4)
    2dea:	0008                	0x8
        if (x16 == 1)
    2dec:	0800                	addi	s0,sp,16
    2dee:	06c2                	slli	a3,a3,0x10
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2df0:	9936                	add	s2,s2,a3
    2df2:	0008                	0x8
        data >>= 1;
    2df4:	9900                	0x9900
    2df6:	0008                	0x8
        if (x16 == 1)
    2df8:	0100                	addi	s0,sp,128
    2dfa:	0831                	addi	a6,a6,12
    2dfc:	4936                	lw	s2,76(sp)
    2dfe:	0008                	0x8
            crc |= 0x8000;
    2e00:	4900                	lw	s0,16(a0)
    2e02:	0008                	0x8
    2e04:	0900                	addi	s0,sp,144
    2e06:	0892                	slli	a7,a7,0x4
    2e08:	1e36                	slli	t3,t3,0x2d
    2e0a:	0000                	unimp
    2e0c:	1e00                	addi	s0,sp,816
    2e0e:	0000                	unimp
    2e10:	0900                	addi	s0,sp,144
    2e12:	73370833          	0x73370833
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e16:	0008                	0x8
        if (x16 == 1)
    2e18:	6900                	flw	fs0,16(a0)
    2e1a:	0008                	0x8
        data >>= 1;
    2e1c:	0b00                	addi	s0,sp,400
    2e1e:	3600                	fld	fs0,40(a2)
        if (x16 == 1)
    2e20:	0881                	addi	a7,a7,0
    2e22:	0000                	unimp
    2e24:	0881                	addi	a7,a7,0
    2e26:	0000                	unimp
            crc |= 0x8000;
    2e28:	c80a                	sw	sp,16(sp)
    2e2a:	3605                	jal	294a <crcu32+0x1ba>
    2e2c:	0000004f          	fnmadd.s	ft0,ft0,ft0,ft0,rne
    2e30:	0000004f          	fnmadd.s	ft0,ft0,ft0,ft0,rne
    2e34:	8e09                	sub	a2,a2,a0
    2e36:	360c                	fld	fa1,40(a2)
    2e38:	091a                	slli	s2,s2,0x6
    2e3a:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e3c:	091a                	slli	s2,s2,0x6
    2e3e:	0000                	unimp
        if (x16 == 1)
    2e40:	9b09                	andi	a4,a4,-30
    2e42:	3608                	fld	fa0,40(a2)
        data >>= 1;
    2e44:	0888                	addi	a0,sp,80
    2e46:	0000                	unimp
        if (x16 == 1)
    2e48:	0888                	addi	a0,sp,80
    2e4a:	0000                	unimp
    2e4c:	3609                	jal	294e <crcu32+0x1be>
    2e4e:	3608                	fld	fa0,40(a2)
            crc |= 0x8000;
    2e50:	093a                	slli	s2,s2,0xe
    2e52:	0000                	unimp
    2e54:	093a                	slli	s2,s2,0xe
    2e56:	0000                	unimp
    2e58:	c308                	sw	a0,0(a4)
    2e5a:	3706                	fld	fa4,96(sp)
    2e5c:	08d5                	addi	a7,a7,21
    2e5e:	0000                	unimp
    2e60:	000008cb          	fnmsub.s	fa7,ft0,ft0,ft0,rne
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e64:	b600000b          	0xb600000b
        if (x16 == 1)
    2e68:	0014                	0x14
    2e6a:	0400                	addi	s0,sp,512
        data >>= 1;
    2e6c:	1600                	addi	s0,sp,800
    2e6e:	04000007          	0x4000007
        if (x16 == 1)
    2e72:	8601                	c.srai64	a2
    2e74:	0006                	c.slli	zero,0x1
    2e76:	0c00                	addi	s0,sp,528
            crc |= 0x8000;
    2e78:	097f                	0x97f
    2e7a:	0000                	unimp
    2e7c:	0000025b          	0x25b
    2e80:	0580                	addi	s0,sp,704
    2e82:	0000                	unimp
    2e84:	0000                	unimp
    2e86:	0000                	unimp
    2e88:	35fe                	fld	fa1,504(sp)
    2e8a:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e8c:	0102                	c.slli64	sp
    2e8e:	c606                	sw	ra,12(sp)
        if (x16 == 1)
    2e90:	0005                	c.nop	1
    2e92:	0200                	addi	s0,sp,256
        data >>= 1;
    2e94:	0801                	addi	a6,a6,0
    2e96:	05c4                	addi	s1,sp,708
        if (x16 == 1)
    2e98:	0000                	unimp
    2e9a:	0202                	c.slli64	tp
    2e9c:	7a05                	lui	s4,0xfffe1
    2e9e:	0004                	0x4
            crc |= 0x8000;
    2ea0:	0200                	addi	s0,sp,256
    2ea2:	0702                	c.slli64	a4
    2ea4:	070c                	addi	a1,sp,896
    2ea6:	0000                	unimp
    2ea8:	0402                	c.slli64	s0
    2eaa:	8805                	andi	s0,s0,1
    2eac:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
    2eb0:	0704                	addi	s1,sp,896
    2eb2:	019f 0000 0802      	0x8020000019f
        if (x16 == 1)
    2eb8:	8305                	srli	a4,a4,0x1
    2eba:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
        data >>= 1;
    2ebe:	0708                	addi	a0,sp,896
        if (x16 == 1)
    2ec0:	019a                	slli	gp,gp,0x6
    2ec2:	0000                	unimp
    2ec4:	69050403          	lb	s0,1680(a0)
            crc |= 0x8000;
    2ec8:	746e                	flw	fs0,248(sp)
    2eca:	0200                	addi	s0,sp,256
    2ecc:	0704                	addi	s1,sp,896
    2ece:	01a4                	addi	s1,sp,200
    2ed0:	0000                	unimp
    2ed2:	1002                	c.slli	zero,0x20
    2ed4:	3d04                	fld	fs1,56(a0)
    2ed6:	0004                	0x4
    2ed8:	0400                	addi	s0,sp,512
    2eda:	057f                	0x57f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2edc:	0000                	unimp
    2ede:	6502                	flw	fa0,0(sp)
        if (x16 == 1)
    2ee0:	1701                	addi	a4,a4,-32
    2ee2:	0064                	addi	s1,sp,12
        data >>= 1;
    2ee4:	0000                	unimp
    2ee6:	3505                	jal	2d06 <crc16+0x66>
        if (x16 == 1)
    2ee8:	03000007          	0x3000007
    2eec:	0e2e                	slli	t3,t3,0xb
    2eee:	0041                	c.nop	16
            crc |= 0x8000;
    2ef0:	0000                	unimp
    2ef2:	f005                	bnez	s0,2e12 <crc16+0x172>
    2ef4:	0000                	unimp
    2ef6:	0300                	addi	s0,sp,384
    2ef8:	0e74                	addi	a3,sp,796
    2efa:	0041                	c.nop	16
    2efc:	0000                	unimp
    2efe:	fc05                	bnez	s0,2e36 <crc16+0x196>
    2f00:	0006                	c.slli	zero,0x1
    2f02:	0300                	addi	s0,sp,384
        if (x16 == 1)
    2f04:	005d1793          	slli	a5,s10,0x5
    2f08:	0000                	unimp
    2f0a:	0406                	slli	s0,s0,0x1
    2f0c:	c503a503          	lw	a0,-944(t2)
            crc |= 0x8000;
    2f10:	0000                	unimp
    2f12:	0700                	addi	s0,sp,896
    2f14:	0326                	slli	t1,t1,0x9
    2f16:	0000                	unimp
    2f18:	720ca703          	lw	a4,1824(s9)
    2f1c:	0000                	unimp
    2f1e:	0700                	addi	s0,sp,896
    2f20:	04dd                	addi	s1,s1,23
    2f22:	0000                	unimp
}
    2f24:	c513a803          	lw	a6,-943(t2)
}
    2f28:	0000                	unimp
    2f2a:	0000                	unimp
    2f2c:	2c08                	fld	fa0,24(s0)
    2f2e:	0000                	unimp
    uint64_t time = (((uint64_t)(TIMER->hi)) << 32) + ((uint64_t)(TIMER->lo));
    2f30:	d500                	sw	s0,40(a0)
    2f32:	0000                	unimp
    2f34:	0900                	addi	s0,sp,144
    2f36:	0064                	addi	s1,sp,12
    2f38:	0000                	unimp
    2f3a:	080a0003          	lb	zero,128(s4) # fffe1080 <__freertos_irq_stack_top+0xfefd1080>
    time = time / 84000;
    2f3e:	f909a203          	lw	tp,-112(s3)
uint64_t timer_getms() {
    2f42:	0000                	unimp
    uint64_t time = (((uint64_t)(TIMER->hi)) << 32) + ((uint64_t)(TIMER->lo));
    2f44:	0b00                	addi	s0,sp,400
    2f46:	0166                	slli	sp,sp,0x19
    time = time / 84000;
    2f48:	0000                	unimp
    2f4a:	5d07a403          	lw	s0,1488(a5)
    2f4e:	0000                	unimp
    2f50:	0000                	unimp
    2f52:	0002960b          	0x2960b
uint64_t timer_getms() {
    2f56:	0300                	addi	s0,sp,384
    time = time / 84000;
    2f58:	05a9                	addi	a1,a1,10
    2f5a:	000000a3          	sb	zero,1(zero) # 1 <_start+0x1>
    2f5e:	0004                	0x4
    2f60:	0705                	addi	a4,a4,1
    2f62:	0004                	0x4
    2f64:	0300                	addi	s0,sp,384
    2f66:	03aa                	slli	t2,t2,0xa
    2f68:	00d5                	addi	ra,ra,21
    2f6a:	0000                	unimp
    for (int i = 0;i<size;i++) {
    2f6c:	040c                	addi	a1,sp,512
    2f6e:	bb05                	j	2c9e <crcu32+0x50e>
    2f70:	04000003          	lb	zero,64(zero) # 40 <_start+0x40>
        int tx_finish = USART->ctrl & 0x1;
    2f74:	1916                	slli	s2,s2,0x25
    2f76:	0048                	addi	a0,sp,4
        send_char(pBuffer[i]);
    2f78:	0000                	unimp
    2f7a:	b005                	j	279a <crcu32+0xa>
        int tx_finish = USART->ctrl & 0x1;
    2f7c:	0000                	unimp
    2f7e:	0500                	addi	s0,sp,640
    2f80:	0d0c                	addi	a1,sp,656
    2f82:	005d                	c.nop	23
        if (tx_finish) {
    2f84:	0000                	unimp
    2f86:	0e05                	addi	t3,t3,1
            USART->write = c;
    2f88:	04000003          	lb	zero,64(zero) # 40 <_start+0x40>
            return;
    2f8c:	01131b23          	sh	a7,22(t1)
    for (int i = 0;i<size;i++) {
    2f90:	0000                	unimp
    2f92:	2a0d                	jal	30c4 <__udivdi3+0x128>
}
    2f94:	0001                	nop
    2f96:	1800                	addi	s0,sp,48
    2f98:	3404                	fld	fs1,40(s0)
    2f9a:	8508                	0x8508
    2f9c:	0001                	nop
    2f9e:	0b00                	addi	s0,sp,400
    2fa0:	079f 0000 3604      	0x36040000079f
    2fa6:	00018513          	mv	a0,gp
    2faa:	0000                	unimp
    2fac:	5f0e                	lw	t5,224(sp)
    2fae:	3704006b          	0x3704006b
    2fb2:	00005d07          	0x5d07
    2fb6:	0400                	addi	s0,sp,512
    2fb8:	0005420b          	0x5420b
    2fbc:	0400                	addi	s0,sp,512
    2fbe:	005d0b37          	lui	s6,0x5d0
    2fc2:	0000                	unimp
    2fc4:	0b08                	addi	a0,sp,400
    2fc6:	04ba                	slli	s1,s1,0xe
    2fc8:	0000                	unimp
    2fca:	3704                	fld	fs1,40(a4)
    2fcc:	5d14                	lw	a3,56(a0)
    2fce:	0000                	unimp
    2fd0:	0c00                	addi	s0,sp,528
    2fd2:	0001c60b          	0x1c60b
    2fd6:	0400                	addi	s0,sp,512
    2fd8:	005d1b37          	lui	s6,0x5d1
    2fdc:	0000                	unimp
    2fde:	0e10                	addi	a2,sp,784
    2fe0:	785f 0400 0b38      	0xb380400785f
    2fe6:	0000018b          	0x18b
    2fea:	0014                	0x14
    2fec:	012b040f          	0x12b040f
    2ff0:	0000                	unimp
    2ff2:	0708                	addi	a0,sp,896
    2ff4:	0001                	nop
    2ff6:	9b00                	0x9b00
    2ff8:	0001                	nop
    2ffa:	0900                	addi	s0,sp,144
    2ffc:	0064                	addi	s1,sp,12
    2ffe:	0000                	unimp
    3000:	0000                	unimp
    3002:	6d0d                	lui	s10,0x3
    3004:	0005                	c.nop	1
    3006:	2400                	fld	fs0,8(s0)
    3008:	3c04                	fld	fs1,56(s0)
    300a:	1e08                	addi	a0,sp,816
    300c:	0002                	c.slli64	zero
    300e:	0b00                	addi	s0,sp,400
    3010:	022d                	addi	tp,tp,11
    3012:	0000                	unimp
    3014:	3e04                	fld	fs1,56(a2)
    3016:	5d09                	li	s10,-30
    3018:	0000                	unimp
    301a:	0000                	unimp
    301c:	0001780b          	0x1780b
    3020:	0400                	addi	s0,sp,512
    3022:	005d093f 0b040000 	0xb040000005d093f
    302a:	0156                	slli	sp,sp,0x15
    302c:	0000                	unimp
    302e:	4004                	lw	s1,0(s0)
    3030:	5d09                	li	s10,-30
    3032:	0000                	unimp
    3034:	0800                	addi	s0,sp,16
    3036:	0002c60b          	0x2c60b
    303a:	0400                	addi	s0,sp,512
    303c:	0941                	addi	s2,s2,16
    303e:	005d                	c.nop	23
    3040:	0000                	unimp
    3042:	0b0c                	addi	a1,sp,400
    3044:	0434                	addi	a3,sp,520
    3046:	0000                	unimp
    3048:	4204                	lw	s1,0(a2)
    304a:	5d09                	li	s10,-30
    304c:	0000                	unimp
    304e:	1000                	addi	s0,sp,32
    3050:	0004f70b          	0x4f70b
    3054:	0400                	addi	s0,sp,512
    3056:	005d0943          	fmadd.s	fs2,fs10,ft5,ft0,rne
    305a:	0000                	unimp
    305c:	0b14                	addi	a3,sp,400
    305e:	0132                	slli	sp,sp,0xc
    3060:	0000                	unimp
    3062:	4404                	lw	s1,8(s0)
    3064:	5d09                	li	s10,-30
    3066:	0000                	unimp
    3068:	1800                	addi	s0,sp,48
    306a:	0002360b          	0x2360b
    306e:	0400                	addi	s0,sp,512
    3070:	0945                	addi	s2,s2,17
    3072:	005d                	c.nop	23
    3074:	0000                	unimp
    3076:	0b1c                	addi	a5,sp,400
    3078:	041a                	slli	s0,s0,0x6
    307a:	0000                	unimp
    307c:	4604                	lw	s1,8(a2)
    307e:	5d09                	li	s10,-30
    3080:	0000                	unimp
    3082:	2000                	fld	fs0,0(s0)
    3084:	1000                	addi	s0,sp,32
    3086:	0029                	c.nop	10
    3088:	0000                	unimp
    308a:	0108                	addi	a0,sp,128
    308c:	4f04                	lw	s1,24(a4)
    308e:	6308                	flw	fa0,0(a4)
    3090:	0002                	c.slli64	zero
    3092:	0b00                	addi	s0,sp,400
    3094:	0412                	slli	s0,s0,0x4
    3096:	0000                	unimp
    3098:	5004                	lw	s1,32(s0)
    309a:	630a                	flw	ft6,128(sp)
    309c:	0002                	c.slli64	zero
    309e:	0000                	unimp
    30a0:	0005a90b          	0x5a90b
    30a4:	0400                	addi	s0,sp,512
    30a6:	0951                	addi	s2,s2,20
    30a8:	00000263          	beqz	zero,30ac <__udivdi3+0x110>
    30ac:	1180                	addi	s0,sp,224
    30ae:	0726                	slli	a4,a4,0x9
    30b0:	0000                	unimp
    30b2:	5304                	lw	s1,32(a4)
    30b4:	070a                	slli	a4,a4,0x2
    30b6:	0001                	nop
    30b8:	0000                	unimp
    30ba:	1101                	addi	sp,sp,-32
    30bc:	0784                	addi	s1,sp,960
    30be:	0000                	unimp
    30c0:	5604                	lw	s1,40(a2)
    30c2:	070a                	slli	a4,a4,0x2
    30c4:	0001                	nop
    30c6:	0400                	addi	s0,sp,512
    30c8:	0001                	nop
    30ca:	0508                	addi	a0,sp,640
    30cc:	0001                	nop
    30ce:	7300                	flw	fs0,32(a4)
    30d0:	0002                	c.slli64	zero
    30d2:	0900                	addi	s0,sp,144
    30d4:	0064                	addi	s1,sp,12
    30d6:	0000                	unimp
    30d8:	001f 6010 0004      	0x46010001f
    30de:	9000                	0x9000
    30e0:	0401                	addi	s0,s0,0
    30e2:	0862                	slli	a6,a6,0x18
    30e4:	02b6                	slli	t0,t0,0xd
    30e6:	0000                	unimp
    30e8:	00079f0b          	0x79f0b
    30ec:	0400                	addi	s0,sp,512
    30ee:	02b61263          	bne	a2,a1,3112 <__udivdi3+0x176>
    30f2:	0000                	unimp
    30f4:	0b00                	addi	s0,sp,400
    30f6:	0245                	addi	tp,tp,17
    30f8:	0000                	unimp
    30fa:	6404                	flw	fs1,8(s0)
    30fc:	5d06                	lw	s10,96(sp)
    30fe:	0000                	unimp
    3100:	0400                	addi	s0,sp,512
    3102:	0001090b          	0x1090b
    3106:	0400                	addi	s0,sp,512
    3108:	0966                	slli	s2,s2,0x19
    310a:	02bc                	addi	a5,sp,328
    310c:	0000                	unimp
    310e:	0b08                	addi	a0,sp,400
    3110:	0029                	c.nop	10
    3112:	0000                	unimp
    3114:	6704                	flw	fs1,8(a4)
    3116:	1e1e                	slli	t3,t3,0x27
    3118:	0002                	c.slli64	zero
    311a:	8800                	0x8800
    311c:	0f00                	addi	s0,sp,912
    311e:	7304                	flw	fs1,32(a4)
    3120:	0002                	c.slli64	zero
    3122:	0800                	addi	s0,sp,16
    3124:	02cc                	addi	a1,sp,324
    3126:	0000                	unimp
    3128:	02cc                	addi	a1,sp,324
    312a:	0000                	unimp
    312c:	6409                	lui	s0,0x2
    312e:	0000                	unimp
    3130:	1f00                	addi	s0,sp,944
    3132:	0f00                	addi	s0,sp,912
    3134:	d204                	sw	s1,32(a2)
    3136:	0002                	c.slli64	zero
    3138:	1200                	addi	s0,sp,288
    313a:	360d                	jal	2c5c <crcu32+0x4cc>
    313c:	0006                	c.slli	zero,0x1
    313e:	0800                	addi	s0,sp,16
    3140:	7a04                	flw	fs1,48(a2)
    3142:	fb08                	fsw	fa0,48(a4)
    3144:	0002                	c.slli64	zero
    3146:	0b00                	addi	s0,sp,400
    3148:	03a5                	addi	t2,t2,9
    314a:	0000                	unimp
    314c:	7b04                	flw	fs1,48(a4)
    314e:	fb11                	bnez	a4,3062 <__udivdi3+0xc6>
    3150:	0002                	c.slli64	zero
    3152:	0000                	unimp
    3154:	00072f0b          	0x72f0b
    3158:	0400                	addi	s0,sp,512
    315a:	067c                	addi	a5,sp,780
    315c:	005d                	c.nop	23
    315e:	0000                	unimp
    3160:	0004                	0x4
    3162:	002c040f          	0x2c040f
    3166:	0000                	unimp
    3168:	be0d                	j	2c9a <crcu32+0x50a>
    316a:	0001                	nop
    316c:	6800                	flw	fs0,16(s0)
    316e:	ba04                	fsd	fs1,48(a2)
    3170:	4408                	lw	a0,8(s0)
    3172:	0004                	0x4
    3174:	0e00                	addi	s0,sp,784
    3176:	705f 0400 12bb      	0x12bb0400705f
    317c:	000002fb          	0x2fb
    3180:	0e00                	addi	s0,sp,784
    3182:	725f 0400 07bc      	0x7bc0400725f
    3188:	005d                	c.nop	23
    318a:	0000                	unimp
    318c:	0e04                	addi	s1,sp,784
    318e:	775f 0400 07bd      	0x7bd0400775f
    3194:	005d                	c.nop	23
    3196:	0000                	unimp
    3198:	0b08                	addi	a0,sp,400
    319a:	007f                	0x7f
    319c:	0000                	unimp
    319e:	be04                	fsd	fs1,56(a2)
    31a0:	3309                	jal	2ea2 <crc16+0x202>
    31a2:	0000                	unimp
    31a4:	0c00                	addi	s0,sp,528
    31a6:	0003d90b          	0x3d90b
    31aa:	0400                	addi	s0,sp,512
    31ac:	003309bf 0e0e0000 	0xe0e0000003309bf
    31b4:	625f 0066 c004      	0xc0040066625f
    31ba:	d311                	beqz	a4,30be <__udivdi3+0x122>
    31bc:	0002                	c.slli64	zero
    31be:	1000                	addi	s0,sp,32
    31c0:	0000760b          	0x760b
    31c4:	0400                	addi	s0,sp,512
    31c6:	07c1                	addi	a5,a5,16
    31c8:	005d                	c.nop	23
    31ca:	0000                	unimp
    31cc:	0b18                	addi	a4,sp,400
    31ce:	0114                	addi	a3,sp,128
    31d0:	0000                	unimp
    31d2:	c804                	sw	s1,16(s0)
    31d4:	050a                	slli	a0,a0,0x2
    31d6:	0001                	nop
    31d8:	1c00                	addi	s0,sp,560
    31da:	0000c20b          	0xc20b
    31de:	0400                	addi	s0,sp,512
    31e0:	1dca                	slli	s11,s11,0x32
    31e2:	05c8                	addi	a0,sp,708
    31e4:	0000                	unimp
    31e6:	0b20                	addi	s0,sp,408
    31e8:	0449                	addi	s0,s0,18
    31ea:	0000                	unimp
    31ec:	cc04                	sw	s1,24(s0)
    31ee:	f21d                	bnez	a2,3114 <__udivdi3+0x178>
    31f0:	0005                	c.nop	1
    31f2:	2400                	fld	fs0,8(s0)
    31f4:	0007b00b          	0x7b00b
    31f8:	0400                	addi	s0,sp,512
    31fa:	06160dcf          	fnmadd.q	fs11,fa2,ft1,ft0,rne
    31fe:	0000                	unimp
    3200:	0b28                	addi	a0,sp,408
    3202:	0332                	slli	t1,t1,0xc
    3204:	0000                	unimp
    3206:	d004                	sw	s1,32(s0)
    3208:	3009                	jal	2a0a <crcu32+0x27a>
    320a:	0006                	c.slli	zero,0x1
    320c:	2c00                	fld	fs0,24(s0)
    320e:	5f0e                	lw	t5,224(sp)
    3210:	6275                	lui	tp,0x1d
    3212:	0400                	addi	s0,sp,512
    3214:	02d311d3          	fadd.d	ft3,ft6,fa3,rtz
    3218:	0000                	unimp
    321a:	0e30                	addi	a2,sp,792
    321c:	755f 0070 d404      	0xd4040070755f
    3222:	fb12                	fsw	ft4,180(sp)
    3224:	0002                	c.slli64	zero
    3226:	3800                	fld	fs0,48(s0)
    3228:	5f0e                	lw	t5,224(sp)
    322a:	7275                	lui	tp,0xffffd
    322c:	0400                	addi	s0,sp,512
    322e:	07d5                	addi	a5,a5,21
    3230:	005d                	c.nop	23
    3232:	0000                	unimp
    3234:	0b3c                	addi	a5,sp,408
    3236:	07e0                	addi	s0,sp,972
    3238:	0000                	unimp
    323a:	d804                	sw	s1,48(s0)
    323c:	3611                	jal	2d40 <crc16+0xa0>
    323e:	0006                	c.slli	zero,0x1
    3240:	4000                	lw	s0,0(s0)
    3242:	00073c0b          	0x73c0b
    3246:	0400                	addi	s0,sp,512
    3248:	11d9                	addi	gp,gp,-10
    324a:	0646                	slli	a2,a2,0x11
    324c:	0000                	unimp
    324e:	6c5f0e43          	0x6c5f0e43
    3252:	0062                	c.slli	zero,0x18
    3254:	dc04                	sw	s1,56(s0)
    3256:	d311                	beqz	a4,315a <__udivdi3+0x1be>
    3258:	0002                	c.slli64	zero
    325a:	4400                	lw	s0,8(s0)
    325c:	0005640b          	0x5640b
    3260:	0400                	addi	s0,sp,512
    3262:	07df 005d 0000      	0x5d07df
    3268:	0b4c                	addi	a1,sp,404
    326a:	01ff                	0x1ff
    326c:	0000                	unimp
    326e:	e004                	fsw	fs1,0(s0)
    3270:	7f0a                	flw	ft10,160(sp)
    3272:	0000                	unimp
    3274:	5000                	lw	s0,32(s0)
    3276:	0001720b          	0x1720b
    327a:	0400                	addi	s0,sp,512
    327c:	046212e3          	bne	tp,t1,3ac0 <__divdf3+0x684>
    3280:	0000                	unimp
    3282:	0b54                	addi	a3,sp,404
    3284:	0572                	slli	a0,a0,0x1c
    3286:	0000                	unimp
    3288:	e704                	fsw	fs1,8(a4)
    328a:	1f0c                	addi	a1,sp,944
    328c:	0001                	nop
    328e:	5800                	lw	s0,48(s0)
    3290:	0004680b          	0x4680b
    3294:	0400                	addi	s0,sp,512
    3296:	0ee9                	addi	t4,t4,26
    3298:	00f9                	addi	ra,ra,30
    329a:	0000                	unimp
    329c:	0b5c                	addi	a5,sp,404
    329e:	077c                	addi	a5,sp,908
    32a0:	0000                	unimp
    32a2:	ea04                	fsw	fs1,16(a2)
    32a4:	5d09                	li	s10,-30
    32a6:	0000                	unimp
    32a8:	6400                	flw	fs0,8(s0)
    32aa:	1300                	addi	s0,sp,416
    32ac:	00000097          	auipc	ra,0x0
    32b0:	0462                	slli	s0,s0,0x18
    32b2:	0000                	unimp
    32b4:	6214                	flw	fa3,0(a2)
    32b6:	0004                	0x4
    32b8:	1400                	addi	s0,sp,544
    32ba:	0105                	addi	sp,sp,1
    32bc:	0000                	unimp
    32be:	b614                	fsd	fa3,40(a2)
    32c0:	0005                	c.nop	1
    32c2:	1400                	addi	s0,sp,544
    32c4:	005d                	c.nop	23
    32c6:	0000                	unimp
    32c8:	0f00                	addi	s0,sp,912
    32ca:	6d04                	flw	fs1,24(a0)
    32cc:	0004                	0x4
    32ce:	1500                	addi	s0,sp,672
    32d0:	0462                	slli	s0,s0,0x18
    32d2:	0000                	unimp
    32d4:	0516                	slli	a0,a0,0x5
    32d6:	28000007          	0x28000007
    32da:	0404                	addi	s1,sp,512
    32dc:	0265                	addi	tp,tp,25
    32de:	b608                	fsd	fa0,40(a2)
    32e0:	0005                	c.nop	1
    32e2:	1700                	addi	s0,sp,928
    32e4:	042d                	addi	s0,s0,11
    32e6:	0000                	unimp
    32e8:	6704                	flw	fs1,8(a4)
    32ea:	0702                	c.slli64	a4
    32ec:	005d                	c.nop	23
    32ee:	0000                	unimp
    32f0:	1700                	addi	s0,sp,928
    32f2:	0366                	slli	t1,t1,0x19
    32f4:	0000                	unimp
    32f6:	6c04                	flw	fs1,24(s0)
    32f8:	0b02                	c.slli64	s6
    32fa:	06a2                	slli	a3,a3,0x8
    32fc:	0000                	unimp
    32fe:	1704                	addi	s1,sp,928
    3300:	00e8                	addi	a0,sp,76
    3302:	0000                	unimp
    3304:	6c04                	flw	fs1,24(s0)
    3306:	1402                	slli	s0,s0,0x20
    3308:	06a2                	slli	a3,a3,0x8
    330a:	0000                	unimp
    330c:	1708                	addi	a0,sp,928
    330e:	000007cf          	fnmadd.s	fa5,ft0,ft0,ft0,rne
    3312:	6c04                	flw	fs1,24(s0)
    3314:	1e02                	slli	t3,t3,0x20
    3316:	06a2                	slli	a3,a3,0x8
    3318:	0000                	unimp
    331a:	170c                	addi	a1,sp,928
    331c:	0240                	addi	s0,sp,260
    331e:	0000                	unimp
    3320:	6e04                	flw	fs1,24(a2)
    3322:	0802                	c.slli64	a6
    3324:	005d                	c.nop	23
    3326:	0000                	unimp
    3328:	1710                	addi	a2,sp,928
    332a:	00000207          	0x207
    332e:	6f04                	flw	fs1,24(a4)
    3330:	0802                	c.slli64	a6
    3332:	08a2                	slli	a7,a7,0x8
    3334:	0000                	unimp
    3336:	1714                	addi	a3,sp,928
    3338:	00000763          	beqz	zero,3346 <__udivdi3+0x3aa>
    333c:	7204                	flw	fs1,32(a2)
    333e:	0702                	c.slli64	a4
    3340:	005d                	c.nop	23
    3342:	0000                	unimp
    3344:	1730                	addi	a2,sp,936
    3346:	06f4                	addi	a3,sp,844
    3348:	0000                	unimp
    334a:	7304                	flw	fs1,32(a4)
    334c:	1602                	slli	a2,a2,0x20
    334e:	000008b7          	lui	a7,0x0
    3352:	1734                	addi	a3,sp,936
    3354:	0000033f 07027504 	0x70275040000033f
    335c:	005d                	c.nop	23
    335e:	0000                	unimp
    3360:	1738                	addi	a4,sp,936
    3362:	03f1                	addi	t2,t2,28
    3364:	0000                	unimp
    3366:	7704                	flw	fs1,40(a4)
    3368:	0a02                	c.slli64	s4
    336a:	08c8                	addi	a0,sp,84
    336c:	0000                	unimp
    336e:	173c                	addi	a5,sp,936
    3370:	014e                	slli	sp,sp,0x13
    3372:	0000                	unimp
    3374:	7a04                	flw	fs1,48(a2)
    3376:	1302                	slli	t1,t1,0x20
    3378:	0185                	addi	gp,gp,1
    337a:	0000                	unimp
    337c:	1740                	addi	s0,sp,932
    337e:	0190                	addi	a2,sp,192
    3380:	0000                	unimp
    3382:	7b04                	flw	fs1,48(a4)
    3384:	0702                	c.slli64	a4
    3386:	005d                	c.nop	23
    3388:	0000                	unimp
    338a:	1744                	addi	s1,sp,932
    338c:	029e                	slli	t0,t0,0x7
    338e:	0000                	unimp
    3390:	7c04                	flw	fs1,56(s0)
    3392:	1302                	slli	t1,t1,0x20
    3394:	0185                	addi	gp,gp,1
    3396:	0000                	unimp
    3398:	1748                	addi	a0,sp,932
    339a:	000003ab          	0x3ab
    339e:	7d04                	flw	fs1,56(a0)
    33a0:	1402                	slli	s0,s0,0x20
    33a2:	08ce                	slli	a7,a7,0x13
    33a4:	0000                	unimp
    33a6:	174c                	addi	a1,sp,932
    33a8:	053a                	slli	a0,a0,0xe
    33aa:	0000                	unimp
    33ac:	8004                	0x8004
    33ae:	0702                	c.slli64	a4
    33b0:	005d                	c.nop	23
    33b2:	0000                	unimp
    33b4:	1750                	addi	a2,sp,932
    33b6:	05bc                	addi	a5,sp,712
    33b8:	0000                	unimp
    33ba:	8104                	0x8104
    33bc:	0902                	c.slli64	s2
    33be:	05b6                	slli	a1,a1,0xd
    33c0:	0000                	unimp
    33c2:	1754                	addi	a3,sp,932
    33c4:	05ee                	slli	a1,a1,0x1b
    33c6:	0000                	unimp
    33c8:	a404                	fsd	fs1,8(s0)
    33ca:	0702                	c.slli64	a4
    33cc:	087d                	addi	a6,a6,31
    33ce:	0000                	unimp
    33d0:	1858                	addi	a4,sp,52
    33d2:	0460                	addi	s0,sp,524
    33d4:	0000                	unimp
    33d6:	a804                	fsd	fs1,16(s0)
    33d8:	1302                	slli	t1,t1,0x20
    33da:	02b6                	slli	t0,t0,0xd
    33dc:	0000                	unimp
    33de:	0148                	addi	a0,sp,132
    33e0:	e918                	fsw	fa4,16(a0)
    33e2:	0002                	c.slli64	zero
    33e4:	0400                	addi	s0,sp,512
    33e6:	02a9                	addi	t0,t0,10
    33e8:	7312                	flw	ft6,36(sp)
    33ea:	0002                	c.slli64	zero
    33ec:	4c00                	lw	s0,24(s0)
    33ee:	1801                	addi	a6,a6,-32
    33f0:	02d0                	addi	a2,sp,324
    33f2:	0000                	unimp
    33f4:	ad04                	fsd	fs1,24(a0)
    33f6:	0c02                	c.slli64	s8
    33f8:	08df 0000 02dc      	0x2dc000008df
    33fe:	6318                	flw	fa4,0(a4)
    3400:	0006                	c.slli	zero,0x1
    3402:	0400                	addi	s0,sp,512
    3404:	02b2                	slli	t0,t0,0xc
    3406:	6310                	flw	fa2,0(a4)
    3408:	0006                	c.slli	zero,0x1
    340a:	e000                	fsw	fs0,0(s0)
    340c:	1802                	slli	a6,a6,0x20
    340e:	04b5                	addi	s1,s1,13
    3410:	0000                	unimp
    3412:	b404                	fsd	fs1,40(s0)
    3414:	0a02                	c.slli64	s4
    3416:	000008eb          	0x8eb
    341a:	02ec                	addi	a1,sp,332
    341c:	0f00                	addi	s0,sp,912
    341e:	bc04                	fsd	fs1,56(s0)
    3420:	0005                	c.nop	1
    3422:	0200                	addi	s0,sp,256
    3424:	0801                	addi	a6,a6,0
    3426:	05cd                	addi	a1,a1,19
    3428:	0000                	unimp
    342a:	bc15                	j	2e5e <crc16+0x1be>
    342c:	0005                	c.nop	1
    342e:	0f00                	addi	s0,sp,912
    3430:	4404                	lw	s1,8(s0)
    3432:	0004                	0x4
    3434:	1300                	addi	s0,sp,416
    3436:	00000097          	auipc	ra,0x0
    343a:	05ec                	addi	a1,sp,716
    343c:	0000                	unimp
    343e:	6214                	flw	fa3,0(a2)
    3440:	0004                	0x4
    3442:	1400                	addi	s0,sp,544
    3444:	0105                	addi	sp,sp,1
    3446:	0000                	unimp
    3448:	ec14                	fsw	fa3,24(s0)
    344a:	0005                	c.nop	1
    344c:	1400                	addi	s0,sp,544
    344e:	005d                	c.nop	23
    3450:	0000                	unimp
    3452:	0f00                	addi	s0,sp,912
    3454:	c304                	sw	s1,0(a4)
    3456:	0005                	c.nop	1
    3458:	0f00                	addi	s0,sp,912
    345a:	ce04                	sw	s1,24(a2)
    345c:	0005                	c.nop	1
    345e:	1300                	addi	s0,sp,416
    3460:	0000008b          	0x8b
    3464:	0616                	slli	a2,a2,0x5
    3466:	0000                	unimp
    3468:	6214                	flw	fa3,0(a2)
    346a:	0004                	0x4
    346c:	1400                	addi	s0,sp,544
    346e:	0105                	addi	sp,sp,1
    3470:	0000                	unimp
    3472:	8b14                	0x8b14
    3474:	0000                	unimp
    3476:	1400                	addi	s0,sp,544
    3478:	005d                	c.nop	23
    347a:	0000                	unimp
    347c:	0f00                	addi	s0,sp,912
    347e:	f804                	fsw	fs1,48(s0)
    3480:	0005                	c.nop	1
    3482:	1300                	addi	s0,sp,416
    3484:	005d                	c.nop	23
    3486:	0000                	unimp
    3488:	0630                	addi	a2,sp,776
    348a:	0000                	unimp
    348c:	6214                	flw	fa3,0(a2)
    348e:	0004                	0x4
    3490:	1400                	addi	s0,sp,544
    3492:	0105                	addi	sp,sp,1
    3494:	0000                	unimp
    3496:	0f00                	addi	s0,sp,912
    3498:	1c04                	addi	s1,sp,560
    349a:	0006                	c.slli	zero,0x1
    349c:	0800                	addi	s0,sp,16
    349e:	002c                	addi	a1,sp,8
    34a0:	0000                	unimp
    34a2:	0646                	slli	a2,a2,0x11
    34a4:	0000                	unimp
    34a6:	6409                	lui	s0,0x2
    34a8:	0000                	unimp
    34aa:	0200                	addi	s0,sp,256
    34ac:	0800                	addi	s0,sp,16
    34ae:	002c                	addi	a1,sp,8
    34b0:	0000                	unimp
    34b2:	0656                	slli	a2,a2,0x15
    34b4:	0000                	unimp
    34b6:	6409                	lui	s0,0x2
    34b8:	0000                	unimp
    34ba:	0000                	unimp
    34bc:	0400                	addi	s0,sp,512
    34be:	01f8                	addi	a4,sp,204
    34c0:	0000                	unimp
    34c2:	2404                	fld	fs1,8(s0)
    34c4:	1a01                	addi	s4,s4,-32
    34c6:	0301                	addi	t1,t1,0
    34c8:	0000                	unimp
    34ca:	4819                	li	a6,6
    34cc:	0006                	c.slli	zero,0x1
    34ce:	0c00                	addi	s0,sp,528
    34d0:	2804                	fld	fs1,16(s0)
    34d2:	0801                	addi	a6,a6,0
    34d4:	069c                	addi	a5,sp,832
    34d6:	0000                	unimp
    34d8:	00079f17          	auipc	t5,0x79
    34dc:	0400                	addi	s0,sp,512
    34de:	012a                	slli	sp,sp,0xa
    34e0:	9c11                	0x9c11
    34e2:	0006                	c.slli	zero,0x1
    34e4:	0000                	unimp
    34e6:	00057817          	auipc	a6,0x57
    34ea:	0400                	addi	s0,sp,512
    34ec:	5d07012b          	0x5d07012b
    34f0:	0000                	unimp
    34f2:	0400                	addi	s0,sp,512
    34f4:	00032c17          	auipc	s8,0x32
    34f8:	0400                	addi	s0,sp,512
    34fa:	012c                	addi	a1,sp,136
    34fc:	0006a20b          	0x6a20b
    3500:	0800                	addi	s0,sp,16
    3502:	0f00                	addi	s0,sp,912
    3504:	6304                	flw	fs1,0(a4)
    3506:	0006                	c.slli	zero,0x1
    3508:	0f00                	addi	s0,sp,912
    350a:	5604                	lw	s1,40(a2)
    350c:	0006                	c.slli	zero,0x1
    350e:	1900                	addi	s0,sp,176
    3510:	0188                	addi	a0,sp,192
    3512:	0000                	unimp
    3514:	040e                	slli	s0,s0,0x3
    3516:	0144                	addi	s1,sp,132
    3518:	e108                	fsw	fa0,0(a0)
    351a:	0006                	c.slli	zero,0x1
    351c:	1700                	addi	s0,sp,928
    351e:	0794                	addi	a3,sp,960
    3520:	0000                	unimp
    3522:	4504                	lw	s1,8(a0)
    3524:	1201                	addi	tp,tp,-32
    3526:	06e1                	addi	a3,a3,24
    3528:	0000                	unimp
    352a:	1700                	addi	s0,sp,928
    352c:	03b5                	addi	t2,t2,13
    352e:	0000                	unimp
    3530:	4604                	lw	s1,8(a2)
    3532:	1201                	addi	tp,tp,-32
    3534:	06e1                	addi	a3,a3,24
    3536:	0000                	unimp
    3538:	1706                	slli	a4,a4,0x21
    353a:	0612                	slli	a2,a2,0x4
    353c:	0000                	unimp
    353e:	4704                	lw	s1,8(a4)
    3540:	1201                	addi	tp,tp,-32
    3542:	003a                	c.slli	zero,0xe
    3544:	0000                	unimp
    3546:	000c                	0xc
    3548:	3a08                	fld	fa0,48(a2)
    354a:	0000                	unimp
    354c:	f100                	fsw	fs0,32(a0)
    354e:	0006                	c.slli	zero,0x1
    3550:	0900                	addi	s0,sp,144
    3552:	0064                	addi	s1,sp,12
    3554:	0000                	unimp
    3556:	0002                	c.slli64	zero
    3558:	d01a                	sw	t1,32(sp)
    355a:	8504                	0x8504
    355c:	0702                	c.slli64	a4
    355e:	0806                	slli	a6,a6,0x1
    3560:	0000                	unimp
    3562:	00074217          	auipc	tp,0x74
    3566:	0400                	addi	s0,sp,512
    3568:	64180287          	0x64180287
    356c:	0000                	unimp
    356e:	0000                	unimp
    3570:	00066b17          	auipc	s6,0x66
    3574:	0400                	addi	s0,sp,512
    3576:	0288                	addi	a0,sp,320
    3578:	b612                	fsd	ft4,296(sp)
    357a:	0005                	c.nop	1
    357c:	0400                	addi	s0,sp,512
    357e:	0001b117          	auipc	sp,0x1b
    3582:	0400                	addi	s0,sp,512
    3584:	0289                	addi	t0,t0,2
    3586:	0610                	addi	a2,sp,768
    3588:	0008                	0x8
    358a:	0800                	addi	s0,sp,16
    358c:	00050e17          	auipc	t3,0x50
    3590:	0400                	addi	s0,sp,512
    3592:	028a                	slli	t0,t0,0x2
    3594:	00019b17          	auipc	s6,0x19
    3598:	2400                	fld	fs0,8(s0)
    359a:	00036d17          	auipc	s10,0x36
    359e:	0400                	addi	s0,sp,512
    35a0:	5d0f028b          	0x5d0f028b
    35a4:	0000                	unimp
    35a6:	4800                	lw	s0,16(s0)
    35a8:	00079a17          	auipc	s4,0x79
    35ac:	0400                	addi	s0,sp,512
    35ae:	028c                	addi	a1,sp,320
    35b0:	562c                	lw	a1,104(a2)
    35b2:	0000                	unimp
    35b4:	5000                	lw	s0,32(s0)
    35b6:	00005e17          	auipc	t3,0x5
    35ba:	0400                	addi	s0,sp,512
    35bc:	028d                	addi	t0,t0,3
    35be:	a81a                	fsd	ft6,16(sp)
    35c0:	0006                	c.slli	zero,0x1
    35c2:	5800                	lw	s0,48(s0)
    35c4:	0002b917          	auipc	s2,0x2b
    35c8:	0400                	addi	s0,sp,512
    35ca:	028e                	slli	t0,t0,0x3
    35cc:	f916                	fsw	ft5,176(sp)
    35ce:	0000                	unimp
    35d0:	6800                	flw	fs0,16(s0)
    35d2:	00067817          	auipc	a6,0x67
    35d6:	0400                	addi	s0,sp,512
    35d8:	f916028f          	0xf916028f
    35dc:	0000                	unimp
    35de:	7000                	flw	fs0,32(s0)
    35e0:	00004117          	auipc	sp,0x4
    35e4:	0400                	addi	s0,sp,512
    35e6:	0290                	addi	a2,sp,320
    35e8:	f916                	fsw	ft5,176(sp)
    35ea:	0000                	unimp
    35ec:	7800                	flw	fs0,48(s0)
    35ee:	00054a17          	auipc	s4,0x54
    35f2:	0400                	addi	s0,sp,512
    35f4:	0291                	addi	t0,t0,4
    35f6:	1610                	addi	a2,sp,800
    35f8:	0008                	0x8
    35fa:	8000                	0x8000
    35fc:	00006317          	auipc	t1,0x6
    3600:	0400                	addi	s0,sp,512
    3602:	0292                	slli	t0,t0,0x4
    3604:	2610                	fld	fa2,8(a2)
    3606:	0008                	0x8
    3608:	8800                	0x8800
    360a:	0005f317          	auipc	t1,0x5f
    360e:	0400                	addi	s0,sp,512
    3610:	5d0f0293          	addi	t0,t5,1488 # 7caa8 <_data_lma+0x72490>
    3614:	0000                	unimp
    3616:	a000                	fsd	fs0,0(s0)
    3618:	0000c817          	auipc	a6,0xc
    361c:	0400                	addi	s0,sp,512
    361e:	0294                	addi	a3,sp,320
    3620:	f916                	fsw	ft5,176(sp)
    3622:	0000                	unimp
    3624:	a400                	fsd	fs0,8(s0)
    3626:	0002da17          	auipc	s4,0x2d
    362a:	0400                	addi	s0,sp,512
    362c:	0295                	addi	t0,t0,5
    362e:	f916                	fsw	ft5,176(sp)
    3630:	0000                	unimp
    3632:	ac00                	fsd	fs0,24(s0)
    3634:	00024a17          	auipc	s4,0x24
    3638:	0400                	addi	s0,sp,512
    363a:	0296                	slli	t0,t0,0x5
    363c:	f916                	fsw	ft5,176(sp)
    363e:	0000                	unimp
    3640:	b400                	fsd	fs0,40(s0)
    3642:	0003ca17          	auipc	s4,0x3c
    3646:	0400                	addi	s0,sp,512
    3648:	f9160297          	auipc	t0,0xf9160
    364c:	0000                	unimp
    364e:	bc00                	fsd	fs0,56(s0)
    3650:	0002a817          	auipc	a6,0x2a
    3654:	0400                	addi	s0,sp,512
    3656:	0298                	addi	a4,sp,320
    3658:	f916                	fsw	ft5,176(sp)
    365a:	0000                	unimp
    365c:	c400                	sw	s0,8(s0)
    365e:	00042b17          	auipc	s6,0x42
    3662:	0400                	addi	s0,sp,512
    3664:	0299                	addi	t0,t0,6
    3666:	5d08                	lw	a0,56(a0)
    3668:	0000                	unimp
    366a:	cc00                	sw	s0,24(s0)
    366c:	0800                	addi	s0,sp,16
    366e:	05bc                	addi	a5,sp,712
    3670:	0000                	unimp
    3672:	0816                	slli	a6,a6,0x5
    3674:	0000                	unimp
    3676:	6409                	lui	s0,0x2
    3678:	0000                	unimp
    367a:	1900                	addi	s0,sp,176
    367c:	0800                	addi	s0,sp,16
    367e:	05bc                	addi	a5,sp,712
    3680:	0000                	unimp
    3682:	0826                	slli	a6,a6,0x9
    3684:	0000                	unimp
    3686:	6409                	lui	s0,0x2
    3688:	0000                	unimp
    368a:	0700                	addi	s0,sp,896
    368c:	0800                	addi	s0,sp,16
    368e:	05bc                	addi	a5,sp,712
    3690:	0000                	unimp
    3692:	0836                	slli	a6,a6,0xd
    3694:	0000                	unimp
    3696:	6409                	lui	s0,0x2
    3698:	0000                	unimp
    369a:	1700                	addi	s0,sp,928
    369c:	1a00                	addi	s0,sp,304
    369e:	04f0                	addi	a2,sp,588
    36a0:	029e                	slli	t0,t0,0x7
    36a2:	00085d07          	0x85d07
    36a6:	1700                	addi	s0,sp,928
    36a8:	0181                	addi	gp,gp,0
    36aa:	0000                	unimp
    36ac:	a104                	fsd	fs1,0(a0)
    36ae:	1b02                	slli	s6,s6,0x20
    36b0:	085d                	addi	a6,a6,23
    36b2:	0000                	unimp
    36b4:	1700                	addi	s0,sp,928
    36b6:	000007d7          	0x7d7
    36ba:	a204                	fsd	fs1,0(a2)
    36bc:	1802                	slli	a6,a6,0x20
    36be:	086d                	addi	a6,a6,27
    36c0:	0000                	unimp
    36c2:	0078                	addi	a4,sp,12
    36c4:	fb08                	fsw	fa0,48(a4)
    36c6:	0002                	c.slli64	zero
    36c8:	6d00                	flw	fs0,24(a0)
    36ca:	0008                	0x8
    36cc:	0900                	addi	s0,sp,144
    36ce:	0064                	addi	s1,sp,12
    36d0:	0000                	unimp
    36d2:	001d                	c.nop	7
    36d4:	6408                	flw	fa0,8(s0)
    36d6:	0000                	unimp
    36d8:	7d00                	flw	fs0,56(a0)
    36da:	0008                	0x8
    36dc:	0900                	addi	s0,sp,144
    36de:	0064                	addi	s1,sp,12
    36e0:	0000                	unimp
    36e2:	001d                	c.nop	7
    36e4:	8304f01b          	0x8304f01b
    36e8:	0302                	c.slli64	t1
    36ea:	08a2                	slli	a7,a7,0x8
    36ec:	0000                	unimp
    36ee:	051c                	addi	a5,sp,640
    36f0:	04000007          	0x4000007
    36f4:	029a                	slli	t0,t0,0x6
    36f6:	0006f10b          	0x6f10b
    36fa:	1c00                	addi	s0,sp,560
    36fc:	051d                	addi	a0,a0,7
    36fe:	0000                	unimp
    3700:	a304                	fsd	fs1,0(a4)
    3702:	0b02                	c.slli64	s6
    3704:	0836                	slli	a6,a6,0xd
    3706:	0000                	unimp
    3708:	0800                	addi	s0,sp,16
    370a:	05bc                	addi	a5,sp,712
    370c:	0000                	unimp
    370e:	08b2                	slli	a7,a7,0xc
    3710:	0000                	unimp
    3712:	6409                	lui	s0,0x2
    3714:	0000                	unimp
    3716:	1800                	addi	s0,sp,48
    3718:	1d00                	addi	s0,sp,688
    371a:	07a5                	addi	a5,a5,9
    371c:	0000                	unimp
    371e:	08b2040f          	0x8b2040f
    3722:	0000                	unimp
    3724:	c81e                	sw	t2,16(sp)
    3726:	0008                	0x8
    3728:	1400                	addi	s0,sp,544
    372a:	0462                	slli	s0,s0,0x18
    372c:	0000                	unimp
    372e:	0f00                	addi	s0,sp,912
    3730:	bd04                	fsd	fs1,56(a0)
    3732:	0008                	0x8
    3734:	0f00                	addi	s0,sp,912
    3736:	8504                	0x8504
    3738:	0001                	nop
    373a:	1e00                	addi	s0,sp,816
    373c:	08df 0000 5d14      	0x5d14000008df
    3742:	0000                	unimp
    3744:	0000                	unimp
    3746:	08e5040f          	0x8e5040f
    374a:	0000                	unimp
    374c:	08d4040f          	0x8d4040f
    3750:	0000                	unimp
    3752:	5608                	lw	a0,40(a2)
    3754:	0006                	c.slli	zero,0x1
    3756:	fb00                	fsw	fs0,48(a4)
    3758:	0008                	0x8
    375a:	0900                	addi	s0,sp,144
    375c:	0064                	addi	s1,sp,12
    375e:	0000                	unimp
    3760:	0002                	c.slli64	zero
    3762:	eb1f 0004 0400      	0x4000004eb1f
    3768:	62170333          	0x62170333
    376c:	0004                	0x4
    376e:	1f00                	addi	s0,sp,944
    3770:	04e4                	addi	s1,sp,588
    3772:	0000                	unimp
    3774:	3404                	fld	fs1,40(s0)
    3776:	04681d03          	lh	s10,70(a6) # 2d696 <_data_lma+0x2307e>
    377a:	0000                	unimp
    377c:	4a20                	lw	s0,80(a2)
    377e:	06000003          	lb	zero,96(zero) # 60 <_start+0x60>
    3782:	169a                	slli	a3,a3,0x26
    3784:	0041                	c.nop	16
    3786:	0000                	unimp
    3788:	3720                	fld	fs0,104(a4)
    378a:	0000                	unimp
    378c:	0600                	addi	s0,sp,768
    378e:	005d159b          	0x5d159b
    3792:	0000                	unimp
    3794:	b608                	fsd	fa0,40(a2)
    3796:	0005                	c.nop	1
    3798:	3d00                	fld	fs0,56(a0)
    379a:	0009                	c.nop	2
    379c:	0900                	addi	s0,sp,144
    379e:	0064                	addi	s1,sp,12
    37a0:	0000                	unimp
    37a2:	0001                	nop
    37a4:	8e20                	0x8e20
    37a6:	0002                	c.slli64	zero
    37a8:	0600                	addi	s0,sp,768
    37aa:	179e                	slli	a5,a5,0x27
    37ac:	092d                	addi	s2,s2,11
    37ae:	0000                	unimp
    37b0:	8d05                	sub	a0,a0,s1
    37b2:	0000                	unimp
    37b4:	0700                	addi	s0,sp,896
    37b6:	185e                	slli	a6,a6,0x37
    37b8:	00000033          	add	zero,zero,zero
    37bc:	5c05                	li	s8,-31
    37be:	0006                	c.slli	zero,0x1
    37c0:	0700                	addi	s0,sp,896
    37c2:	185f 003a 0000      	0x3a185f
    37c8:	4f05                	li	t5,1
    37ca:	07000007          	0x7000007
    37ce:	1860                	addi	s0,sp,60
    37d0:	005d                	c.nop	23
    37d2:	0000                	unimp
    37d4:	0802                	c.slli64	a6
    37d6:	4204                	lw	s1,0(a2)
    37d8:	0004                	0x4
    37da:	0500                	addi	s0,sp,640
    37dc:	00000017          	auipc	zero,0x0
    37e0:	64186307          	0x64186307
    37e4:	0000                	unimp
    37e6:	0500                	addi	s0,sp,640
    37e8:	000009ef          	jal	s3,37e8 <__divdf3+0x3ac>
    37ec:	74186407          	0x74186407
    37f0:	0009                	c.nop	2
    37f2:	2000                	fld	fs0,0(s0)
    37f4:	00000617          	auipc	a2,0x0
    37f8:	740fba07          	fld	fs4,1856(t6)
    37fc:	0009                	c.nop	2
    37fe:	0500                	addi	s0,sp,640
    3800:	000001cb          	fnmsub.s	ft3,ft0,ft0,ft0,rne
    3804:	5208                	lw	a0,32(a2)
    3806:	4910                	lw	a2,16(a0)
    3808:	0009                	c.nop	2
    380a:	0500                	addi	s0,sp,640
    380c:	0000006f          	j	380c <__divdf3+0x3d0>
    3810:	5308                	lw	a0,32(a4)
    3812:	6110                	flw	fa2,0(a0)
    3814:	0009                	c.nop	2
    3816:	0d00                	addi	s0,sp,656
    3818:	0094                	addi	a3,sp,64
    381a:	0000                	unimp
    381c:	0810                	addi	a2,sp,16
    381e:	1059                	c.nop	-10
    3820:	09ea                	slli	s3,s3,0x1a
    3822:	0000                	unimp
    3824:	4e0e                	lw	t3,192(sp)
    3826:	0800                	addi	s0,sp,16
    3828:	005d0d5b          	0x5d0d5b
    382c:	0000                	unimp
    382e:	0e00                	addi	s0,sp,784
    3830:	0041                	c.nop	16
    3832:	5c08                	lw	a0,56(s0)
    3834:	ea0d                	bnez	a2,3866 <__divdf3+0x42a>
    3836:	0009                	c.nop	2
    3838:	0400                	addi	s0,sp,512
    383a:	420e                	lw	tp,192(sp)
    383c:	0800                	addi	s0,sp,16
    383e:	0d5d                	addi	s10,s10,23
    3840:	09ea                	slli	s3,s3,0x1a
    3842:	0000                	unimp
    3844:	0e08                	addi	a0,sp,784
    3846:	5e080043          	fmadd.q	ft0,fa6,ft0,fa1,rne
    384a:	f00d                	bnez	s0,376c <__divdf3+0x330>
    384c:	0009                	c.nop	2
    384e:	0c00                	addi	s0,sp,528
    3850:	0f00                	addi	s0,sp,912
    3852:	9804                	0x9804
    3854:	0009                	c.nop	2
    3856:	0f00                	addi	s0,sp,912
    3858:	a404                	fsd	fs1,8(s0)
    385a:	0009                	c.nop	2
    385c:	0500                	addi	s0,sp,640
    385e:	0000035b          	0x35b
    3862:	5f08                	lw	a0,56(a4)
    3864:	0009b003          	0x9b003
    3868:	2100                	fld	fs0,0(a0)
    386a:	09d2                	slli	s3,s3,0x14
    386c:	0000                	unimp
    386e:	5801                	li	a6,-32
    3870:	0101                	addi	sp,sp,0
    3872:	6d01                	0x6d01
    3874:	000a                	c.slli	zero,0x2
    3876:	2200                	fld	fs0,0(a2)
    3878:	004e                	c.slli	zero,0x13
    387a:	5801                	li	a6,-32
    387c:	2501                	jal	3e7c <__floatunsidf+0x40>
    387e:	0974                	addi	a3,sp,156
    3880:	0000                	unimp
    3882:	4322                	lw	t1,8(sp)
    3884:	0100                	addi	s0,sp,128
    3886:	0158                	addi	a4,sp,132
    3888:	f030                	fsw	fa2,96(s0)
    388a:	0009                	c.nop	2
    388c:	2200                	fld	fs0,0(a2)
    388e:	0041                	c.nop	16
    3890:	5801                	li	a6,-32
    3892:	3b01                	jal	35a2 <__divdf3+0x166>
    3894:	09ea                	slli	s3,s3,0x1a
    3896:	0000                	unimp
    3898:	4222                	lw	tp,8(sp)
    389a:	0100                	addi	s0,sp,128
    389c:	0158                	addi	a4,sp,132
    389e:	ea46                	fsw	fa7,20(sp)
    38a0:	0009                	c.nop	2
    38a2:	2300                	fld	fs0,0(a4)
    38a4:	0069                	c.nop	26
    38a6:	5a01                	li	s4,-32
    38a8:	0c01                	addi	s8,s8,0
    38aa:	0974                	addi	a3,sp,156
    38ac:	0000                	unimp
    38ae:	01006a23          	0x1006a23
    38b2:	015a                	slli	sp,sp,0x16
    38b4:	0009740f          	0x9740f
    38b8:	2300                	fld	fs0,0(a4)
    38ba:	5a01006b          	0x5a01006b
    38be:	1201                	addi	tp,tp,-32
    38c0:	0974                	addi	a3,sp,156
    38c2:	0000                	unimp
    38c4:	2324                	fld	fs1,64(a4)
    38c6:	6d74                	flw	fa3,92(a0)
    38c8:	0070                	addi	a2,sp,12
    38ca:	6201                	0x6201
    38cc:	1801                	addi	a6,a6,-32
    38ce:	09a4                	addi	s1,sp,216
    38d0:	0000                	unimp
    38d2:	0000                	unimp
    38d4:	3321                	jal	35dc <__divdf3+0x1a0>
    38d6:	000a                	c.slli	zero,0x2
    38d8:	0100                	addi	s0,sp,128
    38da:	0142                	slli	sp,sp,0x10
    38dc:	0101                	addi	sp,sp,0
    38de:	0ac9                	addi	s5,s5,18
    38e0:	0000                	unimp
    38e2:	4e22                	lw	t3,8(sp)
    38e4:	0100                	addi	s0,sp,128
    38e6:	0142                	slli	sp,sp,0x10
    38e8:	741a                	flw	fs0,164(sp)
    38ea:	0009                	c.nop	2
    38ec:	2200                	fld	fs0,0(a2)
    38ee:	42010043          	fmadd.d	ft0,ft2,ft0,fs0,rne
    38f2:	2501                	jal	3ef2 <__clzsi2+0x1e>
    38f4:	09f0                	addi	a2,sp,220
    38f6:	0000                	unimp
    38f8:	4122                	lw	sp,8(sp)
    38fa:	0100                	addi	s0,sp,128
    38fc:	0142                	slli	sp,sp,0x10
    38fe:	ea30                	fsw	fa2,80(a2)
    3900:	0009                	c.nop	2
    3902:	2200                	fld	fs0,0(a2)
    3904:	0042                	c.slli	zero,0x10
    3906:	4201                	li	tp,0
    3908:	3b01                	jal	3618 <__divdf3+0x1dc>
    390a:	09ea                	slli	s3,s3,0x1a
    390c:	0000                	unimp
    390e:	01006923          	0x1006923
    3912:	0144                	addi	s1,sp,132
    3914:	740c                	flw	fa1,40(s0)
    3916:	0009                	c.nop	2
    3918:	2300                	fld	fs0,0(a4)
    391a:	006a                	c.slli	zero,0x1a
    391c:	4401                	li	s0,0
    391e:	0f01                	addi	t5,t5,0
    3920:	0974                	addi	a3,sp,156
    3922:	0000                	unimp
    3924:	01006b23          	0x1006b23
    3928:	0144                	addi	s1,sp,132
    392a:	7412                	flw	fs0,36(sp)
    392c:	0009                	c.nop	2
    392e:	0000                	unimp
    3930:	0021                	c.nop	8
    3932:	000a                	c.slli	zero,0x2
    3934:	0100                	addi	s0,sp,128
    3936:	0101012f          	0x101012f
    393a:	0b1a                	slli	s6,s6,0x6
    393c:	0000                	unimp
    393e:	4e22                	lw	t3,8(sp)
    3940:	0100                	addi	s0,sp,128
    3942:	7418012f          	0x7418012f
    3946:	0009                	c.nop	2
    3948:	2200                	fld	fs0,0(a2)
    394a:	2f010043          	fmadd.q	ft0,ft2,fa6,ft5,rne
    394e:	2301                	jal	3e4e <__floatunsidf+0x12>
    3950:	09f0                	addi	a2,sp,220
    3952:	0000                	unimp
    3954:	4122                	lw	sp,8(sp)
    3956:	0100                	addi	s0,sp,128
    3958:	ea2e012f          	0xea2e012f
    395c:	0009                	c.nop	2
    395e:	2200                	fld	fs0,0(a2)
    3960:	0042                	c.slli	zero,0x10
    3962:	2f01                	jal	4072 <__cvt+0xee>
    3964:	3901                	jal	3574 <__divdf3+0x138>
    3966:	09ea                	slli	s3,s3,0x1a
    3968:	0000                	unimp
    396a:	01006923          	0x1006923
    396e:	0131                	addi	sp,sp,12
    3970:	740c                	flw	fa1,40(s0)
    3972:	0009                	c.nop	2
    3974:	2300                	fld	fs0,0(a4)
    3976:	006a                	c.slli	zero,0x1a
    3978:	3101                	jal	3578 <__divdf3+0x13c>
    397a:	0f01                	addi	t5,t5,0
    397c:	0974                	addi	a3,sp,156
    397e:	0000                	unimp
    3980:	2100                	fld	fs0,0(a0)
    3982:	09a4                	addi	s1,sp,216
    3984:	0000                	unimp
    3986:	1d01                	addi	s10,s10,-32
    3988:	0101                	addi	sp,sp,0
    398a:	6201                	0x6201
    398c:	2200000b          	0x2200000b
    3990:	004e                	c.slli	zero,0x13
    3992:	1d01                	addi	s10,s10,-32
    3994:	1901                	addi	s2,s2,-32
    3996:	0974                	addi	a3,sp,156
    3998:	0000                	unimp
    399a:	4122                	lw	sp,8(sp)
    399c:	0100                	addi	s0,sp,128
    399e:	011d                	addi	sp,sp,7
    39a0:	ea24                	fsw	fs1,80(a2)
    39a2:	0009                	c.nop	2
    39a4:	2200                	fld	fs0,0(a2)
    39a6:	6176                	flw	ft2,92(sp)
    39a8:	006c                	addi	a1,sp,12
    39aa:	1d01                	addi	s10,s10,-32
    39ac:	2e01                	jal	3cbc <__gedf2+0xf4>
    39ae:	0998                	addi	a4,sp,208
    39b0:	0000                	unimp
    39b2:	01006923          	0x1006923
    39b6:	011f 740c 0009      	0x9740c011f
    39bc:	2300                	fld	fs0,0(a4)
    39be:	006a                	c.slli	zero,0x1a
    39c0:	1f01                	addi	t5,t5,-32
    39c2:	0f01                	addi	t5,t5,0
    39c4:	0974                	addi	a3,sp,156
    39c6:	0000                	unimp
    39c8:	2100                	fld	fs0,0(a0)
    39ca:	09c1                	addi	s3,s3,16
    39cc:	0000                	unimp
    39ce:	0d01                	addi	s10,s10,0
    39d0:	0101                	addi	sp,sp,0
    39d2:	b501                	j	37d2 <__divdf3+0x396>
    39d4:	2200000b          	0x2200000b
    39d8:	004e                	c.slli	zero,0x13
    39da:	0d01                	addi	s10,s10,0
    39dc:	1901                	addi	s2,s2,-32
    39de:	0974                	addi	a3,sp,156
    39e0:	0000                	unimp
    39e2:	4322                	lw	t1,8(sp)
    39e4:	0100                	addi	s0,sp,128
    39e6:	010d                	addi	sp,sp,3
    39e8:	f024                	fsw	fs1,96(s0)
    39ea:	0009                	c.nop	2
    39ec:	2200                	fld	fs0,0(a2)
    39ee:	0041                	c.nop	16
    39f0:	0d01                	addi	s10,s10,0
    39f2:	2f01                	jal	4102 <__exponent+0x1a>
    39f4:	09ea                	slli	s3,s3,0x1a
    39f6:	0000                	unimp
    39f8:	7622                	flw	fa2,40(sp)
    39fa:	6c61                	lui	s8,0x18
    39fc:	0100                	addi	s0,sp,128
    39fe:	010d                	addi	sp,sp,3
    3a00:	9839                	andi	s0,s0,-18
    3a02:	0009                	c.nop	2
    3a04:	2300                	fld	fs0,0(a4)
    3a06:	0069                	c.nop	26
    3a08:	0f01                	addi	t5,t5,0
    3a0a:	0c01                	addi	s8,s8,0
    3a0c:	0974                	addi	a3,sp,156
    3a0e:	0000                	unimp
    3a10:	01006a23          	0x1006a23
    3a14:	740f010f          	0x740f010f
    3a18:	0009                	c.nop	2
    3a1a:	0000                	unimp
    3a1c:	1025                	c.nop	-23
    3a1e:	000a                	c.slli	zero,0x2
    3a20:	0100                	addi	s0,sp,128
    3a22:	01ee                	slli	gp,gp,0x1b
    3a24:	0949                	addi	s2,s2,18
    3a26:	0000                	unimp
    3a28:	2b01                	jal	3f38 <__clzsi2+0x64>
    3a2a:	000c                	0xc
    3a2c:	2600                	fld	fs0,8(a2)
    3a2e:	004e                	c.slli	zero,0x13
    3a30:	ee01                	bnez	a2,3a48 <__divdf3+0x60c>
    3a32:	00097413          	andi	s0,s2,0
    3a36:	2600                	fld	fs0,8(a2)
    3a38:	ee010043          	fmadd.q	ft0,ft2,ft0,ft9,rne
    3a3c:	f01e                	fsw	ft7,32(sp)
    3a3e:	0009                	c.nop	2
    3a40:	2700                	fld	fs0,8(a4)
    3a42:	099c                	addi	a5,sp,208
    3a44:	0000                	unimp
    3a46:	ee01                	bnez	a2,3a5e <__divdf3+0x622>
    3a48:	9828                	0x9828
    3a4a:	0009                	c.nop	2
    3a4c:	2800                	fld	fs0,16(s0)
    3a4e:	6d74                	flw	fa3,92(a0)
    3a50:	0070                	addi	a2,sp,12
    3a52:	f001                	bnez	s0,3952 <__divdf3+0x516>
    3a54:	a40c                	fsd	fa1,8(s0)
    3a56:	0009                	c.nop	2
    3a58:	2900                	fld	fs0,16(a0)
    3a5a:	097a                	slli	s2,s2,0x1e
    3a5c:	0000                	unimp
    3a5e:	f001                	bnez	s0,395e <__divdf3+0x522>
    3a60:	a415                	j	3c84 <__gedf2+0xbc>
    3a62:	0009                	c.nop	2
    3a64:	2800                	fld	fs0,16(s0)
    3a66:	00727563          	bgeu	tp,t2,3a70 <__divdf3+0x634>
    3a6a:	f001                	bnez	s0,396a <__divdf3+0x52e>
    3a6c:	a41f 0009 2800      	0x28000009a41f
    3a72:	6572                	flw	fa0,28(sp)
    3a74:	0074                	addi	a3,sp,12
    3a76:	f101                	bnez	a0,3976 <__divdf3+0x53a>
    3a78:	490c                	lw	a1,16(a0)
    3a7a:	0009                	c.nop	2
    3a7c:	2800                	fld	fs0,16(s0)
    3a7e:	0069                	c.nop	26
    3a80:	f201                	bnez	a2,3980 <__divdf3+0x544>
    3a82:	740c                	flw	fa1,40(s0)
    3a84:	0009                	c.nop	2
    3a86:	2800                	fld	fs0,16(s0)
    3a88:	006a                	c.slli	zero,0x1a
    3a8a:	f201                	bnez	a2,398a <__divdf3+0x54e>
    3a8c:	0009740f          	0x9740f
    3a90:	0000                	unimp
    3a92:	1a2a                	slli	s4,s4,0x2a
    3a94:	0009                	c.nop	2
    3a96:	0100                	addi	s0,sp,128
    3a98:	01b5                	addi	gp,gp,13
    3a9a:	0974                	addi	a3,sp,156
    3a9c:	0000                	unimp
    3a9e:	1bb8                	addi	a4,sp,504
    3aa0:	0000                	unimp
    3aa2:	0124                	addi	s1,sp,136
    3aa4:	0000                	unimp
    3aa6:	9c01                	0x9c01
    3aa8:	0ce8                	addi	a0,sp,604
    3aaa:	0000                	unimp
    3aac:	0005652b          	0x5652b
    3ab0:	0100                	addi	s0,sp,128
    3ab2:	19b5                	addi	s3,s3,-19
    3ab4:	0974                	addi	a3,sp,156
    3ab6:	0000                	unimp
    3ab8:	2a8d                	jal	3c2a <__gedf2+0x62>
    3aba:	0000                	unimp
    3abc:	000a1b2b          	0xa1b2b
    3ac0:	0100                	addi	s0,sp,128
    3ac2:	28b5                	jal	3b3e <__divdf3+0x702>
    3ac4:	0105                	addi	sp,sp,1
    3ac6:	0000                	unimp
    3ac8:	2ac4                	fld	fs1,144(a3)
    3aca:	0000                	unimp
    3acc:	0007952b          	0x7952b
    3ad0:	0100                	addi	s0,sp,128
    3ad2:	37b5                	jal	3a3e <__divdf3+0x602>
    3ad4:	0961                	addi	s2,s2,24
    3ad6:	0000                	unimp
    3ad8:	2af0                	fld	fa2,208(a3)
    3ada:	0000                	unimp
    3adc:	702c                	flw	fa1,96(s0)
    3ade:	0100                	addi	s0,sp,128
    3ae0:	49b5                	li	s3,13
    3ae2:	0ce8                	addi	a0,sp,604
    3ae4:	0000                	unimp
    3ae6:	5d01                	li	s10,-32
    3ae8:	4e2d                	li	t3,11
    3aea:	0100                	addi	s0,sp,128
    3aec:	09740db7          	lui	s11,0x9740
    3af0:	0000                	unimp
    3af2:	2b19                	jal	4008 <__cvt+0x84>
    3af4:	0000                	unimp
    3af6:	412d                	li	sp,11
    3af8:	0100                	addi	s0,sp,128
    3afa:	0db8                	addi	a4,sp,728
    3afc:	09ea                	slli	s3,s3,0x1a
    3afe:	0000                	unimp
    3b00:	2b45                	jal	40b0 <__cvt+0x12c>
    3b02:	0000                	unimp
    3b04:	422d                	li	tp,11
    3b06:	0100                	addi	s0,sp,128
    3b08:	0db9                	addi	s11,s11,14
    3b0a:	09ea                	slli	s3,s3,0x1a
    3b0c:	0000                	unimp
    3b0e:	2b71                	jal	40aa <__cvt+0x126>
    3b10:	0000                	unimp
    3b12:	fa2e                	fsw	fa1,52(sp)
    3b14:	0009                	c.nop	2
    3b16:	0100                	addi	s0,sp,128
    3b18:	0dba                	slli	s11,s11,0xe
    3b1a:	0961                	addi	s2,s2,24
    3b1c:	0000                	unimp
    3b1e:	00002b8f          	0x2b8f
    3b22:	762d                	lui	a2,0xfffeb
    3b24:	6c61                	lui	s8,0x18
    3b26:	0100                	addi	s0,sp,128
    3b28:	09980dbb          	0x9980dbb
    3b2c:	0000                	unimp
    3b2e:	2bd2                	fld	fs7,272(sp)
    3b30:	0000                	unimp
    3b32:	692d                	lui	s2,0xb
    3b34:	0100                	addi	s0,sp,128
    3b36:	0dbc                	addi	a5,sp,728
    3b38:	0974                	addi	a3,sp,156
    3b3a:	0000                	unimp
    3b3c:	2c0c                	fld	fa1,24(s0)
    3b3e:	0000                	unimp
    3b40:	6a2d                	lui	s4,0xb
    3b42:	0100                	addi	s0,sp,128
    3b44:	14bc                	addi	a5,sp,616
    3b46:	0974                	addi	a3,sp,156
    3b48:	0000                	unimp
    3b4a:	2c64                	fld	fs1,216(s0)
    3b4c:	0000                	unimp
    3b4e:	0f00                	addi	s0,sp,912
    3b50:	f604                	fsw	fs1,40(a2)
    3b52:	0009                	c.nop	2
    3b54:	2a00                	fld	fs0,16(a2)
    3b56:	09b5                	addi	s3,s3,13
    3b58:	0000                	unimp
    3b5a:	8201                	c.srli64	a2
    3b5c:	4901                	li	s2,0
    3b5e:	0009                	c.nop	2
    3b60:	0400                	addi	s0,sp,512
    3b62:	0016                	c.slli	zero,0x5
    3b64:	7000                	flw	fs0,32(s0)
    3b66:	0005                	c.nop	1
    3b68:	0100                	addi	s0,sp,128
    3b6a:	ca9c                	sw	a5,16(a3)
    3b6c:	0011                	c.nop	4
    3b6e:	2f00                	fld	fs0,24(a4)
    3b70:	004e                	c.slli	zero,0x13
    3b72:	8201                	c.srli64	a2
    3b74:	7414                	flw	fa3,40(s0)
    3b76:	0009                	c.nop	2
    3b78:	d500                	sw	s0,40(a0)
    3b7a:	002c                	addi	a1,sp,8
    3b7c:	2f00                	fld	fs0,24(a4)
    3b7e:	82010043          	fmadd.d	ft0,ft2,ft0,fa6,rne
    3b82:	f01f 0009 1a00      	0x1a000009f01f
    3b88:	002d                	c.nop	11
    3b8a:	2f00                	fld	fs0,24(a4)
    3b8c:	0041                	c.nop	16
    3b8e:	8201                	c.srli64	a2
    3b90:	ea2a                	fsw	fa0,20(sp)
    3b92:	0009                	c.nop	2
    3b94:	7500                	flw	fs0,40(a0)
    3b96:	002d                	c.nop	11
    3b98:	2f00                	fld	fs0,24(a4)
    3b9a:	0042                	c.slli	zero,0x10
    3b9c:	8201                	c.srli64	a2
    3b9e:	ea35                	bnez	a2,3c12 <__gedf2+0x4a>
    3ba0:	0009                	c.nop	2
    3ba2:	d000                	sw	s0,32(s0)
    3ba4:	002d                	c.nop	11
    3ba6:	2f00                	fld	fs0,24(a4)
    3ba8:	6176                	flw	ft2,92(sp)
    3baa:	006c                	addi	a1,sp,12
    3bac:	8201                	c.srli64	a2
    3bae:	0009983f 002e2000 	0x2e20000009983f
    3bb6:	2d00                	fld	fs0,24(a0)
    3bb8:	00637263          	bgeu	t1,t1,3bbc <__divdf3+0x780>
    3bbc:	8401                	c.srai64	s0
    3bbe:	550c                	lw	a1,40(a0)
    3bc0:	0009                	c.nop	2
    3bc2:	5a00                	lw	s0,48(a2)
    3bc4:	002e                	c.slli	zero,0xb
    3bc6:	2e00                	fld	fs0,24(a2)
    3bc8:	099c                	addi	a5,sp,208
    3bca:	0000                	unimp
    3bcc:	8501                	c.srai64	a0
    3bce:	980c                	0x980c
    3bd0:	0009                	c.nop	2
    3bd2:	d600                	sw	s0,40(a2)
    3bd4:	002e                	c.slli	zero,0xb
    3bd6:	3000                	fld	fs0,32(s0)
    3bd8:	0b1a                	slli	s6,s6,0x6
    3bda:	0000                	unimp
    3bdc:	1648                	addi	a0,sp,804
    3bde:	0000                	unimp
    3be0:	0428                	addi	a0,sp,520
    3be2:	0000                	unimp
    3be4:	8701                	c.srai64	a4
    3be6:	b805                	j	3416 <__udivdi3+0x47a>
    3be8:	000d                	c.nop	3
    3bea:	3100                	fld	fs0,32(a0)
    3bec:	0b3e                	slli	s6,s6,0xf
    3bee:	0000                	unimp
    3bf0:	2ef4                	fld	fa3,216(a3)
    3bf2:	0000                	unimp
    3bf4:	3331                	jal	3900 <__divdf3+0x4c4>
    3bf6:	1200000b          	0x1200000b
    3bfa:	3100002f          	0x3100002f
    3bfe:	0b28                	addi	a0,sp,408
    3c00:	0000                	unimp
    3c02:	2f6d                	jal	43bc <_printf_float+0x22c>
    3c04:	0000                	unimp
    3c06:	2832                	fld	fa6,264(sp)
    3c08:	0004                	0x4
    3c0a:	3300                	fld	fs0,32(a4)
    3c0c:	00000b4b          	fnmsub.s	fs6,ft0,ft0,ft0,rne
    3c10:	2fb2                	fld	ft11,264(sp)
    3c12:	0000                	unimp
    3c14:	000b5633          	srl	a2,s6,zero
    3c18:	f300                	fsw	fs0,32(a4)
    3c1a:	0000002f          	0x2f
    3c1e:	3000                	fld	fs0,32(s0)
    3c20:	0b62                	slli	s6,s6,0x18
    3c22:	0000                	unimp
    3c24:	16c0                	addi	s0,sp,868
    3c26:	0000                	unimp
    3c28:	0448                	addi	a0,sp,516
    3c2a:	0000                	unimp
    3c2c:	8b01                	andi	a4,a4,0
    3c2e:	f905                	bnez	a0,3b5e <__divdf3+0x722>
    3c30:	000d                	c.nop	3
    3c32:	3400                	fld	fs0,40(s0)
    3c34:	0b91                	addi	s7,s7,4
    3c36:	0000                	unimp
    3c38:	8634                	0x8634
    3c3a:	3400000b          	0x3400000b
    3c3e:	00000b7b          	0xb7b
    3c42:	7034                	flw	fa3,96(s0)
    3c44:	3200000b          	0x3200000b
    3c48:	0448                	addi	a0,sp,516
    3c4a:	0000                	unimp
    3c4c:	000b9e33          	sll	t3,s7,zero
    3c50:	0700                	addi	s0,sp,896
    3c52:	0030                	addi	a2,sp,8
    3c54:	3300                	fld	fs0,32(a4)
    3c56:	0ba9                	addi	s7,s7,10
    3c58:	0000                	unimp
    3c5a:	303e                	fld	ft0,488(sp)
    3c5c:	0000                	unimp
    3c5e:	0000                	unimp
    3c60:	b530                	fsd	fa2,104(a0)
    3c62:	0c00000b          	0xc00000b
    3c66:	60000017          	auipc	zero,0x60000
    3c6a:	0004                	0x4
    3c6c:	0100                	addi	s0,sp,128
    3c6e:	0b8c                	addi	a1,sp,464
    3c70:	0e59                	addi	t3,t3,22
    3c72:	0000                	unimp
    3c74:	da34                	sw	a3,112(a2)
    3c76:	3400000b          	0x3400000b
    3c7a:	0bd0                	addi	a2,sp,468
    3c7c:	0000                	unimp
    3c7e:	c634                	sw	a3,72(a2)
    3c80:	3200000b          	0x3200000b
    3c84:	0460                	addi	s0,sp,524
    3c86:	0000                	unimp
    3c88:	000be633          	or	a2,s7,zero
    3c8c:	5200                	lw	s0,32(a2)
    3c8e:	0030                	addi	a2,sp,8
    3c90:	3300                	fld	fs0,32(a4)
    3c92:	0bf2                	slli	s7,s7,0x1c
    3c94:	0000                	unimp
    3c96:	307c                	fld	fa5,224(s0)
    3c98:	0000                	unimp
    3c9a:	000bfe33          	and	t3,s7,zero
    3c9e:	b000                	fsd	fs0,32(s0)
    3ca0:	0030                	addi	a2,sp,8
    3ca2:	3300                	fld	fs0,32(a4)
    3ca4:	0c0a                	slli	s8,s8,0x2
    3ca6:	0000                	unimp
    3ca8:	30ce                	fld	ft1,240(sp)
    3caa:	0000                	unimp
    3cac:	000c1633          	sll	a2,s8,zero
    3cb0:	f700                	fsw	fs0,40(a4)
    3cb2:	0030                	addi	a2,sp,8
    3cb4:	3300                	fld	fs0,32(a4)
    3cb6:	0c20                	addi	s0,sp,536
    3cb8:	0000                	unimp
    3cba:	3115                	jal	38de <__divdf3+0x4a2>
    3cbc:	0000                	unimp
    3cbe:	0000                	unimp
    3cc0:	c930                	sw	a2,80(a0)
    3cc2:	000a                	c.slli	zero,0x2
    3cc4:	9c00                	0x9c00
    3cc6:	78000017          	auipc	zero,0x78000
    3cca:	0004                	0x4
    3ccc:	0100                	addi	s0,sp,128
    3cce:	0590                	addi	a2,sp,704
    3cd0:	0eaa                	slli	t4,t4,0xa
    3cd2:	0000                	unimp
    3cd4:	f831                	bnez	s0,3c28 <__gedf2+0x60>
    3cd6:	000a                	c.slli	zero,0x2
    3cd8:	2900                	fld	fs0,16(a0)
    3cda:	0031                	c.nop	12
    3cdc:	3100                	fld	fs0,32(a0)
    3cde:	0aed                	addi	s5,s5,27
    3ce0:	0000                	unimp
    3ce2:	00003163          	0x3163
    3ce6:	e231                	bnez	a2,3d2a <__ledf2+0x66>
    3ce8:	000a                	c.slli	zero,0x2
    3cea:	a800                	fsd	fs0,16(s0)
    3cec:	0031                	c.nop	12
    3cee:	3100                	fld	fs0,32(a0)
    3cf0:	00000ad7          	0xad7
    3cf4:	31e2                	fld	ft3,56(sp)
    3cf6:	0000                	unimp
    3cf8:	7832                	flw	fa6,44(sp)
    3cfa:	0004                	0x4
    3cfc:	3300                	fld	fs0,32(a4)
    3cfe:	00000b03          	lb	s6,0(zero) # 0 <_start>
    3d02:	320c                	fld	fa1,32(a2)
    3d04:	0000                	unimp
    3d06:	000b0e33          	add	t3,s6,zero
    3d0a:	2c00                	fld	fs0,24(s0)
    3d0c:	0032                	c.slli	zero,0xc
    3d0e:	0000                	unimp
    3d10:	3000                	fld	fs0,32(s0)
    3d12:	0bb5                	addi	s7,s7,13
    3d14:	0000                	unimp
    3d16:	17f8                	addi	a4,sp,1004
    3d18:	0000                	unimp
    3d1a:	04a0                	addi	s0,sp,584
    3d1c:	0000                	unimp
    3d1e:	9101                	srli	a0,a0,0x20
    3d20:	000f0a0b          	0xf0a0b
    3d24:	3400                	fld	fs0,40(s0)
    3d26:	0bda                	slli	s7,s7,0x16
    3d28:	0000                	unimp
    3d2a:	d034                	sw	a3,96(s0)
    3d2c:	3400000b          	0x3400000b
    3d30:	0bc6                	slli	s7,s7,0x11
    3d32:	0000                	unimp
    3d34:	a032                	fsd	fa2,0(sp)
    3d36:	0004                	0x4
    3d38:	3300                	fld	fs0,32(a4)
    3d3a:	0be6                	slli	s7,s7,0x19
    3d3c:	0000                	unimp
    3d3e:	3240                	fld	fs0,160(a2)
    3d40:	0000                	unimp
    3d42:	000bf233          	and	tp,s7,zero
    3d46:	6a00                	flw	fs0,16(a2)
    3d48:	0032                	c.slli	zero,0xc
    3d4a:	3300                	fld	fs0,32(a4)
    3d4c:	0bfe                	slli	s7,s7,0x1f
    3d4e:	0000                	unimp
    3d50:	329e                	fld	ft5,480(sp)
    3d52:	0000                	unimp
    3d54:	000c0a33          	add	s4,s8,zero
    3d58:	bc00                	fsd	fs0,56(s0)
    3d5a:	0032                	c.slli	zero,0xc
    3d5c:	3300                	fld	fs0,32(a4)
    3d5e:	0c16                	slli	s8,s8,0x5
    3d60:	0000                	unimp
    3d62:	32e5                	jal	374a <__divdf3+0x30e>
    3d64:	0000                	unimp
    3d66:	000c2033          	sltz	zero,s8
    3d6a:	f800                	fsw	fs0,48(s0)
    3d6c:	0032                	c.slli	zero,0xc
    3d6e:	0000                	unimp
    3d70:	3000                	fld	fs0,32(s0)
    3d72:	0a6d                	addi	s4,s4,27
    3d74:	0000                	unimp
    3d76:	1884                	addi	s1,sp,112
    3d78:	0000                	unimp
    3d7a:	04c0                	addi	s0,sp,580
    3d7c:	0000                	unimp
    3d7e:	9501                	srai	a0,a0,0x20
    3d80:	6405                	lui	s0,0x1
    3d82:	3100000f          	0x3100000f
    3d86:	0a9c                	addi	a5,sp,336
    3d88:	0000                	unimp
    3d8a:	00003347          	fmsub.s	ft6,ft0,ft0,ft0,rup
    3d8e:	9131                	srli	a0,a0,0x2c
    3d90:	000a                	c.slli	zero,0x2
    3d92:	8100                	0x8100
    3d94:	31000033          	0x31000033
    3d98:	0a86                	slli	s5,s5,0x1
    3d9a:	0000                	unimp
    3d9c:	33c6                	fld	ft7,112(sp)
    3d9e:	0000                	unimp
    3da0:	7b31                	lui	s6,0xfffec
    3da2:	000a                	c.slli	zero,0x2
    3da4:	0000                	unimp
    3da6:	0034                	addi	a3,sp,8
    3da8:	3200                	fld	fs0,32(a2)
    3daa:	04c0                	addi	s0,sp,580
    3dac:	0000                	unimp
    3dae:	000aa733          	sltz	a4,s5
    3db2:	2a00                	fld	fs0,16(a2)
    3db4:	0034                	addi	a3,sp,8
    3db6:	3300                	fld	fs0,32(a4)
    3db8:	0ab2                	slli	s5,s5,0xc
    3dba:	0000                	unimp
    3dbc:	3461                	jal	3844 <__divdf3+0x408>
    3dbe:	0000                	unimp
    3dc0:	000abd33          	sltu	s10,s5,zero
    3dc4:	8000                	0x8000
    3dc6:	0034                	addi	a3,sp,8
    3dc8:	0000                	unimp
    3dca:	3000                	fld	fs0,32(s0)
    3dcc:	0bb5                	addi	s7,s7,13
    3dce:	0000                	unimp
    3dd0:	1914                	addi	a3,sp,176
    3dd2:	0000                	unimp
    3dd4:	04e8                	addi	a0,sp,588
    3dd6:	0000                	unimp
    3dd8:	9601                	srai	a2,a2,0x20
    3dda:	000fc40b          	0xfc40b
    3dde:	3400                	fld	fs0,40(s0)
    3de0:	0bda                	slli	s7,s7,0x16
    3de2:	0000                	unimp
    3de4:	d034                	sw	a3,96(s0)
    3de6:	3400000b          	0x3400000b
    3dea:	0bc6                	slli	s7,s7,0x11
    3dec:	0000                	unimp
    3dee:	e832                	fsw	fa2,16(sp)
    3df0:	0004                	0x4
    3df2:	3300                	fld	fs0,32(a4)
    3df4:	0be6                	slli	s7,s7,0x19
    3df6:	0000                	unimp
    3df8:	349f 0000 f233      	0xf2330000349f
    3dfe:	c900000b          	0xc900000b
    3e02:	0034                	addi	a3,sp,8
    3e04:	3300                	fld	fs0,32(a4)
    3e06:	0bfe                	slli	s7,s7,0x1f
    3e08:	0000                	unimp
    3e0a:	34fd                	jal	38f8 <__divdf3+0x4bc>
    3e0c:	0000                	unimp
    3e0e:	000c0a33          	add	s4,s8,zero
    3e12:	1b00                	addi	s0,sp,432
    3e14:	0035                	c.nop	13
    3e16:	3300                	fld	fs0,32(a4)
    3e18:	0c16                	slli	s8,s8,0x5
    3e1a:	0000                	unimp
    3e1c:	3544                	fld	fs1,168(a0)
    3e1e:	0000                	unimp
    3e20:	000c2033          	sltz	zero,s8
    3e24:	5700                	lw	s0,40(a4)
    3e26:	0035                	c.nop	13
    3e28:	0000                	unimp
    3e2a:	3000                	fld	fs0,32(s0)
    3e2c:	0a02                	c.slli64	s4
    3e2e:	0000                	unimp
    3e30:	1994                	addi	a3,sp,240
    3e32:	0000                	unimp
    3e34:	0508                	addi	a0,sp,640
    3e36:	0000                	unimp
    3e38:	9a01                	andi	a2,a2,-32
    3e3a:	3105                	jal	3a5a <__divdf3+0x61e>
    3e3c:	0010                	0x10
    3e3e:	3100                	fld	fs0,32(a0)
    3e40:	0a31                	addi	s4,s4,12
    3e42:	0000                	unimp
    3e44:	35a6                	fld	fa1,104(sp)
    3e46:	0000                	unimp
    3e48:	2631                	jal	4154 <__exponent+0x6c>
    3e4a:	000a                	c.slli	zero,0x2
    3e4c:	d500                	sw	s0,40(a0)
    3e4e:	0035                	c.nop	13
    3e50:	3100                	fld	fs0,32(a0)
    3e52:	00000a1b          	0xa1b
    3e56:	0000360f          	0x360f
    3e5a:	1031                	c.nop	-20
    3e5c:	000a                	c.slli	zero,0x2
    3e5e:	3e00                	fld	fs0,56(a2)
    3e60:	0036                	c.slli	zero,0xd
    3e62:	3200                	fld	fs0,32(a2)
    3e64:	0508                	addi	a0,sp,640
    3e66:	0000                	unimp
    3e68:	000a3c33          	sltu	s8,s4,zero
    3e6c:	5d00                	lw	s0,56(a0)
    3e6e:	0036                	c.slli	zero,0xd
    3e70:	3300                	fld	fs0,32(a4)
    3e72:	00000a47          	fmsub.s	fs4,ft0,ft0,ft0,rne
    3e76:	367c                	fld	fa5,232(a2)
    3e78:	0000                	unimp
    3e7a:	000a5233          	srl	tp,s4,zero
    3e7e:	9b00                	0x9b00
    3e80:	0036                	c.slli	zero,0xd
    3e82:	3500                	fld	fs0,40(a0)
    3e84:	0a5d                	addi	s4,s4,23
    3e86:	0000                	unimp
    3e88:	0530                	addi	a2,sp,648
    3e8a:	0000                	unimp
    3e8c:	000a5e33          	srl	t3,s4,zero
    3e90:	d200                	sw	s0,32(a2)
    3e92:	0036                	c.slli	zero,0xd
    3e94:	0000                	unimp
    3e96:	0000                	unimp
    3e98:	b530                	fsd	fa2,104(a0)
    3e9a:	3000000b          	0x3000000b
    3e9e:	001a                	c.slli	zero,0x6
    3ea0:	4800                	lw	s0,16(s0)
    3ea2:	0005                	c.nop	1
    3ea4:	0100                	addi	s0,sp,128
    3ea6:	10910b9b          	0x10910b9b
    3eaa:	0000                	unimp
    3eac:	da34                	sw	a3,112(a2)
    3eae:	3400000b          	0x3400000b
    3eb2:	0bd0                	addi	a2,sp,468
    3eb4:	0000                	unimp
    3eb6:	c634                	sw	a3,72(a2)
    3eb8:	3200000b          	0x3200000b
    3ebc:	0548                	addi	a0,sp,644
    3ebe:	0000                	unimp
    3ec0:	000be633          	or	a2,s7,zero
    3ec4:	e500                	fsw	fs0,8(a0)
    3ec6:	0036                	c.slli	zero,0xd
    3ec8:	3300                	fld	fs0,32(a4)
    3eca:	0bf2                	slli	s7,s7,0x1c
    3ecc:	0000                	unimp
    3ece:	0000370f          	0x370f
    3ed2:	000bfe33          	and	t3,s7,zero
    3ed6:	4300                	lw	s0,0(a4)
    3ed8:	33000037          	lui	zero,0x33000
    3edc:	0c0a                	slli	s8,s8,0x2
    3ede:	0000                	unimp
    3ee0:	3761                	jal	3e68 <__floatunsidf+0x2c>
    3ee2:	0000                	unimp
    3ee4:	000c1633          	sll	a2,s8,zero
    3ee8:	8a00                	0x8a00
    3eea:	33000037          	lui	zero,0x33000
    3eee:	0c20                	addi	s0,sp,536
    3ef0:	0000                	unimp
    3ef2:	379d                	jal	3e58 <__floatunsidf+0x1c>
    3ef4:	0000                	unimp
    3ef6:	0000                	unimp
    3ef8:	1a30                	addi	a2,sp,312
    3efa:	b800000b          	0xb800000b
    3efe:	001a                	c.slli	zero,0x6
    3f00:	6800                	flw	fs0,16(s0)
    3f02:	0005                	c.nop	1
    3f04:	0100                	addi	s0,sp,128
    3f06:	05a0                	addi	s0,sp,712
    3f08:	10d5                	addi	ra,ra,-11
    3f0a:	0000                	unimp
    3f0c:	3e34                	fld	fa3,120(a2)
    3f0e:	3100000b          	0x3100000b
    3f12:	00000b33          	add	s6,zero,zero
    3f16:	37ec                	fld	fa1,232(a5)
    3f18:	0000                	unimp
    3f1a:	2831                	jal	3f36 <__clzsi2+0x62>
    3f1c:	1900000b          	0x1900000b
    3f20:	0038                	addi	a4,sp,8
    3f22:	3200                	fld	fs0,32(a2)
    3f24:	0568                	addi	a0,sp,652
    3f26:	0000                	unimp
    3f28:	000b4b33          	xor	s6,s6,zero
    3f2c:	3800                	fld	fs0,48(s0)
    3f2e:	0038                	addi	a4,sp,8
    3f30:	3300                	fld	fs0,32(a4)
    3f32:	0b56                	slli	s6,s6,0x15
    3f34:	0000                	unimp
    3f36:	00003863          	0x3863
    3f3a:	0000                	unimp
    3f3c:	9836                	add	a6,a6,a3
    3f3e:	a2000017          	auipc	zero,0xa2000
    3f42:	0014                	0x14
    3f44:	e800                	fsw	fs0,16(s0)
    3f46:	0010                	0x10
    3f48:	3700                	fld	fs0,40(a4)
    3f4a:	5b01                	li	s6,-32
    3f4c:	3001                	jal	374c <__divdf3+0x310>
    3f4e:	3600                	fld	fs0,40(a2)
    3f50:	17b0                	addi	a2,sp,1000
    3f52:	0000                	unimp
    3f54:	14ae                	slli	s1,s1,0x2b
    3f56:	0000                	unimp
    3f58:	00001107          	0x1107
    3f5c:	025a0137          	lui	sp,0x25a0
    3f60:	01370083          	lb	ra,19(a4) # fffe0013 <__freertos_irq_stack_top+0xfefd0013>
    3f64:	3730015b          	0x3730015b
    3f68:	5c01                	li	s8,-32
    3f6a:	8b02                	jr	s6
    3f6c:	0000                	unimp
    3f6e:	8036                	c.mv	zero,a3
    3f70:	0018                	0x18
    3f72:	a200                	fsd	fs0,0(a2)
    3f74:	0014                	0x14
    3f76:	1b00                	addi	s0,sp,432
    3f78:	0011                	c.nop	4
    3f7a:	3700                	fld	fs0,40(a4)
    3f7c:	5b01                	li	s6,-32
    3f7e:	8402                	jr	s0
    3f80:	0000                	unimp
    3f82:	ac36                	fsd	fa3,24(sp)
    3f84:	0018                	0x18
    3f86:	ae00                	fsd	fs0,24(a2)
    3f88:	0014                	0x14
    3f8a:	3400                	fld	fs0,40(s0)
    3f8c:	0011                	c.nop	4
    3f8e:	3700                	fld	fs0,40(a4)
    3f90:	5b01                	li	s6,-32
    3f92:	3001                	jal	3792 <__divdf3+0x356>
    3f94:	025c0137          	lui	sp,0x25c0
    3f98:	0084                	addi	s1,sp,64
    3f9a:	3600                	fld	fs0,40(a2)
    3f9c:	19a0                	addi	s0,sp,248
    3f9e:	0000                	unimp
    3fa0:	14a2                	slli	s1,s1,0x28
    3fa2:	0000                	unimp
    3fa4:	0000114b          	fnmsub.s	ft2,ft0,ft0,ft0,rtz
    3fa8:	055b0137          	lui	sp,0x55b0
    3fac:	bc91                	j	3a00 <__divdf3+0x5c4>
    3fae:	947f                	0x947f
    3fb0:	0002                	c.slli64	zero
    3fb2:	bc36                	fsd	fa3,56(sp)
    3fb4:	0019                	c.nop	6
    3fb6:	ae00                	fsd	fs0,24(a2)
    3fb8:	0014                	0x14
    3fba:	6a00                	flw	fs0,16(a2)
    3fbc:	0011                	c.nop	4
    3fbe:	3700                	fld	fs0,40(a4)
    3fc0:	5a01                	li	s4,-32
    3fc2:	8a02                	jr	s4
    3fc4:	3700                	fld	fs0,40(a4)
    3fc6:	5b01                	li	s6,-32
    3fc8:	3001                	jal	37c8 <__divdf3+0x38c>
    3fca:	025c0137          	lui	sp,0x25c0
    3fce:	0084                	addi	s1,sp,64
    3fd0:	3600                	fld	fs0,40(a2)
    3fd2:	1ab8                	addi	a4,sp,376
    3fd4:	0000                	unimp
    3fd6:	14a2                	slli	s1,s1,0x28
    3fd8:	0000                	unimp
    3fda:	1181                	addi	gp,gp,-32
    3fdc:	0000                	unimp
    3fde:	055b0137          	lui	sp,0x55b0
    3fe2:	bc91                	j	3a36 <__divdf3+0x5fa>
    3fe4:	947f                	0x947f
    3fe6:	0002                	c.slli64	zero
    3fe8:	4036                	0x4036
    3fea:	a200001b          	0xa200001b
    3fee:	0014                	0x14
    3ff0:	9400                	0x9400
    3ff2:	0011                	c.nop	4
    3ff4:	3700                	fld	fs0,40(a4)
    3ff6:	5b01                	li	s6,-32
    3ff8:	3001                	jal	37f8 <__divdf3+0x3bc>
    3ffa:	3600                	fld	fs0,40(a2)
    3ffc:	1b50                	addi	a2,sp,436
    3ffe:	0000                	unimp
    4000:	14a2                	slli	s1,s1,0x28
    4002:	0000                	unimp
    4004:	000011a7          	0x11a7
    4008:	015a0137          	lui	sp,0x15a0
    400c:	0030                	addi	a2,sp,8
    400e:	6036                	flw	ft0,76(sp)
    4010:	a200001b          	0xa200001b
    4014:	0014                	0x14
    4016:	ba00                	fsd	fs0,48(a2)
    4018:	0011                	c.nop	4
    401a:	3700                	fld	fs0,40(a4)
    401c:	5a01                	li	s4,-32
    401e:	3001                	jal	381e <__divdf3+0x3e2>
    4020:	3800                	fld	fs0,48(s0)
    4022:	1b70                	addi	a2,sp,444
    4024:	0000                	unimp
    4026:	14a2                	slli	s1,s1,0x28
    4028:	0000                	unimp
    402a:	015a0137          	lui	sp,0x15a0
    402e:	0030                	addi	a2,sp,8
    4030:	2a00                	fld	fs0,16(a2)
    4032:	03df 0000 5c01      	0x5c01000003df
    4038:	5501                	li	a0,-32
    403a:	0009                	c.nop	2
    403c:	7400                	flw	fs0,40(s0)
    403e:	4400001b          	0x4400001b
    4042:	0000                	unimp
    4044:	0100                	addi	s0,sp,128
    4046:	6d9c                	flw	fa5,24(a1)
    4048:	0012                	c.slli	zero,0x4
    404a:	2f00                	fld	fs0,24(a4)
    404c:	0070                	addi	a2,sp,12
    404e:	5c01                	li	s8,-32
    4050:	e81f 000c 8200      	0x8200000ce81f
    4056:	0038                	addi	a4,sp,8
    4058:	2b00                	fld	fs0,16(a4)
    405a:	0795                	addi	a5,a5,5
    405c:	0000                	unimp
    405e:	5c01                	li	s8,-32
    4060:	4929                	li	s2,10
    4062:	0009                	c.nop	2
    4064:	a300                	fsd	fs0,0(a4)
    4066:	0038                	addi	a4,sp,8
    4068:	2f00                	fld	fs0,24(a4)
    406a:	00637263          	bgeu	t1,t1,406e <__cvt+0xea>
    406e:	5c01                	li	s8,-32
    4070:	5536                	lw	a0,108(sp)
    4072:	0009                	c.nop	2
    4074:	c400                	sw	s0,8(s0)
    4076:	0038                	addi	a4,sp,8
    4078:	2d00                	fld	fs0,24(a0)
    407a:	004e                	c.slli	zero,0x13
    407c:	5e01                	li	t3,-32
    407e:	740d                	lui	s0,0xfffe3
    4080:	0009                	c.nop	2
    4082:	e500                	fsw	fs0,8(a0)
    4084:	0038                	addi	a4,sp,8
    4086:	2d00                	fld	fs0,24(a0)
    4088:	5f010043          	fmadd.q	ft0,ft2,fa6,fa1,rne
    408c:	f00d                	bnez	s0,3fae <__cvt+0x2a>
    408e:	0009                	c.nop	2
    4090:	0600                	addi	s0,sp,768
    4092:	0039                	c.nop	14
    4094:	2d00                	fld	fs0,24(a0)
    4096:	0041                	c.nop	16
    4098:	6001                	0x6001
    409a:	ea0d                	bnez	a2,40cc <__cvt+0x148>
    409c:	0009                	c.nop	2
    409e:	2900                	fld	fs0,16(a0)
    40a0:	0039                	c.nop	14
    40a2:	2d00                	fld	fs0,24(a0)
    40a4:	0042                	c.slli	zero,0x10
    40a6:	6101                	0x6101
    40a8:	ea0d                	bnez	a2,40da <__cvt+0x156>
    40aa:	0009                	c.nop	2
    40ac:	4c00                	lw	s0,24(s0)
    40ae:	0039                	c.nop	14
    40b0:	2d00                	fld	fs0,24(a0)
    40b2:	6176                	flw	ft2,92(sp)
    40b4:	006c                	addi	a1,sp,12
    40b6:	6201                	0x6201
    40b8:	980d                	andi	s0,s0,-29
    40ba:	0009                	c.nop	2
    40bc:	6f00                	flw	fs0,24(a4)
    40be:	0039                	c.nop	14
    40c0:	3900                	fld	fs0,48(a0)
    40c2:	1ba0                	addi	s0,sp,504
    40c4:	0000                	unimp
    40c6:	0cee                	slli	s9,s9,0x1b
    40c8:	0000                	unimp
    40ca:	b83a                	fsd	fa4,48(sp)
    40cc:	a200001b          	0xa200001b
    40d0:	0014                	0x14
    40d2:	0000                	unimp
    40d4:	000bb53b          	0xbb53b
	...
    40e0:	0100                	addi	s0,sp,128
    40e2:	d09c                	sw	a5,32(s1)
    40e4:	0012                	c.slli	zero,0x4
    40e6:	3100                	fld	fs0,32(a0)
    40e8:	0bc6                	slli	s7,s7,0x11
    40ea:	0000                	unimp
    40ec:	3990                	fld	fa2,48(a1)
    40ee:	0000                	unimp
    40f0:	d031                	beqz	s0,4034 <__cvt+0xb0>
    40f2:	c400000b          	0xc400000b
    40f6:	0039                	c.nop	14
    40f8:	3c00                	fld	fs0,56(s0)
    40fa:	0bda                	slli	s7,s7,0x16
    40fc:	0000                	unimp
    40fe:	5c01                	li	s8,-32
    4100:	000be633          	or	a2,s7,zero
    4104:	f000                	fsw	fs0,32(s0)
    4106:	0039                	c.nop	14
    4108:	3300                	fld	fs0,32(a4)
    410a:	0bf2                	slli	s7,s7,0x1c
    410c:	0000                	unimp
    410e:	3a32                	fld	fs4,296(sp)
    4110:	0000                	unimp
    4112:	000bfe33          	and	t3,s7,zero
    4116:	7e00                	flw	fs0,56(a2)
    4118:	003a                	c.slli	zero,0xe
    411a:	3300                	fld	fs0,32(a4)
    411c:	0c0a                	slli	s8,s8,0x2
    411e:	0000                	unimp
    4120:	3ab4                	fld	fa3,112(a3)
    4122:	0000                	unimp
    4124:	000c1633          	sll	a2,s8,zero
    4128:	f500                	fsw	fs0,40(a0)
    412a:	003a                	c.slli	zero,0xe
    412c:	3300                	fld	fs0,32(a4)
    412e:	0c20                	addi	s0,sp,536
    4130:	0000                	unimp
    4132:	3b20                	fld	fs0,112(a4)
    4134:	0000                	unimp
    4136:	3b00                	fld	fs0,48(a4)
    4138:	0b62                	slli	s6,s6,0x18
	...
    4142:	0000                	unimp
    4144:	9c01                	0x9c01
    4146:	1316                	slli	t1,t1,0x25
    4148:	0000                	unimp
    414a:	703c                	flw	fa5,96(s0)
    414c:	0100000b          	0x100000b
    4150:	315a                	fld	ft2,432(sp)
    4152:	00000b7b          	0xb7b
    4156:	3b34                	fld	fa3,112(a4)
    4158:	0000                	unimp
    415a:	8631                	srai	a2,a2,0xc
    415c:	5500000b          	0x5500000b
    4160:	3c00003b          	0x3c00003b
    4164:	0b91                	addi	s7,s7,4
    4166:	0000                	unimp
    4168:	5d01                	li	s10,-32
    416a:	000b9e33          	sll	t3,s7,zero
    416e:	7600                	flw	fs0,40(a2)
    4170:	3300003b          	0x3300003b
    4174:	0ba9                	addi	s7,s7,10
    4176:	0000                	unimp
    4178:	3b95                	jal	3eec <__clzsi2+0x18>
    417a:	0000                	unimp
    417c:	3b00                	fld	fs0,48(a4)
    417e:	0b1a                	slli	s6,s6,0x6
	...
    4188:	0000                	unimp
    418a:	9c01                	0x9c01
    418c:	1355                	addi	t1,t1,-11
    418e:	0000                	unimp
    4190:	283c                	fld	fa5,80(s0)
    4192:	0100000b          	0x100000b
    4196:	315a                	fld	ft2,432(sp)
    4198:	00000b33          	add	s6,zero,zero
    419c:	3ba9                	jal	3ef6 <__clzsi2+0x22>
    419e:	0000                	unimp
    41a0:	3e31                	jal	3cbc <__gedf2+0xf4>
    41a2:	ca00000b          	0xca00000b
    41a6:	3300003b          	0x3300003b
    41aa:	00000b4b          	fnmsub.s	fs6,ft0,ft0,ft0,rne
    41ae:	00003beb          	0x3beb
    41b2:	000b5633          	srl	a2,s6,zero
    41b6:	0a00                	addi	s0,sp,272
    41b8:	003c                	addi	a5,sp,8
    41ba:	0000                	unimp
    41bc:	000ac93b          	0xac93b
	...
    41c8:	0100                	addi	s0,sp,128
    41ca:	bb9c                	fsd	fa5,48(a5)
    41cc:	31000013          	li	zero,784
    41d0:	00000ad7          	0xad7
    41d4:	3c1e                	fld	fs8,480(sp)
    41d6:	0000                	unimp
    41d8:	e231                	bnez	a2,421c <_printf_float+0x8c>
    41da:	000a                	c.slli	zero,0x2
    41dc:	5500                	lw	s0,40(a0)
    41de:	003c                	addi	a5,sp,8
    41e0:	3100                	fld	fs0,32(a0)
    41e2:	0aed                	addi	s5,s5,27
    41e4:	0000                	unimp
    41e6:	3c8c                	fld	fa1,56(s1)
    41e8:	0000                	unimp
    41ea:	f831                	bnez	s0,413e <__exponent+0x56>
    41ec:	000a                	c.slli	zero,0x2
    41ee:	c300                	sw	s0,0(a4)
    41f0:	003c                	addi	a5,sp,8
    41f2:	3300                	fld	fs0,32(a4)
    41f4:	00000b03          	lb	s6,0(zero) # 0 <_start>
    41f8:	3cfa                	fld	fs9,440(sp)
    41fa:	0000                	unimp
    41fc:	000b0e33          	add	t3,s6,zero
    4200:	1a00                	addi	s0,sp,304
    4202:	003d                	c.nop	15
    4204:	3800                	fld	fs0,48(s0)
    4206:	0000                	unimp
    4208:	0000                	unimp
    420a:	14ae                	slli	s1,s1,0x2b
    420c:	0000                	unimp
    420e:	035a0137          	lui	sp,0x35a0
    4212:	375b01f3          	0x375b01f3
    4216:	5b01                	li	s6,-32
    4218:	3001                	jal	3a18 <__divdf3+0x5dc>
    421a:	025c0137          	lui	sp,0x25c0
    421e:	00000083          	lb	ra,0(zero) # 0 <_start>
    4222:	000a6d3b          	0xa6d3b
	...
    422e:	0100                	addi	s0,sp,128
    4230:	239c                	fld	fa5,0(a5)
    4232:	0014                	0x14
    4234:	3100                	fld	fs0,32(a0)
    4236:	00000a7b          	0xa7b
    423a:	3d2e                	fld	fs10,232(sp)
    423c:	0000                	unimp
    423e:	8631                	srai	a2,a2,0xc
    4240:	000a                	c.slli	zero,0x2
    4242:	6500                	flw	fs0,8(a0)
    4244:	003d                	c.nop	15
    4246:	3100                	fld	fs0,32(a0)
    4248:	0a91                	addi	s5,s5,4
    424a:	0000                	unimp
    424c:	3d91                	jal	40a0 <__cvt+0x11c>
    424e:	0000                	unimp
    4250:	9c31                	0x9c31
    4252:	000a                	c.slli	zero,0x2
    4254:	bd00                	fsd	fs0,56(a0)
    4256:	003d                	c.nop	15
    4258:	3300                	fld	fs0,32(a4)
    425a:	00000aa7          	0xaa7
    425e:	3df4                	fld	fa3,248(a1)
    4260:	0000                	unimp
    4262:	000ab233          	sltu	tp,s5,zero
    4266:	1f00                	addi	s0,sp,944
    4268:	003e                	c.slli	zero,0xf
    426a:	3300                	fld	fs0,32(a4)
    426c:	0abd                	addi	s5,s5,15
    426e:	0000                	unimp
    4270:	00003e33          	snez	t3,zero
    4274:	0038                	addi	a4,sp,8
    4276:	0000                	unimp
    4278:	ae00                	fsd	fs0,24(a2)
    427a:	0014                	0x14
    427c:	3700                	fld	fs0,40(a4)
    427e:	5b01                	li	s6,-32
    4280:	3001                	jal	3a80 <__divdf3+0x644>
    4282:	025c0137          	lui	sp,0x25c0
    4286:	00000087          	0x87
    428a:	000a023b          	0xa023b
	...
    4296:	0100                	addi	s0,sp,128
    4298:	a29c                	fsd	fa5,0(a3)
    429a:	0014                	0x14
    429c:	3100                	fld	fs0,32(a0)
    429e:	0a10                	addi	a2,sp,272
    42a0:	0000                	unimp
    42a2:	00003e47          	fmsub.s	ft8,ft0,ft0,ft0,rup
    42a6:	1b31                	addi	s6,s6,-20
    42a8:	000a                	c.slli	zero,0x2
    42aa:	7e00                	flw	fs0,56(a2)
    42ac:	003e                	c.slli	zero,0xf
    42ae:	3100                	fld	fs0,32(a0)
    42b0:	0a26                	slli	s4,s4,0x9
    42b2:	0000                	unimp
    42b4:	3eaa                	fld	ft9,168(sp)
    42b6:	0000                	unimp
    42b8:	3131                	jal	3ec4 <__floatunsidf+0x88>
    42ba:	000a                	c.slli	zero,0x2
    42bc:	d600                	sw	s0,40(a2)
    42be:	003e                	c.slli	zero,0xf
    42c0:	3300                	fld	fs0,32(a4)
    42c2:	0a3c                	addi	a5,sp,280
    42c4:	0000                	unimp
    42c6:	3f0d                	jal	41f8 <_printf_float+0x68>
    42c8:	0000                	unimp
    42ca:	000a4733          	xor	a4,s4,zero
    42ce:	3800                	fld	fs0,48(s0)
    42d0:	3300003f 00000a52 	0xa523300003f
    42d8:	3f4c                	fld	fa1,184(a4)
    42da:	0000                	unimp
    42dc:	003d                	c.nop	15
    42de:	0000                	unimp
    42e0:	0000                	unimp
    42e2:	0000                	unimp
    42e4:	8c00                	0x8c00
    42e6:	0014                	0x14
    42e8:	3300                	fld	fs0,32(a4)
    42ea:	0a5e                	slli	s4,s4,0x17
    42ec:	0000                	unimp
    42ee:	3f60                	fld	fs0,248(a4)
    42f0:	0000                	unimp
    42f2:	3800                	fld	fs0,48(s0)
    42f4:	0000                	unimp
    42f6:	0000                	unimp
    42f8:	14ae                	slli	s1,s1,0x2b
    42fa:	0000                	unimp
    42fc:	015b0137          	lui	sp,0x15b0
    4300:	3730                	fld	fa2,104(a4)
    4302:	5c01                	li	s8,-32
    4304:	8702                	jr	a4
    4306:	0000                	unimp
    4308:	3e00                	fld	fs0,56(a2)
    430a:	001e                	c.slli	zero,0x7
    430c:	0000                	unimp
    430e:	001e                	c.slli	zero,0x7
    4310:	0000                	unimp
    4312:	3308                	fld	fa0,32(a4)
    4314:	3f08                	fld	fa0,56(a4)
    4316:	0a2c                	addi	a1,sp,280
    4318:	0000                	unimp
    431a:	0a22                	slli	s4,s4,0x8
    431c:	0000                	unimp
    431e:	0009                	c.nop	2
    4320:	a200                	fsd	fs0,0(a2)
    4322:	0400000b          	0x400000b
    4326:	8c00                	0x8c00
    4328:	000a                	c.slli	zero,0x2
    432a:	0400                	addi	s0,sp,512
    432c:	8601                	c.srai64	a2
    432e:	0006                	c.slli	zero,0x1
    4330:	0c00                	addi	s0,sp,528
    4332:	00000acb          	fnmsub.s	fs5,ft0,ft0,ft0,rne
    4336:	0000025b          	0x25b
    433a:	05d0                	addi	a2,sp,708
    433c:	0000                	unimp
    433e:	0000                	unimp
    4340:	0000                	unimp
    4342:	47dc                	lw	a5,12(a5)
    4344:	0000                	unimp
    4346:	0102                	c.slli64	sp
    4348:	c606                	sw	ra,12(sp)
    434a:	0005                	c.nop	1
    434c:	0200                	addi	s0,sp,256
    434e:	0801                	addi	a6,a6,0
    4350:	05c4                	addi	s1,sp,708
    4352:	0000                	unimp
    4354:	0202                	c.slli64	tp
    4356:	7a05                	lui	s4,0xfffe1
    4358:	0004                	0x4
    435a:	0200                	addi	s0,sp,256
    435c:	0702                	c.slli64	a4
    435e:	070c                	addi	a1,sp,896
    4360:	0000                	unimp
    4362:	0402                	c.slli64	s0
    4364:	8805                	andi	s0,s0,1
    4366:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
    436a:	0704                	addi	s1,sp,896
    436c:	019f 0000 0802      	0x8020000019f
    4372:	8305                	srli	a4,a4,0x1
    4374:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
    4378:	0708                	addi	a0,sp,896
    437a:	019a                	slli	gp,gp,0x6
    437c:	0000                	unimp
    437e:	69050403          	lb	s0,1680(a0)
    4382:	746e                	flw	fs0,248(sp)
    4384:	0200                	addi	s0,sp,256
    4386:	0704                	addi	s1,sp,896
    4388:	01a4                	addi	s1,sp,200
    438a:	0000                	unimp
    438c:	1002                	c.slli	zero,0x20
    438e:	3d04                	fld	fs1,56(a0)
    4390:	0004                	0x4
    4392:	0400                	addi	s0,sp,512
    4394:	057f                	0x57f
    4396:	0000                	unimp
    4398:	6502                	flw	fa0,0(sp)
    439a:	1701                	addi	a4,a4,-32
    439c:	0064                	addi	s1,sp,12
    439e:	0000                	unimp
    43a0:	3505                	jal	41c0 <_printf_float+0x30>
    43a2:	03000007          	0x3000007
    43a6:	0e2e                	slli	t3,t3,0xb
    43a8:	0041                	c.nop	16
    43aa:	0000                	unimp
    43ac:	f005                	bnez	s0,42cc <_printf_float+0x13c>
    43ae:	0000                	unimp
    43b0:	0300                	addi	s0,sp,384
    43b2:	0e74                	addi	a3,sp,796
    43b4:	0041                	c.nop	16
    43b6:	0000                	unimp
    43b8:	fc05                	bnez	s0,42f0 <_printf_float+0x160>
    43ba:	0006                	c.slli	zero,0x1
    43bc:	0300                	addi	s0,sp,384
    43be:	005d1793          	slli	a5,s10,0x5
    43c2:	0000                	unimp
    43c4:	0406                	slli	s0,s0,0x1
    43c6:	c503a503          	lw	a0,-944(t2)
    43ca:	0000                	unimp
    43cc:	0700                	addi	s0,sp,896
    43ce:	0326                	slli	t1,t1,0x9
    43d0:	0000                	unimp
    43d2:	720ca703          	lw	a4,1824(s9)
    43d6:	0000                	unimp
    43d8:	0700                	addi	s0,sp,896
    43da:	04dd                	addi	s1,s1,23
    43dc:	0000                	unimp
    43de:	c513a803          	lw	a6,-943(t2)
    43e2:	0000                	unimp
    43e4:	0000                	unimp
    43e6:	2c08                	fld	fa0,24(s0)
    43e8:	0000                	unimp
    43ea:	d500                	sw	s0,40(a0)
    43ec:	0000                	unimp
    43ee:	0900                	addi	s0,sp,144
    43f0:	0064                	addi	s1,sp,12
    43f2:	0000                	unimp
    43f4:	080a0003          	lb	zero,128(s4) # fffe1080 <__freertos_irq_stack_top+0xfefd1080>
    43f8:	f909a203          	lw	tp,-112(s3)
    43fc:	0000                	unimp
    43fe:	0b00                	addi	s0,sp,400
    4400:	0166                	slli	sp,sp,0x19
    4402:	0000                	unimp
    4404:	5d07a403          	lw	s0,1488(a5)
    4408:	0000                	unimp
    440a:	0000                	unimp
    440c:	0002960b          	0x2960b
    4410:	0300                	addi	s0,sp,384
    4412:	05a9                	addi	a1,a1,10
    4414:	000000a3          	sb	zero,1(zero) # 1 <_start+0x1>
    4418:	0004                	0x4
    441a:	0705                	addi	a4,a4,1
    441c:	0004                	0x4
    441e:	0300                	addi	s0,sp,384
    4420:	03aa                	slli	t2,t2,0xa
    4422:	00d5                	addi	ra,ra,21
    4424:	0000                	unimp
    4426:	040c                	addi	a1,sp,512
    4428:	bb05                	j	4158 <__exponent+0x70>
    442a:	04000003          	lb	zero,64(zero) # 40 <_start+0x40>
    442e:	1916                	slli	s2,s2,0x25
    4430:	0048                	addi	a0,sp,4
    4432:	0000                	unimp
    4434:	b005                	j	3c54 <__gedf2+0x8c>
    4436:	0000                	unimp
    4438:	0500                	addi	s0,sp,640
    443a:	0d0c                	addi	a1,sp,656
    443c:	005d                	c.nop	23
    443e:	0000                	unimp
    4440:	0e05                	addi	t3,t3,1
    4442:	04000003          	lb	zero,64(zero) # 40 <_start+0x40>
    4446:	01131b23          	sh	a7,22(t1) # 62620 <_data_lma+0x58008>
    444a:	0000                	unimp
    444c:	2a0d                	jal	457e <_printf_float+0x3ee>
    444e:	0001                	nop
    4450:	1800                	addi	s0,sp,48
    4452:	3404                	fld	fs1,40(s0)
    4454:	8508                	0x8508
    4456:	0001                	nop
    4458:	0b00                	addi	s0,sp,400
    445a:	079f 0000 3604      	0x36040000079f
    4460:	00018513          	mv	a0,gp
    4464:	0000                	unimp
    4466:	5f0e                	lw	t5,224(sp)
    4468:	3704006b          	0x3704006b
    446c:	00005d07          	0x5d07
    4470:	0400                	addi	s0,sp,512
    4472:	0005420b          	0x5420b
    4476:	0400                	addi	s0,sp,512
    4478:	005d0b37          	lui	s6,0x5d0
    447c:	0000                	unimp
    447e:	0b08                	addi	a0,sp,400
    4480:	04ba                	slli	s1,s1,0xe
    4482:	0000                	unimp
    4484:	3704                	fld	fs1,40(a4)
    4486:	5d14                	lw	a3,56(a0)
    4488:	0000                	unimp
    448a:	0c00                	addi	s0,sp,528
    448c:	0001c60b          	0x1c60b
    4490:	0400                	addi	s0,sp,512
    4492:	005d1b37          	lui	s6,0x5d1
    4496:	0000                	unimp
    4498:	0e10                	addi	a2,sp,784
    449a:	785f 0400 0b38      	0xb380400785f
    44a0:	0000018b          	0x18b
    44a4:	0014                	0x14
    44a6:	012b040f          	0x12b040f
    44aa:	0000                	unimp
    44ac:	0708                	addi	a0,sp,896
    44ae:	0001                	nop
    44b0:	9b00                	0x9b00
    44b2:	0001                	nop
    44b4:	0900                	addi	s0,sp,144
    44b6:	0064                	addi	s1,sp,12
    44b8:	0000                	unimp
    44ba:	0000                	unimp
    44bc:	6d0d                	lui	s10,0x3
    44be:	0005                	c.nop	1
    44c0:	2400                	fld	fs0,8(s0)
    44c2:	3c04                	fld	fs1,56(s0)
    44c4:	1e08                	addi	a0,sp,816
    44c6:	0002                	c.slli64	zero
    44c8:	0b00                	addi	s0,sp,400
    44ca:	022d                	addi	tp,tp,11
    44cc:	0000                	unimp
    44ce:	3e04                	fld	fs1,56(a2)
    44d0:	5d09                	li	s10,-30
    44d2:	0000                	unimp
    44d4:	0000                	unimp
    44d6:	0001780b          	0x1780b
    44da:	0400                	addi	s0,sp,512
    44dc:	005d093f 0b040000 	0xb040000005d093f
    44e4:	0156                	slli	sp,sp,0x15
    44e6:	0000                	unimp
    44e8:	4004                	lw	s1,0(s0)
    44ea:	5d09                	li	s10,-30
    44ec:	0000                	unimp
    44ee:	0800                	addi	s0,sp,16
    44f0:	0002c60b          	0x2c60b
    44f4:	0400                	addi	s0,sp,512
    44f6:	0941                	addi	s2,s2,16
    44f8:	005d                	c.nop	23
    44fa:	0000                	unimp
    44fc:	0b0c                	addi	a1,sp,400
    44fe:	0434                	addi	a3,sp,520
    4500:	0000                	unimp
    4502:	4204                	lw	s1,0(a2)
    4504:	5d09                	li	s10,-30
    4506:	0000                	unimp
    4508:	1000                	addi	s0,sp,32
    450a:	0004f70b          	0x4f70b
    450e:	0400                	addi	s0,sp,512
    4510:	005d0943          	fmadd.s	fs2,fs10,ft5,ft0,rne
    4514:	0000                	unimp
    4516:	0b14                	addi	a3,sp,400
    4518:	0132                	slli	sp,sp,0xc
    451a:	0000                	unimp
    451c:	4404                	lw	s1,8(s0)
    451e:	5d09                	li	s10,-30
    4520:	0000                	unimp
    4522:	1800                	addi	s0,sp,48
    4524:	0002360b          	0x2360b
    4528:	0400                	addi	s0,sp,512
    452a:	0945                	addi	s2,s2,17
    452c:	005d                	c.nop	23
    452e:	0000                	unimp
    4530:	0b1c                	addi	a5,sp,400
    4532:	041a                	slli	s0,s0,0x6
    4534:	0000                	unimp
    4536:	4604                	lw	s1,8(a2)
    4538:	5d09                	li	s10,-30
    453a:	0000                	unimp
    453c:	2000                	fld	fs0,0(s0)
    453e:	1000                	addi	s0,sp,32
    4540:	0029                	c.nop	10
    4542:	0000                	unimp
    4544:	0108                	addi	a0,sp,128
    4546:	4f04                	lw	s1,24(a4)
    4548:	6308                	flw	fa0,0(a4)
    454a:	0002                	c.slli64	zero
    454c:	0b00                	addi	s0,sp,400
    454e:	0412                	slli	s0,s0,0x4
    4550:	0000                	unimp
    4552:	5004                	lw	s1,32(s0)
    4554:	630a                	flw	ft6,128(sp)
    4556:	0002                	c.slli64	zero
    4558:	0000                	unimp
    455a:	0005a90b          	0x5a90b
    455e:	0400                	addi	s0,sp,512
    4560:	0951                	addi	s2,s2,20
    4562:	00000263          	beqz	zero,4566 <_printf_float+0x3d6>
    4566:	1180                	addi	s0,sp,224
    4568:	0726                	slli	a4,a4,0x9
    456a:	0000                	unimp
    456c:	5304                	lw	s1,32(a4)
    456e:	070a                	slli	a4,a4,0x2
    4570:	0001                	nop
    4572:	0000                	unimp
    4574:	1101                	addi	sp,sp,-32
    4576:	0784                	addi	s1,sp,960
    4578:	0000                	unimp
    457a:	5604                	lw	s1,40(a2)
    457c:	070a                	slli	a4,a4,0x2
    457e:	0001                	nop
    4580:	0400                	addi	s0,sp,512
    4582:	0001                	nop
    4584:	0508                	addi	a0,sp,640
    4586:	0001                	nop
    4588:	7300                	flw	fs0,32(a4)
    458a:	0002                	c.slli64	zero
    458c:	0900                	addi	s0,sp,144
    458e:	0064                	addi	s1,sp,12
    4590:	0000                	unimp
    4592:	001f 6010 0004      	0x46010001f
    4598:	9000                	0x9000
    459a:	0401                	addi	s0,s0,0
    459c:	0862                	slli	a6,a6,0x18
    459e:	02b6                	slli	t0,t0,0xd
    45a0:	0000                	unimp
    45a2:	00079f0b          	0x79f0b
    45a6:	0400                	addi	s0,sp,512
    45a8:	02b61263          	bne	a2,a1,45cc <_printf_float+0x43c>
    45ac:	0000                	unimp
    45ae:	0b00                	addi	s0,sp,400
    45b0:	0245                	addi	tp,tp,17
    45b2:	0000                	unimp
    45b4:	6404                	flw	fs1,8(s0)
    45b6:	5d06                	lw	s10,96(sp)
    45b8:	0000                	unimp
    45ba:	0400                	addi	s0,sp,512
    45bc:	0001090b          	0x1090b
    45c0:	0400                	addi	s0,sp,512
    45c2:	0966                	slli	s2,s2,0x19
    45c4:	02bc                	addi	a5,sp,328
    45c6:	0000                	unimp
    45c8:	0b08                	addi	a0,sp,400
    45ca:	0029                	c.nop	10
    45cc:	0000                	unimp
    45ce:	6704                	flw	fs1,8(a4)
    45d0:	1e1e                	slli	t3,t3,0x27
    45d2:	0002                	c.slli64	zero
    45d4:	8800                	0x8800
    45d6:	0f00                	addi	s0,sp,912
    45d8:	7304                	flw	fs1,32(a4)
    45da:	0002                	c.slli64	zero
    45dc:	0800                	addi	s0,sp,16
    45de:	02cc                	addi	a1,sp,324
    45e0:	0000                	unimp
    45e2:	02cc                	addi	a1,sp,324
    45e4:	0000                	unimp
    45e6:	6409                	lui	s0,0x2
    45e8:	0000                	unimp
    45ea:	1f00                	addi	s0,sp,944
    45ec:	0f00                	addi	s0,sp,912
    45ee:	d204                	sw	s1,32(a2)
    45f0:	0002                	c.slli64	zero
    45f2:	1200                	addi	s0,sp,288
    45f4:	360d                	jal	4116 <__exponent+0x2e>
    45f6:	0006                	c.slli	zero,0x1
    45f8:	0800                	addi	s0,sp,16
    45fa:	7a04                	flw	fs1,48(a2)
    45fc:	fb08                	fsw	fa0,48(a4)
    45fe:	0002                	c.slli64	zero
    4600:	0b00                	addi	s0,sp,400
    4602:	03a5                	addi	t2,t2,9
    4604:	0000                	unimp
    4606:	7b04                	flw	fs1,48(a4)
    4608:	fb11                	bnez	a4,451c <_printf_float+0x38c>
    460a:	0002                	c.slli64	zero
    460c:	0000                	unimp
    460e:	00072f0b          	0x72f0b
    4612:	0400                	addi	s0,sp,512
    4614:	067c                	addi	a5,sp,780
    4616:	005d                	c.nop	23
    4618:	0000                	unimp
    461a:	0004                	0x4
    461c:	002c040f          	0x2c040f
    4620:	0000                	unimp
    4622:	be0d                	j	4154 <__exponent+0x6c>
    4624:	0001                	nop
    4626:	6800                	flw	fs0,16(s0)
    4628:	ba04                	fsd	fs1,48(a2)
    462a:	4408                	lw	a0,8(s0)
    462c:	0004                	0x4
    462e:	0e00                	addi	s0,sp,784
    4630:	705f 0400 12bb      	0x12bb0400705f
    4636:	000002fb          	0x2fb
    463a:	0e00                	addi	s0,sp,784
    463c:	725f 0400 07bc      	0x7bc0400725f
    4642:	005d                	c.nop	23
    4644:	0000                	unimp
    4646:	0e04                	addi	s1,sp,784
    4648:	775f 0400 07bd      	0x7bd0400775f
    464e:	005d                	c.nop	23
    4650:	0000                	unimp
    4652:	0b08                	addi	a0,sp,400
    4654:	007f                	0x7f
    4656:	0000                	unimp
    4658:	be04                	fsd	fs1,56(a2)
    465a:	3309                	jal	435c <_printf_float+0x1cc>
    465c:	0000                	unimp
    465e:	0c00                	addi	s0,sp,528
    4660:	0003d90b          	0x3d90b
    4664:	0400                	addi	s0,sp,512
    4666:	003309bf 0e0e0000 	0xe0e0000003309bf
    466e:	625f 0066 c004      	0xc0040066625f
    4674:	d311                	beqz	a4,4578 <_printf_float+0x3e8>
    4676:	0002                	c.slli64	zero
    4678:	1000                	addi	s0,sp,32
    467a:	0000760b          	0x760b
    467e:	0400                	addi	s0,sp,512
    4680:	07c1                	addi	a5,a5,16
    4682:	005d                	c.nop	23
    4684:	0000                	unimp
    4686:	0b18                	addi	a4,sp,400
    4688:	0114                	addi	a3,sp,128
    468a:	0000                	unimp
    468c:	c804                	sw	s1,16(s0)
    468e:	050a                	slli	a0,a0,0x2
    4690:	0001                	nop
    4692:	1c00                	addi	s0,sp,560
    4694:	0000c20b          	0xc20b
    4698:	0400                	addi	s0,sp,512
    469a:	1dca                	slli	s11,s11,0x32
    469c:	05c8                	addi	a0,sp,708
    469e:	0000                	unimp
    46a0:	0b20                	addi	s0,sp,408
    46a2:	0449                	addi	s0,s0,18
    46a4:	0000                	unimp
    46a6:	cc04                	sw	s1,24(s0)
    46a8:	f21d                	bnez	a2,45ce <_printf_float+0x43e>
    46aa:	0005                	c.nop	1
    46ac:	2400                	fld	fs0,8(s0)
    46ae:	0007b00b          	0x7b00b
    46b2:	0400                	addi	s0,sp,512
    46b4:	06160dcf          	fnmadd.q	fs11,fa2,ft1,ft0,rne
    46b8:	0000                	unimp
    46ba:	0b28                	addi	a0,sp,408
    46bc:	0332                	slli	t1,t1,0xc
    46be:	0000                	unimp
    46c0:	d004                	sw	s1,32(s0)
    46c2:	3009                	jal	3ec4 <__floatunsidf+0x88>
    46c4:	0006                	c.slli	zero,0x1
    46c6:	2c00                	fld	fs0,24(s0)
    46c8:	5f0e                	lw	t5,224(sp)
    46ca:	6275                	lui	tp,0x1d
    46cc:	0400                	addi	s0,sp,512
    46ce:	02d311d3          	fadd.d	ft3,ft6,fa3,rtz
    46d2:	0000                	unimp
    46d4:	0e30                	addi	a2,sp,792
    46d6:	755f 0070 d404      	0xd4040070755f
    46dc:	fb12                	fsw	ft4,180(sp)
    46de:	0002                	c.slli64	zero
    46e0:	3800                	fld	fs0,48(s0)
    46e2:	5f0e                	lw	t5,224(sp)
    46e4:	7275                	lui	tp,0xffffd
    46e6:	0400                	addi	s0,sp,512
    46e8:	07d5                	addi	a5,a5,21
    46ea:	005d                	c.nop	23
    46ec:	0000                	unimp
    46ee:	0b3c                	addi	a5,sp,408
    46f0:	07e0                	addi	s0,sp,972
    46f2:	0000                	unimp
    46f4:	d804                	sw	s1,48(s0)
    46f6:	3611                	jal	41fa <_printf_float+0x6a>
    46f8:	0006                	c.slli	zero,0x1
    46fa:	4000                	lw	s0,0(s0)
    46fc:	00073c0b          	0x73c0b
    4700:	0400                	addi	s0,sp,512
    4702:	11d9                	addi	gp,gp,-10
    4704:	0646                	slli	a2,a2,0x11
    4706:	0000                	unimp
    4708:	6c5f0e43          	0x6c5f0e43
    470c:	0062                	c.slli	zero,0x18
    470e:	dc04                	sw	s1,56(s0)
    4710:	d311                	beqz	a4,4614 <_printf_float+0x484>
    4712:	0002                	c.slli64	zero
    4714:	4400                	lw	s0,8(s0)
    4716:	0005640b          	0x5640b
    471a:	0400                	addi	s0,sp,512
    471c:	07df 005d 0000      	0x5d07df
    4722:	0b4c                	addi	a1,sp,404
    4724:	01ff                	0x1ff
    4726:	0000                	unimp
    4728:	e004                	fsw	fs1,0(s0)
    472a:	7f0a                	flw	ft10,160(sp)
    472c:	0000                	unimp
    472e:	5000                	lw	s0,32(s0)
    4730:	0001720b          	0x1720b
    4734:	0400                	addi	s0,sp,512
    4736:	046212e3          	bne	tp,t1,4f7a <putchar+0x26>
    473a:	0000                	unimp
    473c:	0b54                	addi	a3,sp,404
    473e:	0572                	slli	a0,a0,0x1c
    4740:	0000                	unimp
    4742:	e704                	fsw	fs1,8(a4)
    4744:	1f0c                	addi	a1,sp,944
    4746:	0001                	nop
    4748:	5800                	lw	s0,48(s0)
    474a:	0004680b          	0x4680b
    474e:	0400                	addi	s0,sp,512
    4750:	0ee9                	addi	t4,t4,26
    4752:	00f9                	addi	ra,ra,30
    4754:	0000                	unimp
    4756:	0b5c                	addi	a5,sp,404
    4758:	077c                	addi	a5,sp,908
    475a:	0000                	unimp
    475c:	ea04                	fsw	fs1,16(a2)
    475e:	5d09                	li	s10,-30
    4760:	0000                	unimp
    4762:	6400                	flw	fs0,8(s0)
    4764:	1300                	addi	s0,sp,416
    4766:	00000097          	auipc	ra,0x0
    476a:	0462                	slli	s0,s0,0x18
    476c:	0000                	unimp
    476e:	6214                	flw	fa3,0(a2)
    4770:	0004                	0x4
    4772:	1400                	addi	s0,sp,544
    4774:	0105                	addi	sp,sp,1
    4776:	0000                	unimp
    4778:	b614                	fsd	fa3,40(a2)
    477a:	0005                	c.nop	1
    477c:	1400                	addi	s0,sp,544
    477e:	005d                	c.nop	23
    4780:	0000                	unimp
    4782:	0f00                	addi	s0,sp,912
    4784:	6d04                	flw	fs1,24(a0)
    4786:	0004                	0x4
    4788:	1500                	addi	s0,sp,672
    478a:	0462                	slli	s0,s0,0x18
    478c:	0000                	unimp
    478e:	0516                	slli	a0,a0,0x5
    4790:	28000007          	0x28000007
    4794:	0404                	addi	s1,sp,512
    4796:	0265                	addi	tp,tp,25
    4798:	b608                	fsd	fa0,40(a2)
    479a:	0005                	c.nop	1
    479c:	1700                	addi	s0,sp,928
    479e:	042d                	addi	s0,s0,11
    47a0:	0000                	unimp
    47a2:	6704                	flw	fs1,8(a4)
    47a4:	0702                	c.slli64	a4
    47a6:	005d                	c.nop	23
    47a8:	0000                	unimp
    47aa:	1700                	addi	s0,sp,928
    47ac:	0366                	slli	t1,t1,0x19
    47ae:	0000                	unimp
    47b0:	6c04                	flw	fs1,24(s0)
    47b2:	0b02                	c.slli64	s6
    47b4:	06a2                	slli	a3,a3,0x8
    47b6:	0000                	unimp
    47b8:	1704                	addi	s1,sp,928
    47ba:	00e8                	addi	a0,sp,76
    47bc:	0000                	unimp
    47be:	6c04                	flw	fs1,24(s0)
    47c0:	1402                	slli	s0,s0,0x20
    47c2:	06a2                	slli	a3,a3,0x8
    47c4:	0000                	unimp
    47c6:	1708                	addi	a0,sp,928
    47c8:	000007cf          	fnmadd.s	fa5,ft0,ft0,ft0,rne
    47cc:	6c04                	flw	fs1,24(s0)
    47ce:	1e02                	slli	t3,t3,0x20
    47d0:	06a2                	slli	a3,a3,0x8
    47d2:	0000                	unimp
    47d4:	170c                	addi	a1,sp,928
    47d6:	0240                	addi	s0,sp,260
    47d8:	0000                	unimp
    47da:	6e04                	flw	fs1,24(a2)
    47dc:	0802                	c.slli64	a6
    47de:	005d                	c.nop	23
    47e0:	0000                	unimp
    47e2:	1710                	addi	a2,sp,928
    47e4:	00000207          	0x207
    47e8:	6f04                	flw	fs1,24(a4)
    47ea:	0802                	c.slli64	a6
    47ec:	08a2                	slli	a7,a7,0x8
    47ee:	0000                	unimp
    47f0:	1714                	addi	a3,sp,928
    47f2:	00000763          	beqz	zero,4800 <_printf_float+0x670>
    47f6:	7204                	flw	fs1,32(a2)
    47f8:	0702                	c.slli64	a4
    47fa:	005d                	c.nop	23
    47fc:	0000                	unimp
    47fe:	1730                	addi	a2,sp,936
    4800:	06f4                	addi	a3,sp,844
    4802:	0000                	unimp
    4804:	7304                	flw	fs1,32(a4)
    4806:	1602                	slli	a2,a2,0x20
    4808:	000008b7          	lui	a7,0x0
    480c:	1734                	addi	a3,sp,936
    480e:	0000033f 07027504 	0x70275040000033f
    4816:	005d                	c.nop	23
    4818:	0000                	unimp
    481a:	1738                	addi	a4,sp,936
    481c:	03f1                	addi	t2,t2,28
    481e:	0000                	unimp
    4820:	7704                	flw	fs1,40(a4)
    4822:	0a02                	c.slli64	s4
    4824:	08c8                	addi	a0,sp,84
    4826:	0000                	unimp
    4828:	173c                	addi	a5,sp,936
    482a:	014e                	slli	sp,sp,0x13
    482c:	0000                	unimp
    482e:	7a04                	flw	fs1,48(a2)
    4830:	1302                	slli	t1,t1,0x20
    4832:	0185                	addi	gp,gp,1
    4834:	0000                	unimp
    4836:	1740                	addi	s0,sp,932
    4838:	0190                	addi	a2,sp,192
    483a:	0000                	unimp
    483c:	7b04                	flw	fs1,48(a4)
    483e:	0702                	c.slli64	a4
    4840:	005d                	c.nop	23
    4842:	0000                	unimp
    4844:	1744                	addi	s1,sp,932
    4846:	029e                	slli	t0,t0,0x7
    4848:	0000                	unimp
    484a:	7c04                	flw	fs1,56(s0)
    484c:	1302                	slli	t1,t1,0x20
    484e:	0185                	addi	gp,gp,1
    4850:	0000                	unimp
    4852:	1748                	addi	a0,sp,932
    4854:	000003ab          	0x3ab
    4858:	7d04                	flw	fs1,56(a0)
    485a:	1402                	slli	s0,s0,0x20
    485c:	08ce                	slli	a7,a7,0x13
    485e:	0000                	unimp
    4860:	174c                	addi	a1,sp,932
    4862:	053a                	slli	a0,a0,0xe
    4864:	0000                	unimp
    4866:	8004                	0x8004
    4868:	0702                	c.slli64	a4
    486a:	005d                	c.nop	23
    486c:	0000                	unimp
    486e:	1750                	addi	a2,sp,932
    4870:	05bc                	addi	a5,sp,712
    4872:	0000                	unimp
    4874:	8104                	0x8104
    4876:	0902                	c.slli64	s2
    4878:	05b6                	slli	a1,a1,0xd
    487a:	0000                	unimp
    487c:	1754                	addi	a3,sp,932
    487e:	05ee                	slli	a1,a1,0x1b
    4880:	0000                	unimp
    4882:	a404                	fsd	fs1,8(s0)
    4884:	0702                	c.slli64	a4
    4886:	087d                	addi	a6,a6,31
    4888:	0000                	unimp
    488a:	1858                	addi	a4,sp,52
    488c:	0460                	addi	s0,sp,524
    488e:	0000                	unimp
    4890:	a804                	fsd	fs1,16(s0)
    4892:	1302                	slli	t1,t1,0x20
    4894:	02b6                	slli	t0,t0,0xd
    4896:	0000                	unimp
    4898:	0148                	addi	a0,sp,132
    489a:	e918                	fsw	fa4,16(a0)
    489c:	0002                	c.slli64	zero
    489e:	0400                	addi	s0,sp,512
    48a0:	02a9                	addi	t0,t0,10
    48a2:	7312                	flw	ft6,36(sp)
    48a4:	0002                	c.slli64	zero
    48a6:	4c00                	lw	s0,24(s0)
    48a8:	1801                	addi	a6,a6,-32
    48aa:	02d0                	addi	a2,sp,324
    48ac:	0000                	unimp
    48ae:	ad04                	fsd	fs1,24(a0)
    48b0:	0c02                	c.slli64	s8
    48b2:	08df 0000 02dc      	0x2dc000008df
    48b8:	6318                	flw	fa4,0(a4)
    48ba:	0006                	c.slli	zero,0x1
    48bc:	0400                	addi	s0,sp,512
    48be:	02b2                	slli	t0,t0,0xc
    48c0:	6310                	flw	fa2,0(a4)
    48c2:	0006                	c.slli	zero,0x1
    48c4:	e000                	fsw	fs0,0(s0)
    48c6:	1802                	slli	a6,a6,0x20
    48c8:	04b5                	addi	s1,s1,13
    48ca:	0000                	unimp
    48cc:	b404                	fsd	fs1,40(s0)
    48ce:	0a02                	c.slli64	s4
    48d0:	000008eb          	0x8eb
    48d4:	02ec                	addi	a1,sp,332
    48d6:	0f00                	addi	s0,sp,912
    48d8:	bc04                	fsd	fs1,56(s0)
    48da:	0005                	c.nop	1
    48dc:	0200                	addi	s0,sp,256
    48de:	0801                	addi	a6,a6,0
    48e0:	05cd                	addi	a1,a1,19
    48e2:	0000                	unimp
    48e4:	bc15                	j	4318 <_printf_float+0x188>
    48e6:	0005                	c.nop	1
    48e8:	0f00                	addi	s0,sp,912
    48ea:	4404                	lw	s1,8(s0)
    48ec:	0004                	0x4
    48ee:	1300                	addi	s0,sp,416
    48f0:	00000097          	auipc	ra,0x0
    48f4:	05ec                	addi	a1,sp,716
    48f6:	0000                	unimp
    48f8:	6214                	flw	fa3,0(a2)
    48fa:	0004                	0x4
    48fc:	1400                	addi	s0,sp,544
    48fe:	0105                	addi	sp,sp,1
    4900:	0000                	unimp
    4902:	ec14                	fsw	fa3,24(s0)
    4904:	0005                	c.nop	1
    4906:	1400                	addi	s0,sp,544
    4908:	005d                	c.nop	23
    490a:	0000                	unimp
    490c:	0f00                	addi	s0,sp,912
    490e:	c304                	sw	s1,0(a4)
    4910:	0005                	c.nop	1
    4912:	0f00                	addi	s0,sp,912
    4914:	ce04                	sw	s1,24(a2)
    4916:	0005                	c.nop	1
    4918:	1300                	addi	s0,sp,416
    491a:	0000008b          	0x8b
    491e:	0616                	slli	a2,a2,0x5
    4920:	0000                	unimp
    4922:	6214                	flw	fa3,0(a2)
    4924:	0004                	0x4
    4926:	1400                	addi	s0,sp,544
    4928:	0105                	addi	sp,sp,1
    492a:	0000                	unimp
    492c:	8b14                	0x8b14
    492e:	0000                	unimp
    4930:	1400                	addi	s0,sp,544
    4932:	005d                	c.nop	23
    4934:	0000                	unimp
    4936:	0f00                	addi	s0,sp,912
    4938:	f804                	fsw	fs1,48(s0)
    493a:	0005                	c.nop	1
    493c:	1300                	addi	s0,sp,416
    493e:	005d                	c.nop	23
    4940:	0000                	unimp
    4942:	0630                	addi	a2,sp,776
    4944:	0000                	unimp
    4946:	6214                	flw	fa3,0(a2)
    4948:	0004                	0x4
    494a:	1400                	addi	s0,sp,544
    494c:	0105                	addi	sp,sp,1
    494e:	0000                	unimp
    4950:	0f00                	addi	s0,sp,912
    4952:	1c04                	addi	s1,sp,560
    4954:	0006                	c.slli	zero,0x1
    4956:	0800                	addi	s0,sp,16
    4958:	002c                	addi	a1,sp,8
    495a:	0000                	unimp
    495c:	0646                	slli	a2,a2,0x11
    495e:	0000                	unimp
    4960:	6409                	lui	s0,0x2
    4962:	0000                	unimp
    4964:	0200                	addi	s0,sp,256
    4966:	0800                	addi	s0,sp,16
    4968:	002c                	addi	a1,sp,8
    496a:	0000                	unimp
    496c:	0656                	slli	a2,a2,0x15
    496e:	0000                	unimp
    4970:	6409                	lui	s0,0x2
    4972:	0000                	unimp
    4974:	0000                	unimp
    4976:	0400                	addi	s0,sp,512
    4978:	01f8                	addi	a4,sp,204
    497a:	0000                	unimp
    497c:	2404                	fld	fs1,8(s0)
    497e:	1a01                	addi	s4,s4,-32
    4980:	0301                	addi	t1,t1,0
    4982:	0000                	unimp
    4984:	4819                	li	a6,6
    4986:	0006                	c.slli	zero,0x1
    4988:	0c00                	addi	s0,sp,528
    498a:	2804                	fld	fs1,16(s0)
    498c:	0801                	addi	a6,a6,0
    498e:	069c                	addi	a5,sp,832
    4990:	0000                	unimp
    4992:	00079f17          	auipc	t5,0x79
    4996:	0400                	addi	s0,sp,512
    4998:	012a                	slli	sp,sp,0xa
    499a:	9c11                	0x9c11
    499c:	0006                	c.slli	zero,0x1
    499e:	0000                	unimp
    49a0:	00057817          	auipc	a6,0x57
    49a4:	0400                	addi	s0,sp,512
    49a6:	5d07012b          	0x5d07012b
    49aa:	0000                	unimp
    49ac:	0400                	addi	s0,sp,512
    49ae:	00032c17          	auipc	s8,0x32
    49b2:	0400                	addi	s0,sp,512
    49b4:	012c                	addi	a1,sp,136
    49b6:	0006a20b          	0x6a20b
    49ba:	0800                	addi	s0,sp,16
    49bc:	0f00                	addi	s0,sp,912
    49be:	6304                	flw	fs1,0(a4)
    49c0:	0006                	c.slli	zero,0x1
    49c2:	0f00                	addi	s0,sp,912
    49c4:	5604                	lw	s1,40(a2)
    49c6:	0006                	c.slli	zero,0x1
    49c8:	1900                	addi	s0,sp,176
    49ca:	0188                	addi	a0,sp,192
    49cc:	0000                	unimp
    49ce:	040e                	slli	s0,s0,0x3
    49d0:	0144                	addi	s1,sp,132
    49d2:	e108                	fsw	fa0,0(a0)
    49d4:	0006                	c.slli	zero,0x1
    49d6:	1700                	addi	s0,sp,928
    49d8:	0794                	addi	a3,sp,960
    49da:	0000                	unimp
    49dc:	4504                	lw	s1,8(a0)
    49de:	1201                	addi	tp,tp,-32
    49e0:	06e1                	addi	a3,a3,24
    49e2:	0000                	unimp
    49e4:	1700                	addi	s0,sp,928
    49e6:	03b5                	addi	t2,t2,13
    49e8:	0000                	unimp
    49ea:	4604                	lw	s1,8(a2)
    49ec:	1201                	addi	tp,tp,-32
    49ee:	06e1                	addi	a3,a3,24
    49f0:	0000                	unimp
    49f2:	1706                	slli	a4,a4,0x21
    49f4:	0612                	slli	a2,a2,0x4
    49f6:	0000                	unimp
    49f8:	4704                	lw	s1,8(a4)
    49fa:	1201                	addi	tp,tp,-32
    49fc:	003a                	c.slli	zero,0xe
    49fe:	0000                	unimp
    4a00:	000c                	0xc
    4a02:	3a08                	fld	fa0,48(a2)
    4a04:	0000                	unimp
    4a06:	f100                	fsw	fs0,32(a0)
    4a08:	0006                	c.slli	zero,0x1
    4a0a:	0900                	addi	s0,sp,144
    4a0c:	0064                	addi	s1,sp,12
    4a0e:	0000                	unimp
    4a10:	0002                	c.slli64	zero
    4a12:	d01a                	sw	t1,32(sp)
    4a14:	8504                	0x8504
    4a16:	0702                	c.slli64	a4
    4a18:	0806                	slli	a6,a6,0x1
    4a1a:	0000                	unimp
    4a1c:	00074217          	auipc	tp,0x74
    4a20:	0400                	addi	s0,sp,512
    4a22:	64180287          	0x64180287
    4a26:	0000                	unimp
    4a28:	0000                	unimp
    4a2a:	00066b17          	auipc	s6,0x66
    4a2e:	0400                	addi	s0,sp,512
    4a30:	0288                	addi	a0,sp,320
    4a32:	b612                	fsd	ft4,296(sp)
    4a34:	0005                	c.nop	1
    4a36:	0400                	addi	s0,sp,512
    4a38:	0001b117          	auipc	sp,0x1b
    4a3c:	0400                	addi	s0,sp,512
    4a3e:	0289                	addi	t0,t0,2
    4a40:	0610                	addi	a2,sp,768
    4a42:	0008                	0x8
    4a44:	0800                	addi	s0,sp,16
    4a46:	00050e17          	auipc	t3,0x50
    4a4a:	0400                	addi	s0,sp,512
    4a4c:	028a                	slli	t0,t0,0x2
    4a4e:	00019b17          	auipc	s6,0x19
    4a52:	2400                	fld	fs0,8(s0)
    4a54:	00036d17          	auipc	s10,0x36
    4a58:	0400                	addi	s0,sp,512
    4a5a:	5d0f028b          	0x5d0f028b
    4a5e:	0000                	unimp
    4a60:	4800                	lw	s0,16(s0)
    4a62:	00079a17          	auipc	s4,0x79
    4a66:	0400                	addi	s0,sp,512
    4a68:	028c                	addi	a1,sp,320
    4a6a:	562c                	lw	a1,104(a2)
    4a6c:	0000                	unimp
    4a6e:	5000                	lw	s0,32(s0)
    4a70:	00005e17          	auipc	t3,0x5
    4a74:	0400                	addi	s0,sp,512
    4a76:	028d                	addi	t0,t0,3
    4a78:	a81a                	fsd	ft6,16(sp)
    4a7a:	0006                	c.slli	zero,0x1
    4a7c:	5800                	lw	s0,48(s0)
    4a7e:	0002b917          	auipc	s2,0x2b
    4a82:	0400                	addi	s0,sp,512
    4a84:	028e                	slli	t0,t0,0x3
    4a86:	f916                	fsw	ft5,176(sp)
    4a88:	0000                	unimp
    4a8a:	6800                	flw	fs0,16(s0)
    4a8c:	00067817          	auipc	a6,0x67
    4a90:	0400                	addi	s0,sp,512
    4a92:	f916028f          	0xf916028f
    4a96:	0000                	unimp
    4a98:	7000                	flw	fs0,32(s0)
    4a9a:	00004117          	auipc	sp,0x4
    4a9e:	0400                	addi	s0,sp,512
    4aa0:	0290                	addi	a2,sp,320
    4aa2:	f916                	fsw	ft5,176(sp)
    4aa4:	0000                	unimp
    4aa6:	7800                	flw	fs0,48(s0)
    4aa8:	00054a17          	auipc	s4,0x54
    4aac:	0400                	addi	s0,sp,512
    4aae:	0291                	addi	t0,t0,4
    4ab0:	1610                	addi	a2,sp,800
    4ab2:	0008                	0x8
    4ab4:	8000                	0x8000
    4ab6:	00006317          	auipc	t1,0x6
    4aba:	0400                	addi	s0,sp,512
    4abc:	0292                	slli	t0,t0,0x4
    4abe:	2610                	fld	fa2,8(a2)
    4ac0:	0008                	0x8
    4ac2:	8800                	0x8800
    4ac4:	0005f317          	auipc	t1,0x5f
    4ac8:	0400                	addi	s0,sp,512
    4aca:	5d0f0293          	addi	t0,t5,1488 # 7df62 <_data_lma+0x7394a>
    4ace:	0000                	unimp
    4ad0:	a000                	fsd	fs0,0(s0)
    4ad2:	0000c817          	auipc	a6,0xc
    4ad6:	0400                	addi	s0,sp,512
    4ad8:	0294                	addi	a3,sp,320
    4ada:	f916                	fsw	ft5,176(sp)
    4adc:	0000                	unimp
    4ade:	a400                	fsd	fs0,8(s0)
    4ae0:	0002da17          	auipc	s4,0x2d
    4ae4:	0400                	addi	s0,sp,512
    4ae6:	0295                	addi	t0,t0,5
    4ae8:	f916                	fsw	ft5,176(sp)
    4aea:	0000                	unimp
    4aec:	ac00                	fsd	fs0,24(s0)
    4aee:	00024a17          	auipc	s4,0x24
    4af2:	0400                	addi	s0,sp,512
    4af4:	0296                	slli	t0,t0,0x5
    4af6:	f916                	fsw	ft5,176(sp)
    4af8:	0000                	unimp
    4afa:	b400                	fsd	fs0,40(s0)
    4afc:	0003ca17          	auipc	s4,0x3c
    4b00:	0400                	addi	s0,sp,512
    4b02:	f9160297          	auipc	t0,0xf9160
    4b06:	0000                	unimp
    4b08:	bc00                	fsd	fs0,56(s0)
    4b0a:	0002a817          	auipc	a6,0x2a
    4b0e:	0400                	addi	s0,sp,512
    4b10:	0298                	addi	a4,sp,320
    4b12:	f916                	fsw	ft5,176(sp)
    4b14:	0000                	unimp
    4b16:	c400                	sw	s0,8(s0)
    4b18:	00042b17          	auipc	s6,0x42
    4b1c:	0400                	addi	s0,sp,512
    4b1e:	0299                	addi	t0,t0,6
    4b20:	5d08                	lw	a0,56(a0)
    4b22:	0000                	unimp
    4b24:	cc00                	sw	s0,24(s0)
    4b26:	0800                	addi	s0,sp,16
    4b28:	05bc                	addi	a5,sp,712
    4b2a:	0000                	unimp
    4b2c:	0816                	slli	a6,a6,0x5
    4b2e:	0000                	unimp
    4b30:	6409                	lui	s0,0x2
    4b32:	0000                	unimp
    4b34:	1900                	addi	s0,sp,176
    4b36:	0800                	addi	s0,sp,16
    4b38:	05bc                	addi	a5,sp,712
    4b3a:	0000                	unimp
    4b3c:	0826                	slli	a6,a6,0x9
    4b3e:	0000                	unimp
    4b40:	6409                	lui	s0,0x2
    4b42:	0000                	unimp
    4b44:	0700                	addi	s0,sp,896
    4b46:	0800                	addi	s0,sp,16
    4b48:	05bc                	addi	a5,sp,712
    4b4a:	0000                	unimp
    4b4c:	0836                	slli	a6,a6,0xd
    4b4e:	0000                	unimp
    4b50:	6409                	lui	s0,0x2
    4b52:	0000                	unimp
    4b54:	1700                	addi	s0,sp,928
    4b56:	1a00                	addi	s0,sp,304
    4b58:	04f0                	addi	a2,sp,588
    4b5a:	029e                	slli	t0,t0,0x7
    4b5c:	00085d07          	0x85d07
    4b60:	1700                	addi	s0,sp,928
    4b62:	0181                	addi	gp,gp,0
    4b64:	0000                	unimp
    4b66:	a104                	fsd	fs1,0(a0)
    4b68:	1b02                	slli	s6,s6,0x20
    4b6a:	085d                	addi	a6,a6,23
    4b6c:	0000                	unimp
    4b6e:	1700                	addi	s0,sp,928
    4b70:	000007d7          	0x7d7
    4b74:	a204                	fsd	fs1,0(a2)
    4b76:	1802                	slli	a6,a6,0x20
    4b78:	086d                	addi	a6,a6,27
    4b7a:	0000                	unimp
    4b7c:	0078                	addi	a4,sp,12
    4b7e:	fb08                	fsw	fa0,48(a4)
    4b80:	0002                	c.slli64	zero
    4b82:	6d00                	flw	fs0,24(a0)
    4b84:	0008                	0x8
    4b86:	0900                	addi	s0,sp,144
    4b88:	0064                	addi	s1,sp,12
    4b8a:	0000                	unimp
    4b8c:	001d                	c.nop	7
    4b8e:	6408                	flw	fa0,8(s0)
    4b90:	0000                	unimp
    4b92:	7d00                	flw	fs0,56(a0)
    4b94:	0008                	0x8
    4b96:	0900                	addi	s0,sp,144
    4b98:	0064                	addi	s1,sp,12
    4b9a:	0000                	unimp
    4b9c:	001d                	c.nop	7
    4b9e:	8304f01b          	0x8304f01b
    4ba2:	0302                	c.slli64	t1
    4ba4:	08a2                	slli	a7,a7,0x8
    4ba6:	0000                	unimp
    4ba8:	051c                	addi	a5,sp,640
    4baa:	04000007          	0x4000007
    4bae:	029a                	slli	t0,t0,0x6
    4bb0:	0006f10b          	0x6f10b
    4bb4:	1c00                	addi	s0,sp,560
    4bb6:	051d                	addi	a0,a0,7
    4bb8:	0000                	unimp
    4bba:	a304                	fsd	fs1,0(a4)
    4bbc:	0b02                	c.slli64	s6
    4bbe:	0836                	slli	a6,a6,0xd
    4bc0:	0000                	unimp
    4bc2:	0800                	addi	s0,sp,16
    4bc4:	05bc                	addi	a5,sp,712
    4bc6:	0000                	unimp
    4bc8:	08b2                	slli	a7,a7,0xc
    4bca:	0000                	unimp
    4bcc:	6409                	lui	s0,0x2
    4bce:	0000                	unimp
    4bd0:	1800                	addi	s0,sp,48
    4bd2:	1d00                	addi	s0,sp,688
    4bd4:	07a5                	addi	a5,a5,9
    4bd6:	0000                	unimp
    4bd8:	08b2040f          	0x8b2040f
    4bdc:	0000                	unimp
    4bde:	c81e                	sw	t2,16(sp)
    4be0:	0008                	0x8
    4be2:	1400                	addi	s0,sp,544
    4be4:	0462                	slli	s0,s0,0x18
    4be6:	0000                	unimp
    4be8:	0f00                	addi	s0,sp,912
    4bea:	bd04                	fsd	fs1,56(a0)
    4bec:	0008                	0x8
    4bee:	0f00                	addi	s0,sp,912
    4bf0:	8504                	0x8504
    4bf2:	0001                	nop
    4bf4:	1e00                	addi	s0,sp,816
    4bf6:	08df 0000 5d14      	0x5d14000008df
    4bfc:	0000                	unimp
    4bfe:	0000                	unimp
    4c00:	08e5040f          	0x8e5040f
    4c04:	0000                	unimp
    4c06:	08d4040f          	0x8d4040f
    4c0a:	0000                	unimp
    4c0c:	5608                	lw	a0,40(a2)
    4c0e:	0006                	c.slli	zero,0x1
    4c10:	fb00                	fsw	fs0,48(a4)
    4c12:	0008                	0x8
    4c14:	0900                	addi	s0,sp,144
    4c16:	0064                	addi	s1,sp,12
    4c18:	0000                	unimp
    4c1a:	0002                	c.slli64	zero
    4c1c:	eb1f 0004 0400      	0x4000004eb1f
    4c22:	62170333          	0x62170333
    4c26:	0004                	0x4
    4c28:	1f00                	addi	s0,sp,944
    4c2a:	04e4                	addi	s1,sp,588
    4c2c:	0000                	unimp
    4c2e:	3404                	fld	fs1,40(s0)
    4c30:	04681d03          	lh	s10,70(a6) # 2eb50 <_data_lma+0x24538>
    4c34:	0000                	unimp
    4c36:	6105                	addi	sp,sp,32
    4c38:	0008                	0x8
    4c3a:	0600                	addi	s0,sp,768
    4c3c:	0048136b          	0x48136b
    4c40:	0000                	unimp
    4c42:	8d20                	0x8d20
    4c44:	000a                	c.slli	zero,0x2
    4c46:	0700                	addi	s0,sp,896
    4c48:	05b60e67          	jalr	t3,91(a2) # fffeb05b <__freertos_irq_stack_top+0xfefdb05b>
    4c4c:	0000                	unimp
    4c4e:	4a20                	lw	s0,80(a2)
    4c50:	08000003          	lb	zero,128(zero) # 80 <main+0x8>
    4c54:	169a                	slli	a3,a3,0x26
    4c56:	0041                	c.nop	16
    4c58:	0000                	unimp
    4c5a:	3720                	fld	fs0,104(a4)
    4c5c:	0000                	unimp
    4c5e:	0800                	addi	s0,sp,16
    4c60:	005d159b          	0x5d159b
    4c64:	0000                	unimp
    4c66:	b608                	fsd	fa0,40(a2)
    4c68:	0005                	c.nop	1
    4c6a:	5500                	lw	s0,40(a0)
    4c6c:	0009                	c.nop	2
    4c6e:	0900                	addi	s0,sp,144
    4c70:	0064                	addi	s1,sp,12
    4c72:	0000                	unimp
    4c74:	0001                	nop
    4c76:	8e20                	0x8e20
    4c78:	0002                	c.slli64	zero
    4c7a:	0800                	addi	s0,sp,16
    4c7c:	179e                	slli	a5,a5,0x27
    4c7e:	0945                	addi	s2,s2,17
    4c80:	0000                	unimp
    4c82:	fd05                	bnez	a0,4bba <_printf_i+0xbe>
    4c84:	09000007          	0x9000007
    4c88:	1142                	slli	sp,sp,0x30
    4c8a:	0915                	addi	s2,s2,5
    4c8c:	0000                	unimp
    4c8e:	4f05                	li	t5,1
    4c90:	09000007          	0x9000007
    4c94:	1860                	addi	s0,sp,60
    4c96:	005d                	c.nop	23
    4c98:	0000                	unimp
    4c9a:	6d21                	lui	s10,0x8
    4c9c:	0009                	c.nop	2
    4c9e:	0200                	addi	s0,sp,256
    4ca0:	0408                	addi	a0,sp,512
    4ca2:	0442                	slli	s0,s0,0x10
    4ca4:	0000                	unimp
    4ca6:	f205                	bnez	a2,4bc6 <_printf_i+0xca>
    4ca8:	0002                	c.slli64	zero
    4caa:	0900                	addi	s0,sp,144
    4cac:	1862                	slli	a6,a6,0x38
    4cae:	002c                	addi	a1,sp,8
    4cb0:	0000                	unimp
    4cb2:	1705                	addi	a4,a4,-31
    4cb4:	0000                	unimp
    4cb6:	0900                	addi	s0,sp,144
    4cb8:	00641863          	bne	s0,t1,4cc8 <_printf_i+0x1cc>
    4cbc:	0000                	unimp
    4cbe:	1720                	addi	s0,sp,936
    4cc0:	0006                	c.slli	zero,0x1
    4cc2:	0900                	addi	s0,sp,144
    4cc4:	0fba                	slli	t6,t6,0xe
    4cc6:	0991                	addi	s3,s3,4
    4cc8:	0000                	unimp
    4cca:	bf0d                	j	4bfc <_printf_i+0x100>
    4ccc:	01000007          	0x1000007
    4cd0:	bc09                	j	46e2 <_printf_float+0x552>
    4cd2:	c410                	sw	a2,8(s0)
    4cd4:	0009                	c.nop	2
    4cd6:	0b00                	addi	s0,sp,400
    4cd8:	01ec                	addi	a1,sp,204
    4cda:	0000                	unimp
    4cdc:	be09                	j	47ee <_printf_float+0x65e>
    4cde:	0009850b          	0x9850b
    4ce2:	0000                	unimp
    4ce4:	0500                	addi	s0,sp,640
    4ce6:	064e                	slli	a2,a2,0x13
    4ce8:	0000                	unimp
    4cea:	bf09                	j	4bfc <_printf_i+0x100>
    4cec:	0009a903          	lw	s2,0(s3)
    4cf0:	0500                	addi	s0,sp,640
    4cf2:	0815                	addi	a6,a6,5
    4cf4:	0000                	unimp
    4cf6:	1f0a                	slli	t5,t5,0x22
    4cf8:	7e10                	flw	fa2,56(a2)
    4cfa:	0009                	c.nop	2
    4cfc:	2200                	fld	fs0,0(a2)
    4cfe:	00000a63          	beqz	zero,4d12 <_printf_i+0x216>
    4d02:	0f01                	addi	t5,t5,0
    4d04:	7911                	lui	s2,0xfffe4
    4d06:	0009                	c.nop	2
    4d08:	0500                	addi	s0,sp,640
    4d0a:	000bb003          	0xbb003
    4d0e:	2201                	jal	4e0e <_printf_i+0x312>
    4d10:	0abc                	addi	a5,sp,344
    4d12:	0000                	unimp
    4d14:	1001                	c.nop	-32
    4d16:	7911                	lui	s2,0xfffe4
    4d18:	0009                	c.nop	2
    4d1a:	0500                	addi	s0,sp,640
    4d1c:	000bb403          	0xbb403
    4d20:	2201                	jal	4e20 <_printf_i+0x324>
    4d22:	0a9d                	addi	s5,s5,7
    4d24:	0000                	unimp
    4d26:	1101                	addi	sp,sp,-32
    4d28:	7911                	lui	s2,0xfffe4
    4d2a:	0009                	c.nop	2
    4d2c:	0500                	addi	s0,sp,640
    4d2e:	000ba403          	lw	s0,0(s7)
    4d32:	2201                	jal	4e32 <_printf_i+0x336>
    4d34:	0a45                	addi	s4,s4,17
    4d36:	0000                	unimp
    4d38:	1901                	addi	s2,s2,-32
    4d3a:	7911                	lui	s2,0xfffe4
    4d3c:	0009                	c.nop	2
    4d3e:	0500                	addi	s0,sp,640
    4d40:	000ba803          	lw	a6,0(s7)
    4d44:	2201                	jal	4e44 <_printf_i+0x348>
    4d46:	0a7e                	slli	s4,s4,0x1f
    4d48:	0000                	unimp
    4d4a:	1a01                	addi	s4,s4,-32
    4d4c:	7911                	lui	s2,0xfffe4
    4d4e:	0009                	c.nop	2
    4d50:	0500                	addi	s0,sp,640
    4d52:	000bb803          	0xbb803
    4d56:	2301                	jal	5256 <__swbuf_r+0x36>
    4d58:	0a54                	addi	a3,sp,276
    4d5a:	0000                	unimp
    4d5c:	2501                	jal	535c <__swbuf_r+0x13c>
    4d5e:	1515                	addi	a0,a0,-27
    4d60:	0009                	c.nop	2
    4d62:	2300                	fld	fs0,0(a4)
    4d64:	0ae8                	addi	a0,sp,348
    4d66:	0000                	unimp
    4d68:	2501                	jal	5368 <__swsetup_r>
    4d6a:	1525                	addi	a0,a0,-23
    4d6c:	0009                	c.nop	2
    4d6e:	2200                	fld	fs0,0(a2)
    4d70:	0aac                	addi	a1,sp,344
    4d72:	0000                	unimp
    4d74:	2a01                	jal	4e84 <_printf_i+0x388>
    4d76:	00004f0b          	0x4f0b
    4d7a:	0500                	addi	s0,sp,640
    4d7c:	000bd003          	lhu	zero,0(s7)
    4d80:	2201                	jal	4e80 <_printf_i+0x384>
    4d82:	0ab4                	addi	a3,sp,344
    4d84:	0000                	unimp
    4d86:	2a01                	jal	4e96 <_printf_i+0x39a>
    4d88:	4f14                	lw	a3,24(a4)
    4d8a:	0000                	unimp
    4d8c:	0500                	addi	s0,sp,640
    4d8e:	000bc803          	lbu	a6,0(s7)
    4d92:	2401                	jal	4f92 <putchar+0x3e>
    4d94:	099d                	addi	s3,s3,7
    4d96:	0000                	unimp
    4d98:	4e01                	li	t3,0
    4d9a:	0508                	addi	a0,sp,640
    4d9c:	000ba003          	lw	zero,0(s7)
    4da0:	2501                	jal	53a0 <__swsetup_r+0x38>
    4da2:	093a                	slli	s2,s2,0xe
    4da4:	0000                	unimp
    4da6:	6a01                	0x6a01
    4da8:	ac01                	j	4fb8 <_putc_r+0xc>
    4daa:	001d                	c.nop	7
    4dac:	0800                	addi	s0,sp,16
    4dae:	0000                	unimp
    4db0:	0100                	addi	s0,sp,128
    4db2:	a39c                	fsd	fa5,0(a5)
    4db4:	000a                	c.slli	zero,0x2
    4db6:	2600                	fld	fs0,8(a2)
    4db8:	0070                	addi	a2,sp,12
    4dba:	6a01                	0x6a01
    4dbc:	a31e                	fsd	ft7,384(sp)
    4dbe:	000a                	c.slli	zero,0x2
    4dc0:	0100                	addi	s0,sp,128
    4dc2:	005a                	c.slli	zero,0x16
    4dc4:	09c4040f          	0x9c4040f
    4dc8:	0000                	unimp
    4dca:	3b25                	jal	4b02 <_printf_i+0x6>
    4dcc:	0008                	0x8
    4dce:	0100                	addi	s0,sp,128
    4dd0:	0159                	addi	sp,sp,22
    4dd2:	1d74                	addi	a3,sp,700
    4dd4:	0000                	unimp
    4dd6:	0038                	addi	a4,sp,8
    4dd8:	0000                	unimp
    4dda:	9c01                	0x9c01
    4ddc:	0b01                	addi	s6,s6,0
    4dde:	0000                	unimp
    4de0:	01007027          	0x1007027
    4de4:	1e59                	addi	t3,t3,-10
    4de6:	00000aa3          	sb	zero,21(zero) # 15 <_start+0x15>
    4dea:	00003f73          	csrrc	t5,ustatus,zero
    4dee:	e728                	fsw	fa0,72(a4)
    4df0:	0008                	0x8
    4df2:	0100                	addi	s0,sp,128
    4df4:	2659                	jal	517a <_puts_r+0x102>
    4df6:	0b01                	addi	s6,s6,0
    4df8:	0000                	unimp
    4dfa:	3f9f 0000 ec28      	0xec2800003f9f
    4e00:	0008                	0x8
    4e02:	0100                	addi	s0,sp,128
    4e04:	3259                	jal	478a <_printf_float+0x5fa>
    4e06:	00000b07          	0xb07
    4e0a:	3fc0                	fld	fs0,184(a5)
    4e0c:	0000                	unimp
    4e0e:	9429                	srai	s0,s0,0x2a
    4e10:	001d                	c.nop	7
    4e12:	8e00                	0x8e00
    4e14:	2a00000b          	0x2a00000b
    4e18:	5a01                	li	s4,-32
    4e1a:	0305                	addi	t1,t1,1
    4e1c:	0408                	addi	a0,sp,512
    4e1e:	0100                	addi	s0,sp,128
    4e20:	0000                	unimp
    4e22:	005d040f          	0x5d040f
    4e26:	0000                	unimp
    4e28:	05b6040f          	0x5b6040f
    4e2c:	0000                	unimp
    4e2e:	0008082b          	0x8082b
    4e32:	0100                	addi	s0,sp,128
    4e34:	0149                	addi	sp,sp,18
    4e36:	09d0                	addi	a2,sp,212
    4e38:	0000                	unimp
    4e3a:	1d44                	addi	s1,sp,692
    4e3c:	0000                	unimp
    4e3e:	0030                	addi	a2,sp,8
    4e40:	0000                	unimp
    4e42:	9c01                	0x9c01
    4e44:	0b38                	addi	a4,sp,408
    4e46:	0000                	unimp
    4e48:	9728                	0x9728
    4e4a:	000a                	c.slli	zero,0x2
    4e4c:	0100                	addi	s0,sp,128
    4e4e:	1949                	addi	s2,s2,-14
    4e50:	0961                	addi	s2,s2,24
    4e52:	0000                	unimp
    4e54:	3fe1                	jal	4e2c <_printf_i+0x330>
    4e56:	0000                	unimp
    4e58:	2c00                	fld	fs0,24(s0)
    4e5a:	0832                	slli	a6,a6,0xc
    4e5c:	0000                	unimp
    4e5e:	3c01                	jal	486e <_printf_float+0x6de>
    4e60:	6101                	0x6101
    4e62:	0009                	c.nop	2
    4e64:	2c00                	fld	fs0,24(s0)
    4e66:	001d                	c.nop	7
    4e68:	1800                	addi	s0,sp,48
    4e6a:	0000                	unimp
    4e6c:	0100                	addi	s0,sp,128
    4e6e:	259c                	fld	fa5,8(a1)
    4e70:	08dd                	addi	a7,a7,23
    4e72:	0000                	unimp
    4e74:	3401                	jal	4874 <_printf_float+0x6e4>
    4e76:	0401                	addi	s0,s0,0
    4e78:	001d                	c.nop	7
    4e7a:	2800                	fld	fs0,16(s0)
    4e7c:	0000                	unimp
    4e7e:	0100                	addi	s0,sp,128
    4e80:	6e9c                	flw	fa5,24(a3)
    4e82:	2d00000b          	0x2d00000b
    4e86:	1d14                	addi	a3,sp,688
    4e88:	0000                	unimp
    4e8a:	0b99                	addi	s7,s7,6
    4e8c:	0000                	unimp
    4e8e:	2500                	fld	fs0,8(a0)
    4e90:	08c0                	addi	s0,sp,84
    4e92:	0000                	unimp
    4e94:	2d01                	jal	54a4 <__swsetup_r+0x13c>
    4e96:	dc01                	beqz	s0,4dae <_printf_i+0x2b2>
    4e98:	001c                	0x1c
    4e9a:	2800                	fld	fs0,16(s0)
    4e9c:	0000                	unimp
    4e9e:	0100                	addi	s0,sp,128
    4ea0:	8e9c                	0x8e9c
    4ea2:	2d00000b          	0x2d00000b
    4ea6:	1cec                	addi	a1,sp,636
    4ea8:	0000                	unimp
    4eaa:	0b99                	addi	s7,s7,6
    4eac:	0000                	unimp
    4eae:	2e00                	fld	fs0,24(a2)
    4eb0:	00000873          	0x873
    4eb4:	0869                	addi	a6,a6,26
    4eb6:	0000                	unimp
    4eb8:	722f000b          	0x722f000b
    4ebc:	000a                	c.slli	zero,0x2
    4ebe:	7200                	flw	fs0,32(a2)
    4ec0:	000a                	c.slli	zero,0x2
    4ec2:	0c00                	addi	s0,sp,528
    4ec4:	e9000a17          	auipc	s4,0xe9000
    4ec8:	000d                	c.nop	3
    4eca:	0400                	addi	s0,sp,512
    4ecc:	4800                	lw	s0,16(s0)
    4ece:	000d                	c.nop	3
    4ed0:	0400                	addi	s0,sp,512
    4ed2:	8601                	c.srai64	a2
    4ed4:	0006                	c.slli	zero,0x1
    4ed6:	0c00                	addi	s0,sp,528
    4ed8:	0af6                	slli	s5,s5,0x1d
    4eda:	0000                	unimp
    4edc:	0000025b          	0x25b
    4ee0:	0718                	addi	a4,sp,896
    4ee2:	0000                	unimp
    4ee4:	0000                	unimp
    4ee6:	0000                	unimp
    4ee8:	4b38                	lw	a4,80(a4)
    4eea:	0000                	unimp
    4eec:	0102                	c.slli64	sp
    4eee:	c606                	sw	ra,12(sp)
    4ef0:	0005                	c.nop	1
    4ef2:	0200                	addi	s0,sp,256
    4ef4:	0801                	addi	a6,a6,0
    4ef6:	05c4                	addi	s1,sp,708
    4ef8:	0000                	unimp
    4efa:	0202                	c.slli64	tp
    4efc:	7a05                	lui	s4,0xfffe1
    4efe:	0004                	0x4
    4f00:	0200                	addi	s0,sp,256
    4f02:	0702                	c.slli64	a4
    4f04:	070c                	addi	a1,sp,896
    4f06:	0000                	unimp
    4f08:	0402                	c.slli64	s0
    4f0a:	8805                	andi	s0,s0,1
    4f0c:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
    4f10:	0704                	addi	s1,sp,896
    4f12:	019f 0000 0802      	0x8020000019f
    4f18:	8305                	srli	a4,a4,0x1
    4f1a:	02000003          	lb	zero,32(zero) # 20 <_start+0x20>
    4f1e:	0708                	addi	a0,sp,896
    4f20:	019a                	slli	gp,gp,0x6
    4f22:	0000                	unimp
    4f24:	69050403          	lb	s0,1680(a0)
    4f28:	746e                	flw	fs0,248(sp)
    4f2a:	0200                	addi	s0,sp,256
    4f2c:	0704                	addi	s1,sp,896
    4f2e:	01a4                	addi	s1,sp,200
    4f30:	0000                	unimp
    4f32:	1002                	c.slli	zero,0x20
    4f34:	3d04                	fld	fs1,56(a0)
    4f36:	0004                	0x4
    4f38:	0400                	addi	s0,sp,512
    4f3a:	057f                	0x57f
    4f3c:	0000                	unimp
    4f3e:	6502                	flw	fa0,0(sp)
    4f40:	1701                	addi	a4,a4,-32
    4f42:	0064                	addi	s1,sp,12
    4f44:	0000                	unimp
    4f46:	3505                	jal	4d66 <_printf_i+0x26a>
    4f48:	03000007          	0x3000007
    4f4c:	0e2e                	slli	t3,t3,0xb
    4f4e:	0041                	c.nop	16
    4f50:	0000                	unimp
    4f52:	f005                	bnez	s0,4e72 <_printf_i+0x376>
    4f54:	0000                	unimp
    4f56:	0300                	addi	s0,sp,384
    4f58:	0e74                	addi	a3,sp,796
    4f5a:	0041                	c.nop	16
    4f5c:	0000                	unimp
    4f5e:	fc05                	bnez	s0,4e96 <_printf_i+0x39a>
    4f60:	0006                	c.slli	zero,0x1
    4f62:	0300                	addi	s0,sp,384
    4f64:	005d1793          	slli	a5,s10,0x5
    4f68:	0000                	unimp
    4f6a:	0406                	slli	s0,s0,0x1
    4f6c:	c503a503          	lw	a0,-944(t2)
    4f70:	0000                	unimp
    4f72:	0700                	addi	s0,sp,896
    4f74:	0326                	slli	t1,t1,0x9
    4f76:	0000                	unimp
    4f78:	720ca703          	lw	a4,1824(s9)
    4f7c:	0000                	unimp
    4f7e:	0700                	addi	s0,sp,896
    4f80:	04dd                	addi	s1,s1,23
    4f82:	0000                	unimp
    4f84:	c513a803          	lw	a6,-943(t2)
    4f88:	0000                	unimp
    4f8a:	0000                	unimp
    4f8c:	2c08                	fld	fa0,24(s0)
    4f8e:	0000                	unimp
    4f90:	d500                	sw	s0,40(a0)
    4f92:	0000                	unimp
    4f94:	0900                	addi	s0,sp,144
    4f96:	0064                	addi	s1,sp,12
    4f98:	0000                	unimp
    4f9a:	080a0003          	lb	zero,128(s4) # fffe1080 <__freertos_irq_stack_top+0xfefd1080>
    4f9e:	f909a203          	lw	tp,-112(s3)
    4fa2:	0000                	unimp
    4fa4:	0b00                	addi	s0,sp,400
    4fa6:	0166                	slli	sp,sp,0x19
    4fa8:	0000                	unimp
    4faa:	5d07a403          	lw	s0,1488(a5)
    4fae:	0000                	unimp
    4fb0:	0000                	unimp
    4fb2:	0002960b          	0x2960b
    4fb6:	0300                	addi	s0,sp,384
    4fb8:	05a9                	addi	a1,a1,10
    4fba:	000000a3          	sb	zero,1(zero) # 1 <_start+0x1>
    4fbe:	0004                	0x4
    4fc0:	0705                	addi	a4,a4,1
    4fc2:	0004                	0x4
    4fc4:	0300                	addi	s0,sp,384
    4fc6:	03aa                	slli	t2,t2,0xa
    4fc8:	00d5                	addi	ra,ra,21
    4fca:	0000                	unimp
    4fcc:	040c                	addi	a1,sp,512
    4fce:	bb05                	j	4cfe <_printf_i+0x202>
    4fd0:	04000003          	lb	zero,64(zero) # 40 <_start+0x40>
    4fd4:	1916                	slli	s2,s2,0x25
    4fd6:	0048                	addi	a0,sp,4
    4fd8:	0000                	unimp
    4fda:	b005                	j	47fa <_printf_float+0x66a>
    4fdc:	0000                	unimp
    4fde:	0500                	addi	s0,sp,640
    4fe0:	0d0c                	addi	a1,sp,656
    4fe2:	005d                	c.nop	23
    4fe4:	0000                	unimp
    4fe6:	0e05                	addi	t3,t3,1
    4fe8:	04000003          	lb	zero,64(zero) # 40 <_start+0x40>
    4fec:	01131b23          	sh	a7,22(t1) # 63ada <_data_lma+0x594c2>
    4ff0:	0000                	unimp
    4ff2:	2a0d                	jal	5124 <_puts_r+0xac>
    4ff4:	0001                	nop
    4ff6:	1800                	addi	s0,sp,48
    4ff8:	3404                	fld	fs1,40(s0)
    4ffa:	8508                	0x8508
    4ffc:	0001                	nop
    4ffe:	0b00                	addi	s0,sp,400
    5000:	079f 0000 3604      	0x36040000079f
    5006:	00018513          	mv	a0,gp
    500a:	0000                	unimp
    500c:	5f0e                	lw	t5,224(sp)
    500e:	3704006b          	0x3704006b
    5012:	00005d07          	0x5d07
    5016:	0400                	addi	s0,sp,512
    5018:	0005420b          	0x5420b
    501c:	0400                	addi	s0,sp,512
    501e:	005d0b37          	lui	s6,0x5d0
    5022:	0000                	unimp
    5024:	0b08                	addi	a0,sp,400
    5026:	04ba                	slli	s1,s1,0xe
    5028:	0000                	unimp
    502a:	3704                	fld	fs1,40(a4)
    502c:	5d14                	lw	a3,56(a0)
    502e:	0000                	unimp
    5030:	0c00                	addi	s0,sp,528
    5032:	0001c60b          	0x1c60b
    5036:	0400                	addi	s0,sp,512
    5038:	005d1b37          	lui	s6,0x5d1
    503c:	0000                	unimp
    503e:	0e10                	addi	a2,sp,784
    5040:	785f 0400 0b38      	0xb380400785f
    5046:	0000018b          	0x18b
    504a:	0014                	0x14
    504c:	012b040f          	0x12b040f
    5050:	0000                	unimp
    5052:	0708                	addi	a0,sp,896
    5054:	0001                	nop
    5056:	9b00                	0x9b00
    5058:	0001                	nop
    505a:	0900                	addi	s0,sp,144
    505c:	0064                	addi	s1,sp,12
    505e:	0000                	unimp
    5060:	0000                	unimp
    5062:	6d0d                	lui	s10,0x3
    5064:	0005                	c.nop	1
    5066:	2400                	fld	fs0,8(s0)
    5068:	3c04                	fld	fs1,56(s0)
    506a:	1e08                	addi	a0,sp,816
    506c:	0002                	c.slli64	zero
    506e:	0b00                	addi	s0,sp,400
    5070:	022d                	addi	tp,tp,11
    5072:	0000                	unimp
    5074:	3e04                	fld	fs1,56(a2)
    5076:	5d09                	li	s10,-30
    5078:	0000                	unimp
    507a:	0000                	unimp
    507c:	0001780b          	0x1780b
    5080:	0400                	addi	s0,sp,512
    5082:	005d093f 0b040000 	0xb040000005d093f
    508a:	0156                	slli	sp,sp,0x15
    508c:	0000                	unimp
    508e:	4004                	lw	s1,0(s0)
    5090:	5d09                	li	s10,-30
    5092:	0000                	unimp
    5094:	0800                	addi	s0,sp,16
    5096:	0002c60b          	0x2c60b
    509a:	0400                	addi	s0,sp,512
    509c:	0941                	addi	s2,s2,16
    509e:	005d                	c.nop	23
    50a0:	0000                	unimp
    50a2:	0b0c                	addi	a1,sp,400
    50a4:	0434                	addi	a3,sp,520
    50a6:	0000                	unimp
    50a8:	4204                	lw	s1,0(a2)
    50aa:	5d09                	li	s10,-30
    50ac:	0000                	unimp
    50ae:	1000                	addi	s0,sp,32
    50b0:	0004f70b          	0x4f70b
    50b4:	0400                	addi	s0,sp,512
    50b6:	005d0943          	fmadd.s	fs2,fs10,ft5,ft0,rne
    50ba:	0000                	unimp
    50bc:	0b14                	addi	a3,sp,400
    50be:	0132                	slli	sp,sp,0xc
    50c0:	0000                	unimp
    50c2:	4404                	lw	s1,8(s0)
    50c4:	5d09                	li	s10,-30
    50c6:	0000                	unimp
    50c8:	1800                	addi	s0,sp,48
    50ca:	0002360b          	0x2360b
    50ce:	0400                	addi	s0,sp,512
    50d0:	0945                	addi	s2,s2,17
    50d2:	005d                	c.nop	23
    50d4:	0000                	unimp
    50d6:	0b1c                	addi	a5,sp,400
    50d8:	041a                	slli	s0,s0,0x6
    50da:	0000                	unimp
    50dc:	4604                	lw	s1,8(a2)
    50de:	5d09                	li	s10,-30
    50e0:	0000                	unimp
    50e2:	2000                	fld	fs0,0(s0)
    50e4:	1000                	addi	s0,sp,32
    50e6:	0029                	c.nop	10
    50e8:	0000                	unimp
    50ea:	0108                	addi	a0,sp,128
    50ec:	4f04                	lw	s1,24(a4)
    50ee:	6308                	flw	fa0,0(a4)
    50f0:	0002                	c.slli64	zero
    50f2:	0b00                	addi	s0,sp,400
    50f4:	0412                	slli	s0,s0,0x4
    50f6:	0000                	unimp
    50f8:	5004                	lw	s1,32(s0)
    50fa:	630a                	flw	ft6,128(sp)
    50fc:	0002                	c.slli64	zero
    50fe:	0000                	unimp
    5100:	0005a90b          	0x5a90b
    5104:	0400                	addi	s0,sp,512
    5106:	0951                	addi	s2,s2,20
    5108:	00000263          	beqz	zero,510c <_puts_r+0x94>
    510c:	1180                	addi	s0,sp,224
    510e:	0726                	slli	a4,a4,0x9
    5110:	0000                	unimp
    5112:	5304                	lw	s1,32(a4)
    5114:	070a                	slli	a4,a4,0x2
    5116:	0001                	nop
    5118:	0000                	unimp
    511a:	1101                	addi	sp,sp,-32
    511c:	0784                	addi	s1,sp,960
    511e:	0000                	unimp
    5120:	5604                	lw	s1,40(a2)
    5122:	070a                	slli	a4,a4,0x2
    5124:	0001                	nop
    5126:	0400                	addi	s0,sp,512
    5128:	0001                	nop
    512a:	0508                	addi	a0,sp,640
    512c:	0001                	nop
    512e:	7300                	flw	fs0,32(a4)
    5130:	0002                	c.slli64	zero
    5132:	0900                	addi	s0,sp,144
    5134:	0064                	addi	s1,sp,12
    5136:	0000                	unimp
    5138:	001f 6010 0004      	0x46010001f
    513e:	9000                	0x9000
    5140:	0401                	addi	s0,s0,0
    5142:	0862                	slli	a6,a6,0x18
    5144:	02b6                	slli	t0,t0,0xd
    5146:	0000                	unimp
    5148:	00079f0b          	0x79f0b
    514c:	0400                	addi	s0,sp,512
    514e:	02b61263          	bne	a2,a1,5172 <_puts_r+0xfa>
    5152:	0000                	unimp
    5154:	0b00                	addi	s0,sp,400
    5156:	0245                	addi	tp,tp,17
    5158:	0000                	unimp
    515a:	6404                	flw	fs1,8(s0)
    515c:	5d06                	lw	s10,96(sp)
    515e:	0000                	unimp
    5160:	0400                	addi	s0,sp,512
    5162:	0001090b          	0x1090b
    5166:	0400                	addi	s0,sp,512
    5168:	0966                	slli	s2,s2,0x19
    516a:	02bc                	addi	a5,sp,328
    516c:	0000                	unimp
    516e:	0b08                	addi	a0,sp,400
    5170:	0029                	c.nop	10
    5172:	0000                	unimp
    5174:	6704                	flw	fs1,8(a4)
    5176:	1e1e                	slli	t3,t3,0x27
    5178:	0002                	c.slli64	zero
    517a:	8800                	0x8800
    517c:	0f00                	addi	s0,sp,912
    517e:	7304                	flw	fs1,32(a4)
    5180:	0002                	c.slli64	zero
    5182:	0800                	addi	s0,sp,16
    5184:	02cc                	addi	a1,sp,324
    5186:	0000                	unimp
    5188:	02cc                	addi	a1,sp,324
    518a:	0000                	unimp
    518c:	6409                	lui	s0,0x2
    518e:	0000                	unimp
    5190:	1f00                	addi	s0,sp,944
    5192:	0f00                	addi	s0,sp,912
    5194:	d204                	sw	s1,32(a2)
    5196:	0002                	c.slli64	zero
    5198:	1200                	addi	s0,sp,288
    519a:	360d                	jal	4cbc <_printf_i+0x1c0>
    519c:	0006                	c.slli	zero,0x1
    519e:	0800                	addi	s0,sp,16
    51a0:	7a04                	flw	fs1,48(a2)
    51a2:	fb08                	fsw	fa0,48(a4)
    51a4:	0002                	c.slli64	zero
    51a6:	0b00                	addi	s0,sp,400
    51a8:	03a5                	addi	t2,t2,9
    51aa:	0000                	unimp
    51ac:	7b04                	flw	fs1,48(a4)
    51ae:	fb11                	bnez	a4,50c2 <_puts_r+0x4a>
    51b0:	0002                	c.slli64	zero
    51b2:	0000                	unimp
    51b4:	00072f0b          	0x72f0b
    51b8:	0400                	addi	s0,sp,512
    51ba:	067c                	addi	a5,sp,780
    51bc:	005d                	c.nop	23
    51be:	0000                	unimp
    51c0:	0004                	0x4
    51c2:	002c040f          	0x2c040f
    51c6:	0000                	unimp
    51c8:	be0d                	j	4cfa <_printf_i+0x1fe>
    51ca:	0001                	nop
    51cc:	6800                	flw	fs0,16(s0)
    51ce:	ba04                	fsd	fs1,48(a2)
    51d0:	4408                	lw	a0,8(s0)
    51d2:	0004                	0x4
    51d4:	0e00                	addi	s0,sp,784
    51d6:	705f 0400 12bb      	0x12bb0400705f
    51dc:	000002fb          	0x2fb
    51e0:	0e00                	addi	s0,sp,784
    51e2:	725f 0400 07bc      	0x7bc0400725f
    51e8:	005d                	c.nop	23
    51ea:	0000                	unimp
    51ec:	0e04                	addi	s1,sp,784
    51ee:	775f 0400 07bd      	0x7bd0400775f
    51f4:	005d                	c.nop	23
    51f6:	0000                	unimp
    51f8:	0b08                	addi	a0,sp,400
    51fa:	007f                	0x7f
    51fc:	0000                	unimp
    51fe:	be04                	fsd	fs1,56(a2)
    5200:	3309                	jal	4f02 <iprintf+0x32>
    5202:	0000                	unimp
    5204:	0c00                	addi	s0,sp,528
    5206:	0003d90b          	0x3d90b
    520a:	0400                	addi	s0,sp,512
    520c:	003309bf 0e0e0000 	0xe0e0000003309bf
    5214:	625f 0066 c004      	0xc0040066625f
    521a:	d311                	beqz	a4,511e <_puts_r+0xa6>
    521c:	0002                	c.slli64	zero
    521e:	1000                	addi	s0,sp,32
    5220:	0000760b          	0x760b
    5224:	0400                	addi	s0,sp,512
    5226:	07c1                	addi	a5,a5,16
    5228:	005d                	c.nop	23
    522a:	0000                	unimp
    522c:	0b18                	addi	a4,sp,400
    522e:	0114                	addi	a3,sp,128
    5230:	0000                	unimp
    5232:	c804                	sw	s1,16(s0)
    5234:	050a                	slli	a0,a0,0x2
    5236:	0001                	nop
    5238:	1c00                	addi	s0,sp,560
    523a:	0000c20b          	0xc20b
    523e:	0400                	addi	s0,sp,512
    5240:	1dca                	slli	s11,s11,0x32
    5242:	05c8                	addi	a0,sp,708
    5244:	0000                	unimp
    5246:	0b20                	addi	s0,sp,408
    5248:	0449                	addi	s0,s0,18
    524a:	0000                	unimp
    524c:	cc04                	sw	s1,24(s0)
    524e:	f21d                	bnez	a2,5174 <_puts_r+0xfc>
    5250:	0005                	c.nop	1
    5252:	2400                	fld	fs0,8(s0)
    5254:	0007b00b          	0x7b00b
    5258:	0400                	addi	s0,sp,512
    525a:	06160dcf          	fnmadd.q	fs11,fa2,ft1,ft0,rne
    525e:	0000                	unimp
    5260:	0b28                	addi	a0,sp,408
    5262:	0332                	slli	t1,t1,0xc
    5264:	0000                	unimp
    5266:	d004                	sw	s1,32(s0)
    5268:	3009                	jal	4a6a <_printf_common+0x11e>
    526a:	0006                	c.slli	zero,0x1
    526c:	2c00                	fld	fs0,24(s0)
    526e:	5f0e                	lw	t5,224(sp)
    5270:	6275                	lui	tp,0x1d
    5272:	0400                	addi	s0,sp,512
    5274:	02d311d3          	fadd.d	ft3,ft6,fa3,rtz
    5278:	0000                	unimp
    527a:	0e30                	addi	a2,sp,792
    527c:	755f 0070 d404      	0xd4040070755f
    5282:	fb12                	fsw	ft4,180(sp)
    5284:	0002                	c.slli64	zero
    5286:	3800                	fld	fs0,48(s0)
    5288:	5f0e                	lw	t5,224(sp)
    528a:	7275                	lui	tp,0xffffd
    528c:	0400                	addi	s0,sp,512
    528e:	07d5                	addi	a5,a5,21
    5290:	005d                	c.nop	23
    5292:	0000                	unimp
    5294:	0b3c                	addi	a5,sp,408
    5296:	07e0                	addi	s0,sp,972
    5298:	0000                	unimp
    529a:	d804                	sw	s1,48(s0)
    529c:	3611                	jal	4da0 <_printf_i+0x2a4>
    529e:	0006                	c.slli	zero,0x1
    52a0:	4000                	lw	s0,0(s0)
    52a2:	00073c0b          	0x73c0b
    52a6:	0400                	addi	s0,sp,512
    52a8:	11d9                	addi	gp,gp,-10
    52aa:	0646                	slli	a2,a2,0x11
    52ac:	0000                	unimp
    52ae:	6c5f0e43          	0x6c5f0e43
    52b2:	0062                	c.slli	zero,0x18
    52b4:	dc04                	sw	s1,56(s0)
    52b6:	d311                	beqz	a4,51ba <_puts_r+0x142>
    52b8:	0002                	c.slli64	zero
    52ba:	4400                	lw	s0,8(s0)
    52bc:	0005640b          	0x5640b
    52c0:	0400                	addi	s0,sp,512
    52c2:	07df 005d 0000      	0x5d07df
    52c8:	0b4c                	addi	a1,sp,404
    52ca:	01ff                	0x1ff
    52cc:	0000                	unimp
    52ce:	e004                	fsw	fs1,0(s0)
    52d0:	7f0a                	flw	ft10,160(sp)
    52d2:	0000                	unimp
    52d4:	5000                	lw	s0,32(s0)
    52d6:	0001720b          	0x1720b
    52da:	0400                	addi	s0,sp,512
    52dc:	046212e3          	bne	tp,t1,5b20 <_dtoa_r+0x460>
    52e0:	0000                	unimp
    52e2:	0b54                	addi	a3,sp,404
    52e4:	0572                	slli	a0,a0,0x1c
    52e6:	0000                	unimp
    52e8:	e704                	fsw	fs1,8(a4)
    52ea:	1f0c                	addi	a1,sp,944
    52ec:	0001                	nop
    52ee:	5800                	lw	s0,48(s0)
    52f0:	0004680b          	0x4680b
    52f4:	0400                	addi	s0,sp,512
    52f6:	0ee9                	addi	t4,t4,26
    52f8:	00f9                	addi	ra,ra,30
    52fa:	0000                	unimp
    52fc:	0b5c                	addi	a5,sp,404
    52fe:	077c                	addi	a5,sp,908
    5300:	0000                	unimp
    5302:	ea04                	fsw	fs1,16(a2)
    5304:	5d09                	li	s10,-30
    5306:	0000                	unimp
    5308:	6400                	flw	fs0,8(s0)
    530a:	1300                	addi	s0,sp,416
    530c:	00000097          	auipc	ra,0x0
    5310:	0462                	slli	s0,s0,0x18
    5312:	0000                	unimp
    5314:	6214                	flw	fa3,0(a2)
    5316:	0004                	0x4
    5318:	1400                	addi	s0,sp,544
    531a:	0105                	addi	sp,sp,1
    531c:	0000                	unimp
    531e:	b614                	fsd	fa3,40(a2)
    5320:	0005                	c.nop	1
    5322:	1400                	addi	s0,sp,544
    5324:	005d                	c.nop	23
    5326:	0000                	unimp
    5328:	0f00                	addi	s0,sp,912
    532a:	6d04                	flw	fs1,24(a0)
    532c:	0004                	0x4
    532e:	1500                	addi	s0,sp,672
    5330:	0462                	slli	s0,s0,0x18
    5332:	0000                	unimp
    5334:	0516                	slli	a0,a0,0x5
    5336:	28000007          	0x28000007
    533a:	0404                	addi	s1,sp,512
    533c:	0265                	addi	tp,tp,25
    533e:	b608                	fsd	fa0,40(a2)
    5340:	0005                	c.nop	1
    5342:	1700                	addi	s0,sp,928
    5344:	042d                	addi	s0,s0,11
    5346:	0000                	unimp
    5348:	6704                	flw	fs1,8(a4)
    534a:	0702                	c.slli64	a4
    534c:	005d                	c.nop	23
    534e:	0000                	unimp
    5350:	1700                	addi	s0,sp,928
    5352:	0366                	slli	t1,t1,0x19
    5354:	0000                	unimp
    5356:	6c04                	flw	fs1,24(s0)
    5358:	0b02                	c.slli64	s6
    535a:	06a2                	slli	a3,a3,0x8
    535c:	0000                	unimp
    535e:	1704                	addi	s1,sp,928
    5360:	00e8                	addi	a0,sp,76
    5362:	0000                	unimp
    5364:	6c04                	flw	fs1,24(s0)
    5366:	1402                	slli	s0,s0,0x20
    5368:	06a2                	slli	a3,a3,0x8
    536a:	0000                	unimp
    536c:	1708                	addi	a0,sp,928
    536e:	000007cf          	fnmadd.s	fa5,ft0,ft0,ft0,rne
    5372:	6c04                	flw	fs1,24(s0)
    5374:	1e02                	slli	t3,t3,0x20
    5376:	06a2                	slli	a3,a3,0x8
    5378:	0000                	unimp
    537a:	170c                	addi	a1,sp,928
    537c:	0240                	addi	s0,sp,260
    537e:	0000                	unimp
    5380:	6e04                	flw	fs1,24(a2)
    5382:	0802                	c.slli64	a6
    5384:	005d                	c.nop	23
    5386:	0000                	unimp
    5388:	1710                	addi	a2,sp,928
    538a:	00000207          	0x207
    538e:	6f04                	flw	fs1,24(a4)
    5390:	0802                	c.slli64	a6
    5392:	08a2                	slli	a7,a7,0x8
    5394:	0000                	unimp
    5396:	1714                	addi	a3,sp,928
    5398:	00000763          	beqz	zero,53a6 <__swsetup_r+0x3e>
    539c:	7204                	flw	fs1,32(a2)
    539e:	0702                	c.slli64	a4
    53a0:	005d                	c.nop	23
    53a2:	0000                	unimp
    53a4:	1730                	addi	a2,sp,936
    53a6:	06f4                	addi	a3,sp,844
    53a8:	0000                	unimp
    53aa:	7304                	flw	fs1,32(a4)
    53ac:	1602                	slli	a2,a2,0x20
    53ae:	000008b7          	lui	a7,0x0
    53b2:	1734                	addi	a3,sp,936
    53b4:	0000033f 07027504 	0x70275040000033f
    53bc:	005d                	c.nop	23
    53be:	0000                	unimp
    53c0:	1738                	addi	a4,sp,936
    53c2:	03f1                	addi	t2,t2,28
    53c4:	0000                	unimp
    53c6:	7704                	flw	fs1,40(a4)
    53c8:	0a02                	c.slli64	s4
    53ca:	08c8                	addi	a0,sp,84
    53cc:	0000                	unimp
    53ce:	173c                	addi	a5,sp,936
    53d0:	014e                	slli	sp,sp,0x13
    53d2:	0000                	unimp
    53d4:	7a04                	flw	fs1,48(a2)
    53d6:	1302                	slli	t1,t1,0x20
    53d8:	0185                	addi	gp,gp,1
    53da:	0000                	unimp
    53dc:	1740                	addi	s0,sp,932
    53de:	0190                	addi	a2,sp,192
    53e0:	0000                	unimp
    53e2:	7b04                	flw	fs1,48(a4)
    53e4:	0702                	c.slli64	a4
    53e6:	005d                	c.nop	23
    53e8:	0000                	unimp
    53ea:	1744                	addi	s1,sp,932
    53ec:	029e                	slli	t0,t0,0x7
    53ee:	0000                	unimp
    53f0:	7c04                	flw	fs1,56(s0)
    53f2:	1302                	slli	t1,t1,0x20
    53f4:	0185                	addi	gp,gp,1
    53f6:	0000                	unimp
    53f8:	1748                	addi	a0,sp,932
    53fa:	000003ab          	0x3ab
    53fe:	7d04                	flw	fs1,56(a0)
    5400:	1402                	slli	s0,s0,0x20
    5402:	08ce                	slli	a7,a7,0x13
    5404:	0000                	unimp
    5406:	174c                	addi	a1,sp,932
    5408:	053a                	slli	a0,a0,0xe
    540a:	0000                	unimp
    540c:	8004                	0x8004
    540e:	0702                	c.slli64	a4
    5410:	005d                	c.nop	23
    5412:	0000                	unimp
    5414:	1750                	addi	a2,sp,932
    5416:	05bc                	addi	a5,sp,712
    5418:	0000                	unimp
    541a:	8104                	0x8104
    541c:	0902                	c.slli64	s2
    541e:	05b6                	slli	a1,a1,0xd
    5420:	0000                	unimp
    5422:	1754                	addi	a3,sp,932
    5424:	05ee                	slli	a1,a1,0x1b
    5426:	0000                	unimp
    5428:	a404                	fsd	fs1,8(s0)
    542a:	0702                	c.slli64	a4
    542c:	087d                	addi	a6,a6,31
    542e:	0000                	unimp
    5430:	1858                	addi	a4,sp,52
    5432:	0460                	addi	s0,sp,524
    5434:	0000                	unimp
    5436:	a804                	fsd	fs1,16(s0)
    5438:	1302                	slli	t1,t1,0x20
    543a:	02b6                	slli	t0,t0,0xd
    543c:	0000                	unimp
    543e:	0148                	addi	a0,sp,132
    5440:	e918                	fsw	fa4,16(a0)
    5442:	0002                	c.slli64	zero
    5444:	0400                	addi	s0,sp,512
    5446:	02a9                	addi	t0,t0,10
    5448:	7312                	flw	ft6,36(sp)
    544a:	0002                	c.slli64	zero
    544c:	4c00                	lw	s0,24(s0)
    544e:	1801                	addi	a6,a6,-32
    5450:	02d0                	addi	a2,sp,324
    5452:	0000                	unimp
    5454:	ad04                	fsd	fs1,24(a0)
    5456:	0c02                	c.slli64	s8
    5458:	08df 0000 02dc      	0x2dc000008df
    545e:	6318                	flw	fa4,0(a4)
    5460:	0006                	c.slli	zero,0x1
    5462:	0400                	addi	s0,sp,512
    5464:	02b2                	slli	t0,t0,0xc
    5466:	6310                	flw	fa2,0(a4)
    5468:	0006                	c.slli	zero,0x1
    546a:	e000                	fsw	fs0,0(s0)
    546c:	1802                	slli	a6,a6,0x20
    546e:	04b5                	addi	s1,s1,13
    5470:	0000                	unimp
    5472:	b404                	fsd	fs1,40(s0)
    5474:	0a02                	c.slli64	s4
    5476:	000008eb          	0x8eb
    547a:	02ec                	addi	a1,sp,332
    547c:	0f00                	addi	s0,sp,912
    547e:	bc04                	fsd	fs1,56(s0)
    5480:	0005                	c.nop	1
    5482:	0200                	addi	s0,sp,256
    5484:	0801                	addi	a6,a6,0
    5486:	05cd                	addi	a1,a1,19
    5488:	0000                	unimp
    548a:	bc15                	j	4ebe <_printf_i+0x3c2>
    548c:	0005                	c.nop	1
    548e:	0f00                	addi	s0,sp,912
    5490:	4404                	lw	s1,8(s0)
    5492:	0004                	0x4
    5494:	1300                	addi	s0,sp,416
    5496:	00000097          	auipc	ra,0x0
    549a:	05ec                	addi	a1,sp,716
    549c:	0000                	unimp
    549e:	6214                	flw	fa3,0(a2)
    54a0:	0004                	0x4
    54a2:	1400                	addi	s0,sp,544
    54a4:	0105                	addi	sp,sp,1
    54a6:	0000                	unimp
    54a8:	ec14                	fsw	fa3,24(s0)
    54aa:	0005                	c.nop	1
    54ac:	1400                	addi	s0,sp,544
    54ae:	005d                	c.nop	23
    54b0:	0000                	unimp
    54b2:	0f00                	addi	s0,sp,912
    54b4:	c304                	sw	s1,0(a4)
    54b6:	0005                	c.nop	1
    54b8:	0f00                	addi	s0,sp,912
    54ba:	ce04                	sw	s1,24(a2)
    54bc:	0005                	c.nop	1
    54be:	1300                	addi	s0,sp,416
    54c0:	0000008b          	0x8b
    54c4:	0616                	slli	a2,a2,0x5
    54c6:	0000                	unimp
    54c8:	6214                	flw	fa3,0(a2)
    54ca:	0004                	0x4
    54cc:	1400                	addi	s0,sp,544
    54ce:	0105                	addi	sp,sp,1
    54d0:	0000                	unimp
    54d2:	8b14                	0x8b14
    54d4:	0000                	unimp
    54d6:	1400                	addi	s0,sp,544
    54d8:	005d                	c.nop	23
    54da:	0000                	unimp
    54dc:	0f00                	addi	s0,sp,912
    54de:	f804                	fsw	fs1,48(s0)
    54e0:	0005                	c.nop	1
    54e2:	1300                	addi	s0,sp,416
    54e4:	005d                	c.nop	23
    54e6:	0000                	unimp
    54e8:	0630                	addi	a2,sp,776
    54ea:	0000                	unimp
    54ec:	6214                	flw	fa3,0(a2)
    54ee:	0004                	0x4
    54f0:	1400                	addi	s0,sp,544
    54f2:	0105                	addi	sp,sp,1
    54f4:	0000                	unimp
    54f6:	0f00                	addi	s0,sp,912
    54f8:	1c04                	addi	s1,sp,560
    54fa:	0006                	c.slli	zero,0x1
    54fc:	0800                	addi	s0,sp,16
    54fe:	002c                	addi	a1,sp,8
    5500:	0000                	unimp
    5502:	0646                	slli	a2,a2,0x11
    5504:	0000                	unimp
    5506:	6409                	lui	s0,0x2
    5508:	0000                	unimp
    550a:	0200                	addi	s0,sp,256
    550c:	0800                	addi	s0,sp,16
    550e:	002c                	addi	a1,sp,8
    5510:	0000                	unimp
    5512:	0656                	slli	a2,a2,0x15
    5514:	0000                	unimp
    5516:	6409                	lui	s0,0x2
    5518:	0000                	unimp
    551a:	0000                	unimp
    551c:	0400                	addi	s0,sp,512
    551e:	01f8                	addi	a4,sp,204
    5520:	0000                	unimp
    5522:	2404                	fld	fs1,8(s0)
    5524:	1a01                	addi	s4,s4,-32
    5526:	0301                	addi	t1,t1,0
    5528:	0000                	unimp
    552a:	4819                	li	a6,6
    552c:	0006                	c.slli	zero,0x1
    552e:	0c00                	addi	s0,sp,528
    5530:	2804                	fld	fs1,16(s0)
    5532:	0801                	addi	a6,a6,0
    5534:	069c                	addi	a5,sp,832
    5536:	0000                	unimp
    5538:	00079f17          	auipc	t5,0x79
    553c:	0400                	addi	s0,sp,512
    553e:	012a                	slli	sp,sp,0xa
    5540:	9c11                	0x9c11
    5542:	0006                	c.slli	zero,0x1
    5544:	0000                	unimp
    5546:	00057817          	auipc	a6,0x57
    554a:	0400                	addi	s0,sp,512
    554c:	5d07012b          	0x5d07012b
    5550:	0000                	unimp
    5552:	0400                	addi	s0,sp,512
    5554:	00032c17          	auipc	s8,0x32
    5558:	0400                	addi	s0,sp,512
    555a:	012c                	addi	a1,sp,136
    555c:	0006a20b          	0x6a20b
    5560:	0800                	addi	s0,sp,16
    5562:	0f00                	addi	s0,sp,912
    5564:	6304                	flw	fs1,0(a4)
    5566:	0006                	c.slli	zero,0x1
    5568:	0f00                	addi	s0,sp,912
    556a:	5604                	lw	s1,40(a2)
    556c:	0006                	c.slli	zero,0x1
    556e:	1900                	addi	s0,sp,176
    5570:	0188                	addi	a0,sp,192
    5572:	0000                	unimp
    5574:	040e                	slli	s0,s0,0x3
    5576:	0144                	addi	s1,sp,132
    5578:	e108                	fsw	fa0,0(a0)
    557a:	0006                	c.slli	zero,0x1
    557c:	1700                	addi	s0,sp,928
    557e:	0794                	addi	a3,sp,960
    5580:	0000                	unimp
    5582:	4504                	lw	s1,8(a0)
    5584:	1201                	addi	tp,tp,-32
    5586:	06e1                	addi	a3,a3,24
    5588:	0000                	unimp
    558a:	1700                	addi	s0,sp,928
    558c:	03b5                	addi	t2,t2,13
    558e:	0000                	unimp
    5590:	4604                	lw	s1,8(a2)
    5592:	1201                	addi	tp,tp,-32
    5594:	06e1                	addi	a3,a3,24
    5596:	0000                	unimp
    5598:	1706                	slli	a4,a4,0x21
    559a:	0612                	slli	a2,a2,0x4
    559c:	0000                	unimp
    559e:	4704                	lw	s1,8(a4)
    55a0:	1201                	addi	tp,tp,-32
    55a2:	003a                	c.slli	zero,0xe
    55a4:	0000                	unimp
    55a6:	000c                	0xc
    55a8:	3a08                	fld	fa0,48(a2)
    55aa:	0000                	unimp
    55ac:	f100                	fsw	fs0,32(a0)
    55ae:	0006                	c.slli	zero,0x1
    55b0:	0900                	addi	s0,sp,144
    55b2:	0064                	addi	s1,sp,12
    55b4:	0000                	unimp
    55b6:	0002                	c.slli64	zero
    55b8:	d01a                	sw	t1,32(sp)
    55ba:	8504                	0x8504
    55bc:	0702                	c.slli64	a4
    55be:	0806                	slli	a6,a6,0x1
    55c0:	0000                	unimp
    55c2:	00074217          	auipc	tp,0x74
    55c6:	0400                	addi	s0,sp,512
    55c8:	64180287          	0x64180287
    55cc:	0000                	unimp
    55ce:	0000                	unimp
    55d0:	00066b17          	auipc	s6,0x66
    55d4:	0400                	addi	s0,sp,512
    55d6:	0288                	addi	a0,sp,320
    55d8:	b612                	fsd	ft4,296(sp)
    55da:	0005                	c.nop	1
    55dc:	0400                	addi	s0,sp,512
    55de:	0001b117          	auipc	sp,0x1b
    55e2:	0400                	addi	s0,sp,512
    55e4:	0289                	addi	t0,t0,2
    55e6:	0610                	addi	a2,sp,768
    55e8:	0008                	0x8
    55ea:	0800                	addi	s0,sp,16
    55ec:	00050e17          	auipc	t3,0x50
    55f0:	0400                	addi	s0,sp,512
    55f2:	028a                	slli	t0,t0,0x2
    55f4:	00019b17          	auipc	s6,0x19
    55f8:	2400                	fld	fs0,8(s0)
    55fa:	00036d17          	auipc	s10,0x36
    55fe:	0400                	addi	s0,sp,512
    5600:	5d0f028b          	0x5d0f028b
    5604:	0000                	unimp
    5606:	4800                	lw	s0,16(s0)
    5608:	00079a17          	auipc	s4,0x79
    560c:	0400                	addi	s0,sp,512
    560e:	028c                	addi	a1,sp,320
    5610:	562c                	lw	a1,104(a2)
    5612:	0000                	unimp
    5614:	5000                	lw	s0,32(s0)
    5616:	00005e17          	auipc	t3,0x5
    561a:	0400                	addi	s0,sp,512
    561c:	028d                	addi	t0,t0,3
    561e:	a81a                	fsd	ft6,16(sp)
    5620:	0006                	c.slli	zero,0x1
    5622:	5800                	lw	s0,48(s0)
    5624:	0002b917          	auipc	s2,0x2b
    5628:	0400                	addi	s0,sp,512
    562a:	028e                	slli	t0,t0,0x3
    562c:	f916                	fsw	ft5,176(sp)
    562e:	0000                	unimp
    5630:	6800                	flw	fs0,16(s0)
    5632:	00067817          	auipc	a6,0x67
    5636:	0400                	addi	s0,sp,512
    5638:	f916028f          	0xf916028f
    563c:	0000                	unimp
    563e:	7000                	flw	fs0,32(s0)
    5640:	00004117          	auipc	sp,0x4
    5644:	0400                	addi	s0,sp,512
    5646:	0290                	addi	a2,sp,320
    5648:	f916                	fsw	ft5,176(sp)
    564a:	0000                	unimp
    564c:	7800                	flw	fs0,48(s0)
    564e:	00054a17          	auipc	s4,0x54
    5652:	0400                	addi	s0,sp,512
    5654:	0291                	addi	t0,t0,4
    5656:	1610                	addi	a2,sp,800
    5658:	0008                	0x8
    565a:	8000                	0x8000
    565c:	00006317          	auipc	t1,0x6
    5660:	0400                	addi	s0,sp,512
    5662:	0292                	slli	t0,t0,0x4
    5664:	2610                	fld	fa2,8(a2)
    5666:	0008                	0x8
    5668:	8800                	0x8800
    566a:	0005f317          	auipc	t1,0x5f
    566e:	0400                	addi	s0,sp,512
    5670:	5d0f0293          	addi	t0,t5,1488 # 7eb08 <_data_lma+0x744f0>
    5674:	0000                	unimp
    5676:	a000                	fsd	fs0,0(s0)
    5678:	0000c817          	auipc	a6,0xc
    567c:	0400                	addi	s0,sp,512
    567e:	0294                	addi	a3,sp,320
    5680:	f916                	fsw	ft5,176(sp)
    5682:	0000                	unimp
    5684:	a400                	fsd	fs0,8(s0)
    5686:	0002da17          	auipc	s4,0x2d
    568a:	0400                	addi	s0,sp,512
    568c:	0295                	addi	t0,t0,5
    568e:	f916                	fsw	ft5,176(sp)
    5690:	0000                	unimp
    5692:	ac00                	fsd	fs0,24(s0)
    5694:	00024a17          	auipc	s4,0x24
    5698:	0400                	addi	s0,sp,512
    569a:	0296                	slli	t0,t0,0x5
    569c:	f916                	fsw	ft5,176(sp)
    569e:	0000                	unimp
    56a0:	b400                	fsd	fs0,40(s0)
    56a2:	0003ca17          	auipc	s4,0x3c
    56a6:	0400                	addi	s0,sp,512
    56a8:	f9160297          	auipc	t0,0xf9160
    56ac:	0000                	unimp
    56ae:	bc00                	fsd	fs0,56(s0)
    56b0:	0002a817          	auipc	a6,0x2a
    56b4:	0400                	addi	s0,sp,512
    56b6:	0298                	addi	a4,sp,320
    56b8:	f916                	fsw	ft5,176(sp)
    56ba:	0000                	unimp
    56bc:	c400                	sw	s0,8(s0)
    56be:	00042b17          	auipc	s6,0x42
    56c2:	0400                	addi	s0,sp,512
    56c4:	0299                	addi	t0,t0,6
    56c6:	5d08                	lw	a0,56(a0)
    56c8:	0000                	unimp
    56ca:	cc00                	sw	s0,24(s0)
    56cc:	0800                	addi	s0,sp,16
    56ce:	05bc                	addi	a5,sp,712
    56d0:	0000                	unimp
    56d2:	0816                	slli	a6,a6,0x5
    56d4:	0000                	unimp
    56d6:	6409                	lui	s0,0x2
    56d8:	0000                	unimp
    56da:	1900                	addi	s0,sp,176
    56dc:	0800                	addi	s0,sp,16
    56de:	05bc                	addi	a5,sp,712
    56e0:	0000                	unimp
    56e2:	0826                	slli	a6,a6,0x9
    56e4:	0000                	unimp
    56e6:	6409                	lui	s0,0x2
    56e8:	0000                	unimp
    56ea:	0700                	addi	s0,sp,896
    56ec:	0800                	addi	s0,sp,16
    56ee:	05bc                	addi	a5,sp,712
    56f0:	0000                	unimp
    56f2:	0836                	slli	a6,a6,0xd
    56f4:	0000                	unimp
    56f6:	6409                	lui	s0,0x2
    56f8:	0000                	unimp
    56fa:	1700                	addi	s0,sp,928
    56fc:	1a00                	addi	s0,sp,304
    56fe:	04f0                	addi	a2,sp,588
    5700:	029e                	slli	t0,t0,0x7
    5702:	00085d07          	0x85d07
    5706:	1700                	addi	s0,sp,928
    5708:	0181                	addi	gp,gp,0
    570a:	0000                	unimp
    570c:	a104                	fsd	fs1,0(a0)
    570e:	1b02                	slli	s6,s6,0x20
    5710:	085d                	addi	a6,a6,23
    5712:	0000                	unimp
    5714:	1700                	addi	s0,sp,928
    5716:	000007d7          	0x7d7
    571a:	a204                	fsd	fs1,0(a2)
    571c:	1802                	slli	a6,a6,0x20
    571e:	086d                	addi	a6,a6,27
    5720:	0000                	unimp
    5722:	0078                	addi	a4,sp,12
    5724:	fb08                	fsw	fa0,48(a4)
    5726:	0002                	c.slli64	zero
    5728:	6d00                	flw	fs0,24(a0)
    572a:	0008                	0x8
    572c:	0900                	addi	s0,sp,144
    572e:	0064                	addi	s1,sp,12
    5730:	0000                	unimp
    5732:	001d                	c.nop	7
    5734:	6408                	flw	fa0,8(s0)
    5736:	0000                	unimp
    5738:	7d00                	flw	fs0,56(a0)
    573a:	0008                	0x8
    573c:	0900                	addi	s0,sp,144
    573e:	0064                	addi	s1,sp,12
    5740:	0000                	unimp
    5742:	001d                	c.nop	7
    5744:	8304f01b          	0x8304f01b
    5748:	0302                	c.slli64	t1
    574a:	08a2                	slli	a7,a7,0x8
    574c:	0000                	unimp
    574e:	051c                	addi	a5,sp,640
    5750:	04000007          	0x4000007
    5754:	029a                	slli	t0,t0,0x6
    5756:	0006f10b          	0x6f10b
    575a:	1c00                	addi	s0,sp,560
    575c:	051d                	addi	a0,a0,7
    575e:	0000                	unimp
    5760:	a304                	fsd	fs1,0(a4)
    5762:	0b02                	c.slli64	s6
    5764:	0836                	slli	a6,a6,0xd
    5766:	0000                	unimp
    5768:	0800                	addi	s0,sp,16
    576a:	05bc                	addi	a5,sp,712
    576c:	0000                	unimp
    576e:	08b2                	slli	a7,a7,0xc
    5770:	0000                	unimp
    5772:	6409                	lui	s0,0x2
    5774:	0000                	unimp
    5776:	1800                	addi	s0,sp,48
    5778:	1d00                	addi	s0,sp,688
    577a:	07a5                	addi	a5,a5,9
    577c:	0000                	unimp
    577e:	08b2040f          	0x8b2040f
    5782:	0000                	unimp
    5784:	c81e                	sw	t2,16(sp)
    5786:	0008                	0x8
    5788:	1400                	addi	s0,sp,544
    578a:	0462                	slli	s0,s0,0x18
    578c:	0000                	unimp
    578e:	0f00                	addi	s0,sp,912
    5790:	bd04                	fsd	fs1,56(a0)
    5792:	0008                	0x8
    5794:	0f00                	addi	s0,sp,912
    5796:	8504                	0x8504
    5798:	0001                	nop
    579a:	1e00                	addi	s0,sp,816
    579c:	08df 0000 5d14      	0x5d14000008df
    57a2:	0000                	unimp
    57a4:	0000                	unimp
    57a6:	08e5040f          	0x8e5040f
    57aa:	0000                	unimp
    57ac:	08d4040f          	0x8d4040f
    57b0:	0000                	unimp
    57b2:	5608                	lw	a0,40(a2)
    57b4:	0006                	c.slli	zero,0x1
    57b6:	fb00                	fsw	fs0,48(a4)
    57b8:	0008                	0x8
    57ba:	0900                	addi	s0,sp,144
    57bc:	0064                	addi	s1,sp,12
    57be:	0000                	unimp
    57c0:	0002                	c.slli64	zero
    57c2:	eb1f 0004 0400      	0x4000004eb1f
    57c8:	62170333          	0x62170333
    57cc:	0004                	0x4
    57ce:	1f00                	addi	s0,sp,944
    57d0:	04e4                	addi	s1,sp,588
    57d2:	0000                	unimp
    57d4:	3404                	fld	fs1,40(s0)
    57d6:	04681d03          	lh	s10,70(a6) # 2f6f6 <_data_lma+0x250de>
    57da:	0000                	unimp
    57dc:	4a20                	lw	s0,80(a2)
    57de:	06000003          	lb	zero,96(zero) # 60 <_start+0x60>
    57e2:	169a                	slli	a3,a3,0x26
    57e4:	0041                	c.nop	16
    57e6:	0000                	unimp
    57e8:	3720                	fld	fs0,104(a4)
    57ea:	0000                	unimp
    57ec:	0600                	addi	s0,sp,768
    57ee:	005d159b          	0x5d159b
    57f2:	0000                	unimp
    57f4:	b608                	fsd	fa0,40(a2)
    57f6:	0005                	c.nop	1
    57f8:	3d00                	fld	fs0,56(a0)
    57fa:	0009                	c.nop	2
    57fc:	0900                	addi	s0,sp,144
    57fe:	0064                	addi	s1,sp,12
    5800:	0000                	unimp
    5802:	0001                	nop
    5804:	8e20                	0x8e20
    5806:	0002                	c.slli64	zero
    5808:	0600                	addi	s0,sp,768
    580a:	179e                	slli	a5,a5,0x27
    580c:	092d                	addi	s2,s2,11
    580e:	0000                	unimp
    5810:	8d05                	sub	a0,a0,s1
    5812:	0000                	unimp
    5814:	0700                	addi	s0,sp,896
    5816:	185e                	slli	a6,a6,0x37
    5818:	00000033          	add	zero,zero,zero
    581c:	5c05                	li	s8,-31
    581e:	0006                	c.slli	zero,0x1
    5820:	0700                	addi	s0,sp,896
    5822:	185f 003a 0000      	0x3a185f
    5828:	0802                	c.slli64	a6
    582a:	4204                	lw	s1,0(a2)
    582c:	0004                	0x4
    582e:	0500                	addi	s0,sp,640
    5830:	02f2                	slli	t0,t0,0x1c
    5832:	0000                	unimp
    5834:	2c186207          	0x2c186207
    5838:	0000                	unimp
    583a:	0500                	addi	s0,sp,640
    583c:	00000017          	auipc	zero,0x0
    5840:	64186307          	0x64186307
    5844:	0000                	unimp
    5846:	2000                	fld	fs0,0(s0)
    5848:	00000617          	auipc	a2,0x0
    584c:	740fba07          	fld	fs4,1856(t6)
    5850:	0009                	c.nop	2
    5852:	2100                	fld	fs0,0(a0)
    5854:	00000b97          	auipc	s7,0x0
    5858:	00640407          	0x640407
    585c:	0000                	unimp
    585e:	6308                	flw	fa0,0(a4)
    5860:	d50e                	sw	gp,168(sp)
    5862:	0009                	c.nop	2
    5864:	2200                	fld	fs0,0(a2)
    5866:	00000b63          	beqz	zero,587c <_dtoa_r+0x1bc>
    586a:	2200                	fld	fs0,0(a2)
    586c:	00000b3b          	0xb3b
    5870:	2201                	jal	5970 <_dtoa_r+0x2b0>
    5872:	00000b8f          	0xb8f
    5876:	2202                	fld	ft4,0(sp)
    5878:	0b1f 0000 2203      	0x220300000b1f
    587e:	0b6e                	slli	s6,s6,0x1b
    5880:	0000                	unimp
    5882:	2204                	fld	fs1,0(a2)
    5884:	0b48                	addi	a0,sp,404
    5886:	0000                	unimp
    5888:	2205                	jal	59a8 <_dtoa_r+0x2e8>
    588a:	0bee                	slli	s7,s7,0x1b
    588c:	0000                	unimp
    588e:	2206                	fld	ft4,64(sp)
    5890:	00000b53          	fadd.s	fs6,ft0,ft0,rne
    5894:	0bc12207          	flw	ft4,188(sp) # 96fc <__muldf3+0x500>
    5898:	0000                	unimp
    589a:	0008                	0x8
    589c:	e508                	fsw	fa0,8(a0)
    589e:	0009                	c.nop	2
    58a0:	e500                	fsw	fs0,8(a0)
    58a2:	0009                	c.nop	2
    58a4:	0900                	addi	s0,sp,144
    58a6:	0064                	addi	s1,sp,12
    58a8:	0000                	unimp
    58aa:	040f0003          	lb	zero,64(t5)
    58ae:	0968                	addi	a0,sp,156
    58b0:	0000                	unimp
    58b2:	000ba223          	sw	zero,4(s7) # 5858 <_dtoa_r+0x198>
    58b6:	0100                	addi	s0,sp,128
    58b8:	0f72                	slli	t5,t5,0x1c
    58ba:	09d5                	addi	s3,s3,21
    58bc:	0000                	unimp
    58be:	0305                	addi	t1,t1,1
    58c0:	0454                	addi	a3,sp,516
    58c2:	0100                	addi	s0,sp,128
    58c4:	000c1323          	sh	zero,6(s8) # 3755a <_data_lma+0x2cf42>
    58c8:	0100                	addi	s0,sp,128
    58ca:	0f74                	addi	a3,sp,924
    58cc:	09d5                	addi	s3,s3,21
    58ce:	0000                	unimp
    58d0:	0305                	addi	t1,t1,1
    58d2:	0444                	addi	s1,sp,516
    58d4:	0100                	addi	s0,sp,128
    58d6:	000b2723          	sw	zero,14(s6) # 476cc <_data_lma+0x3d0b4>
    58da:	0100                	addi	s0,sp,128
    58dc:	0f78                	addi	a4,sp,924
    58de:	09d5                	addi	s3,s3,21
    58e0:	0000                	unimp
    58e2:	0305                	addi	t1,t1,1
    58e4:	0464                	addi	s1,sp,524
    58e6:	0100                	addi	s0,sp,128
    58e8:	000ba923          	sw	zero,18(s7)
    58ec:	0100                	addi	s0,sp,128
    58ee:	0f7c                	addi	a5,sp,924
    58f0:	09d5                	addi	s3,s3,21
    58f2:	0000                	unimp
    58f4:	0305                	addi	t1,t1,1
    58f6:	0434                	addi	a3,sp,520
    58f8:	0100                	addi	s0,sp,128
    58fa:	d824                	sw	s1,112(s0)
    58fc:	0100000b          	0x100000b
    5900:	01d9                	addi	gp,gp,22
    5902:	098c                	addi	a1,sp,208
    5904:	0000                	unimp
    5906:	1f70                	addi	a2,sp,956
    5908:	0000                	unimp
    590a:	0330                	addi	a2,sp,392
    590c:	0000                	unimp
    590e:	9c01                	0x9c01
    5910:	0baa                	slli	s7,s7,0xa
    5912:	0000                	unimp
    5914:	2e25                	jal	5c4c <_dtoa_r+0x58c>
    5916:	0100000b          	0x100000b
    591a:	1fd9                	addi	t6,t6,-10
    591c:	0baa                	slli	s7,s7,0xa
    591e:	0000                	unimp
    5920:	4002                	0x4002
    5922:	0000                	unimp
    5924:	fc26                	fsw	fs1,56(sp)
    5926:	0100000b          	0x100000b
    592a:	2ed9                	jal	5d00 <_dtoa_r+0x640>
    592c:	0bb0                	addi	a2,sp,472
    592e:	0000                	unimp
    5930:	5b01                	li	s6,-32
    5932:	72747327          	0x72747327
    5936:	0100                	addi	s0,sp,128
    5938:	09e515db          	0x9e515db
    593c:	0000                	unimp
    593e:	4092                	lw	ra,4(sp)
    5940:	0000                	unimp
    5942:	b528                	fsd	fa0,104(a0)
    5944:	0100000b          	0x100000b
    5948:	15dc                	addi	a5,sp,740
    594a:	0968                	addi	a0,sp,156
    594c:	0000                	unimp
    594e:	00004267          	0x4267
    5952:	4928                	lw	a0,80(a0)
    5954:	0000                	unimp
    5956:	0100                	addi	s0,sp,128
    5958:	15dd                	addi	a1,a1,-9
    595a:	098c                	addi	a1,sp,208
    595c:	0000                	unimp
    595e:	4372                	lw	t1,28(sp)
    5960:	0000                	unimp
    5962:	b629                	j	546c <__swsetup_r+0x104>
    5964:	8800000b          	0x8800000b
    5968:	001f 0800 0006      	0x60800001f
    596e:	0100                	addi	s0,sp,128
    5970:	15e9                	addi	a1,a1,-6
    5972:	0ac8                	addi	a0,sp,340
    5974:	0000                	unimp
    5976:	c72a                	sw	a0,140(sp)
    5978:	a600000b          	0xa600000b
    597c:	0044                	addi	s1,sp,4
    597e:	2b00                	fld	fs0,16(a4)
    5980:	0608                	addi	a0,sp,768
    5982:	0000                	unimp
    5984:	d12c                	sw	a1,96(a0)
    5986:	b900000b          	0xb900000b
    598a:	0044                	addi	s1,sp,4
    598c:	0000                	unimp
    598e:	2d00                	fld	fs0,24(a0)
    5990:	0bb6                	slli	s7,s7,0xd
    5992:	0000                	unimp
    5994:	1fb4                	addi	a3,sp,1016
    5996:	0000                	unimp
    5998:	0620                	addi	s0,sp,776
    599a:	0000                	unimp
    599c:	1301                	addi	t1,t1,-32
    599e:	1b01                	addi	s6,s6,-32
    59a0:	0af6                	slli	s5,s5,0x1d
    59a2:	0000                	unimp
    59a4:	c72a                	sw	a0,140(sp)
    59a6:	f100000b          	0xf100000b
    59aa:	0044                	addi	s1,sp,4
    59ac:	2b00                	fld	fs0,16(a4)
    59ae:	0620                	addi	s0,sp,776
    59b0:	0000                	unimp
    59b2:	d12c                	sw	a1,96(a0)
    59b4:	0f00000b          	0xf00000b
    59b8:	0045                	c.nop	17
    59ba:	0000                	unimp
    59bc:	2d00                	fld	fs0,24(a0)
    59be:	0bb6                	slli	s7,s7,0xd
    59c0:	0000                	unimp
    59c2:	2018                	fld	fa4,0(s0)
    59c4:	0000                	unimp
    59c6:	0658                	addi	a4,sp,772
    59c8:	0000                	unimp
    59ca:	1f01                	addi	t5,t5,-32
    59cc:	1b01                	addi	s6,s6,-32
    59ce:	0b24                	addi	s1,sp,408
    59d0:	0000                	unimp
    59d2:	c72a                	sw	a0,140(sp)
    59d4:	2300000b          	0x2300000b
    59d8:	0045                	c.nop	17
    59da:	2b00                	fld	fs0,16(a4)
    59dc:	0658                	addi	a4,sp,772
    59de:	0000                	unimp
    59e0:	d12c                	sw	a1,96(a0)
    59e2:	3600000b          	0x3600000b
    59e6:	0045                	c.nop	17
    59e8:	0000                	unimp
    59ea:	2900                	fld	fs0,16(a0)
    59ec:	0bb6                	slli	s7,s7,0xd
    59ee:	0000                	unimp
    59f0:	20c0                	fld	fs0,128(s1)
    59f2:	0000                	unimp
    59f4:	0680                	addi	s0,sp,832
    59f6:	0000                	unimp
    59f8:	fd01                	bnez	a0,5910 <_dtoa_r+0x250>
    59fa:	5115                	li	sp,-27
    59fc:	2a00000b          	0x2a00000b
    5a00:	00000bc7          	fmsub.s	fs7,ft0,ft0,ft0,rne
    5a04:	454a                	lw	a0,144(sp)
    5a06:	0000                	unimp
    5a08:	0006802b          	0x6802b
    5a0c:	2c00                	fld	fs0,24(s0)
    5a0e:	0bd1                	addi	s7,s7,20
    5a10:	0000                	unimp
    5a12:	455d                	li	a0,23
    5a14:	0000                	unimp
    5a16:	0000                	unimp
    5a18:	b62d                	j	5542 <quorem+0x4e>
    5a1a:	5000000b          	0x5000000b
    5a1e:	0021                	c.nop	8
    5a20:	9800                	0x9800
    5a22:	0006                	c.slli	zero,0x1
    5a24:	0100                	addi	s0,sp,128
    5a26:	0132                	slli	sp,sp,0xc
    5a28:	7f15                	lui	t5,0xfffe5
    5a2a:	2a00000b          	0x2a00000b
    5a2e:	00000bc7          	fmsub.s	fs7,ft0,ft0,ft0,rne
    5a32:	4589                	li	a1,2
    5a34:	0000                	unimp
    5a36:	0006982b          	0x6982b
    5a3a:	2c00                	fld	fs0,24(s0)
    5a3c:	0bd1                	addi	s7,s7,20
    5a3e:	0000                	unimp
    5a40:	45b5                	li	a1,13
    5a42:	0000                	unimp
    5a44:	0000                	unimp
    5a46:	b62e                	fsd	fa1,296(sp)
    5a48:	9c00000b          	0x9c00000b
    5a4c:	0021                	c.nop	8
    5a4e:	b800                	fsd	fs0,48(s0)
    5a50:	0006                	c.slli	zero,0x1
    5a52:	0100                	addi	s0,sp,128
    5a54:	013e                	slli	sp,sp,0xf
    5a56:	2a16                	fld	fs4,320(sp)
    5a58:	00000bc7          	fmsub.s	fs7,ft0,ft0,ft0,rne
    5a5c:	45ed                	li	a1,27
    5a5e:	0000                	unimp
    5a60:	0006b82b          	0x6b82b
    5a64:	2c00                	fld	fs0,24(s0)
    5a66:	0bd1                	addi	s7,s7,20
    5a68:	0000                	unimp
    5a6a:	4600                	lw	s0,8(a2)
    5a6c:	0000                	unimp
    5a6e:	0000                	unimp
    5a70:	0f00                	addi	s0,sp,912
    5a72:	e504                	fsw	fs1,8(a0)
    5a74:	0009                	c.nop	2
    5a76:	0f00                	addi	s0,sp,912
    5a78:	7404                	flw	fs1,40(s0)
    5a7a:	0009                	c.nop	2
    5a7c:	2f00                	fld	fs0,24(a4)
    5a7e:	00000b77          	0xb77
    5a82:	c601                	beqz	a2,5a8a <_dtoa_r+0x3ca>
    5a84:	6801                	0x6801
    5a86:	0009                	c.nop	2
    5a88:	0100                	addi	s0,sp,128
    5a8a:	0bde                	slli	s7,s7,0x17
    5a8c:	0000                	unimp
    5a8e:	6330                	flw	fa2,64(a4)
    5a90:	0100                	addi	s0,sp,128
    5a92:	12c6                	slli	t0,t0,0x31
    5a94:	0968                	addi	a0,sp,156
    5a96:	0000                	unimp
    5a98:	5431                	li	s0,-20
    5a9a:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
    5a9e:	0bc8                	addi	a0,sp,468
    5aa0:	0968                	addi	a0,sp,156
    5aa2:	0000                	unimp
    5aa4:	3200                	fld	fs0,32(a2)
    5aa6:	0849                	addi	a6,a6,18
    5aa8:	0000                	unimp
    5aaa:	8c01                	sub	s0,s0,s0
    5aac:	b401                	j	54ac <__swsetup_r+0x144>
    5aae:	001d                	c.nop	7
    5ab0:	bc00                	fsd	fs0,56(s0)
    5ab2:	0001                	nop
    5ab4:	0100                	addi	s0,sp,128
    5ab6:	919c                	0x919c
    5ab8:	000c                	0xc
    5aba:	2500                	fld	fs0,8(a0)
    5abc:	0730                	addi	a2,sp,904
    5abe:	0000                	unimp
    5ac0:	8c01                	sub	s0,s0,s0
    5ac2:	7418                	flw	fa4,40(s0)
    5ac4:	0009                	c.nop	2
    5ac6:	1400                	addi	s0,sp,544
    5ac8:	0046                	c.slli	zero,0x11
    5aca:	2500                	fld	fs0,8(a0)
    5acc:	0795                	addi	a5,a5,5
    5ace:	0000                	unimp
    5ad0:	8c01                	sub	s0,s0,s0
    5ad2:	4925                	li	s2,9
    5ad4:	0009                	c.nop	2
    5ad6:	5d00                	lw	s0,56(a0)
    5ad8:	0046                	c.slli	zero,0x11
    5ada:	3300                	fld	fs0,32(a4)
    5adc:	0070                	addi	a2,sp,12
    5ade:	8c01                	sub	s0,s0,s0
    5ae0:	e532                	fsw	fa2,136(sp)
    5ae2:	0009                	c.nop	2
    5ae4:	c200                	sw	s0,0(a2)
    5ae6:	0046                	c.slli	zero,0x11
    5ae8:	2800                	fld	fs0,16(s0)
    5aea:	0c0d                	addi	s8,s8,3
    5aec:	0000                	unimp
    5aee:	8e01                	sub	a2,a2,s0
    5af0:	740c                	flw	fa1,40(s0)
    5af2:	0009                	c.nop	2
    5af4:	1d00                	addi	s0,sp,688
    5af6:	28000047          	fmsub.s	ft0,ft0,ft0,ft5,rne
    5afa:	07a0                	addi	s0,sp,968
    5afc:	0000                	unimp
    5afe:	8e01                	sub	a2,a2,s0
    5b00:	00097417          	auipc	s0,0x97
    5b04:	8000                	0x8000
    5b06:	27000047          	fmsub.q	ft0,ft0,fa6,ft4,rne
    5b0a:	0069                	c.nop	26
    5b0c:	8e01                	sub	a2,a2,s0
    5b0e:	7421                	lui	s0,0xfffe8
    5b10:	0009                	c.nop	2
    5b12:	c400                	sw	s0,8(s0)
    5b14:	27000047          	fmsub.q	ft0,ft0,fa6,ft4,rne
    5b18:	7562                	flw	fa0,56(sp)
    5b1a:	0066                	c.slli	zero,0x19
    5b1c:	8f01                	sub	a4,a4,s0
    5b1e:	e50c                	fsw	fa1,8(a0)
    5b20:	0009                	c.nop	2
    5b22:	2c00                	fld	fs0,24(s0)
    5b24:	0048                	addi	a0,sp,4
    5b26:	3400                	fld	fs0,40(s0)
    5b28:	1f40                	addi	s0,sp,948
    5b2a:	0000                	unimp
    5b2c:	0dd5                	addi	s11,s11,21
    5b2e:	0000                	unimp
    5b30:	00000c73          	0xc73
    5b34:	0135                	addi	sp,sp,13
    5b36:	0030015b          	0x30015b
    5b3a:	7036                	flw	ft0,108(sp)
    5b3c:	001f d500 000d      	0xdd500001f
    5b42:	3500                	fld	fs0,40(a0)
    5b44:	5a01                	li	s4,-32
    5b46:	5c01f303          	0x5c01f303
    5b4a:	0135                	addi	sp,sp,13
    5b4c:	3530015b          	0x3530015b
    5b50:	5c01                	li	s8,-32
    5b52:	5a01f303          	0x5a01f303
    5b56:	0000                	unimp
    5b58:	1c24                	addi	s1,sp,568
    5b5a:	0002                	c.slli64	zero
    5b5c:	0100                	addi	s0,sp,128
    5b5e:	012e                	slli	sp,sp,0xb
    5b60:	0955                	addi	s2,s2,21
    5b62:	0000                	unimp
    5b64:	22a0                	fld	fs0,64(a3)
    5b66:	0000                	unimp
    5b68:	020c                	addi	a1,sp,256
    5b6a:	0000                	unimp
    5b6c:	9c01                	0x9c01
    5b6e:	0dc5                	addi	s11,s11,17
    5b70:	0000                	unimp
    5b72:	6525                	lui	a0,0x9
    5b74:	0005                	c.nop	1
    5b76:	0100                	addi	s0,sp,128
    5b78:	192e                	slli	s2,s2,0x2b
    5b7a:	0974                	addi	a3,sp,156
    5b7c:	0000                	unimp
    5b7e:	4878                	lw	a4,84(s0)
    5b80:	0000                	unimp
    5b82:	3125                	jal	57aa <_dtoa_r+0xea>
    5b84:	0009                	c.nop	2
    5b86:	0100                	addi	s0,sp,128
    5b88:	09e5192f          	0x9e5192f
    5b8c:	0000                	unimp
    5b8e:	48bd                	li	a7,15
    5b90:	0000                	unimp
    5b92:	c025                	beqz	s0,5bf2 <_dtoa_r+0x532>
    5b94:	0004                	0x4
    5b96:	0100                	addi	s0,sp,128
    5b98:	1930                	addi	a2,sp,184
    5b9a:	0949                	addi	s2,s2,18
    5b9c:	0000                	unimp
    5b9e:	48f4                	lw	a3,84(s1)
    5ba0:	0000                	unimp
    5ba2:	c625                	beqz	a2,5c0a <_dtoa_r+0x54a>
    5ba4:	0004                	0x4
    5ba6:	0100                	addi	s0,sp,128
    5ba8:	1931                	addi	s2,s2,-20
    5baa:	0949                	addi	s2,s2,18
    5bac:	0000                	unimp
    5bae:	492e                	lw	s2,200(sp)
    5bb0:	0000                	unimp
    5bb2:	b025                	j	53da <__swsetup_r+0x72>
    5bb4:	0100000b          	0x100000b
    5bb8:	1932                	slli	s2,s2,0x2c
    5bba:	0949                	addi	s2,s2,18
    5bbc:	0000                	unimp
    5bbe:	4968                	lw	a0,84(a0)
    5bc0:	0000                	unimp
    5bc2:	63726333          	0x63726333
    5bc6:	0100                	addi	s0,sp,128
    5bc8:	09551933          	0x9551933
    5bcc:	0000                	unimp
    5bce:	49a2                	lw	s3,8(sp)
    5bd0:	0000                	unimp
    5bd2:	000b1223          	sh	zero,4(s6)
    5bd6:	0100                	addi	s0,sp,128
    5bd8:	0c35                	addi	s8,s8,13
    5bda:	0dc5                	addi	s11,s11,17
    5bdc:	0000                	unimp
    5bde:	7f909103          	lh	sp,2041(ra) # 5c8f <_dtoa_r+0x5cf>
    5be2:	000b8223          	sb	zero,4(s7)
    5be6:	0100                	addi	s0,sp,128
    5be8:	0c36                	slli	s8,s8,0xd
    5bea:	0dc5                	addi	s11,s11,17
    5bec:	0000                	unimp
    5bee:	7fb09103          	lh	sp,2043(ra)
    5bf2:	01007037          	lui	zero,0x1007
    5bf6:	09e50c37          	lui	s8,0x9e50
    5bfa:	0000                	unimp
    5bfc:	7f8c9103          	lh	sp,2040(s9)
    5c00:	01006927          	0x1006927
    5c04:	0c38                	addi	a4,sp,536
    5c06:	0974                	addi	a3,sp,156
    5c08:	0000                	unimp
    5c0a:	00004a0b          	0x4a0b
    5c0e:	d838                	sw	a4,112(s0)
    5c10:	0006                	c.slli	zero,0x1
    5c12:	7700                	flw	fs0,40(a4)
    5c14:	000d                	c.nop	3
    5c16:	2800                	fld	fs0,16(s0)
    5c18:	0b34                	addi	a3,sp,408
    5c1a:	0000                	unimp
    5c1c:	4401                	li	s0,0
    5c1e:	8c19                	sub	s0,s0,a4
    5c20:	0009                	c.nop	2
    5c22:	2b00                	fld	fs0,16(a4)
    5c24:	004a                	c.slli	zero,0x12
    5c26:	3900                	fld	fs0,48(a0)
    5c28:	2344                	fld	fs1,128(a4)
    5c2a:	0000                	unimp
    5c2c:	00000a33          	add	s4,zero,zero
    5c30:	0135                	addi	sp,sp,13
    5c32:	025a                	slli	tp,tp,0x16
    5c34:	0085                	addi	ra,ra,1
    5c36:	0135                	addi	sp,sp,13
    5c38:	0079025b          	0x79025b
    5c3c:	0000                	unimp
    5c3e:	f838                	fsw	fa4,112(s0)
    5c40:	0006                	c.slli	zero,0x1
    5c42:	a700                	fsd	fs0,8(a4)
    5c44:	000d                	c.nop	3
    5c46:	2800                	fld	fs0,16(s0)
    5c48:	0b34                	addi	a3,sp,408
    5c4a:	0000                	unimp
    5c4c:	5801                	li	a6,-32
    5c4e:	8c19                	sub	s0,s0,a4
    5c50:	0009                	c.nop	2
    5c52:	3e00                	fld	fs0,56(a2)
    5c54:	004a                	c.slli	zero,0x12
    5c56:	3900                	fld	fs0,48(a0)
    5c58:	23d4                	fld	fa3,128(a5)
    5c5a:	0000                	unimp
    5c5c:	00000a33          	add	s4,zero,zero
    5c60:	0135                	addi	sp,sp,13
    5c62:	025a                	slli	tp,tp,0x16
    5c64:	0085                	addi	ra,ra,1
    5c66:	0135                	addi	sp,sp,13
    5c68:	0079025b          	0x79025b
    5c6c:	0000                	unimp
    5c6e:	403a                	0x403a
    5c70:	0024                	addi	s1,sp,8
    5c72:	e000                	fsw	fs0,0(s0)
    5c74:	000d                	c.nop	3
    5c76:	bb00                	fsd	fs0,48(a4)
    5c78:	000d                	c.nop	3
    5c7a:	3500                	fld	fs0,40(a0)
    5c7c:	5b01                	li	s6,-32
    5c7e:	8302                	jr	t1
    5c80:	0000                	unimp
    5c82:	0024543b          	0x24543b
    5c86:	e000                	fsw	fs0,0(s0)
    5c88:	000d                	c.nop	3
    5c8a:	0000                	unimp
    5c8c:	7408                	flw	fa0,40(s0)
    5c8e:	0009                	c.nop	2
    5c90:	d500                	sw	s0,40(a0)
    5c92:	000d                	c.nop	3
    5c94:	0900                	addi	s0,sp,144
    5c96:	0064                	addi	s1,sp,12
    5c98:	0000                	unimp
    5c9a:	2c3c0007          	0x2c3c0007
    5c9e:	000a                	c.slli	zero,0x2
    5ca0:	2200                	fld	fs0,0(a2)
    5ca2:	000a                	c.slli	zero,0x2
    5ca4:	0900                	addi	s0,sp,144
    5ca6:	3d00                	fld	fs0,56(a0)
    5ca8:	0bd1                	addi	s7,s7,20
    5caa:	0000                	unimp
    5cac:	0bd1                	addi	s7,s7,20
    5cae:	0000                	unimp
    5cb0:	3508                	fld	fa0,40(a0)
    5cb2:	0008                	0x8
    5cb4:	0e3e                	slli	t3,t3,0xf
    5cb6:	0000                	unimp
    5cb8:	0004                	0x4
    5cba:	10c9                	addi	ra,ra,-14
    5cbc:	0000                	unimp
    5cbe:	0104                	addi	s1,sp,128
    5cc0:	0686                	slli	a3,a3,0x1
    5cc2:	0000                	unimp
    5cc4:	2f0c                	fld	fa1,24(a4)
    5cc6:	000c                	0xc
    5cc8:	5b00                	lw	s0,48(a4)
    5cca:	0002                	c.slli64	zero
    5ccc:	7000                	flw	fs0,32(s0)
    5cce:	0008                	0x8
    5cd0:	0000                	unimp
    5cd2:	0000                	unimp
    5cd4:	a600                	fsd	fs0,8(a2)
    5cd6:	005a                	c.slli	zero,0x16
    5cd8:	0200                	addi	s0,sp,256
    5cda:	0601                	addi	a2,a2,0
    5cdc:	05c6                	slli	a1,a1,0x11
    5cde:	0000                	unimp
    5ce0:	0102                	c.slli64	sp
    5ce2:	c408                	sw	a0,8(s0)
    5ce4:	0005                	c.nop	1
    5ce6:	0200                	addi	s0,sp,256
    5ce8:	0502                	c.slli64	a0
    5cea:	047a                	slli	s0,s0,0x1e
    5cec:	0000                	unimp
    5cee:	0202                	c.slli64	tp
    5cf0:	00070c07          	0x70c07
    5cf4:	0200                	addi	s0,sp,256
    5cf6:	0504                	addi	s1,sp,640
    5cf8:	0388                	addi	a0,sp,448
    5cfa:	0000                	unimp
    5cfc:	0402                	c.slli64	s0
    5cfe:	00019f07          	0x19f07
    5d02:	0200                	addi	s0,sp,256
    5d04:	0508                	addi	a0,sp,640
    5d06:	00000383          	lb	t2,0(zero) # 0 <_start>
    5d0a:	0802                	c.slli64	a6
    5d0c:	00019a07          	0x19a07
    5d10:	0300                	addi	s0,sp,384
    5d12:	0504                	addi	s1,sp,640
    5d14:	6e69                	lui	t3,0x1a
    5d16:	0074                	addi	a3,sp,12
    5d18:	0402                	c.slli64	s0
    5d1a:	0001a407          	flw	fs0,0(gp) # 10013a0 <__global_pointer$>
    5d1e:	0200                	addi	s0,sp,256
    5d20:	0410                	addi	a2,sp,512
    5d22:	043d                	addi	s0,s0,15
    5d24:	0000                	unimp
    5d26:	7f04                	flw	fs1,56(a4)
    5d28:	0005                	c.nop	1
    5d2a:	0200                	addi	s0,sp,256
    5d2c:	0165                	addi	sp,sp,25
    5d2e:	00006417          	auipc	s0,0x6
    5d32:	0500                	addi	s0,sp,640
    5d34:	0735                	addi	a4,a4,13
    5d36:	0000                	unimp
    5d38:	410e2e03          	lw	t3,1040(t3) # 1a410 <_data_lma+0xfdf8>
    5d3c:	0000                	unimp
    5d3e:	0500                	addi	s0,sp,640
    5d40:	00f0                	addi	a2,sp,76
    5d42:	0000                	unimp
    5d44:	410e7403          	0x410e7403
    5d48:	0000                	unimp
    5d4a:	0500                	addi	s0,sp,640
    5d4c:	06fc                	addi	a5,sp,844
    5d4e:	0000                	unimp
    5d50:	5d179303          	lh	t1,1489(a5)
    5d54:	0000                	unimp
    5d56:	0600                	addi	s0,sp,768
    5d58:	0304                	addi	s1,sp,384
    5d5a:	03a5                	addi	t2,t2,9
    5d5c:	00c5                	addi	ra,ra,17
    5d5e:	0000                	unimp
    5d60:	00032607          	flw	fa2,0(t1) # 6466a <_data_lma+0x5a052>
    5d64:	0300                	addi	s0,sp,384
    5d66:	00720ca7          	0x720ca7
    5d6a:	0000                	unimp
    5d6c:	0004dd07          	0x4dd07
    5d70:	0300                	addi	s0,sp,384
    5d72:	13a8                	addi	a0,sp,488
    5d74:	00c5                	addi	ra,ra,17
    5d76:	0000                	unimp
    5d78:	0800                	addi	s0,sp,16
    5d7a:	002c                	addi	a1,sp,8
    5d7c:	0000                	unimp
    5d7e:	00d5                	addi	ra,ra,21
    5d80:	0000                	unimp
    5d82:	6409                	lui	s0,0x2
    5d84:	0000                	unimp
    5d86:	0300                	addi	s0,sp,384
    5d88:	0a00                	addi	s0,sp,272
    5d8a:	0308                	addi	a0,sp,384
    5d8c:	09a2                	slli	s3,s3,0x8
    5d8e:	00f9                	addi	ra,ra,30
    5d90:	0000                	unimp
    5d92:	0001660b          	0x1660b
    5d96:	0300                	addi	s0,sp,384
    5d98:	07a4                	addi	s1,sp,968
    5d9a:	005d                	c.nop	23
    5d9c:	0000                	unimp
    5d9e:	0b00                	addi	s0,sp,400
    5da0:	0296                	slli	t0,t0,0x5
    5da2:	0000                	unimp
    5da4:	a305a903          	lw	s2,-1488(a1)
    5da8:	0000                	unimp
    5daa:	0400                	addi	s0,sp,512
    5dac:	0500                	addi	s0,sp,640
    5dae:	00000407          	0x407
    5db2:	d503aa03          	lw	s4,-688(t2)
    5db6:	0000                	unimp
    5db8:	0c00                	addi	s0,sp,528
    5dba:	0504                	addi	s1,sp,640
    5dbc:	000003bb          	0x3bb
    5dc0:	1604                	addi	s1,sp,800
    5dc2:	4819                	li	a6,6
    5dc4:	0000                	unimp
    5dc6:	0500                	addi	s0,sp,640
    5dc8:	00b0                	addi	a2,sp,72
    5dca:	0000                	unimp
    5dcc:	0c05                	addi	s8,s8,1
    5dce:	5d0d                	li	s10,-29
    5dd0:	0000                	unimp
    5dd2:	0500                	addi	s0,sp,640
    5dd4:	030e                	slli	t1,t1,0x3
    5dd6:	0000                	unimp
    5dd8:	2304                	fld	fs1,0(a4)
    5dda:	0001131b          	0x1131b
    5dde:	0d00                	addi	s0,sp,656
    5de0:	012a                	slli	sp,sp,0xa
    5de2:	0000                	unimp
    5de4:	0418                	addi	a4,sp,512
    5de6:	0834                	addi	a3,sp,24
    5de8:	0185                	addi	gp,gp,1
    5dea:	0000                	unimp
    5dec:	00079f0b          	0x79f0b
    5df0:	0400                	addi	s0,sp,512
    5df2:	1336                	slli	t1,t1,0x2d
    5df4:	0185                	addi	gp,gp,1
    5df6:	0000                	unimp
    5df8:	0e00                	addi	s0,sp,784
    5dfa:	6b5f 0400 0737      	0x73704006b5f
    5e00:	005d                	c.nop	23
    5e02:	0000                	unimp
    5e04:	0b04                	addi	s1,sp,400
    5e06:	0542                	slli	a0,a0,0x10
    5e08:	0000                	unimp
    5e0a:	3704                	fld	fs1,40(a4)
    5e0c:	00005d0b          	0x5d0b
    5e10:	0800                	addi	s0,sp,16
    5e12:	0004ba0b          	0x4ba0b
    5e16:	0400                	addi	s0,sp,512
    5e18:	005d1437          	lui	s0,0x5d1
    5e1c:	0000                	unimp
    5e1e:	0b0c                	addi	a1,sp,400
    5e20:	01c6                	slli	gp,gp,0x11
    5e22:	0000                	unimp
    5e24:	3704                	fld	fs1,40(a4)
    5e26:	00005d1b          	0x5d1b
    5e2a:	1000                	addi	s0,sp,32
    5e2c:	5f0e                	lw	t5,224(sp)
    5e2e:	0078                	addi	a4,sp,12
    5e30:	3804                	fld	fs1,48(s0)
    5e32:	00018b0b          	0x18b0b
    5e36:	1400                	addi	s0,sp,544
    5e38:	0f00                	addi	s0,sp,912
    5e3a:	2b04                	fld	fs1,16(a4)
    5e3c:	0001                	nop
    5e3e:	0800                	addi	s0,sp,16
    5e40:	00000107          	0x107
    5e44:	0000019b          	0x19b
    5e48:	6409                	lui	s0,0x2
    5e4a:	0000                	unimp
    5e4c:	0000                	unimp
    5e4e:	0d00                	addi	s0,sp,656
    5e50:	056d                	addi	a0,a0,27
    5e52:	0000                	unimp
    5e54:	0424                	addi	s1,sp,520
    5e56:	083c                	addi	a5,sp,24
    5e58:	021e                	slli	tp,tp,0x7
    5e5a:	0000                	unimp
    5e5c:	00022d0b          	0x22d0b
    5e60:	0400                	addi	s0,sp,512
    5e62:	093e                	slli	s2,s2,0xf
    5e64:	005d                	c.nop	23
    5e66:	0000                	unimp
    5e68:	0b00                	addi	s0,sp,400
    5e6a:	0178                	addi	a4,sp,140
    5e6c:	0000                	unimp
    5e6e:	3f04                	fld	fs1,56(a4)
    5e70:	5d09                	li	s10,-30
    5e72:	0000                	unimp
    5e74:	0400                	addi	s0,sp,512
    5e76:	0001560b          	0x1560b
    5e7a:	0400                	addi	s0,sp,512
    5e7c:	0940                	addi	s0,sp,148
    5e7e:	005d                	c.nop	23
    5e80:	0000                	unimp
    5e82:	0b08                	addi	a0,sp,400
    5e84:	02c6                	slli	t0,t0,0x11
    5e86:	0000                	unimp
    5e88:	4104                	lw	s1,0(a0)
    5e8a:	5d09                	li	s10,-30
    5e8c:	0000                	unimp
    5e8e:	0c00                	addi	s0,sp,528
    5e90:	0004340b          	0x4340b
    5e94:	0400                	addi	s0,sp,512
    5e96:	0942                	slli	s2,s2,0x10
    5e98:	005d                	c.nop	23
    5e9a:	0000                	unimp
    5e9c:	0b10                	addi	a2,sp,400
    5e9e:	000004f7          	0x4f7
    5ea2:	4304                	lw	s1,0(a4)
    5ea4:	5d09                	li	s10,-30
    5ea6:	0000                	unimp
    5ea8:	1400                	addi	s0,sp,544
    5eaa:	0001320b          	0x1320b
    5eae:	0400                	addi	s0,sp,512
    5eb0:	0944                	addi	s1,sp,148
    5eb2:	005d                	c.nop	23
    5eb4:	0000                	unimp
    5eb6:	0b18                	addi	a4,sp,400
    5eb8:	0236                	slli	tp,tp,0xd
    5eba:	0000                	unimp
    5ebc:	4504                	lw	s1,8(a0)
    5ebe:	5d09                	li	s10,-30
    5ec0:	0000                	unimp
    5ec2:	1c00                	addi	s0,sp,560
    5ec4:	00041a0b          	0x41a0b
    5ec8:	0400                	addi	s0,sp,512
    5eca:	0946                	slli	s2,s2,0x11
    5ecc:	005d                	c.nop	23
    5ece:	0000                	unimp
    5ed0:	0020                	addi	s0,sp,8
    5ed2:	2910                	fld	fa2,16(a0)
    5ed4:	0000                	unimp
    5ed6:	0800                	addi	s0,sp,16
    5ed8:	0401                	addi	s0,s0,0
    5eda:	0263084f          	fnmadd.d	fa6,ft6,ft6,ft0,rne
    5ede:	0000                	unimp
    5ee0:	0004120b          	0x4120b
    5ee4:	0400                	addi	s0,sp,512
    5ee6:	0a50                	addi	a2,sp,276
    5ee8:	00000263          	beqz	zero,5eec <_dtoa_r+0x82c>
    5eec:	0b00                	addi	s0,sp,400
    5eee:	05a9                	addi	a1,a1,10
    5ef0:	0000                	unimp
    5ef2:	5104                	lw	s1,32(a0)
    5ef4:	6309                	lui	t1,0x2
    5ef6:	0002                	c.slli64	zero
    5ef8:	8000                	0x8000
    5efa:	2611                	jal	61fe <_dtoa_r+0xb3e>
    5efc:	04000007          	0x4000007
    5f00:	01070a53          	fadd.s	fs4,fa4,fa6,rne
    5f04:	0000                	unimp
    5f06:	0100                	addi	s0,sp,128
    5f08:	8411                	srai	s0,s0,0x4
    5f0a:	04000007          	0x4000007
    5f0e:	0a56                	slli	s4,s4,0x15
    5f10:	00000107          	0x107
    5f14:	0104                	addi	s1,sp,128
    5f16:	0800                	addi	s0,sp,16
    5f18:	0105                	addi	sp,sp,1
    5f1a:	0000                	unimp
    5f1c:	00000273          	0x273
    5f20:	6409                	lui	s0,0x2
    5f22:	0000                	unimp
    5f24:	1f00                	addi	s0,sp,944
    5f26:	1000                	addi	s0,sp,32
    5f28:	0460                	addi	s0,sp,524
    5f2a:	0000                	unimp
    5f2c:	0190                	addi	a2,sp,192
    5f2e:	6204                	flw	fs1,0(a2)
    5f30:	b608                	fsd	fa0,40(a2)
    5f32:	0002                	c.slli64	zero
    5f34:	0b00                	addi	s0,sp,400
    5f36:	079f 0000 6304      	0x63040000079f
    5f3c:	b612                	fsd	ft4,296(sp)
    5f3e:	0002                	c.slli64	zero
    5f40:	0000                	unimp
    5f42:	0002450b          	0x2450b
    5f46:	0400                	addi	s0,sp,512
    5f48:	0664                	addi	s1,sp,780
    5f4a:	005d                	c.nop	23
    5f4c:	0000                	unimp
    5f4e:	0b04                	addi	s1,sp,400
    5f50:	0109                	addi	sp,sp,2
    5f52:	0000                	unimp
    5f54:	6604                	flw	fs1,8(a2)
    5f56:	bc09                	j	5968 <_dtoa_r+0x2a8>
    5f58:	0002                	c.slli64	zero
    5f5a:	0800                	addi	s0,sp,16
    5f5c:	0000290b          	0x290b
    5f60:	0400                	addi	s0,sp,512
    5f62:	021e1e67          	0x21e1e67
    5f66:	0000                	unimp
    5f68:	0088                	addi	a0,sp,64
    5f6a:	0273040f          	0x273040f
    5f6e:	0000                	unimp
    5f70:	cc08                	sw	a0,24(s0)
    5f72:	0002                	c.slli64	zero
    5f74:	cc00                	sw	s0,24(s0)
    5f76:	0002                	c.slli64	zero
    5f78:	0900                	addi	s0,sp,144
    5f7a:	0064                	addi	s1,sp,12
    5f7c:	0000                	unimp
    5f7e:	001f 040f 02d2      	0x2d2040f001f
    5f84:	0000                	unimp
    5f86:	0d12                	slli	s10,s10,0x4
    5f88:	0636                	slli	a2,a2,0xd
    5f8a:	0000                	unimp
    5f8c:	0408                	addi	a0,sp,512
    5f8e:	087a                	slli	a6,a6,0x1e
    5f90:	000002fb          	0x2fb
    5f94:	0003a50b          	0x3a50b
    5f98:	0400                	addi	s0,sp,512
    5f9a:	02fb117b          	0x2fb117b
    5f9e:	0000                	unimp
    5fa0:	0b00                	addi	s0,sp,400
    5fa2:	0000072f          	0x72f
    5fa6:	7c04                	flw	fs1,56(s0)
    5fa8:	5d06                	lw	s10,96(sp)
    5faa:	0000                	unimp
    5fac:	0400                	addi	s0,sp,512
    5fae:	0f00                	addi	s0,sp,912
    5fb0:	2c04                	fld	fs1,24(s0)
    5fb2:	0000                	unimp
    5fb4:	0d00                	addi	s0,sp,656
    5fb6:	01be                	slli	gp,gp,0xf
    5fb8:	0000                	unimp
    5fba:	0468                	addi	a0,sp,524
    5fbc:	08ba                	slli	a7,a7,0xe
    5fbe:	0444                	addi	s1,sp,516
    5fc0:	0000                	unimp
    5fc2:	5f0e                	lw	t5,224(sp)
    5fc4:	0070                	addi	a2,sp,12
    5fc6:	bb04                	fsd	fs1,48(a4)
    5fc8:	fb12                	fsw	ft4,180(sp)
    5fca:	0002                	c.slli64	zero
    5fcc:	0000                	unimp
    5fce:	5f0e                	lw	t5,224(sp)
    5fd0:	0072                	c.slli	zero,0x1c
    5fd2:	bc04                	fsd	fs1,56(s0)
    5fd4:	00005d07          	0x5d07
    5fd8:	0400                	addi	s0,sp,512
    5fda:	5f0e                	lw	t5,224(sp)
    5fdc:	bd040077          	0xbd040077
    5fe0:	00005d07          	0x5d07
    5fe4:	0800                	addi	s0,sp,16
    5fe6:	00007f0b          	0x7f0b
    5fea:	0400                	addi	s0,sp,512
    5fec:	09be                	slli	s3,s3,0xf
    5fee:	00000033          	add	zero,zero,zero
    5ff2:	0b0c                	addi	a1,sp,400
    5ff4:	03d9                	addi	t2,t2,22
    5ff6:	0000                	unimp
    5ff8:	bf04                	fsd	fs1,56(a4)
    5ffa:	3309                	jal	5cfc <_dtoa_r+0x63c>
    5ffc:	0000                	unimp
    5ffe:	0e00                	addi	s0,sp,784
    6000:	5f0e                	lw	t5,224(sp)
    6002:	6662                	flw	fa2,24(sp)
    6004:	0400                	addi	s0,sp,512
    6006:	11c0                	addi	s0,sp,228
    6008:	000002d3          	fadd.s	ft5,ft0,ft0,rne
    600c:	0b10                	addi	a2,sp,400
    600e:	0076                	c.slli	zero,0x1d
    6010:	0000                	unimp
    6012:	c104                	sw	s1,0(a0)
    6014:	00005d07          	0x5d07
    6018:	1800                	addi	s0,sp,48
    601a:	0001140b          	0x1140b
    601e:	0400                	addi	s0,sp,512
    6020:	0ac8                	addi	a0,sp,340
    6022:	0105                	addi	sp,sp,1
    6024:	0000                	unimp
    6026:	0b1c                	addi	a5,sp,400
    6028:	00c2                	slli	ra,ra,0x10
    602a:	0000                	unimp
    602c:	ca04                	sw	s1,16(a2)
    602e:	c81d                	beqz	s0,6064 <_dtoa_r+0x9a4>
    6030:	0005                	c.nop	1
    6032:	2000                	fld	fs0,0(s0)
    6034:	0004490b          	0x4490b
    6038:	0400                	addi	s0,sp,512
    603a:	1dcc                	addi	a1,sp,756
    603c:	05f2                	slli	a1,a1,0x1c
    603e:	0000                	unimp
    6040:	0b24                	addi	s1,sp,408
    6042:	07b0                	addi	a2,sp,968
    6044:	0000                	unimp
    6046:	cf04                	sw	s1,24(a4)
    6048:	160d                	addi	a2,a2,-29
    604a:	0006                	c.slli	zero,0x1
    604c:	2800                	fld	fs0,16(s0)
    604e:	0003320b          	0x3320b
    6052:	0400                	addi	s0,sp,512
    6054:	09d0                	addi	a2,sp,212
    6056:	0630                	addi	a2,sp,776
    6058:	0000                	unimp
    605a:	0e2c                	addi	a1,sp,792
    605c:	755f 0062 d304      	0xd3040062755f
    6062:	d311                	beqz	a4,5f66 <_dtoa_r+0x8a6>
    6064:	0002                	c.slli64	zero
    6066:	3000                	fld	fs0,32(s0)
    6068:	5f0e                	lw	t5,224(sp)
    606a:	7075                	c.lui	zero,0xffffd
    606c:	0400                	addi	s0,sp,512
    606e:	12d4                	addi	a3,sp,356
    6070:	000002fb          	0x2fb
    6074:	0e38                	addi	a4,sp,792
    6076:	755f 0072 d504      	0xd5040072755f
    607c:	00005d07          	0x5d07
    6080:	3c00                	fld	fs0,56(s0)
    6082:	0007e00b          	0x7e00b
    6086:	0400                	addi	s0,sp,512
    6088:	11d8                	addi	a4,sp,228
    608a:	0636                	slli	a2,a2,0xd
    608c:	0000                	unimp
    608e:	0b40                	addi	s0,sp,404
    6090:	073c                	addi	a5,sp,904
    6092:	0000                	unimp
    6094:	d904                	sw	s1,48(a0)
    6096:	4611                	li	a2,4
    6098:	0006                	c.slli	zero,0x1
    609a:	4300                	lw	s0,0(a4)
    609c:	5f0e                	lw	t5,224(sp)
    609e:	626c                	flw	fa1,68(a2)
    60a0:	0400                	addi	s0,sp,512
    60a2:	11dc                	addi	a5,sp,228
    60a4:	000002d3          	fadd.s	ft5,ft0,ft0,rne
    60a8:	0b44                	addi	s1,sp,404
    60aa:	0564                	addi	s1,sp,652
    60ac:	0000                	unimp
    60ae:	df04                	sw	s1,56(a4)
    60b0:	00005d07          	0x5d07
    60b4:	4c00                	lw	s0,24(s0)
    60b6:	0001ff0b          	0x1ff0b
    60ba:	0400                	addi	s0,sp,512
    60bc:	0ae0                	addi	s0,sp,348
    60be:	007f                	0x7f
    60c0:	0000                	unimp
    60c2:	0b50                	addi	a2,sp,404
    60c4:	0172                	slli	sp,sp,0x1c
    60c6:	0000                	unimp
    60c8:	e304                	fsw	fs1,0(a4)
    60ca:	6212                	flw	ft4,4(sp)
    60cc:	0004                	0x4
    60ce:	5400                	lw	s0,40(s0)
    60d0:	0005720b          	0x5720b
    60d4:	0400                	addi	s0,sp,512
    60d6:	011f0ce7          	jalr	s9,17(t5) # fffe5011 <__freertos_irq_stack_top+0xfefd5011>
    60da:	0000                	unimp
    60dc:	0b58                	addi	a4,sp,404
    60de:	0468                	addi	a0,sp,524
    60e0:	0000                	unimp
    60e2:	e904                	fsw	fs1,16(a0)
    60e4:	f90e                	fsw	ft3,176(sp)
    60e6:	0000                	unimp
    60e8:	5c00                	lw	s0,56(s0)
    60ea:	00077c0b          	0x77c0b
    60ee:	0400                	addi	s0,sp,512
    60f0:	09ea                	slli	s3,s3,0x1a
    60f2:	005d                	c.nop	23
    60f4:	0000                	unimp
    60f6:	0064                	addi	s1,sp,12
    60f8:	00009713          	slli	a4,ra,0x0
    60fc:	6200                	flw	fs0,0(a2)
    60fe:	0004                	0x4
    6100:	1400                	addi	s0,sp,544
    6102:	0462                	slli	s0,s0,0x18
    6104:	0000                	unimp
    6106:	0514                	addi	a3,sp,640
    6108:	0001                	nop
    610a:	1400                	addi	s0,sp,544
    610c:	05b6                	slli	a1,a1,0xd
    610e:	0000                	unimp
    6110:	5d14                	lw	a3,56(a0)
    6112:	0000                	unimp
    6114:	0000                	unimp
    6116:	046d040f          	0x46d040f
    611a:	0000                	unimp
    611c:	6215                	lui	tp,0x5
    611e:	0004                	0x4
    6120:	1600                	addi	s0,sp,800
    6122:	0705                	addi	a4,a4,1
    6124:	0000                	unimp
    6126:	0428                	addi	a0,sp,520
    6128:	6504                	flw	fs1,8(a0)
    612a:	0802                	c.slli64	a6
    612c:	05b6                	slli	a1,a1,0xd
    612e:	0000                	unimp
    6130:	00042d17          	auipc	s10,0x42
    6134:	0400                	addi	s0,sp,512
    6136:	5d070267          	jalr	tp,1488(a4)
    613a:	0000                	unimp
    613c:	0000                	unimp
    613e:	00036617          	auipc	a2,0x36
    6142:	0400                	addi	s0,sp,512
    6144:	026c                	addi	a1,sp,268
    6146:	0006a20b          	0x6a20b
    614a:	0400                	addi	s0,sp,512
    614c:	0000e817          	auipc	a6,0xe
    6150:	0400                	addi	s0,sp,512
    6152:	026c                	addi	a1,sp,268
    6154:	a214                	fsd	fa3,0(a2)
    6156:	0006                	c.slli	zero,0x1
    6158:	0800                	addi	s0,sp,16
    615a:	0007cf17          	auipc	t5,0x7c
    615e:	0400                	addi	s0,sp,512
    6160:	026c                	addi	a1,sp,268
    6162:	a21e                	fsd	ft7,256(sp)
    6164:	0006                	c.slli	zero,0x1
    6166:	0c00                	addi	s0,sp,528
    6168:	00024017          	auipc	zero,0x24
    616c:	0400                	addi	s0,sp,512
    616e:	026e                	slli	tp,tp,0x1b
    6170:	5d08                	lw	a0,56(a0)
    6172:	0000                	unimp
    6174:	1000                	addi	s0,sp,32
    6176:	00020717          	auipc	a4,0x20
    617a:	0400                	addi	s0,sp,512
    617c:	a208026f          	jal	tp,fff8639c <__freertos_irq_stack_top+0xfef7639c>
    6180:	0008                	0x8
    6182:	1400                	addi	s0,sp,544
    6184:	00076317          	auipc	t1,0x76
    6188:	0400                	addi	s0,sp,512
    618a:	0272                	slli	tp,tp,0x1c
    618c:	00005d07          	0x5d07
    6190:	3000                	fld	fs0,32(s0)
    6192:	0006f417          	auipc	s0,0x6f
    6196:	0400                	addi	s0,sp,512
    6198:	b7160273          	0xb7160273
    619c:	0008                	0x8
    619e:	3400                	fld	fs0,40(s0)
    61a0:	00033f17          	auipc	t5,0x33
    61a4:	0400                	addi	s0,sp,512
    61a6:	0275                	addi	tp,tp,29
    61a8:	00005d07          	0x5d07
    61ac:	3800                	fld	fs0,48(s0)
    61ae:	0003f117          	auipc	sp,0x3f
    61b2:	0400                	addi	s0,sp,512
    61b4:	c80a0277          	0xc80a0277
    61b8:	0008                	0x8
    61ba:	3c00                	fld	fs0,56(s0)
    61bc:	00014e17          	auipc	t3,0x14
    61c0:	0400                	addi	s0,sp,512
    61c2:	027a                	slli	tp,tp,0x1e
    61c4:	00018513          	mv	a0,gp
    61c8:	4000                	lw	s0,0(s0)
    61ca:	00019017          	auipc	zero,0x19
    61ce:	0400                	addi	s0,sp,512
    61d0:	5d07027b          	0x5d07027b
    61d4:	0000                	unimp
    61d6:	4400                	lw	s0,8(s0)
    61d8:	00029e17          	auipc	t3,0x29
    61dc:	0400                	addi	s0,sp,512
    61de:	027c                	addi	a5,sp,268
    61e0:	00018513          	mv	a0,gp
    61e4:	4800                	lw	s0,16(s0)
    61e6:	0003ab17          	auipc	s6,0x3a
    61ea:	0400                	addi	s0,sp,512
    61ec:	027d                	addi	tp,tp,31
    61ee:	ce14                	sw	a3,24(a2)
    61f0:	0008                	0x8
    61f2:	4c00                	lw	s0,24(s0)
    61f4:	00053a17          	auipc	s4,0x53
    61f8:	0400                	addi	s0,sp,512
    61fa:	0280                	addi	s0,sp,320
    61fc:	00005d07          	0x5d07
    6200:	5000                	lw	s0,32(s0)
    6202:	0005bc17          	auipc	s8,0x5b
    6206:	0400                	addi	s0,sp,512
    6208:	0281                	addi	t0,t0,0
    620a:	b609                	j	5d0c <_dtoa_r+0x64c>
    620c:	0005                	c.nop	1
    620e:	5400                	lw	s0,40(s0)
    6210:	0005ee17          	auipc	t3,0x5e
    6214:	0400                	addi	s0,sp,512
    6216:	02a4                	addi	s1,sp,328
    6218:	00087d07          	0x87d07
    621c:	5800                	lw	s0,48(s0)
    621e:	6018                	flw	fa4,0(s0)
    6220:	0004                	0x4
    6222:	0400                	addi	s0,sp,512
    6224:	02a8                	addi	a0,sp,328
    6226:	0002b613          	sltiu	a2,t0,0
    622a:	4800                	lw	s0,16(s0)
    622c:	1801                	addi	a6,a6,-32
    622e:	02e9                	addi	t0,t0,26
    6230:	0000                	unimp
    6232:	a904                	fsd	fs1,16(a0)
    6234:	1202                	slli	tp,tp,0x20
    6236:	00000273          	0x273
    623a:	014c                	addi	a1,sp,132
    623c:	d018                	sw	a4,32(s0)
    623e:	0002                	c.slli64	zero
    6240:	0400                	addi	s0,sp,512
    6242:	02ad                	addi	t0,t0,11
    6244:	df0c                	sw	a1,56(a4)
    6246:	0008                	0x8
    6248:	dc00                	sw	s0,56(s0)
    624a:	1802                	slli	a6,a6,0x20
    624c:	00000663          	beqz	zero,6258 <_dtoa_r+0xb98>
    6250:	b204                	fsd	fs1,32(a2)
    6252:	1002                	c.slli	zero,0x20
    6254:	00000663          	beqz	zero,6260 <_dtoa_r+0xba0>
    6258:	02e0                	addi	s0,sp,332
    625a:	b518                	fsd	fa4,40(a0)
    625c:	0004                	0x4
    625e:	0400                	addi	s0,sp,512
    6260:	02b4                	addi	a3,sp,328
    6262:	eb0a                	fsw	ft2,148(sp)
    6264:	0008                	0x8
    6266:	ec00                	fsw	fs0,24(s0)
    6268:	0002                	c.slli64	zero
    626a:	05bc040f          	0x5bc040f
    626e:	0000                	unimp
    6270:	0102                	c.slli64	sp
    6272:	cd08                	sw	a0,24(a0)
    6274:	0005                	c.nop	1
    6276:	1500                	addi	s0,sp,672
    6278:	05bc                	addi	a5,sp,712
    627a:	0000                	unimp
    627c:	0444040f          	0x444040f
    6280:	0000                	unimp
    6282:	00009713          	slli	a4,ra,0x0
    6286:	ec00                	fsw	fs0,24(s0)
    6288:	0005                	c.nop	1
    628a:	1400                	addi	s0,sp,544
    628c:	0462                	slli	s0,s0,0x18
    628e:	0000                	unimp
    6290:	0514                	addi	a3,sp,640
    6292:	0001                	nop
    6294:	1400                	addi	s0,sp,544
    6296:	05ec                	addi	a1,sp,716
    6298:	0000                	unimp
    629a:	5d14                	lw	a3,56(a0)
    629c:	0000                	unimp
    629e:	0000                	unimp
    62a0:	05c3040f          	0x5c3040f
    62a4:	0000                	unimp
    62a6:	05ce040f          	0x5ce040f
    62aa:	0000                	unimp
    62ac:	00008b13          	mv	s6,ra
    62b0:	1600                	addi	s0,sp,800
    62b2:	0006                	c.slli	zero,0x1
    62b4:	1400                	addi	s0,sp,544
    62b6:	0462                	slli	s0,s0,0x18
    62b8:	0000                	unimp
    62ba:	0514                	addi	a3,sp,640
    62bc:	0001                	nop
    62be:	1400                	addi	s0,sp,544
    62c0:	0000008b          	0x8b
    62c4:	5d14                	lw	a3,56(a0)
    62c6:	0000                	unimp
    62c8:	0000                	unimp
    62ca:	05f8040f          	0x5f8040f
    62ce:	0000                	unimp
    62d0:	00005d13          	srli	s10,zero,0x0
    62d4:	3000                	fld	fs0,32(s0)
    62d6:	0006                	c.slli	zero,0x1
    62d8:	1400                	addi	s0,sp,544
    62da:	0462                	slli	s0,s0,0x18
    62dc:	0000                	unimp
    62de:	0514                	addi	a3,sp,640
    62e0:	0001                	nop
    62e2:	0000                	unimp
    62e4:	061c040f          	0x61c040f
    62e8:	0000                	unimp
    62ea:	2c08                	fld	fa0,24(s0)
    62ec:	0000                	unimp
    62ee:	4600                	lw	s0,8(a2)
    62f0:	0006                	c.slli	zero,0x1
    62f2:	0900                	addi	s0,sp,144
    62f4:	0064                	addi	s1,sp,12
    62f6:	0000                	unimp
    62f8:	0002                	c.slli64	zero
    62fa:	2c08                	fld	fa0,24(s0)
    62fc:	0000                	unimp
    62fe:	5600                	lw	s0,40(a2)
    6300:	0006                	c.slli	zero,0x1
    6302:	0900                	addi	s0,sp,144
    6304:	0064                	addi	s1,sp,12
    6306:	0000                	unimp
    6308:	0000                	unimp
    630a:	f804                	fsw	fs1,48(s0)
    630c:	0001                	nop
    630e:	0400                	addi	s0,sp,512
    6310:	0124                	addi	s1,sp,136
    6312:	011a                	slli	sp,sp,0x6
    6314:	19000003          	lb	zero,400(zero) # 190 <main+0x118>
    6318:	0648                	addi	a0,sp,772
    631a:	0000                	unimp
    631c:	040c                	addi	a1,sp,512
    631e:	0128                	addi	a0,sp,136
    6320:	9c08                	0x9c08
    6322:	0006                	c.slli	zero,0x1
    6324:	1700                	addi	s0,sp,928
    6326:	079f 0000 2a04      	0x2a040000079f
    632c:	1101                	addi	sp,sp,-32
    632e:	069c                	addi	a5,sp,832
    6330:	0000                	unimp
    6332:	1700                	addi	s0,sp,928
    6334:	0578                	addi	a4,sp,652
    6336:	0000                	unimp
    6338:	2b04                	fld	fs1,16(a4)
    633a:	0701                	addi	a4,a4,0
    633c:	005d                	c.nop	23
    633e:	0000                	unimp
    6340:	1704                	addi	s1,sp,928
    6342:	032c                	addi	a1,sp,392
    6344:	0000                	unimp
    6346:	2c04                	fld	fs1,24(s0)
    6348:	0b01                	addi	s6,s6,0
    634a:	06a2                	slli	a3,a3,0x8
    634c:	0000                	unimp
    634e:	0008                	0x8
    6350:	0663040f          	0x663040f
    6354:	0000                	unimp
    6356:	0656040f          	0x656040f
    635a:	0000                	unimp
    635c:	8819                	andi	s0,s0,6
    635e:	0001                	nop
    6360:	0e00                	addi	s0,sp,784
    6362:	4404                	lw	s1,8(s0)
    6364:	0801                	addi	a6,a6,0
    6366:	06e1                	addi	a3,a3,24
    6368:	0000                	unimp
    636a:	00079417          	auipc	s0,0x79
    636e:	0400                	addi	s0,sp,512
    6370:	0145                	addi	sp,sp,17
    6372:	e112                	fsw	ft4,128(sp)
    6374:	0006                	c.slli	zero,0x1
    6376:	0000                	unimp
    6378:	0003b517          	auipc	a0,0x3b
    637c:	0400                	addi	s0,sp,512
    637e:	0146                	slli	sp,sp,0x11
    6380:	e112                	fsw	ft4,128(sp)
    6382:	0006                	c.slli	zero,0x1
    6384:	0600                	addi	s0,sp,768
    6386:	00061217          	auipc	tp,0x61
    638a:	0400                	addi	s0,sp,512
    638c:	3a120147          	fmsub.d	ft2,ft4,ft1,ft7,rne
    6390:	0000                	unimp
    6392:	0c00                	addi	s0,sp,528
    6394:	0800                	addi	s0,sp,16
    6396:	003a                	c.slli	zero,0xe
    6398:	0000                	unimp
    639a:	06f1                	addi	a3,a3,28
    639c:	0000                	unimp
    639e:	6409                	lui	s0,0x2
    63a0:	0000                	unimp
    63a2:	0200                	addi	s0,sp,256
    63a4:	1a00                	addi	s0,sp,304
    63a6:	04d0                	addi	a2,sp,580
    63a8:	0285                	addi	t0,t0,1
    63aa:	00080607          	0x80607
    63ae:	1700                	addi	s0,sp,928
    63b0:	0742                	slli	a4,a4,0x10
    63b2:	0000                	unimp
    63b4:	8704                	0x8704
    63b6:	1802                	slli	a6,a6,0x20
    63b8:	0064                	addi	s1,sp,12
    63ba:	0000                	unimp
    63bc:	1700                	addi	s0,sp,928
    63be:	0000066b          	0x66b
    63c2:	8804                	0x8804
    63c4:	1202                	slli	tp,tp,0x20
    63c6:	05b6                	slli	a1,a1,0xd
    63c8:	0000                	unimp
    63ca:	1704                	addi	s1,sp,928
    63cc:	01b1                	addi	gp,gp,12
    63ce:	0000                	unimp
    63d0:	8904                	0x8904
    63d2:	1002                	c.slli	zero,0x20
    63d4:	0806                	slli	a6,a6,0x1
    63d6:	0000                	unimp
    63d8:	1708                	addi	a0,sp,928
    63da:	050e                	slli	a0,a0,0x3
    63dc:	0000                	unimp
    63de:	8a04                	0x8a04
    63e0:	1702                	slli	a4,a4,0x20
    63e2:	0000019b          	0x19b
    63e6:	1724                	addi	s1,sp,936
    63e8:	036d                	addi	t1,t1,27
    63ea:	0000                	unimp
    63ec:	8b04                	0x8b04
    63ee:	0f02                	c.slli64	t5
    63f0:	005d                	c.nop	23
    63f2:	0000                	unimp
    63f4:	1748                	addi	a0,sp,932
    63f6:	079a                	slli	a5,a5,0x6
    63f8:	0000                	unimp
    63fa:	8c04                	0x8c04
    63fc:	2c02                	fld	fs8,0(sp)
    63fe:	0056                	c.slli	zero,0x15
    6400:	0000                	unimp
    6402:	1750                	addi	a2,sp,932
    6404:	005e                	c.slli	zero,0x17
    6406:	0000                	unimp
    6408:	8d04                	0x8d04
    640a:	1a02                	slli	s4,s4,0x20
    640c:	06a8                	addi	a0,sp,840
    640e:	0000                	unimp
    6410:	1758                	addi	a4,sp,932
    6412:	02b9                	addi	t0,t0,14
    6414:	0000                	unimp
    6416:	8e04                	0x8e04
    6418:	1602                	slli	a2,a2,0x20
    641a:	00f9                	addi	ra,ra,30
    641c:	0000                	unimp
    641e:	1768                	addi	a0,sp,940
    6420:	0678                	addi	a4,sp,780
    6422:	0000                	unimp
    6424:	8f04                	0x8f04
    6426:	1602                	slli	a2,a2,0x20
    6428:	00f9                	addi	ra,ra,30
    642a:	0000                	unimp
    642c:	1770                	addi	a2,sp,940
    642e:	0041                	c.nop	16
    6430:	0000                	unimp
    6432:	9004                	0x9004
    6434:	1602                	slli	a2,a2,0x20
    6436:	00f9                	addi	ra,ra,30
    6438:	0000                	unimp
    643a:	1778                	addi	a4,sp,940
    643c:	054a                	slli	a0,a0,0x12
    643e:	0000                	unimp
    6440:	9104                	0x9104
    6442:	1002                	c.slli	zero,0x20
    6444:	0816                	slli	a6,a6,0x5
    6446:	0000                	unimp
    6448:	1780                	addi	s0,sp,992
    644a:	00000063          	beqz	zero,644a <_dtoa_r+0xd8a>
    644e:	9204                	0x9204
    6450:	1002                	c.slli	zero,0x20
    6452:	0826                	slli	a6,a6,0x9
    6454:	0000                	unimp
    6456:	1788                	addi	a0,sp,992
    6458:	000005f3          	0x5f3
    645c:	9304                	0x9304
    645e:	0f02                	c.slli64	t5
    6460:	005d                	c.nop	23
    6462:	0000                	unimp
    6464:	17a0                	addi	s0,sp,1000
    6466:	00c8                	addi	a0,sp,68
    6468:	0000                	unimp
    646a:	9404                	0x9404
    646c:	1602                	slli	a2,a2,0x20
    646e:	00f9                	addi	ra,ra,30
    6470:	0000                	unimp
    6472:	17a4                	addi	s1,sp,1000
    6474:	02da                	slli	t0,t0,0x16
    6476:	0000                	unimp
    6478:	9504                	0x9504
    647a:	1602                	slli	a2,a2,0x20
    647c:	00f9                	addi	ra,ra,30
    647e:	0000                	unimp
    6480:	17ac                	addi	a1,sp,1000
    6482:	024a                	slli	tp,tp,0x12
    6484:	0000                	unimp
    6486:	9604                	0x9604
    6488:	1602                	slli	a2,a2,0x20
    648a:	00f9                	addi	ra,ra,30
    648c:	0000                	unimp
    648e:	17b4                	addi	a3,sp,1000
    6490:	03ca                	slli	t2,t2,0x12
    6492:	0000                	unimp
    6494:	9704                	0x9704
    6496:	1602                	slli	a2,a2,0x20
    6498:	00f9                	addi	ra,ra,30
    649a:	0000                	unimp
    649c:	17bc                	addi	a5,sp,1000
    649e:	02a8                	addi	a0,sp,328
    64a0:	0000                	unimp
    64a2:	9804                	0x9804
    64a4:	1602                	slli	a2,a2,0x20
    64a6:	00f9                	addi	ra,ra,30
    64a8:	0000                	unimp
    64aa:	17c4                	addi	s1,sp,996
    64ac:	0000042b          	0x42b
    64b0:	9904                	0x9904
    64b2:	0802                	c.slli64	a6
    64b4:	005d                	c.nop	23
    64b6:	0000                	unimp
    64b8:	00cc                	addi	a1,sp,68
    64ba:	bc08                	fsd	fa0,56(s0)
    64bc:	0005                	c.nop	1
    64be:	1600                	addi	s0,sp,800
    64c0:	0008                	0x8
    64c2:	0900                	addi	s0,sp,144
    64c4:	0064                	addi	s1,sp,12
    64c6:	0000                	unimp
    64c8:	0019                	c.nop	6
    64ca:	bc08                	fsd	fa0,56(s0)
    64cc:	0005                	c.nop	1
    64ce:	2600                	fld	fs0,8(a2)
    64d0:	0008                	0x8
    64d2:	0900                	addi	s0,sp,144
    64d4:	0064                	addi	s1,sp,12
    64d6:	0000                	unimp
    64d8:	bc080007          	0xbc080007
    64dc:	0005                	c.nop	1
    64de:	3600                	fld	fs0,40(a2)
    64e0:	0008                	0x8
    64e2:	0900                	addi	s0,sp,144
    64e4:	0064                	addi	s1,sp,12
    64e6:	0000                	unimp
    64e8:	f01a0017          	auipc	zero,0xf01a0
    64ec:	9e04                	0x9e04
    64ee:	0702                	c.slli64	a4
    64f0:	085d                	addi	a6,a6,23
    64f2:	0000                	unimp
    64f4:	00018117          	auipc	sp,0x18
    64f8:	0400                	addi	s0,sp,512
    64fa:	02a1                	addi	t0,t0,8
    64fc:	00085d1b          	0x85d1b
    6500:	0000                	unimp
    6502:	0007d717          	auipc	a4,0x7d
    6506:	0400                	addi	s0,sp,512
    6508:	02a2                	slli	t0,t0,0x8
    650a:	6d18                	flw	fa4,24(a0)
    650c:	0008                	0x8
    650e:	7800                	flw	fs0,48(s0)
    6510:	0800                	addi	s0,sp,16
    6512:	000002fb          	0x2fb
    6516:	086d                	addi	a6,a6,27
    6518:	0000                	unimp
    651a:	6409                	lui	s0,0x2
    651c:	0000                	unimp
    651e:	1d00                	addi	s0,sp,688
    6520:	0800                	addi	s0,sp,16
    6522:	0064                	addi	s1,sp,12
    6524:	0000                	unimp
    6526:	087d                	addi	a6,a6,31
    6528:	0000                	unimp
    652a:	6409                	lui	s0,0x2
    652c:	0000                	unimp
    652e:	1d00                	addi	s0,sp,688
    6530:	1b00                	addi	s0,sp,432
    6532:	04f0                	addi	a2,sp,588
    6534:	a2030283          	lb	t0,-1504(t1) # 7bba4 <_data_lma+0x7158c>
    6538:	0008                	0x8
    653a:	1c00                	addi	s0,sp,560
    653c:	0705                	addi	a4,a4,1
    653e:	0000                	unimp
    6540:	9a04                	0x9a04
    6542:	0b02                	c.slli64	s6
    6544:	06f1                	addi	a3,a3,28
    6546:	0000                	unimp
    6548:	1d1c                	addi	a5,sp,688
    654a:	0005                	c.nop	1
    654c:	0400                	addi	s0,sp,512
    654e:	360b02a3          	sb	zero,869(s6) # 4054b <_data_lma+0x35f33>
    6552:	0008                	0x8
    6554:	0000                	unimp
    6556:	bc08                	fsd	fa0,56(s0)
    6558:	0005                	c.nop	1
    655a:	b200                	fsd	fs0,32(a2)
    655c:	0008                	0x8
    655e:	0900                	addi	s0,sp,144
    6560:	0064                	addi	s1,sp,12
    6562:	0000                	unimp
    6564:	0018                	0x18
    6566:	a51d                	j	6b8c <__sflush_r+0x17c>
    6568:	0f000007          	0xf000007
    656c:	b204                	fsd	fs1,32(a2)
    656e:	0008                	0x8
    6570:	1e00                	addi	s0,sp,816
    6572:	08c8                	addi	a0,sp,84
    6574:	0000                	unimp
    6576:	6214                	flw	fa3,0(a2)
    6578:	0004                	0x4
    657a:	0000                	unimp
    657c:	08bd040f          	0x8bd040f
    6580:	0000                	unimp
    6582:	0185040f          	0x185040f
    6586:	0000                	unimp
    6588:	df1e                	sw	t2,188(sp)
    658a:	0008                	0x8
    658c:	1400                	addi	s0,sp,544
    658e:	005d                	c.nop	23
    6590:	0000                	unimp
    6592:	0f00                	addi	s0,sp,912
    6594:	e504                	fsw	fs1,8(a0)
    6596:	0008                	0x8
    6598:	0f00                	addi	s0,sp,912
    659a:	d404                	sw	s1,40(s0)
    659c:	0008                	0x8
    659e:	0800                	addi	s0,sp,16
    65a0:	0656                	slli	a2,a2,0x15
    65a2:	0000                	unimp
    65a4:	000008fb          	0x8fb
    65a8:	6409                	lui	s0,0x2
    65aa:	0000                	unimp
    65ac:	0200                	addi	s0,sp,256
    65ae:	1f00                	addi	s0,sp,944
    65b0:	000004eb          	0x4eb
    65b4:	3304                	fld	fs1,32(a4)
    65b6:	04621703          	lh	a4,70(tp) # 673cc <_data_lma+0x5cdb4>
    65ba:	0000                	unimp
    65bc:	e41f 0004 0400      	0x4000004e41f
    65c2:	0334                	addi	a3,sp,392
    65c4:	681d                	lui	a6,0x7
    65c6:	0004                	0x4
    65c8:	2000                	fld	fs0,0(s0)
    65ca:	034a                	slli	t1,t1,0x12
    65cc:	0000                	unimp
    65ce:	9a06                	add	s4,s4,ra
    65d0:	4116                	lw	sp,68(sp)
    65d2:	0000                	unimp
    65d4:	2000                	fld	fs0,0(s0)
    65d6:	00000037          	lui	zero,0x0
    65da:	9b06                	add	s6,s6,ra
    65dc:	5d15                	li	s10,-27
    65de:	0000                	unimp
    65e0:	0800                	addi	s0,sp,16
    65e2:	05b6                	slli	a1,a1,0xd
    65e4:	0000                	unimp
    65e6:	093d                	addi	s2,s2,15
    65e8:	0000                	unimp
    65ea:	6409                	lui	s0,0x2
    65ec:	0000                	unimp
    65ee:	0100                	addi	s0,sp,128
    65f0:	2000                	fld	fs0,0(s0)
    65f2:	028e                	slli	t0,t0,0x3
    65f4:	0000                	unimp
    65f6:	9e06                	add	t3,t3,ra
    65f8:	00092d17          	auipc	s10,0x92
    65fc:	0500                	addi	s0,sp,640
    65fe:	008d                	addi	ra,ra,3
    6600:	0000                	unimp
    6602:	33185e07          	0x33185e07
    6606:	0000                	unimp
    6608:	0500                	addi	s0,sp,640
    660a:	065c                	addi	a5,sp,772
    660c:	0000                	unimp
    660e:	3a185f07          	0x3a185f07
    6612:	0000                	unimp
    6614:	0500                	addi	s0,sp,640
    6616:	0000074f          	fnmadd.s	fa4,ft0,ft0,ft0,rne
    661a:	5d186007          	0x5d186007
    661e:	0000                	unimp
    6620:	2100                	fld	fs0,0(a0)
    6622:	0961                	addi	s2,s2,24
    6624:	0000                	unimp
    6626:	0802                	c.slli64	a6
    6628:	4204                	lw	s1,0(a2)
    662a:	0004                	0x4
    662c:	0500                	addi	s0,sp,640
    662e:	02f2                	slli	t0,t0,0x1c
    6630:	0000                	unimp
    6632:	2c186207          	0x2c186207
    6636:	0000                	unimp
    6638:	0500                	addi	s0,sp,640
    663a:	00000017          	auipc	zero,0x0
    663e:	64186307          	0x64186307
    6642:	0000                	unimp
    6644:	2000                	fld	fs0,0(s0)
    6646:	00000617          	auipc	a2,0x0
    664a:	850fba07          	fld	fs4,-1968(t6)
    664e:	0009                	c.nop	2
    6650:	2000                	fld	fs0,0(s0)
    6652:	00000a63          	beqz	zero,6666 <_dtoa_r+0xfa6>
    6656:	2501                	jal	6c56 <_fflush_r+0x56>
    6658:	6d18                	flw	fa4,24(a0)
    665a:	0009                	c.nop	2
    665c:	2000                	fld	fs0,0(s0)
    665e:	0abc                	addi	a5,sp,344
    6660:	0000                	unimp
    6662:	2601                	jal	6962 <_dtoa_r+0x12a2>
    6664:	6d18                	flw	fa4,24(a0)
    6666:	0009                	c.nop	2
    6668:	2000                	fld	fs0,0(s0)
    666a:	0a9d                	addi	s5,s5,7
    666c:	0000                	unimp
    666e:	2701                	jal	6d6e <__sfmoreglue+0x2a>
    6670:	6d18                	flw	fa4,24(a0)
    6672:	0009                	c.nop	2
    6674:	2000                	fld	fs0,0(s0)
    6676:	0a45                	addi	s4,s4,17
    6678:	0000                	unimp
    667a:	2801                	jal	668a <_dtoa_r+0xfca>
    667c:	6d18                	flw	fa4,24(a0)
    667e:	0009                	c.nop	2
    6680:	2000                	fld	fs0,0(s0)
    6682:	0a7e                	slli	s4,s4,0x1f
    6684:	0000                	unimp
    6686:	2901                	jal	6a96 <__sflush_r+0x86>
    6688:	6d18                	flw	fa4,24(a0)
    668a:	0009                	c.nop	2
    668c:	2200                	fld	fs0,0(a2)
    668e:	0888                	addi	a0,sp,80
    6690:	0000                	unimp
    6692:	d201                	beqz	a2,6592 <_dtoa_r+0xed2>
    6694:	7901                	lui	s2,0xfffe0
    6696:	0009                	c.nop	2
    6698:	2800                	fld	fs0,16(s0)
    669a:	0800002f          	0x800002f
    669e:	0000                	unimp
    66a0:	0100                	addi	s0,sp,128
    66a2:	019c                	addi	a5,sp,192
    66a4:	000a                	c.slli	zero,0x2
    66a6:	2300                	fld	fs0,0(a4)
    66a8:	0354                	addi	a3,sp,388
    66aa:	0000                	unimp
    66ac:	d401                	beqz	s0,65b4 <_dtoa_r+0xef4>
    66ae:	0009790b          	0x9790b
    66b2:	0000                	unimp
    66b4:	2400                	fld	fs0,8(s0)
    66b6:	001e                	c.slli	zero,0x7
    66b8:	0000                	unimp
    66ba:	cc01                	beqz	s0,66d2 <_dtoa_r+0x1012>
    66bc:	5501                	li	a0,-32
    66be:	0009                	c.nop	2
    66c0:	0100                	addi	s0,sp,128
    66c2:	00000a2b          	0xa2b
    66c6:	2825                	jal	66fe <_dtoa_r+0x103e>
    66c8:	000c                	0xc
    66ca:	0100                	addi	s0,sp,128
    66cc:	0ecc                	addi	a1,sp,852
    66ce:	0949                	addi	s2,s2,18
    66d0:	0000                	unimp
    66d2:	6326                	flw	ft6,72(sp)
    66d4:	6372                	flw	ft6,28(sp)
    66d6:	0100                	addi	s0,sp,128
    66d8:	1dcc                	addi	a1,sp,756
    66da:	0955                	addi	s2,s2,21
    66dc:	0000                	unimp
    66de:	2200                	fld	fs0,0(a2)
    66e0:	0bd1                	addi	s7,s7,20
    66e2:	0000                	unimp
    66e4:	c501                	beqz	a0,66ec <_dtoa_r+0x102c>
    66e6:	5501                	li	a0,-32
    66e8:	0009                	c.nop	2
    66ea:	9000                	0x9000
    66ec:	10000027          	0x10000027
    66f0:	0005                	c.nop	1
    66f2:	0100                	addi	s0,sp,128
    66f4:	ea9c                	fsw	fa5,16(a3)
    66f6:	2700000b          	0x2700000b
    66fa:	0c28                	addi	a0,sp,536
    66fc:	0000                	unimp
    66fe:	c501                	beqz	a0,6706 <_dtoa_r+0x1046>
    6700:	0009850f          	0x9850f
    6704:	5100                	lw	s0,32(a0)
    6706:	004a                	c.slli	zero,0x12
    6708:	2800                	fld	fs0,16(s0)
    670a:	00637263          	bgeu	t1,t1,670e <_dtoa_r+0x104e>
    670e:	c501                	beqz	a0,6716 <_dtoa_r+0x1056>
    6710:	551e                	lw	a0,228(sp)
    6712:	0009                	c.nop	2
    6714:	7200                	flw	fs0,32(a2)
    6716:	004a                	c.slli	zero,0x12
    6718:	2900                	fld	fs0,16(a0)
    671a:	0a01                	addi	s4,s4,0
    671c:	0000                	unimp
    671e:	2790                	fld	fa2,8(a5)
    6720:	0000                	unimp
    6722:	0284                	addi	s1,sp,320
    6724:	0000                	unimp
    6726:	c701                	beqz	a4,672e <_dtoa_r+0x106e>
    6728:	000b2f0b          	0xb2f0b
    672c:	2a00                	fld	fs0,16(a2)
    672e:	0a1e                	slli	s4,s4,0x7
    6730:	0000                	unimp
    6732:	4a9e                	lw	s5,196(sp)
    6734:	0000                	unimp
    6736:	122a                	slli	tp,tp,0x2a
    6738:	000a                	c.slli	zero,0x2
    673a:	b100                	fsd	fs0,32(a0)
    673c:	004a                	c.slli	zero,0x12
    673e:	2b00                	fld	fs0,16(a4)
    6740:	0bea                	slli	s7,s7,0x1a
    6742:	0000                	unimp
    6744:	2790                	fld	fa2,8(a5)
    6746:	0000                	unimp
    6748:	0768                	addi	a0,sp,908
    674a:	0000                	unimp
    674c:	ce01                	beqz	a2,6764 <_dtoa_r+0x10a4>
    674e:	2a0c                	fld	fa1,16(a2)
    6750:	00000c07          	0xc07
    6754:	4ac4                	lw	s1,20(a3)
    6756:	0000                	unimp
    6758:	fb2a                	fsw	fa0,180(sp)
    675a:	d700000b          	0xd700000b
    675e:	004a                	c.slli	zero,0x12
    6760:	2c00                	fld	fs0,24(s0)
    6762:	0c14                	addi	a3,sp,528
    6764:	0000                	unimp
    6766:	2790                	fld	fa2,8(a5)
    6768:	0000                	unimp
    676a:	0788                	addi	a0,sp,960
    676c:	0000                	unimp
    676e:	c001                	beqz	s0,676e <_dtoa_r+0x10ae>
    6770:	000af10b          	0xaf10b
    6774:	2a00                	fld	fs0,16(a2)
    6776:	0c31                	addi	s8,s8,12
    6778:	0000                	unimp
    677a:	00004afb          	0x4afb
    677e:	252a                	fld	fa0,136(sp)
    6780:	000c                	0xc
    6782:	9600                	0x9600
    6784:	2d00004b          	0x2d00004b
    6788:	0788                	addi	a0,sp,960
    678a:	0000                	unimp
    678c:	3d2e                	fld	fs10,232(sp)
    678e:	000c                	0xc
    6790:	2f00                	fld	fs0,24(a4)
    6792:	00000c47          	fmsub.s	fs8,ft0,ft0,ft0,rne
    6796:	4c5c                	lw	a5,28(s0)
    6798:	0000                	unimp
    679a:	000c532f          	0xc532f
    679e:	7600                	flw	fs0,40(a2)
    67a0:	004c                	addi	a1,sp,4
    67a2:	0000                	unimp
    67a4:	2b00                	fld	fs0,16(a4)
    67a6:	0c14                	addi	a3,sp,528
    67a8:	0000                	unimp
    67aa:	28d8                	fld	fa4,144(s1)
    67ac:	0000                	unimp
    67ae:	07a8                	addi	a0,sp,968
    67b0:	0000                	unimp
    67b2:	c101                	beqz	a0,67b2 <_dtoa_r+0x10f2>
    67b4:	0c312a0b          	0xc312a0b
    67b8:	0000                	unimp
    67ba:	4cea                	lw	s9,152(sp)
    67bc:	0000                	unimp
    67be:	252a                	fld	fa0,136(sp)
    67c0:	000c                	0xc
    67c2:	7a00                	flw	fs0,48(a2)
    67c4:	004d                	c.nop	19
    67c6:	2d00                	fld	fs0,24(a0)
    67c8:	07a8                	addi	a0,sp,968
    67ca:	0000                	unimp
    67cc:	3d2e                	fld	fs10,232(sp)
    67ce:	000c                	0xc
    67d0:	2e00                	fld	fs0,24(a2)
    67d2:	00000c47          	fmsub.s	fs8,ft0,ft0,ft0,rne
    67d6:	000c532f          	0xc532f
    67da:	4000                	lw	s0,0(s0)
    67dc:	004e                	c.slli	zero,0x13
    67de:	0000                	unimp
    67e0:	0000                	unimp
    67e2:	3000                	fld	fs0,32(s0)
    67e4:	0a01                	addi	s4,s4,0
    67e6:	0000                	unimp
    67e8:	2a18                	fld	fa4,16(a2)
    67ea:	0000                	unimp
    67ec:	0284                	addi	s1,sp,320
    67ee:	0000                	unimp
    67f0:	c801                	beqz	s0,6800 <_dtoa_r+0x1140>
    67f2:	0a1e310b          	0xa1e310b
    67f6:	0000                	unimp
    67f8:	122a                	slli	tp,tp,0x2a
    67fa:	000a                	c.slli	zero,0x2
    67fc:	a800                	fsd	fs0,16(s0)
    67fe:	004e                	c.slli	zero,0x13
    6800:	2b00                	fld	fs0,16(a4)
    6802:	0bea                	slli	s7,s7,0x1a
    6804:	0000                	unimp
    6806:	2a18                	fld	fa4,16(a2)
    6808:	0000                	unimp
    680a:	07c0                	addi	s0,sp,964
    680c:	0000                	unimp
    680e:	ce01                	beqz	a2,6826 <_dtoa_r+0x1166>
    6810:	310c                	fld	fa1,32(a0)
    6812:	00000c07          	0xc07
    6816:	fb2a                	fsw	fa0,180(sp)
    6818:	cb00000b          	0xcb00000b
    681c:	004e                	c.slli	zero,0x13
    681e:	2c00                	fld	fs0,24(s0)
    6820:	0c14                	addi	a3,sp,528
    6822:	0000                	unimp
    6824:	2a18                	fld	fa4,16(a2)
    6826:	0000                	unimp
    6828:	07e0                	addi	s0,sp,972
    682a:	0000                	unimp
    682c:	c001                	beqz	s0,682c <_dtoa_r+0x116c>
    682e:	000bab0b          	0xbab0b
    6832:	2a00                	fld	fs0,16(a2)
    6834:	0c31                	addi	s8,s8,12
    6836:	0000                	unimp
    6838:	4ef2                	lw	t4,28(sp)
    683a:	0000                	unimp
    683c:	252a                	fld	fa0,136(sp)
    683e:	000c                	0xc
    6840:	8200                	0x8200
    6842:	2d00004f          	0x2d00004f
    6846:	07e0                	addi	s0,sp,972
    6848:	0000                	unimp
    684a:	3d2e                	fld	fs10,232(sp)
    684c:	000c                	0xc
    684e:	2e00                	fld	fs0,24(a2)
    6850:	00000c47          	fmsub.s	fs8,ft0,ft0,ft0,rne
    6854:	000c532f          	0xc532f
    6858:	4800                	lw	s0,16(s0)
    685a:	0050                	addi	a2,sp,4
    685c:	0000                	unimp
    685e:	2b00                	fld	fs0,16(a4)
    6860:	0c14                	addi	a3,sp,528
    6862:	0000                	unimp
    6864:	2b60                	fld	fs0,208(a4)
    6866:	0000                	unimp
    6868:	0800                	addi	s0,sp,16
    686a:	0000                	unimp
    686c:	c101                	beqz	a0,686c <_dtoa_r+0x11ac>
    686e:	0c312a0b          	0xc312a0b
    6872:	0000                	unimp
    6874:	50bc                	lw	a5,96(s1)
    6876:	0000                	unimp
    6878:	252a                	fld	fa0,136(sp)
    687a:	000c                	0xc
    687c:	6100                	flw	fs0,0(a0)
    687e:	0051                	c.nop	20
    6880:	2d00                	fld	fs0,24(a0)
    6882:	0800                	addi	s0,sp,16
    6884:	0000                	unimp
    6886:	3d2e                	fld	fs10,232(sp)
    6888:	000c                	0xc
    688a:	2e00                	fld	fs0,24(a2)
    688c:	00000c47          	fmsub.s	fs8,ft0,ft0,ft0,rne
    6890:	000c532f          	0xc532f
    6894:	2700                	fld	fs0,8(a4)
    6896:	0052                	c.slli	zero,0x14
    6898:	0000                	unimp
    689a:	0000                	unimp
    689c:	0000                	unimp
    689e:	7c24                	flw	fs1,120(s0)
    68a0:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
    68a4:	01be                	slli	gp,gp,0xf
    68a6:	0955                	addi	s2,s2,21
    68a8:	0000                	unimp
    68aa:	1401                	addi	s0,s0,-32
    68ac:	000c                	0xc
    68ae:	2500                	fld	fs0,8(a0)
    68b0:	0c28                	addi	a0,sp,536
    68b2:	0000                	unimp
    68b4:	be01                	j	63c4 <_dtoa_r+0xd04>
    68b6:	0009550f          	0x9550f
    68ba:	2600                	fld	fs0,8(a2)
    68bc:	00637263          	bgeu	t1,t1,68c0 <_dtoa_r+0x1200>
    68c0:	be01                	j	63d0 <_dtoa_r+0xd10>
    68c2:	551e                	lw	a0,228(sp)
    68c4:	0009                	c.nop	2
    68c6:	0000                	unimp
    68c8:	1c24                	addi	s1,sp,568
    68ca:	000c                	0xc
    68cc:	0100                	addi	s0,sp,128
    68ce:	01a5                	addi	gp,gp,9
    68d0:	0955                	addi	s2,s2,21
    68d2:	0000                	unimp
    68d4:	6001                	0x6001
    68d6:	000c                	0xc
    68d8:	2500                	fld	fs0,8(a0)
    68da:	00000173          	0x173
    68de:	a501                	j	6ede <__sfp+0x5a>
    68e0:	790d                	lui	s2,0xfffe3
    68e2:	0009                	c.nop	2
    68e4:	2600                	fld	fs0,8(a2)
    68e6:	00637263          	bgeu	t1,t1,68ea <_dtoa_r+0x122a>
    68ea:	a501                	j	6eea <__sfp+0x66>
    68ec:	551a                	lw	a0,164(sp)
    68ee:	0009                	c.nop	2
    68f0:	3200                	fld	fs0,32(a2)
    68f2:	0069                	c.nop	26
    68f4:	a701                	j	6ff4 <_fwalk_reent+0x74>
    68f6:	0009790b          	0x9790b
    68fa:	3200                	fld	fs0,32(a2)
    68fc:	3178                	fld	fa4,224(a0)
    68fe:	0036                	c.slli	zero,0xd
    6900:	a701                	j	7000 <_fwalk_reent+0x80>
    6902:	7912                	flw	fs2,36(sp)
    6904:	0009                	c.nop	2
    6906:	3300                	fld	fs0,32(a4)
    6908:	0c22                	slli	s8,s8,0x8
    690a:	0000                	unimp
    690c:	a701                	j	700c <_fwalk_reent+0x8c>
    690e:	0009791b          	0x9791b
    6912:	0000                	unimp
    6914:	9922                	add	s2,s2,s0
    6916:	0008                	0x8
    6918:	0100                	addi	s0,sp,128
    691a:	0961012b          	0x961012b
    691e:	0000                	unimp
    6920:	24ac                	fld	fa1,72(s1)
    6922:	0000                	unimp
    6924:	0064                	addi	s1,sp,12
    6926:	0000                	unimp
    6928:	9c01                	0x9c01
    692a:	0c99                	addi	s9,s9,6
    692c:	0000                	unimp
    692e:	6928                	flw	fa0,80(a0)
    6930:	0100                	addi	s0,sp,128
    6932:	005d112b          	0x5d112b
    6936:	0000                	unimp
    6938:	0000528f          	0x528f
    693c:	5434                	lw	a3,104(s0)
    693e:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
    6942:	0c2d                	addi	s8,s8,11
    6944:	0961                	addi	s2,s2,24
    6946:	0000                	unimp
    6948:	52b0                	lw	a2,96(a3)
    694a:	0000                	unimp
    694c:	3500                	fld	fs0,40(a0)
    694e:	0c14                	addi	a3,sp,528
	...
    6958:	0000                	unimp
    695a:	9c01                	0x9c01
    695c:	0cd6                	slli	s9,s9,0x15
    695e:	0000                	unimp
    6960:	252a                	fld	fa0,136(sp)
    6962:	000c                	0xc
    6964:	fb00                	fsw	fs0,48(a4)
    6966:	0052                	c.slli	zero,0x14
    6968:	2a00                	fld	fs0,16(a2)
    696a:	0c31                	addi	s8,s8,12
    696c:	0000                	unimp
    696e:	53c1                	li	t2,-16
    6970:	0000                	unimp
    6972:	3d2e                	fld	fs10,232(sp)
    6974:	000c                	0xc
    6976:	2f00                	fld	fs0,24(a4)
    6978:	00000c47          	fmsub.s	fs8,ft0,ft0,ft0,rne
    697c:	5492                	lw	s1,36(sp)
    697e:	0000                	unimp
    6980:	000c532f          	0xc532f
    6984:	ac00                	fsd	fs0,24(s0)
    6986:	0054                	addi	a3,sp,4
    6988:	0000                	unimp
    698a:	ea35                	bnez	a2,69fe <_dtoa_r+0x133e>
    698c:	1000000b          	0x1000000b
    6990:	0025                	c.nop	9
    6992:	8000                	0x8000
    6994:	0002                	c.slli64	zero
    6996:	0100                	addi	s0,sp,128
    6998:	7c9c                	flw	fa5,56(s1)
    699a:	000d                	c.nop	3
    699c:	2a00                	fld	fs0,16(a2)
    699e:	00000bfb          	0xbfb
    69a2:	5520                	lw	s0,104(a0)
    69a4:	0000                	unimp
    69a6:	072a                	slli	a4,a4,0xa
    69a8:	000c                	0xc
    69aa:	4100                	lw	s0,0(a0)
    69ac:	0055                	c.nop	21
    69ae:	2c00                	fld	fs0,24(s0)
    69b0:	0c14                	addi	a3,sp,528
    69b2:	0000                	unimp
    69b4:	2510                	fld	fa2,8(a0)
    69b6:	0000                	unimp
    69b8:	0738                	addi	a4,sp,904
    69ba:	0000                	unimp
    69bc:	c001                	beqz	s0,69bc <_dtoa_r+0x12fc>
    69be:	000d3f0b          	0xd3f0b
    69c2:	2a00                	fld	fs0,16(a2)
    69c4:	0c31                	addi	s8,s8,12
    69c6:	0000                	unimp
    69c8:	555f 0000 252a      	0x252a0000555f
    69ce:	000c                	0xc
    69d0:	1000                	addi	s0,sp,32
    69d2:	0056                	c.slli	zero,0x15
    69d4:	2d00                	fld	fs0,24(a0)
    69d6:	0738                	addi	a4,sp,904
    69d8:	0000                	unimp
    69da:	3d2e                	fld	fs10,232(sp)
    69dc:	000c                	0xc
    69de:	2f00                	fld	fs0,24(a4)
    69e0:	00000c47          	fmsub.s	fs8,ft0,ft0,ft0,rne
    69e4:	56d6                	lw	a3,116(sp)
    69e6:	0000                	unimp
    69e8:	000c532f          	0xc532f
    69ec:	f000                	fsw	fs0,32(s0)
    69ee:	0056                	c.slli	zero,0x15
    69f0:	0000                	unimp
    69f2:	2b00                	fld	fs0,16(a4)
    69f4:	0c14                	addi	a3,sp,528
    69f6:	0000                	unimp
    69f8:	2650                	fld	fa2,136(a2)
    69fa:	0000                	unimp
    69fc:	0750                	addi	a2,sp,900
    69fe:	0000                	unimp
    6a00:	c101                	beqz	a0,6a00 <_dtoa_r+0x1340>
    6a02:	0c312a0b          	0xc312a0b
    6a06:	0000                	unimp
    6a08:	5764                	lw	s1,108(a4)
    6a0a:	0000                	unimp
    6a0c:	252a                	fld	fa0,136(sp)
    6a0e:	000c                	0xc
    6a10:	0900                	addi	s0,sp,144
    6a12:	0058                	addi	a4,sp,4
    6a14:	2d00                	fld	fs0,24(a0)
    6a16:	0750                	addi	a2,sp,900
    6a18:	0000                	unimp
    6a1a:	3d2e                	fld	fs10,232(sp)
    6a1c:	000c                	0xc
    6a1e:	2e00                	fld	fs0,24(a2)
    6a20:	00000c47          	fmsub.s	fs8,ft0,ft0,ft0,rne
    6a24:	000c532f          	0xc532f
    6a28:	cf00                	sw	s0,24(a4)
    6a2a:	0058                	addi	a4,sp,4
    6a2c:	0000                	unimp
    6a2e:	0000                	unimp
    6a30:	0136                	slli	sp,sp,0xd
    6a32:	000a                	c.slli	zero,0x2
    6a34:	a000                	fsd	fs0,0(s0)
    6a36:	002c                	addi	a1,sp,8
    6a38:	8800                	0x8800
    6a3a:	0002                	c.slli64	zero
    6a3c:	0100                	addi	s0,sp,128
    6a3e:	2a9c                	fld	fa5,16(a3)
    6a40:	0a12                	slli	s4,s4,0x4
    6a42:	0000                	unimp
    6a44:	00005937          	lui	s2,0x5
    6a48:	1e2a                	slli	t3,t3,0x2a
    6a4a:	000a                	c.slli	zero,0x2
    6a4c:	5800                	lw	s0,48(s0)
    6a4e:	0059                	c.nop	22
    6a50:	2b00                	fld	fs0,16(a4)
    6a52:	0bea                	slli	s7,s7,0x1a
    6a54:	0000                	unimp
    6a56:	2ca0                	fld	fs0,88(s1)
    6a58:	0000                	unimp
    6a5a:	0818                	addi	a4,sp,16
    6a5c:	0000                	unimp
    6a5e:	ce01                	beqz	a2,6a76 <__sflush_r+0x66>
    6a60:	2a0c                	fld	fa1,16(a2)
    6a62:	00000c07          	0xc07
    6a66:	5979                	li	s2,-2
    6a68:	0000                	unimp
    6a6a:	fb2a                	fsw	fa0,180(sp)
    6a6c:	8c00000b          	0x8c00000b
    6a70:	0059                	c.nop	22
    6a72:	2c00                	fld	fs0,24(s0)
    6a74:	0c14                	addi	a3,sp,528
    6a76:	0000                	unimp
    6a78:	2ca0                	fld	fs0,88(s1)
    6a7a:	0000                	unimp
    6a7c:	0838                	addi	a4,sp,24
    6a7e:	0000                	unimp
    6a80:	c001                	beqz	s0,6a80 <__sflush_r+0x70>
    6a82:	000e030b          	0xe030b
    6a86:	2a00                	fld	fs0,16(a2)
    6a88:	0c31                	addi	s8,s8,12
    6a8a:	0000                	unimp
    6a8c:	599f 0000 252a      	0x252a0000599f
    6a92:	000c                	0xc
    6a94:	3a00                	fld	fs0,48(a2)
    6a96:	005a                	c.slli	zero,0x16
    6a98:	2d00                	fld	fs0,24(a0)
    6a9a:	0838                	addi	a4,sp,24
    6a9c:	0000                	unimp
    6a9e:	3d2e                	fld	fs10,232(sp)
    6aa0:	000c                	0xc
    6aa2:	2f00                	fld	fs0,24(a4)
    6aa4:	00000c47          	fmsub.s	fs8,ft0,ft0,ft0,rne
    6aa8:	5b00                	lw	s0,48(a4)
    6aaa:	0000                	unimp
    6aac:	000c532f          	0xc532f
    6ab0:	1a00                	addi	s0,sp,304
    6ab2:	0000005b          	0x5b
    6ab6:	2b00                	fld	fs0,16(a4)
    6ab8:	0c14                	addi	a3,sp,528
    6aba:	0000                	unimp
    6abc:	2de8                	fld	fa0,216(a1)
    6abe:	0000                	unimp
    6ac0:	0858                	addi	a4,sp,20
    6ac2:	0000                	unimp
    6ac4:	c101                	beqz	a0,6ac4 <__sflush_r+0xb4>
    6ac6:	0c312a0b          	0xc312a0b
    6aca:	0000                	unimp
    6acc:	5b8e                	lw	s7,224(sp)
    6ace:	0000                	unimp
    6ad0:	252a                	fld	fa0,136(sp)
    6ad2:	000c                	0xc
    6ad4:	3300                	fld	fs0,32(a4)
    6ad6:	005c                	addi	a5,sp,4
    6ad8:	2d00                	fld	fs0,24(a0)
    6ada:	0858                	addi	a4,sp,20
    6adc:	0000                	unimp
    6ade:	3d2e                	fld	fs10,232(sp)
    6ae0:	000c                	0xc
    6ae2:	2e00                	fld	fs0,24(a2)
    6ae4:	00000c47          	fmsub.s	fs8,ft0,ft0,ft0,rne
    6ae8:	000c532f          	0xc532f
    6aec:	f900                	fsw	fs0,48(a0)
    6aee:	005c                	addi	a5,sp,4
    6af0:	0000                	unimp
    6af2:	0000                	unimp
    6af4:	0000                	unimp
    6af6:	099e                	slli	s3,s3,0x7
    6af8:	0000                	unimp
    6afa:	0004                	0x4
    6afc:	000013cb          	fnmsub.s	ft7,ft0,ft0,ft0,rtz
    6b00:	0104                	addi	s1,sp,128
    6b02:	0686                	slli	a3,a3,0x1
    6b04:	0000                	unimp
    6b06:	4a0c                	lw	a1,16(a2)
    6b08:	000c                	0xc
    6b0a:	5b00                	lw	s0,48(a4)
    6b0c:	0002                	c.slli64	zero
    6b0e:	a800                	fsd	fs0,16(s0)
    6b10:	0008                	0x8
    6b12:	0000                	unimp
    6b14:	0000                	unimp
    6b16:	9700                	0x9700
    6b18:	0200007b          	0x200007b
    6b1c:	0601                	addi	a2,a2,0
    6b1e:	05c6                	slli	a1,a1,0x11
    6b20:	0000                	unimp
    6b22:	0102                	c.slli64	sp
    6b24:	c408                	sw	a0,8(s0)
    6b26:	0005                	c.nop	1
    6b28:	0200                	addi	s0,sp,256
    6b2a:	0502                	c.slli64	a0
    6b2c:	047a                	slli	s0,s0,0x1e
    6b2e:	0000                	unimp
    6b30:	0202                	c.slli64	tp
    6b32:	00070c07          	0x70c07
    6b36:	0200                	addi	s0,sp,256
    6b38:	0504                	addi	s1,sp,640
    6b3a:	0388                	addi	a0,sp,448
    6b3c:	0000                	unimp
    6b3e:	0402                	c.slli64	s0
    6b40:	00019f07          	0x19f07
    6b44:	0200                	addi	s0,sp,256
    6b46:	0508                	addi	a0,sp,640
    6b48:	00000383          	lb	t2,0(zero) # 0 <_start>
    6b4c:	000c6b03          	0xc6b03
    6b50:	0200                	addi	s0,sp,256
    6b52:	1969                	addi	s2,s2,-6
    6b54:	0062                	c.slli	zero,0x18
    6b56:	0000                	unimp
    6b58:	0802                	c.slli64	a6
    6b5a:	00019a07          	0x19a07
    6b5e:	0400                	addi	s0,sp,512
    6b60:	0504                	addi	s1,sp,640
    6b62:	6e69                	lui	t3,0x1a
    6b64:	0074                	addi	a3,sp,12
    6b66:	0402                	c.slli64	s0
    6b68:	0001a407          	flw	fs0,0(gp) # 10013a0 <__global_pointer$>
    6b6c:	0200                	addi	s0,sp,256
    6b6e:	0410                	addi	a2,sp,512
    6b70:	043d                	addi	s0,s0,15
    6b72:	0000                	unimp
    6b74:	7f05                	lui	t5,0xfffe1
    6b76:	0005                	c.nop	1
    6b78:	0300                	addi	s0,sp,384
    6b7a:	0165                	addi	sp,sp,25
    6b7c:	00007017          	auipc	zero,0x7
    6b80:	0300                	addi	s0,sp,384
    6b82:	0735                	addi	a4,a4,13
    6b84:	0000                	unimp
    6b86:	2e04                	fld	fs1,24(a2)
    6b88:	410e                	lw	sp,192(sp)
    6b8a:	0000                	unimp
    6b8c:	0300                	addi	s0,sp,384
    6b8e:	00f0                	addi	a2,sp,76
    6b90:	0000                	unimp
    6b92:	7404                	flw	fs1,40(s0)
    6b94:	410e                	lw	sp,192(sp)
    6b96:	0000                	unimp
    6b98:	0300                	addi	s0,sp,384
    6b9a:	06fc                	addi	a5,sp,844
    6b9c:	0000                	unimp
    6b9e:	9304                	0x9304
    6ba0:	00006917          	auipc	s2,0x6
    6ba4:	0600                	addi	s0,sp,768
    6ba6:	0404                	addi	s1,sp,512
    6ba8:	03a5                	addi	t2,t2,9
    6baa:	00d1                	addi	ra,ra,20
    6bac:	0000                	unimp
    6bae:	00032607          	flw	fa2,0(t1)
    6bb2:	0400                	addi	s0,sp,512
    6bb4:	007e0ca7          	0x7e0ca7
    6bb8:	0000                	unimp
    6bba:	0004dd07          	0x4dd07
    6bbe:	0400                	addi	s0,sp,512
    6bc0:	13a8                	addi	a0,sp,488
    6bc2:	00d1                	addi	ra,ra,20
    6bc4:	0000                	unimp
    6bc6:	0800                	addi	s0,sp,16
    6bc8:	002c                	addi	a1,sp,8
    6bca:	0000                	unimp
    6bcc:	00e1                	addi	ra,ra,24
    6bce:	0000                	unimp
    6bd0:	7009                	c.lui	zero,0xfffe2
    6bd2:	0000                	unimp
    6bd4:	0300                	addi	s0,sp,384
    6bd6:	0a00                	addi	s0,sp,272
    6bd8:	0408                	addi	a0,sp,512
    6bda:	09a2                	slli	s3,s3,0x8
    6bdc:	0105                	addi	sp,sp,1
    6bde:	0000                	unimp
    6be0:	0001660b          	0x1660b
    6be4:	0400                	addi	s0,sp,512
    6be6:	07a4                	addi	s1,sp,968
    6be8:	0069                	c.nop	26
    6bea:	0000                	unimp
    6bec:	0b00                	addi	s0,sp,400
    6bee:	0296                	slli	t0,t0,0x5
    6bf0:	0000                	unimp
    6bf2:	a904                	fsd	fs1,16(a0)
    6bf4:	af05                	j	7324 <_Balloc+0x9c>
    6bf6:	0000                	unimp
    6bf8:	0400                	addi	s0,sp,512
    6bfa:	0300                	addi	s0,sp,384
    6bfc:	00000407          	0x407
    6c00:	aa04                	fsd	fs1,16(a2)
    6c02:	0000e103          	0xe103
    6c06:	0c00                	addi	s0,sp,528
    6c08:	0304                	addi	s1,sp,384
    6c0a:	000003bb          	0x3bb
    6c0e:	1605                	addi	a2,a2,-31
    6c10:	4819                	li	a6,6
    6c12:	0000                	unimp
    6c14:	0300                	addi	s0,sp,384
    6c16:	00b0                	addi	a2,sp,72
    6c18:	0000                	unimp
    6c1a:	0c06                	slli	s8,s8,0x1
    6c1c:	690d                	lui	s2,0x3
    6c1e:	0000                	unimp
    6c20:	0300                	addi	s0,sp,384
    6c22:	030e                	slli	t1,t1,0x3
    6c24:	0000                	unimp
    6c26:	2305                	jal	7146 <__smakebuf_r+0x76>
    6c28:	00011f1b          	0x11f1b
    6c2c:	0d00                	addi	s0,sp,656
    6c2e:	012a                	slli	sp,sp,0xa
    6c30:	0000                	unimp
    6c32:	0518                	addi	a4,sp,640
    6c34:	0834                	addi	a3,sp,24
    6c36:	0191                	addi	gp,gp,4
    6c38:	0000                	unimp
    6c3a:	00079f0b          	0x79f0b
    6c3e:	0500                	addi	s0,sp,640
    6c40:	1336                	slli	t1,t1,0x2d
    6c42:	0191                	addi	gp,gp,4
    6c44:	0000                	unimp
    6c46:	0e00                	addi	s0,sp,784
    6c48:	6b5f 0500 0737      	0x73705006b5f
    6c4e:	0069                	c.nop	26
    6c50:	0000                	unimp
    6c52:	0b04                	addi	s1,sp,400
    6c54:	0542                	slli	a0,a0,0x10
    6c56:	0000                	unimp
    6c58:	3705                	jal	6b78 <__sflush_r+0x168>
    6c5a:	0000690b          	0x690b
    6c5e:	0800                	addi	s0,sp,16
    6c60:	0004ba0b          	0x4ba0b
    6c64:	0500                	addi	s0,sp,640
    6c66:	00691437          	lui	s0,0x691
    6c6a:	0000                	unimp
    6c6c:	0b0c                	addi	a1,sp,400
    6c6e:	01c6                	slli	gp,gp,0x11
    6c70:	0000                	unimp
    6c72:	3705                	jal	6b92 <__sflush_r+0x182>
    6c74:	0000691b          	0x691b
    6c78:	1000                	addi	s0,sp,32
    6c7a:	5f0e                	lw	t5,224(sp)
    6c7c:	0078                	addi	a4,sp,12
    6c7e:	3805                	jal	64ae <_dtoa_r+0xdee>
    6c80:	0001970b          	0x1970b
    6c84:	1400                	addi	s0,sp,544
    6c86:	0f00                	addi	s0,sp,912
    6c88:	3704                	fld	fs1,40(a4)
    6c8a:	0001                	nop
    6c8c:	0800                	addi	s0,sp,16
    6c8e:	00000113          	li	sp,0
    6c92:	000001a7          	0x1a7
    6c96:	7009                	c.lui	zero,0xfffe2
    6c98:	0000                	unimp
    6c9a:	0000                	unimp
    6c9c:	0d00                	addi	s0,sp,656
    6c9e:	056d                	addi	a0,a0,27
    6ca0:	0000                	unimp
    6ca2:	0524                	addi	s1,sp,648
    6ca4:	083c                	addi	a5,sp,24
    6ca6:	022a                	slli	tp,tp,0xa
    6ca8:	0000                	unimp
    6caa:	00022d0b          	0x22d0b
    6cae:	0500                	addi	s0,sp,640
    6cb0:	093e                	slli	s2,s2,0xf
    6cb2:	0069                	c.nop	26
    6cb4:	0000                	unimp
    6cb6:	0b00                	addi	s0,sp,400
    6cb8:	0178                	addi	a4,sp,140
    6cba:	0000                	unimp
    6cbc:	3f05                	jal	6bec <__sflush_r+0x1dc>
    6cbe:	6909                	lui	s2,0x2
    6cc0:	0000                	unimp
    6cc2:	0400                	addi	s0,sp,512
    6cc4:	0001560b          	0x1560b
    6cc8:	0500                	addi	s0,sp,640
    6cca:	0940                	addi	s0,sp,148
    6ccc:	0069                	c.nop	26
    6cce:	0000                	unimp
    6cd0:	0b08                	addi	a0,sp,400
    6cd2:	02c6                	slli	t0,t0,0x11
    6cd4:	0000                	unimp
    6cd6:	4105                	li	sp,1
    6cd8:	6909                	lui	s2,0x2
    6cda:	0000                	unimp
    6cdc:	0c00                	addi	s0,sp,528
    6cde:	0004340b          	0x4340b
    6ce2:	0500                	addi	s0,sp,640
    6ce4:	0942                	slli	s2,s2,0x10
    6ce6:	0069                	c.nop	26
    6ce8:	0000                	unimp
    6cea:	0b10                	addi	a2,sp,400
    6cec:	000004f7          	0x4f7
    6cf0:	4305                	li	t1,1
    6cf2:	6909                	lui	s2,0x2
    6cf4:	0000                	unimp
    6cf6:	1400                	addi	s0,sp,544
    6cf8:	0001320b          	0x1320b
    6cfc:	0500                	addi	s0,sp,640
    6cfe:	0944                	addi	s1,sp,148
    6d00:	0069                	c.nop	26
    6d02:	0000                	unimp
    6d04:	0b18                	addi	a4,sp,400
    6d06:	0236                	slli	tp,tp,0xd
    6d08:	0000                	unimp
    6d0a:	4505                	li	a0,1
    6d0c:	6909                	lui	s2,0x2
    6d0e:	0000                	unimp
    6d10:	1c00                	addi	s0,sp,560
    6d12:	00041a0b          	0x41a0b
    6d16:	0500                	addi	s0,sp,640
    6d18:	0946                	slli	s2,s2,0x11
    6d1a:	0069                	c.nop	26
    6d1c:	0000                	unimp
    6d1e:	0020                	addi	s0,sp,8
    6d20:	2910                	fld	fa2,16(a0)
    6d22:	0000                	unimp
    6d24:	0800                	addi	s0,sp,16
    6d26:	0501                	addi	a0,a0,0
    6d28:	026f084f          	fnmadd.d	fa6,ft10,ft6,ft0,rne
    6d2c:	0000                	unimp
    6d2e:	0004120b          	0x4120b
    6d32:	0500                	addi	s0,sp,640
    6d34:	0a50                	addi	a2,sp,276
    6d36:	0000026f          	jal	tp,6d36 <_cleanup_r+0x2>
    6d3a:	0b00                	addi	s0,sp,400
    6d3c:	05a9                	addi	a1,a1,10
    6d3e:	0000                	unimp
    6d40:	5105                	li	sp,-31
    6d42:	6f09                	lui	t5,0x2
    6d44:	0002                	c.slli64	zero
    6d46:	8000                	0x8000
    6d48:	2611                	jal	704c <__swhatbuf_r+0xc>
    6d4a:	05000007          	0x5000007
    6d4e:	01130a53          	fadd.s	fs4,ft6,fa7,rne
    6d52:	0000                	unimp
    6d54:	0100                	addi	s0,sp,128
    6d56:	8411                	srai	s0,s0,0x4
    6d58:	05000007          	0x5000007
    6d5c:	0a56                	slli	s4,s4,0x15
    6d5e:	00000113          	li	sp,0
    6d62:	0104                	addi	s1,sp,128
    6d64:	0800                	addi	s0,sp,16
    6d66:	0111                	addi	sp,sp,4
    6d68:	0000                	unimp
    6d6a:	027f                	0x27f
    6d6c:	0000                	unimp
    6d6e:	7009                	c.lui	zero,0xfffe2
    6d70:	0000                	unimp
    6d72:	1f00                	addi	s0,sp,944
    6d74:	1000                	addi	s0,sp,32
    6d76:	0460                	addi	s0,sp,524
    6d78:	0000                	unimp
    6d7a:	0190                	addi	a2,sp,192
    6d7c:	6205                	lui	tp,0x1
    6d7e:	c208                	sw	a0,0(a2)
    6d80:	0002                	c.slli64	zero
    6d82:	0b00                	addi	s0,sp,400
    6d84:	079f 0000 6305      	0x63050000079f
    6d8a:	c212                	sw	tp,4(sp)
    6d8c:	0002                	c.slli64	zero
    6d8e:	0000                	unimp
    6d90:	0002450b          	0x2450b
    6d94:	0500                	addi	s0,sp,640
    6d96:	0664                	addi	s1,sp,780
    6d98:	0069                	c.nop	26
    6d9a:	0000                	unimp
    6d9c:	0b04                	addi	s1,sp,400
    6d9e:	0109                	addi	sp,sp,2
    6da0:	0000                	unimp
    6da2:	6605                	lui	a2,0x1
    6da4:	c809                	beqz	s0,6db6 <__sfmoreglue+0x72>
    6da6:	0002                	c.slli64	zero
    6da8:	0800                	addi	s0,sp,16
    6daa:	0000290b          	0x290b
    6dae:	0500                	addi	s0,sp,640
    6db0:	022a1e67          	0x22a1e67
    6db4:	0000                	unimp
    6db6:	0088                	addi	a0,sp,64
    6db8:	027f040f          	0x27f040f
    6dbc:	0000                	unimp
    6dbe:	d808                	sw	a0,48(s0)
    6dc0:	0002                	c.slli64	zero
    6dc2:	d800                	sw	s0,48(s0)
    6dc4:	0002                	c.slli64	zero
    6dc6:	0900                	addi	s0,sp,144
    6dc8:	0070                	addi	a2,sp,12
    6dca:	0000                	unimp
    6dcc:	001f 040f 02de      	0x2de040f001f
    6dd2:	0000                	unimp
    6dd4:	0d12                	slli	s10,s10,0x4
    6dd6:	0636                	slli	a2,a2,0xd
    6dd8:	0000                	unimp
    6dda:	0508                	addi	a0,sp,640
    6ddc:	087a                	slli	a6,a6,0x1e
    6dde:	00000307          	0x307
    6de2:	0003a50b          	0x3a50b
    6de6:	0500                	addi	s0,sp,640
    6de8:	0307117b          	0x307117b
    6dec:	0000                	unimp
    6dee:	0b00                	addi	s0,sp,400
    6df0:	0000072f          	0x72f
    6df4:	7c05                	lui	s8,0xfffe1
    6df6:	6906                	flw	fs2,64(sp)
    6df8:	0000                	unimp
    6dfa:	0400                	addi	s0,sp,512
    6dfc:	0f00                	addi	s0,sp,912
    6dfe:	2c04                	fld	fs1,24(s0)
    6e00:	0000                	unimp
    6e02:	0d00                	addi	s0,sp,656
    6e04:	01be                	slli	gp,gp,0xf
    6e06:	0000                	unimp
    6e08:	0568                	addi	a0,sp,652
    6e0a:	08ba                	slli	a7,a7,0xe
    6e0c:	0450                	addi	a2,sp,516
    6e0e:	0000                	unimp
    6e10:	5f0e                	lw	t5,224(sp)
    6e12:	0070                	addi	a2,sp,12
    6e14:	bb05                	j	6b44 <__sflush_r+0x134>
    6e16:	0712                	slli	a4,a4,0x4
    6e18:	00000003          	lb	zero,0(zero) # 0 <_start>
    6e1c:	5f0e                	lw	t5,224(sp)
    6e1e:	0072                	c.slli	zero,0x1c
    6e20:	bc05                	j	6850 <_dtoa_r+0x1190>
    6e22:	00006907          	0x6907
    6e26:	0400                	addi	s0,sp,512
    6e28:	5f0e                	lw	t5,224(sp)
    6e2a:	bd050077          	0xbd050077
    6e2e:	00006907          	0x6907
    6e32:	0800                	addi	s0,sp,16
    6e34:	00007f0b          	0x7f0b
    6e38:	0500                	addi	s0,sp,640
    6e3a:	09be                	slli	s3,s3,0xf
    6e3c:	00000033          	add	zero,zero,zero
    6e40:	0b0c                	addi	a1,sp,400
    6e42:	03d9                	addi	t2,t2,22
    6e44:	0000                	unimp
    6e46:	bf05                	j	6d76 <__sfmoreglue+0x32>
    6e48:	3309                	jal	6b4a <__sflush_r+0x13a>
    6e4a:	0000                	unimp
    6e4c:	0e00                	addi	s0,sp,784
    6e4e:	5f0e                	lw	t5,224(sp)
    6e50:	6662                	flw	fa2,24(sp)
    6e52:	0500                	addi	s0,sp,640
    6e54:	11c0                	addi	s0,sp,228
    6e56:	02df 0000 0b10      	0xb10000002df
    6e5c:	0076                	c.slli	zero,0x1d
    6e5e:	0000                	unimp
    6e60:	c105                	beqz	a0,6e80 <__sinit+0xc8>
    6e62:	00006907          	0x6907
    6e66:	1800                	addi	s0,sp,48
    6e68:	0001140b          	0x1140b
    6e6c:	0500                	addi	s0,sp,640
    6e6e:	0ac8                	addi	a0,sp,340
    6e70:	0111                	addi	sp,sp,4
    6e72:	0000                	unimp
    6e74:	0b1c                	addi	a5,sp,400
    6e76:	00c2                	slli	ra,ra,0x10
    6e78:	0000                	unimp
    6e7a:	ca05                	beqz	a2,6eaa <__sfp+0x26>
    6e7c:	d41d                	beqz	s0,6daa <__sfmoreglue+0x66>
    6e7e:	0005                	c.nop	1
    6e80:	2000                	fld	fs0,0(s0)
    6e82:	0004490b          	0x4490b
    6e86:	0500                	addi	s0,sp,640
    6e88:	1dcc                	addi	a1,sp,756
    6e8a:	05fe                	slli	a1,a1,0x1f
    6e8c:	0000                	unimp
    6e8e:	0b24                	addi	s1,sp,408
    6e90:	07b0                	addi	a2,sp,968
    6e92:	0000                	unimp
    6e94:	cf05                	beqz	a4,6ecc <__sfp+0x48>
    6e96:	220d                	jal	6fb8 <_fwalk_reent+0x38>
    6e98:	0006                	c.slli	zero,0x1
    6e9a:	2800                	fld	fs0,16(s0)
    6e9c:	0003320b          	0x3320b
    6ea0:	0500                	addi	s0,sp,640
    6ea2:	09d0                	addi	a2,sp,212
    6ea4:	063c                	addi	a5,sp,776
    6ea6:	0000                	unimp
    6ea8:	0e2c                	addi	a1,sp,792
    6eaa:	755f 0062 d305      	0xd3050062755f
    6eb0:	df11                	beqz	a4,6dcc <__sinit+0x14>
    6eb2:	0002                	c.slli64	zero
    6eb4:	3000                	fld	fs0,32(s0)
    6eb6:	5f0e                	lw	t5,224(sp)
    6eb8:	7075                	c.lui	zero,0xffffd
    6eba:	0500                	addi	s0,sp,640
    6ebc:	12d4                	addi	a3,sp,356
    6ebe:	00000307          	0x307
    6ec2:	0e38                	addi	a4,sp,792
    6ec4:	755f 0072 d505      	0xd5050072755f
    6eca:	00006907          	0x6907
    6ece:	3c00                	fld	fs0,56(s0)
    6ed0:	0007e00b          	0x7e00b
    6ed4:	0500                	addi	s0,sp,640
    6ed6:	11d8                	addi	a4,sp,228
    6ed8:	0642                	slli	a2,a2,0x10
    6eda:	0000                	unimp
    6edc:	0b40                	addi	s0,sp,404
    6ede:	073c                	addi	a5,sp,904
    6ee0:	0000                	unimp
    6ee2:	d905                	beqz	a0,6e12 <__sinit+0x5a>
    6ee4:	5211                	li	tp,-28
    6ee6:	0006                	c.slli	zero,0x1
    6ee8:	4300                	lw	s0,0(a4)
    6eea:	5f0e                	lw	t5,224(sp)
    6eec:	626c                	flw	fa1,68(a2)
    6eee:	0500                	addi	s0,sp,640
    6ef0:	11dc                	addi	a5,sp,228
    6ef2:	02df 0000 0b44      	0xb44000002df
    6ef8:	0564                	addi	s1,sp,652
    6efa:	0000                	unimp
    6efc:	df05                	beqz	a4,6e34 <__sinit+0x7c>
    6efe:	00006907          	0x6907
    6f02:	4c00                	lw	s0,24(s0)
    6f04:	0001ff0b          	0x1ff0b
    6f08:	0500                	addi	s0,sp,640
    6f0a:	0ae0                	addi	s0,sp,348
    6f0c:	0000008b          	0x8b
    6f10:	0b50                	addi	a2,sp,404
    6f12:	0172                	slli	sp,sp,0x1c
    6f14:	0000                	unimp
    6f16:	e305                	bnez	a4,6f36 <__sfp+0xb2>
    6f18:	6e12                	flw	ft8,4(sp)
    6f1a:	0004                	0x4
    6f1c:	5400                	lw	s0,40(s0)
    6f1e:	0005720b          	0x5720b
    6f22:	0500                	addi	s0,sp,640
    6f24:	012b0ce7          	jalr	s9,18(s6)
    6f28:	0000                	unimp
    6f2a:	0b58                	addi	a4,sp,404
    6f2c:	0468                	addi	a0,sp,524
    6f2e:	0000                	unimp
    6f30:	e905                	bnez	a0,6f60 <__sfp+0xdc>
    6f32:	050e                	slli	a0,a0,0x3
    6f34:	0001                	nop
    6f36:	5c00                	lw	s0,56(s0)
    6f38:	00077c0b          	0x77c0b
    6f3c:	0500                	addi	s0,sp,640
    6f3e:	09ea                	slli	s3,s3,0x1a
    6f40:	0069                	c.nop	26
    6f42:	0000                	unimp
    6f44:	0064                	addi	s1,sp,12
    6f46:	0000a313          	slti	t1,ra,0
    6f4a:	6e00                	flw	fs0,24(a2)
    6f4c:	0004                	0x4
    6f4e:	1400                	addi	s0,sp,544
    6f50:	046e                	slli	s0,s0,0x1b
    6f52:	0000                	unimp
    6f54:	1114                	addi	a3,sp,160
    6f56:	0001                	nop
    6f58:	1400                	addi	s0,sp,544
    6f5a:	05c2                	slli	a1,a1,0x10
    6f5c:	0000                	unimp
    6f5e:	6914                	flw	fa3,16(a0)
    6f60:	0000                	unimp
    6f62:	0000                	unimp
    6f64:	0479040f          	0x479040f
    6f68:	0000                	unimp
    6f6a:	6e15                	lui	t3,0x5
    6f6c:	0004                	0x4
    6f6e:	1600                	addi	s0,sp,800
    6f70:	0705                	addi	a4,a4,1
    6f72:	0000                	unimp
    6f74:	0428                	addi	a0,sp,520
    6f76:	6505                	lui	a0,0x1
    6f78:	0802                	c.slli64	a6
    6f7a:	05c2                	slli	a1,a1,0x10
    6f7c:	0000                	unimp
    6f7e:	00042d17          	auipc	s10,0x42
    6f82:	0500                	addi	s0,sp,640
    6f84:	69070267          	jalr	tp,1680(a4) # 83b92 <_data_lma+0x7957a>
    6f88:	0000                	unimp
    6f8a:	0000                	unimp
    6f8c:	00036617          	auipc	a2,0x36
    6f90:	0500                	addi	s0,sp,640
    6f92:	026c                	addi	a1,sp,268
    6f94:	0006ae0b          	0x6ae0b
    6f98:	0400                	addi	s0,sp,512
    6f9a:	0000e817          	auipc	a6,0xe
    6f9e:	0500                	addi	s0,sp,640
    6fa0:	026c                	addi	a1,sp,268
    6fa2:	ae14                	fsd	fa3,24(a2)
    6fa4:	0006                	c.slli	zero,0x1
    6fa6:	0800                	addi	s0,sp,16
    6fa8:	0007cf17          	auipc	t5,0x7c
    6fac:	0500                	addi	s0,sp,640
    6fae:	026c                	addi	a1,sp,268
    6fb0:	ae1e                	fsd	ft7,280(sp)
    6fb2:	0006                	c.slli	zero,0x1
    6fb4:	0c00                	addi	s0,sp,528
    6fb6:	00024017          	auipc	zero,0x24
    6fba:	0500                	addi	s0,sp,640
    6fbc:	026e                	slli	tp,tp,0x1b
    6fbe:	6908                	flw	fa0,16(a0)
    6fc0:	0000                	unimp
    6fc2:	1000                	addi	s0,sp,32
    6fc4:	00020717          	auipc	a4,0x20
    6fc8:	0500                	addi	s0,sp,640
    6fca:	ae08026f          	jal	tp,fff872aa <__freertos_irq_stack_top+0xfef772aa>
    6fce:	0008                	0x8
    6fd0:	1400                	addi	s0,sp,544
    6fd2:	00076317          	auipc	t1,0x76
    6fd6:	0500                	addi	s0,sp,640
    6fd8:	0272                	slli	tp,tp,0x1c
    6fda:	00006907          	0x6907
    6fde:	3000                	fld	fs0,32(s0)
    6fe0:	0006f417          	auipc	s0,0x6f
    6fe4:	0500                	addi	s0,sp,640
    6fe6:	c3160273          	0xc3160273
    6fea:	0008                	0x8
    6fec:	3400                	fld	fs0,40(s0)
    6fee:	00033f17          	auipc	t5,0x33
    6ff2:	0500                	addi	s0,sp,640
    6ff4:	0275                	addi	tp,tp,29
    6ff6:	00006907          	0x6907
    6ffa:	3800                	fld	fs0,48(s0)
    6ffc:	0003f117          	auipc	sp,0x3f
    7000:	0500                	addi	s0,sp,640
    7002:	d40a0277          	0xd40a0277
    7006:	0008                	0x8
    7008:	3c00                	fld	fs0,56(s0)
    700a:	00014e17          	auipc	t3,0x14
    700e:	0500                	addi	s0,sp,640
    7010:	027a                	slli	tp,tp,0x1e
    7012:	00019113          	slli	sp,gp,0x0
    7016:	4000                	lw	s0,0(s0)
    7018:	00019017          	auipc	zero,0x19
    701c:	0500                	addi	s0,sp,640
    701e:	6907027b          	0x6907027b
    7022:	0000                	unimp
    7024:	4400                	lw	s0,8(s0)
    7026:	00029e17          	auipc	t3,0x29
    702a:	0500                	addi	s0,sp,640
    702c:	027c                	addi	a5,sp,268
    702e:	00019113          	slli	sp,gp,0x0
    7032:	4800                	lw	s0,16(s0)
    7034:	0003ab17          	auipc	s6,0x3a
    7038:	0500                	addi	s0,sp,640
    703a:	027d                	addi	tp,tp,31
    703c:	da14                	sw	a3,48(a2)
    703e:	0008                	0x8
    7040:	4c00                	lw	s0,24(s0)
    7042:	00053a17          	auipc	s4,0x53
    7046:	0500                	addi	s0,sp,640
    7048:	0280                	addi	s0,sp,320
    704a:	00006907          	0x6907
    704e:	5000                	lw	s0,32(s0)
    7050:	0005bc17          	auipc	s8,0x5b
    7054:	0500                	addi	s0,sp,640
    7056:	0281                	addi	t0,t0,0
    7058:	c209                	beqz	a2,705a <__swhatbuf_r+0x1a>
    705a:	0005                	c.nop	1
    705c:	5400                	lw	s0,40(s0)
    705e:	0005ee17          	auipc	t3,0x5e
    7062:	0500                	addi	s0,sp,640
    7064:	02a4                	addi	s1,sp,328
    7066:	00088907          	0x88907
    706a:	5800                	lw	s0,48(s0)
    706c:	6018                	flw	fa4,0(s0)
    706e:	0004                	0x4
    7070:	0500                	addi	s0,sp,640
    7072:	02a8                	addi	a0,sp,328
    7074:	0002c213          	xori	tp,t0,0
    7078:	4800                	lw	s0,16(s0)
    707a:	1801                	addi	a6,a6,-32
    707c:	02e9                	addi	t0,t0,26
    707e:	0000                	unimp
    7080:	a905                	j	74b0 <__multadd+0xc8>
    7082:	1202                	slli	tp,tp,0x20
    7084:	027f                	0x27f
    7086:	0000                	unimp
    7088:	014c                	addi	a1,sp,132
    708a:	d018                	sw	a4,32(s0)
    708c:	0002                	c.slli64	zero
    708e:	0500                	addi	s0,sp,640
    7090:	02ad                	addi	t0,t0,11
    7092:	eb0c                	fsw	fa1,16(a4)
    7094:	0008                	0x8
    7096:	dc00                	sw	s0,56(s0)
    7098:	1802                	slli	a6,a6,0x20
    709a:	00000663          	beqz	zero,70a6 <__swhatbuf_r+0x66>
    709e:	b205                	j	69be <_dtoa_r+0x12fe>
    70a0:	1002                	c.slli	zero,0x20
    70a2:	0000066f          	jal	a2,70a2 <__swhatbuf_r+0x62>
    70a6:	02e0                	addi	s0,sp,332
    70a8:	b518                	fsd	fa4,40(a0)
    70aa:	0004                	0x4
    70ac:	0500                	addi	s0,sp,640
    70ae:	02b4                	addi	a3,sp,328
    70b0:	f70a                	fsw	ft2,172(sp)
    70b2:	0008                	0x8
    70b4:	ec00                	fsw	fs0,24(s0)
    70b6:	0002                	c.slli64	zero
    70b8:	05c8040f          	0x5c8040f
    70bc:	0000                	unimp
    70be:	0102                	c.slli64	sp
    70c0:	cd08                	sw	a0,24(a0)
    70c2:	0005                	c.nop	1
    70c4:	1500                	addi	s0,sp,672
    70c6:	05c8                	addi	a0,sp,708
    70c8:	0000                	unimp
    70ca:	0450040f          	0x450040f
    70ce:	0000                	unimp
    70d0:	0000a313          	slti	t1,ra,0
    70d4:	f800                	fsw	fs0,48(s0)
    70d6:	0005                	c.nop	1
    70d8:	1400                	addi	s0,sp,544
    70da:	046e                	slli	s0,s0,0x1b
    70dc:	0000                	unimp
    70de:	1114                	addi	a3,sp,160
    70e0:	0001                	nop
    70e2:	1400                	addi	s0,sp,544
    70e4:	05f8                	addi	a4,sp,716
    70e6:	0000                	unimp
    70e8:	6914                	flw	fa3,16(a0)
    70ea:	0000                	unimp
    70ec:	0000                	unimp
    70ee:	05cf040f          	0x5cf040f
    70f2:	0000                	unimp
    70f4:	05da040f          	0x5da040f
    70f8:	0000                	unimp
    70fa:	00009713          	slli	a4,ra,0x0
    70fe:	2200                	fld	fs0,0(a2)
    7100:	0006                	c.slli	zero,0x1
    7102:	1400                	addi	s0,sp,544
    7104:	046e                	slli	s0,s0,0x1b
    7106:	0000                	unimp
    7108:	1114                	addi	a3,sp,160
    710a:	0001                	nop
    710c:	1400                	addi	s0,sp,544
    710e:	00000097          	auipc	ra,0x0
    7112:	6914                	flw	fa3,16(a0)
    7114:	0000                	unimp
    7116:	0000                	unimp
    7118:	0604040f          	0x604040f
    711c:	0000                	unimp
    711e:	00006913          	ori	s2,zero,0
    7122:	3c00                	fld	fs0,56(s0)
    7124:	0006                	c.slli	zero,0x1
    7126:	1400                	addi	s0,sp,544
    7128:	046e                	slli	s0,s0,0x1b
    712a:	0000                	unimp
    712c:	1114                	addi	a3,sp,160
    712e:	0001                	nop
    7130:	0000                	unimp
    7132:	0628040f          	0x628040f
    7136:	0000                	unimp
    7138:	2c08                	fld	fa0,24(s0)
    713a:	0000                	unimp
    713c:	5200                	lw	s0,32(a2)
    713e:	0006                	c.slli	zero,0x1
    7140:	0900                	addi	s0,sp,144
    7142:	0070                	addi	a2,sp,12
    7144:	0000                	unimp
    7146:	0002                	c.slli64	zero
    7148:	2c08                	fld	fa0,24(s0)
    714a:	0000                	unimp
    714c:	6200                	flw	fs0,0(a2)
    714e:	0006                	c.slli	zero,0x1
    7150:	0900                	addi	s0,sp,144
    7152:	0070                	addi	a2,sp,12
    7154:	0000                	unimp
    7156:	0000                	unimp
    7158:	f805                	bnez	s0,7088 <__swhatbuf_r+0x48>
    715a:	0001                	nop
    715c:	0500                	addi	s0,sp,640
    715e:	0124                	addi	s1,sp,136
    7160:	0d1a                	slli	s10,s10,0x6
    7162:	19000003          	lb	zero,400(zero) # 190 <main+0x118>
    7166:	0648                	addi	a0,sp,772
    7168:	0000                	unimp
    716a:	050c                	addi	a1,sp,640
    716c:	0128                	addi	a0,sp,136
    716e:	a808                	fsd	fa0,16(s0)
    7170:	0006                	c.slli	zero,0x1
    7172:	1700                	addi	s0,sp,928
    7174:	079f 0000 2a05      	0x2a050000079f
    717a:	1101                	addi	sp,sp,-32
    717c:	06a8                	addi	a0,sp,840
    717e:	0000                	unimp
    7180:	1700                	addi	s0,sp,928
    7182:	0578                	addi	a4,sp,652
    7184:	0000                	unimp
    7186:	2b05                	jal	76b6 <__multiply+0x6e>
    7188:	0701                	addi	a4,a4,0
    718a:	0069                	c.nop	26
    718c:	0000                	unimp
    718e:	1704                	addi	s1,sp,928
    7190:	032c                	addi	a1,sp,392
    7192:	0000                	unimp
    7194:	2c05                	jal	73c4 <_Bfree+0x50>
    7196:	0b01                	addi	s6,s6,0
    7198:	06ae                	slli	a3,a3,0xb
    719a:	0000                	unimp
    719c:	0008                	0x8
    719e:	066f040f          	0x66f040f
    71a2:	0000                	unimp
    71a4:	0662040f          	0x662040f
    71a8:	0000                	unimp
    71aa:	8819                	andi	s0,s0,6
    71ac:	0001                	nop
    71ae:	0e00                	addi	s0,sp,784
    71b0:	4405                	li	s0,1
    71b2:	0801                	addi	a6,a6,0
    71b4:	06ed                	addi	a3,a3,27
    71b6:	0000                	unimp
    71b8:	00079417          	auipc	s0,0x79
    71bc:	0500                	addi	s0,sp,640
    71be:	0145                	addi	sp,sp,17
    71c0:	ed12                	fsw	ft4,152(sp)
    71c2:	0006                	c.slli	zero,0x1
    71c4:	0000                	unimp
    71c6:	0003b517          	auipc	a0,0x3b
    71ca:	0500                	addi	s0,sp,640
    71cc:	0146                	slli	sp,sp,0x11
    71ce:	ed12                	fsw	ft4,152(sp)
    71d0:	0006                	c.slli	zero,0x1
    71d2:	0600                	addi	s0,sp,768
    71d4:	00061217          	auipc	tp,0x61
    71d8:	0500                	addi	s0,sp,640
    71da:	3a120147          	fmsub.d	ft2,ft4,ft1,ft7,rne
    71de:	0000                	unimp
    71e0:	0c00                	addi	s0,sp,528
    71e2:	0800                	addi	s0,sp,16
    71e4:	003a                	c.slli	zero,0xe
    71e6:	0000                	unimp
    71e8:	06fd                	addi	a3,a3,31
    71ea:	0000                	unimp
    71ec:	7009                	c.lui	zero,0xfffe2
    71ee:	0000                	unimp
    71f0:	0200                	addi	s0,sp,256
    71f2:	1a00                	addi	s0,sp,304
    71f4:	05d0                	addi	a2,sp,708
    71f6:	0285                	addi	t0,t0,1
    71f8:	00081207          	0x81207
    71fc:	1700                	addi	s0,sp,928
    71fe:	0742                	slli	a4,a4,0x10
    7200:	0000                	unimp
    7202:	8705                	srai	a4,a4,0x1
    7204:	1802                	slli	a6,a6,0x20
    7206:	0070                	addi	a2,sp,12
    7208:	0000                	unimp
    720a:	1700                	addi	s0,sp,928
    720c:	0000066b          	0x66b
    7210:	8805                	andi	s0,s0,1
    7212:	1202                	slli	tp,tp,0x20
    7214:	05c2                	slli	a1,a1,0x10
    7216:	0000                	unimp
    7218:	1704                	addi	s1,sp,928
    721a:	01b1                	addi	gp,gp,12
    721c:	0000                	unimp
    721e:	8905                	andi	a0,a0,1
    7220:	1002                	c.slli	zero,0x20
    7222:	0812                	slli	a6,a6,0x4
    7224:	0000                	unimp
    7226:	1708                	addi	a0,sp,928
    7228:	050e                	slli	a0,a0,0x3
    722a:	0000                	unimp
    722c:	8a05                	andi	a2,a2,1
    722e:	1702                	slli	a4,a4,0x20
    7230:	000001a7          	0x1a7
    7234:	1724                	addi	s1,sp,936
    7236:	036d                	addi	t1,t1,27
    7238:	0000                	unimp
    723a:	8b05                	andi	a4,a4,1
    723c:	0f02                	c.slli64	t5
    723e:	0069                	c.nop	26
    7240:	0000                	unimp
    7242:	1748                	addi	a0,sp,932
    7244:	079a                	slli	a5,a5,0x6
    7246:	0000                	unimp
    7248:	8c05                	sub	s0,s0,s1
    724a:	2c02                	fld	fs8,0(sp)
    724c:	0062                	c.slli	zero,0x18
    724e:	0000                	unimp
    7250:	1750                	addi	a2,sp,932
    7252:	005e                	c.slli	zero,0x17
    7254:	0000                	unimp
    7256:	8d05                	sub	a0,a0,s1
    7258:	1a02                	slli	s4,s4,0x20
    725a:	06b4                	addi	a3,sp,840
    725c:	0000                	unimp
    725e:	1758                	addi	a4,sp,932
    7260:	02b9                	addi	t0,t0,14
    7262:	0000                	unimp
    7264:	8e05                	sub	a2,a2,s1
    7266:	1602                	slli	a2,a2,0x20
    7268:	0105                	addi	sp,sp,1
    726a:	0000                	unimp
    726c:	1768                	addi	a0,sp,940
    726e:	0678                	addi	a4,sp,780
    7270:	0000                	unimp
    7272:	8f05                	sub	a4,a4,s1
    7274:	1602                	slli	a2,a2,0x20
    7276:	0105                	addi	sp,sp,1
    7278:	0000                	unimp
    727a:	1770                	addi	a2,sp,940
    727c:	0041                	c.nop	16
    727e:	0000                	unimp
    7280:	9005                	srli	s0,s0,0x21
    7282:	1602                	slli	a2,a2,0x20
    7284:	0105                	addi	sp,sp,1
    7286:	0000                	unimp
    7288:	1778                	addi	a4,sp,940
    728a:	054a                	slli	a0,a0,0x12
    728c:	0000                	unimp
    728e:	9105                	srli	a0,a0,0x21
    7290:	1002                	c.slli	zero,0x20
    7292:	0822                	slli	a6,a6,0x8
    7294:	0000                	unimp
    7296:	1780                	addi	s0,sp,992
    7298:	00000063          	beqz	zero,7298 <_Balloc+0x10>
    729c:	9205                	srli	a2,a2,0x21
    729e:	1002                	c.slli	zero,0x20
    72a0:	0832                	slli	a6,a6,0xc
    72a2:	0000                	unimp
    72a4:	1788                	addi	a0,sp,992
    72a6:	000005f3          	0x5f3
    72aa:	9305                	srli	a4,a4,0x21
    72ac:	0f02                	c.slli64	t5
    72ae:	0069                	c.nop	26
    72b0:	0000                	unimp
    72b2:	17a0                	addi	s0,sp,1000
    72b4:	00c8                	addi	a0,sp,68
    72b6:	0000                	unimp
    72b8:	9405                	srai	s0,s0,0x21
    72ba:	1602                	slli	a2,a2,0x20
    72bc:	0105                	addi	sp,sp,1
    72be:	0000                	unimp
    72c0:	17a4                	addi	s1,sp,1000
    72c2:	02da                	slli	t0,t0,0x16
    72c4:	0000                	unimp
    72c6:	9505                	srai	a0,a0,0x21
    72c8:	1602                	slli	a2,a2,0x20
    72ca:	0105                	addi	sp,sp,1
    72cc:	0000                	unimp
    72ce:	17ac                	addi	a1,sp,1000
    72d0:	024a                	slli	tp,tp,0x12
    72d2:	0000                	unimp
    72d4:	9605                	srai	a2,a2,0x21
    72d6:	1602                	slli	a2,a2,0x20
    72d8:	0105                	addi	sp,sp,1
    72da:	0000                	unimp
    72dc:	17b4                	addi	a3,sp,1000
    72de:	03ca                	slli	t2,t2,0x12
    72e0:	0000                	unimp
    72e2:	9705                	srai	a4,a4,0x21
    72e4:	1602                	slli	a2,a2,0x20
    72e6:	0105                	addi	sp,sp,1
    72e8:	0000                	unimp
    72ea:	17bc                	addi	a5,sp,1000
    72ec:	02a8                	addi	a0,sp,328
    72ee:	0000                	unimp
    72f0:	9805                	andi	s0,s0,-31
    72f2:	1602                	slli	a2,a2,0x20
    72f4:	0105                	addi	sp,sp,1
    72f6:	0000                	unimp
    72f8:	17c4                	addi	s1,sp,996
    72fa:	0000042b          	0x42b
    72fe:	9905                	andi	a0,a0,-31
    7300:	0802                	c.slli64	a6
    7302:	0069                	c.nop	26
    7304:	0000                	unimp
    7306:	00cc                	addi	a1,sp,68
    7308:	c808                	sw	a0,16(s0)
    730a:	0005                	c.nop	1
    730c:	2200                	fld	fs0,0(a2)
    730e:	0008                	0x8
    7310:	0900                	addi	s0,sp,144
    7312:	0070                	addi	a2,sp,12
    7314:	0000                	unimp
    7316:	0019                	c.nop	6
    7318:	c808                	sw	a0,16(s0)
    731a:	0005                	c.nop	1
    731c:	3200                	fld	fs0,32(a2)
    731e:	0008                	0x8
    7320:	0900                	addi	s0,sp,144
    7322:	0070                	addi	a2,sp,12
    7324:	0000                	unimp
    7326:	c8080007          	0xc8080007
    732a:	0005                	c.nop	1
    732c:	4200                	lw	s0,0(a2)
    732e:	0008                	0x8
    7330:	0900                	addi	s0,sp,144
    7332:	0070                	addi	a2,sp,12
    7334:	0000                	unimp
    7336:	f01a0017          	auipc	zero,0xf01a0
    733a:	9e05                	0x9e05
    733c:	0702                	c.slli64	a4
    733e:	0869                	addi	a6,a6,26
    7340:	0000                	unimp
    7342:	00018117          	auipc	sp,0x18
    7346:	0500                	addi	s0,sp,640
    7348:	02a1                	addi	t0,t0,8
    734a:	0008691b          	0x8691b
    734e:	0000                	unimp
    7350:	0007d717          	auipc	a4,0x7d
    7354:	0500                	addi	s0,sp,640
    7356:	02a2                	slli	t0,t0,0x8
    7358:	7918                	flw	fa4,48(a0)
    735a:	0008                	0x8
    735c:	7800                	flw	fs0,48(s0)
    735e:	0800                	addi	s0,sp,16
    7360:	00000307          	0x307
    7364:	0879                	addi	a6,a6,30
    7366:	0000                	unimp
    7368:	7009                	c.lui	zero,0xfffe2
    736a:	0000                	unimp
    736c:	1d00                	addi	s0,sp,688
    736e:	0800                	addi	s0,sp,16
    7370:	0070                	addi	a2,sp,12
    7372:	0000                	unimp
    7374:	0889                	addi	a7,a7,2
    7376:	0000                	unimp
    7378:	7009                	c.lui	zero,0xfffe2
    737a:	0000                	unimp
    737c:	1d00                	addi	s0,sp,688
    737e:	1b00                	addi	s0,sp,432
    7380:	05f0                	addi	a2,sp,716
    7382:	ae030283          	lb	t0,-1312(t1) # 7cab2 <_data_lma+0x7249a>
    7386:	0008                	0x8
    7388:	1c00                	addi	s0,sp,560
    738a:	0705                	addi	a4,a4,1
    738c:	0000                	unimp
    738e:	9a05                	andi	a2,a2,-31
    7390:	0b02                	c.slli64	s6
    7392:	06fd                	addi	a3,a3,31
    7394:	0000                	unimp
    7396:	1d1c                	addi	a5,sp,688
    7398:	0005                	c.nop	1
    739a:	0500                	addi	s0,sp,640
    739c:	420b02a3          	sb	zero,1061(s6) # 41459 <_data_lma+0x36e41>
    73a0:	0008                	0x8
    73a2:	0000                	unimp
    73a4:	c808                	sw	a0,16(s0)
    73a6:	0005                	c.nop	1
    73a8:	be00                	fsd	fs0,56(a2)
    73aa:	0008                	0x8
    73ac:	0900                	addi	s0,sp,144
    73ae:	0070                	addi	a2,sp,12
    73b0:	0000                	unimp
    73b2:	0018                	0x18
    73b4:	a51d                	j	79da <__lshift+0x92>
    73b6:	0f000007          	0xf000007
    73ba:	be04                	fsd	fs1,56(a2)
    73bc:	0008                	0x8
    73be:	1e00                	addi	s0,sp,816
    73c0:	08d4                	addi	a3,sp,84
    73c2:	0000                	unimp
    73c4:	6e14                	flw	fa3,24(a2)
    73c6:	0004                	0x4
    73c8:	0000                	unimp
    73ca:	08c9040f          	0x8c9040f
    73ce:	0000                	unimp
    73d0:	0191040f          	0x191040f
    73d4:	0000                	unimp
    73d6:	eb1e                	fsw	ft7,148(sp)
    73d8:	0008                	0x8
    73da:	1400                	addi	s0,sp,544
    73dc:	0069                	c.nop	26
    73de:	0000                	unimp
    73e0:	0f00                	addi	s0,sp,912
    73e2:	f104                	fsw	fs1,32(a0)
    73e4:	0008                	0x8
    73e6:	0f00                	addi	s0,sp,912
    73e8:	e004                	fsw	fs1,0(s0)
    73ea:	0008                	0x8
    73ec:	0800                	addi	s0,sp,16
    73ee:	0662                	slli	a2,a2,0x18
    73f0:	0000                	unimp
    73f2:	00000907          	0x907
    73f6:	7009                	c.lui	zero,0xfffe2
    73f8:	0000                	unimp
    73fa:	0200                	addi	s0,sp,256
    73fc:	1f00                	addi	s0,sp,944
    73fe:	000004eb          	0x4eb
    7402:	3305                	jal	7122 <__smakebuf_r+0x52>
    7404:	046e1703          	lh	a4,70(t3) # 650a4 <_data_lma+0x5aa8c>
    7408:	0000                	unimp
    740a:	e41f 0004 0500      	0x5000004e41f
    7410:	0334                	addi	a3,sp,392
    7412:	741d                	lui	s0,0xfffe7
    7414:	0004                	0x4
    7416:	0300                	addi	s0,sp,384
    7418:	0c6d                	addi	s8,s8,27
    741a:	0000                	unimp
    741c:	56143c07          	fld	fs8,1377(s0) # fffe7561 <__freertos_irq_stack_top+0xfefd7561>
    7420:	0000                	unimp
    7422:	0a00                	addi	s0,sp,272
    7424:	080c                	addi	a1,sp,16
    7426:	0909                	addi	s2,s2,2
    7428:	095c                	addi	a5,sp,148
    742a:	0000                	unimp
    742c:	000c760b          	0xc760b
    7430:	0800                	addi	s0,sp,16
    7432:	090a                	slli	s2,s2,0x2
    7434:	0069                	c.nop	26
    7436:	0000                	unimp
    7438:	0e00                	addi	s0,sp,784
    743a:	6f6c                	flw	fa1,92(a4)
    743c:	0800                	addi	s0,sp,16
    743e:	0069090b          	0x69090b
    7442:	0000                	unimp
    7444:	0e04                	addi	s1,sp,784
    7446:	6968                	flw	fa0,84(a0)
    7448:	0800                	addi	s0,sp,16
    744a:	090c                	addi	a1,sp,144
    744c:	0069                	c.nop	26
    744e:	0000                	unimp
    7450:	0008                	0x8
    7452:	000c6103          	0xc6103
    7456:	0800                	addi	s0,sp,16
    7458:	020d                	addi	tp,tp,3
    745a:	092d                	addi	s2,s2,11
    745c:	0000                	unimp
    745e:	7220                	flw	fs0,96(a2)
    7460:	000a                	c.slli	zero,0x2
    7462:	0100                	addi	s0,sp,128
    7464:	0a0d                	addi	s4,s4,3
    7466:	0921                	addi	s2,s2,8
    7468:	0000                	unimp
    746a:	2f30                	fld	fa2,88(a4)
    746c:	0000                	unimp
    746e:	003c                	addi	a5,sp,8
    7470:	0000                	unimp
    7472:	9c01                	0x9c01
    7474:	0000098f          	0x98f
    7478:	4e21                	li	t3,8
    747a:	0009                	c.nop	2
    747c:	0100                	addi	s0,sp,128
    747e:	0e0e                	slli	t3,t3,0x3
    7480:	0921                	addi	s2,s2,8
    7482:	0000                	unimp
    7484:	2200                	fld	fs0,0(a2)
    7486:	00000c7b          	0xc7b
    748a:	0901                	addi	s2,s2,0
    748c:	0006                	c.slli	zero,0x1
    748e:	0000                	unimp
    7490:	0000                	unimp
    7492:	0000                	unimp
    7494:	0100                	addi	s0,sp,128
    7496:	009c                	addi	a5,sp,64
    7498:	027f                	0x27f
    749a:	0000                	unimp
    749c:	0004                	0x4
    749e:	15b0                	addi	a2,sp,744
    74a0:	0000                	unimp
    74a2:	0104                	addi	s1,sp,128
    74a4:	0686                	slli	a3,a3,0x1
    74a6:	0000                	unimp
    74a8:	9a0c                	0x9a0c
    74aa:	000c                	0xc
    74ac:	5b00                	lw	s0,48(a4)
    74ae:	0002                	c.slli64	zero
    74b0:	8800                	0x8800
    74b2:	0009                	c.nop	2
    74b4:	0000                	unimp
    74b6:	0000                	unimp
    74b8:	fd00                	fsw	fs0,56(a0)
    74ba:	007d                	c.nop	31
    74bc:	0200                	addi	s0,sp,256
    74be:	020c                	addi	a1,sp,256
    74c0:	00560903          	lb	s2,5(a2) # 3cf91 <_data_lma+0x32979>
    74c4:	0000                	unimp
    74c6:	000c7603          	0xc7603
    74ca:	0200                	addi	s0,sp,256
    74cc:	0905                	addi	s2,s2,1
    74ce:	0056                	c.slli	zero,0x15
    74d0:	0000                	unimp
    74d2:	0300                	addi	s0,sp,384
    74d4:	044a                	slli	s0,s0,0x12
    74d6:	0000                	unimp
    74d8:	0602                	c.slli64	a2
    74da:	5609                	li	a2,-30
    74dc:	0000                	unimp
    74de:	0400                	addi	s0,sp,512
    74e0:	0000c303          	lbu	t1,0(ra) # 710e <__smakebuf_r+0x3e>
    74e4:	0200                	addi	s0,sp,256
    74e6:	00560907          	0x560907
    74ea:	0000                	unimp
    74ec:	0008                	0x8
    74ee:	0404                	addi	s1,sp,512
    74f0:	6905                	lui	s2,0x1
    74f2:	746e                	flw	fs0,248(sp)
    74f4:	0500                	addi	s0,sp,640
    74f6:	0cc4                	addi	s1,sp,596
    74f8:	0000                	unimp
    74fa:	0802                	c.slli64	a6
    74fc:	2502                	fld	fa0,0(sp)
    74fe:	0000                	unimp
    7500:	0500                	addi	s0,sp,640
    7502:	0cce                	slli	s9,s9,0x13
    7504:	0000                	unimp
    7506:	0b02                	c.slli64	s6
    7508:	00007517          	auipc	a0,0x7
    750c:	0600                	addi	s0,sp,768
    750e:	0801                	addi	a6,a6,0
    7510:	05c4                	addi	s1,sp,708
    7512:	0000                	unimp
    7514:	00044907          	flq	fs2,0(s0)
    7518:	0100                	addi	s0,sp,128
    751a:	0526                	slli	a0,a0,0x9
    751c:	0056                	c.slli	zero,0x15
    751e:	0000                	unimp
    7520:	2f6c                	fld	fa1,216(a4)
    7522:	0000                	unimp
    7524:	0030                	addi	a2,sp,8
    7526:	0000                	unimp
    7528:	9c01                	0x9c01
    752a:	0105                	addi	sp,sp,1
    752c:	0000                	unimp
    752e:	6608                	flw	fa0,8(a2)
    7530:	0064                	addi	s1,sp,12
    7532:	2601                	jal	7832 <__pow5mult+0x26>
    7534:	5610                	lw	a2,40(a2)
    7536:	0000                	unimp
    7538:	6100                	flw	fs0,0(a0)
    753a:	005d                	c.nop	23
    753c:	0900                	addi	s0,sp,144
    753e:	0cda                	slli	s9,s9,0x16
    7540:	0000                	unimp
    7542:	2601                	jal	7842 <__pow5mult+0x36>
    7544:	051a                	slli	a0,a0,0x6
    7546:	0001                	nop
    7548:	8200                	0x8200
    754a:	005d                	c.nop	23
    754c:	0a00                	addi	s0,sp,272
    754e:	0730                	addi	a2,sp,904
    7550:	0000                	unimp
    7552:	2601                	jal	7852 <__pow5mult+0x46>
    7554:	00005627          	0x5627
    7558:	0100                	addi	s0,sp,128
    755a:	0b5c                	addi	a5,sp,404
    755c:	0958                	addi	a4,sp,148
    755e:	0000                	unimp
    7560:	690c                	flw	fa1,16(a0)
    7562:	0100                	addi	s0,sp,128
    7564:	00560e27          	0x560e27
    7568:	0000                	unimp
    756a:	00005da3          	0x5da3
    756e:	0a0d                	addi	s4,s4,3
    7570:	0002                	c.slli64	zero
    7572:	7400                	flw	fs0,40(s0)
    7574:	7000002f          	0x7000002f
    7578:	0009                	c.nop	2
    757a:	0100                	addi	s0,sp,128
    757c:	0928                	addi	a0,sp,152
    757e:	170e                	slli	a4,a4,0x23
    7580:	0002                	c.slli64	zero
    7582:	ec00                	fsw	fs0,24(s0)
    7584:	005d                	c.nop	23
    7586:	0f00                	addi	s0,sp,912
    7588:	024a                	slli	tp,tp,0x12
    758a:	0000                	unimp
    758c:	0970                	addi	a2,sp,156
    758e:	0000                	unimp
    7590:	2210                	fld	fa2,0(a2)
    7592:	0002                	c.slli64	zero
    7594:	ff00                	fsw	fs0,56(a4)
    7596:	005d                	c.nop	23
    7598:	0000                	unimp
    759a:	0000                	unimp
    759c:	1100                	addi	s0,sp,160
    759e:	0b04                	addi	s1,sp,400
    75a0:	0001                	nop
    75a2:	0600                	addi	s0,sp,768
    75a4:	0801                	addi	a6,a6,0
    75a6:	05cd                	addi	a1,a1,19
    75a8:	0000                	unimp
    75aa:	000c8707          	0xc8707
    75ae:	0100                	addi	s0,sp,128
    75b0:	051c                	addi	a5,sp,640
    75b2:	0056                	c.slli	zero,0x15
	...
    75bc:	0000                	unimp
    75be:	9c01                	0x9c01
    75c0:	017e                	slli	sp,sp,0x1f
    75c2:	0000                	unimp
    75c4:	ee09                	bnez	a2,75de <__lo0bits+0x7e>
    75c6:	000c                	0xc
    75c8:	0100                	addi	s0,sp,128
    75ca:	141c                	addi	a5,sp,544
    75cc:	0105                	addi	sp,sp,1
    75ce:	0000                	unimp
    75d0:	5e21                	li	t3,-24
    75d2:	0000                	unimp
    75d4:	0009200b          	0x9200b
    75d8:	0c00                	addi	s0,sp,528
    75da:	0069                	c.nop	26
    75dc:	1d01                	addi	s10,s10,-32
    75de:	560e                	lw	a2,224(sp)
    75e0:	0000                	unimp
    75e2:	4200                	lw	s0,0(a2)
    75e4:	005e                	c.slli	zero,0x17
    75e6:	0d00                	addi	s0,sp,656
    75e8:	017e                	slli	sp,sp,0x1f
    75ea:	0000                	unimp
    75ec:	0000                	unimp
    75ee:	0000                	unimp
    75f0:	0938                	addi	a4,sp,152
    75f2:	0000                	unimp
    75f4:	1e01                	addi	t3,t3,-32
    75f6:	02690f13          	addi	t5,s2,38 # 1026 <__stack_size+0x26>
    75fa:	0000                	unimp
    75fc:	0938                	addi	a4,sp,152
    75fe:	0000                	unimp
    7600:	9010                	0x9010
    7602:	0001                	nop
    7604:	6c00                	flw	fs0,24(s0)
    7606:	005e                	c.slli	zero,0x17
    7608:	1000                	addi	s0,sp,32
    760a:	019c                	addi	a5,sp,192
    760c:	0000                	unimp
    760e:	5e8e                	lw	t4,224(sp)
    7610:	0000                	unimp
    7612:	0000                	unimp
    7614:	0000                	unimp
    7616:	bb12                	fsd	ft4,432(sp)
    7618:	000c                	0xc
    761a:	0100                	addi	s0,sp,128
    761c:	0612                	slli	a2,a2,0x4
    761e:	0069                	c.nop	26
    7620:	0000                	unimp
    7622:	aa01                	j	7732 <__multiply+0xea>
    7624:	0001                	nop
    7626:	1300                	addi	s0,sp,416
    7628:	f314                	fsw	fa3,32(a4)
    762a:	000c                	0xc
    762c:	0100                	addi	s0,sp,128
    762e:	0d14                	addi	a3,sp,656
    7630:	0056                	c.slli	zero,0x15
    7632:	0000                	unimp
    7634:	d314                	sw	a3,32(a4)
    7636:	000c                	0xc
    7638:	0100                	addi	s0,sp,128
    763a:	0d15                	addi	s10,s10,5
    763c:	0056                	c.slli	zero,0x15
    763e:	0000                	unimp
    7640:	0000                	unimp
    7642:	e215                	bnez	a2,7666 <__multiply+0x1e>
    7644:	000c                	0xc
    7646:	0100                	addi	s0,sp,128
    7648:	060d                	addi	a2,a2,3
	...
    7652:	9c01                	0x9c01
    7654:	020a                	slli	tp,tp,0x2
    7656:	0000                	unimp
    7658:	7316                	flw	ft6,100(sp)
    765a:	0100                	addi	s0,sp,128
    765c:	180d                	addi	a6,a6,-29
    765e:	0105                	addi	sp,sp,1
    7660:	0000                	unimp
    7662:	5a01                	li	s4,-32
    7664:	0008d80b          	0x8d80b
    7668:	0c00                	addi	s0,sp,528
    766a:	0069                	c.nop	26
    766c:	0e01                	addi	t3,t3,0
    766e:	560e                	lw	a2,224(sp)
    7670:	0000                	unimp
    7672:	b000                	fsd	fs0,32(s0)
    7674:	005e                	c.slli	zero,0x17
    7676:	0d00                	addi	s0,sp,656
    7678:	020a                	slli	tp,tp,0x2
    767a:	0000                	unimp
    767c:	0000                	unimp
    767e:	0000                	unimp
    7680:	08f0                	addi	a2,sp,92
    7682:	0000                	unimp
    7684:	0f01                	addi	t5,t5,0
    7686:	1709                	addi	a4,a4,-30
    7688:	00000217          	auipc	tp,0x0
    768c:	00024a0f          	0x24a0f
    7690:	f000                	fsw	fs0,32(s0)
    7692:	0008                	0x8
    7694:	1000                	addi	s0,sp,32
    7696:	0222                	slli	tp,tp,0x8
    7698:	0000                	unimp
    769a:	5ee5                	li	t4,-7
    769c:	0000                	unimp
    769e:	0000                	unimp
    76a0:	0000                	unimp
    76a2:	b118                	fsd	fa4,32(a0)
    76a4:	000c                	0xc
    76a6:	0100                	addi	s0,sp,128
    76a8:	30010603          	lb	a2,768(sp) # 1f642 <_data_lma+0x1502a>
    76ac:	0002                	c.slli64	zero
    76ae:	1900                	addi	s0,sp,176
    76b0:	03010063          	beq	sp,a6,76d0 <__multiply+0x88>
    76b4:	0b15                	addi	s6,s6,5
    76b6:	0001                	nop
    76b8:	1300                	addi	s0,sp,416
    76ba:	9014                	0x9014
    76bc:	000c                	0xc
    76be:	0100                	addi	s0,sp,128
    76c0:	0d06                	slli	s10,s10,0x1
    76c2:	0056                	c.slli	zero,0x15
    76c4:	0000                	unimp
    76c6:	0000                	unimp
    76c8:	0a1a                	slli	s4,s4,0x6
    76ca:	0002                	c.slli64	zero
	...
    76d4:	0100                	addi	s0,sp,128
    76d6:	5a9c                	lw	a5,48(a3)
    76d8:	0002                	c.slli64	zero
    76da:	1b00                	addi	s0,sp,432
    76dc:	00000217          	auipc	tp,0x0
    76e0:	5a01                	li	s4,-32
    76e2:	0008c00b          	0x8c00b
    76e6:	1000                	addi	s0,sp,32
    76e8:	0222                	slli	tp,tp,0x8
    76ea:	0000                	unimp
    76ec:	00005f07          	0x5f07
    76f0:	0000                	unimp
    76f2:	7e1c                	flw	fa5,56(a2)
    76f4:	0001                	nop
	...
    76fe:	0100                	addi	s0,sp,128
    7700:	0b9c                	addi	a5,sp,464
    7702:	0908                	addi	a0,sp,144
    7704:	0000                	unimp
    7706:	9010                	0x9010
    7708:	0001                	nop
    770a:	2900                	fld	fs0,16(a0)
    770c:	005f 1000 019c      	0x19c1000005f
    7712:	0000                	unimp
    7714:	00005f4b          	fnmsub.s	ft10,ft0,ft0,ft0,unknown
    7718:	0000                	unimp
    771a:	2200                	fld	fs0,0(a2)
    771c:	0000                	unimp
    771e:	0200                	addi	s0,sp,256
    7720:	5300                	lw	s0,32(a4)
    7722:	04000017          	auipc	zero,0x4000
    7726:	9d01                	0x9d01
    7728:	0081                	addi	ra,ra,0
    772a:	0000                	unimp
    772c:	0000                	unimp
    772e:	7800                	flw	fs0,48(s0)
    7730:	0000                	unimp
    7732:	fd00                	fsw	fs0,56(a0)
    7734:	000c                	0xc
    7736:	5b00                	lw	s0,48(a4)
    7738:	0002                	c.slli64	zero
    773a:	1000                	addi	s0,sp,32
    773c:	000d                	c.nop	3
    773e:	0100                	addi	s0,sp,128
    7740:	80              	Address 0x0000000000007740 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
	la gp, __global_pointer$
       0:	1101                	addi	sp,sp,-32
       2:	2501                	jal	602 <main+0x58a>
       4:	130e                	slli	t1,t1,0x23
       6:	1b0e030b          	0x1b0e030b
	la sp, _sp 
       a:	550e                	lw	a0,224(sp)
       c:	10011117          	auipc	sp,0x10011
	la a0, _data_lma 
      10:	02000017          	auipc	zero,0x2000
      14:	0024                	addi	s1,sp,8
      16:	0b3e0b0b          	0xb3e0b0b
	la a1, _data
      1a:	00000e03          	lb	t3,0(zero) # 0 <_start>
      1e:	0b002403          	lw	s0,176(zero) # b0 <main+0x38>
	la a2, _edata
      22:	030b3e0b          	0x30b3e0b
      26:	0008                	0x8
	bgeu a1, a2, 2f
      28:	0400                	addi	s0,sp,512
      2a:	0016                	c.slli	zero,0x5
	lw t0, (a0)
      2c:	0b3a0e03          	lb	t3,179(s4) # 5a0f5 <_data_lma+0x4fadd>
	sw t0, (a1)
      30:	0b39053b          	0xb39053b
	lw t1, (a1)
      34:	1349                	addi	t1,t1,-14
      36:	0000                	unimp
	addi a0, a0, 4
      38:	1605                	addi	a2,a2,-31
      3a:	0300                	addi	s0,sp,384
	addi a1, a1, 4
      3c:	3a0e                	fld	fs4,224(sp)
      3e:	390b3b0b          	0x390b3b0b
	bltu a1, a2, 1b
      42:	0013490b          	0x13490b
	la a0, __bss_start
      46:	0600                	addi	s0,sp,768
      48:	0b0b0117          	auipc	sp,0xb0b0
	la a1, _end
      4c:	0b3a                	slli	s6,s6,0xe
      4e:	0b390b3b          	0xb390b3b
      52:	1301                	addi	t1,t1,-32
	bgeu a0, a1, 2f
      54:	0000                	unimp
      56:	03000d07          	0x3000d07
	sw zero, (a0)
      5a:	3a0e                	fld	fs4,224(sp)
	addi a0, a0, 4
      5c:	390b3b0b          	0x390b3b0b
	bltu a0, a1, 1b
      60:	0013490b          	0x13490b
    li x31,0xa0
      64:	0800                	addi	s0,sp,16
      66:	0101                	addi	sp,sp,0
    call main
      68:	1349                	addi	t1,t1,-14
      6a:	1301                	addi	t1,t1,-32
      6c:	0000                	unimp
      6e:	2109                	jal	470 <main+0x3f8>
    li x31,0xaa
      70:	4900                	lw	s0,16(a0)
      72:	000b2f13          	slti	t5,s6,0
    j loop
      76:	0a00                	addi	s0,sp,272
{
      78:	0b0b0113          	addi	sp,s6,176
    portable_init(&(results[0].port), &argc, argv);
      7c:	0b3a                	slli	s6,s6,0xe
      7e:	0b390b3b          	0xb390b3b
{
      82:	1301                	addi	t1,t1,-32
      84:	0000                	unimp
      86:	03000d0b          	0x3000d0b
      8a:	3a0e                	fld	fs4,224(sp)
      8c:	390b3b0b          	0x390b3b0b
      90:	3813490b          	0x3813490b
      94:	0c00000b          	0xc00000b
      98:	0b0b000f          	0xb0b000f
      9c:	0000                	unimp
      9e:	130d                	addi	t1,t1,-29
      a0:	0301                	addi	t1,t1,0
      a2:	0b0e                	slli	s6,s6,0x3
      a4:	3b0b3a0b          	0x3b0b3a0b
      a8:	010b390b          	0x10b390b
      ac:	0e000013          	li	zero,224
      b0:	000d                	c.nop	3
      b2:	0b3a0803          	lb	a6,179(s4)
      b6:	0b390b3b          	0xb390b3b
      ba:	1349                	addi	t1,t1,-14
    portable_init(&(results[0].port), &argc, argv);
      bc:	0b38                	addi	a4,sp,408
      be:	0000                	unimp
      c0:	0b000f0f          	0xb000f0f
      c4:	0013490b          	0x13490b
      c8:	1000                	addi	s0,sp,32
      ca:	0e030113          	addi	sp,t1,224
{
      ce:	0b3a050b          	0xb3a050b
    portable_init(&(results[0].port), &argc, argv);
      d2:	0b390b3b          	0xb390b3b
      d6:	1301                	addi	t1,t1,-32
      d8:	0000                	unimp
      da:	0d11                	addi	s10,s10,4
      dc:	0300                	addi	s0,sp,384
      de:	3a0e                	fld	fs4,224(sp)
    results[0].seed1      = get_seed(1);
      e0:	390b3b0b          	0x390b3b0b
      e4:	3813490b          	0x3813490b
      e8:	0005                	c.nop	1
      ea:	1200                	addi	s0,sp,288
      ec:	0015                	c.nop	5
      ee:	00001927          	0x1927
    results[0].seed2      = get_seed(2);
      f2:	27011513          	0x27011513
      f6:	4919                	li	s2,6
      f8:	00130113          	addi	sp,t1,1
      fc:	1400                	addi	s0,sp,544
      fe:	0005                	c.nop	1
    results[0].seed3      = get_seed(3);
     100:	1349                	addi	t1,t1,-14
     102:	0000                	unimp
     104:	2615                	jal	428 <main+0x3b0>
     106:	4900                	lw	s0,16(a0)
     108:	16000013          	li	zero,352
     10c:	0e030113          	addi	sp,t1,224
    results[0].iterations = get_seed_32(4);
     110:	0b3a050b          	0xb3a050b
     114:	0b39053b          	0xb39053b
     118:	1301                	addi	t1,t1,-32
     11a:	0000                	unimp
     11c:	03000d17          	auipc	s10,0x3000
    results[0].execs = get_seed_32(5);
     120:	3a0e                	fld	fs4,224(sp)
     122:	39053b0b          	0x39053b0b
     126:	3813490b          	0x3813490b
     12a:	1800000b          	0x1800000b
    if (results[0].execs == 0)
     12e:	000d                	c.nop	3
    results[0].execs = get_seed_32(5);
     130:	0b3a0e03          	lb	t3,179(s4)
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
     134:	0b39053b          	0xb39053b
     138:	1349                	addi	t1,t1,-14
     13a:	0538                	addi	a4,sp,648
     13c:	0000                	unimp
     13e:	1319                	addi	t1,t1,-26
     140:	0301                	addi	t1,t1,0
     142:	0b0e                	slli	s6,s6,0x3
     144:	3b0b3a0b          	0x3b0b3a0b
     148:	3905                	jal	fffffd78 <__freertos_irq_stack_top+0xfefefd78>
     14a:	0013010b          	0x13010b
     14e:	1a00                	addi	s0,sp,304
     150:	0b0b0113          	addi	sp,s6,176
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     154:	0b3a                	slli	s6,s6,0xe
     156:	0b39053b          	0xb39053b
     15a:	1301                	addi	t1,t1,-32
        && (results[0].seed3 == 0))
     15c:	0000                	unimp
     15e:	0b01171b          	0xb01171b
     162:	3b0b3a0b          	0x3b0b3a0b
     166:	3905                	jal	fffffd96 <__freertos_irq_stack_top+0xfefefd96>
        results[0].seed1 = 0x3415;
     168:	0013010b          	0x13010b
     16c:	1c00                	addi	s0,sp,560
     16e:	000d                	c.nop	3
     170:	0b3a0e03          	lb	t3,179(s4)
     174:	0b39053b          	0xb39053b
        results[0].seed3 = 0x66;
     178:	1349                	addi	t1,t1,-14
     17a:	0000                	unimp
     17c:	131d                	addi	t1,t1,-25
     17e:	0300                	addi	s0,sp,384
        if ((1 << (ee_u32)i) & results[0].execs)
     180:	3c0e                	fld	fs8,224(sp)
     182:	0019                	c.nop	6
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     184:	1e00                	addi	s0,sp,816
     186:	0115                	addi	sp,sp,5
     188:	13011927          	0x13011927
     18c:	0000                	unimp
     18e:	341f 0300 3a0e      	0x3a0e0300341f
     194:	39053b0b          	0x39053b0b
        if ((1 << (ee_u32)i) & results[0].execs)
     198:	3f13490b          	0x3f13490b
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     19c:	3c19                	jal	fffffbb2 <__freertos_irq_stack_top+0xfefefbb2>
     19e:	0019                	c.nop	6
        if ((1 << (ee_u32)i) & results[0].execs)
     1a0:	2000                	fld	fs0,0(s0)
     1a2:	0034                	addi	a3,sp,8
            num_algorithms++;
     1a4:	0b3a0e03          	lb	t3,179(s4)
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1a8:	0b390b3b          	0xb390b3b
     1ac:	1349                	addi	t1,t1,-14
     1ae:	193c193f 2e210000 	0x2e210000193c193f
        if ((1 << (ee_u32)i) & results[0].execs)
     1b6:	3f01                	jal	c6 <main+0x4e>
            num_algorithms++;
     1b8:	0319                	addi	t1,t1,6
     1ba:	3a0e                	fld	fs4,224(sp)
        if ((1 << (ee_u32)i) & results[0].execs)
     1bc:	39053b0b          	0x39053b0b
            num_algorithms++;
     1c0:	4919270b          	0x4919270b
     1c4:	010b2013          	slti	zero,s6,16
     1c8:	22000013          	li	zero,544
        results[i].size = results[i].size / num_algorithms;
     1cc:	0005                	c.nop	1
     1ce:	0b3a0e03          	lb	t3,179(s4)
     1d2:	0b39053b          	0xb39053b
     1d6:	1349                	addi	t1,t1,-14
        if ((1 << (ee_u32)i) & results[0].execs)
     1d8:	0000                	unimp
     1da:	03000523          	sb	a6,42(zero) # 2a <_start+0x2a>
        results[i].size = results[i].size / num_algorithms;
     1de:	3a08                	fld	fa0,48(a2)
        if ((1 << (ee_u32)i) & results[0].execs)
     1e0:	39053b0b          	0x39053b0b
     1e4:	0013490b          	0x13490b
     1e8:	2400                	fld	fs0,8(s0)
     1ea:	0034                	addi	a3,sp,8
        if (results[i].execs & ID_LIST)
     1ec:	0b3a0803          	lb	a6,179(s4)
        if (results[i].execs & ID_MATRIX)
     1f0:	0b39053b          	0xb39053b
        if (results[i].execs & ID_STATE)
     1f4:	1349                	addi	t1,t1,-14
     1f6:	0000                	unimp
     1f8:	3425                	jal	fffffc20 <__freertos_irq_stack_top+0xfefefc20>
     1fa:	0300                	addi	s0,sp,384
            core_init_state(
     1fc:	3a0e                	fld	fs4,224(sp)
     1fe:	39053b0b          	0x39053b0b
     202:	0013490b          	0x13490b
                results[0].size, results[i].seed1, results[i].memblock[3]);
     206:	2600                	fld	fs0,8(a2)
            core_init_state(
     208:	012e                	slli	sp,sp,0xb
     20a:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
     212:	0b39                	addi	s6,s6,14
     214:	13491927          	0x13491927
     218:	0111                	addi	sp,sp,4
     21a:	0612                	slli	a2,a2,0x4
     21c:	1840                	addi	s0,sp,52
     21e:	01194297          	auipc	t0,0x1194
     222:	27000013          	li	zero,624
     226:	0005                	c.nop	1
    if (results[0].iterations == 0)
     228:	0b3a0e03          	lb	t3,179(s4)
     22c:	0b390b3b          	0xb390b3b
        while (secs_passed < (secs_ret)1)
     230:	1349                	addi	t1,t1,-14
     232:	1702                	slli	a4,a4,0x20
     234:	0000                	unimp
     236:	3428                	fld	fa0,104(s0)
     238:	0300                	addi	s0,sp,384
     23a:	3a0e                	fld	fs4,224(sp)
        results[0].iterations = 1;
     23c:	390b3b0b          	0x390b3b0b
     240:	1c13490b          	0x1c13490b
        crc      = core_bench_list(res, 1);
     244:	2900000b          	0x2900000b
     248:	0034                	addi	a3,sp,8
     24a:	0b3a0e03          	lb	t3,179(s4)
     24e:	0b390b3b          	0xb390b3b
     252:	1349                	addi	t1,t1,-14
     254:	1702                	slli	a4,a4,0x20
     256:	0000                	unimp
     258:	342a                	fld	fs0,168(sp)
     25a:	0300                	addi	s0,sp,384
            results[0].iterations *= 10;
     25c:	3a0e                	fld	fs4,224(sp)
     25e:	39053b0b          	0x39053b0b
    for (i = 0; i < iterations; i++)
     262:	0213490b          	0x213490b
            results[0].iterations *= 10;
     266:	2b000017          	auipc	zero,0x2b000
     26a:	0034                	addi	a3,sp,8
     26c:	0b3a0803          	lb	a6,179(s4)
     270:	0b39053b          	0xb39053b
            start_time();
     274:	1349                	addi	t1,t1,-14
     276:	1702                	slli	a4,a4,0x20
     278:	0000                	unimp
     27a:	0b2c                	addi	a1,sp,408
    ee_u32        iterations = res->iterations;
     27c:	5501                	li	a0,-32
     27e:	00130117          	auipc	sp,0x130
    res->crc                 = 0;
     282:	2d00                	fld	fs0,24(a0)
     284:	011d                	addi	sp,sp,7
     286:	1331                	addi	t1,t1,-20
    for (i = 0; i < iterations; i++)
     288:	0152                	slli	sp,sp,0x14
     28a:	1755                	addi	a4,a4,-11
        crc      = core_bench_list(res, 1);
     28c:	0b58                	addi	a4,sp,404
     28e:	0559                	addi	a0,a0,22
     290:	00000b57          	0xb57
     294:	052e                	slli	a0,a0,0xb
     296:	3100                	fld	fs0,32(a0)
     298:	00170213          	addi	tp,a4,1 # 84351 <_data_lma+0x79d39>
        res->crc = crcu16(crc, res->crc);
     29c:	2f00                	fld	fs0,24(a4)
     29e:	1755010b          	0x1755010b
     2a2:	0000                	unimp
     2a4:	3430                	fld	fa2,104(s0)
     2a6:	3100                	fld	fs0,32(a0)
     2a8:	00170213          	addi	tp,a4,1
        crc      = core_bench_list(res, -1);
     2ac:	3100                	fld	fs0,32(a0)
     2ae:	011d                	addi	sp,sp,7
     2b0:	1331                	addi	t1,t1,-20
     2b2:	0152                	slli	sp,sp,0x14
     2b4:	1755                	addi	a4,a4,-11
     2b6:	0b58                	addi	a4,sp,404
     2b8:	0559                	addi	a0,a0,22
     2ba:	13010b57          	0x13010b57
        res->crc = crcu16(crc, res->crc);
     2be:	0000                	unimp
     2c0:	0532                	slli	a0,a0,0xc
     2c2:	3100                	fld	fs0,32(a0)
     2c4:	00180213          	addi	tp,a6,1 # 14f9b <_data_lma+0xa983>
     2c8:	3300                	fld	fs0,32(a4)
     2ca:	011d                	addi	sp,sp,7
        if (i == 0)
     2cc:	1331                	addi	t1,t1,-20
     2ce:	0111                	addi	sp,sp,4
    for (i = 0; i < iterations; i++)
     2d0:	0612                	slli	a2,a2,0x4
     2d2:	0b58                	addi	a4,sp,404
     2d4:	0559                	addi	a0,a0,22
     2d6:	00000b57          	0xb57
            stop_time();
     2da:	0534                	addi	a3,sp,648
     2dc:	3100                	fld	fs0,32(a0)
     2de:	35000013          	li	zero,848
            secs_passed = time_in_secs(get_time());
     2e2:	0111010b          	0x111010b
     2e6:	0612                	slli	a2,a2,0x4
     2e8:	0000                	unimp
     2ea:	0536                	slli	a0,a0,0xd
     2ec:	0300                	addi	s0,sp,384
     2ee:	3a08                	fld	fa0,48(a2)
        while (secs_passed < (secs_ret)1)
     2f0:	390b3b0b          	0x390b3b0b
     2f4:	0213490b          	0x213490b
            secs_passed = time_in_secs(get_time());
     2f8:	37000017          	auipc	zero,0x37000
     2fc:	0034                	addi	a3,sp,8
     2fe:	0b3a0803          	lb	a6,179(s4)
        while (secs_passed < (secs_ret)1)
     302:	0b390b3b          	0xb390b3b
     306:	1349                	addi	t1,t1,-14
     308:	1702                	slli	a4,a4,0x20
     30a:	0000                	unimp
        divisor = (ee_u32)secs_passed;
     30c:	1d38                	addi	a4,sp,696
     30e:	3101                	jal	ffffff0e <__freertos_irq_stack_top+0xfefeff0e>
     310:	55015213          	0x55015213
     314:	590b5817          	auipc	a6,0x590b5
     318:	010b570b          	0x10b570b
        if (divisor == 0) /* some machines cast float to int as 0 since this
     31c:	39000013          	li	zero,912
            divisor = 1;
     320:	0034                	addi	a3,sp,8
     322:	1331                	addi	t1,t1,-20
        results[0].iterations *= 1 + 10 / divisor;
     324:	0000                	unimp
     326:	0b3a                	slli	s6,s6,0xe
     328:	3101                	jal	ffffff28 <__freertos_irq_stack_top+0xfefeff28>
     32a:	00175513          	srli	a0,a4,0x1
     32e:	3b00                	fld	fs0,48(a4)
     330:	8289                	srli	a3,a3,0x2
     332:	0001                	nop
     334:	0111                	addi	sp,sp,4
     336:	1331                	addi	t1,t1,-20
     338:	0000                	unimp
     33a:	893c                	0x893c
    start_time();
     33c:	0182                	c.slli64	gp
     33e:	1101                	addi	sp,sp,-32
     340:	3101                	jal	ffffff40 <__freertos_irq_stack_top+0xfefeff40>
     342:	00130113          	addi	sp,t1,1
    iterate(&results[0]);
     346:	3d00                	fld	fs0,56(a0)
     348:	828a                	mv	t0,sp
     34a:	0001                	nop
     34c:	1802                	slli	a6,a6,0x20
     34e:	4291                	li	t0,4
     350:	0018                	0x18
     352:	3e00                	fld	fs0,56(a2)
     354:	011d                	addi	sp,sp,7
     356:	1331                	addi	t1,t1,-20
     358:	0152                	slli	sp,sp,0x14
     35a:	1755                	addi	a4,a4,-11
     35c:	0b58                	addi	a4,sp,404
     35e:	0b59                	addi	s6,s6,22
     360:	00000b57          	0xb57
    stop_time();
     364:	0182893f 31011101 	0x310111010182893f
    total_time = get_time();
     36c:	40000013          	li	zero,1024
     370:	012e                	slli	sp,sp,0xb
     372:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    seedcrc = crc16(results[0].seed1, seedcrc);
     37a:	0b39                	addi	s6,s6,14
     37c:	0b201927          	0xb201927
    total_time = get_time();
     380:	1301                	addi	t1,t1,-32
     382:	0000                	unimp
    seedcrc = crc16(results[0].seed1, seedcrc);
     384:	0541                	addi	a0,a0,16
     386:	0300                	addi	s0,sp,384
     388:	3a08                	fld	fa0,48(a2)
     38a:	390b3b0b          	0x390b3b0b
     38e:	0013490b          	0x13490b
     392:	4200                	lw	s0,0(a2)
     394:	0005                	c.nop	1
     396:	0b3a0e03          	lb	t3,179(s4)
    seedcrc = crc16(results[0].seed2, seedcrc);
     39a:	0b390b3b          	0xb390b3b
     39e:	1349                	addi	t1,t1,-14
     3a0:	0000                	unimp
     3a2:	3f012e43          	fmadd.q	ft8,ft2,fa6,ft7,rdn
     3a6:	0319                	addi	t1,t1,6
     3a8:	3a0e                	fld	fs4,224(sp)
     3aa:	390b3b0b          	0x390b3b0b
    seedcrc = crc16(results[0].seed3, seedcrc);
     3ae:	4919270b          	0x4919270b
     3b2:	010b2013          	slti	zero,s6,16
     3b6:	44000013          	li	zero,1088
     3ba:	0034                	addi	a3,sp,8
     3bc:	0b3a0e03          	lb	t3,179(s4)
    seedcrc = crc16(results[0].size, seedcrc);
     3c0:	0b390b3b          	0xb390b3b
     3c4:	1349                	addi	t1,t1,-14
     3c6:	0000                	unimp
     3c8:	0b45                	addi	s6,s6,17
     3ca:	0001                	nop
     3cc:	4600                	lw	s0,8(a2)
     3ce:	012e                	slli	sp,sp,0xb
    switch (seedcrc)
     3d0:	1331                	addi	t1,t1,-20
     3d2:	0111                	addi	sp,sp,4
     3d4:	0612                	slli	a2,a2,0x4
     3d6:	1840                	addi	s0,sp,52
    seedcrc = crc16(results[0].size, seedcrc);
     3d8:	01194297          	auipc	t0,0x1194
    switch (seedcrc)
     3dc:	47000013          	li	zero,1136
     3e0:	0034                	addi	a3,sp,8
     3e2:	1331                	addi	t1,t1,-20
     3e4:	1802                	slli	a6,a6,0x20
     3e6:	0000                	unimp
     3e8:	8948                	0x8948
     3ea:	0182                	c.slli64	gp
     3ec:	1101                	addi	sp,sp,-32
     3ee:	0001                	nop
     3f0:	4900                	lw	s0,16(a0)
     3f2:	002e                	c.slli	zero,0xb
     3f4:	193c193f 0e030e6e 	0xe030e6e193c193f
            ee_printf("2K performance run parameters for coremark.\n");
     3fc:	0b3a                	slli	s6,s6,0xe
     3fe:	0b390b3b          	0xb390b3b
     402:	0000                	unimp
     404:	0100                	addi	s0,sp,128
     406:	0111                	addi	sp,sp,4
     408:	0e25                	addi	t3,t3,9
     40a:	0e030b13          	addi	s6,t1,224
     40e:	17550e1b          	0x17550e1b
     412:	0111                	addi	sp,sp,4
     414:	1710                	addi	a2,sp,928
     416:	0000                	unimp
            known_id = 3;
     418:	2402                	fld	fs0,0(sp)
     41a:	0b00                	addi	s0,sp,400
            ee_printf("2K performance run parameters for coremark.\n");
     41c:	030b3e0b          	0x30b3e0b
     420:	000e                	c.slli	zero,0x3
     422:	0300                	addi	s0,sp,384
     424:	0024                	addi	s1,sp,8
     426:	0b3e0b0b          	0xb3e0b0b
            known_id = 3;
     42a:	00000803          	lb	a6,0(zero) # 0 <_start>
        for (i = 0; i < default_num_contexts; i++)
     42e:	1604                	addi	s1,sp,800
     430:	0300                	addi	s0,sp,384
     432:	3a0e                	fld	fs4,224(sp)
     434:	39053b0b          	0x39053b0b
     438:	0013490b          	0x13490b
     43c:	0500                	addi	s0,sp,640
     43e:	0016                	c.slli	zero,0x5
            results[i].err = 0;
     440:	0b3a0e03          	lb	t3,179(s4)
     444:	0b390b3b          	0xb390b3b
     448:	1349                	addi	t1,t1,-14
     44a:	0000                	unimp
     44c:	1706                	slli	a4,a4,0x21
     44e:	0b01                	addi	s6,s6,0
     450:	3b0b3a0b          	0x3b0b3a0b
     454:	010b390b          	0x10b390b
     458:	07000013          	li	zero,112
     45c:	000d                	c.nop	3
     45e:	0b3a0e03          	lb	t3,179(s4)
     462:	0b390b3b          	0xb390b3b
     466:	1349                	addi	t1,t1,-14
     468:	0000                	unimp
     46a:	0108                	addi	a0,sp,128
     46c:	4901                	li	s2,0
     46e:	00130113          	addi	sp,t1,1
     472:	0900                	addi	s0,sp,144
     474:	0021                	c.nop	8
     476:	1349                	addi	t1,t1,-14
            total_errors += results[i].err;
     478:	00000b2f          	0xb2f
        for (i = 0; i < default_num_contexts; i++)
     47c:	130a                	slli	t1,t1,0x22
     47e:	0b01                	addi	s6,s6,0
            total_errors += results[i].err;
     480:	3b0b3a0b          	0x3b0b3a0b
        for (i = 0; i < default_num_contexts; i++)
     484:	010b390b          	0x10b390b
            total_errors += results[i].err;
     488:	0b000013          	li	zero,176
        for (i = 0; i < default_num_contexts; i++)
     48c:	000d                	c.nop	3
     48e:	0b3a0e03          	lb	t3,179(s4)
            total_errors += results[i].err;
     492:	0b390b3b          	0xb390b3b
        for (i = 0; i < default_num_contexts; i++)
     496:	1349                	addi	t1,t1,-14
            total_errors += results[i].err;
     498:	0b38                	addi	a4,sp,408
     49a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     49c:	0f0c                	addi	a1,sp,912
     49e:	0b00                	addi	s0,sp,400
            results[i].err = 0;
     4a0:	0d00000b          	0xd00000b
     4a4:	0e030113          	addi	sp,t1,224
     4a8:	0b3a0b0b          	0xb3a0b0b
     4ac:	0b390b3b          	0xb390b3b
     4b0:	1301                	addi	t1,t1,-32
     4b2:	0000                	unimp
     4b4:	0d0e                	slli	s10,s10,0x3
     4b6:	0300                	addi	s0,sp,384
            if ((results[i].execs & ID_LIST)
     4b8:	3a08                	fld	fa0,48(a2)
     4ba:	390b3b0b          	0x390b3b0b
            results[i].err = 0;
     4be:	3813490b          	0x3813490b
            if ((results[i].execs & ID_LIST)
     4c2:	0f00000b          	0xf00000b
     4c6:	0b0b000f          	0xb0b000f
                && (results[i].crclist != list_known_crc[known_id]))
     4ca:	1349                	addi	t1,t1,-14
     4cc:	0000                	unimp
     4ce:	1310                	addi	a2,sp,416
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
     4d0:	0301                	addi	t1,t1,0
     4d2:	0b0e                	slli	s6,s6,0x3
     4d4:	3a05                	jal	fffffe04 <__freertos_irq_stack_top+0xfefefe04>
     4d6:	390b3b0b          	0x390b3b0b
     4da:	0013010b          	0x13010b
     4de:	1100                	addi	s0,sp,160
     4e0:	000d                	c.nop	3
     4e2:	0b3a0e03          	lb	t3,179(s4)
     4e6:	0b390b3b          	0xb390b3b
                results[i].err++;
     4ea:	1349                	addi	t1,t1,-14
     4ec:	0538                	addi	a4,sp,648
     4ee:	0000                	unimp
     4f0:	1512                	slli	a0,a0,0x24
     4f2:	2700                	fld	fs0,8(a4)
            if ((results[i].execs & ID_MATRIX)
     4f4:	0019                	c.nop	6
     4f6:	1300                	addi	s0,sp,416
     4f8:	0115                	addi	sp,sp,5
     4fa:	13491927          	0x13491927
     4fe:	1301                	addi	t1,t1,-32
     500:	0000                	unimp
     502:	0514                	addi	a3,sp,640
     504:	4900                	lw	s0,16(a0)
     506:	15000013          	li	zero,336
     50a:	0026                	c.slli	zero,0x9
     50c:	1349                	addi	t1,t1,-14
     50e:	0000                	unimp
     510:	1316                	slli	t1,t1,0x25
     512:	0301                	addi	t1,t1,0
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
     514:	0b0e                	slli	s6,s6,0x3
     516:	3a05                	jal	fffffe46 <__freertos_irq_stack_top+0xfefefe46>
     518:	39053b0b          	0x39053b0b
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
     51c:	0013010b          	0x13010b
     520:	1700                	addi	s0,sp,928
     522:	000d                	c.nop	3
     524:	0b3a0e03          	lb	t3,179(s4)
     528:	0b39053b          	0xb39053b
     52c:	1349                	addi	t1,t1,-14
     52e:	0b38                	addi	a4,sp,408
     530:	0000                	unimp
     532:	0d18                	addi	a4,sp,656
                results[i].err++;
     534:	0300                	addi	s0,sp,384
     536:	3a0e                	fld	fs4,224(sp)
     538:	39053b0b          	0x39053b0b
     53c:	3813490b          	0x3813490b
     540:	0005                	c.nop	1
     542:	1900                	addi	s0,sp,176
            if ((results[i].execs & ID_STATE)
     544:	0e030113          	addi	sp,t1,224
     548:	0b3a0b0b          	0xb3a0b0b
                && (results[i].crcstate != state_known_crc[known_id]))
     54c:	0b39053b          	0xb39053b
     550:	1301                	addi	t1,t1,-32
     552:	0000                	unimp
     554:	131a                	slli	t1,t1,0x26
     556:	0b01                	addi	s6,s6,0
     558:	3b0b3a0b          	0x3b0b3a0b
     55c:	3905                	jal	18c <main+0x114>
     55e:	0013010b          	0x13010b
     562:	1b00                	addi	s0,sp,432
     564:	0b0b0117          	auipc	sp,0xb0b0
     568:	0b3a                	slli	s6,s6,0xe
     56a:	0b39053b          	0xb39053b
     56e:	1301                	addi	t1,t1,-32
        && (results[0].seed3 == 0))
     570:	0000                	unimp
     572:	0d1c                	addi	a5,sp,656
     574:	0300                	addi	s0,sp,384
     576:	3a0e                	fld	fs4,224(sp)
     578:	39053b0b          	0x39053b0b
        results[0].seed3 = 0x66;
     57c:	0013490b          	0x13490b
     580:	1d00                	addi	s0,sp,688
     582:	0e030013          	addi	zero,t1,224
     586:	193c                	addi	a5,sp,184
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     588:	0000                	unimp
     58a:	151e                	slli	a0,a0,0x27
            results[i].list = core_list_init(
     58c:	2701                	jal	c8c <core_bench_list+0x2c>
     58e:	0119                	addi	sp,sp,6
     590:	1f000013          	li	zero,496
     594:	0034                	addi	a3,sp,8
     596:	0b3a0e03          	lb	t3,179(s4)
     59a:	0b39053b          	0xb39053b
     59e:	1349                	addi	t1,t1,-14
     5a0:	193c193f 34200000 	0x34200000193c193f
     5a8:	0300                	addi	s0,sp,384
     5aa:	3a0e                	fld	fs4,224(sp)
     5ac:	390b3b0b          	0x390b3b0b
     5b0:	3f13490b          	0x3f13490b
     5b4:	3c19                	jal	ffffffca <__freertos_irq_stack_top+0xfefeffca>
     5b6:	0019                	c.nop	6
     5b8:	2100                	fld	fs0,0(a0)
     5ba:	0034                	addi	a3,sp,8
     5bc:	0b3a0e03          	lb	t3,179(s4)
        if (results[i].execs & ID_MATRIX)
     5c0:	0b390b3b          	0xb390b3b
                                 | (((ee_s32)results[i].seed2) << 16),
     5c4:	1349                	addi	t1,t1,-14
     5c6:	0000                	unimp
     5c8:	3422                	fld	fs0,40(sp)
     5ca:	0300                	addi	s0,sp,384
     5cc:	3a0e                	fld	fs4,224(sp)
     5ce:	390b3b0b          	0x390b3b0b
            core_init_matrix(results[0].size,
     5d2:	3f13490b          	0x3f13490b
                                 | (((ee_s32)results[i].seed2) << 16),
     5d6:	0219                	addi	tp,tp,6
     5d8:	0018                	0x18
     5da:	2300                	fld	fs0,0(a4)
                             (ee_s32)results[i].seed1
     5dc:	012e                	slli	sp,sp,0xb
     5de:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
            core_init_matrix(results[0].size,
     5e6:	0b39                	addi	s6,s6,14
                             (ee_s32)results[i].seed1
     5e8:	13491927          	0x13491927
            core_init_matrix(results[0].size,
     5ec:	0111                	addi	sp,sp,4
     5ee:	0612                	slli	a2,a2,0x4
                                 | (((ee_s32)results[i].seed2) << 16),
     5f0:	1840                	addi	s0,sp,52
     5f2:	4296                	lw	t0,68(sp)
            core_init_matrix(results[0].size,
     5f4:	0119                	addi	sp,sp,6
     5f6:	24000013          	li	zero,576
     5fa:	0005                	c.nop	1
     5fc:	0b3a0e03          	lb	t3,179(s4)
     600:	0b390b3b          	0xb390b3b
     604:	1349                	addi	t1,t1,-14
     606:	1702                	slli	a4,a4,0x20
     608:	0000                	unimp
     60a:	3425                	jal	32 <_start+0x32>
    switch (seedcrc)
     60c:	0300                	addi	s0,sp,384
     60e:	3a08                	fld	fa0,48(a2)
     610:	390b3b0b          	0x390b3b0b
     614:	0213490b          	0x213490b
     618:	26000017          	auipc	zero,0x26000
     61c:	0034                	addi	a3,sp,8
     61e:	0b3a0e03          	lb	t3,179(s4)
     622:	0b390b3b          	0xb390b3b
            ee_printf("Profile generation run parameters for coremark.\n");
     626:	1349                	addi	t1,t1,-14
     628:	1702                	slli	a4,a4,0x20
     62a:	0000                	unimp
     62c:	03003427          	fsd	fa6,40(zero) # 28 <_start+0x28>
     630:	3a0e                	fld	fs4,224(sp)
     632:	390b3b0b          	0x390b3b0b
     636:	0213490b          	0x213490b
     63a:	0018                	0x18
     63c:	2800                	fld	fs0,16(s0)
     63e:	1755010b          	0x1755010b
            known_id = 2;
     642:	1301                	addi	t1,t1,-32
            ee_printf("Profile generation run parameters for coremark.\n");
     644:	0000                	unimp
     646:	1d29                	addi	s10,s10,-22
     648:	3101                	jal	248 <main+0x1d0>
     64a:	55015213          	0x55015213
     64e:	590b5817          	auipc	a6,0x590b5
            known_id = 2;
     652:	010b570b          	0x10b570b
     656:	2a000013          	li	zero,672
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
     65a:	0005                	c.nop	1
     65c:	1331                	addi	t1,t1,-20
     65e:	1702                	slli	a4,a4,0x20
     660:	0000                	unimp
     662:	55010b2b          	0x55010b2b
     666:	2c000017          	auipc	zero,0x2c000
     66a:	0034                	addi	a3,sp,8
     66c:	1331                	addi	t1,t1,-20
     66e:	1702                	slli	a4,a4,0x20
                results[i].err++;
     670:	0000                	unimp
     672:	892d                	andi	a0,a0,11
     674:	0182                	c.slli64	gp
     676:	1101                	addi	sp,sp,-32
     678:	3101                	jal	278 <main+0x200>
     67a:	00130113          	addi	sp,t1,1
     67e:	2e00                	fld	fs0,24(a2)
     680:	828a                	mv	t0,sp
     682:	0001                	nop
     684:	1802                	slli	a6,a6,0x20
     686:	4291                	li	t0,4
    switch (seedcrc)
     688:	0018                	0x18
     68a:	2f00                	fld	fs0,24(a4)
    ee_s16       known_id = -1, total_errors = 0;
     68c:	8289                	srli	a3,a3,0x2
     68e:	0001                	nop
    switch (seedcrc)
     690:	0111                	addi	sp,sp,4
     692:	1331                	addi	t1,t1,-20
    ee_s16       known_id = -1, total_errors = 0;
     694:	0000                	unimp
     696:	8930                	0x8930
     698:	0182                	c.slli64	gp
     69a:	1101                	addi	sp,sp,-32
    total_errors += check_data_types();
     69c:	3101                	jal	29c <main+0x224>
     69e:	31000013          	li	zero,784
     6a2:	0021                	c.nop	8
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     6a4:	1349                	addi	t1,t1,-14
     6a6:	0000052f          	0x52f
    total_errors += check_data_types();
     6aa:	2e32                	fld	ft8,264(sp)
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     6ac:	3f01                	jal	5bc <main+0x544>
     6ae:	0319                	addi	t1,t1,6
     6b0:	3a0e                	fld	fs4,224(sp)
     6b2:	390b3b0b          	0x390b3b0b
     6b6:	4919270b          	0x4919270b
     6ba:	010b2013          	slti	zero,s6,16
    ee_printf("Total ticks      : %d\n", (int)total_time);
     6be:	33000013          	li	zero,816
     6c2:	0005                	c.nop	1
     6c4:	0b3a0e03          	lb	t3,179(s4)
     6c8:	0b390b3b          	0xb390b3b
     6cc:	1349                	addi	t1,t1,-14
     6ce:	0000                	unimp
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
     6d0:	3434                	fld	fa3,104(s0)
     6d2:	0300                	addi	s0,sp,384
     6d4:	3a08                	fld	fa0,48(a2)
     6d6:	390b3b0b          	0x390b3b0b
     6da:	0013490b          	0x13490b
     6de:	3500                	fld	fs0,40(a0)
     6e0:	012e                	slli	sp,sp,0xb
     6e2:	1331                	addi	t1,t1,-20
     6e4:	0111                	addi	sp,sp,4
     6e6:	0612                	slli	a2,a2,0x4
     6e8:	1840                	addi	s0,sp,52
     6ea:	01194297          	auipc	t0,0x1194
     6ee:	36000013          	li	zero,864
     6f2:	002e                	c.slli	zero,0xb
    if (time_in_secs(total_time) > 0)
     6f4:	193c193f 0e030e6e 	0xe030e6e193c193f
     6fc:	0b3a                	slli	s6,s6,0xe
     6fe:	0b390b3b          	0xb390b3b
    total_errors += check_data_types();
     702:	0000                	unimp
    if (time_in_secs(total_time) > 0)
     704:	3f002e37          	lui	t3,0x3f002
     708:	3c19                	jal	11e <main+0xa6>
     70a:	6e19                	lui	t3,0x6
    total_errors += check_data_types();
     70c:	030e                	slli	t1,t1,0x3
     70e:	3a0e                	fld	fs4,224(sp)
    if (time_in_secs(total_time) > 0)
     710:	000b3b0b          	0xb3b0b
     714:	0000                	unimp
     716:	1101                	addi	sp,sp,-32
     718:	2501                	jal	d18 <core_bench_list+0xb8>
     71a:	130e                	slli	t1,t1,0x23
                  default_num_contexts * results[0].iterations
     71c:	1b0e030b          	0x1b0e030b
        ee_printf("Iterations/Sec   : %lf\n",
     720:	550e                	lw	a0,224(sp)
     722:	10011117          	auipc	sp,0x10011
     726:	02000017          	auipc	zero,0x2000
     72a:	0024                	addi	s1,sp,8
     72c:	0b3e0b0b          	0xb3e0b0b
     730:	00000e03          	lb	t3,0(zero) # 0 <_start>
                      / time_in_secs(total_time));
     734:	0b002403          	lw	s0,176(zero) # b0 <main+0x38>
        ee_printf("Iterations/Sec   : %lf\n",
     738:	030b3e0b          	0x30b3e0b
                      / time_in_secs(total_time));
     73c:	0008                	0x8
     73e:	0400                	addi	s0,sp,512
     740:	0016                	c.slli	zero,0x5
     742:	0b3a0e03          	lb	t3,179(s4)
        ee_printf("Iterations/Sec   : %lf\n",
     746:	0b39053b          	0xb39053b
     74a:	1349                	addi	t1,t1,-14
     74c:	0000                	unimp
     74e:	1605                	addi	a2,a2,-31
     750:	0300                	addi	s0,sp,384
     752:	3a0e                	fld	fs4,224(sp)
     754:	390b3b0b          	0x390b3b0b
     758:	0013490b          	0x13490b
     75c:	0600                	addi	s0,sp,768
     75e:	0b0b0117          	auipc	sp,0xb0b0
     762:	0b3a                	slli	s6,s6,0xe
     764:	0b390b3b          	0xb390b3b
     768:	1301                	addi	t1,t1,-32
     76a:	0000                	unimp
     76c:	03000d07          	0x3000d07
     770:	3a0e                	fld	fs4,224(sp)
     772:	390b3b0b          	0x390b3b0b
    if (time_in_secs(total_time) < 10)
     776:	0013490b          	0x13490b
     77a:	0800                	addi	s0,sp,16
     77c:	0101                	addi	sp,sp,0
     77e:	1349                	addi	t1,t1,-14
     780:	1301                	addi	t1,t1,-32
     782:	0000                	unimp
     784:	2109                	jal	b86 <main+0xb0e>
     786:	4900                	lw	s0,16(a0)
     788:	000b2f13          	slti	t5,s6,0
     78c:	0a00                	addi	s0,sp,272
     78e:	0b0b0113          	addi	sp,s6,176
     792:	0b3a                	slli	s6,s6,0xe
     794:	0b390b3b          	0xb390b3b
    ee_printf("Iterations       : %lu\n",
     798:	1301                	addi	t1,t1,-32
     79a:	0000                	unimp
     79c:	03000d0b          	0x3000d0b
     7a0:	3a0e                	fld	fs4,224(sp)
     7a2:	390b3b0b          	0x390b3b0b
     7a6:	3813490b          	0x3813490b
     7aa:	0c00000b          	0xc00000b
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     7ae:	0b0b000f          	0xb0b000f
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     7b2:	0000                	unimp
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     7b4:	130d                	addi	t1,t1,-29
     7b6:	0301                	addi	t1,t1,0
        total_errors++;
     7b8:	0b0e                	slli	s6,s6,0x3
     7ba:	3b0b3a0b          	0x3b0b3a0b
     7be:	010b390b          	0x10b390b
    ee_printf("Iterations       : %lu\n",
     7c2:	0e000013          	li	zero,224
     7c6:	000d                	c.nop	3
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     7c8:	0b3a0803          	lb	a6,179(s4)
     7cc:	0b390b3b          	0xb390b3b
     7d0:	1349                	addi	t1,t1,-14
     7d2:	0b38                	addi	a4,sp,408
     7d4:	0000                	unimp
     7d6:	0b000f0f          	0xb000f0f
     7da:	0013490b          	0x13490b
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     7de:	1000                	addi	s0,sp,32
     7e0:	0e030113          	addi	sp,t1,224
     7e4:	0b3a050b          	0xb3a050b
     7e8:	0b390b3b          	0xb390b3b
     7ec:	1301                	addi	t1,t1,-32
     7ee:	0000                	unimp
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     7f0:	0d11                	addi	s10,s10,4
     7f2:	0300                	addi	s0,sp,384
     7f4:	3a0e                	fld	fs4,224(sp)
     7f6:	390b3b0b          	0x390b3b0b
     7fa:	3813490b          	0x3813490b
     7fe:	0005                	c.nop	1
     800:	1200                	addi	s0,sp,288
     802:	0015                	c.nop	5
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
     804:	00001927          	0x1927
     808:	27011513          	0x27011513
     80c:	4919                	li	s2,6
     80e:	00130113          	addi	sp,t1,1
     812:	1400                	addi	s0,sp,544
     814:	0005                	c.nop	1
     816:	1349                	addi	t1,t1,-14
    if (results[0].execs & ID_LIST)
     818:	0000                	unimp
     81a:	2615                	jal	b3e <main+0xac6>
     81c:	4900                	lw	s0,16(a0)
     81e:	16000013          	li	zero,352
     822:	0e030113          	addi	sp,t1,224
        for (i = 0; i < default_num_contexts; i++)
     826:	0b3a050b          	0xb3a050b
     82a:	0b39053b          	0xb39053b
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     82e:	1301                	addi	t1,t1,-32
     830:	0000                	unimp
     832:	03000d17          	auipc	s10,0x3000
     836:	3a0e                	fld	fs4,224(sp)
     838:	39053b0b          	0x39053b0b
     83c:	3813490b          	0x3813490b
        for (i = 0; i < default_num_contexts; i++)
     840:	1800000b          	0x1800000b
     844:	000d                	c.nop	3
     846:	0b3a0e03          	lb	t3,179(s4)
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     84a:	0b39053b          	0xb39053b
     84e:	1349                	addi	t1,t1,-14
     850:	0538                	addi	a4,sp,648
     852:	0000                	unimp
     854:	1319                	addi	t1,t1,-26
     856:	0301                	addi	t1,t1,0
     858:	0b0e                	slli	s6,s6,0x3
     85a:	3b0b3a0b          	0x3b0b3a0b
     85e:	3905                	jal	48e <main+0x416>
     860:	0013010b          	0x13010b
     864:	1a00                	addi	s0,sp,304
     866:	0b0b0113          	addi	sp,s6,176
     86a:	0b3a                	slli	s6,s6,0xe
     86c:	0b39053b          	0xb39053b
     870:	1301                	addi	t1,t1,-32
     872:	0000                	unimp
     874:	0b01171b          	0xb01171b
     878:	3b0b3a0b          	0x3b0b3a0b
        for (i = 0; i < default_num_contexts; i++)
     87c:	3905                	jal	4ac <main+0x434>
     87e:	0013010b          	0x13010b
     882:	1c00                	addi	s0,sp,560
     884:	000d                	c.nop	3
     886:	0b3a0e03          	lb	t3,179(s4)
     88a:	0b39053b          	0xb39053b
     88e:	1349                	addi	t1,t1,-14
     890:	0000                	unimp
     892:	131d                	addi	t1,t1,-25
    if (results[0].execs & ID_MATRIX)
     894:	0300                	addi	s0,sp,384
     896:	3c0e                	fld	fs8,224(sp)
     898:	0019                	c.nop	6
     89a:	1e00                	addi	s0,sp,816
        for (i = 0; i < default_num_contexts; i++)
     89c:	0115                	addi	sp,sp,5
     89e:	13011927          	0x13011927
     8a2:	0000                	unimp
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     8a4:	341f 0300 3a0e      	0x3a0e0300341f
     8aa:	39053b0b          	0x39053b0b
     8ae:	3f13490b          	0x3f13490b
     8b2:	3c19                	jal	2c8 <main+0x250>
     8b4:	0019                	c.nop	6
     8b6:	2000                	fld	fs0,0(s0)
        for (i = 0; i < default_num_contexts; i++)
     8b8:	0034                	addi	a3,sp,8
     8ba:	0b3a0e03          	lb	t3,179(s4)
     8be:	0b390b3b          	0xb390b3b
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     8c2:	1349                	addi	t1,t1,-14
     8c4:	193c193f 2e210000 	0x2e210000193c193f
     8cc:	3f01                	jal	7dc <main+0x764>
     8ce:	0319                	addi	t1,t1,6
     8d0:	3a0e                	fld	fs4,224(sp)
     8d2:	39053b0b          	0x39053b0b
     8d6:	2019270b          	0x2019270b
     8da:	0013010b          	0x13010b
     8de:	2200                	fld	fs0,0(a2)
     8e0:	0005                	c.nop	1
     8e2:	0b3a0803          	lb	a6,179(s4)
     8e6:	0b39053b          	0xb39053b
     8ea:	1349                	addi	t1,t1,-14
     8ec:	0000                	unimp
     8ee:	03003423          	0x3003423
     8f2:	3a08                	fld	fa0,48(a2)
        for (i = 0; i < default_num_contexts; i++)
     8f4:	39053b0b          	0x39053b0b
     8f8:	0013490b          	0x13490b
     8fc:	2400                	fld	fs0,8(s0)
     8fe:	0000010b          	0x10b
     902:	2e25                	jal	c3a <main+0xbc2>
     904:	3f01                	jal	814 <main+0x79c>
     906:	0319                	addi	t1,t1,6
     908:	3a0e                	fld	fs4,224(sp)
     90a:	390b3b0b          	0x390b3b0b
    if (results[0].execs & ID_STATE)
     90e:	4919270b          	0x4919270b
     912:	010b2013          	slti	zero,s6,16
        for (i = 0; i < default_num_contexts; i++)
     916:	26000013          	li	zero,608
     91a:	0005                	c.nop	1
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     91c:	0b3a0803          	lb	a6,179(s4)
     920:	0b390b3b          	0xb390b3b
     924:	1349                	addi	t1,t1,-14
     926:	0000                	unimp
     928:	03000527          	0x3000527
     92c:	3a0e                	fld	fs4,224(sp)
     92e:	390b3b0b          	0x390b3b0b
        for (i = 0; i < default_num_contexts; i++)
     932:	0013490b          	0x13490b
     936:	2800                	fld	fs0,16(s0)
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     938:	0034                	addi	a3,sp,8
     93a:	0b3a0803          	lb	a6,179(s4)
     93e:	0b390b3b          	0xb390b3b
     942:	1349                	addi	t1,t1,-14
     944:	0000                	unimp
     946:	3429                	jal	350 <main+0x2d8>
     948:	0300                	addi	s0,sp,384
     94a:	3a0e                	fld	fs4,224(sp)
     94c:	390b3b0b          	0x390b3b0b
     950:	0013490b          	0x13490b
     954:	2a00                	fld	fs0,16(a2)
     956:	012e                	slli	sp,sp,0xb
     958:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
     960:	0b39                	addi	s6,s6,14
     962:	13491927          	0x13491927
     966:	0111                	addi	sp,sp,4
     968:	0612                	slli	a2,a2,0x4
     96a:	1840                	addi	s0,sp,52
        for (i = 0; i < default_num_contexts; i++)
     96c:	01194297          	auipc	t0,0x1194
     970:	2b000013          	li	zero,688
     974:	0005                	c.nop	1
     976:	0b3a0e03          	lb	t3,179(s4)
     97a:	0b390b3b          	0xb390b3b
     97e:	1349                	addi	t1,t1,-14
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     980:	1702                	slli	a4,a4,0x20
     982:	0000                	unimp
    for (i = 0; i < default_num_contexts; i++)
     984:	052c                	addi	a1,sp,648
     986:	0300                	addi	s0,sp,384
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     988:	3a08                	fld	fa0,48(a2)
     98a:	390b3b0b          	0x390b3b0b
     98e:	0213490b          	0x213490b
     992:	0018                	0x18
    for (i = 0; i < default_num_contexts; i++)
     994:	2d00                	fld	fs0,24(a0)
     996:	0034                	addi	a3,sp,8
     998:	0b3a0803          	lb	a6,179(s4)
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     99c:	0b390b3b          	0xb390b3b
     9a0:	1349                	addi	t1,t1,-14
     9a2:	1702                	slli	a4,a4,0x20
    for (i = 0; i < default_num_contexts; i++)
     9a4:	0000                	unimp
     9a6:	342e                	fld	fs0,232(sp)
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     9a8:	0300                	addi	s0,sp,384
     9aa:	3a0e                	fld	fs4,224(sp)
     9ac:	390b3b0b          	0x390b3b0b
     9b0:	0213490b          	0x213490b
     9b4:	2f000017          	auipc	zero,0x2f000
     9b8:	0005                	c.nop	1
     9ba:	0b3a0803          	lb	a6,179(s4)
     9be:	0b390b3b          	0xb390b3b
     9c2:	1349                	addi	t1,t1,-14
     9c4:	1702                	slli	a4,a4,0x20
     9c6:	0000                	unimp
     9c8:	1d30                	addi	a2,sp,696
     9ca:	3101                	jal	5ca <main+0x552>
     9cc:	55015213          	0x55015213
    for (i = 0; i < default_num_contexts; i++)
     9d0:	590b5817          	auipc	a6,0x590b5
     9d4:	010b570b          	0x10b570b
     9d8:	31000013          	li	zero,784
     9dc:	0005                	c.nop	1
     9de:	1331                	addi	t1,t1,-20
     9e0:	1702                	slli	a4,a4,0x20
     9e2:	0000                	unimp
    if (total_errors == 0)
     9e4:	0b32                	slli	s6,s6,0xc
     9e6:	5501                	li	a0,-32
    if (total_errors > 0)
     9e8:	33000017          	auipc	zero,0x33000
        ee_printf("Errors detected\n");
     9ec:	0034                	addi	a3,sp,8
     9ee:	1331                	addi	t1,t1,-20
     9f0:	1702                	slli	a4,a4,0x20
     9f2:	0000                	unimp
     9f4:	0534                	addi	a3,sp,648
     9f6:	3100                	fld	fs0,32(a0)
     9f8:	35000013          	li	zero,848
    portable_fini(&(results[0].port));
     9fc:	1331010b          	0x1331010b
     a00:	1755                	addi	a4,a4,-11
     a02:	0000                	unimp
     a04:	8936                	mv	s2,a3
     a06:	0182                	c.slli64	gp
}
     a08:	1101                	addi	sp,sp,-32
     a0a:	3101                	jal	60a <main+0x592>
     a0c:	00130113          	addi	sp,t1,1
     a10:	3700                	fld	fs0,40(a4)
     a12:	828a                	mv	t0,sp
     a14:	0001                	nop
     a16:	1802                	slli	a6,a6,0x20
     a18:	4291                	li	t0,4
     a1a:	0018                	0x18
     a1c:	3800                	fld	fs0,48(s0)
     a1e:	8289                	srli	a3,a3,0x2
     a20:	0101                	addi	sp,sp,0
     a22:	0111                	addi	sp,sp,4
     a24:	1331                	addi	t1,t1,-20
     a26:	0000                	unimp
     a28:	8939                	andi	a0,a0,14
     a2a:	0182                	c.slli64	gp
     a2c:	1100                	addi	s0,sp,160
     a2e:	3101                	jal	62e <main+0x5b6>
     a30:	3a000013          	li	zero,928
     a34:	8289                	srli	a3,a3,0x2
     a36:	0001                	nop
     a38:	0111                	addi	sp,sp,4
     a3a:	4295                	li	t0,5
     a3c:	3119                	jal	642 <main+0x5ca>
     a3e:	3b000013          	li	zero,944
     a42:	012e                	slli	sp,sp,0xb
     a44:	1331                	addi	t1,t1,-20
     a46:	0111                	addi	sp,sp,4
     a48:	0612                	slli	a2,a2,0x4
     a4a:	1840                	addi	s0,sp,52
        results[0].execs = ALL_ALGORITHMS_MASK;
     a4c:	01194297          	auipc	t0,0x1194
     a50:	3c000013          	li	zero,960
     a54:	0005                	c.nop	1
     a56:	1331                	addi	t1,t1,-20
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a58:	1802                	slli	a6,a6,0x20
     a5a:	0000                	unimp
     a5c:	0b3d                	addi	s6,s6,15
     a5e:	1101                	addi	sp,sp,-32
     a60:	1201                	addi	tp,tp,-32
     a62:	0106                	slli	sp,sp,0x1
     a64:	3e000013          	li	zero,992
     a68:	002e                	c.slli	zero,0xb
     a6a:	193c193f 0e030e6e 	0xe030e6e193c193f
     a72:	0b3a                	slli	s6,s6,0xe
            j++;
     a74:	0b390b3b          	0xb390b3b
        if ((1 << (ee_u32)i) & results[0].execs)
     a78:	0000                	unimp
     a7a:	3f002e3f 6e193c19 	0x6e193c193f002e3f
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a82:	030e                	slli	t1,t1,0x3
     a84:	3a0e                	fld	fs4,224(sp)
     a86:	000b3b0b          	0xb3b0b
            j++;
     a8a:	0000                	unimp
     a8c:	1101                	addi	sp,sp,-32
     a8e:	2501                	jal	108e <__stack_size+0x8e>
     a90:	130e                	slli	t1,t1,0x23
     a92:	1b0e030b          	0x1b0e030b
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a96:	550e                	lw	a0,224(sp)
     a98:	10011117          	auipc	sp,0x10011
     a9c:	02000017          	auipc	zero,0x2000
     aa0:	0024                	addi	s1,sp,8
     aa2:	0b3e0b0b          	0xb3e0b0b
     aa6:	00000e03          	lb	t3,0(zero) # 0 <_start>
     aaa:	0b002403          	lw	s0,176(zero) # b0 <main+0x38>
     aae:	030b3e0b          	0x30b3e0b
        if ((1 << (ee_u32)i) & results[0].execs)
     ab2:	0008                	0x8
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     ab4:	0400                	addi	s0,sp,512
     ab6:	0016                	c.slli	zero,0x5
     ab8:	0b3a0e03          	lb	t3,179(s4)
     abc:	0b39053b          	0xb39053b
     ac0:	1349                	addi	t1,t1,-14
     ac2:	0000                	unimp
        if (results[i].execs & ID_LIST)
     ac4:	1605                	addi	a2,a2,-31
     ac6:	0300                	addi	s0,sp,384
     ac8:	3a0e                	fld	fs4,224(sp)
     aca:	390b3b0b          	0x390b3b0b
        ee_printf(
     ace:	0013490b          	0x13490b
     ad2:	0600                	addi	s0,sp,768
     ad4:	0b0b0117          	auipc	sp,0xb0b0
     ad8:	0b3a                	slli	s6,s6,0xe
     ada:	0b390b3b          	0xb390b3b
     ade:	1301                	addi	t1,t1,-32
            res->crclist = res->crc;
     ae0:	0000                	unimp
     ae2:	03000d07          	0x3000d07
    for (i = 0; i < iterations; i++)
     ae6:	3a0e                	fld	fs4,224(sp)
     ae8:	390b3b0b          	0x390b3b0b
     aec:	0013490b          	0x13490b
     af0:	0800                	addi	s0,sp,16
     af2:	0101                	addi	sp,sp,0
        ee_printf(
     af4:	1349                	addi	t1,t1,-14
     af6:	1301                	addi	t1,t1,-32
     af8:	0000                	unimp
     afa:	2109                	jal	efc <core_bench_list+0x29c>
     afc:	4900                	lw	s0,16(a0)
     afe:	000b2f13          	slti	t5,s6,0
     b02:	0a00                	addi	s0,sp,272
        if (known_id == 3)
     b04:	0b0b0113          	addi	sp,s6,176
     b08:	0b3a                	slli	s6,s6,0xe
     b0a:	0b390b3b          	0xb390b3b
     b0e:	1301                	addi	t1,t1,-32
                      default_num_contexts * results[0].iterations
     b10:	0000                	unimp
     b12:	03000d0b          	0x3000d0b
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b16:	3a0e                	fld	fs4,224(sp)
     b18:	390b3b0b          	0x390b3b0b
     b1c:	3813490b          	0x3813490b
     b20:	0c00000b          	0xc00000b
     b24:	0b0b000f          	0xb0b000f
                          / time_in_secs(total_time),
     b28:	0000                	unimp
     b2a:	130d                	addi	t1,t1,-29
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b2c:	0301                	addi	t1,t1,0
     b2e:	0b0e                	slli	s6,s6,0x3
                          / time_in_secs(total_time),
     b30:	3b0b3a0b          	0x3b0b3a0b
     b34:	010b390b          	0x10b390b
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b38:	0e000013          	li	zero,224
     b3c:	000d                	c.nop	3
     b3e:	0b3a0803          	lb	a6,179(s4)
     b42:	0b390b3b          	0xb390b3b
     b46:	1349                	addi	t1,t1,-14
     b48:	0b38                	addi	a4,sp,408
     b4a:	0000                	unimp
     b4c:	0b000f0f          	0xb000f0f
     b50:	0013490b          	0x13490b
     b54:	1000                	addi	s0,sp,32
     b56:	0e030113          	addi	sp,t1,224
     b5a:	0b3a050b          	0xb3a050b
     b5e:	0b390b3b          	0xb390b3b
     b62:	1301                	addi	t1,t1,-32
     b64:	0000                	unimp
     b66:	0d11                	addi	s10,s10,4
     b68:	0300                	addi	s0,sp,384
     b6a:	3a0e                	fld	fs4,224(sp)
     b6c:	390b3b0b          	0x390b3b0b
            ee_printf(" / %s", MEM_LOCATION);
     b70:	3813490b          	0x3813490b
     b74:	0005                	c.nop	1
     b76:	1200                	addi	s0,sp,288
     b78:	0015                	c.nop	5
     b7a:	00001927          	0x1927
     b7e:	27011513          	0x27011513
     b82:	4919                	li	s2,6
            ee_printf("\n");
     b84:	00130113          	addi	sp,t1,1
     b88:	1400                	addi	s0,sp,544
     b8a:	0005                	c.nop	1
     b8c:	1349                	addi	t1,t1,-14
     b8e:	0000                	unimp
     b90:	2615                	jal	eb4 <core_bench_list+0x254>
     b92:	4900                	lw	s0,16(a0)
        ee_printf(
     b94:	16000013          	li	zero,352
     b98:	0e030113          	addi	sp,t1,224
     b9c:	0b3a050b          	0xb3a050b
     ba0:	0b39053b          	0xb39053b
        total_errors++;
     ba4:	1301                	addi	t1,t1,-32
     ba6:	0000                	unimp
     ba8:	03000d17          	auipc	s10,0x3000
    if (results[0].execs & ID_STATE)
     bac:	3a0e                	fld	fs4,224(sp)
     bae:	39053b0b          	0x39053b0b
     bb2:	3813490b          	0x3813490b
     bb6:	1800000b          	0x1800000b
            ee_printf("6k validation run parameters for coremark.\n");
     bba:	000d                	c.nop	3
     bbc:	0b3a0e03          	lb	t3,179(s4)
     bc0:	0b39053b          	0xb39053b
     bc4:	1349                	addi	t1,t1,-14
     bc6:	0538                	addi	a4,sp,648
     bc8:	0000                	unimp
     bca:	1319                	addi	t1,t1,-26
     bcc:	0301                	addi	t1,t1,0
     bce:	0b0e                	slli	s6,s6,0x3
     bd0:	3b0b3a0b          	0x3b0b3a0b
     bd4:	3905                	jal	804 <main+0x78c>
     bd6:	0013010b          	0x13010b
            known_id = 1;
     bda:	1a00                	addi	s0,sp,304
            ee_printf("6k validation run parameters for coremark.\n");
     bdc:	0b0b0113          	addi	sp,s6,176
     be0:	0b3a                	slli	s6,s6,0xe
     be2:	0b39053b          	0xb39053b
     be6:	1301                	addi	t1,t1,-32
            known_id = 1;
     be8:	0000                	unimp
     bea:	0b01171b          	0xb01171b
     bee:	3b0b3a0b          	0x3b0b3a0b
            ee_printf("6k performance run parameters for coremark.\n");
     bf2:	3905                	jal	822 <main+0x7aa>
     bf4:	0013010b          	0x13010b
     bf8:	1c00                	addi	s0,sp,560
     bfa:	000d                	c.nop	3
     bfc:	0b3a0e03          	lb	t3,179(s4)
     c00:	0b39053b          	0xb39053b
     c04:	1349                	addi	t1,t1,-14
     c06:	0000                	unimp
     c08:	131d                	addi	t1,t1,-25
     c0a:	0300                	addi	s0,sp,384
     c0c:	3c0e                	fld	fs8,224(sp)
     c0e:	0019                	c.nop	6
     c10:	1e00                	addi	s0,sp,816
     c12:	0115                	addi	sp,sp,5
     c14:	13011927          	0x13011927
     c18:	0000                	unimp
     c1a:	341f 0300 3a0e      	0x3a0e0300341f
            known_id = 0;
     c20:	39053b0b          	0x39053b0b
            ee_printf("2K validation run parameters for coremark.\n");
     c24:	3f13490b          	0x3f13490b
     c28:	3c19                	jal	63e <main+0x5c6>
     c2a:	0019                	c.nop	6
     c2c:	2000                	fld	fs0,0(s0)
     c2e:	0034                	addi	a3,sp,8
     c30:	0b3a0e03          	lb	t3,179(s4)
     c34:	0b390b3b          	0xb390b3b
     c38:	1349                	addi	t1,t1,-14
     c3a:	193c193f 35210000 	0x35210000193c193f
     c42:	4900                	lw	s0,16(a0)
     c44:	22000013          	li	zero,544
     c48:	0034                	addi	a3,sp,8
     c4a:	0b3a0e03          	lb	t3,179(s4)
     c4e:	0b390b3b          	0xb390b3b
            known_id = 4;
     c52:	1349                	addi	t1,t1,-14
     c54:	1802193f 34230000 	0x342300001802193f
        for (i = 0; i < default_num_contexts; i++)
     c5c:	0300                	addi	s0,sp,384
     c5e:	3a0e                	fld	fs4,224(sp)
    ee_s16     find_num = res->seed3;
     c60:	390b3b0b          	0x390b3b0b
{
     c64:	0013490b          	0x13490b
     c68:	2400                	fld	fs0,8(s0)
     c6a:	0034                	addi	a3,sp,8
     c6c:	0b3a1347          	fmsub.d	ft6,fs4,fs3,ft1,rtz
     c70:	0b390b3b          	0xb390b3b
     c74:	1802                	slli	a6,a6,0x20
     c76:	0000                	unimp
     c78:	2e25                	jal	fb0 <core_bench_list+0x350>
     c7a:	3f01                	jal	b8a <main+0xb12>
     c7c:	0319                	addi	t1,t1,6
     c7e:	3a0e                	fld	fs4,224(sp)
     c80:	390b3b0b          	0x390b3b0b
     c84:	1119270b          	0x1119270b
     c88:	1201                	addi	tp,tp,-32
     c8a:	4006                	0x4006
     c8c:	9718                	0x9718
     c8e:	1942                	slli	s2,s2,0x30
     c90:	1301                	addi	t1,t1,-32
     c92:	0000                	unimp
     c94:	0526                	slli	a0,a0,0x9
     c96:	0300                	addi	s0,sp,384
     c98:	3a08                	fld	fa0,48(a2)
     c9a:	390b3b0b          	0x390b3b0b
     c9e:	0213490b          	0x213490b
     ca2:	0018                	0x18
    list_head *list     = res->list;
     ca4:	2700                	fld	fs0,8(a4)
     ca6:	0005                	c.nop	1
    for (i = 0; i < find_num; i++)
     ca8:	0b3a0803          	lb	a6,179(s4)
    info.idx = finder_idx;
     cac:	0b390b3b          	0xb390b3b
    for (i = 0; i < find_num; i++)
     cb0:	1349                	addi	t1,t1,-14
     cb2:	1702                	slli	a4,a4,0x20
    ee_u16     found = 0, missed = 0;
     cb4:	0000                	unimp
     cb6:	0528                	addi	a0,sp,648
     cb8:	0300                	addi	s0,sp,384
     cba:	3a0e                	fld	fs4,224(sp)
    ee_u16     retval = 0;
     cbc:	390b3b0b          	0x390b3b0b
    if (info->idx >= 0)
     cc0:	0213490b          	0x213490b
        info.data16 = (i & 0xff);
     cc4:	29000017          	auipc	zero,0x29000
     cc8:	8289                	srli	a3,a3,0x2
     cca:	0101                	addi	sp,sp,0
    if (info->idx >= 0)
     ccc:	0111                	addi	sp,sp,4
     cce:	1331                	addi	t1,t1,-20
        while (list && (list->info->idx != info->idx))
     cd0:	0000                	unimp
     cd2:	8a2a                	mv	s4,a0
     cd4:	0182                	c.slli64	gp
     cd6:	0200                	addi	s0,sp,256
     cd8:	9118                	0x9118
     cda:	1842                	slli	a6,a6,0x30
     cdc:	0000                	unimp
     cde:	3f012e2b          	0x3f012e2b
     ce2:	0319                	addi	t1,t1,6
     ce4:	3a0e                	fld	fs4,224(sp)
     ce6:	390b3b0b          	0x390b3b0b
     cea:	4919270b          	0x4919270b
     cee:	12011113          	0x12011113
     cf2:	4006                	0x4006
     cf4:	9618                	0x9618
     cf6:	1942                	slli	s2,s2,0x30
     cf8:	1301                	addi	t1,t1,-32
     cfa:	0000                	unimp
            list = list->next;
     cfc:	2e2c                	fld	fa1,88(a2)
     cfe:	3f00                	fld	fs0,56(a4)
        while (list && (list->info->idx != info->idx))
     d00:	0319                	addi	t1,t1,6
     d02:	3a0e                	fld	fs4,224(sp)
     d04:	390b3b0b          	0x390b3b0b
     d08:	4919270b          	0x4919270b
    while (list)
     d0c:	12011113          	0x12011113
     d10:	4006                	0x4006
     d12:	9718                	0x9718
        tmp        = list->next;
     d14:	1942                	slli	s2,s2,0x30
     d16:	0000                	unimp
        list->next = next;
     d18:	892d                	andi	a0,a0,11
     d1a:	0182                	c.slli64	gp
    while (list)
     d1c:	1100                	addi	s0,sp,160
     d1e:	3101                	jal	91e <main+0x8a6>
        if (this_find == NULL)
     d20:	2e000013          	li	zero,736
            if (this_find->info->data16 & 0x1) /* use found value */
     d24:	002e                	c.slli	zero,0xb
     d26:	193c193f 0e030e6e 	0xe030e6e193c193f
            found++;
     d2e:	0b3a                	slli	s6,s6,0xe
            if (this_find->info->data16 & 0x1) /* use found value */
     d30:	00000b3b          	0xb3b
            found++;
     d34:	3f002e2f          	0x3f002e2f
            if (this_find->info->data16 & 0x1) /* use found value */
     d38:	3c19                	jal	74e <main+0x6d6>
     d3a:	6e19                	lui	t3,0x6
     d3c:	030e                	slli	t1,t1,0x3
     d3e:	3a0e                	fld	fs4,224(sp)
                retval += (this_find->info->data16 >> 9) & 1;
     d40:	390b3b0b          	0x390b3b0b
     d44:	0000000b          	0xb
     d48:	1101                	addi	sp,sp,-32
     d4a:	2501                	jal	134a <core_list_init+0x5a>
     d4c:	130e                	slli	t1,t1,0x23
     d4e:	1b0e030b          	0x1b0e030b
     d52:	550e                	lw	a0,224(sp)
            if (this_find->next != NULL)
     d54:	10011117          	auipc	sp,0x10011
     d58:	02000017          	auipc	zero,0x2000
                this_find->next = finder->next;
     d5c:	0024                	addi	s1,sp,8
     d5e:	0b3e0b0b          	0xb3e0b0b
     d62:	00000e03          	lb	t3,0(zero) # 0 <_start>
                finder->next    = list->next;
     d66:	0b002403          	lw	s0,176(zero) # b0 <main+0x38>
     d6a:	030b3e0b          	0x30b3e0b
                list->next      = finder;
     d6e:	0008                	0x8
        if (info.idx >= 0)
     d70:	0400                	addi	s0,sp,512
     d72:	0016                	c.slli	zero,0x5
     d74:	0b3a0e03          	lb	t3,179(s4)
            info.idx++;
     d78:	0b39053b          	0xb39053b
     d7c:	1349                	addi	t1,t1,-14
     d7e:	0000                	unimp
     d80:	1605                	addi	a2,a2,-31
     d82:	0300                	addi	s0,sp,384
     d84:	3a0e                	fld	fs4,224(sp)
     d86:	390b3b0b          	0x390b3b0b
     d8a:	0013490b          	0x13490b
     d8e:	0600                	addi	s0,sp,768
     d90:	0b0b0117          	auipc	sp,0xb0b0
    for (i = 0; i < find_num; i++)
     d94:	0b3a                	slli	s6,s6,0xe
     d96:	0b390b3b          	0xb390b3b
     d9a:	1301                	addi	t1,t1,-32
     d9c:	0000                	unimp
     d9e:	03000d07          	0x3000d07
     da2:	3a0e                	fld	fs4,224(sp)
     da4:	390b3b0b          	0x390b3b0b
     da8:	0013490b          	0x13490b
     dac:	0800                	addi	s0,sp,16
     dae:	0101                	addi	sp,sp,0
    if (finder_idx > 0)
     db0:	1349                	addi	t1,t1,-14
     db2:	1301                	addi	t1,t1,-32
    remover = core_list_remove(list->next);
     db4:	0000                	unimp
     db6:	2109                	jal	11b8 <__stack_size+0x1b8>
    if (info->idx >= 0)
     db8:	4900                	lw	s0,16(a0)
     dba:	000b2f13          	slti	t5,s6,0
    list_head *ret = item->next;
     dbe:	0a00                	addi	s0,sp,272
    tmp        = item->info;
     dc0:	0b0b0113          	addi	sp,s6,176
    item->info = ret->info;
     dc4:	0b3a                	slli	s6,s6,0xe
     dc6:	0b390b3b          	0xb390b3b
    item->next = item->next->next;
     dca:	1301                	addi	t1,t1,-32
    item->info = ret->info;
     dcc:	0000                	unimp
     dce:	03000d0b          	0x3000d0b
    ret->info  = tmp;
     dd2:	3a0e                	fld	fs4,224(sp)
    item->next = item->next->next;
     dd4:	390b3b0b          	0x390b3b0b
    if (info->idx >= 0)
     dd8:	3813490b          	0x3813490b
    ret->next  = NULL;
     ddc:	0c00000b          	0xc00000b
    if (info->idx >= 0)
     de0:	0b0b000f          	0xb0b000f
        while (list && (list->info->idx != info->idx))
     de4:	0000                	unimp
     de6:	130d                	addi	t1,t1,-29
     de8:	0301                	addi	t1,t1,0
     dea:	0b0e                	slli	s6,s6,0x3
     dec:	3b0b3a0b          	0x3b0b3a0b
     df0:	010b390b          	0x10b390b
            list = list->next;
     df4:	0e000013          	li	zero,224
        while (list && (list->info->idx != info->idx))
     df8:	000d                	c.nop	3
     dfa:	0b3a0803          	lb	a6,179(s4)
        finder = list->next;
     dfe:	0b390b3b          	0xb390b3b
    while (finder)
     e02:	1349                	addi	t1,t1,-14
        retval = crc16(list->info->data16, retval);
     e04:	0b38                	addi	a4,sp,408
     e06:	0000                	unimp
     e08:	0b000f0f          	0xb000f0f
     e0c:	0013490b          	0x13490b
     e10:	1000                	addi	s0,sp,32
     e12:	0e030113          	addi	sp,t1,224
     e16:	0b3a050b          	0xb3a050b
        finder = finder->next;
     e1a:	0b390b3b          	0xb390b3b
        retval = crc16(list->info->data16, retval);
     e1e:	1301                	addi	t1,t1,-32
    while (finder)
     e20:	0000                	unimp
     e22:	0d11                	addi	s10,s10,4
     e24:	0300                	addi	s0,sp,384
     e26:	3a0e                	fld	fs4,224(sp)
     e28:	390b3b0b          	0x390b3b0b
    item_removed->info  = item_modified->info;
     e2c:	3813490b          	0x3813490b
    item_removed->next  = item_modified->next;
     e30:	0005                	c.nop	1
     e32:	1200                	addi	s0,sp,288
    insize = 1;
     e34:	0015                	c.nop	5
     e36:	00001927          	0x1927
    item_removed->info  = item_modified->info;
     e3a:	27011513          	0x27011513
    item_modified->info = tmp;
     e3e:	4919                	li	s2,6
    item_removed->next  = item_modified->next;
     e40:	00130113          	addi	sp,t1,1
    item_modified->next = item_removed;
     e44:	1400                	addi	s0,sp,544
     e46:	0005                	c.nop	1
        tail = NULL;
     e48:	1349                	addi	t1,t1,-14
     e4a:	0000                	unimp
        list = NULL;
     e4c:	2615                	jal	1170 <__stack_size+0x170>
     e4e:	4900                	lw	s0,16(a0)
        nmerges = 0; /* count number of merges we do in this pass */
     e50:	16000013          	li	zero,352
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     e54:	0e030113          	addi	sp,t1,224
            nmerges++; /* there exists a merge to be done */
     e58:	0b3a050b          	0xb3a050b
     e5c:	0b39053b          	0xb39053b
            psize = 0;
     e60:	1301                	addi	t1,t1,-32
     e62:	0000                	unimp
                q = q->next;
     e64:	03000d17          	auipc	s10,0x3000
                psize++;
     e68:	3a0e                	fld	fs4,224(sp)
     e6a:	39053b0b          	0x39053b0b
                if (!q)
     e6e:	3813490b          	0x3813490b
            for (i = 0; i < insize; i++)
     e72:	1800000b          	0x1800000b
     e76:	000d                	c.nop	3
                    list = e;
     e78:	0b3a0e03          	lb	t3,179(s4)
     e7c:	0b39053b          	0xb39053b
     e80:	1349                	addi	t1,t1,-14
     e82:	0538                	addi	a4,sp,648
            while (psize > 0 || (qsize > 0 && q))
     e84:	0000                	unimp
     e86:	1319                	addi	t1,t1,-26
                else if (qsize == 0 || !q)
     e88:	0301                	addi	t1,t1,0
     e8a:	0b0e                	slli	s6,s6,0x3
     e8c:	3b0b3a0b          	0x3b0b3a0b
                else if (cmp(p->info, q->info, res) <= 0)
     e90:	3905                	jal	ac0 <main+0xa48>
     e92:	0013010b          	0x13010b
     e96:	1a00                	addi	s0,sp,304
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     e98:	0b0b0113          	addi	sp,s6,176
    return a->idx - b->idx;
     e9c:	0b3a                	slli	s6,s6,0xe
     e9e:	0b39053b          	0xb39053b
     ea2:	1301                	addi	t1,t1,-32
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     ea4:	0000                	unimp
     ea6:	0b01171b          	0xb01171b
     eaa:	3b0b3a0b          	0x3b0b3a0b
     eae:	3905                	jal	ade <main+0xa66>
     eb0:	0013010b          	0x13010b
     eb4:	1c00                	addi	s0,sp,560
     eb6:	000d                	c.nop	3
     eb8:	0b3a0e03          	lb	t3,179(s4)
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     ebc:	0b39053b          	0xb39053b
    return a->idx - b->idx;
     ec0:	1349                	addi	t1,t1,-14
     ec2:	0000                	unimp
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     ec4:	131d                	addi	t1,t1,-25
     ec6:	0300                	addi	s0,sp,384
     ec8:	3c0e                	fld	fs8,224(sp)
     eca:	0019                	c.nop	6
     ecc:	1e00                	addi	s0,sp,816
     ece:	0115                	addi	sp,sp,5
     ed0:	13011927          	0x13011927
     ed4:	0000                	unimp
     ed6:	341f 0300 3a0e      	0x3a0e0300341f
                else if (cmp(p->info, q->info, res) <= 0)
     edc:	39053b0b          	0x39053b0b
                    qsize--;
     ee0:	3f13490b          	0x3f13490b
                    q = q->next;
     ee4:	3c19                	jal	8fa <main+0x882>
     ee6:	0019                	c.nop	6
                    qsize--;
     ee8:	2000                	fld	fs0,0(s0)
     eea:	0034                	addi	a3,sp,8
                if (tail)
     eec:	0b3a0e03          	lb	t3,179(s4)
                    tail->next = e;
     ef0:	0b390b3b          	0xb390b3b
                    list = e;
     ef4:	1349                	addi	t1,t1,-14
     ef6:	193c193f 04210000 	0x4210000193c193f
            while (psize > 0 || (qsize > 0 && q))
     efe:	0301                	addi	t1,t1,0
     f00:	3e0e                	fld	ft8,224(sp)
     f02:	490b0b0b          	0x490b0b0b
                    qsize--;
     f06:	3b0b3a13          	sltiu	s4,s6,944
     f0a:	010b390b          	0x10b390b
                    q = q->next;
     f0e:	22000013          	li	zero,544
                if (tail)
     f12:	0028                	addi	a0,sp,8
                    list = e;
     f14:	0b1c0e03          	lb	t3,177(s8) # 62101 <_data_lma+0x57ae9>
     f18:	0000                	unimp
     f1a:	03003423          	0x3003423
     f1e:	3a0e                	fld	fs4,224(sp)
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f20:	390b3b0b          	0x390b3b0b
     f24:	0213490b          	0x213490b
     f28:	0018                	0x18
     f2a:	2400                	fld	fs0,8(s0)
     f2c:	012e                	slli	sp,sp,0xb
     f2e:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
     f36:	0b39                	addi	s6,s6,14
        finder = list->next;
     f38:	13491927          	0x13491927
    while (finder)
     f3c:	0111                	addi	sp,sp,4
     f3e:	0612                	slli	a2,a2,0x4
     f40:	1840                	addi	s0,sp,52
     f42:	01194297          	auipc	t0,0x1194
                    psize--;
     f46:	25000013          	li	zero,592
     f4a:	0005                	c.nop	1
                    p = p->next;
     f4c:	0b3a0e03          	lb	t3,179(s4)
     f50:	0b390b3b          	0xb390b3b
        while (p)
     f54:	1349                	addi	t1,t1,-14
     f56:	1702                	slli	a4,a4,0x20
        tail->next = NULL;
     f58:	0000                	unimp
     f5a:	0526                	slli	a0,a0,0x9
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     f5c:	0300                	addi	s0,sp,384
     f5e:	3a0e                	fld	fs4,224(sp)
        insize *= 2;
     f60:	390b3b0b          	0x390b3b0b
        while (p)
     f64:	0213490b          	0x213490b
     f68:	0018                	0x18
     f6a:	2700                	fld	fs0,8(a4)
        nmerges = 0; /* count number of merges we do in this pass */
     f6c:	0034                	addi	a3,sp,8
     f6e:	0b3a0803          	lb	a6,179(s4)
        tail = NULL;
     f72:	0b390b3b          	0xb390b3b
        list = NULL;
     f76:	1349                	addi	t1,t1,-14
     f78:	1702                	slli	a4,a4,0x20
     f7a:	0000                	unimp
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f7c:	3428                	fld	fa0,104(s0)
     f7e:	0300                	addi	s0,sp,384
     f80:	3a0e                	fld	fs4,224(sp)
     f82:	390b3b0b          	0x390b3b0b
     f86:	0213490b          	0x213490b
     f8a:	29000017          	auipc	zero,0x29000
     f8e:	011d                	addi	sp,sp,7
     f90:	1331                	addi	t1,t1,-20
     f92:	0152                	slli	sp,sp,0x14
     f94:	1755                	addi	a4,a4,-11
     f96:	0b58                	addi	a4,sp,404
     f98:	0b59                	addi	s6,s6,22
     f9a:	13010b57          	0x13010b57
     f9e:	0000                	unimp
     fa0:	052a                	slli	a0,a0,0xa
     fa2:	3100                	fld	fs0,32(a0)
            list = list->next;
     fa4:	00170213          	addi	tp,a4,1
        while (list && ((list->info->data16 & 0xff) != info->data16))
     fa8:	2b00                	fld	fs0,16(a4)
     faa:	1755010b          	0x1755010b
     fae:	0000                	unimp
            retval += (list->next->info->data16 >> 8) & 1;
     fb0:	342c                	fld	fa1,104(s0)
     fb2:	3100                	fld	fs0,32(a0)
            missed++;
     fb4:	00170213          	addi	tp,a4,1
     fb8:	2d00                	fld	fs0,24(a0)
     fba:	011d                	addi	sp,sp,7
            retval += (list->next->info->data16 >> 8) & 1;
     fbc:	1331                	addi	t1,t1,-20
     fbe:	0152                	slli	sp,sp,0x14
            missed++;
     fc0:	1755                	addi	a4,a4,-11
     fc2:	0b58                	addi	a4,sp,404
            retval += (list->next->info->data16 >> 8) & 1;
     fc4:	0559                	addi	a0,a0,22
     fc6:	13010b57          	0x13010b57
     fca:	0000                	unimp
     fcc:	1d2e                	slli	s10,s10,0x2b
     fce:	3101                	jal	bce <main+0xb56>
     fd0:	55015213          	0x55015213
     fd4:	590b5817          	auipc	a6,0x590b5
    finder = list->next;
     fd8:	5705                	li	a4,-31
     fda:	2f00000b          	0x2f00000b
    while (finder)
     fde:	012e                	slli	sp,sp,0xb
        retval = crc16(list->info->data16, retval);
     fe0:	0b3a0e03          	lb	t3,179(s4)
     fe4:	0b390b3b          	0xb390b3b
     fe8:	13491927          	0x13491927
     fec:	0b20                	addi	s0,sp,408
     fee:	1301                	addi	t1,t1,-32
     ff0:	0000                	unimp
     ff2:	0530                	addi	a2,sp,648
        finder = finder->next;
     ff4:	0300                	addi	s0,sp,384
     ff6:	3a08                	fld	fa0,48(a2)
        retval = crc16(list->info->data16, retval);
     ff8:	390b3b0b          	0x390b3b0b
    while (finder)
     ffc:	0013490b          	0x13490b
}
    1000:	3100                	fld	fs0,32(a0)
    1002:	0034                	addi	a3,sp,8
    1004:	0b3a0e03          	lb	t3,179(s4)
    1008:	0b390b3b          	0xb390b3b
    100c:	1349                	addi	t1,t1,-14
    100e:	0000                	unimp
    1010:	2e32                	fld	ft8,264(sp)
    1012:	3f01                	jal	f22 <core_bench_list+0x2c2>
    1014:	0319                	addi	t1,t1,6
    1016:	3a0e                	fld	fs4,224(sp)
    1018:	390b3b0b          	0x390b3b0b
    101c:	1119270b          	0x1119270b
    1020:	1201                	addi	tp,tp,-32
    1022:	4006                	0x4006
    1024:	9718                	0x9718
    1026:	1942                	slli	s2,s2,0x30
    1028:	1301                	addi	t1,t1,-32
    102a:	0000                	unimp
    102c:	03000533          	mul	a0,zero,a6
    1030:	3a08                	fld	fa0,48(a2)
    1032:	390b3b0b          	0x390b3b0b
    1036:	0213490b          	0x213490b
    103a:	34000017          	auipc	zero,0x34000
    info.idx = finder_idx;
    103e:	8289                	srli	a3,a3,0x2
    1040:	0101                	addi	sp,sp,0
    1042:	0111                	addi	sp,sp,4
    if (finder_idx > 0)
    1044:	4295                	li	t0,5
    1046:	3119                	jal	c4c <main+0xbd4>
        while (p)
    1048:	00130113          	addi	sp,t1,1
    104c:	3500                	fld	fs0,40(a0)
    104e:	828a                	mv	t0,sp
    1050:	0001                	nop
    1052:	1802                	slli	a6,a6,0x20
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1054:	4291                	li	t0,4
    1056:	0018                	0x18
    1058:	3600                	fld	fs0,40(a2)
    105a:	8289                	srli	a3,a3,0x2
        while (p)
    105c:	0101                	addi	sp,sp,0
    105e:	0111                	addi	sp,sp,4
        tail = NULL;
    1060:	4295                	li	t0,5
    1062:	3119                	jal	c68 <core_bench_list+0x8>
        list = NULL;
    1064:	37000013          	li	zero,880
        nmerges = 0; /* count number of merges we do in this pass */
    1068:	0034                	addi	a3,sp,8
    106a:	0b3a0803          	lb	a6,179(s4)
        switch (flag)
    106e:	0b390b3b          	0xb390b3b
            nmerges++; /* there exists a merge to be done */
    1072:	1349                	addi	t1,t1,-14
    1074:	1802                	slli	a6,a6,0x20
    1076:	0000                	unimp
            psize = 0;
    1078:	0b38                	addi	a4,sp,408
    107a:	5501                	li	a0,-32
            nmerges++; /* there exists a merge to be done */
    107c:	00130117          	auipc	sp,0x130
    1080:	3900                	fld	fs0,48(a0)
    1082:	8289                	srli	a3,a3,0x2
                q = q->next;
    1084:	0101                	addi	sp,sp,0
    1086:	0111                	addi	sp,sp,4
                psize++;
    1088:	1331                	addi	t1,t1,-20
    108a:	0000                	unimp
                if (!q)
    108c:	893a                	mv	s2,a4
    108e:	0182                	c.slli64	gp
            for (i = 0; i < insize; i++)
    1090:	1101                	addi	sp,sp,-32
    1092:	3101                	jal	c92 <core_bench_list+0x32>
    1094:	00130113          	addi	sp,t1,1
                    list = e;
    1098:	3b00                	fld	fs0,48(a4)
    109a:	8289                	srli	a3,a3,0x2
            while (psize > 0 || (qsize > 0 && q))
    109c:	0001                	nop
    109e:	0111                	addi	sp,sp,4
                else if (qsize == 0 || !q)
    10a0:	1331                	addi	t1,t1,-20
    10a2:	0000                	unimp
    10a4:	2e3c                	fld	fa5,88(a2)
    10a6:	3f00                	fld	fs0,56(a4)
                else if (cmp(p->info, q->info, res) <= 0)
    10a8:	3c19                	jal	abe <main+0xa46>
    10aa:	6e19                	lui	t3,0x6
    10ac:	030e                	slli	t1,t1,0x3
    10ae:	3a0e                	fld	fs4,224(sp)
    ee_s16 data = *pdata;
    10b0:	000b3b0b          	0xb3b0b
    if (optype) /* if cached, use cache */
    10b4:	3d00                	fld	fs0,56(a0)
    10b6:	002e                	c.slli	zero,0xb
        return (data & 0x007f);
    10b8:	193c193f 0e030e6e 	0xe030e6e193c193f
               & 0xf);       /* bits 3-6 is specific data for the operation */
    10c0:	0b3a                	slli	s6,s6,0xe
    10c2:	0b390b3b          	0xb390b3b
        ee_s16 dtype
    10c6:	0000                	unimp
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    10c8:	0100                	addi	s0,sp,128
    10ca:	0111                	addi	sp,sp,4
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    10cc:	0e25                	addi	t3,t3,9
    10ce:	0e030b13          	addi	s6,t1,224
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    10d2:	17550e1b          	0x17550e1b
        switch (flag)
    10d6:	0111                	addi	sp,sp,4
    10d8:	1710                	addi	a2,sp,928
    10da:	0000                	unimp
    10dc:	2402                	fld	fs0,0(sp)
    10de:	0b00                	addi	s0,sp,400
    10e0:	030b3e0b          	0x30b3e0b
    10e4:	000e                	c.slli	zero,0x3
    10e6:	0300                	addi	s0,sp,384
    10e8:	0024                	addi	s1,sp,8
    10ea:	0b3e0b0b          	0xb3e0b0b
        res->crc = crcu16(retval, res->crc);
    10ee:	00000803          	lb	a6,0(zero) # 0 <_start>
    10f2:	1604                	addi	s1,sp,800
    10f4:	0300                	addi	s0,sp,384
    10f6:	3a0e                	fld	fs4,224(sp)
        retval &= 0x007f;
    10f8:	39053b0b          	0x39053b0b
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    10fc:	0013490b          	0x13490b
    1100:	0500                	addi	s0,sp,640
    1102:	0016                	c.slli	zero,0x5
        res->crc = crcu16(retval, res->crc);
    1104:	0b3a0e03          	lb	t3,179(s4)
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1108:	0b390b3b          	0xb390b3b
    110c:	1349                	addi	t1,t1,-14
    110e:	0000                	unimp
    ee_s16 data = *pdata;
    1110:	1706                	slli	a4,a4,0x21
    1112:	0b01                	addi	s6,s6,0
    if (optype) /* if cached, use cache */
    1114:	3b0b3a0b          	0x3b0b3a0b
        return (data & 0x007f);
    1118:	010b390b          	0x10b390b
    if (optype) /* if cached, use cache */
    111c:	07000013          	li	zero,112
               & 0xf);       /* bits 3-6 is specific data for the operation */
    1120:	000d                	c.nop	3
    1122:	0b3a0e03          	lb	t3,179(s4)
        ee_s16 dtype
    1126:	0b390b3b          	0xb390b3b
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    112a:	1349                	addi	t1,t1,-14
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    112c:	0000                	unimp
    112e:	0108                	addi	a0,sp,128
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1130:	4901                	li	s2,0
    1132:	00130113          	addi	sp,t1,1
        switch (flag)
    1136:	0900                	addi	s0,sp,144
    1138:	0021                	c.nop	8
    113a:	1349                	addi	t1,t1,-14
    113c:	00000b2f          	0xb2f
    1140:	130a                	slli	t1,t1,0x22
    1142:	0b01                	addi	s6,s6,0
    1144:	3b0b3a0b          	0x3b0b3a0b
    1148:	010b390b          	0x10b390b
        res->crc = crcu16(retval, res->crc);
    114c:	0b000013          	li	zero,176
    1150:	000d                	c.nop	3
    1152:	0b3a0e03          	lb	t3,179(s4)
    1156:	0b390b3b          	0xb390b3b
        retval &= 0x007f;
    115a:	1349                	addi	t1,t1,-14
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    115c:	0b38                	addi	a4,sp,408
    115e:	0000                	unimp
    1160:	0f0c                	addi	a1,sp,912
    1162:	0b00                	addi	s0,sp,400
        res->crc = crcu16(retval, res->crc);
    1164:	0d00000b          	0xd00000b
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1168:	0e030113          	addi	sp,t1,224
    116c:	0b3a0b0b          	0xb3a0b0b
    return val1 - val2;
    1170:	0b390b3b          	0xb390b3b
                else if (cmp(p->info, q->info, res) <= 0)
    1174:	1301                	addi	t1,t1,-32
    1176:	0000                	unimp
                    qsize--;
    1178:	0d0e                	slli	s10,s10,0x3
    117a:	0300                	addi	s0,sp,384
                    q = q->next;
    117c:	3a08                	fld	fa0,48(a2)
    117e:	390b3b0b          	0x390b3b0b
                    qsize--;
    1182:	3813490b          	0x3813490b
                if (tail)
    1186:	0f00000b          	0xf00000b
                    tail->next = e;
    118a:	0b0b000f          	0xb0b000f
                    list = e;
    118e:	1349                	addi	t1,t1,-14
            while (psize > 0 || (qsize > 0 && q))
    1190:	0000                	unimp
    1192:	1310                	addi	a2,sp,416
    1194:	0301                	addi	t1,t1,0
    1196:	0b0e                	slli	s6,s6,0x3
    1198:	3a05                	jal	ac8 <main+0xa50>
    119a:	390b3b0b          	0x390b3b0b
                    qsize--;
    119e:	0013010b          	0x13010b
    11a2:	1100                	addi	s0,sp,160
                    q = q->next;
    11a4:	000d                	c.nop	3
    11a6:	0b3a0e03          	lb	t3,179(s4)
                if (tail)
    11aa:	0b390b3b          	0xb390b3b
                    list = e;
    11ae:	1349                	addi	t1,t1,-14
    11b0:	0538                	addi	a4,sp,648
    11b2:	0000                	unimp
    11b4:	1512                	slli	a0,a0,0x24
    11b6:	2700                	fld	fs0,8(a4)
                    psize--;
    11b8:	0019                	c.nop	6
    11ba:	1300                	addi	s0,sp,416
    11bc:	0115                	addi	sp,sp,5
    11be:	13491927          	0x13491927
                    p = p->next;
    11c2:	1301                	addi	t1,t1,-32
    11c4:	0000                	unimp
    11c6:	0514                	addi	a3,sp,640
    11c8:	4900                	lw	s0,16(a0)
    11ca:	15000013          	li	zero,336
        while (p)
    11ce:	0026                	c.slli	zero,0x9
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    11d0:	1349                	addi	t1,t1,-14
    11d2:	0000                	unimp
        tail->next = NULL;
    11d4:	1316                	slli	t1,t1,0x25
    11d6:	0301                	addi	t1,t1,0
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    11d8:	0b0e                	slli	s6,s6,0x3
    11da:	3a05                	jal	b0a <main+0xa92>
    11dc:	39053b0b          	0x39053b0b
        insize *= 2;
    11e0:	0013010b          	0x13010b
    11e4:	1700                	addi	s0,sp,928
    11e6:	000d                	c.nop	3
    11e8:	0b3a0e03          	lb	t3,179(s4)
        while (p)
    11ec:	0b39053b          	0xb39053b
        tail->next = NULL;
    11f0:	1349                	addi	t1,t1,-14
    11f2:	0b38                	addi	a4,sp,408
    11f4:	0000                	unimp
    11f6:	0d18                	addi	a4,sp,656
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    11f8:	0300                	addi	s0,sp,384
    11fa:	3a0e                	fld	fs4,224(sp)
    11fc:	39053b0b          	0x39053b0b
    1200:	3813490b          	0x3813490b
    1204:	0005                	c.nop	1
    1206:	1900                	addi	s0,sp,176
                if (res->crcmatrix == 0)
    1208:	0e030113          	addi	sp,t1,224
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    120c:	0b3a0b0b          	0xb3a0b0b
    1210:	0b39053b          	0xb39053b
                if (res->crcmatrix == 0)
    1214:	1301                	addi	t1,t1,-32
    1216:	0000                	unimp
                    res->crcmatrix = retval;
    1218:	131a                	slli	t1,t1,0x26
    121a:	0b01                	addi	s6,s6,0
    121c:	3b0b3a0b          	0x3b0b3a0b
    1220:	3905                	jal	e50 <core_bench_list+0x1f0>
    1222:	0013010b          	0x13010b
                retval = core_bench_state(res->size,
    1226:	1b00                	addi	s0,sp,432
    1228:	0b0b0117          	auipc	sp,0xb0b0
    122c:	0b3a                	slli	s6,s6,0xe
    122e:	0b39053b          	0xb39053b
    1232:	1301                	addi	t1,t1,-32
    1234:	0000                	unimp
    1236:	0d1c                	addi	a5,sp,656
    1238:	0300                	addi	s0,sp,384
    123a:	3a0e                	fld	fs4,224(sp)
    123c:	39053b0b          	0x39053b0b
    1240:	0013490b          	0x13490b
    1244:	1d00                	addi	s0,sp,688
    1246:	0e030013          	addi	zero,t1,224
    124a:	193c                	addi	a5,sp,184
    124c:	0000                	unimp
    124e:	151e                	slli	a0,a0,0x27
                if (res->crcstate == 0)
    1250:	2701                	jal	1950 <matrix_test+0x34c>
    1252:	0119                	addi	sp,sp,6
                retval = core_bench_state(res->size,
    1254:	1f000013          	li	zero,496
    1258:	0034                	addi	a3,sp,8
    125a:	0b3a0e03          	lb	t3,179(s4)
                if (res->crcstate == 0)
    125e:	0b39053b          	0xb39053b
                    res->crcstate = retval;
    1262:	1349                	addi	t1,t1,-14
    1264:	193c193f 34200000 	0x34200000193c193f
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    126c:	0300                	addi	s0,sp,384
    126e:	3a0e                	fld	fs4,224(sp)
    1270:	390b3b0b          	0x390b3b0b
    1274:	3f13490b          	0x3f13490b
    1278:	3c19                	jal	c8e <core_bench_list+0x2e>
    127a:	0019                	c.nop	6
                if (res->crcmatrix == 0)
    127c:	2100                	fld	fs0,0(a0)
    127e:	0035                	c.nop	13
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1280:	1349                	addi	t1,t1,-14
    1282:	0000                	unimp
    1284:	2e22                	fld	ft8,8(sp)
    1286:	3f01                	jal	1196 <__stack_size+0x196>
                if (res->crcmatrix == 0)
    1288:	0319                	addi	t1,t1,6
    128a:	3a0e                	fld	fs4,224(sp)
                    res->crcmatrix = retval;
    128c:	390b3b0b          	0x390b3b0b
    1290:	4919270b          	0x4919270b
    1294:	12011113          	0x12011113
                retval = core_bench_state(res->size,
    1298:	4006                	0x4006
    129a:	9718                	0x9718
    129c:	1942                	slli	s2,s2,0x30
    129e:	1301                	addi	t1,t1,-32
    12a0:	0000                	unimp
    12a2:	03003423          	0x3003423
    12a6:	3a0e                	fld	fs4,224(sp)
    12a8:	390b3b0b          	0x390b3b0b
    12ac:	1c13490b          	0x1c13490b
    12b0:	2400000b          	0x2400000b
    12b4:	012e                	slli	sp,sp,0xb
    12b6:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    12be:	0b39                	addi	s6,s6,14
    12c0:	13491927          	0x13491927
                if (res->crcstate == 0)
    12c4:	0b20                	addi	s0,sp,408
    12c6:	1301                	addi	t1,t1,-32
                retval = core_bench_state(res->size,
    12c8:	0000                	unimp
    12ca:	0525                	addi	a0,a0,9
    12cc:	0300                	addi	s0,sp,384
    12ce:	3a0e                	fld	fs4,224(sp)
                if (res->crcstate == 0)
    12d0:	390b3b0b          	0x390b3b0b
                    res->crcstate = retval;
    12d4:	0013490b          	0x13490b
    12d8:	2600                	fld	fs0,8(a2)
    12da:	0005                	c.nop	1
    12dc:	0b3a0803          	lb	a6,179(s4)
    12e0:	0b390b3b          	0xb390b3b
    12e4:	1349                	addi	t1,t1,-14
    12e6:	0000                	unimp
            retval += (list->next->info->data16 >> 8) & 1;
    12e8:	03000527          	0x3000527
    12ec:	3a0e                	fld	fs4,224(sp)
    12ee:	390b3b0b          	0x390b3b0b
    ee_u32 size     = (blksize / per_item)
    12f2:	0213490b          	0x213490b
    12f6:	28000017          	auipc	zero,0x28000
    list->info->data16 = (ee_s16)0x8080;
    12fa:	0005                	c.nop	1
    list->next         = NULL;
    12fc:	0b3a0803          	lb	a6,179(s4)
    list->info->data16 = (ee_s16)0x8080;
    1300:	0b390b3b          	0xb390b3b
    if ((*memblock + 1) >= memblock_end)
    1304:	1349                	addi	t1,t1,-14
    1306:	1702                	slli	a4,a4,0x20
    memblock++;
    1308:	0000                	unimp
    130a:	1d29                	addi	s10,s10,-22
    ee_u32 size     = (blksize / per_item)
    130c:	3101                	jal	f0c <core_bench_list+0x2ac>
    130e:	12011113          	0x12011113
    list_head *memblock_end  = memblock + size;
    1312:	5806                	lw	a6,96(sp)
    1314:	570b590b          	0x570b590b
    list->info         = datablock;
    1318:	0013010b          	0x13010b
    list_data *datablock_end = datablock + size;
    131c:	2a00                	fld	fs0,16(a2)
    131e:	0005                	c.nop	1
    list->info->idx    = 0x0000;
    1320:	1331                	addi	t1,t1,-20
    1322:	1702                	slli	a4,a4,0x20
    list->info->data16 = (ee_s16)0x8080;
    1324:	0000                	unimp
    1326:	31011d2b          	0x31011d2b
    list_data *datablock_end = datablock + size;
    132a:	55015213          	0x55015213
    datablock++;
    132e:	590b5817          	auipc	a6,0x590b5
    if ((*memblock + 1) >= memblock_end)
    1332:	000b570b          	0xb570b
    if ((*datablock + 1) >= datablock_end)
    1336:	2c00                	fld	fs0,24(s0)
    1338:	011d                	addi	sp,sp,7
    133a:	1331                	addi	t1,t1,-20
    newitem->info = *datablock;
    133c:	0152                	slli	sp,sp,0x14
    133e:	1755                	addi	a4,a4,-11
    newitem->next      = insert_point->next;
    1340:	0b58                	addi	a4,sp,404
    1342:	0b59                	addi	s6,s6,22
    insert_point->next = newitem;
    1344:	13010b57          	0x13010b57
    to->idx    = from->idx;
    1348:	0000                	unimp
    134a:	0b2d                	addi	s6,s6,11
    to->data16 = from->data16;
    134c:	5501                	li	a0,-32
    134e:	2e000017          	auipc	zero,0x2e000
    1352:	0034                	addi	a3,sp,8
    to->idx    = from->idx;
    1354:	1331                	addi	t1,t1,-20
    1356:	0000                	unimp
    for (i = 0; i < size; i++)
    1358:	3100342f          	0x3100342f
    135c:	00170213          	addi	tp,a4,1
    to->idx    = from->idx;
    1360:	3000                	fld	fs0,32(s0)
    1362:	011d                	addi	sp,sp,7
    1364:	1331                	addi	t1,t1,-20
    1366:	0111                	addi	sp,sp,4
    for (i = 0; i < size; i++)
    1368:	0612                	slli	a2,a2,0x4
    136a:	0b58                	addi	a4,sp,404
    to->idx    = from->idx;
    136c:	0b59                	addi	s6,s6,22
    136e:	00000b57          	0xb57
    if ((*memblock + 1) >= memblock_end)
    1372:	0531                	addi	a0,a0,12
    1374:	3100                	fld	fs0,32(a0)
    1376:	32000013          	li	zero,800
    if ((*datablock + 1) >= datablock_end)
    137a:	0034                	addi	a3,sp,8
    137c:	0b3a0803          	lb	a6,179(s4)
    1380:	0b390b3b          	0xb390b3b
    1384:	1349                	addi	t1,t1,-14
    1386:	0000                	unimp
        ee_u16 datpat = ((ee_u16)(seed ^ i) & 0xf);
    1388:	03003433          	mulhu	s0,zero,a6
            = (datpat << 3) | (i & 0x7); /* alternate between algorithms */
    138c:	3a0e                	fld	fs4,224(sp)
    138e:	390b3b0b          	0x390b3b0b
    1392:	0013490b          	0x13490b
    1396:	3400                	fld	fs0,40(s0)
    newitem->next      = insert_point->next;
    1398:	0034                	addi	a3,sp,8
    139a:	0b3a0e03          	lb	t3,179(s4)
        ee_u16 dat
    139e:	0b390b3b          	0xb390b3b
    insert_point->next = newitem;
    13a2:	1349                	addi	t1,t1,-14
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    13a4:	1702                	slli	a4,a4,0x20
    13a6:	0000                	unimp
    newitem->info = *datablock;
    13a8:	2e35                	jal	16e4 <matrix_test+0xe0>
    13aa:	3101                	jal	faa <core_bench_list+0x34a>
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    13ac:	12011113          	0x12011113
    to->data16 = from->data16;
    13b0:	4006                	0x4006
    13b2:	9718                	0x9718
    to->idx    = from->idx;
    13b4:	1942                	slli	s2,s2,0x30
    13b6:	1301                	addi	t1,t1,-32
    13b8:	0000                	unimp
    13ba:	2e36                	fld	ft8,328(sp)
    13bc:	3101                	jal	fbc <core_bench_list+0x35c>
    13be:	12011113          	0x12011113
    13c2:	4006                	0x4006
    for (i = 0; i < size; i++)
    13c4:	9718                	0x9718
    13c6:	1942                	slli	s2,s2,0x30
    13c8:	0000                	unimp
    13ca:	0100                	addi	s0,sp,128
    while (finder->next != NULL)
    13cc:	0111                	addi	sp,sp,4
    13ce:	0e25                	addi	t3,t3,9
    13d0:	0e030b13          	addi	s6,t1,224
        if (i < size / 5) /* first 20% of the list in order */
    13d4:	17550e1b          	0x17550e1b
    13d8:	0111                	addi	sp,sp,4
    13da:	1710                	addi	a2,sp,928
                                & (((i & 0x07) << 8)
    13dc:	0000                	unimp
    13de:	2402                	fld	fs0,0(sp)
        if (i < size / 5) /* first 20% of the list in order */
    13e0:	0b00                	addi	s0,sp,400
    13e2:	030b3e0b          	0x30b3e0b
                                & (((i & 0x07) << 8)
    13e6:	000e                	c.slli	zero,0x3
        if (i < size / 5) /* first 20% of the list in order */
    13e8:	0300                	addi	s0,sp,384
    13ea:	0016                	c.slli	zero,0x5
    13ec:	0b3a0e03          	lb	t3,179(s4)
        finder = finder->next;
    13f0:	0b390b3b          	0xb390b3b
            finder->info->idx = i++;
    13f4:	1349                	addi	t1,t1,-14
    13f6:	0000                	unimp
        finder = finder->next;
    13f8:	2404                	fld	fs1,8(s0)
    13fa:	0b00                	addi	s0,sp,400
    while (finder->next != NULL)
    13fc:	030b3e0b          	0x30b3e0b
    1400:	0008                	0x8
    1402:	0500                	addi	s0,sp,640
    insize = 1;
    1404:	0016                	c.slli	zero,0x5
    1406:	0b3a0e03          	lb	t3,179(s4)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    140a:	0b39053b          	0xb39053b
    insize = 1;
    140e:	1349                	addi	t1,t1,-14
        tail = NULL;
    1410:	0000                	unimp
    1412:	1706                	slli	a4,a4,0x21
        list = NULL;
    1414:	0b01                	addi	s6,s6,0
    1416:	3b0b3a0b          	0x3b0b3a0b
        nmerges = 0; /* count number of merges we do in this pass */
    141a:	010b390b          	0x10b390b
            nmerges++; /* there exists a merge to be done */
    141e:	07000013          	li	zero,112
    1422:	000d                	c.nop	3
            psize = 0;
    1424:	0b3a0e03          	lb	t3,179(s4)
                q = q->next;
    1428:	0b390b3b          	0xb390b3b
                psize++;
    142c:	1349                	addi	t1,t1,-14
    142e:	0000                	unimp
                if (!q)
    1430:	0108                	addi	a0,sp,128
    1432:	4901                	li	s2,0
            for (i = 0; i < insize; i++)
    1434:	00130113          	addi	sp,t1,1
                    list = e;
    1438:	0900                	addi	s0,sp,144
    143a:	0021                	c.nop	8
    143c:	1349                	addi	t1,t1,-14
    143e:	00000b2f          	0xb2f
    1442:	130a                	slli	t1,t1,0x22
            while (psize > 0 || (qsize > 0 && q))
    1444:	0b01                	addi	s6,s6,0
    1446:	3b0b3a0b          	0x3b0b3a0b
                else if (qsize == 0 || !q)
    144a:	010b390b          	0x10b390b
    144e:	0b000013          	li	zero,176
                else if (cmp(p->info, q->info, res) <= 0)
    1452:	000d                	c.nop	3
    1454:	0b3a0e03          	lb	t3,179(s4)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1458:	0b390b3b          	0xb390b3b
    return a->idx - b->idx;
    145c:	1349                	addi	t1,t1,-14
    145e:	0b38                	addi	a4,sp,408
    1460:	0000                	unimp
    1462:	0f0c                	addi	a1,sp,912
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1464:	0b00                	addi	s0,sp,400
    1466:	0d00000b          	0xd00000b
    146a:	0e030113          	addi	sp,t1,224
    146e:	0b3a0b0b          	0xb3a0b0b
    1472:	0b390b3b          	0xb390b3b
    1476:	1301                	addi	t1,t1,-32
    1478:	0000                	unimp
    147a:	0d0e                	slli	s10,s10,0x3
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    147c:	0300                	addi	s0,sp,384
    147e:	3a08                	fld	fa0,48(a2)
    return a->idx - b->idx;
    1480:	390b3b0b          	0x390b3b0b
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    1484:	3813490b          	0x3813490b
    1488:	0f00000b          	0xf00000b
    148c:	0b0b000f          	0xb0b000f
    1490:	1349                	addi	t1,t1,-14
    1492:	0000                	unimp
    1494:	1310                	addi	a2,sp,416
    1496:	0301                	addi	t1,t1,0
    1498:	0b0e                	slli	s6,s6,0x3
    149a:	3a05                	jal	dca <core_bench_list+0x16a>
                else if (cmp(p->info, q->info, res) <= 0)
    149c:	390b3b0b          	0x390b3b0b
                    qsize--;
    14a0:	0013010b          	0x13010b
                    q = q->next;
    14a4:	1100                	addi	s0,sp,160
    14a6:	000d                	c.nop	3
                    qsize--;
    14a8:	0b3a0e03          	lb	t3,179(s4)
                if (tail)
    14ac:	0b390b3b          	0xb390b3b
                    tail->next = e;
    14b0:	1349                	addi	t1,t1,-14
    14b2:	0538                	addi	a4,sp,648
                    list = e;
    14b4:	0000                	unimp
    14b6:	1512                	slli	a0,a0,0x24
            while (psize > 0 || (qsize > 0 && q))
    14b8:	2700                	fld	fs0,8(a4)
    14ba:	0019                	c.nop	6
    14bc:	1300                	addi	s0,sp,416
    14be:	0115                	addi	sp,sp,5
    14c0:	13491927          	0x13491927
                    qsize--;
    14c4:	1301                	addi	t1,t1,-32
    14c6:	0000                	unimp
    14c8:	0514                	addi	a3,sp,640
    14ca:	4900                	lw	s0,16(a0)
                    q = q->next;
    14cc:	15000013          	li	zero,336
                if (tail)
    14d0:	0026                	c.slli	zero,0x9
    14d2:	1349                	addi	t1,t1,-14
                    list = e;
    14d4:	0000                	unimp
    14d6:	1316                	slli	t1,t1,0x25
    14d8:	0301                	addi	t1,t1,0
    14da:	0b0e                	slli	s6,s6,0x3
    14dc:	3a05                	jal	e0c <core_bench_list+0x1ac>
    14de:	39053b0b          	0x39053b0b
                    psize--;
    14e2:	0013010b          	0x13010b
    14e6:	1700                	addi	s0,sp,928
                    p = p->next;
    14e8:	000d                	c.nop	3
    14ea:	0b3a0e03          	lb	t3,179(s4)
    14ee:	0b39053b          	0xb39053b
        while (p)
    14f2:	1349                	addi	t1,t1,-14
        tail->next = NULL;
    14f4:	0b38                	addi	a4,sp,408
    14f6:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    14f8:	0d18                	addi	a4,sp,656
    14fa:	0300                	addi	s0,sp,384
        insize *= 2;
    14fc:	3a0e                	fld	fs4,224(sp)
    14fe:	39053b0b          	0x39053b0b
        while (p)
    1502:	3813490b          	0x3813490b
        tail->next = NULL;
    1506:	0005                	c.nop	1
    1508:	1900                	addi	s0,sp,176
    150a:	0e030113          	addi	sp,t1,224
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    150e:	0b3a0b0b          	0xb3a0b0b
    1512:	0b39053b          	0xb39053b
                                & (((i & 0x07) << 8)
    1516:	1301                	addi	t1,t1,-32
        finder = finder->next;
    1518:	0000                	unimp
    151a:	131a                	slli	t1,t1,0x26
                                & (((i & 0x07) << 8)
    151c:	0b01                	addi	s6,s6,0
    151e:	3b0b3a0b          	0x3b0b3a0b
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    1522:	3905                	jal	1152 <__stack_size+0x152>
                                & (((i & 0x07) << 8)
    1524:	0013010b          	0x13010b
                                   | pat); /* make sure the mixed items end up
    1528:	1b00                	addi	s0,sp,432
    152a:	0b0b0117          	auipc	sp,0xb0b0
    while (finder->next != NULL)
    152e:	0b3a                	slli	s6,s6,0xe
                                & (((i & 0x07) << 8)
    1530:	0b39053b          	0xb39053b
            finder->info->idx = 0x3fff
    1534:	1301                	addi	t1,t1,-32
    1536:	0000                	unimp
        finder = finder->next;
    1538:	0d1c                	addi	a5,sp,656
    153a:	0300                	addi	s0,sp,384
    while (finder->next != NULL)
    153c:	3a0e                	fld	fs4,224(sp)
    153e:	39053b0b          	0x39053b0b
    1542:	0013490b          	0x13490b
}
    1546:	1d00                	addi	s0,sp,688
    1548:	0e030013          	addi	zero,t1,224
    memblock++;
    154c:	193c                	addi	a5,sp,184
    154e:	0000                	unimp
    datablock++;
    1550:	151e                	slli	a0,a0,0x27
    1552:	2701                	jal	1c52 <core_init_matrix+0x9a>
    if ((*datablock + 1) >= datablock_end)
    1554:	0119                	addi	sp,sp,6
    1556:	1f000013          	li	zero,496
    155a:	0034                	addi	a3,sp,8
{
    155c:	0b3a0e03          	lb	t3,179(s4)
    1560:	0b39053b          	0xb39053b
    ee_u32        iterations = res->iterations;
    1564:	1349                	addi	t1,t1,-14
    1566:	193c193f 2e200000 	0x2e200000193c193f
{
    156e:	3f01                	jal	147e <core_list_init+0x18e>
    1570:	0319                	addi	t1,t1,6
    1572:	3a0e                	fld	fs4,224(sp)
    res->crc                 = 0;
    1574:	390b3b0b          	0x390b3b0b
    1578:	1113490b          	0x1113490b
{
    157c:	1201                	addi	tp,tp,-32
    157e:	4006                	0x4006
    for (i = 0; i < iterations; i++)
    1580:	9618                	0x9618
    1582:	1942                	slli	s2,s2,0x30
    1584:	1301                	addi	t1,t1,-32
    1586:	0000                	unimp
        crc      = core_bench_list(res, 1);
    1588:	3421                	jal	f90 <core_bench_list+0x330>
    158a:	0300                	addi	s0,sp,384
    158c:	3a0e                	fld	fs4,224(sp)
    158e:	390b3b0b          	0x390b3b0b
    1592:	0013490b          	0x13490b
    1596:	2200                	fld	fs0,0(a2)
        res->crc = crcu16(crc, res->crc);
    1598:	002e                	c.slli	zero,0xb
    159a:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    15a2:	0b39                	addi	s6,s6,14
    15a4:	0111                	addi	sp,sp,4
    15a6:	0612                	slli	a2,a2,0x4
        crc      = core_bench_list(res, -1);
    15a8:	1840                	addi	s0,sp,52
    15aa:	00194297          	auipc	t0,0x194
    15ae:	0000                	unimp
    15b0:	1101                	addi	sp,sp,-32
    15b2:	2501                	jal	1bb2 <core_bench_matrix+0x3e>
    15b4:	130e                	slli	t1,t1,0x23
    15b6:	1b0e030b          	0x1b0e030b
        res->crc = crcu16(crc, res->crc);
    15ba:	550e                	lw	a0,224(sp)
    15bc:	10011117          	auipc	sp,0x10011
    15c0:	02000017          	auipc	zero,0x2000
    15c4:	0b0b0113          	addi	sp,s6,176
        if (i == 0)
    15c8:	0b3a                	slli	s6,s6,0xe
    15ca:	0b390b3b          	0xb390b3b
    for (i = 0; i < iterations; i++)
    15ce:	1301                	addi	t1,t1,-32
    15d0:	0000                	unimp
    15d2:	03000d03          	lb	s10,48(zero) # 30 <_start+0x30>
}
    15d6:	3a0e                	fld	fs4,224(sp)
    15d8:	390b3b0b          	0x390b3b0b
    15dc:	3813490b          	0x3813490b
    15e0:	0400000b          	0x400000b
    15e4:	0024                	addi	s1,sp,8
    15e6:	0b3e0b0b          	0xb3e0b0b
    15ea:	00000803          	lb	a6,0(zero) # 0 <_start>
    15ee:	1605                	addi	a2,a2,-31
            res->crclist = res->crc;
    15f0:	0300                	addi	s0,sp,384
    15f2:	3a0e                	fld	fs4,224(sp)
    for (i = 0; i < iterations; i++)
    15f4:	390b3b0b          	0x390b3b0b
    15f8:	0013490b          	0x13490b
    15fc:	0600                	addi	s0,sp,768
    15fe:	0024                	addi	s1,sp,8
    1600:	0b3e0b0b          	0xb3e0b0b
{
    1604:	00000e03          	lb	t3,0(zero) # 0 <_start>
    1608:	3f012e07          	flw	ft8,1008(sp) # 100129ac <__freertos_irq_stack_top+0xf0029ac>
    160c:	0319                	addi	t1,t1,6
    160e:	3a0e                	fld	fs4,224(sp)
    MATDAT clipval = matrix_big(val);
    1610:	390b3b0b          	0x390b3b0b
{
    1614:	4919270b          	0x4919270b
    1618:	12011113          	0x12011113
    161c:	4006                	0x4006
    161e:	9718                	0x9718
    1620:	1942                	slli	s2,s2,0x30
    1622:	1301                	addi	t1,t1,-32
    1624:	0000                	unimp
    1626:	0508                	addi	a0,sp,640
    1628:	0300                	addi	s0,sp,384
    162a:	3a08                	fld	fa0,48(a2)
    162c:	390b3b0b          	0x390b3b0b
    1630:	0213490b          	0x213490b
    1634:	09000017          	auipc	zero,0x9000
    1638:	0005                	c.nop	1
    163a:	0b3a0e03          	lb	t3,179(s4)
    163e:	0b390b3b          	0xb390b3b
    1642:	1349                	addi	t1,t1,-14
    MATDAT clipval = matrix_big(val);
    1644:	1702                	slli	a4,a4,0x20
    1646:	0000                	unimp
    for (i = 0; i < N; i++)
    1648:	050a                	slli	a0,a0,0x2
    164a:	0300                	addi	s0,sp,384
    164c:	3a0e                	fld	fs4,224(sp)
    164e:	390b3b0b          	0x390b3b0b
    1652:	0213490b          	0x213490b
    1656:	0018                	0x18
    1658:	0b00                	addi	s0,sp,400
    165a:	1755010b          	0x1755010b
    165e:	0000                	unimp
    1660:	340c                	fld	fa1,40(s0)
    1662:	0300                	addi	s0,sp,384
    1664:	3a08                	fld	fa0,48(a2)
    1666:	390b3b0b          	0x390b3b0b
    166a:	0213490b          	0x213490b
    166e:	0d000017          	auipc	zero,0xd000
    1672:	011d                	addi	sp,sp,7
    1674:	1331                	addi	t1,t1,-20
    1676:	0152                	slli	sp,sp,0x14
    1678:	1755                	addi	a4,a4,-11
    167a:	0b58                	addi	a4,sp,404
    167c:	0b59                	addi	s6,s6,22
    167e:	00000b57          	0xb57
    1682:	050e                	slli	a0,a0,0x3
{
    1684:	3100                	fld	fs0,32(a0)
    1686:	00170213          	addi	tp,a4,1
            A[i * N + j] += val;
    168a:	0f00                	addi	s0,sp,912
    168c:	1331010b          	0x1331010b
    1690:	1755                	addi	a4,a4,-11
    1692:	0000                	unimp
    1694:	3410                	fld	fa2,40(s0)
    1696:	3100                	fld	fs0,32(a0)
        for (j = 0; j < N; j++)
    1698:	00170213          	addi	tp,a4,1
    for (i = 0; i < N; i++)
    169c:	1100                	addi	s0,sp,160
    169e:	0b0b000f          	0xb0b000f
    16a2:	1349                	addi	t1,t1,-14
    16a4:	0000                	unimp
    16a6:	2e12                	fld	ft8,256(sp)
    16a8:	3f01                	jal	15b8 <iterate+0x5c>
    16aa:	0319                	addi	t1,t1,6
    16ac:	3a0e                	fld	fs4,224(sp)
    16ae:	390b3b0b          	0x390b3b0b
    16b2:	2013490b          	0x2013490b
    16b6:	0013010b          	0x13010b
    16ba:	1300                	addi	s0,sp,416
    16bc:	0000010b          	0x10b
    for (i = 0; i < N; i++)
    16c0:	3414                	fld	fa3,40(s0)
    16c2:	0300                	addi	s0,sp,384
    16c4:	3a0e                	fld	fs4,224(sp)
    16c6:	390b3b0b          	0x390b3b0b
    16ca:	0013490b          	0x13490b
    for (i = 0; i < N; i++)
    16ce:	1500                	addi	s0,sp,672
    16d0:	012e                	slli	sp,sp,0xb
    16d2:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
            C[i * N + j] = (MATRES)A[i * N + j] * (MATRES)val;
    16da:	0b39                	addi	s6,s6,14
    16dc:	01111927          	0x1111927
    16e0:	0612                	slli	a2,a2,0x4
    16e2:	1840                	addi	s0,sp,52
    16e4:	01194297          	auipc	t0,0x1194
        for (j = 0; j < N; j++)
    16e8:	16000013          	li	zero,352
    for (i = 0; i < N; i++)
    16ec:	0005                	c.nop	1
    16ee:	0b3a0803          	lb	a6,179(s4)
    16f2:	0b390b3b          	0xb390b3b
    16f6:	1349                	addi	t1,t1,-14
    16f8:	1802                	slli	a6,a6,0x20
    16fa:	0000                	unimp
    16fc:	31000517          	auipc	a0,0x31000
    1700:	18000013          	li	zero,384
    1704:	012e                	slli	sp,sp,0xb
    1706:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    ee_s16 ret = 0;
    170e:	0b39                	addi	s6,s6,14
    MATRES tmp = 0, prev = 0, cur = 0;
    1710:	0b201927          	0xb201927
    1714:	1301                	addi	t1,t1,-32
    1716:	0000                	unimp
    for (i = 0; i < N; i++)
    1718:	0519                	addi	a0,a0,6
    171a:	0300                	addi	s0,sp,384
    171c:	3a08                	fld	fa0,48(a2)
    171e:	390b3b0b          	0x390b3b0b
    1722:	0013490b          	0x13490b
    1726:	1a00                	addi	s0,sp,304
    1728:	012e                	slli	sp,sp,0xb
    172a:	1331                	addi	t1,t1,-20
                ret += (cur > prev) ? 1 : 0;
    172c:	0111                	addi	sp,sp,4
    172e:	0612                	slli	a2,a2,0x4
    1730:	1840                	addi	s0,sp,52
    1732:	01194297          	auipc	t0,0x1194
    1736:	1b000013          	li	zero,432
            cur = C[i * N + j];
    173a:	0005                	c.nop	1
        for (j = 0; j < N; j++)
    173c:	1331                	addi	t1,t1,-20
    173e:	1802                	slli	a6,a6,0x20
            cur = C[i * N + j];
    1740:	0000                	unimp
    1742:	2e1c                	fld	fa5,24(a2)
            tmp += cur;
    1744:	3101                	jal	1344 <core_list_init+0x54>
    1746:	12011113          	0x12011113
    174a:	4006                	0x4006
                ret += (cur > prev) ? 1 : 0;
    174c:	9718                	0x9718
    174e:	1942                	slli	s2,s2,0x30
            tmp += cur;
    1750:	0000                	unimp
    1752:	0100                	addi	s0,sp,128
                ret += 10;
    1754:	0011                	c.nop	4
    1756:	0610                	addi	a2,sp,768
                ret += (cur > prev) ? 1 : 0;
    1758:	0111                	addi	sp,sp,4
    175a:	0112                	slli	sp,sp,0x4
            if (tmp > clipval)
    175c:	0e1b0e03          	lb	t3,225(s6)
                ret += 10;
    1760:	0e25                	addi	t3,t3,9
    1762:	00000513          	li	a0,0
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
	la gp, __global_pointer$
       0:	12f0                	addi	a2,sp,364
       2:	0000                	unimp
       4:	12f8                	addi	a4,sp,364
       6:	0000                	unimp
	la sp, _sp 
       8:	0001                	nop
       a:	f85a                	fsw	fs6,48(sp)
       c:	0012                	c.slli	zero,0x4
       e:	5c00                	lw	s0,56(s0)
	la a0, _data_lma 
      10:	0015                	c.nop	5
      12:	0400                	addi	s0,sp,512
      14:	f300                	fsw	fs0,32(a4)
      16:	5a01                	li	s4,-32
	la a1, _data
      18:	009f 0000 0000      	0x9f
      1e:	0000                	unimp
	la a2, _edata
      20:	f000                	fsw	fs0,32(s0)
      22:	0012                	c.slli	zero,0x4
      24:	2c00                	fld	fs0,24(s0)
      26:	01000013          	li	zero,16
	bgeu a1, a2, 2f
      2a:	5b00                	lw	s0,48(a4)
	lw t0, (a0)
      2c:	132c                	addi	a1,sp,424
      2e:	0000                	unimp
	sw t0, (a1)
      30:	133c                	addi	a5,sp,424
      32:	0000                	unimp
	lw t1, (a1)
      34:	0001                	nop
      36:	3c5e                	fld	fs8,496(sp)
	addi a0, a0, 4
      38:	a0000013          	li	zero,-1536
	addi a1, a1, 4
      3c:	01000013          	li	zero,16
	bltu a1, a2, 1b
      40:	5d00                	lw	s0,56(a0)
      42:	13a0                	addi	s0,sp,488
	la a0, __bss_start
      44:	0000                	unimp
      46:	13c4                	addi	s1,sp,484
      48:	0000                	unimp
      4a:	0001                	nop
	la a1, _end
      4c:	c46c                	sw	a1,76(s0)
      4e:	e4000013          	li	zero,-448
      52:	01000013          	li	zero,16
	bgeu a0, a1, 2f
      56:	5d00                	lw	s0,56(a0)
	sw zero, (a0)
      58:	154c                	addi	a1,sp,676
      5a:	0000                	unimp
	addi a0, a0, 4
      5c:	1558                	addi	a4,sp,676
      5e:	0000                	unimp
	bltu a0, a1, 1b
      60:	0001                	nop
      62:	585e                	lw	a6,244(sp)
    li x31,0xa0
      64:	0015                	c.nop	5
      66:	5c00                	lw	s0,56(s0)
    call main
      68:	0015                	c.nop	5
      6a:	0100                	addi	s0,sp,128
      6c:	5d00                	lw	s0,56(a0)
	...
    j loop
      76:	12f0                	addi	a2,sp,364
{
      78:	0000                	unimp
      7a:	140c                	addi	a1,sp,544
    portable_init(&(results[0].port), &argc, argv);
      7c:	0000                	unimp
      7e:	0001                	nop
{
      80:	0c5c                	addi	a5,sp,532
      82:	0014                	0x14
      84:	0c00                	addi	s0,sp,528
      86:	0015                	c.nop	5
      88:	0400                	addi	s0,sp,512
      8a:	f300                	fsw	fs0,32(a4)
      8c:	5c01                	li	s8,-32
      8e:	0c9f 0015 4400      	0x440000150c9f
      94:	0015                	c.nop	5
      96:	0100                	addi	s0,sp,128
      98:	5c00                	lw	s0,56(s0)
      9a:	1544                	addi	s1,sp,676
      9c:	0000                	unimp
      9e:	154c                	addi	a1,sp,676
      a0:	0000                	unimp
      a2:	0004                	0x4
      a4:	9f5c01f3          	0x9f5c01f3
      a8:	154c                	addi	a1,sp,676
      aa:	0000                	unimp
      ac:	155c                	addi	a5,sp,676
      ae:	0000                	unimp
      b0:	0001                	nop
      b2:	005c                	addi	a5,sp,4
      b4:	0000                	unimp
      b6:	0000                	unimp
      b8:	0000                	unimp
      ba:	1000                	addi	s0,sp,32
    portable_init(&(results[0].port), &argc, argv);
      bc:	dc000013          	li	zero,-576
      c0:	01000013          	li	zero,16
      c4:	5a00                	lw	s0,48(a2)
      c6:	13dc                	addi	a5,sp,484
      c8:	0000                	unimp
      ca:	154c                	addi	a1,sp,676
{
      cc:	0000                	unimp
      ce:	000e                	c.slli	zero,0x3
    portable_init(&(results[0].port), &argc, argv);
      d0:	f75a01f3          	0xf75a01f3
      d4:	4425                	li	s0,9
      d6:	f71b25f7          	0xf71b25f7
      da:	3200                	fld	fs0,32(a2)
      dc:	9f1c                	0x9f1c
      de:	154c                	addi	a1,sp,676
    results[0].seed1      = get_seed(1);
      e0:	0000                	unimp
      e2:	155c                	addi	a5,sp,676
      e4:	0000                	unimp
      e6:	0001                	nop
      e8:	005a                	c.slli	zero,0x16
      ea:	0000                	unimp
      ec:	0000                	unimp
      ee:	0000                	unimp
    results[0].seed2      = get_seed(2);
      f0:	1800                	addi	s0,sp,48
      f2:	0c000013          	li	zero,192
      f6:	0014                	0x14
      f8:	0100                	addi	s0,sp,128
      fa:	6d00                	flw	fs0,24(a0)
      fc:	140c                	addi	a1,sp,544
      fe:	0000                	unimp
    results[0].seed3      = get_seed(3);
     100:	150c                	addi	a1,sp,672
     102:	0000                	unimp
     104:	0014                	0x14
     106:	f75a01f3          	0xf75a01f3
     10a:	4425                	li	s0,9
     10c:	f71b25f7          	0xf71b25f7
    results[0].iterations = get_seed_32(4);
     110:	3200                	fld	fs0,32(a2)
     112:	331c                	fld	fa5,32(a4)
     114:	f324                	fsw	fs1,96(a4)
     116:	5b01                	li	s6,-32
     118:	9f22                	add	t5,t5,s0
     11a:	150c                	addi	a1,sp,672
     11c:	0000                	unimp
     11e:	1544                	addi	s1,sp,676
    results[0].execs = get_seed_32(5);
     120:	0000                	unimp
     122:	0001                	nop
     124:	446d                	li	s0,27
     126:	0015                	c.nop	5
     128:	4c00                	lw	s0,24(s0)
     12a:	0015                	c.nop	5
    if (results[0].execs == 0)
     12c:	1400                	addi	s0,sp,544
     12e:	f300                	fsw	fs0,32(a4)
    results[0].execs = get_seed_32(5);
     130:	5a01                	li	s4,-32
     132:	f74425f7          	0xf74425f7
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
     136:	1b25                	addi	s6,s6,-23
     138:	1c3200f7          	0x1c3200f7
     13c:	01f32433          	slt	s0,t1,t6
     140:	4c9f225b          	0x4c9f225b
     144:	0015                	c.nop	5
     146:	5c00                	lw	s0,56(s0)
     148:	0015                	c.nop	5
     14a:	0100                	addi	s0,sp,128
     14c:	6d00                	flw	fs0,24(a0)
	...
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     156:	1318                	addi	a4,sp,416
     158:	0000                	unimp
     15a:	1330                	addi	a2,sp,424
        && (results[0].seed3 == 0))
     15c:	0000                	unimp
     15e:	0001                	nop
     160:	306d                	jal	fffffa0a <__freertos_irq_stack_top+0xfefefa0a>
     162:	48000013          	li	zero,1152
     166:	01000013          	li	zero,16
        results[0].seed1 = 0x3415;
     16a:	6100                	flw	fs0,0(a0)
     16c:	1348                	addi	a0,sp,420
     16e:	0000                	unimp
     170:	13ac                	addi	a1,sp,488
     172:	0000                	unimp
     174:	0001                	nop
     176:	ac60                	fsd	fs0,216(s0)
        results[0].seed3 = 0x66;
     178:	c4000013          	li	zero,-960
     17c:	01000013          	li	zero,16
        if ((1 << (ee_u32)i) & results[0].execs)
     180:	6e00                	flw	fs0,24(a2)
     182:	13c4                	addi	s1,sp,484
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     184:	0000                	unimp
     186:	13e8                	addi	a0,sp,492
     188:	0000                	unimp
     18a:	0001                	nop
     18c:	4c60                	lw	s0,92(s0)
     18e:	0015                	c.nop	5
     190:	5c00                	lw	s0,56(s0)
     192:	0015                	c.nop	5
     194:	0100                	addi	s0,sp,128
     196:	6100                	flw	fs0,0(a0)
	...
        if ((1 << (ee_u32)i) & results[0].execs)
     1a0:	132c                	addi	a1,sp,424
     1a2:	0000                	unimp
            num_algorithms++;
     1a4:	1408                	addi	a0,sp,544
     1a6:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1a8:	0001                	nop
     1aa:	0014086f          	jal	a6,409aa <_data_lma+0x36392>
     1ae:	0c00                	addi	s0,sp,528
    results[i].err         = 0;
     1b0:	0014                	0x14
     1b2:	1300                	addi	s0,sp,416
        if ((1 << (ee_u32)i) & results[0].execs)
     1b4:	f300                	fsw	fs0,32(a4)
     1b6:	5a01                	li	s4,-32
            num_algorithms++;
     1b8:	f74425f7          	0xf74425f7
        if ((1 << (ee_u32)i) & results[0].execs)
     1bc:	1b25                	addi	s6,s6,-23
     1be:	1c3200f7          	0x1c3200f7
            num_algorithms++;
     1c2:	2432                	fld	fs0,264(sp)
     1c4:	008d                	addi	ra,ra,3
     1c6:	9f22                	add	t5,t5,s0
     1c8:	140c                	addi	a1,sp,544
     1ca:	0000                	unimp
        results[i].size = results[i].size / num_algorithms;
     1cc:	150c                	addi	a1,sp,672
     1ce:	0000                	unimp
     1d0:	0014                	0x14
     1d2:	f75a01f3          	0xf75a01f3
     1d6:	4425                	li	s0,9
        if ((1 << (ee_u32)i) & results[0].execs)
     1d8:	f71b25f7          	0xf71b25f7
        results[i].size = results[i].size / num_algorithms;
     1dc:	3200                	fld	fs0,32(a2)
     1de:	3c1c                	fld	fa5,56(s0)
        if ((1 << (ee_u32)i) & results[0].execs)
     1e0:	f31e                	fsw	ft7,164(sp)
     1e2:	5b01                	li	s6,-32
     1e4:	9f22                	add	t5,t5,s0
     1e6:	150c                	addi	a1,sp,672
     1e8:	0000                	unimp
     1ea:	1544                	addi	s1,sp,676
        if (results[i].execs & ID_LIST)
     1ec:	0000                	unimp
     1ee:	0001                	nop
        if (results[i].execs & ID_MATRIX)
     1f0:	0015446f          	jal	s0,549f0 <_data_lma+0x4a3d8>
        if (results[i].execs & ID_STATE)
     1f4:	4c00                	lw	s0,24(s0)
     1f6:	0015                	c.nop	5
     1f8:	1400                	addi	s0,sp,544
     1fa:	f300                	fsw	fs0,32(a4)
            core_init_state(
     1fc:	5a01                	li	s4,-32
     1fe:	f74425f7          	0xf74425f7
     202:	1b25                	addi	s6,s6,-23
                results[0].size, results[i].seed1, results[i].memblock[3]);
     204:	1c3200f7          	0x1c3200f7
            core_init_state(
     208:	1e3c                	addi	a5,sp,824
     20a:	225b01f3          	0x225b01f3
     20e:	4c9f 0015 5c00      	0x5c0000154c9f
     214:	0015                	c.nop	5
     216:	0100                	addi	s0,sp,128
     218:	6f00                	flw	fs0,24(a4)
	...
     222:	1358                	addi	a4,sp,420
     224:	0000                	unimp
     226:	1370                	addi	a2,sp,428
    if (results[0].iterations == 0)
     228:	0000                	unimp
     22a:	0002                	c.slli64	zero
     22c:	9f30                	0x9f30
     22e:	1370                	addi	a2,sp,428
        while (secs_passed < (secs_ret)1)
     230:	0000                	unimp
     232:	13cc                	addi	a1,sp,484
     234:	0000                	unimp
     236:	0001                	nop
     238:	cc61                	beqz	s0,310 <main+0x298>
     23a:	e8000013          	li	zero,-384
        results[0].iterations = 1;
     23e:	02000013          	li	zero,32
     242:	3100                	fld	fs0,32(a0)
        crc      = core_bench_list(res, 1);
     244:	e89f 0013 f000      	0xf0000013e89f
     24a:	01000013          	li	zero,16
     24e:	5d00                	lw	s0,56(a0)
     250:	13f0                	addi	a2,sp,492
     252:	0000                	unimp
     254:	13fc                	addi	a5,sp,492
     256:	0000                	unimp
     258:	017d0003          	lb	zero,23(s10) # 3000e7b <__freertos_irq_stack_top+0x1ff0e7b>
            results[0].iterations *= 10;
     25c:	fc9f 0013 0400      	0x4000013fc9f
    for (i = 0; i < iterations; i++)
     262:	0014                	0x14
            results[0].iterations *= 10;
     264:	0100                	addi	s0,sp,128
     266:	5d00                	lw	s0,56(a0)
     268:	150c                	addi	a1,sp,672
     26a:	0000                	unimp
     26c:	153c                	addi	a5,sp,680
     26e:	0000                	unimp
     270:	017d0003          	lb	zero,23(s10)
            start_time();
     274:	3c9f 0015 4400      	0x440000153c9f
     27a:	0015                	c.nop	5
    ee_u32        iterations = res->iterations;
     27c:	0100                	addi	s0,sp,128
     27e:	5d00                	lw	s0,56(a0)
	...
    for (i = 0; i < iterations; i++)
     288:	13cc                	addi	a1,sp,484
     28a:	0000                	unimp
        crc      = core_bench_list(res, 1);
     28c:	13e8                	addi	a0,sp,492
     28e:	0000                	unimp
     290:	0002                	c.slli64	zero
     292:	13e8007b          	0x13e8007b
     296:	0000                	unimp
     298:	13f4                	addi	a3,sp,492
     29a:	0000                	unimp
        res->crc = crcu16(crc, res->crc);
     29c:	0001                	nop
     29e:	f85e                	fsw	fs7,48(sp)
     2a0:	04000013          	li	zero,64
     2a4:	0014                	0x14
     2a6:	0100                	addi	s0,sp,128
     2a8:	5e00                	lw	s0,56(a2)
     2aa:	150c                	addi	a1,sp,672
        crc      = core_bench_list(res, -1);
     2ac:	0000                	unimp
     2ae:	151c                	addi	a5,sp,672
     2b0:	0000                	unimp
     2b2:	0001                	nop
     2b4:	385e                	fld	fa6,496(sp)
     2b6:	0015                	c.nop	5
     2b8:	4400                	lw	s0,8(s0)
     2ba:	0015                	c.nop	5
        res->crc = crcu16(crc, res->crc);
     2bc:	0100                	addi	s0,sp,128
     2be:	5e00                	lw	s0,56(a2)
	...
     2c8:	132c                	addi	a1,sp,424
     2ca:	0000                	unimp
        if (i == 0)
     2cc:	140c                	addi	a1,sp,544
     2ce:	0000                	unimp
    for (i = 0; i < iterations; i++)
     2d0:	0001                	nop
     2d2:	00140c5b          	0x140c5b
     2d6:	0c00                	addi	s0,sp,528
            stop_time();
     2d8:	0015                	c.nop	5
     2da:	0400                	addi	s0,sp,512
     2dc:	f300                	fsw	fs0,32(a4)
     2de:	5b01                	li	s6,-32
            secs_passed = time_in_secs(get_time());
     2e0:	0c9f 0015 4400      	0x440000150c9f
     2e6:	0015                	c.nop	5
     2e8:	0100                	addi	s0,sp,128
     2ea:	5b00                	lw	s0,48(a4)
     2ec:	1544                	addi	s1,sp,676
     2ee:	0000                	unimp
        while (secs_passed < (secs_ret)1)
     2f0:	154c                	addi	a1,sp,676
     2f2:	0000                	unimp
     2f4:	0004                	0x4
     2f6:	9f5b01f3          	0x9f5b01f3
            secs_passed = time_in_secs(get_time());
     2fa:	154c                	addi	a1,sp,676
     2fc:	0000                	unimp
     2fe:	155c                	addi	a5,sp,676
        while (secs_passed < (secs_ret)1)
     300:	0000                	unimp
     302:	0001                	nop
     304:	0000005b          	0x5b
     308:	0000                	unimp
     30a:	0000                	unimp
        divisor = (ee_u32)secs_passed;
     30c:	3000                	fld	fs0,32(s0)
     30e:	70000013          	li	zero,1792
     312:	0b000013          	li	zero,176
     316:	0900                	addi	s0,sp,144
     318:	9fff                	0x9fff
     31a:	ff0a0293          	addi	t0,s4,-16
        if (divisor == 0) /* some machines cast float to int as 0 since this
     31e:	9f7f                	0x9f7f
            divisor = 1;
     320:	13700293          	li	t0,311
        results[0].iterations *= 1 + 10 / divisor;
     324:	0000                	unimp
     326:	13c8                	addi	a0,sp,484
     328:	0000                	unimp
     32a:	002a                	c.slli	zero,0xa
     32c:	0081                	addi	ra,ra,0
     32e:	33270077          	0x33270077
     332:	0824                	addi	s1,sp,24
     334:	1a78                	addi	a4,sp,316
     336:	0081                	addi	ra,ra,0
     338:	81211a37          	lui	s4,0x81211
    start_time();
     33c:	7700                	flw	fs0,40(a4)
     33e:	2700                	fld	fs0,8(a4)
     340:	78082433          	0x78082433
    iterate(&results[0]);
     344:	811a                	mv	sp,t1
     346:	3700                	fld	fs0,40(a4)
     348:	211a                	fld	ft2,384(sp)
     34a:	2438                	fld	fa4,72(s0)
     34c:	9f21                	0x9f21
     34e:	ff0a0293          	addi	t0,s4,-16 # 81210ff0 <__freertos_irq_stack_top+0x80200ff0>
     352:	9f7f                	0x9f7f
     354:	13c80293          	addi	t0,a6,316 # 590b646a <__freertos_irq_stack_top+0x580a646a>
     358:	0000                	unimp
     35a:	154c                	addi	a1,sp,676
     35c:	0000                	unimp
     35e:	0008                	0x8
     360:	ff0a0293          	addi	t0,s4,-16
    stop_time();
     364:	9f7f                	0x9f7f
     366:	154c0293          	addi	t0,s8,340
     36a:	0000                	unimp
    total_time = get_time();
     36c:	155c                	addi	a5,sp,676
     36e:	0000                	unimp
     370:	ff09000b          	0xff09000b
    seedcrc = crc16(results[0].seed1, seedcrc);
     374:	939f 0a02 7fff      	0x7fff0a02939f
     37a:	939f 0002 0000      	0x2939f
    total_time = get_time();
     380:	0000                	unimp
     382:	0000                	unimp
    seedcrc = crc16(results[0].seed1, seedcrc);
     384:	7000                	flw	fs0,32(s0)
     386:	c8000013          	li	zero,-896
     38a:	08000013          	li	zero,128
     38e:	8100                	0x8100
     390:	7700                	flw	fs0,40(a4)
     392:	2700                	fld	fs0,8(a4)
     394:	009f1a3f 00000000 	0x9f1a3f
    seedcrc = crc16(results[0].seed2, seedcrc);
     39c:	0000                	unimp
     39e:	7000                	flw	fs0,32(s0)
     3a0:	c8000013          	li	zero,-896
     3a4:	10000013          	li	zero,256
     3a8:	8100                	0x8100
     3aa:	7700                	flw	fs0,40(a4)
    seedcrc = crc16(results[0].seed3, seedcrc);
     3ac:	2700                	fld	fs0,8(a4)
     3ae:	78082433          	0x78082433
     3b2:	811a                	mv	sp,t1
     3b4:	3700                	fld	fs0,40(a4)
     3b6:	211a                	fld	ft2,384(sp)
     3b8:	009f 0000 0000      	0x9f
     3be:	0000                	unimp
    seedcrc = crc16(results[0].size, seedcrc);
     3c0:	7000                	flw	fs0,32(s0)
     3c2:	c4000013          	li	zero,-960
     3c6:	01000013          	li	zero,16
     3ca:	6f00                	flw	fs0,24(a4)
	...
    switch (seedcrc)
     3d4:	1370                	addi	a2,sp,428
     3d6:	0000                	unimp
    seedcrc = crc16(results[0].size, seedcrc);
     3d8:	13c4                	addi	s1,sp,484
     3da:	0000                	unimp
    switch (seedcrc)
     3dc:	0001                	nop
     3de:	006d                	c.nop	27
     3e0:	0000                	unimp
     3e2:	0000                	unimp
     3e4:	0000                	unimp
     3e6:	7000                	flw	fs0,32(s0)
     3e8:	c4000013          	li	zero,-960
     3ec:	06000013          	li	zero,96
     3f0:	f200                	fsw	fs0,32(a2)
     3f2:	00000e3b          	0xe3b
	...
            ee_printf("2K performance run parameters for coremark.\n");
     3fe:	7000                	flw	fs0,32(s0)
     400:	c4000013          	li	zero,-960
     404:	06000013          	li	zero,96
     408:	f200                	fsw	fs0,32(a2)
     40a:	0ded                	addi	s11,s11,27
	...
     414:	0000                	unimp
     416:	7000                	flw	fs0,32(s0)
            known_id = 3;
     418:	c4000013          	li	zero,-960
            ee_printf("2K performance run parameters for coremark.\n");
     41c:	06000013          	li	zero,96
     420:	f200                	fsw	fs0,32(a2)
     422:	0e8e                	slli	t4,t4,0x3
	...
        for (i = 0; i < default_num_contexts; i++)
     42c:	0000                	unimp
     42e:	7000                	flw	fs0,32(s0)
     430:	c4000013          	li	zero,-960
     434:	01000013          	li	zero,16
     438:	5b00                	lw	s0,48(a4)
	...
            results[i].err = 0;
     442:	13a0                	addi	s0,sp,488
     444:	0000                	unimp
     446:	13c4                	addi	s1,sp,484
     448:	0000                	unimp
     44a:	0001                	nop
     44c:	005d                	c.nop	23
     44e:	0000                	unimp
     450:	0000                	unimp
     452:	0000                	unimp
     454:	ac00                	fsd	fs0,24(s0)
     456:	b8000013          	li	zero,-1152
     45a:	06000013          	li	zero,96
     45e:	f200                	fsw	fs0,32(a2)
     460:	0e8e                	slli	t4,t4,0x3
	...
     46a:	0000                	unimp
     46c:	ac00                	fsd	fs0,24(s0)
     46e:	b8000013          	li	zero,-1152
     472:	01000013          	li	zero,16
     476:	6000                	flw	fs0,0(s0)
	...
            total_errors += results[i].err;
     480:	1514                	addi	a3,sp,672
     482:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     484:	1524                	addi	s1,sp,680
     486:	0000                	unimp
            total_errors += results[i].err;
     488:	0006                	c.slli	zero,0x1
     48a:	007c                	addi	a5,sp,12
        for (i = 0; i < default_num_contexts; i++)
     48c:	0080                	addi	s0,sp,64
     48e:	15249f27          	0x15249f27
            total_errors += results[i].err;
     492:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     494:	153c                	addi	a5,sp,680
     496:	0000                	unimp
            total_errors += results[i].err;
     498:	000a                	c.slli	zero,0x2
     49a:	007d                	c.nop	31
        for (i = 0; i < default_num_contexts; i++)
     49c:	2440                	fld	fs0,136(s0)
     49e:	2540                	fld	fs0,136(a0)
            results[i].err = 0;
     4a0:	007c                	addi	a5,sp,12
     4a2:	153c9f27          	0x153c9f27
     4a6:	0000                	unimp
     4a8:	1544                	addi	s1,sp,676
     4aa:	0000                	unimp
     4ac:	000a                	c.slli	zero,0x2
     4ae:	7f7d                	lui	t5,0xfffff
     4b0:	2440                	fld	fs0,136(s0)
     4b2:	2540                	fld	fs0,136(a0)
     4b4:	007c                	addi	a5,sp,12
     4b6:	00009f27          	0x9f27
            if ((results[i].execs & ID_LIST)
     4ba:	0000                	unimp
            results[i].err = 0;
     4bc:	0000                	unimp
     4be:	0000                	unimp
            if ((results[i].execs & ID_LIST)
     4c0:	1330                	addi	a2,sp,424
     4c2:	0000                	unimp
     4c4:	1408                	addi	a0,sp,544
     4c6:	0000                	unimp
                && (results[i].crclist != list_known_crc[known_id]))
     4c8:	0001                	nop
     4ca:	0014086f          	jal	a6,40cca <_data_lma+0x366b2>
     4ce:	0c00                	addi	s0,sp,528
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
     4d0:	0014                	0x14
     4d2:	1300                	addi	s0,sp,416
     4d4:	f300                	fsw	fs0,32(a4)
     4d6:	5a01                	li	s4,-32
     4d8:	f74425f7          	0xf74425f7
     4dc:	1b25                	addi	s6,s6,-23
     4de:	1c3200f7          	0x1c3200f7
     4e2:	2432                	fld	fs0,264(sp)
     4e4:	008d                	addi	ra,ra,3
     4e6:	9f22                	add	t5,t5,s0
                results[i].err++;
     4e8:	140c                	addi	a1,sp,544
     4ea:	0000                	unimp
     4ec:	150c                	addi	a1,sp,672
     4ee:	0000                	unimp
     4f0:	0014                	0x14
     4f2:	f75a01f3          	0xf75a01f3
            if ((results[i].execs & ID_MATRIX)
     4f6:	4425                	li	s0,9
     4f8:	f71b25f7          	0xf71b25f7
     4fc:	3200                	fld	fs0,32(a2)
     4fe:	3c1c                	fld	fa5,56(s0)
     500:	f31e                	fsw	ft7,164(sp)
     502:	5b01                	li	s6,-32
     504:	9f22                	add	t5,t5,s0
     506:	150c                	addi	a1,sp,672
     508:	0000                	unimp
     50a:	1544                	addi	s1,sp,676
     50c:	0000                	unimp
     50e:	0001                	nop
     510:	0015446f          	jal	s0,54d10 <_data_lma+0x4a6f8>
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
     514:	4c00                	lw	s0,24(s0)
     516:	0015                	c.nop	5
     518:	1400                	addi	s0,sp,544
     51a:	f300                	fsw	fs0,32(a4)
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
     51c:	5a01                	li	s4,-32
     51e:	f74425f7          	0xf74425f7
     522:	1b25                	addi	s6,s6,-23
     524:	1c3200f7          	0x1c3200f7
     528:	1e3c                	addi	a5,sp,824
     52a:	225b01f3          	0x225b01f3
     52e:	4c9f 0015 5c00      	0x5c0000154c9f
                results[i].err++;
     534:	0015                	c.nop	5
     536:	0100                	addi	s0,sp,128
     538:	6f00                	flw	fs0,24(a4)
	...
     542:	1330                	addi	a2,sp,424
            if ((results[i].execs & ID_STATE)
     544:	0000                	unimp
     546:	140c                	addi	a1,sp,544
     548:	0000                	unimp
     54a:	0001                	nop
                && (results[i].crcstate != state_known_crc[known_id]))
     54c:	0c6d                	addi	s8,s8,27
     54e:	0014                	0x14
     550:	0c00                	addi	s0,sp,528
     552:	0015                	c.nop	5
     554:	1400                	addi	s0,sp,544
     556:	f300                	fsw	fs0,32(a4)
     558:	5a01                	li	s4,-32
     55a:	f74425f7          	0xf74425f7
     55e:	1b25                	addi	s6,s6,-23
     560:	1c3200f7          	0x1c3200f7
     564:	01f32433          	slt	s0,t1,t6
     568:	0c9f225b          	0xc9f225b
     56c:	0015                	c.nop	5
     56e:	4400                	lw	s0,8(s0)
        && (results[0].seed3 == 0))
     570:	0015                	c.nop	5
     572:	0100                	addi	s0,sp,128
     574:	6d00                	flw	fs0,24(a0)
     576:	1544                	addi	s1,sp,676
     578:	0000                	unimp
     57a:	154c                	addi	a1,sp,676
        results[0].seed3 = 0x66;
     57c:	0000                	unimp
     57e:	0014                	0x14
     580:	f75a01f3          	0xf75a01f3
     584:	4425                	li	s0,9
     586:	f71b25f7          	0xf71b25f7
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     58a:	3200                	fld	fs0,32(a2)
            results[i].list = core_list_init(
     58c:	331c                	fld	fa5,32(a4)
     58e:	f324                	fsw	fs1,96(a4)
     590:	5b01                	li	s6,-32
     592:	9f22                	add	t5,t5,s0
     594:	154c                	addi	a1,sp,676
     596:	0000                	unimp
     598:	155c                	addi	a5,sp,676
     59a:	0000                	unimp
     59c:	0001                	nop
     59e:	006d                	c.nop	27
     5a0:	0000                	unimp
     5a2:	0000                	unimp
     5a4:	0000                	unimp
     5a6:	3000                	fld	fs0,32(s0)
     5a8:	0c000013          	li	zero,192
     5ac:	0014                	0x14
     5ae:	0100                	addi	s0,sp,128
     5b0:	5b00                	lw	s0,48(a4)
     5b2:	140c                	addi	a1,sp,544
     5b4:	0000                	unimp
     5b6:	150c                	addi	a1,sp,672
     5b8:	0000                	unimp
     5ba:	0004                	0x4
     5bc:	9f5b01f3          	0x9f5b01f3
        if (results[i].execs & ID_MATRIX)
     5c0:	150c                	addi	a1,sp,672
     5c2:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
     5c4:	1544                	addi	s1,sp,676
     5c6:	0000                	unimp
     5c8:	0001                	nop
     5ca:	0015445b          	0x15445b
     5ce:	4c00                	lw	s0,24(s0)
            core_init_matrix(results[0].size,
     5d0:	0015                	c.nop	5
     5d2:	0400                	addi	s0,sp,512
                                 | (((ee_s32)results[i].seed2) << 16),
     5d4:	f300                	fsw	fs0,32(a4)
     5d6:	5b01                	li	s6,-32
     5d8:	4c9f 0015 5c00      	0x5c0000154c9f
                             (ee_s32)results[i].seed1
     5de:	0015                	c.nop	5
                                 | (((ee_s32)results[i].seed2) << 16),
     5e0:	0100                	addi	s0,sp,128
     5e2:	5b00                	lw	s0,48(a4)
	...
            core_init_matrix(results[0].size,
     5ec:	133c                	addi	a5,sp,424
     5ee:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
     5f0:	1358                	addi	a4,sp,420
     5f2:	0000                	unimp
            core_init_matrix(results[0].size,
     5f4:	0001                	nop
     5f6:	005e                	c.slli	zero,0x17
     5f8:	0000                	unimp
     5fa:	0000                	unimp
     5fc:	0000                	unimp
     5fe:	4800                	lw	s0,16(s0)
     600:	58000013          	li	zero,1408
     604:	06000013          	li	zero,96
     608:	f200                	fsw	fs0,32(a2)
     60a:	0e8e                	slli	t4,t4,0x3
	...
    switch (seedcrc)
     614:	0000                	unimp
     616:	4800                	lw	s0,16(s0)
     618:	50000013          	li	zero,1280
     61c:	01000013          	li	zero,16
     620:	6100                	flw	fs0,0(a0)
     622:	1350                	addi	a2,sp,420
            ee_printf("Profile generation run parameters for coremark.\n");
     624:	0000                	unimp
     626:	1358                	addi	a4,sp,420
     628:	0000                	unimp
     62a:	0002                	c.slli64	zero
     62c:	00000c7b          	0xc7b
     630:	0000                	unimp
     632:	0000                	unimp
     634:	0000                	unimp
     636:	1404                	addi	s1,sp,544
     638:	0000                	unimp
     63a:	141c                	addi	a5,sp,544
     63c:	0000                	unimp
     63e:	0002                	c.slli64	zero
            known_id = 2;
     640:	9f30                	0x9f30
     642:	141c                	addi	a5,sp,544
            ee_printf("Profile generation run parameters for coremark.\n");
     644:	0000                	unimp
     646:	14d8                	addi	a4,sp,612
     648:	0000                	unimp
     64a:	0001                	nop
     64c:	0014e05b          	0x14e05b
            known_id = 2;
     650:	0000                	unimp
     652:	0015                	c.nop	5
     654:	0100                	addi	s0,sp,128
     656:	5b00                	lw	s0,48(a4)
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
     658:	1500                	addi	s0,sp,672
     65a:	0000                	unimp
     65c:	150c                	addi	a1,sp,672
     65e:	0000                	unimp
     660:	0002                	c.slli64	zero
     662:	9f30                	0x9f30
     664:	1544                	addi	s1,sp,676
     666:	0000                	unimp
     668:	154c                	addi	a1,sp,676
     66a:	0000                	unimp
     66c:	0001                	nop
     66e:	0000005b          	0x5b
                results[i].err++;
     672:	0000                	unimp
     674:	0000                	unimp
     676:	0400                	addi	s0,sp,512
     678:	0014                	0x14
     67a:	1800                	addi	s0,sp,48
     67c:	0014                	0x14
     67e:	0100                	addi	s0,sp,128
     680:	5b00                	lw	s0,48(a4)
     682:	1418                	addi	a4,sp,544
     684:	0000                	unimp
     686:	1444                	addi	s1,sp,548
    switch (seedcrc)
     688:	0000                	unimp
     68a:	0001                	nop
    ee_s16       known_id = -1, total_errors = 0;
     68c:	445f 0014 e000      	0xe0000014445f
    switch (seedcrc)
     692:	0014                	0x14
    ee_s16       known_id = -1, total_errors = 0;
     694:	0100                	addi	s0,sp,128
     696:	5d00                	lw	s0,56(a0)
     698:	14e0                	addi	s0,sp,620
     69a:	0000                	unimp
    total_errors += check_data_types();
     69c:	14ec                	addi	a1,sp,620
     69e:	0000                	unimp
     6a0:	0002                	c.slli64	zero
     6a2:	007d                	c.nop	31
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     6a4:	14ec                	addi	a1,sp,620
     6a6:	0000                	unimp
    total_errors += check_data_types();
     6a8:	14f0                	addi	a2,sp,620
     6aa:	0000                	unimp
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     6ac:	0001                	nop
     6ae:	f05d                	bnez	s0,654 <main+0x5dc>
     6b0:	0014                	0x14
     6b2:	f400                	fsw	fs0,40(s0)
     6b4:	0014                	0x14
     6b6:	0100                	addi	s0,sp,128
     6b8:	5f00                	lw	s0,56(a4)
     6ba:	1500                	addi	s0,sp,672
    ee_printf("Total ticks      : %d\n", (int)total_time);
     6bc:	0000                	unimp
     6be:	150c                	addi	a1,sp,672
     6c0:	0000                	unimp
     6c2:	0001                	nop
     6c4:	0000005b          	0x5b
     6c8:	0000                	unimp
     6ca:	0000                	unimp
     6cc:	2000                	fld	fs0,0(s0)
     6ce:	0014                	0x14
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
     6d0:	2800                	fld	fs0,16(s0)
     6d2:	0014                	0x14
     6d4:	0100                	addi	s0,sp,128
     6d6:	5f00                	lw	s0,56(a4)
     6d8:	1428                	addi	a0,sp,552
     6da:	0000                	unimp
     6dc:	142c                	addi	a1,sp,552
     6de:	0000                	unimp
     6e0:	0001                	nop
     6e2:	305a                	fld	ft0,432(sp)
     6e4:	0014                	0x14
     6e6:	4400                	lw	s0,8(s0)
     6e8:	0014                	0x14
     6ea:	0100                	addi	s0,sp,128
     6ec:	5a00                	lw	s0,48(a2)
     6ee:	1444                	addi	s1,sp,548
     6f0:	0000                	unimp
     6f2:	14a0                	addi	s0,sp,616
    if (time_in_secs(total_time) > 0)
     6f4:	0000                	unimp
     6f6:	0001                	nop
     6f8:	a05f 0014 a800      	0xa8000014a05f
     6fe:	0014                	0x14
    total_errors += check_data_types();
     700:	0200                	addi	s0,sp,256
     702:	7f00                	flw	fs0,56(a4)
    if (time_in_secs(total_time) > 0)
     704:	a800                	fsd	fs0,16(s0)
     706:	0014                	0x14
     708:	c400                	sw	s0,8(s0)
     70a:	0014                	0x14
    total_errors += check_data_types();
     70c:	0100                	addi	s0,sp,128
     70e:	5f00                	lw	s0,56(a4)
    if (time_in_secs(total_time) > 0)
     710:	14c4                	addi	s1,sp,612
     712:	0000                	unimp
     714:	14d0                	addi	a2,sp,612
     716:	0000                	unimp
     718:	0002                	c.slli64	zero
     71a:	007f                	0x7f
                  default_num_contexts * results[0].iterations
     71c:	14d0                	addi	a2,sp,612
     71e:	0000                	unimp
        ee_printf("Iterations/Sec   : %lf\n",
     720:	150c                	addi	a1,sp,672
     722:	0000                	unimp
     724:	0001                	nop
     726:	445f 0015 4c00      	0x4c000015445f
     72c:	0015                	c.nop	5
     72e:	0100                	addi	s0,sp,128
     730:	5f00                	lw	s0,56(a4)
	...
     73a:	14a0                	addi	s0,sp,616
                      / time_in_secs(total_time));
     73c:	0000                	unimp
     73e:	14a8                	addi	a0,sp,616
     740:	0000                	unimp
     742:	0001                	nop
        ee_printf("Iterations/Sec   : %lf\n",
     744:	a85f 0014 bc00      	0xbc000014a85f
     74a:	0014                	0x14
     74c:	0100                	addi	s0,sp,128
     74e:	6000                	flw	fs0,0(s0)
     750:	14c4                	addi	s1,sp,612
     752:	0000                	unimp
     754:	14d0                	addi	a2,sp,612
     756:	0000                	unimp
     758:	0001                	nop
     75a:	d05f 0014 e000      	0xe0000014d05f
     760:	0014                	0x14
     762:	0100                	addi	s0,sp,128
     764:	6000                	flw	fs0,0(s0)
     766:	14e0                	addi	s0,sp,620
     768:	0000                	unimp
     76a:	14ec                	addi	a1,sp,620
     76c:	0000                	unimp
     76e:	0001                	nop
     770:	ec5d                	bnez	s0,82e <main+0x7b6>
     772:	0014                	0x14
    if (time_in_secs(total_time) < 10)
     774:	f000                	fsw	fs0,32(s0)
     776:	0014                	0x14
     778:	0100                	addi	s0,sp,128
     77a:	6000                	flw	fs0,0(s0)
	...
     784:	1404                	addi	s1,sp,544
     786:	0000                	unimp
     788:	141c                	addi	a5,sp,544
     78a:	0000                	unimp
     78c:	0002                	c.slli64	zero
     78e:	9f30                	0x9f30
     790:	141c                	addi	a5,sp,544
     792:	0000                	unimp
     794:	14b8                	addi	a4,sp,616
     796:	0000                	unimp
    ee_printf("Iterations       : %lu\n",
     798:	0001                	nop
     79a:	b861                	j	32 <_start+0x32>
     79c:	0014                	0x14
     79e:	bc00                	fsd	fs0,56(s0)
     7a0:	0014                	0x14
     7a2:	0100                	addi	s0,sp,128
     7a4:	6000                	flw	fs0,0(s0)
     7a6:	14bc                	addi	a5,sp,616
     7a8:	0000                	unimp
     7aa:	14dc                	addi	a5,sp,612
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     7ac:	0000                	unimp
     7ae:	0001                	nop
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     7b0:	e061                	bnez	s0,870 <main+0x7f8>
     7b2:	0014                	0x14
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     7b4:	0000                	unimp
     7b6:	0015                	c.nop	5
        total_errors++;
     7b8:	0100                	addi	s0,sp,128
     7ba:	6100                	flw	fs0,0(a0)
     7bc:	1500                	addi	s0,sp,672
     7be:	0000                	unimp
    ee_printf("Iterations       : %lu\n",
     7c0:	150c                	addi	a1,sp,672
     7c2:	0000                	unimp
     7c4:	0002                	c.slli64	zero
     7c6:	9f30                	0x9f30
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     7c8:	1544                	addi	s1,sp,676
     7ca:	0000                	unimp
     7cc:	154c                	addi	a1,sp,676
     7ce:	0000                	unimp
     7d0:	0001                	nop
     7d2:	0061                	c.nop	24
     7d4:	0000                	unimp
     7d6:	0000                	unimp
     7d8:	0000                	unimp
     7da:	0400                	addi	s0,sp,512
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     7dc:	0014                	0x14
     7de:	0c00                	addi	s0,sp,528
     7e0:	0014                	0x14
     7e2:	0200                	addi	s0,sp,256
     7e4:	3100                	fld	fs0,32(a0)
     7e6:	0c9f 0014 0c00      	0xc0000140c9f
     7ec:	0015                	c.nop	5
     7ee:	0100                	addi	s0,sp,128
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     7f0:	6f00                	flw	fs0,24(a4)
     7f2:	1544                	addi	s1,sp,676
     7f4:	0000                	unimp
     7f6:	154c                	addi	a1,sp,676
     7f8:	0000                	unimp
     7fa:	0001                	nop
     7fc:	0000006f          	j	7fc <main+0x784>
     800:	0000                	unimp
     802:	0000                	unimp
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
     804:	0400                	addi	s0,sp,512
     806:	0014                	0x14
     808:	1c00                	addi	s0,sp,560
     80a:	0014                	0x14
     80c:	0200                	addi	s0,sp,256
     80e:	3000                	fld	fs0,32(s0)
     810:	1c9f 0014 0000      	0x141c9f
     816:	0015                	c.nop	5
    if (results[0].execs & ID_LIST)
     818:	0100                	addi	s0,sp,128
     81a:	6e00                	flw	fs0,24(a2)
     81c:	1500                	addi	s0,sp,672
     81e:	0000                	unimp
     820:	150c                	addi	a1,sp,672
     822:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     824:	0002                	c.slli64	zero
     826:	9f30                	0x9f30
     828:	1544                	addi	s1,sp,676
     82a:	0000                	unimp
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     82c:	154c                	addi	a1,sp,676
     82e:	0000                	unimp
     830:	0001                	nop
     832:	006e                	c.slli	zero,0x1b
     834:	0000                	unimp
     836:	0000                	unimp
     838:	0000                	unimp
     83a:	2000                	fld	fs0,0(s0)
     83c:	0014                	0x14
     83e:	2800                	fld	fs0,16(s0)
        for (i = 0; i < default_num_contexts; i++)
     840:	0014                	0x14
     842:	0200                	addi	s0,sp,256
     844:	3000                	fld	fs0,32(s0)
     846:	289f 0014 0c00      	0xc000014289f
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     84c:	0015                	c.nop	5
     84e:	0100                	addi	s0,sp,128
     850:	5e00                	lw	s0,56(a2)
     852:	1544                	addi	s1,sp,676
     854:	0000                	unimp
     856:	154c                	addi	a1,sp,676
     858:	0000                	unimp
     85a:	0001                	nop
     85c:	005e                	c.slli	zero,0x17
     85e:	0000                	unimp
     860:	0000                	unimp
     862:	0000                	unimp
     864:	4400                	lw	s0,8(s0)
     866:	0014                	0x14
     868:	0c00                	addi	s0,sp,528
     86a:	0015                	c.nop	5
     86c:	0100                	addi	s0,sp,128
     86e:	5c00                	lw	s0,56(s0)
     870:	1544                	addi	s1,sp,676
     872:	0000                	unimp
     874:	154c                	addi	a1,sp,676
     876:	0000                	unimp
     878:	0001                	nop
     87a:	005c                	addi	a5,sp,4
        for (i = 0; i < default_num_contexts; i++)
     87c:	0000                	unimp
     87e:	0000                	unimp
     880:	0000                	unimp
     882:	2000                	fld	fs0,0(s0)
     884:	0014                	0x14
     886:	2800                	fld	fs0,16(s0)
     888:	0014                	0x14
     88a:	0200                	addi	s0,sp,256
     88c:	3000                	fld	fs0,32(s0)
     88e:	289f 0014 3000      	0x30000014289f
    if (results[0].execs & ID_MATRIX)
     894:	0014                	0x14
     896:	0100                	addi	s0,sp,128
     898:	5e00                	lw	s0,56(a2)
     89a:	1430                	addi	a2,sp,552
        for (i = 0; i < default_num_contexts; i++)
     89c:	0000                	unimp
     89e:	1434                	addi	a3,sp,552
     8a0:	0000                	unimp
     8a2:	7f7e0003          	lb	zero,2039(t3) # 67f7 <_dtoa_r+0x1137>
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     8a6:	349f 0014 3800      	0x38000014349f
     8ac:	0014                	0x14
     8ae:	0100                	addi	s0,sp,128
     8b0:	5e00                	lw	s0,56(a2)
	...
        for (i = 0; i < default_num_contexts; i++)
     8ba:	1458                	addi	a4,sp,548
     8bc:	0000                	unimp
     8be:	149c                	addi	a5,sp,608
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     8c0:	0000                	unimp
     8c2:	0002                	c.slli64	zero
     8c4:	9f30                	0x9f30
	...
     8ce:	1458                	addi	a4,sp,548
     8d0:	0000                	unimp
     8d2:	149c                	addi	a5,sp,608
     8d4:	0000                	unimp
     8d6:	0001                	nop
     8d8:	0056                	c.slli	zero,0x15
     8da:	0000                	unimp
     8dc:	0000                	unimp
     8de:	0000                	unimp
     8e0:	5800                	lw	s0,48(s0)
     8e2:	0014                	0x14
     8e4:	8800                	0x8800
     8e6:	0014                	0x14
     8e8:	0100                	addi	s0,sp,128
     8ea:	6c00                	flw	fs0,24(s0)
     8ec:	1488                	addi	a0,sp,608
     8ee:	0000                	unimp
     8f0:	149c                	addi	a5,sp,608
     8f2:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     8f4:	0002                	c.slli64	zero
     8f6:	047d                	addi	s0,s0,31
	...
     900:	0c60                	addi	s0,sp,540
     902:	0000                	unimp
     904:	0cbc                	addi	a5,sp,600
     906:	0000                	unimp
     908:	0001                	nop
     90a:	bc5a                	fsd	fs6,56(sp)
    if (results[0].execs & ID_STATE)
     90c:	000c                	0xc
     90e:	2800                	fld	fs0,16(s0)
     910:	0010                	0x10
     912:	0100                	addi	s0,sp,128
        for (i = 0; i < default_num_contexts; i++)
     914:	6800                	flw	fs0,16(s0)
     916:	1028                	addi	a0,sp,40
     918:	0000                	unimp
     91a:	103c                	addi	a5,sp,40
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     91c:	0000                	unimp
     91e:	0004                	0x4
     920:	9f5a01f3          	0x9f5a01f3
     924:	103c                	addi	a5,sp,40
     926:	0000                	unimp
     928:	104c                	addi	a1,sp,36
     92a:	0000                	unimp
     92c:	0001                	nop
     92e:	4c5a                	lw	s8,148(sp)
        for (i = 0; i < default_num_contexts; i++)
     930:	0010                	0x10
     932:	f000                	fsw	fs0,32(s0)
     934:	0012                	c.slli	zero,0x4
     936:	0100                	addi	s0,sp,128
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     938:	6800                	flw	fs0,16(s0)
	...
     942:	0c60                	addi	s0,sp,540
     944:	0000                	unimp
     946:	0db4                	addi	a3,sp,728
     948:	0000                	unimp
     94a:	0001                	nop
     94c:	000db45b          	0xdb45b
     950:	7c00                	flw	fs0,56(s0)
     952:	0400000f          	fence	o,unknown
     956:	f300                	fsw	fs0,32(a4)
     958:	5b01                	li	s6,-32
     95a:	7c9f 000f d800      	0xd800000f7c9f
     960:	0100000f          	fence	w,unknown
     964:	5b00                	lw	s0,48(a4)
     966:	0fd8                	addi	a4,sp,980
     968:	0000                	unimp
     96a:	103c                	addi	a5,sp,40
        for (i = 0; i < default_num_contexts; i++)
     96c:	0000                	unimp
     96e:	0004                	0x4
     970:	9f5b01f3          	0x9f5b01f3
     974:	103c                	addi	a5,sp,40
     976:	0000                	unimp
     978:	105c                	addi	a5,sp,36
     97a:	0000                	unimp
     97c:	0001                	nop
     97e:	00105c5b          	0x105c5b
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     982:	e800                	fsw	fs0,16(s0)
    for (i = 0; i < default_num_contexts; i++)
     984:	0012                	c.slli	zero,0x4
     986:	0400                	addi	s0,sp,512
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     988:	f300                	fsw	fs0,32(a4)
     98a:	5b01                	li	s6,-32
     98c:	e89f 0012 f000      	0xf0000012e89f
     992:	0012                	c.slli	zero,0x4
    for (i = 0; i < default_num_contexts; i++)
     994:	0100                	addi	s0,sp,128
     996:	5b00                	lw	s0,48(a4)
	...
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     9a0:	0c60                	addi	s0,sp,540
     9a2:	0000                	unimp
    for (i = 0; i < default_num_contexts; i++)
     9a4:	0cc0                	addi	s0,sp,596
     9a6:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     9a8:	0002                	c.slli64	zero
     9aa:	9f30                	0x9f30
     9ac:	0cc0                	addi	s0,sp,596
     9ae:	0000                	unimp
     9b0:	0d50                	addi	a2,sp,660
     9b2:	0000                	unimp
     9b4:	0001                	nop
     9b6:	5460                	lw	s0,108(s0)
     9b8:	000d                	c.nop	3
     9ba:	b000                	fsd	fs0,32(s0)
     9bc:	000d                	c.nop	3
     9be:	0100                	addi	s0,sp,128
     9c0:	6000                	flw	fs0,0(s0)
     9c2:	0e04                	addi	s1,sp,784
     9c4:	0000                	unimp
     9c6:	0e2c                	addi	a1,sp,792
     9c8:	0000                	unimp
     9ca:	bc910003          	lb	zero,-1079(sp)
     9ce:	7c7f                	0x7c7f
    for (i = 0; i < default_num_contexts; i++)
     9d0:	d000000f          	0xd000000f
     9d4:	0100000f          	fence	w,unknown
     9d8:	6000                	flw	fs0,0(s0)
     9da:	0fd4                	addi	a3,sp,980
     9dc:	0000                	unimp
     9de:	0fd8                	addi	a4,sp,980
     9e0:	0000                	unimp
     9e2:	0001                	nop
    if (total_errors == 0)
     9e4:	dc60                	sw	s0,124(s0)
     9e6:	3800000f          	0x3800000f
    if (total_errors > 0)
     9ea:	0010                	0x10
        ee_printf("Errors detected\n");
     9ec:	0300                	addi	s0,sp,384
     9ee:	9100                	0x9100
     9f0:	7fbc                	flw	fa5,120(a5)
     9f2:	1038                	addi	a4,sp,40
     9f4:	0000                	unimp
     9f6:	103c                	addi	a5,sp,40
     9f8:	0000                	unimp
     9fa:	bc720003          	lb	zero,-1081(tp) # 72a3 <_Balloc+0x1b>
    portable_fini(&(results[0].port));
     9fe:	e07f                	0xe07f
     a00:	0012                	c.slli	zero,0x4
     a02:	e800                	fsw	fs0,16(s0)
     a04:	0012                	c.slli	zero,0x4
     a06:	0300                	addi	s0,sp,384
}
     a08:	9100                	0x9100
     a0a:	7fbc                	flw	fa5,120(a5)
     a0c:	12e8                	addi	a0,sp,364
     a0e:	0000                	unimp
     a10:	12f0                	addi	a2,sp,364
     a12:	0000                	unimp
     a14:	0001                	nop
     a16:	0060                	addi	s0,sp,12
     a18:	0000                	unimp
     a1a:	0000                	unimp
     a1c:	0000                	unimp
     a1e:	6000                	flw	fs0,0(s0)
     a20:	000c                	0xc
     a22:	c000                	sw	s0,0(s0)
     a24:	000c                	0xc
     a26:	0200                	addi	s0,sp,256
     a28:	3000                	fld	fs0,32(s0)
     a2a:	c09f 000c 2c00      	0x2c00000cc09f
     a30:	000d                	c.nop	3
     a32:	0100                	addi	s0,sp,128
     a34:	5a00                	lw	s0,48(a2)
     a36:	0d38                	addi	a4,sp,664
     a38:	0000                	unimp
     a3a:	0db4                	addi	a3,sp,728
     a3c:	0000                	unimp
     a3e:	0001                	nop
     a40:	7c5a                	flw	fs8,180(sp)
     a42:	d800000f          	0xd800000f
     a46:	0100000f          	fence	w,unknown
     a4a:	5a00                	lw	s0,48(a2)
        results[0].execs = ALL_ALGORITHMS_MASK;
     a4c:	103c                	addi	a5,sp,40
     a4e:	0000                	unimp
     a50:	104c                	addi	a1,sp,36
     a52:	0000                	unimp
     a54:	0002                	c.slli64	zero
     a56:	9f30                	0x9f30
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a58:	12e8                	addi	a0,sp,364
     a5a:	0000                	unimp
     a5c:	12f0                	addi	a2,sp,364
     a5e:	0000                	unimp
     a60:	0001                	nop
     a62:	005a                	c.slli	zero,0x16
     a64:	0000                	unimp
     a66:	0000                	unimp
     a68:	0000                	unimp
     a6a:	6000                	flw	fs0,0(s0)
     a6c:	000c                	0xc
     a6e:	c000                	sw	s0,0(s0)
     a70:	000c                	0xc
     a72:	0200                	addi	s0,sp,256
            j++;
     a74:	3000                	fld	fs0,32(s0)
     a76:	b89f 000f d800      	0xd800000fb89f
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a7c:	0100000f          	fence	w,unknown
     a80:	5f00                	lw	s0,56(a4)
     a82:	103c                	addi	a5,sp,40
     a84:	0000                	unimp
     a86:	104c                	addi	a1,sp,36
            j++;
     a88:	0000                	unimp
     a8a:	0002                	c.slli64	zero
     a8c:	9f30                	0x9f30
	...
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a96:	0ca8                	addi	a0,sp,600
     a98:	0000                	unimp
     a9a:	0d0c                	addi	a1,sp,656
     a9c:	0000                	unimp
     a9e:	0001                	nop
     aa0:	2058                	fld	fa4,128(s0)
     aa2:	000d                	c.nop	3
     aa4:	5800                	lw	s0,48(s0)
     aa6:	000e                	c.slli	zero,0x3
     aa8:	0100                	addi	s0,sp,128
     aaa:	5800                	lw	s0,48(s0)
     aac:	0f20                	addi	s0,sp,920
     aae:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     ab0:	0f44                	addi	s1,sp,916
     ab2:	0000                	unimp
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     ab4:	0001                	nop
     ab6:	7c58                	flw	fa4,60(s0)
     ab8:	d800000f          	0xd800000f
     abc:	0100000f          	fence	w,unknown
     ac0:	5800                	lw	s0,48(s0)
     ac2:	0fd8                	addi	a4,sp,980
        if (results[i].execs & ID_LIST)
     ac4:	0000                	unimp
     ac6:	100c                	addi	a1,sp,32
     ac8:	0000                	unimp
     aca:	0001                	nop
        ee_printf(
     acc:	3c59                	jal	562 <main+0x4ea>
     ace:	0010                	0x10
     ad0:	5c00                	lw	s0,56(s0)
     ad2:	0010                	0x10
     ad4:	0100                	addi	s0,sp,128
     ad6:	5800                	lw	s0,48(s0)
     ad8:	12e0                	addi	s0,sp,364
     ada:	0000                	unimp
     adc:	12e8                	addi	a0,sp,364
     ade:	0000                	unimp
            res->crclist = res->crc;
     ae0:	0001                	nop
     ae2:	e859                	bnez	s0,b78 <main+0xb00>
    for (i = 0; i < iterations; i++)
     ae4:	0012                	c.slli	zero,0x4
     ae6:	f000                	fsw	fs0,32(s0)
     ae8:	0012                	c.slli	zero,0x4
     aea:	0100                	addi	s0,sp,128
     aec:	5800                	lw	s0,48(s0)
	...
        ee_printf(
     af6:	0ca8                	addi	a0,sp,600
     af8:	0000                	unimp
     afa:	0db4                	addi	a3,sp,728
     afc:	0000                	unimp
     afe:	0001                	nop
     b00:	7c61                	lui	s8,0xffff8
     b02:	d800000f          	0xd800000f
        if (known_id == 3)
     b06:	0100000f          	fence	w,unknown
     b0a:	6100                	flw	fs0,0(a0)
     b0c:	103c                	addi	a5,sp,40
     b0e:	0000                	unimp
                      default_num_contexts * results[0].iterations
     b10:	105c                	addi	a5,sp,36
     b12:	0000                	unimp
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b14:	0001                	nop
     b16:	e861                	bnez	s0,be6 <main+0xb6e>
     b18:	0012                	c.slli	zero,0x4
     b1a:	f000                	fsw	fs0,32(s0)
     b1c:	0012                	c.slli	zero,0x4
     b1e:	0100                	addi	s0,sp,128
     b20:	6100                	flw	fs0,0(a0)
	...
                          / time_in_secs(total_time),
     b2a:	0d04                	addi	s1,sp,656
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b2c:	0000                	unimp
     b2e:	0d68                	addi	a0,sp,668
                          / time_in_secs(total_time),
     b30:	0000                	unimp
     b32:	0001                	nop
     b34:	b05f 000f b800      	0xb800000fb05f
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b3a:	0100000f          	fence	w,unknown
     b3e:	5f00                	lw	s0,56(a4)
	...
     b48:	0d5c                	addi	a5,sp,660
     b4a:	0000                	unimp
     b4c:	0d70                	addi	a2,sp,668
     b4e:	0000                	unimp
     b50:	0001                	nop
     b52:	fc5d                	bnez	s0,b10 <main+0xa98>
     b54:	000d                	c.nop	3
     b56:	0000                	unimp
     b58:	000e                	c.slli	zero,0x3
     b5a:	0200                	addi	s0,sp,256
     b5c:	3000                	fld	fs0,32(s0)
     b5e:	009f 000e 1c00      	0x1c00000e009f
     b64:	000e                	c.slli	zero,0x3
     b66:	0100                	addi	s0,sp,128
     b68:	5900                	lw	s0,48(a0)
     b6a:	0e20                	addi	s0,sp,792
     b6c:	0000                	unimp
     b6e:	0e28                	addi	a0,sp,792
            ee_printf(" / %s", MEM_LOCATION);
     b70:	0000                	unimp
     b72:	0001                	nop
     b74:	3859                	jal	40a <main+0x392>
     b76:	3c00000f          	0x3c00000f
     b7a:	0200000f          	fence	r,unknown
     b7e:	3000                	fld	fs0,32(s0)
     b80:	3c9f 000f 4400      	0x4400000f3c9f
            ee_printf("\n");
     b86:	0100000f          	fence	w,unknown
     b8a:	5900                	lw	s0,48(a0)
     b8c:	0fdc                	addi	a5,sp,980
     b8e:	0000                	unimp
     b90:	0ff8                	addi	a4,sp,988
     b92:	0000                	unimp
        ee_printf(
     b94:	0001                	nop
     b96:	fc58                	fsw	fa4,60(s0)
     b98:	0800000f          	fence	i,unknown
     b9c:	0010                	0x10
     b9e:	0100                	addi	s0,sp,128
     ba0:	5800                	lw	s0,48(s0)
     ba2:	12e0                	addi	s0,sp,364
        total_errors++;
     ba4:	0000                	unimp
     ba6:	12e8                	addi	a0,sp,364
     ba8:	0000                	unimp
     baa:	0001                	nop
    if (results[0].execs & ID_STATE)
     bac:	0058                	addi	a4,sp,4
     bae:	0000                	unimp
     bb0:	0000                	unimp
     bb2:	0000                	unimp
     bb4:	e000                	fsw	fs0,0(s0)
     bb6:	000d                	c.nop	3
            ee_printf("6k validation run parameters for coremark.\n");
     bb8:	7c00                	flw	fs0,56(s0)
     bba:	0100000f          	fence	w,unknown
     bbe:	6200                	flw	fs0,0(a2)
     bc0:	0fd8                	addi	a4,sp,980
     bc2:	0000                	unimp
     bc4:	1010                	addi	a2,sp,32
     bc6:	0000                	unimp
     bc8:	0001                	nop
     bca:	e062                	fsw	fs8,0(sp)
     bcc:	0012                	c.slli	zero,0x4
     bce:	e800                	fsw	fs0,16(s0)
     bd0:	0012                	c.slli	zero,0x4
     bd2:	0100                	addi	s0,sp,128
     bd4:	6200                	flw	fs0,0(a2)
	...
     bde:	0ca8                	addi	a0,sp,600
     be0:	0000                	unimp
     be2:	0cc0                	addi	s0,sp,596
     be4:	0000                	unimp
     be6:	0005                	c.nop	1
            known_id = 1;
     be8:	935b0293          	addi	t0,s6,-1739
     bec:	c002                	sw	zero,0(sp)
     bee:	000c                	0xc
            ee_printf("6k performance run parameters for coremark.\n");
     bf0:	cc00                	sw	s0,24(s0)
     bf2:	000c                	0xc
     bf4:	0700                	addi	s0,sp,896
     bf6:	9300                	0x9300
     bf8:	9102                	jalr	sp
     bfa:	7fac                	flw	fa1,120(a5)
     bfc:	0ccc0293          	addi	t0,s8,204 # ffff80cc <__freertos_irq_stack_top+0xfefe80cc>
     c00:	0000                	unimp
     c02:	0cdc                	addi	a5,sp,596
     c04:	0000                	unimp
     c06:	0008                	0x8
     c08:	935d                	srli	a4,a4,0x37
     c0a:	9102                	jalr	sp
     c0c:	7fac                	flw	fa1,120(a5)
     c0e:	0cdc0293          	addi	t0,s8,205
     c12:	0000                	unimp
     c14:	0d88                	addi	a0,sp,720
     c16:	0000                	unimp
     c18:	000a                	c.slli	zero,0x2
     c1a:	b491                	j	65e <main+0x5e6>
            known_id = 0;
     c1c:	937f                	0x937f
     c1e:	9102                	jalr	sp
     c20:	7fac                	flw	fa1,120(a5)
     c22:	0d880293          	addi	t0,a6,216
            ee_printf("2K validation run parameters for coremark.\n");
     c26:	0000                	unimp
     c28:	0db4                	addi	a3,sp,728
     c2a:	0000                	unimp
     c2c:	000a                	c.slli	zero,0x2
     c2e:	b491                	j	672 <main+0x5fa>
     c30:	937f                	0x937f
     c32:	9102                	jalr	sp
     c34:	7fac                	flw	fa1,120(a5)
     c36:	0f7c0293          	addi	t0,s8,247
     c3a:	0000                	unimp
            known_id = 4;
     c3c:	0f94                	addi	a3,sp,976
     c3e:	0000                	unimp
            ee_printf("2K validation run parameters for coremark.\n");
     c40:	0008                	0x8
     c42:	935d                	srli	a4,a4,0x37
     c44:	9102                	jalr	sp
     c46:	7fac                	flw	fa1,120(a5)
     c48:	0f940293          	addi	t0,s0,249
     c4c:	0000                	unimp
     c4e:	0fd8                	addi	a4,sp,980
            known_id = 4;
     c50:	0000                	unimp
     c52:	000a                	c.slli	zero,0x2
     c54:	b491                	j	698 <main+0x620>
     c56:	937f                	0x937f
        for (i = 0; i < default_num_contexts; i++)
     c58:	9102                	jalr	sp
     c5a:	7fac                	flw	fa1,120(a5)
     c5c:	103c0293          	addi	t0,s8,259
    ee_s16     find_num = res->seed3;
     c60:	0000                	unimp
     c62:	104c                	addi	a1,sp,36
{
     c64:	0000                	unimp
     c66:	9f300007          	0x9f300007
     c6a:	935b0293          	addi	t0,s6,-1739
     c6e:	e802                	fsw	ft0,16(sp)
     c70:	0012                	c.slli	zero,0x4
     c72:	f000                	fsw	fs0,32(s0)
     c74:	0012                	c.slli	zero,0x4
     c76:	0800                	addi	s0,sp,16
     c78:	5d00                	lw	s0,56(a0)
     c7a:	ac910293          	addi	t0,sp,-1335
     c7e:	937f                	0x937f
     c80:	0002                	c.slli64	zero
     c82:	0000                	unimp
     c84:	0000                	unimp
     c86:	0000                	unimp
     c88:	a800                	fsd	fs0,16(s0)
     c8a:	000c                	0xc
     c8c:	c000                	sw	s0,0(s0)
     c8e:	000c                	0xc
     c90:	0200                	addi	s0,sp,256
     c92:	3000                	fld	fs0,32(s0)
     c94:	c09f 000c 8c00      	0x8c00000cc09f
     c9a:	000d                	c.nop	3
     c9c:	0100                	addi	s0,sp,128
     c9e:	5c00                	lw	s0,56(s0)
     ca0:	0d94                	addi	a3,sp,720
     ca2:	0000                	unimp
    list_head *list     = res->list;
     ca4:	0db4                	addi	a3,sp,728
     ca6:	0000                	unimp
    for (i = 0; i < find_num; i++)
     ca8:	0001                	nop
     caa:	7c5c                	flw	fa5,60(s0)
    info.idx = finder_idx;
     cac:	d800000f          	0xd800000f
    for (i = 0; i < find_num; i++)
     cb0:	0100000f          	fence	w,unknown
    ee_u16     found = 0, missed = 0;
     cb4:	5c00                	lw	s0,56(s0)
     cb6:	103c                	addi	a5,sp,40
     cb8:	0000                	unimp
     cba:	104c                	addi	a1,sp,36
    ee_u16     retval = 0;
     cbc:	0000                	unimp
     cbe:	0002                	c.slli64	zero
    if (info->idx >= 0)
     cc0:	9f30                	0x9f30
     cc2:	12e8                	addi	a0,sp,364
        info.data16 = (i & 0xff);
     cc4:	0000                	unimp
     cc6:	12f0                	addi	a2,sp,364
     cc8:	0000                	unimp
     cca:	0001                	nop
    if (info->idx >= 0)
     ccc:	005c                	addi	a5,sp,4
     cce:	0000                	unimp
        while (list && (list->info->idx != info->idx))
     cd0:	0000                	unimp
     cd2:	0000                	unimp
     cd4:	cc00                	sw	s0,24(s0)
     cd6:	000c                	0xc
     cd8:	0400                	addi	s0,sp,512
     cda:	000d                	c.nop	3
     cdc:	0600                	addi	s0,sp,768
     cde:	f200                	fsw	fs0,32(a2)
     ce0:	1151                	addi	sp,sp,-12
     ce2:	0000                	unimp
     ce4:	7c00                	flw	fs0,56(s0)
     ce6:	b000000f          	0xb000000f
     cea:	0600000f          	fence	or,unknown
     cee:	f200                	fsw	fs0,32(a2)
     cf0:	1151                	addi	sp,sp,-12
     cf2:	0000                	unimp
     cf4:	e800                	fsw	fs0,16(s0)
     cf6:	0012                	c.slli	zero,0x4
     cf8:	f000                	fsw	fs0,32(s0)
     cfa:	0012                	c.slli	zero,0x4
            list = list->next;
     cfc:	0600                	addi	s0,sp,768
     cfe:	f200                	fsw	fs0,32(a2)
        while (list && (list->info->idx != info->idx))
     d00:	1151                	addi	sp,sp,-12
	...
     d0a:	0000                	unimp
    while (list)
     d0c:	cc00                	sw	s0,24(s0)
     d0e:	000c                	0xc
     d10:	ec00                	fsw	fs0,24(s0)
     d12:	000c                	0xc
        tmp        = list->next;
     d14:	0100                	addi	s0,sp,128
     d16:	5800                	lw	s0,48(s0)
        list->next = next;
     d18:	0cec                	addi	a1,sp,604
     d1a:	0000                	unimp
    while (list)
     d1c:	0d04                	addi	s1,sp,656
     d1e:	0000                	unimp
        if (this_find == NULL)
     d20:	0001                	nop
     d22:	7c5f 000f b000      	0xb000000f7c5f
            found++;
     d28:	0100000f          	fence	w,unknown
     d2c:	5800                	lw	s0,48(s0)
     d2e:	12e8                	addi	a0,sp,364
            if (this_find->info->data16 & 0x1) /* use found value */
     d30:	0000                	unimp
     d32:	12f0                	addi	a2,sp,364
            found++;
     d34:	0000                	unimp
     d36:	0001                	nop
            if (this_find->info->data16 & 0x1) /* use found value */
     d38:	0058                	addi	a4,sp,4
     d3a:	0000                	unimp
     d3c:	0000                	unimp
     d3e:	0000                	unimp
                retval += (this_find->info->data16 >> 9) & 1;
     d40:	7c00                	flw	fs0,56(s0)
     d42:	9400000f          	0x9400000f
     d46:	0100000f          	fence	w,unknown
     d4a:	5800                	lw	s0,48(s0)
     d4c:	0f94                	addi	a3,sp,976
     d4e:	0000                	unimp
     d50:	0fb0                	addi	a2,sp,984
     d52:	0000                	unimp
            if (this_find->next != NULL)
     d54:	0001                	nop
     d56:	005f 0000 0000      	0x5f
                this_find->next = finder->next;
     d5c:	0000                	unimp
     d5e:	0400                	addi	s0,sp,512
     d60:	000d                	c.nop	3
     d62:	0c00                	addi	s0,sp,528
                finder->next    = list->next;
     d64:	000d                	c.nop	3
     d66:	0100                	addi	s0,sp,128
     d68:	5800                	lw	s0,48(s0)
     d6a:	0d0c                	addi	a1,sp,656
                list->next      = finder;
     d6c:	0000                	unimp
     d6e:	0d14                	addi	a3,sp,656
        if (info.idx >= 0)
     d70:	0000                	unimp
     d72:	0001                	nop
     d74:	145e                	slli	s0,s0,0x37
     d76:	000d                	c.nop	3
            info.idx++;
     d78:	1c00                	addi	s0,sp,560
     d7a:	000d                	c.nop	3
     d7c:	0100                	addi	s0,sp,128
     d7e:	5800                	lw	s0,48(s0)
     d80:	0d1c                	addi	a5,sp,656
     d82:	0000                	unimp
     d84:	0d20                	addi	s0,sp,664
     d86:	0000                	unimp
     d88:	0001                	nop
     d8a:	005e                	c.slli	zero,0x17
     d8c:	0000                	unimp
     d8e:	0000                	unimp
     d90:	0000                	unimp
     d92:	0400                	addi	s0,sp,512
    for (i = 0; i < find_num; i++)
     d94:	000d                	c.nop	3
     d96:	0c00                	addi	s0,sp,528
     d98:	000d                	c.nop	3
     d9a:	0200                	addi	s0,sp,256
     d9c:	3000                	fld	fs0,32(s0)
     d9e:	0c9f 000d 1400      	0x1400000d0c9f
     da4:	000d                	c.nop	3
     da6:	0100                	addi	s0,sp,128
     da8:	5800                	lw	s0,48(s0)
     daa:	0d14                	addi	a3,sp,656
     dac:	0000                	unimp
     dae:	0d1c                	addi	a5,sp,656
    if (finder_idx > 0)
     db0:	0000                	unimp
     db2:	0001                	nop
    remover = core_list_remove(list->next);
     db4:	1c5d                	addi	s8,s8,-9
     db6:	000d                	c.nop	3
    if (info->idx >= 0)
     db8:	2000                	fld	fs0,0(s0)
     dba:	000d                	c.nop	3
    list_head *ret = item->next;
     dbc:	0100                	addi	s0,sp,128
     dbe:	5800                	lw	s0,48(s0)
	...
    item->next = item->next->next;
     dc8:	0d0c                	addi	a1,sp,656
     dca:	0000                	unimp
    item->info = ret->info;
     dcc:	0d14                	addi	a3,sp,656
     dce:	0000                	unimp
    ret->info  = tmp;
     dd0:	0001                	nop
     dd2:	185e                	slli	a6,a6,0x37
    item->next = item->next->next;
     dd4:	000d                	c.nop	3
     dd6:	2000                	fld	fs0,0(s0)
    if (info->idx >= 0)
     dd8:	000d                	c.nop	3
     dda:	0100                	addi	s0,sp,128
    ret->next  = NULL;
     ddc:	5e00                	lw	s0,56(a2)
	...
        while (list && (list->info->idx != info->idx))
     de6:	0db8                	addi	a4,sp,728
     de8:	0000                	unimp
     dea:	0ddc                	addi	a5,sp,724
     dec:	0000                	unimp
     dee:	0001                	nop
     df0:	005f 0000 0000      	0x5f
            list = list->next;
     df6:	0000                	unimp
        while (list && (list->info->idx != info->idx))
     df8:	c400                	sw	s0,8(s0)
     dfa:	000d                	c.nop	3
        finder = list->next;
     dfc:	e000                	fsw	fs0,0(s0)
     dfe:	000d                	c.nop	3
    while (finder)
     e00:	0100                	addi	s0,sp,128
     e02:	5e00                	lw	s0,56(a2)
	...
        retval = crc16(list->info->data16, retval);
     e0c:	0dc0                	addi	s0,sp,724
     e0e:	0000                	unimp
     e10:	0de0                	addi	s0,sp,732
     e12:	0000                	unimp
     e14:	0001                	nop
     e16:	0062                	c.slli	zero,0x18
        finder = finder->next;
     e18:	0000                	unimp
     e1a:	0000                	unimp
        retval = crc16(list->info->data16, retval);
     e1c:	0000                	unimp
     e1e:	e000                	fsw	fs0,0(s0)
    while (finder)
     e20:	000d                	c.nop	3
     e22:	fc00                	fsw	fs0,56(s0)
     e24:	000d                	c.nop	3
     e26:	0600                	addi	s0,sp,768
     e28:	f200                	fsw	fs0,32(a2)
     e2a:	1151                	addi	sp,sp,-12
    item_removed->info  = item_modified->info;
     e2c:	0000                	unimp
     e2e:	2000                	fld	fs0,0(s0)
    item_removed->next  = item_modified->next;
     e30:	3800000f          	0x3800000f
    insize = 1;
     e34:	0600000f          	fence	or,unknown
    item_removed->info  = item_modified->info;
     e38:	f200                	fsw	fs0,32(a2)
     e3a:	1151                	addi	sp,sp,-12
	...
    item_modified->next = item_removed;
     e44:	0000                	unimp
     e46:	e000                	fsw	fs0,0(s0)
        tail = NULL;
     e48:	000d                	c.nop	3
     e4a:	e400                	fsw	fs0,8(s0)
        list = NULL;
     e4c:	000d                	c.nop	3
     e4e:	0100                	addi	s0,sp,128
        nmerges = 0; /* count number of merges we do in this pass */
     e50:	5800                	lw	s0,48(s0)
     e52:	0de4                	addi	s1,sp,732
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     e54:	0000                	unimp
     e56:	0dfc                	addi	a5,sp,732
            nmerges++; /* there exists a merge to be done */
     e58:	0000                	unimp
     e5a:	0001                	nop
     e5c:	2059                	jal	ee2 <core_bench_list+0x282>
     e5e:	3800000f          	0x3800000f
            psize = 0;
     e62:	0100000f          	fence	w,unknown
                q = q->next;
     e66:	5800                	lw	s0,48(s0)
	...
            for (i = 0; i < insize; i++)
     e70:	0f20                	addi	s0,sp,920
     e72:	0000                	unimp
     e74:	0f3c                	addi	a5,sp,920
     e76:	0000                	unimp
                    list = e;
     e78:	0001                	nop
     e7a:	0059                	c.nop	22
     e7c:	0000                	unimp
     e7e:	0000                	unimp
     e80:	0000                	unimp
     e82:	2c00                	fld	fs0,24(s0)
            while (psize > 0 || (qsize > 0 && q))
     e84:	000e                	c.slli	zero,0x3
     e86:	4400                	lw	s0,8(s0)
                else if (qsize == 0 || !q)
     e88:	000e                	c.slli	zero,0x3
     e8a:	0200                	addi	s0,sp,256
     e8c:	7800                	flw	fs0,48(s0)
	...
                else if (cmp(p->info, q->info, res) <= 0)
     e96:	2c00                	fld	fs0,24(s0)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     e98:	000e                	c.slli	zero,0x3
     e9a:	4800                	lw	s0,16(s0)
    return a->idx - b->idx;
     e9c:	000e                	c.slli	zero,0x3
     e9e:	0100                	addi	s0,sp,128
     ea0:	6200                	flw	fs0,0(a2)
	...
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     eaa:	0e2c                	addi	a1,sp,792
     eac:	0000                	unimp
     eae:	0e3c                	addi	a5,sp,792
     eb0:	0000                	unimp
     eb2:	0002                	c.slli64	zero
     eb4:	0482                	c.slli64	s1
	...
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     ebe:	0e48                	addi	a0,sp,788
    return a->idx - b->idx;
     ec0:	0000                	unimp
     ec2:	0f20                	addi	s0,sp,920
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     ec4:	0000                	unimp
     ec6:	0002                	c.slli64	zero
     ec8:	9f30                	0x9f30
     eca:	0f44                	addi	s1,sp,916
     ecc:	0000                	unimp
     ece:	0f7c                	addi	a5,sp,924
     ed0:	0000                	unimp
     ed2:	0002                	c.slli64	zero
     ed4:	9f30                	0x9f30
	...
                else if (cmp(p->info, q->info, res) <= 0)
     ede:	0e48                	addi	a0,sp,788
                    qsize--;
     ee0:	0000                	unimp
     ee2:	0f20                	addi	s0,sp,920
                    q = q->next;
     ee4:	0000                	unimp
     ee6:	0006                	c.slli	zero,0x1
                    qsize--;
     ee8:	00000003          	lb	zero,0(zero) # 0 <_start>
                if (tail)
     eec:	9f00                	0x9f00
     eee:	0f44                	addi	s1,sp,916
                    tail->next = e;
     ef0:	0000                	unimp
     ef2:	0f7c                	addi	a5,sp,924
                    list = e;
     ef4:	0000                	unimp
     ef6:	0006                	c.slli	zero,0x1
            while (psize > 0 || (qsize > 0 && q))
     ef8:	00000003          	lb	zero,0(zero) # 0 <_start>
     efc:	9f00                	0x9f00
	...
                    qsize--;
     f06:	0e48                	addi	a0,sp,788
     f08:	0000                	unimp
     f0a:	0e58                	addi	a4,sp,788
                    q = q->next;
     f0c:	0000                	unimp
     f0e:	0002                	c.slli64	zero
                if (tail)
     f10:	9f30                	0x9f30
     f12:	0e58                	addi	a4,sp,788
                    list = e;
     f14:	0000                	unimp
     f16:	0f18                	addi	a4,sp,912
     f18:	0000                	unimp
     f1a:	0001                	nop
     f1c:	4459                	li	s0,22
     f1e:	6400000f          	0x6400000f
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f22:	0100000f          	fence	w,unknown
     f26:	5900                	lw	s0,48(a0)
     f28:	0f64                	addi	s1,sp,924
     f2a:	0000                	unimp
     f2c:	0f7c                	addi	a5,sp,924
     f2e:	0000                	unimp
            list = list->next;
     f30:	0002                	c.slli64	zero
     f32:	9f30                	0x9f30
	...
    while (finder)
     f3c:	0e48                	addi	a0,sp,788
     f3e:	0000                	unimp
     f40:	0e84                	addi	s1,sp,848
     f42:	0000                	unimp
                    psize--;
     f44:	0001                	nop
     f46:	8458                	0x8458
     f48:	000e                	c.slli	zero,0x3
     f4a:	2000                	fld	fs0,0(s0)
                    p = p->next;
     f4c:	0100000f          	fence	w,unknown
     f50:	5e00                	lw	s0,56(a2)
     f52:	0f44                	addi	s1,sp,916
        while (p)
     f54:	0000                	unimp
     f56:	0f50                	addi	a2,sp,916
        tail->next = NULL;
     f58:	0000                	unimp
     f5a:	0002                	c.slli64	zero
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     f5c:	007e                	c.slli	zero,0x1f
     f5e:	0f50                	addi	a2,sp,916
        insize *= 2;
     f60:	0000                	unimp
     f62:	0f54                	addi	a3,sp,916
        while (p)
     f64:	0000                	unimp
     f66:	0001                	nop
     f68:	545e                	lw	s0,244(sp)
     f6a:	5800000f          	0x5800000f
        nmerges = 0; /* count number of merges we do in this pass */
     f6e:	0100000f          	fence	w,unknown
        tail = NULL;
     f72:	5800                	lw	s0,48(s0)
        list = NULL;
     f74:	0f58                	addi	a4,sp,916
     f76:	0000                	unimp
     f78:	0f64                	addi	s1,sp,924
     f7a:	0000                	unimp
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f7c:	0002                	c.slli64	zero
     f7e:	9f30                	0x9f30
     f80:	0f64                	addi	s1,sp,924
     f82:	0000                	unimp
     f84:	0f78                	addi	a4,sp,924
     f86:	0000                	unimp
     f88:	0001                	nop
     f8a:	7859                	lui	a6,0xffff6
     f8c:	7c00000f          	0x7c00000f
     f90:	0100000f          	fence	w,unknown
     f94:	5800                	lw	s0,48(s0)
	...
     f9e:	0e5c                	addi	a5,sp,788
     fa0:	0000                	unimp
     fa2:	0e64                	addi	s1,sp,796
            list = list->next;
     fa4:	0000                	unimp
     fa6:	0001                	nop
        while (list && ((list->info->data16 & 0xff) != info->data16))
     fa8:	6458                	flw	fa4,12(s0)
     faa:	000e                	c.slli	zero,0x3
     fac:	6800                	flw	fs0,16(s0)
     fae:	000e                	c.slli	zero,0x3
            retval += (list->next->info->data16 >> 8) & 1;
     fb0:	0100                	addi	s0,sp,128
     fb2:	5d00                	lw	s0,56(a0)
            missed++;
     fb4:	0e6c                	addi	a1,sp,796
     fb6:	0000                	unimp
     fb8:	0e84                	addi	s1,sp,848
     fba:	0000                	unimp
            retval += (list->next->info->data16 >> 8) & 1;
     fbc:	0001                	nop
     fbe:	845d                	srai	s0,s0,0x17
            missed++;
     fc0:	000e                	c.slli	zero,0x3
     fc2:	e000                	fsw	fs0,0(s0)
            retval += (list->next->info->data16 >> 8) & 1;
     fc4:	000e                	c.slli	zero,0x3
     fc6:	0100                	addi	s0,sp,128
     fc8:	5800                	lw	s0,48(s0)
     fca:	0ee0                	addi	s0,sp,860
     fcc:	0000                	unimp
     fce:	0ee8                	addi	a0,sp,860
     fd0:	0000                	unimp
     fd2:	0002                	c.slli64	zero
     fd4:	0078                	addi	a4,sp,12
     fd6:	0ee8                	addi	a0,sp,860
    finder = list->next;
     fd8:	0000                	unimp
     fda:	0f04                	addi	s1,sp,912
    while (finder)
     fdc:	0000                	unimp
     fde:	0001                	nop
        retval = crc16(list->info->data16, retval);
     fe0:	0458                	addi	a4,sp,516
     fe2:	1000000f          	0x1000000f
     fe6:	0200000f          	fence	r,unknown
     fea:	7800                	flw	fs0,48(s0)
     fec:	1000                	addi	s0,sp,32
     fee:	2000000f          	0x2000000f
     ff2:	0100000f          	fence	w,unknown
        finder = finder->next;
     ff6:	5800                	lw	s0,48(s0)
        retval = crc16(list->info->data16, retval);
     ff8:	0f44                	addi	s1,sp,916
     ffa:	0000                	unimp
    while (finder)
     ffc:	0f6c                	addi	a1,sp,924
     ffe:	0000                	unimp
}
    1000:	0001                	nop
    1002:	0058                	addi	a4,sp,4
    1004:	0000                	unimp
    1006:	0000                	unimp
    1008:	0000                	unimp
    100a:	e000                	fsw	fs0,0(s0)
    100c:	000e                	c.slli	zero,0x3
    100e:	e800                	fsw	fs0,16(s0)
    1010:	000e                	c.slli	zero,0x3
    1012:	0100                	addi	s0,sp,128
    1014:	5800                	lw	s0,48(s0)
    1016:	0ee8                	addi	a0,sp,860
    1018:	0000                	unimp
    101a:	0ef8                	addi	a4,sp,860
    101c:	0000                	unimp
    101e:	0001                	nop
    1020:	f85d                	bnez	s0,fd6 <core_bench_list+0x376>
    1022:	000e                	c.slli	zero,0x3
    1024:	fc00                	fsw	fs0,56(s0)
    1026:	000e                	c.slli	zero,0x3
    1028:	0100                	addi	s0,sp,128
    102a:	5600                	lw	s0,40(a2)
    102c:	0f04                	addi	s1,sp,912
    102e:	0000                	unimp
    1030:	0f10                	addi	a2,sp,912
    1032:	0000                	unimp
    1034:	0001                	nop
    1036:	1058                	addi	a4,sp,36
    1038:	2000000f          	0x2000000f
    info.idx = finder_idx;
    103c:	0100000f          	fence	w,unknown
    1040:	5d00                	lw	s0,56(a0)
    1042:	0f44                	addi	s1,sp,916
    if (finder_idx > 0)
    1044:	0000                	unimp
    1046:	0f50                	addi	a2,sp,916
        while (p)
    1048:	0000                	unimp
    104a:	0001                	nop
    104c:	505e                	0x505e
    104e:	5400000f          	0x5400000f
    1052:	0100000f          	fence	w,unknown
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1056:	5d00                	lw	s0,56(a0)
	...
        tail = NULL;
    1060:	0e48                	addi	a0,sp,788
    1062:	0000                	unimp
        list = NULL;
    1064:	0e58                	addi	a4,sp,788
    1066:	0000                	unimp
        nmerges = 0; /* count number of merges we do in this pass */
    1068:	0002                	c.slli64	zero
    106a:	9f30                	0x9f30
        switch (flag)
    106c:	0e58                	addi	a4,sp,788
    106e:	0000                	unimp
            nmerges++; /* there exists a merge to be done */
    1070:	0f1c                	addi	a5,sp,912
    1072:	0000                	unimp
    1074:	0001                	nop
    1076:	4456                	lw	s0,84(sp)
            psize = 0;
    1078:	6400000f          	0x6400000f
            nmerges++; /* there exists a merge to be done */
    107c:	0100000f          	fence	w,unknown
    1080:	5600                	lw	s0,40(a2)
    1082:	0f64                	addi	s1,sp,924
                q = q->next;
    1084:	0000                	unimp
    1086:	0f7c                	addi	a5,sp,924
                psize++;
    1088:	0000                	unimp
    108a:	0002                	c.slli64	zero
                if (!q)
    108c:	9f30                	0x9f30
	...
            for (i = 0; i < insize; i++)
    1096:	0e48                	addi	a0,sp,788
                    list = e;
    1098:	0000                	unimp
    109a:	0e58                	addi	a4,sp,788
            while (psize > 0 || (qsize > 0 && q))
    109c:	0000                	unimp
    109e:	0002                	c.slli64	zero
                else if (qsize == 0 || !q)
    10a0:	9f31                	0x9f31
    10a2:	0f64                	addi	s1,sp,924
    10a4:	0000                	unimp
    10a6:	0f7c                	addi	a5,sp,924
                else if (cmp(p->info, q->info, res) <= 0)
    10a8:	0000                	unimp
    10aa:	0001                	nop
    10ac:	006c                	addi	a1,sp,12
    10ae:	0000                	unimp
    ee_s16 data = *pdata;
    10b0:	0000                	unimp
    10b2:	0000                	unimp
    if (optype) /* if cached, use cache */
    10b4:	4800                	lw	s0,16(s0)
    10b6:	000e                	c.slli	zero,0x3
        return (data & 0x007f);
    10b8:	5800                	lw	s0,48(s0)
    10ba:	000e                	c.slli	zero,0x3
    if (optype) /* if cached, use cache */
    10bc:	0200                	addi	s0,sp,256
    10be:	3000                	fld	fs0,32(s0)
               & 0xf);       /* bits 3-6 is specific data for the operation */
    10c0:	589f 000e 2000      	0x2000000e589f
        ee_s16 dtype
    10c6:	0100000f          	fence	w,unknown
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    10ca:	6d00                	flw	fs0,24(a0)
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    10cc:	0f44                	addi	s1,sp,916
    10ce:	0000                	unimp
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    10d0:	0f64                	addi	s1,sp,924
    10d2:	0000                	unimp
        switch (flag)
    10d4:	0001                	nop
    10d6:	646d                	lui	s0,0x1b
    10d8:	7c00000f          	0x7c00000f
    10dc:	0200000f          	fence	r,unknown
    10e0:	3000                	fld	fs0,32(s0)
    10e2:	009f 0000 0000      	0x9f
    10e8:	0000                	unimp
    10ea:	5c00                	lw	s0,56(s0)
        res->crc = crcu16(retval, res->crc);
    10ec:	000e                	c.slli	zero,0x3
    10ee:	6400                	flw	fs0,8(s0)
    10f0:	000e                	c.slli	zero,0x3
    10f2:	0200                	addi	s0,sp,256
    10f4:	3000                	fld	fs0,32(s0)
    10f6:	649f 000e 7800      	0x7800000e649f
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    10fc:	000e                	c.slli	zero,0x3
    10fe:	0100                	addi	s0,sp,128
    1100:	5f00                	lw	s0,56(a4)
    1102:	0e84                	addi	s1,sp,848
        res->crc = crcu16(retval, res->crc);
    1104:	0000                	unimp
    1106:	0f20                	addi	s0,sp,920
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1108:	0000                	unimp
    110a:	0001                	nop
    110c:	445f 000f 7c00      	0x7c00000f445f
    ee_s16 data = *pdata;
    1112:	0100000f          	fence	w,unknown
    if (optype) /* if cached, use cache */
    1116:	5f00                	lw	s0,56(a4)
	...
               & 0xf);       /* bits 3-6 is specific data for the operation */
    1120:	0e84                	addi	s1,sp,848
    1122:	0000                	unimp
        ee_s16 dtype
    1124:	0f20                	addi	s0,sp,920
    1126:	0000                	unimp
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1128:	0001                	nop
    112a:	445c                	lw	a5,12(s0)
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    112c:	7c00000f          	0x7c00000f
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1130:	0100000f          	fence	w,unknown
        switch (flag)
    1134:	5c00                	lw	s0,56(s0)
	...
    113e:	0e5c                	addi	a5,sp,788
    1140:	0000                	unimp
    1142:	0e64                	addi	s1,sp,796
    1144:	0000                	unimp
    1146:	0002                	c.slli64	zero
    1148:	9f30                	0x9f30
    114a:	0e64                	addi	s1,sp,796
        res->crc = crcu16(retval, res->crc);
    114c:	0000                	unimp
    114e:	0e6c                	addi	a1,sp,796
    1150:	0000                	unimp
    1152:	0001                	nop
    1154:	6c5f 000e 7000      	0x7000000e6c5f
        retval &= 0x007f;
    115a:	000e                	c.slli	zero,0x3
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    115c:	0300                	addi	s0,sp,384
    115e:	7f00                	flw	fs0,56(a4)
    1160:	9f7f                	0x9f7f
    1162:	0e70                	addi	a2,sp,796
        res->crc = crcu16(retval, res->crc);
    1164:	0000                	unimp
    1166:	0e78                	addi	a4,sp,796
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1168:	0000                	unimp
    116a:	0001                	nop
    116c:	005f 0000 0000      	0x5f
    return val1 - val2;
    1172:	0000                	unimp
                else if (cmp(p->info, q->info, res) <= 0)
    1174:	9800                	0x9800
    1176:	000e                	c.slli	zero,0x3
                    qsize--;
    1178:	dc00                	sw	s0,56(s0)
    117a:	000e                	c.slli	zero,0x3
                    q = q->next;
    117c:	0200                	addi	s0,sp,256
    117e:	3000                	fld	fs0,32(s0)
                    qsize--;
    1180:	009f 0000 0000      	0x9f
                if (tail)
    1186:	0000                	unimp
                    tail->next = e;
    1188:	9800                	0x9800
    118a:	000e                	c.slli	zero,0x3
                    list = e;
    118c:	dc00                	sw	s0,56(s0)
    118e:	000e                	c.slli	zero,0x3
            while (psize > 0 || (qsize > 0 && q))
    1190:	0100                	addi	s0,sp,128
    1192:	5a00                	lw	s0,48(a2)
	...
                    qsize--;
    119c:	0e98                	addi	a4,sp,848
    119e:	0000                	unimp
    11a0:	0ec8                	addi	a0,sp,852
    11a2:	0000                	unimp
                    q = q->next;
    11a4:	0001                	nop
    11a6:	c860                	sw	s0,84(s0)
                if (tail)
    11a8:	000e                	c.slli	zero,0x3
    11aa:	dc00                	sw	s0,56(s0)
                    list = e;
    11ac:	000e                	c.slli	zero,0x3
    11ae:	0200                	addi	s0,sp,256
    11b0:	7e00                	flw	fs0,56(a2)
    11b2:	0004                	0x4
    11b4:	0000                	unimp
    11b6:	0000                	unimp
                    psize--;
    11b8:	0000                	unimp
    11ba:	4800                	lw	s0,16(s0)
    11bc:	0010                	0x10
    11be:	4c00                	lw	s0,24(s0)
                    p = p->next;
    11c0:	0010                	0x10
    11c2:	0200                	addi	s0,sp,256
    11c4:	3000                	fld	fs0,32(s0)
    11c6:	5c9f 0010 7000      	0x700000105c9f
        while (p)
    11cc:	0010                	0x10
    11ce:	0200                	addi	s0,sp,256
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    11d0:	3000                	fld	fs0,32(s0)
    11d2:	709f 0010 b000      	0xb0000010709f
    11d8:	0011                	c.nop	4
    11da:	0100                	addi	s0,sp,128
    11dc:	5800                	lw	s0,48(s0)
    11de:	11b8                	addi	a4,sp,232
        insize *= 2;
    11e0:	0000                	unimp
    11e2:	11ec                	addi	a1,sp,236
    11e4:	0000                	unimp
    11e6:	0001                	nop
    11e8:	ec58                	fsw	fa4,28(s0)
    11ea:	0011                	c.nop	4
        while (p)
    11ec:	f000                	fsw	fs0,32(s0)
    11ee:	0011                	c.nop	4
        tail->next = NULL;
    11f0:	0200                	addi	s0,sp,256
    11f2:	3000                	fld	fs0,32(s0)
    11f4:	f89f 0011 e000      	0xe0000011f89f
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    11fa:	0012                	c.slli	zero,0x4
    11fc:	0100                	addi	s0,sp,128
    11fe:	5800                	lw	s0,48(s0)
	...
                if (res->crcmatrix == 0)
    1208:	1048                	addi	a0,sp,36
    120a:	0000                	unimp
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    120c:	104c                	addi	a1,sp,36
    120e:	0000                	unimp
    1210:	0001                	nop
    1212:	5c58                	lw	a4,60(s0)
                if (res->crcmatrix == 0)
    1214:	0010                	0x10
    1216:	6800                	flw	fs0,16(s0)
                    res->crcmatrix = retval;
    1218:	0010                	0x10
    121a:	0100                	addi	s0,sp,128
    121c:	5800                	lw	s0,48(s0)
    121e:	1068                	addi	a0,sp,44
    1220:	0000                	unimp
    1222:	11b8                	addi	a4,sp,232
                retval = core_bench_state(res->size,
    1224:	0000                	unimp
    1226:	0001                	nop
    1228:	b86a                	fsd	fs10,48(sp)
    122a:	0011                	c.nop	4
    122c:	c400                	sw	s0,8(s0)
    122e:	0011                	c.nop	4
    1230:	0200                	addi	s0,sp,256
    1232:	8a00                	0x8a00
    1234:	c400                	sw	s0,8(s0)
    1236:	0011                	c.nop	4
    1238:	c800                	sw	s0,16(s0)
    123a:	0011                	c.nop	4
    123c:	0100                	addi	s0,sp,128
    123e:	6a00                	flw	fs0,16(a2)
    1240:	11c8                	addi	a0,sp,228
    1242:	0000                	unimp
    1244:	11d0                	addi	a2,sp,228
    1246:	0000                	unimp
    1248:	0001                	nop
    124a:	0011d06b          	0x11d06b
    124e:	ec00                	fsw	fs0,24(s0)
                if (res->crcstate == 0)
    1250:	0011                	c.nop	4
    1252:	0200                	addi	s0,sp,256
                retval = core_bench_state(res->size,
    1254:	3000                	fld	fs0,32(s0)
    1256:	ec9f 0011 f000      	0xf0000011ec9f
                if (res->crcstate == 0)
    125c:	0011                	c.nop	4
    125e:	0100                	addi	s0,sp,128
                    res->crcstate = retval;
    1260:	5800                	lw	s0,48(s0)
    1262:	11f8                	addi	a4,sp,236
    1264:	0000                	unimp
    1266:	12e0                	addi	s0,sp,364
    1268:	0000                	unimp
    126a:	0001                	nop
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    126c:	006a                	c.slli	zero,0x1a
    126e:	0000                	unimp
    1270:	0000                	unimp
    1272:	0000                	unimp
    1274:	8400                	0x8400
    1276:	0010                	0x10
    1278:	8800                	0x8800
    127a:	0010                	0x10
                if (res->crcmatrix == 0)
    127c:	0100                	addi	s0,sp,128
    127e:	6b00                	flw	fs0,16(a4)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1280:	108c                	addi	a1,sp,96
    1282:	0000                	unimp
    1284:	1178                	addi	a4,sp,172
    1286:	0000                	unimp
                if (res->crcmatrix == 0)
    1288:	0001                	nop
    128a:	0011786b          	0x11786b
                    res->crcmatrix = retval;
    128e:	8000                	0x8000
    1290:	0011                	c.nop	4
    1292:	0200                	addi	s0,sp,256
    1294:	8b00                	0x8b00
    1296:	8000                	0x8000
                retval = core_bench_state(res->size,
    1298:	0011                	c.nop	4
    129a:	9c00                	0x9c00
    129c:	0011                	c.nop	4
    129e:	0100                	addi	s0,sp,128
    12a0:	6b00                	flw	fs0,16(a4)
    12a2:	119c                	addi	a5,sp,224
    12a4:	0000                	unimp
    12a6:	11a8                	addi	a0,sp,232
    12a8:	0000                	unimp
    12aa:	0002                	c.slli64	zero
    12ac:	11a8008b          	0x11a8008b
    12b0:	0000                	unimp
    12b2:	11f0                	addi	a2,sp,236
    12b4:	0000                	unimp
    12b6:	0001                	nop
    12b8:	0011f86b          	0x11f86b
    12bc:	e000                	fsw	fs0,0(s0)
    12be:	0012                	c.slli	zero,0x4
    12c0:	0100                	addi	s0,sp,128
    12c2:	6b00                	flw	fs0,16(a4)
	...
    12cc:	1178                	addi	a4,sp,172
    12ce:	0000                	unimp
                if (res->crcstate == 0)
    12d0:	1180                	addi	s0,sp,224
    12d2:	0000                	unimp
                    res->crcstate = retval;
    12d4:	0001                	nop
    12d6:	0011806b          	0x11806b
    12da:	9400                	0x9400
    12dc:	0011                	c.nop	4
    12de:	0100                	addi	s0,sp,128
    12e0:	5f00                	lw	s0,56(a4)
    12e2:	119c                	addi	a5,sp,224
    12e4:	0000                	unimp
    12e6:	11a8                	addi	a0,sp,232
            retval += (list->next->info->data16 >> 8) & 1;
    12e8:	0000                	unimp
    12ea:	0001                	nop
    12ec:	0011a86b          	0x11a86b
    ee_u32 size     = (blksize / per_item)
    12f0:	b800                	fsd	fs0,48(s0)
    12f2:	0011                	c.nop	4
    12f4:	0100                	addi	s0,sp,128
    12f6:	5f00                	lw	s0,56(a4)
    list->info->data16 = (ee_s16)0x8080;
    12f8:	11b8                	addi	a4,sp,232
    12fa:	0000                	unimp
    list->next         = NULL;
    12fc:	11c4                	addi	s1,sp,228
    12fe:	0000                	unimp
    list->info->data16 = (ee_s16)0x8080;
    1300:	0001                	nop
    1302:	c46a                	sw	s10,8(sp)
    if ((*memblock + 1) >= memblock_end)
    1304:	0011                	c.nop	4
    1306:	c800                	sw	s0,16(s0)
    memblock++;
    1308:	0011                	c.nop	4
    130a:	0100                	addi	s0,sp,128
    ee_u32 size     = (blksize / per_item)
    130c:	5f00                	lw	s0,56(a4)
	...
    list_head *memblock_end  = memblock + size;
    1316:	1048                	addi	a0,sp,36
    list->info         = datablock;
    1318:	0000                	unimp
    131a:	104c                	addi	a1,sp,36
    list_data *datablock_end = datablock + size;
    131c:	0000                	unimp
    131e:	0002                	c.slli64	zero
    list->info->idx    = 0x0000;
    1320:	9f30                	0x9f30
    1322:	105c                	addi	a5,sp,36
    list->info->data16 = (ee_s16)0x8080;
    1324:	0000                	unimp
    1326:	1070                	addi	a2,sp,44
    list_data *datablock_end = datablock + size;
    1328:	0000                	unimp
    132a:	0002                	c.slli64	zero
    datablock++;
    132c:	9f30                	0x9f30
    132e:	1070                	addi	a2,sp,44
    if ((*memblock + 1) >= memblock_end)
    1330:	0000                	unimp
    1332:	1190                	addi	a2,sp,224
    if ((*datablock + 1) >= datablock_end)
    1334:	0000                	unimp
    1336:	0001                	nop
    1338:	9062                	c.add	zero,s8
    133a:	0011                	c.nop	4
    newitem->info = *datablock;
    133c:	9400                	0x9400
    133e:	0011                	c.nop	4
    newitem->next      = insert_point->next;
    1340:	0100                	addi	s0,sp,128
    1342:	5f00                	lw	s0,56(a4)
    insert_point->next = newitem;
    1344:	1194                	addi	a3,sp,224
    1346:	0000                	unimp
    to->idx    = from->idx;
    1348:	11b4                	addi	a3,sp,232
    134a:	0000                	unimp
    to->data16 = from->data16;
    134c:	0001                	nop
    134e:	b862                	fsd	fs8,48(sp)
    1350:	0011                	c.nop	4
    1352:	ec00                	fsw	fs0,24(s0)
    to->idx    = from->idx;
    1354:	0011                	c.nop	4
    1356:	0100                	addi	s0,sp,128
    for (i = 0; i < size; i++)
    1358:	6200                	flw	fs0,0(a2)
    135a:	11ec                	addi	a1,sp,236
    135c:	0000                	unimp
    135e:	11f0                	addi	a2,sp,236
    to->idx    = from->idx;
    1360:	0000                	unimp
    1362:	0002                	c.slli64	zero
    1364:	9f30                	0x9f30
    1366:	11f8                	addi	a4,sp,236
    for (i = 0; i < size; i++)
    1368:	0000                	unimp
    136a:	12e0                	addi	s0,sp,364
    to->idx    = from->idx;
    136c:	0000                	unimp
    136e:	0001                	nop
    if ((*memblock + 1) >= memblock_end)
    1370:	0062                	c.slli	zero,0x18
    1372:	0000                	unimp
    1374:	0000                	unimp
    1376:	0000                	unimp
    if ((*datablock + 1) >= datablock_end)
    1378:	4800                	lw	s0,16(s0)
    137a:	0010                	0x10
    137c:	4c00                	lw	s0,24(s0)
    137e:	0010                	0x10
    1380:	0200                	addi	s0,sp,256
    1382:	3100                	fld	fs0,32(a0)
    1384:	5c9f 0010 ec00      	0xec0000105c9f
        ee_u16 datpat = ((ee_u16)(seed ^ i) & 0xf);
    138a:	0011                	c.nop	4
            = (datpat << 3) | (i & 0x7); /* alternate between algorithms */
    138c:	0300                	addi	s0,sp,384
    138e:	9100                	0x9100
    1390:	7fa8                	flw	fa0,120(a5)
    1392:	11ec                	addi	a1,sp,236
    1394:	0000                	unimp
    1396:	11f0                	addi	a2,sp,236
    newitem->next      = insert_point->next;
    1398:	0000                	unimp
    139a:	0001                	nop
        ee_u16 dat
    139c:	f85f 0011 e000      	0xe0000011f85f
    insert_point->next = newitem;
    13a2:	0012                	c.slli	zero,0x4
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    13a4:	0300                	addi	s0,sp,384
    13a6:	9100                	0x9100
    newitem->info = *datablock;
    13a8:	7fa8                	flw	fa0,120(a5)
	...
    to->data16 = from->data16;
    13b2:	1048                	addi	a0,sp,36
    to->idx    = from->idx;
    13b4:	0000                	unimp
    13b6:	104c                	addi	a1,sp,36
    13b8:	0000                	unimp
    13ba:	0002                	c.slli64	zero
    13bc:	9f30                	0x9f30
    13be:	105c                	addi	a5,sp,36
    13c0:	0000                	unimp
    13c2:	1070                	addi	a2,sp,44
    for (i = 0; i < size; i++)
    13c4:	0000                	unimp
    13c6:	0002                	c.slli64	zero
    13c8:	9f30                	0x9f30
    13ca:	1070                	addi	a2,sp,44
    while (finder->next != NULL)
    13cc:	0000                	unimp
    13ce:	11ec                	addi	a1,sp,236
    13d0:	0000                	unimp
    13d2:	b0910003          	lb	zero,-1271(sp)
        if (i < size / 5) /* first 20% of the list in order */
    13d6:	ec7f                	0xec7f
    13d8:	0011                	c.nop	4
    13da:	f000                	fsw	fs0,32(s0)
                                & (((i & 0x07) << 8)
    13dc:	0011                	c.nop	4
    13de:	0200                	addi	s0,sp,256
        if (i < size / 5) /* first 20% of the list in order */
    13e0:	3000                	fld	fs0,32(s0)
    13e2:	f89f 0011 e000      	0xe0000011f89f
    13e8:	0012                	c.slli	zero,0x4
    13ea:	0300                	addi	s0,sp,384
    13ec:	9100                	0x9100
    13ee:	7fb0                	flw	fa2,120(a5)
	...
        finder = finder->next;
    13f8:	1084                	addi	s1,sp,96
    13fa:	0000                	unimp
    while (finder->next != NULL)
    13fc:	11f0                	addi	a2,sp,236
    13fe:	0000                	unimp
    1400:	0001                	nop
    1402:	0011f867          	0x11f867
    insize = 1;
    1406:	e000                	fsw	fs0,0(s0)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1408:	0012                	c.slli	zero,0x4
    140a:	0100                	addi	s0,sp,128
    insize = 1;
    140c:	6700                	flw	fs0,8(a4)
	...
        list = NULL;
    1416:	109c                	addi	a5,sp,96
        nmerges = 0; /* count number of merges we do in this pass */
    1418:	0000                	unimp
    141a:	11f0                	addi	a2,sp,236
            nmerges++; /* there exists a merge to be done */
    141c:	0000                	unimp
    141e:	0001                	nop
    1420:	f869                	bnez	s0,13f2 <core_list_init+0x102>
    1422:	0011                	c.nop	4
            psize = 0;
    1424:	e000                	fsw	fs0,0(s0)
    1426:	0012                	c.slli	zero,0x4
                q = q->next;
    1428:	0100                	addi	s0,sp,128
    142a:	6900                	flw	fs0,16(a0)
	...
            for (i = 0; i < insize; i++)
    1434:	1084                	addi	s1,sp,96
    1436:	0000                	unimp
                    list = e;
    1438:	108c                	addi	a1,sp,96
    143a:	0000                	unimp
    143c:	0001                	nop
    143e:	00108c67          	jalr	s8,1(ra)
    1442:	9000                	0x9000
            while (psize > 0 || (qsize > 0 && q))
    1444:	0010                	0x10
    1446:	0300                	addi	s0,sp,384
                else if (qsize == 0 || !q)
    1448:	8700                	0x8700
    144a:	9f7f                	0x9f7f
    144c:	1090                	addi	a2,sp,96
    144e:	0000                	unimp
                else if (cmp(p->info, q->info, res) <= 0)
    1450:	1098                	addi	a4,sp,96
    1452:	0000                	unimp
    1454:	0001                	nop
    1456:	00000067          	jr	zero # 0 <_start>
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    145a:	0000                	unimp
    return a->idx - b->idx;
    145c:	0000                	unimp
    145e:	b000                	fsd	fs0,32(s0)
    1460:	0010                	0x10
    1462:	7000                	flw	fs0,32(s0)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1464:	0011                	c.nop	4
    1466:	0100                	addi	s0,sp,128
    1468:	6800                	flw	fs0,16(s0)
    146a:	11f8                	addi	a4,sp,236
    146c:	0000                	unimp
    146e:	12e0                	addi	s0,sp,364
    1470:	0000                	unimp
    1472:	0001                	nop
    1474:	0068                	addi	a0,sp,12
    1476:	0000                	unimp
    1478:	0000                	unimp
    147a:	0000                	unimp
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    147c:	b000                	fsd	fs0,32(s0)
    147e:	0010                	0x10
    return a->idx - b->idx;
    1480:	7000                	flw	fs0,32(s0)
    1482:	0011                	c.nop	4
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    1484:	0100                	addi	s0,sp,128
    1486:	6300                	flw	fs0,0(a4)
    1488:	11f8                	addi	a4,sp,236
    148a:	0000                	unimp
    148c:	12e0                	addi	s0,sp,364
    148e:	0000                	unimp
    1490:	0001                	nop
    1492:	00000063          	beqz	zero,1492 <core_list_init+0x1a2>
    1496:	0000                	unimp
    1498:	0000                	unimp
    149a:	b000                	fsd	fs0,32(s0)
                else if (cmp(p->info, q->info, res) <= 0)
    149c:	0010                	0x10
    149e:	1400                	addi	s0,sp,544
                    qsize--;
    14a0:	0011                	c.nop	4
    14a2:	0100                	addi	s0,sp,128
                    q = q->next;
    14a4:	6500                	flw	fs0,8(a0)
    14a6:	126c                	addi	a1,sp,300
                    qsize--;
    14a8:	0000                	unimp
    14aa:	12e0                	addi	s0,sp,364
                if (tail)
    14ac:	0000                	unimp
    14ae:	0001                	nop
                    tail->next = e;
    14b0:	0065                	c.nop	25
    14b2:	0000                	unimp
                    list = e;
    14b4:	0000                	unimp
    14b6:	0000                	unimp
            while (psize > 0 || (qsize > 0 && q))
    14b8:	1000                	addi	s0,sp,32
    14ba:	0011                	c.nop	4
    14bc:	7000                	flw	fs0,32(s0)
    14be:	0011                	c.nop	4
    14c0:	0100                	addi	s0,sp,128
    14c2:	6600                	flw	fs0,8(a2)
                    qsize--;
    14c4:	11f8                	addi	a4,sp,236
    14c6:	0000                	unimp
    14c8:	126c                	addi	a1,sp,300
    14ca:	0000                	unimp
                    q = q->next;
    14cc:	0001                	nop
    14ce:	0066                	c.slli	zero,0x19
                if (tail)
    14d0:	0000                	unimp
    14d2:	0000                	unimp
                    list = e;
    14d4:	0000                	unimp
    14d6:	1000                	addi	s0,sp,32
    14d8:	0011                	c.nop	4
    14da:	7000                	flw	fs0,32(s0)
    14dc:	0011                	c.nop	4
    14de:	0100                	addi	s0,sp,128
                    psize--;
    14e0:	6800                	flw	fs0,16(s0)
    14e2:	11f8                	addi	a4,sp,236
    14e4:	0000                	unimp
    14e6:	126c                	addi	a1,sp,300
                    p = p->next;
    14e8:	0000                	unimp
    14ea:	0001                	nop
    14ec:	0068                	addi	a0,sp,12
    14ee:	0000                	unimp
        while (p)
    14f0:	0000                	unimp
    14f2:	0000                	unimp
        tail->next = NULL;
    14f4:	1000                	addi	s0,sp,32
    14f6:	0011                	c.nop	4
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    14f8:	7000                	flw	fs0,32(s0)
    14fa:	0011                	c.nop	4
        insize *= 2;
    14fc:	0100                	addi	s0,sp,128
    14fe:	6300                	flw	fs0,0(a4)
        while (p)
    1500:	11f8                	addi	a4,sp,236
    1502:	0000                	unimp
        tail->next = NULL;
    1504:	126c                	addi	a1,sp,300
    1506:	0000                	unimp
    1508:	0001                	nop
    150a:	00000063          	beqz	zero,150a <core_list_init+0x21a>
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    150e:	0000                	unimp
    1510:	0000                	unimp
    1512:	1400                	addi	s0,sp,544
                                & (((i & 0x07) << 8)
    1514:	0011                	c.nop	4
    1516:	7000                	flw	fs0,32(s0)
        finder = finder->next;
    1518:	0011                	c.nop	4
    151a:	0100                	addi	s0,sp,128
                                & (((i & 0x07) << 8)
    151c:	6500                	flw	fs0,8(a0)
    151e:	11f8                	addi	a4,sp,236
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    1520:	0000                	unimp
    1522:	126c                	addi	a1,sp,300
                                & (((i & 0x07) << 8)
    1524:	0000                	unimp
    1526:	0001                	nop
                                   | pat); /* make sure the mixed items end up
    1528:	0065                	c.nop	25
    152a:	0000                	unimp
    while (finder->next != NULL)
    152c:	0000                	unimp
    152e:	0000                	unimp
                                & (((i & 0x07) << 8)
    1530:	4c00                	lw	s0,24(s0)
    1532:	0011                	c.nop	4
            finder->info->idx = 0x3fff
    1534:	5c00                	lw	s0,56(s0)
    1536:	0011                	c.nop	4
        finder = finder->next;
    1538:	0100                	addi	s0,sp,128
    153a:	5900                	lw	s0,48(a0)
    while (finder->next != NULL)
    153c:	1168                	addi	a0,sp,172
    153e:	0000                	unimp
    1540:	1170                	addi	a2,sp,172
    1542:	0000                	unimp
}
    1544:	0001                	nop
    1546:	1459                	addi	s0,s0,-10
    1548:	0012                	c.slli	zero,0x4
    154a:	2400                	fld	fs0,8(s0)
    memblock++;
    154c:	0012                	c.slli	zero,0x4
    154e:	0100                	addi	s0,sp,128
    datablock++;
    1550:	5900                	lw	s0,48(a0)
    1552:	125c                	addi	a5,sp,292
    if ((*datablock + 1) >= datablock_end)
    1554:	0000                	unimp
    1556:	126c                	addi	a1,sp,300
    1558:	0000                	unimp
    155a:	0001                	nop
{
    155c:	0059                	c.nop	22
    155e:	0000                	unimp
    1560:	0000                	unimp
    1562:	0000                	unimp
    ee_u32        iterations = res->iterations;
    1564:	1400                	addi	s0,sp,544
    1566:	0011                	c.nop	4
{
    1568:	7000                	flw	fs0,32(s0)
    156a:	0011                	c.nop	4
    156c:	0700                	addi	s0,sp,896
    156e:	8500                	0x8500
    1570:	3700                	fld	fs0,40(a4)
    1572:	3126                	fld	ft2,104(sp)
    res->crc                 = 0;
    1574:	9f1a                	add	t5,t5,t1
    1576:	11f8                	addi	a4,sp,236
    1578:	0000                	unimp
    157a:	126c                	addi	a1,sp,300
{
    157c:	0000                	unimp
    157e:	00850007          	0x850007
    for (i = 0; i < iterations; i++)
    1582:	1a312637          	lui	a2,0x1a312
    1586:	009f 0000 0000      	0x9f
        crc      = core_bench_list(res, 1);
    158c:	0000                	unimp
    158e:	3000                	fld	fs0,32(s0)
    1590:	0011                	c.nop	4
    1592:	4c00                	lw	s0,24(s0)
    1594:	0011                	c.nop	4
    1596:	0100                	addi	s0,sp,128
        res->crc = crcu16(crc, res->crc);
    1598:	5e00                	lw	s0,56(a2)
    159a:	114c                	addi	a1,sp,164
    159c:	0000                	unimp
    159e:	1170                	addi	a2,sp,172
    15a0:	0000                	unimp
    15a2:	0005                	c.nop	1
    15a4:	0085                	addi	ra,ra,1
    15a6:	f89f1a37          	lui	s4,0xf89f1
        crc      = core_bench_list(res, -1);
    15aa:	0011                	c.nop	4
    15ac:	0700                	addi	s0,sp,896
    15ae:	0012                	c.slli	zero,0x4
    15b0:	0100                	addi	s0,sp,128
    15b2:	5e00                	lw	s0,56(a2)
    15b4:	00001207          	0x1207
        res->crc = crcu16(crc, res->crc);
    15b8:	1224                	addi	s1,sp,296
    15ba:	0000                	unimp
    15bc:	0005                	c.nop	1
    15be:	0085                	addi	ra,ra,1
    15c0:	249f1a37          	lui	s4,0x249f1
    15c4:	0012                	c.slli	zero,0x4
    15c6:	2c00                	fld	fs0,24(s0)
        if (i == 0)
    15c8:	0012                	c.slli	zero,0x4
    15ca:	0100                	addi	s0,sp,128
    for (i = 0; i < iterations; i++)
    15cc:	5e00                	lw	s0,56(a2)
    15ce:	122c                	addi	a1,sp,296
    15d0:	0000                	unimp
    15d2:	126c                	addi	a1,sp,300
}
    15d4:	0000                	unimp
    15d6:	0005                	c.nop	1
    15d8:	0085                	addi	ra,ra,1
    15da:	009f1a37          	lui	s4,0x9f1
    15de:	0000                	unimp
    15e0:	0000                	unimp
    15e2:	0000                	unimp
    15e4:	3000                	fld	fs0,32(s0)
    15e6:	0011                	c.nop	4
    15e8:	4c00                	lw	s0,24(s0)
    15ea:	0011                	c.nop	4
    15ec:	0100                	addi	s0,sp,128
    15ee:	5b00                	lw	s0,48(a4)
            res->crclist = res->crc;
    15f0:	11f8                	addi	a4,sp,236
    15f2:	0000                	unimp
    for (i = 0; i < iterations; i++)
    15f4:	00001207          	0x1207
    15f8:	0001                	nop
    15fa:	0012075b          	0x12075b
    15fe:	2400                	fld	fs0,8(s0)
    1600:	0012                	c.slli	zero,0x4
    1602:	1000                	addi	s0,sp,32
{
    1604:	8500                	0x8500
    1606:	3300                	fld	fs0,32(a4)
    1608:	3f26                	fld	ft10,104(sp)
    160a:	851a                	mv	a0,t1
    160c:	3300                	fld	fs0,32(a4)
    160e:	3f26                	fld	ft10,104(sp)
    MATDAT clipval = matrix_big(val);
    1610:	341a                	fld	fs0,416(sp)
    1612:	2124                	fld	fs1,64(a0)
{
    1614:	249f 0012 4000      	0x40000012249f
    161a:	0012                	c.slli	zero,0x4
    161c:	1200                	addi	s0,sp,288
    161e:	7b00                	flw	fs0,48(a4)
    1620:	1200                	addi	s0,sp,288
    1622:	2440                	fld	fs0,136(s0)
    1624:	2208                	fld	fa0,0(a2)
    1626:	1416                	slli	s0,s0,0x25
    1628:	2440                	fld	fs0,136(s0)
    162a:	0001282b          	0x1282b
    162e:	1316                	slli	t1,t1,0x25
    1630:	409f 0012 6400      	0x64000012409f
    1636:	0012                	c.slli	zero,0x4
    1638:	1f00                	addi	s0,sp,944
    163a:	8500                	0x8500
    163c:	3300                	fld	fs0,32(a4)
    163e:	3f26                	fld	ft10,104(sp)
    1640:	851a                	mv	a0,t1
    1642:	3300                	fld	fs0,32(a4)
    MATDAT clipval = matrix_big(val);
    1644:	3f26                	fld	ft10,104(sp)
    1646:	341a                	fld	fs0,416(sp)
    for (i = 0; i < N; i++)
    1648:	2124                	fld	fs1,64(a0)
    164a:	4012                	0x4012
    164c:	0824                	addi	s1,sp,24
    164e:	1622                	slli	a2,a2,0x28
    1650:	4014                	lw	a3,0(s0)
    1652:	2b24                	fld	fs1,80(a4)
    1654:	0128                	addi	a0,sp,136
    1656:	1600                	addi	s0,sp,800
    1658:	00009f13          	slli	t5,ra,0x0
    165c:	0000                	unimp
    165e:	0000                	unimp
    1660:	0000                	unimp
    1662:	10b0                	addi	a2,sp,104
    1664:	0000                	unimp
    1666:	1110                	addi	a2,sp,160
    1668:	0000                	unimp
    166a:	0001                	nop
    166c:	6c68                	flw	fa0,92(s0)
    166e:	0012                	c.slli	zero,0x4
    1670:	e000                	fsw	fs0,0(s0)
    1672:	0012                	c.slli	zero,0x4
    1674:	0100                	addi	s0,sp,128
    1676:	6800                	flw	fs0,16(s0)
	...
    1680:	10b0                	addi	a2,sp,104
    1682:	0000                	unimp
{
    1684:	1110                	addi	a2,sp,160
    1686:	0000                	unimp
            A[i * N + j] += val;
    1688:	0001                	nop
    168a:	6c65                	lui	s8,0x19
    168c:	0012                	c.slli	zero,0x4
    168e:	e000                	fsw	fs0,0(s0)
    1690:	0012                	c.slli	zero,0x4
    1692:	0100                	addi	s0,sp,128
    1694:	6500                	flw	fs0,8(a0)
	...
    for (i = 0; i < N; i++)
    169e:	10b4                	addi	a3,sp,104
    16a0:	0000                	unimp
    16a2:	1110                	addi	a2,sp,160
    16a4:	0000                	unimp
    16a6:	0001                	nop
    16a8:	6c59                	lui	s8,0x16
    16aa:	0012                	c.slli	zero,0x4
    16ac:	e000                	fsw	fs0,0(s0)
    16ae:	0012                	c.slli	zero,0x4
    16b0:	0100                	addi	s0,sp,128
    16b2:	5900                	lw	s0,48(a0)
	...
    16bc:	10ec                	addi	a1,sp,108
    16be:	0000                	unimp
    for (i = 0; i < N; i++)
    16c0:	10fc                	addi	a5,sp,108
    16c2:	0000                	unimp
    16c4:	0001                	nop
    16c6:	0866                	slli	a6,a6,0x19
    16c8:	0011                	c.nop	4
    16ca:	1000                	addi	s0,sp,32
    for (i = 0; i < N; i++)
    16cc:	0011                	c.nop	4
    16ce:	0100                	addi	s0,sp,128
    16d0:	6600                	flw	fs0,8(a2)
    16d2:	1288                	addi	a0,sp,352
            C[i * N + j] = (MATRES)A[i * N + j] * (MATRES)val;
    16d4:	0000                	unimp
    16d6:	1298                	addi	a4,sp,352
    16d8:	0000                	unimp
    16da:	0001                	nop
    16dc:	d066                	sw	s9,32(sp)
    16de:	0012                	c.slli	zero,0x4
    16e0:	e000                	fsw	fs0,0(s0)
    16e2:	0012                	c.slli	zero,0x4
    16e4:	0100                	addi	s0,sp,128
    16e6:	6600                	flw	fs0,8(a2)
	...
    for (i = 0; i < N; i++)
    16f0:	10b4                	addi	a3,sp,104
    16f2:	0000                	unimp
    16f4:	1110                	addi	a2,sp,160
    16f6:	0000                	unimp
    16f8:	00790007          	0x790007
    16fc:	1a312637          	lui	a2,0x1a312
    1700:	6c9f 0012 e000      	0xe00000126c9f
    1706:	0012                	c.slli	zero,0x4
    1708:	0700                	addi	s0,sp,896
    170a:	7900                	flw	fs0,48(a0)
    ee_s16 ret = 0;
    170c:	3700                	fld	fs0,40(a4)
    170e:	3126                	fld	ft2,104(sp)
    MATRES tmp = 0, prev = 0, cur = 0;
    1710:	9f1a                	add	t5,t5,t1
	...
    for (i = 0; i < N; i++)
    171a:	10d0                	addi	a2,sp,100
    171c:	0000                	unimp
    171e:	10ec                	addi	a1,sp,108
    1720:	0000                	unimp
    1722:	0001                	nop
    1724:	ec5e                	fsw	fs7,24(sp)
    1726:	0010                	0x10
    1728:	1000                	addi	s0,sp,32
    172a:	0011                	c.nop	4
                ret += (cur > prev) ? 1 : 0;
    172c:	0500                	addi	s0,sp,640
    172e:	7900                	flw	fs0,48(a0)
    1730:	3700                	fld	fs0,40(a4)
    1732:	9f1a                	add	t5,t5,t1
    1734:	126c                	addi	a1,sp,300
    1736:	0000                	unimp
            cur = C[i * N + j];
    1738:	0000127b          	0x127b
        for (j = 0; j < N; j++)
    173c:	0001                	nop
    173e:	7b5e                	flw	fs6,244(sp)
            cur = C[i * N + j];
    1740:	0012                	c.slli	zero,0x4
    1742:	9800                	0x9800
            tmp += cur;
    1744:	0012                	c.slli	zero,0x4
    1746:	0500                	addi	s0,sp,640
    1748:	7900                	flw	fs0,48(a0)
    174a:	3700                	fld	fs0,40(a4)
                ret += (cur > prev) ? 1 : 0;
    174c:	9f1a                	add	t5,t5,t1
    174e:	1298                	addi	a4,sp,352
            tmp += cur;
    1750:	0000                	unimp
    1752:	12a0                	addi	s0,sp,360
                ret += 10;
    1754:	0000                	unimp
    1756:	0001                	nop
                ret += (cur > prev) ? 1 : 0;
    1758:	a05e                	fsd	fs7,0(sp)
    175a:	0012                	c.slli	zero,0x4
            if (tmp > clipval)
    175c:	e000                	fsw	fs0,0(s0)
    175e:	0012                	c.slli	zero,0x4
                ret += 10;
    1760:	0500                	addi	s0,sp,640
    1762:	7900                	flw	fs0,48(a0)
    1764:	3700                	fld	fs0,40(a4)
    1766:	9f1a                	add	t5,t5,t1
	...
            cur = C[i * N + j];
    1770:	10d0                	addi	a2,sp,100
    1772:	0000                	unimp
        for (j = 0; j < N; j++)
    1774:	10ec                	addi	a1,sp,108
    1776:	0000                	unimp
    for (i = 0; i < N; i++)
    1778:	0001                	nop
    177a:	00126c5b          	0x126c5b
    177e:	7b00                	flw	fs0,48(a4)
    1780:	0012                	c.slli	zero,0x4
    1782:	0100                	addi	s0,sp,128
    1784:	5b00                	lw	s0,48(a4)
    1786:	0000127b          	0x127b
    178a:	1298                	addi	a4,sp,352
    crc = crc16(matrix_sum(N, C, clipval), crc);
    178c:	0000                	unimp
    178e:	0010                	0x10
    1790:	0079                	c.nop	30
    1792:	1a3f2633          	0x1a3f2633
    1796:	0079                	c.nop	30
    1798:	1a3f2633          	0x1a3f2633
    for (i = 0; i < N; i++)
    179c:	2434                	fld	fa3,72(s0)
    179e:	9f21                	0x9f21
    17a0:	1298                	addi	a4,sp,352
    17a2:	0000                	unimp
    17a4:	12b4                	addi	a3,sp,360
    17a6:	0000                	unimp
    17a8:	0012                	c.slli	zero,0x4
    17aa:	4012007b          	0x4012007b
    17ae:	0824                	addi	s1,sp,24
    crc = crc16(matrix_sum(N, C, clipval), crc);
    17b0:	1622                	slli	a2,a2,0x28
    17b2:	4014                	lw	a3,0(s0)
    17b4:	2b24                	fld	fs1,80(a4)
    17b6:	0128                	addi	a0,sp,136
    17b8:	1600                	addi	s0,sp,800
    17ba:	12b49f13          	0x12b49f13
    17be:	0000                	unimp
    17c0:	12d8                	addi	a4,sp,356
    17c2:	0000                	unimp
    17c4:	001f 0079 2633      	0x26330079001f
            C[i] += (MATRES)A[i * N + j] * (MATRES)B[j];
    17ca:	00791a3f 1a3f2633 	0x1a3f263300791a3f
    17d2:	2434                	fld	fa3,72(s0)
    17d4:	1221                	addi	tp,tp,-24
    17d6:	2440                	fld	fs0,136(s0)
    17d8:	2208                	fld	fa0,0(a2)
    17da:	1416                	slli	s0,s0,0x25
    17dc:	2440                	fld	fs0,136(s0)
    17de:	0001282b          	0x1282b
        for (j = 0; j < N; j++)
    17e2:	1316                	slli	t1,t1,0x25
    17e4:	009f 0000 0000      	0x9f
	...
    for (i = 0; i < N; i++)
    17f2:	0000                	unimp
    17f4:	0100                	addi	s0,sp,128
    17f6:	5a00                	lw	s0,48(a2)
	...
    MATRES tmp = 0, prev = 0, cur = 0;
    1800:	0001                	nop
    1802:	00000063          	beqz	zero,1802 <matrix_test+0x1fe>
    for (i = 0; i < N; i++)
    1806:	0000                	unimp
    1808:	0000                	unimp
    180a:	0400                	addi	s0,sp,512
        for (j = 0; j < N; j++)
    180c:	f300                	fsw	fs0,32(a4)
    180e:	5a01                	li	s4,-32
    1810:	009f 0000 0000      	0x9f
                ret += (cur > prev) ? 1 : 0;
    1816:	0000                	unimp
        for (j = 0; j < N; j++)
    1818:	0100                	addi	s0,sp,128
    181a:	5a00                	lw	s0,48(a2)
	...
            cur = C[i * N + j];
    1824:	0001                	nop
    1826:	00000063          	beqz	zero,1826 <matrix_test+0x222>
        for (j = 0; j < N; j++)
    182a:	0000                	unimp
            cur = C[i * N + j];
    182c:	0000                	unimp
    182e:	0100                	addi	s0,sp,128
            tmp += cur;
    1830:	5a00                	lw	s0,48(a2)
	...
                ret += (cur > prev) ? 1 : 0;
    183a:	0001                	nop
            tmp += cur;
    183c:	00000063          	beqz	zero,183c <matrix_test+0x238>
	...
                ret += 10;
    184c:	0100                	addi	s0,sp,128
    184e:	5b00                	lw	s0,48(a4)
	...
                tmp = 0;
    1858:	0001                	nop
    185a:	0059                	c.nop	22
            prev = cur;
    185c:	0000                	unimp
    185e:	0000                	unimp
            cur = C[i * N + j];
    1860:	0000                	unimp
    1862:	0400                	addi	s0,sp,512
        for (j = 0; j < N; j++)
    1864:	f300                	fsw	fs0,32(a4)
    1866:	5b01                	li	s6,-32
    for (i = 0; i < N; i++)
    1868:	009f 0000 0000      	0x9f
    186e:	0000                	unimp
    1870:	0100                	addi	s0,sp,128
    1872:	5900                	lw	s0,48(a0)
	...
            C[i * N + j] = 0;
    1884:	0001                	nop
    1886:	0058                	addi	a4,sp,4
    1888:	0000                	unimp
    188a:	0000                	unimp
    188c:	0000                	unimp
    188e:	0100                	addi	s0,sp,128
    1890:	5800                	lw	s0,48(s0)
	...
    for (i = 0; i < N; i++)
    18a2:	0001                	nop
    18a4:	0062                	c.slli	zero,0x18
    18a6:	0000                	unimp
    18a8:	0000                	unimp
    18aa:	0000                	unimp
    18ac:	0100                	addi	s0,sp,128
    18ae:	6200                	flw	fs0,0(a2)
	...
        for (j = 0; j < N; j++)
    18b8:	0001                	nop
    18ba:	0062                	c.slli	zero,0x18
    18bc:	0000                	unimp
    18be:	0000                	unimp
    18c0:	0000                	unimp
    18c2:	0100                	addi	s0,sp,128
    18c4:	6200                	flw	fs0,0(a2)
	...
            for (k = 0; k < N; k++)
    18d6:	00780007          	0x780007
    18da:	1a312637          	lui	a2,0x1a312
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    18de:	009f 0000 0000      	0x9f
    18e4:	0000                	unimp
    18e6:	0700                	addi	s0,sp,896
            for (k = 0; k < N; k++)
    18e8:	7800                	flw	fs0,48(s0)
    18ea:	3700                	fld	fs0,40(a4)
    18ec:	3126                	fld	ft2,104(sp)
    18ee:	9f1a                	add	t5,t5,t1
	...
    for (i = 0; i < N; i++)
    1900:	0001                	nop
    1902:	005e                	c.slli	zero,0x17
    1904:	0000                	unimp
    1906:	0000                	unimp
    1908:	0000                	unimp
    190a:	0500                	addi	s0,sp,640
    190c:	7800                	flw	fs0,48(s0)
    190e:	3700                	fld	fs0,40(a4)
    1910:	9f1a                	add	t5,t5,t1
	...
    MATRES tmp = 0, prev = 0, cur = 0;
    191a:	0001                	nop
    191c:	005e                	c.slli	zero,0x17
    191e:	0000                	unimp
    for (i = 0; i < N; i++)
    1920:	0000                	unimp
    1922:	0000                	unimp
    1924:	0500                	addi	s0,sp,640
    1926:	7800                	flw	fs0,48(s0)
        for (j = 0; j < N; j++)
    1928:	3700                	fld	fs0,40(a4)
    192a:	9f1a                	add	t5,t5,t1
	...
    1934:	0001                	nop
    1936:	005e                	c.slli	zero,0x17
                ret += (cur > prev) ? 1 : 0;
    1938:	0000                	unimp
    193a:	0000                	unimp
            prev = cur;
    193c:	0000                	unimp
    193e:	0500                	addi	s0,sp,640
            cur = C[i * N + j];
    1940:	7800                	flw	fs0,48(s0)
    1942:	3700                	fld	fs0,40(a4)
        for (j = 0; j < N; j++)
    1944:	9f1a                	add	t5,t5,t1
	...
                ret += (cur > prev) ? 1 : 0;
    1956:	0001                	nop
            tmp += cur;
    1958:	0000005b          	0x5b
                ret += 10;
    195c:	0000                	unimp
    195e:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    1960:	1200                	addi	s0,sp,288
    1962:	7b00                	flw	fs0,48(a4)
            if (tmp > clipval)
    1964:	1200                	addi	s0,sp,288
    1966:	2440                	fld	fs0,136(s0)
                ret += 10;
    1968:	2208                	fld	fa0,0(a2)
    196a:	1416                	slli	s0,s0,0x25
        for (j = 0; j < N; j++)
    196c:	2440                	fld	fs0,136(s0)
    196e:	0001282b          	0x1282b
                ret += 10;
    1972:	1316                	slli	t1,t1,0x25
                tmp = 0;
    1974:	009f 0000 0000      	0x9f
            prev = cur;
    197a:	0000                	unimp
            cur = C[i * N + j];
    197c:	1f00                	addi	s0,sp,944
    197e:	7800                	flw	fs0,48(s0)
        for (j = 0; j < N; j++)
    1980:	3300                	fld	fs0,32(a4)
    1982:	3f26                	fld	ft10,104(sp)
    for (i = 0; i < N; i++)
    1984:	781a                	flw	fa6,164(sp)
    1986:	3300                	fld	fs0,32(a4)
    1988:	3f26                	fld	ft10,104(sp)
    198a:	341a                	fld	fs0,416(sp)
    198c:	2124                	fld	fs1,64(a0)
    198e:	4012                	0x4012
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1990:	0824                	addi	s1,sp,24
    1992:	1622                	slli	a2,a2,0x28
    for (i = 0; i < N; i++)
    1994:	4014                	lw	a3,0(s0)
    1996:	2b24                	fld	fs1,80(a4)
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1998:	0128                	addi	a0,sp,136
    199a:	1600                	addi	s0,sp,800
    199c:	00009f13          	slli	t5,ra,0x0
    19a0:	0000                	unimp
    19a2:	0000                	unimp
    19a4:	0000                	unimp
    19a6:	0001                	nop
    for (i = 0; i < N; i++)
    19a8:	0000005b          	0x5b
    19ac:	0000                	unimp
    19ae:	0000                	unimp
    19b0:	1000                	addi	s0,sp,32
    19b2:	7800                	flw	fs0,48(s0)
    19b4:	3300                	fld	fs0,32(a4)
    19b6:	3f26                	fld	ft10,104(sp)
    19b8:	781a                	flw	fa6,164(sp)
    19ba:	3300                	fld	fs0,32(a4)
                tmp = 0;
    19bc:	3f26                	fld	ft10,104(sp)
    19be:	341a                	fld	fs0,416(sp)
    19c0:	2124                	fld	fs1,64(a0)
    19c2:	009f 0000 0000      	0x9f
	...
        for (j = 0; j < N; j++)
    19d0:	0000                	unimp
    19d2:	0100                	addi	s0,sp,128
            for (k = 0; k < N; k++)
    19d4:	5a00                	lw	s0,48(a2)
	...
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    19de:	0001                	nop
            for (k = 0; k < N; k++)
    19e0:	00000063          	beqz	zero,19e0 <matrix_test+0x3dc>
    19e4:	0000                	unimp
    19e6:	0000                	unimp
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    19e8:	0400                	addi	s0,sp,512
    19ea:	f300                	fsw	fs0,32(a4)
                C[i * N + j] += bit_extract(tmp, 2, 4) * bit_extract(tmp, 5, 7);
    19ec:	5a01                	li	s4,-32
    19ee:	009f 0000 0000      	0x9f
    19f4:	0000                	unimp
    19f6:	0100                	addi	s0,sp,128
    19f8:	5a00                	lw	s0,48(a2)
	...
    1a02:	0001                	nop
    1a04:	00000063          	beqz	zero,1a04 <matrix_test+0x400>
            for (k = 0; k < N; k++)
    1a08:	0000                	unimp
    1a0a:	0000                	unimp
    1a0c:	0400                	addi	s0,sp,512
    1a0e:	f300                	fsw	fs0,32(a4)
        for (j = 0; j < N; j++)
    1a10:	5a01                	li	s4,-32
    1a12:	009f 0000 0000      	0x9f
    1a18:	0000                	unimp
    1a1a:	0100                	addi	s0,sp,128
    1a1c:	5a00                	lw	s0,48(a2)
	...
    for (i = 0; i < N; i++)
    1a26:	0001                	nop
    1a28:	00000063          	beqz	zero,1a28 <matrix_test+0x424>
    1a2c:	0000                	unimp
    1a2e:	0000                	unimp
    ee_s16 ret = 0;
    1a30:	0400                	addi	s0,sp,512
    1a32:	f300                	fsw	fs0,32(a4)
    MATRES tmp = 0, prev = 0, cur = 0;
    1a34:	5a01                	li	s4,-32
    1a36:	009f 0000 0000      	0x9f
	...
        for (j = 0; j < N; j++)
    1a44:	0000                	unimp
    1a46:	0100                	addi	s0,sp,128
    1a48:	5b00                	lw	s0,48(a4)
	...
    1a52:	0001                	nop
                ret += (cur > prev) ? 1 : 0;
    1a54:	0062                	c.slli	zero,0x18
    1a56:	0000                	unimp
            prev = cur;
    1a58:	0000                	unimp
    1a5a:	0000                	unimp
            cur = C[i * N + j];
    1a5c:	0400                	addi	s0,sp,512
    1a5e:	f300                	fsw	fs0,32(a4)
        for (j = 0; j < N; j++)
    1a60:	5b01                	li	s6,-32
    1a62:	009f 0000 0000      	0x9f
            tmp += cur;
    1a68:	0000                	unimp
    1a6a:	0100                	addi	s0,sp,128
    1a6c:	6200                	flw	fs0,0(a2)
	...
                ret += (cur > prev) ? 1 : 0;
    1a7e:	0001                	nop
            if (tmp > clipval)
    1a80:	005c                	addi	a5,sp,4
    1a82:	0000                	unimp
                ret += 10;
    1a84:	0000                	unimp
    1a86:	0000                	unimp
        for (j = 0; j < N; j++)
    1a88:	0100                	addi	s0,sp,128
    1a8a:	5900                	lw	s0,48(a0)
	...
            prev = cur;
    1a94:	0004                	0x4
    1a96:	9f5c01f3          	0x9f5c01f3
	...
    for (i = 0; i < N; i++)
    1aa2:	0001                	nop
    1aa4:	0059                	c.nop	22
	...
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1ab2:	0000                	unimp
    1ab4:	0100                	addi	s0,sp,128
    1ab6:	6400                	flw	fs0,8(s0)
	...
        for (j = 0; j < N; j++)
    1ac0:	0001                	nop
    1ac2:	0064                	addi	s1,sp,12
            A[i * N + j] += val;
    1ac4:	0000                	unimp
    1ac6:	0000                	unimp
    1ac8:	0000                	unimp
    1aca:	0100                	addi	s0,sp,128
        for (j = 0; j < N; j++)
    1acc:	6400                	flw	fs0,8(s0)
	...
    for (i = 0; i < N; i++)
    1ade:	0001                	nop
    1ae0:	00000063          	beqz	zero,1ae0 <matrix_test+0x4dc>
	...
    return crc;
    1af0:	0100                	addi	s0,sp,128
    1af2:	5c00                	lw	s0,56(s0)
	...
}
    1afc:	0001                	nop
    1afe:	0059                	c.nop	22
    1b00:	0000                	unimp
    1b02:	0000                	unimp
    1b04:	0000                	unimp
    1b06:	0100                	addi	s0,sp,128
    1b08:	5900                	lw	s0,48(a0)
	...
    1b12:	0001                	nop
    1b14:	0059                	c.nop	22
	...
    return crc;
    1b22:	0000                	unimp
}
    1b24:	0100                	addi	s0,sp,128
    1b26:	5a00                	lw	s0,48(a2)
	...
            C[i * N + j] = 0;
    1b30:	0001                	nop
    1b32:	00000063          	beqz	zero,1b32 <matrix_test+0x52e>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b36:	0000                	unimp
    1b38:	0000                	unimp
    1b3a:	0100                	addi	s0,sp,128
    1b3c:	5a00                	lw	s0,48(a2)
	...
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b46:	0001                	nop
    1b48:	00000063          	beqz	zero,1b48 <matrix_test+0x544>
    1b4c:	0000                	unimp
    1b4e:	0000                	unimp
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b50:	0100                	addi	s0,sp,128
    1b52:	5a00                	lw	s0,48(a2)
	...
    1b5c:	0001                	nop
    1b5e:	00000063          	beqz	zero,1b5e <matrix_test+0x55a>
	...
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b6e:	0100                	addi	s0,sp,128
    matrix_add_const(N, A, -val); /* return matrix to initial value */
    1b70:	5800                	lw	s0,48(s0)
	...
{
    1b7a:	0001                	nop
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1b7c:	0058                	addi	a4,sp,4
    1b7e:	0000                	unimp
{
    1b80:	0000                	unimp
    1b82:	0000                	unimp
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1b84:	0100                	addi	s0,sp,128
    1b86:	5800                	lw	s0,48(s0)
	...
    1b98:	0001                	nop
    1b9a:	0064                	addi	s1,sp,12
    1b9c:	0000                	unimp
    1b9e:	0000                	unimp
    1ba0:	0000                	unimp
    1ba2:	0100                	addi	s0,sp,128
}
    1ba4:	6400                	flw	fs0,8(s0)
	...
    1bae:	0001                	nop
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1bb0:	0064                	addi	s1,sp,12
    1bb2:	0000                	unimp
    1bb4:	0000                	unimp
    1bb6:	0000                	unimp
{
    1bb8:	0100                	addi	s0,sp,128
    1bba:	6400                	flw	fs0,8(s0)
	...
    if (seed == 0)
    1bcc:	00780007          	0x780007
        seed = 1;
    1bd0:	1a312637          	lui	a2,0x1a312
    1bd4:	009f 0000 0000      	0x9f
    1bda:	0000                	unimp
    1bdc:	0700                	addi	s0,sp,896
    1bde:	7800                	flw	fs0,48(s0)
    while (j < blksize)
    1be0:	3700                	fld	fs0,40(a4)
    1be2:	3126                	fld	ft2,104(sp)
    1be4:	9f1a                	add	t5,t5,t1
	...
        i++;
    1bee:	00780007          	0x780007
    1bf2:	1a312637          	lui	a2,0x1a312
        j = i * i * 2 * 4;
    1bf6:	009f 0000 0000      	0x9f
	...
    B = A + N * N;
    1c04:	0000                	unimp
    1c06:	0100                	addi	s0,sp,128
    1c08:	5e00                	lw	s0,56(a2)
	...
    for (i = 0; i < N; i++)
    1c12:	0005                	c.nop	1
            seed         = ((order * seed) % 65536);
    1c14:	0078                	addi	a4,sp,12
    1c16:	009f1a37          	lui	s4,0x9f1
    1c1a:	0000                	unimp
    B = A + N * N;
    1c1c:	0000                	unimp
    1c1e:	0000                	unimp
    1c20:	0100                	addi	s0,sp,128
    1c22:	5e00                	lw	s0,56(a2)
	...
            seed         = ((order * seed) % 65536);
    1c2c:	0005                	c.nop	1
    1c2e:	0078                	addi	a4,sp,12
        seed = 1;
    1c30:	009f1a37          	lui	s4,0x9f1
        for (j = 0; j < N; j++)
    1c34:	0000                	unimp
    1c36:	0000                	unimp
            seed         = ((order * seed) % 65536);
    1c38:	0000                	unimp
    1c3a:	0100                	addi	s0,sp,128
    1c3c:	5e00                	lw	s0,56(a2)
	...
            A[i * N + j] = val;
    1c46:	0005                	c.nop	1
    1c48:	0078                	addi	a4,sp,12
    1c4a:	009f1a37          	lui	s4,0x9f1
	...
            seed         = ((order * seed) % 65536);
    1c5a:	0000                	unimp
    1c5c:	0100                	addi	s0,sp,128
    1c5e:	5b00                	lw	s0,48(a4)
	...
            val          = (seed + order);
    1c68:	0012                	c.slli	zero,0x4
    1c6a:	4012007b          	0x4012007b
    1c6e:	0824                	addi	s1,sp,24
    1c70:	1622                	slli	a2,a2,0x28
    1c72:	4014                	lw	a3,0(s0)
            val          = (val + order);
    1c74:	2b24                	fld	fs1,80(a4)
    1c76:	0128                	addi	a0,sp,136
            B[i * N + j] = val;
    1c78:	1600                	addi	s0,sp,800
    1c7a:	00009f13          	slli	t5,ra,0x0
            val          = matrix_clip(val, 1);
    1c7e:	0000                	unimp
            A[i * N + j] = val;
    1c80:	0000                	unimp
    1c82:	0000                	unimp
        for (j = 0; j < N; j++)
    1c84:	001f 0078 2633      	0x26330078001f
    for (i = 0; i < N; i++)
    1c8a:	00781a3f 1a3f2633 	0x1a3f263300781a3f
    1c92:	2434                	fld	fa3,72(s0)
    p->C = (MATRES *)align_mem(B + N * N);
    1c94:	1221                	addi	tp,tp,-24
    1c96:	2440                	fld	fs0,136(s0)
    1c98:	2208                	fld	fa0,0(a2)
    1c9a:	1416                	slli	s0,s0,0x25
}
    1c9c:	2440                	fld	fs0,136(s0)
    1c9e:	0001282b          	0x1282b
    p->C = (MATRES *)align_mem(B + N * N);
    1ca2:	1316                	slli	t1,t1,0x25
    1ca4:	009f 0000 0000      	0x9f
    p->A = A;
    1caa:	0000                	unimp
    p->N = N;
    1cac:	0100                	addi	s0,sp,128
    1cae:	5b00                	lw	s0,48(a4)
	...
}
    1cb8:	0010                	0x10
    1cba:	0078                	addi	a4,sp,12
    1cbc:	1a3f2633          	0x1a3f2633
    1cc0:	0078                	addi	a4,sp,12
    1cc2:	1a3f2633          	0x1a3f2633
    1cc6:	2434                	fld	fa3,72(s0)
    B = A + N * N;
    1cc8:	9f21                	0x9f21
	...
    1cda:	0001                	nop
start_time(void) {
    1cdc:	0059                	c.nop	22
    1cde:	0000                	unimp
    1ce0:	0000                	unimp
    1ce2:	0000                	unimp
    timer_0 = timer_getms();
    1ce4:	0100                	addi	s0,sp,128
    1ce6:	5900                	lw	s0,48(a0)
	...
    1cf0:	0001                	nop
    1cf2:	0059                	c.nop	22
	...
}
    1d00:	0000                	unimp
    1d02:	0100                	addi	s0,sp,128
stop_time(void) {
    1d04:	6200                	flw	fs0,0(a2)
	...
    timer_1 = timer_getms();
    1d0e:	0001                	nop
    1d10:	0062                	c.slli	zero,0x18
    1d12:	0000                	unimp
}
    1d14:	0000                	unimp
    1d16:	0000                	unimp
    timer_1 = timer_getms();
    1d18:	0100                	addi	s0,sp,128
    1d1a:	6200                	flw	fs0,0(a2)
	...
    return timer_1 - timer_0;
    1d2c:	0001                	nop
    1d2e:	0058                	addi	a4,sp,4
    1d30:	0000                	unimp
    1d32:	0000                	unimp
    1d34:	0000                	unimp
    1d36:	0100                	addi	s0,sp,128
    1d38:	5800                	lw	s0,48(s0)
	...
}
    1d42:	0001                	nop
time_in_secs(CORE_TICKS ticks) {
    1d44:	0058                	addi	a4,sp,4
	...
    return ((double)ticks) / 1000.0;
    1d52:	0000                	unimp
    1d54:	0100                	addi	s0,sp,128
    1d56:	6300                	flw	fs0,0(a4)
	...
    1d60:	0001                	nop
    1d62:	00000063          	beqz	zero,1d62 <time_in_secs+0x1e>
    1d66:	0000                	unimp
}
    1d68:	0000                	unimp
    1d6a:	0100                	addi	s0,sp,128
    1d6c:	6300                	flw	fs0,0(a4)
	...
portable_init(core_portable* p, int* argc, char* argv[]) {
    1d76:	0001                	nop
    1d78:	00000063          	beqz	zero,1d78 <portable_init+0x4>
	...
    1d88:	0700                	addi	s0,sp,896
    1d8a:	7800                	flw	fs0,48(s0)
    printf("start run!!\n");
    1d8c:	3700                	fld	fs0,40(a4)
    1d8e:	3126                	fld	ft2,104(sp)
    1d90:	9f1a                	add	t5,t5,t1
	...
    p->portable_id = 1;
    1d9a:	00780007          	0x780007
}
    1d9e:	1a312637          	lui	a2,0x1a312
    1da2:	009f 0000 0000      	0x9f
    1da8:	0000                	unimp
    1daa:	0700                	addi	s0,sp,896
    p->portable_id = 0;
    1dac:	7800                	flw	fs0,48(s0)
    1dae:	3700                	fld	fs0,40(a4)
}
    1db0:	3126                	fld	ft2,104(sp)
    1db2:	9f1a                	add	t5,t5,t1
	...
    while ((total + next + 1) < size)
    1dc4:	0001                	nop
    1dc6:	005e                	c.slli	zero,0x17
    1dc8:	0000                	unimp
    1dca:	0000                	unimp
    1dcc:	0000                	unimp
    1dce:	0500                	addi	s0,sp,640
        switch (seed & 0x7)
    1dd0:	7800                	flw	fs0,48(s0)
    1dd2:	3700                	fld	fs0,40(a4)
    1dd4:	9f1a                	add	t5,t5,t1
	...
    1dde:	0001                	nop
                buf  = intpat[(seed >> 3) & 0x3];
    1de0:	005e                	c.slli	zero,0x17
    1de2:	0000                	unimp
        switch (seed & 0x7)
    1de4:	0000                	unimp
    1de6:	0000                	unimp
                buf  = errpat[(seed >> 3) & 0x3];
    1de8:	0500                	addi	s0,sp,640
    1dea:	7800                	flw	fs0,48(s0)
                buf  = scipat[(seed >> 3) & 0x3];
    1dec:	3700                	fld	fs0,40(a4)
    1dee:	9f1a                	add	t5,t5,t1
	...
{
    1df8:	0001                	nop
    1dfa:	005e                	c.slli	zero,0x17
    1dfc:	0000                	unimp
    1dfe:	0000                	unimp
        switch (seed & 0x7)
    1e00:	0000                	unimp
    1e02:	0500                	addi	s0,sp,640
    1e04:	7800                	flw	fs0,48(s0)
    1e06:	3700                	fld	fs0,40(a4)
    ee_u32 total = 0, next = 0, i;
    1e08:	9f1a                	add	t5,t5,t1
	...
                next = 8;
    1e1a:	0001                	nop
                buf  = scipat[(seed >> 3) & 0x3];
    1e1c:	0000005b          	0x5b
                buf  = floatpat[(seed >> 3) & 0x3];
    1e20:	0000                	unimp
    1e22:	0000                	unimp
            *(p + total + i) = ',';
    1e24:	1200                	addi	s0,sp,288
    1e26:	7b00                	flw	fs0,48(a4)
    1e28:	1200                	addi	s0,sp,288
    1e2a:	2440                	fld	fs0,136(s0)
        switch (seed & 0x7)
    1e2c:	2208                	fld	fa0,0(a2)
    1e2e:	1416                	slli	s0,s0,0x25
    1e30:	2440                	fld	fs0,136(s0)
    1e32:	0001282b          	0x1282b
    1e36:	1316                	slli	t1,t1,0x25
    1e38:	009f 0000 0000      	0x9f
                buf  = errpat[(seed >> 3) & 0x3];
    1e3e:	0000                	unimp
        switch (seed & 0x7)
    1e40:	1f00                	addi	s0,sp,944
    1e42:	7800                	flw	fs0,48(s0)
                buf  = floatpat[(seed >> 3) & 0x3];
    1e44:	3300                	fld	fs0,32(a4)
    1e46:	3f26                	fld	ft10,104(sp)
    1e48:	781a                	flw	fa6,164(sp)
    1e4a:	3300                	fld	fs0,32(a4)
    1e4c:	3f26                	fld	ft10,104(sp)
    1e4e:	341a                	fld	fs0,416(sp)
    while ((total + next + 1) < size)
    1e50:	2124                	fld	fs1,64(a0)
    1e52:	4012                	0x4012
                buf  = errpat[(seed >> 3) & 0x3];
    1e54:	0824                	addi	s1,sp,24
    1e56:	1622                	slli	a2,a2,0x28
                break;
    1e58:	4014                	lw	a3,0(s0)
    1e5a:	2b24                	fld	fs1,80(a4)
    while ((total + next + 1) < size)
    1e5c:	0128                	addi	a0,sp,136
    1e5e:	1600                	addi	s0,sp,800
                next = 8;
    1e60:	00009f13          	slli	t5,ra,0x0
                *(p + total + i) = buf[i];
    1e64:	0000                	unimp
    1e66:	0000                	unimp
    1e68:	0000                	unimp
    1e6a:	0001                	nop
    1e6c:	0000005b          	0x5b
    1e70:	0000                	unimp
    1e72:	0000                	unimp
    1e74:	1000                	addi	s0,sp,32
    1e76:	7800                	flw	fs0,48(s0)
    1e78:	3300                	fld	fs0,32(a4)
    1e7a:	3f26                	fld	ft10,104(sp)
    1e7c:	781a                	flw	fa6,164(sp)
    1e7e:	3300                	fld	fs0,32(a4)
    1e80:	3f26                	fld	ft10,104(sp)
    1e82:	341a                	fld	fs0,416(sp)
    1e84:	2124                	fld	fs1,64(a0)
    1e86:	009f 0000 0000      	0x9f
	...
    1e94:	0000                	unimp
    1e96:	0100                	addi	s0,sp,128
    1e98:	5a00                	lw	s0,48(a2)
	...
    1ea2:	0004                	0x4
            for (i = 0; i < next; i++)
    1ea4:	9f5a01f3          	0x9f5a01f3
	...
            *(p + total + i) = ',';
    1eb0:	0001                	nop
    1eb2:	005a                	c.slli	zero,0x16
    1eb4:	0000                	unimp
    1eb6:	0000                	unimp
    1eb8:	0000                	unimp
    1eba:	0400                	addi	s0,sp,512
        switch (seed & 0x7)
    1ebc:	f300                	fsw	fs0,32(a4)
    1ebe:	5a01                	li	s4,-32
    1ec0:	009f 0000 0000      	0x9f
	...
    1ece:	0000                	unimp
    1ed0:	0100                	addi	s0,sp,128
    1ed2:	5a00                	lw	s0,48(a2)
	...
                buf  = intpat[(seed >> 3) & 0x3];
    1edc:	0004                	0x4
    1ede:	9f5a01f3          	0x9f5a01f3
	...
    while ((total + next + 1) < size)
    1eea:	0001                	nop
                buf  = intpat[(seed >> 3) & 0x3];
    1eec:	005a                	c.slli	zero,0x16
    1eee:	0000                	unimp
                break;
    1ef0:	0000                	unimp
    1ef2:	0000                	unimp
    while ((total + next + 1) < size)
    1ef4:	0400                	addi	s0,sp,512
    1ef6:	f300                	fsw	fs0,32(a4)
                next = 4;
    1ef8:	5a01                	li	s4,-32
    1efa:	009f 0000 0000      	0x9f
	...
                buf  = scipat[(seed >> 3) & 0x3];
    1f08:	0000                	unimp
    1f0a:	0100                	addi	s0,sp,128
    while ((total + next + 1) < size)
    1f0c:	5c00                	lw	s0,56(s0)
	...
                break;
    1f16:	0004                	0x4
    while ((total + next + 1) < size)
    1f18:	9f5c01f3          	0x9f5c01f3
	...
}
    1f24:	0001                	nop
    1f26:	005c                	addi	a5,sp,4
	...
    1f34:	0000                	unimp
    1f36:	0100                	addi	s0,sp,128
    1f38:	5e00                	lw	s0,56(a2)
	...
                buf  = errpat[(seed >> 3) & 0x3];
    1f42:	0004                	0x4
    1f44:	9f5e01f3          	0x9f5e01f3
	...
    ee_u32 total = 0, next = 0, i;
    1f58:	0001                	nop
    1f5a:	005f 0000 0000      	0x5f
    1f60:	0000                	unimp
    1f62:	0400                	addi	s0,sp,512
    1f64:	f300                	fsw	fs0,32(a4)
    1f66:	5f01                	li	t5,-32
    1f68:	009f 0000 0000      	0x9f
    1f6e:	0000                	unimp
    ee_u8 *         str = *instr;
    1f70:	0100                	addi	s0,sp,128
    1f72:	5f00                	lw	s0,56(a4)
	...
        if (NEXT_SYMBOL == ',') /* end of this input */
    1f84:	0001                	nop
    1f86:	0060                	addi	s0,sp,12
	...
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1f94:	0000                	unimp
    1f96:	0100                	addi	s0,sp,128
    1f98:	5b00                	lw	s0,48(a4)
	...
    for (; *str && state != CORE_INVALID; str++)
    1faa:	0001                	nop
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fac:	005f 0000 0000      	0x5f
	...
                if (NEXT_SYMBOL == '.')
    1fba:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fbc:	0100                	addi	s0,sp,128
    1fbe:	5a00                	lw	s0,48(a2)
	...
                if (NEXT_SYMBOL == '.')
    1fc8:	0001                	nop
    1fca:	005e                	c.slli	zero,0x17
	...
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fd8:	0000                	unimp
    1fda:	0100                	addi	s0,sp,128
    for (; *str && state != CORE_INVALID; str++)
    1fdc:	5a00                	lw	s0,48(a2)
	...
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fe6:	0001                	nop
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fe8:	005a                	c.slli	zero,0x16
    1fea:	0000                	unimp
    1fec:	0000                	unimp
    1fee:	0000                	unimp
                if (NEXT_SYMBOL == '.')
    1ff0:	0100                	addi	s0,sp,128
    1ff2:	5a00                	lw	s0,48(a2)
	...
                    transition_count[CORE_INT]++;
    1ffc:	0004                	0x4
    1ffe:	9f5a01f3          	0x9f5a01f3
	...
        if (NEXT_SYMBOL == ',') /* end of this input */
    200a:	0001                	nop
    200c:	005a                	c.slli	zero,0x16
	...
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    201a:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    201c:	0100                	addi	s0,sp,128
    201e:	5a00                	lw	s0,48(a2)
	...
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2028:	0001                	nop
    202a:	005a                	c.slli	zero,0x16
	...
                    transition_count[CORE_FLOAT]++;
    2038:	0000                	unimp
    203a:	0100                	addi	s0,sp,128
                    state = CORE_INVALID;
    203c:	5a00                	lw	s0,48(a2)
	...
                    transition_count[CORE_FLOAT]++;
    2046:	0001                	nop
    *instr = str;
    2048:	005f 0000 0000      	0x5f
}
    204e:	0000                	unimp
    2050:	0100                	addi	s0,sp,128
    2052:	5a00                	lw	s0,48(a2)
	...
                else if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    205c:	0001                	nop
    205e:	005f 0000 0000      	0x5f
	...
                    transition_count[CORE_INVALID]++;
    206c:	0000                	unimp
    206e:	0200                	addi	s0,sp,256
                transition_count[CORE_START]++;
    2070:	3000                	fld	fs0,32(s0)
    2072:	009f 0000 0000      	0x9f
                    transition_count[CORE_INVALID]++;
    2078:	0000                	unimp
    207a:	0100                	addi	s0,sp,128
    207c:	5a00                	lw	s0,48(a2)
	...
}
    2086:	0001                	nop
    2088:	005e                	c.slli	zero,0x17
    208a:	0000                	unimp
                    transition_count[CORE_INT]++;
    208c:	0000                	unimp
    208e:	0000                	unimp
    2090:	0100                	addi	s0,sp,128
    2092:	5a00                	lw	s0,48(a2)
	...
}
    20a4:	0001                	nop
    20a6:	005f 0000 0000      	0x5f
                transition_count[CORE_START]++;
    20ac:	0000                	unimp
    20ae:	0100                	addi	s0,sp,128
    for (; *str && state != CORE_INVALID; str++)
    20b0:	5f00                	lw	s0,56(a4)
	...
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    20c2:	0001                	nop
    20c4:	005a                	c.slli	zero,0x16
    20c6:	0000                	unimp
    20c8:	0000                	unimp
    20ca:	0000                	unimp
    20cc:	0200                	addi	s0,sp,256
    20ce:	3000                	fld	fs0,32(s0)
    20d0:	009f 0000 0000      	0x9f
    20d6:	0000                	unimp
                else if (NEXT_SYMBOL == '.')
    20d8:	0100                	addi	s0,sp,128
    20da:	6600                	flw	fs0,8(a2)
	...
                    state = CORE_INVALID;
    20e4:	0001                	nop
    20e6:	0066                	c.slli	zero,0x19
    *instr = str;
    20e8:	0000                	unimp
    20ea:	0000                	unimp
}
    20ec:	0000                	unimp
    20ee:	0200                	addi	s0,sp,256
    20f0:	3000                	fld	fs0,32(s0)
    20f2:	009f 0000 0000      	0x9f
    for (; *str && state != CORE_INVALID; str++)
    20f8:	0000                	unimp
    20fa:	0100                	addi	s0,sp,128
    20fc:	6600                	flw	fs0,8(a2)
	...
        if (NEXT_SYMBOL == ',') /* end of this input */
    2106:	0001                	nop
    2108:	005a                	c.slli	zero,0x16
    210a:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    210c:	0000                	unimp
    210e:	0000                	unimp
    2110:	0200                	addi	s0,sp,256
    2112:	3000                	fld	fs0,32(s0)
    2114:	009f 0000 0000      	0x9f
	...
                    transition_count[CORE_FLOAT]++;
    2122:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    2124:	0100                	addi	s0,sp,128
    2126:	5b00                	lw	s0,48(a4)
	...
        if (NEXT_SYMBOL == ',') /* end of this input */
    2130:	0001                	nop
    2132:	00000067          	jr	zero # 0 <_start>
    2136:	0000                	unimp
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    2138:	0000                	unimp
    213a:	0400                	addi	s0,sp,512
    213c:	f300                	fsw	fs0,32(a4)
    213e:	5b01                	li	s6,-32
    2140:	009f 0000 0000      	0x9f
    2146:	0000                	unimp
                    transition_count[CORE_S2]++;
    2148:	0100                	addi	s0,sp,128
    214a:	5b00                	lw	s0,48(a4)
	...
}
    215c:	0001                	nop
    215e:	005c                	addi	a5,sp,4
    for (; *str && state != CORE_INVALID; str++)
    2160:	0000                	unimp
    2162:	0000                	unimp
    2164:	0000                	unimp
    2166:	0100                	addi	s0,sp,128
        if (NEXT_SYMBOL == ',') /* end of this input */
    2168:	6800                	flw	fs0,16(s0)
	...
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2172:	0004                	0x4
    2174:	9f5c01f3          	0x9f5c01f3
	...
    2180:	0001                	nop
    2182:	005c                	addi	a5,sp,4
	...
    for (; *str && state != CORE_INVALID; str++)
    2190:	0000                	unimp
    2192:	0100                	addi	s0,sp,128
        if (NEXT_SYMBOL == ',') /* end of this input */
    2194:	5a00                	lw	s0,48(a2)
	...
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    219e:	0001                	nop
        if (NEXT_SYMBOL == ',') /* end of this input */
    21a0:	0066                	c.slli	zero,0x19
    21a2:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    21a4:	0000                	unimp
    21a6:	0000                	unimp
    21a8:	0100                	addi	s0,sp,128
    21aa:	6400                	flw	fs0,8(s0)
	...
                    transition_count[CORE_INVALID]++;
    21b4:	0002                	c.slli64	zero
    21b6:	0084                	addi	s1,sp,64
	...
    21c0:	0001                	nop
    21c2:	0064                	addi	s1,sp,12
    21c4:	0000                	unimp
    21c6:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    21c8:	0000                	unimp
    21ca:	0100                	addi	s0,sp,128
        if (NEXT_SYMBOL == ',') /* end of this input */
    21cc:	5800                	lw	s0,48(s0)
	...
    for (; *str && state != CORE_INVALID; str++)
    21d6:	0001                	nop
        if (NEXT_SYMBOL == ',') /* end of this input */
    21d8:	0064                	addi	s1,sp,12
    21da:	0000                	unimp
    21dc:	0000                	unimp
    21de:	0000                	unimp
    21e0:	0100                	addi	s0,sp,128
    21e2:	6600                	flw	fs0,8(a2)
	...
    21ec:	0001                	nop
    21ee:	0064                	addi	s1,sp,12
    for (; *str && state != CORE_INVALID; str++)
    21f0:	0000                	unimp
    21f2:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    21f4:	0000                	unimp
    21f6:	0100                	addi	s0,sp,128
    21f8:	5a00                	lw	s0,48(a2)
	...
    for (; *str && state != CORE_INVALID; str++)
    220a:	0001                	nop
        if (NEXT_SYMBOL == ',') /* end of this input */
    220c:	0064                	addi	s1,sp,12
    220e:	0000                	unimp
    2210:	0000                	unimp
    2212:	0000                	unimp
    2214:	0100                	addi	s0,sp,128
    2216:	5800                	lw	s0,48(s0)
	...
    for (; *str && state != CORE_INVALID; str++)
    2220:	0001                	nop
    2222:	0058                	addi	a4,sp,4
    2224:	0000                	unimp
    2226:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    2228:	0000                	unimp
    222a:	0200                	addi	s0,sp,256
    222c:	7800                	flw	fs0,48(s0)
	...
    for (; *str && state != CORE_INVALID; str++)
    2236:	0100                	addi	s0,sp,128
                    state = CORE_FLOAT;
    2238:	5800                	lw	s0,48(s0)
	...
        if (NEXT_SYMBOL == ',') /* end of this input */
    2242:	0002                	c.slli64	zero
            break;
    2244:	0078                	addi	a4,sp,12
	...
    for (; *str && state != CORE_INVALID; str++)
    224e:	0001                	nop
    2250:	0058                	addi	a4,sp,4
	...
    225e:	0000                	unimp
                    state = CORE_S2;
    2260:	0100                	addi	s0,sp,128
    2262:	5800                	lw	s0,48(s0)
	...
    enum CORE_STATE state = CORE_START;
    226c:	0001                	nop
    226e:	005f 0000 0000      	0x5f
                    state = CORE_S1;
    2274:	0000                	unimp
    2276:	0100                	addi	s0,sp,128
    2278:	5800                	lw	s0,48(s0)
	...
        if (NEXT_SYMBOL == ',') /* end of this input */
    2282:	0001                	nop
    2284:	005f 0000 0000      	0x5f
    for (; *str && state != CORE_INVALID; str++)
    228a:	0000                	unimp
                    state = CORE_FLOAT;
    228c:	0100                	addi	s0,sp,128
    228e:	6400                	flw	fs0,8(s0)
	...
        if (NEXT_SYMBOL == ',') /* end of this input */
    2298:	0001                	nop
    229a:	005f 0000 0000      	0x5f
	...
{
    22a8:	0000                	unimp
    22aa:	0200                	addi	s0,sp,256
    22ac:	3000                	fld	fs0,32(s0)
    22ae:	009f 0000 0000      	0x9f
    22b4:	0000                	unimp
    22b6:	0100                	addi	s0,sp,128
    22b8:	6200                	flw	fs0,0(a2)
	...
    22c2:	0001                	nop
    22c4:	005f 0000 0000      	0x5f
    22ca:	0000                	unimp
    while (*p != 0)
    22cc:	0100                	addi	s0,sp,128
    22ce:	6200                	flw	fs0,0(a2)
	...
    ee_u8 *p = memblock;
    22d8:	0001                	nop
    22da:	0062                	c.slli	zero,0x18
    for (i = 0; i < NUM_CORE_STATES; i++)
    22dc:	0000                	unimp
    22de:	0000                	unimp
    22e0:	0000                	unimp
    22e2:	0200                	addi	s0,sp,256
    22e4:	3000                	fld	fs0,32(s0)
    22e6:	009f 0000 0000      	0x9f
    22ec:	0000                	unimp
    22ee:	0100                	addi	s0,sp,128
    22f0:	6200                	flw	fs0,0(a2)
	...
    22fa:	0002                	c.slli64	zero
    22fc:	9f30                	0x9f30
	...
    230e:	0002                	c.slli64	zero
    2310:	9f31                	0x9f31
	...
{
    231a:	0001                	nop
    231c:	0065                	c.nop	25
    231e:	0000                	unimp
    2320:	0000                	unimp
    2322:	0000                	unimp
    2324:	0200                	addi	s0,sp,256
    2326:	3100                	fld	fs0,32(a0)
    2328:	009f 0000 0000      	0x9f
	...
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    2336:	0000                	unimp
    2338:	0200                	addi	s0,sp,256
    233a:	3000                	fld	fs0,32(s0)
    233c:	009f 0000 0000      	0x9f
    2342:	0000                	unimp
        final_counts[fstate]++;
    2344:	0100                	addi	s0,sp,128
    2346:	6900                	flw	fs0,16(a0)
	...
    while (*p != 0)
    2350:	0002                	c.slli64	zero
    2352:	9f30                	0x9f30
	...
        final_counts[fstate]++;
    235c:	0001                	nop
    235e:	0069                	c.nop	26
    2360:	0000                	unimp
    2362:	0000                	unimp
    while (*p != 0)
    2364:	0000                	unimp
    2366:	0200                	addi	s0,sp,256
    p = memblock;
    2368:	3000                	fld	fs0,32(s0)
    236a:	009f 0000 0000      	0x9f
	...
        if (*p != ',')
    2378:	0000                	unimp
    237a:	0200                	addi	s0,sp,256
{
    237c:	3000                	fld	fs0,32(s0)
    237e:	009f 0000 0000      	0x9f
        if (*p != ',')
    2384:	0000                	unimp
    2386:	0100                	addi	s0,sp,128
            *p ^= (ee_u8)seed1;
    2388:	5900                	lw	s0,48(a0)
	...
    while (p < (memblock + blksize))
    239a:	0001                	nop
    239c:	00000063          	beqz	zero,239c <core_bench_state+0xfc>
	...
        p += step;
    23ac:	0200                	addi	s0,sp,256
    23ae:	3000                	fld	fs0,32(s0)
    while (p < (memblock + blksize))
    23b0:	009f 0000 0000      	0x9f
    while (*p != 0)
    23b6:	0000                	unimp
    p = memblock;
    23b8:	0100                	addi	s0,sp,128
    23ba:	5900                	lw	s0,48(a0)
	...
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    23c4:	7f790003          	lb	zero,2039(s2)
    23c8:	009f 0000 0000      	0x9f
    23ce:	0000                	unimp
    23d0:	0100                	addi	s0,sp,128
    23d2:	5900                	lw	s0,48(a0)
	...
        final_counts[fstate]++;
    23dc:	0078                	addi	a4,sp,12
    23de:	0000                	unimp
    while (*p != 0)
    23e0:	00d8                	addi	a4,sp,68
    23e2:	0000                	unimp
        final_counts[fstate]++;
    23e4:	0001                	nop
    23e6:	d85a                	sw	s6,48(sp)
    while (*p != 0)
    23e8:	0000                	unimp
    23ea:	df00                	sw	s0,56(a4)
        final_counts[fstate]++;
    23ec:	0000                	unimp
    23ee:	0300                	addi	s0,sp,384
    23f0:	9100                	0x9100
    23f2:	6f9c                	flw	fa5,24(a5)
	...
    while (p < (memblock + blksize))
    23fc:	0078                	addi	a4,sp,12
    23fe:	0000                	unimp
        if (*p != ',')
    2400:	00d4                	addi	a3,sp,68
    2402:	0000                	unimp
    2404:	0001                	nop
    2406:	0000d45b          	0xd45b
            *p ^= (ee_u8)seed2;
    240a:	df00                	sw	s0,56(a4)
        if (*p != ',')
    240c:	0000                	unimp
    240e:	0100                	addi	s0,sp,128
            *p ^= (ee_u8)seed2;
    2410:	5c00                	lw	s0,56(s0)
    2412:	00df 0000 0c60      	0xc60000000df
        p += step;
    2418:	0000                	unimp
    241a:	0004                	0x4
    241c:	9f5b01f3          	0x9f5b01f3
	...
    while (p < (memblock + blksize))
    2428:	0180                	addi	s0,sp,192
    242a:	0000                	unimp
        crc = crcu32(final_counts[i], crc);
    242c:	01b4                	addi	a3,sp,200
    242e:	0000                	unimp
    2430:	0002                	c.slli64	zero
    2432:	9f30                	0x9f30
    2434:	01b4                	addi	a3,sp,200
    2436:	0000                	unimp
    2438:	01bc                	addi	a5,sp,200
    243a:	0000                	unimp
    243c:	0002                	c.slli64	zero
    243e:	9f31                	0x9f31
        crc = crcu32(track_counts[i], crc);
    2440:	01bc                	addi	a5,sp,200
    2442:	0000                	unimp
    2444:	01cc                	addi	a1,sp,196
    2446:	0000                	unimp
    2448:	0002                	c.slli64	zero
    244a:	9f32                	add	t5,t5,a2
    244c:	01cc                	addi	a1,sp,196
    244e:	0000                	unimp
    2450:	01e4                	addi	s1,sp,204
    2452:	0000                	unimp
    2454:	0002                	c.slli64	zero
    2456:	9f30                	0x9f30
    for (i = 0; i < NUM_CORE_STATES; i++)
    2458:	01e4                	addi	s1,sp,204
    245a:	0000                	unimp
}
    245c:	01e8                	addi	a0,sp,204
    245e:	0000                	unimp
    2460:	0002                	c.slli64	zero
    2462:	9f31                	0x9f31
    2464:	01e8                	addi	a0,sp,204
    2466:	0000                	unimp
    2468:	01ec                	addi	a1,sp,204
    246a:	0000                	unimp
    246c:	0002                	c.slli64	zero
    246e:	9f32                	add	t5,t5,a2
    2470:	01ec                	addi	a1,sp,204
    2472:	0000                	unimp
    2474:	0228                	addi	a0,sp,264
    2476:	0000                	unimp
    2478:	0002                	c.slli64	zero
    247a:	9f30                	0x9f30
    247c:	042c                	addi	a1,sp,520
    247e:	0000                	unimp
    2480:	0460                	addi	s0,sp,524
    2482:	0000                	unimp
    2484:	0002                	c.slli64	zero
    2486:	9f30                	0x9f30
        p += step;
    2488:	0460                	addi	s0,sp,524
    248a:	0000                	unimp
    248c:	0490                	addi	a2,sp,576
    248e:	0000                	unimp
    while (p < (memblock + blksize))
    2490:	0001                	nop
    2492:	9c6a                	add	s8,s8,s10
    2494:	0004                	0x4
    2496:	7000                	flw	fs0,32(s0)
    while (p < (memblock + blksize))
    2498:	0005                	c.nop	1
    249a:	0100                	addi	s0,sp,128
    249c:	6a00                	flw	fs0,16(a2)
    249e:	058c                	addi	a1,sp,704
    24a0:	0000                	unimp
    24a2:	060c                	addi	a1,sp,768
    while (*p != 0)
    24a4:	0000                	unimp
    24a6:	0002                	c.slli64	zero
    24a8:	9f30                	0x9f30
    24aa:	0658                	addi	a4,sp,772
    switch (i)
    24ac:	0000                	unimp
    24ae:	0688                	addi	a0,sp,832
    24b0:	0000                	unimp
    24b2:	0001                	nop
    24b4:	246a                	fld	fs0,152(sp)
    24b6:	0008                	0x8
    24b8:	5000                	lw	s0,32(s0)
    24ba:	0008                	0x8
    24bc:	0200                	addi	s0,sp,256
    24be:	3000                	fld	fs0,32(s0)
    24c0:	509f 0008 8000      	0x80000008509f
    24c6:	0008                	0x8
    24c8:	0100                	addi	s0,sp,128
    24ca:	6300                	flw	fs0,0(a4)
            retval = seed5_volatile;
    24cc:	088c                	addi	a1,sp,80
    24ce:	0000                	unimp
    24d0:	0894                	addi	a3,sp,80
    24d2:	0000                	unimp
            break;
    24d4:	0001                	nop
    24d6:	00089c63          	bnez	a7,24ee <get_seed_32+0x42>
            retval = seed1_volatile;
    24da:	c800                	sw	s0,16(s0)
    24dc:	0008                	0x8
    24de:	0200                	addi	s0,sp,256
            break;
    24e0:	3000                	fld	fs0,32(s0)
    24e2:	c89f 0008 f800      	0xf8000008c89f
            retval = seed2_volatile;
    24e8:	0008                	0x8
    24ea:	0100                	addi	s0,sp,128
            break;
    24ec:	6300                	flw	fs0,0(a4)
    24ee:	0904                	addi	s1,sp,144
            retval = seed3_volatile;
    24f0:	0000                	unimp
    24f2:	090c                	addi	a1,sp,144
    24f4:	0000                	unimp
    24f6:	0001                	nop
            break;
    24f8:	00091463          	bnez	s2,2500 <get_seed_32+0x54>
            retval = seed4_volatile;
    24fc:	4000                	lw	s0,0(s0)
    24fe:	0009                	c.nop	2
    2500:	0200                	addi	s0,sp,256
    2502:	3000                	fld	fs0,32(s0)
            break;
    2504:	409f 0009 7000      	0x70000009409f
            retval = 0;
    250a:	0009                	c.nop	2
}
    250c:	0100                	addi	s0,sp,128
    250e:	6300                	flw	fs0,0(a4)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2510:	097c                	addi	a5,sp,156
    2512:	0000                	unimp
    crc = crcu8((ee_u8)(newval), crc);
    2514:	0980                	addi	s0,sp,208
    2516:	0000                	unimp
        if (x16 == 1)
    2518:	0001                	nop
    251a:	00098063          	beqz	s3,251a <crcu16+0xa>
        data >>= 1;
    251e:	a800                	fsd	fs0,16(s0)
        if (x16 == 1)
    2520:	0009                	c.nop	2
    2522:	0200                	addi	s0,sp,256
    2524:	3000                	fld	fs0,32(s0)
    2526:	a89f 0009 d400      	0xd4000009a89f
            crc |= 0x8000;
    252c:	0009                	c.nop	2
    252e:	0100                	addi	s0,sp,128
    2530:	6900                	flw	fs0,16(a0)
    2532:	09e0                	addi	s0,sp,220
    2534:	0000                	unimp
    2536:	09e4                	addi	s1,sp,220
    2538:	0000                	unimp
    253a:	0001                	nop
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    253c:	5869                	li	a6,-6
    253e:	000a                	c.slli	zero,0x2
        if (x16 == 1)
    2540:	7800                	flw	fs0,48(s0)
    2542:	000a                	c.slli	zero,0x2
    2544:	0200                	addi	s0,sp,256
    2546:	3000                	fld	fs0,32(s0)
        data >>= 1;
    2548:	789f 000a b000      	0xb000000a789f
        if (x16 == 1)
    254e:	000a                	c.slli	zero,0x2
            crc |= 0x8000;
    2550:	0200                	addi	s0,sp,256
    2552:	3100                	fld	fs0,32(a0)
    2554:	b09f 000a c400      	0xc400000ab09f
    255a:	000a                	c.slli	zero,0x2
    255c:	0200                	addi	s0,sp,256
    255e:	3200                	fld	fs0,32(a2)
    2560:	c49f 000a cc00      	0xcc00000ac49f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2566:	000a                	c.slli	zero,0x2
        if (x16 == 1)
    2568:	0200                	addi	s0,sp,256
    256a:	3000                	fld	fs0,32(s0)
        data >>= 1;
    256c:	ac9f 000b b800      	0xb800000bac9f
        if (x16 == 1)
    2572:	0200000b          	0x200000b
    2576:	3000                	fld	fs0,32(s0)
            crc |= 0x8000;
    2578:	589f 000c 6000      	0x6000000c589f
    257e:	000c                	0xc
    2580:	0200                	addi	s0,sp,256
    2582:	3000                	fld	fs0,32(s0)
    2584:	009f 0000 0000      	0x9f
    258a:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    258c:	7800                	flw	fs0,48(s0)
    258e:	0000                	unimp
        if (x16 == 1)
    2590:	e400                	fsw	fs0,8(s0)
    2592:	0001                	nop
        data >>= 1;
    2594:	0200                	addi	s0,sp,256
    2596:	3000                	fld	fs0,32(s0)
        if (x16 == 1)
    2598:	709f 0005 8c00      	0x8c000005709f
    259e:	0005                	c.nop	1
            crc |= 0x8000;
    25a0:	0200                	addi	s0,sp,256
    25a2:	3000                	fld	fs0,32(s0)
    25a4:	4c9f 000a 7400      	0x7400000a4c9f
    25aa:	000a                	c.slli	zero,0x2
    25ac:	0200                	addi	s0,sp,256
    25ae:	3000                	fld	fs0,32(s0)
    25b0:	749f 000a 7c00      	0x7c00000a749f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    25b6:	000a                	c.slli	zero,0x2
        if (x16 == 1)
    25b8:	0200                	addi	s0,sp,256
    25ba:	3100                	fld	fs0,32(a0)
        data >>= 1;
    25bc:	009f 0000 0000      	0x9f
        if (x16 == 1)
    25c2:	0000                	unimp
    25c4:	7800                	flw	fs0,48(s0)
    25c6:	0000                	unimp
            crc |= 0x8000;
    25c8:	b400                	fsd	fs0,40(s0)
    25ca:	0001                	nop
    25cc:	0200                	addi	s0,sp,256
    25ce:	3000                	fld	fs0,32(s0)
    25d0:	b49f 0001 bc00      	0xbc000001b49f
    25d6:	0001                	nop
    25d8:	0100                	addi	s0,sp,128
    25da:	5d00                	lw	s0,56(a0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    25dc:	01bc                	addi	a5,sp,200
    25de:	0000                	unimp
        if (x16 == 1)
    25e0:	01c4                	addi	s1,sp,196
    25e2:	0000                	unimp
        data >>= 1;
    25e4:	0001                	nop
    25e6:	c45a                	sw	s6,8(sp)
        if (x16 == 1)
    25e8:	0001                	nop
    25ea:	c800                	sw	s0,16(s0)
    25ec:	0001                	nop
    25ee:	0300                	addi	s0,sp,384
            crc |= 0x8000;
    25f0:	7a00                	flw	fs0,48(a2)
    25f2:	9f7f                	0x9f7f
    25f4:	01c8                	addi	a0,sp,196
    25f6:	0000                	unimp
    25f8:	01cc                	addi	a1,sp,196
    25fa:	0000                	unimp
    25fc:	0006                	c.slli	zero,0x1
    25fe:	007d                	c.nop	31
    2600:	007c                	addi	a5,sp,12
    2602:	9f22                	add	t5,t5,s0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2604:	01cc                	addi	a1,sp,196
    2606:	0000                	unimp
        if (x16 == 1)
    2608:	01d4                	addi	a3,sp,196
    260a:	0000                	unimp
        data >>= 1;
    260c:	0001                	nop
    260e:	705a                	flw	ft0,180(sp)
        if (x16 == 1)
    2610:	0005                	c.nop	1
    2612:	8c00                	0x8c00
    2614:	0005                	c.nop	1
    2616:	0200                	addi	s0,sp,256
            crc |= 0x8000;
    2618:	3000                	fld	fs0,32(s0)
    261a:	4c9f 000a 5800      	0x5800000a4c9f
    2620:	000a                	c.slli	zero,0x2
    2622:	0200                	addi	s0,sp,256
    2624:	3000                	fld	fs0,32(s0)
    2626:	009f 0000 0000      	0x9f
        if (x16 == 1)
    262c:	0000                	unimp
    262e:	7800                	flw	fs0,48(s0)
    2630:	0000                	unimp
    2632:	fc00                	fsw	fs0,56(s0)
    2634:	03000003          	lb	zero,48(zero) # 30 <_start+0x30>
            crc |= 0x8000;
    2638:	0900                	addi	s0,sp,144
    263a:	9fff                	0x9fff
    263c:	03fc                	addi	a5,sp,460
    263e:	0000                	unimp
    2640:	042c                	addi	a1,sp,520
    2642:	0000                	unimp
    2644:	0002                	c.slli64	zero
    2646:	05709f33          	0x5709f33
    264a:	0000                	unimp
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    264c:	0624                	addi	s1,sp,776
    264e:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2650:	ff090003          	lb	zero,-16(s2)
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2654:	249f 0006 5800      	0x58000006249f
        if (x16 == 1)
    265a:	0006                	c.slli	zero,0x1
        data >>= 1;
    265c:	0200                	addi	s0,sp,256
    265e:	3200                	fld	fs0,32(a2)
        if (x16 == 1)
    2660:	889f 0006 9c00      	0x9c000006889f
    2666:	0006                	c.slli	zero,0x1
            crc |= 0x8000;
    2668:	0300                	addi	s0,sp,384
    266a:	0900                	addi	s0,sp,144
    266c:	9fff                	0x9fff
    266e:	0a4c                	addi	a1,sp,276
    2670:	0000                	unimp
    2672:	0acc                	addi	a1,sp,340
    2674:	0000                	unimp
    2676:	ff090003          	lb	zero,-16(s2)
    267a:	e09f 000a f400      	0xf400000ae09f
        if (x16 == 1)
    2680:	000a                	c.slli	zero,0x2
    2682:	0300                	addi	s0,sp,384
        data >>= 1;
    2684:	0900                	addi	s0,sp,144
    2686:	9fff                	0x9fff
        if (x16 == 1)
    2688:	0bb8                	addi	a4,sp,472
    268a:	0000                	unimp
    268c:	0bf0                	addi	a2,sp,476
    268e:	0000                	unimp
            crc |= 0x8000;
    2690:	0002                	c.slli64	zero
    2692:	9f31                	0x9f31
    2694:	0bf0                	addi	a2,sp,476
    2696:	0000                	unimp
    2698:	0c24                	addi	s1,sp,536
    269a:	0000                	unimp
    269c:	0002                	c.slli64	zero
    269e:	9f30                	0x9f30
    26a0:	0c24                	addi	s1,sp,536
    26a2:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    26a4:	0c58                	addi	a4,sp,532
    26a6:	0000                	unimp
        if (x16 == 1)
    26a8:	0002                	c.slli64	zero
    26aa:	9f34                	0x9f34
	...
    26b4:	0078                	addi	a4,sp,12
    26b6:	0000                	unimp
            crc |= 0x8000;
    26b8:	0460                	addi	s0,sp,524
    26ba:	0000                	unimp
    26bc:	0002                	c.slli64	zero
    26be:	9f30                	0x9f30
    26c0:	0460                	addi	s0,sp,524
    26c2:	0000                	unimp
    26c4:	0494                	addi	a3,sp,576
    26c6:	0000                	unimp
    26c8:	0001                	nop
    26ca:	00049c6b          	0x49c6b
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    26ce:	7000                	flw	fs0,32(s0)
        if (x16 == 1)
    26d0:	0005                	c.nop	1
    26d2:	0100                	addi	s0,sp,128
        data >>= 1;
    26d4:	6b00                	flw	fs0,16(a4)
    26d6:	0570                	addi	a2,sp,652
        if (x16 == 1)
    26d8:	0000                	unimp
    26da:	0658                	addi	a4,sp,772
    26dc:	0000                	unimp
    26de:	0002                	c.slli64	zero
            crc |= 0x8000;
    26e0:	9f30                	0x9f30
    26e2:	0658                	addi	a4,sp,772
    26e4:	0000                	unimp
    26e6:	0688                	addi	a0,sp,832
    26e8:	0000                	unimp
    26ea:	0001                	nop
    26ec:	0006886b          	0x6886b
    26f0:	9c00                	0x9c00
    26f2:	0006                	c.slli	zero,0x1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    26f4:	0200                	addi	s0,sp,256
    26f6:	3000                	fld	fs0,32(s0)
        if (x16 == 1)
    26f8:	109f 0007 9800      	0x98000007109f
        data >>= 1;
    26fe:	01000007          	0x1000007
        if (x16 == 1)
    2702:	5800                	lw	s0,48(s0)
    2704:	07c0                	addi	s0,sp,964
    2706:	0000                	unimp
            crc |= 0x8000;
    2708:	09fc                	addi	a5,sp,220
    270a:	0000                	unimp
    270c:	0001                	nop
    270e:	4c58                	lw	a4,28(s0)
    2710:	000a                	c.slli	zero,0x2
    2712:	cc00                	sw	s0,24(s0)
    2714:	000a                	c.slli	zero,0x2
    2716:	0200                	addi	s0,sp,256
    2718:	3000                	fld	fs0,32(s0)
    271a:	cc9f 000a e000      	0xe000000acc9f
        if (x16 == 1)
    2720:	000a                	c.slli	zero,0x2
    2722:	0100                	addi	s0,sp,128
        data >>= 1;
    2724:	5800                	lw	s0,48(s0)
    2726:	0ae0                	addi	s0,sp,348
        if (x16 == 1)
    2728:	0000                	unimp
    272a:	0af4                	addi	a3,sp,348
    272c:	0000                	unimp
    272e:	0002                	c.slli64	zero
            crc |= 0x8000;
    2730:	9f30                	0x9f30
    2732:	0af4                	addi	a3,sp,348
    2734:	0000                	unimp
    2736:	0b28                	addi	a0,sp,408
    2738:	0000                	unimp
    273a:	0001                	nop
    273c:	9458                	0x9458
    273e:	a800000b          	0xa800000b
    2742:	0100000b          	0x100000b
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2746:	5800                	lw	s0,48(s0)
        if (x16 == 1)
    2748:	0ba8                	addi	a0,sp,472
    274a:	0000                	unimp
        data >>= 1;
    274c:	0bac                	addi	a1,sp,472
    274e:	0000                	unimp
        if (x16 == 1)
    2750:	7f780003          	lb	zero,2039(a6) # ffff67f7 <__freertos_irq_stack_top+0xfefe67f7>
    2754:	ac9f 000b b800      	0xb800000bac9f
            crc |= 0x8000;
    275a:	0100000b          	0x100000b
    275e:	5800                	lw	s0,48(s0)
    2760:	0bb8                	addi	a4,sp,472
    2762:	0000                	unimp
    2764:	0c60                	addi	s0,sp,540
    2766:	0000                	unimp
    2768:	0002                	c.slli64	zero
    276a:	9f30                	0x9f30
	...
        if (x16 == 1)
    2774:	0078                	addi	a4,sp,12
    2776:	0000                	unimp
            crc |= 0x8000;
    2778:	0398                	addi	a4,sp,448
    277a:	0000                	unimp
    277c:	0002                	c.slli64	zero
    277e:	9f30                	0x9f30
    2780:	0398                	addi	a4,sp,448
    2782:	0000                	unimp
    2784:	03a4                	addi	s1,sp,456
    2786:	0000                	unimp
    2788:	0001                	nop
    278a:	ac5a                	fsd	fs6,24(sp)
}
    278c:	b8000003          	lb	zero,-1152(zero) # fffffb80 <__freertos_irq_stack_top+0xfefefb80>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2790:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
    crc = crcu8((ee_u8)(newval), crc);
    2794:	5a00                	lw	s0,48(a2)
    2796:	03c0                	addi	s0,sp,452
    return crcu16((ee_u16)newval, crc);
    2798:	0000                	unimp
    279a:	03c8                	addi	a0,sp,452
        if (x16 == 1)
    279c:	0000                	unimp
    279e:	0001                	nop
    return crcu16((ee_u16)newval, crc);
    27a0:	dc5a                	sw	s6,56(sp)
    27a2:	00000003          	lb	zero,0(zero) # 0 <_start>
        data >>= 1;
    27a6:	0004                	0x4
        if (x16 == 1)
    27a8:	0100                	addi	s0,sp,128
    27aa:	5a00                	lw	s0,48(a2)
    27ac:	0570                	addi	a2,sp,652
    27ae:	0000                	unimp
            crc |= 0x8000;
    27b0:	060c                	addi	a1,sp,768
    27b2:	0000                	unimp
    27b4:	0002                	c.slli64	zero
    27b6:	9f30                	0x9f30
    27b8:	060c                	addi	a1,sp,768
    27ba:	0000                	unimp
    27bc:	0628                	addi	a0,sp,776
    27be:	0000                	unimp
    27c0:	0001                	nop
    27c2:	885a                	mv	a6,s6
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27c4:	0006                	c.slli	zero,0x1
    27c6:	9c00                	0x9c00
        if (x16 == 1)
    27c8:	0006                	c.slli	zero,0x1
    27ca:	0100                	addi	s0,sp,128
    27cc:	5a00                	lw	s0,48(a2)
    27ce:	0a4c                	addi	a1,sp,276
        data >>= 1;
    27d0:	0000                	unimp
    27d2:	0acc                	addi	a1,sp,340
        if (x16 == 1)
    27d4:	0000                	unimp
    27d6:	0002                	c.slli64	zero
            crc |= 0x8000;
    27d8:	9f30                	0x9f30
    27da:	0ae0                	addi	s0,sp,348
    27dc:	0000                	unimp
    27de:	0af4                	addi	a3,sp,348
    27e0:	0000                	unimp
    27e2:	0002                	c.slli64	zero
    27e4:	9f30                	0x9f30
    27e6:	0bb8                	addi	a4,sp,472
    27e8:	0000                	unimp
    27ea:	0bbc                	addi	a5,sp,472
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27ec:	0000                	unimp
    27ee:	0001                	nop
        if (x16 == 1)
    27f0:	f05a                	fsw	fs6,32(sp)
    27f2:	f400000b          	0xf400000b
        data >>= 1;
    27f6:	0100000b          	0x100000b
        if (x16 == 1)
    27fa:	5a00                	lw	s0,48(a2)
    27fc:	0c24                	addi	s1,sp,536
    27fe:	0000                	unimp
            crc |= 0x8000;
    2800:	0c28                	addi	a0,sp,536
    2802:	0000                	unimp
    2804:	0001                	nop
    2806:	005a                	c.slli	zero,0x16
    2808:	0000                	unimp
    280a:	0000                	unimp
    280c:	0000                	unimp
    280e:	8400                	0x8400
    2810:	88000003          	lb	zero,-1920(zero) # fffff880 <__freertos_irq_stack_top+0xfefef880>
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2814:	01000003          	lb	zero,16(zero) # 10 <_start+0x10>
        if (x16 == 1)
    2818:	5a00                	lw	s0,48(a2)
    281a:	0388                	addi	a0,sp,448
        data >>= 1;
    281c:	0000                	unimp
    281e:	0570                	addi	a2,sp,652
        if (x16 == 1)
    2820:	0000                	unimp
    2822:	0001                	nop
    2824:	0c64                	addi	s1,sp,540
    2826:	0006                	c.slli	zero,0x1
            crc |= 0x8000;
    2828:	2800                	fld	fs0,16(s0)
    282a:	000a                	c.slli	zero,0x2
    282c:	0100                	addi	s0,sp,128
    282e:	6400                	flw	fs0,8(s0)
    2830:	0acc                	addi	a1,sp,340
    2832:	0000                	unimp
    2834:	0ae0                	addi	s0,sp,348
    2836:	0000                	unimp
    2838:	0001                	nop
    283a:	f464                	fsw	fs1,108(s0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    283c:	000a                	c.slli	zero,0x2
    283e:	6000                	flw	fs0,0(s0)
        if (x16 == 1)
    2840:	000c                	0xc
    2842:	0100                	addi	s0,sp,128
        data >>= 1;
    2844:	6400                	flw	fs0,8(s0)
	...
        if (x16 == 1)
    284e:	0a58                	addi	a4,sp,276
            crc |= 0x8000;
    2850:	0000                	unimp
    2852:	0a74                	addi	a3,sp,284
    2854:	0000                	unimp
    2856:	0002                	c.slli64	zero
    2858:	9f30                	0x9f30
    285a:	0a74                	addi	a3,sp,284
    285c:	0000                	unimp
    285e:	0a7c                	addi	a5,sp,284
    2860:	0000                	unimp
    2862:	0002                	c.slli64	zero
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2864:	9f31                	0x9f31
    2866:	0a7c                	addi	a5,sp,284
        if (x16 == 1)
    2868:	0000                	unimp
    286a:	0ab0                	addi	a2,sp,344
        data >>= 1;
    286c:	0000                	unimp
    286e:	0002                	c.slli64	zero
        if (x16 == 1)
    2870:	9f30                	0x9f30
    2872:	0ab0                	addi	a2,sp,344
    2874:	0000                	unimp
    2876:	0ab4                	addi	a3,sp,344
            crc |= 0x8000;
    2878:	0000                	unimp
    287a:	0002                	c.slli64	zero
    287c:	9f31                	0x9f31
    287e:	0ab4                	addi	a3,sp,344
    2880:	0000                	unimp
    2882:	0ac4                	addi	s1,sp,340
    2884:	0000                	unimp
    2886:	0002                	c.slli64	zero
    2888:	9f30                	0x9f30
    288a:	0ac4                	addi	s1,sp,340
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    288c:	0000                	unimp
    288e:	0acc                	addi	a1,sp,340
        if (x16 == 1)
    2890:	0000                	unimp
    2892:	0002                	c.slli64	zero
        data >>= 1;
    2894:	9f31                	0x9f31
	...
        if (x16 == 1)
    289e:	0230                	addi	a2,sp,264
            crc |= 0x8000;
    28a0:	0000                	unimp
    28a2:	0300                	addi	s0,sp,384
    28a4:	0000                	unimp
    28a6:	000a                	c.slli	zero,0x2
    28a8:	089e                	slli	a7,a7,0x7
	...
    28b2:	0300                	addi	s0,sp,384
        if (x16 == 1)
    28b4:	0000                	unimp
    28b6:	033c                	addi	a5,sp,392
    28b8:	0000                	unimp
    28ba:	0006                	c.slli	zero,0x1
    28bc:	9362                	add	t1,t1,s8
    28be:	6304                	flw	fs1,0(a4)
            crc |= 0x8000;
    28c0:	0ae00493          	li	s1,174
    28c4:	0000                	unimp
    28c6:	0af4                	addi	a3,sp,348
    28c8:	0000                	unimp
    28ca:	000a                	c.slli	zero,0x2
    28cc:	089e                	slli	a7,a7,0x7
	...
        if (x16 == 1)
    28de:	031c                	addi	a5,sp,384
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    28e0:	0000                	unimp
    28e2:	033c                	addi	a5,sp,392
        data >>= 1;
    28e4:	0000                	unimp
    28e6:	0001                	nop
        if (x16 == 1)
    28e8:	005a                	c.slli	zero,0x16
    28ea:	0000                	unimp
    28ec:	0000                	unimp
    28ee:	0000                	unimp
            crc |= 0x8000;
    28f0:	7c00                	flw	fs0,56(s0)
    28f2:	0002                	c.slli64	zero
    28f4:	d800                	sw	s0,48(s0)
    28f6:	0002                	c.slli64	zero
    28f8:	0400                	addi	s0,sp,512
    28fa:	9100                	0x9100
    28fc:	6fac                	flw	fa1,88(a5)
    28fe:	e09f 000a f400      	0xf400000ae09f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2904:	000a                	c.slli	zero,0x2
    2906:	0400                	addi	s0,sp,512
        if (x16 == 1)
    2908:	9100                	0x9100
    290a:	6fac                	flw	fa1,88(a5)
        data >>= 1;
    290c:	009f 0000 0000      	0x9f
        if (x16 == 1)
    2912:	0000                	unimp
    2914:	8800                	0x8800
    2916:	0002                	c.slli64	zero
            crc |= 0x8000;
    2918:	8c00                	0x8c00
    291a:	0002                	c.slli64	zero
    291c:	0200                	addi	s0,sp,256
    291e:	3000                	fld	fs0,32(s0)
    2920:	8c9f 0002 d800      	0xd80000028c9f
    2926:	0002                	c.slli64	zero
    2928:	0100                	addi	s0,sp,128
    292a:	5800                	lw	s0,48(s0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    292c:	0ae0                	addi	s0,sp,348
    292e:	0000                	unimp
        if (x16 == 1)
    2930:	0ae4                	addi	s1,sp,348
    2932:	0000                	unimp
        data >>= 1;
    2934:	0002                	c.slli64	zero
    2936:	9f30                	0x9f30
        if (x16 == 1)
    2938:	0ae4                	addi	s1,sp,348
    293a:	0000                	unimp
    293c:	0af4                	addi	a3,sp,348
    293e:	0000                	unimp
            crc |= 0x8000;
    2940:	0002                	c.slli64	zero
    2942:	9f31                	0x9f31
	...
    294c:	029c                	addi	a5,sp,320
    294e:	0000                	unimp
    2950:	000002a7          	0x2a7
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2954:	0001                	nop
    2956:	bc5a                	fsd	fs6,56(sp)
        if (x16 == 1)
    2958:	0002                	c.slli64	zero
    295a:	c700                	sw	s0,8(a4)
        data >>= 1;
    295c:	0002                	c.slli64	zero
    295e:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2960:	5a00                	lw	s0,48(a2)
	...
            crc |= 0x8000;
    296a:	027c                	addi	a5,sp,268
    296c:	0000                	unimp
    296e:	033c                	addi	a5,sp,392
    2970:	0000                	unimp
    2972:	0004                	0x4
    2974:	ac91                	j	2bc8 <crcu32+0x438>
    2976:	0ae09f6f          	jal	t5,ba24 <_data_lma+0x140c>
    297a:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    297c:	0af4                	addi	a3,sp,348
    297e:	0000                	unimp
        if (x16 == 1)
    2980:	0004                	0x4
    2982:	ac91                	j	2bd6 <crcu32+0x446>
        data >>= 1;
    2984:	00009f6f          	jal	t5,b984 <_data_lma+0x136c>
        if (x16 == 1)
    2988:	0000                	unimp
    298a:	0000                	unimp
    298c:	0000                	unimp
    298e:	0280                	addi	s0,sp,320
            crc |= 0x8000;
    2990:	0000                	unimp
    2992:	02d8                	addi	a4,sp,324
    2994:	0000                	unimp
    2996:	0001                	nop
    2998:	e062                	fsw	fs8,0(sp)
    299a:	000a                	c.slli	zero,0x2
    299c:	f400                	fsw	fs0,40(s0)
    299e:	000a                	c.slli	zero,0x2
    29a0:	0100                	addi	s0,sp,128
    29a2:	6200                	flw	fs0,0(a2)
	...
        data >>= 1;
    29ac:	155c                	addi	a5,sp,676
    29ae:	0000                	unimp
        if (x16 == 1)
    29b0:	1588                	addi	a0,sp,736
    29b2:	0000                	unimp
    29b4:	0001                	nop
    29b6:	885a                	mv	a6,s6
            crc |= 0x8000;
    29b8:	0015                	c.nop	5
    29ba:	dc00                	sw	s0,56(s0)
    29bc:	0015                	c.nop	5
    29be:	0100                	addi	s0,sp,128
    29c0:	5800                	lw	s0,48(s0)
    29c2:	15dc                	addi	a5,sp,740
    29c4:	0000                	unimp
    29c6:	15f0                	addi	a2,sp,748
    29c8:	0000                	unimp
    29ca:	0004                	0x4
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29cc:	9f5a01f3          	0x9f5a01f3
        if (x16 == 1)
    29d0:	15f0                	addi	a2,sp,748
    29d2:	0000                	unimp
        data >>= 1;
    29d4:	1604                	addi	s1,sp,800
    29d6:	0000                	unimp
        if (x16 == 1)
    29d8:	0001                	nop
    29da:	0058                	addi	a4,sp,4
    29dc:	0000                	unimp
    29de:	0000                	unimp
            crc |= 0x8000;
    29e0:	0000                	unimp
    29e2:	8000                	0x8000
    29e4:	0015                	c.nop	5
    29e6:	8800                	0x8800
    29e8:	0015                	c.nop	5
    29ea:	0200                	addi	s0,sp,256
    29ec:	3000                	fld	fs0,32(s0)
    29ee:	889f 0015 d400      	0xd4000015889f
        if (x16 == 1)
    29f4:	0015                	c.nop	5
    29f6:	0100                	addi	s0,sp,128
    29f8:	5900                	lw	s0,48(a0)
    29fa:	15f0                	addi	a2,sp,748
    29fc:	0000                	unimp
    29fe:	15f4                	addi	a3,sp,748
            crc |= 0x8000;
    2a00:	0000                	unimp
    2a02:	0002                	c.slli64	zero
    2a04:	9f30                	0x9f30
    2a06:	15f4                	addi	a3,sp,748
    2a08:	0000                	unimp
    2a0a:	1604                	addi	s1,sp,800
    2a0c:	0000                	unimp
    2a0e:	0002                	c.slli64	zero
    2a10:	9f31                	0x9f31
	...
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a1a:	1598                	addi	a4,sp,736
    crc = crcu8((ee_u8)(newval), crc);
    2a1c:	0000                	unimp
    2a1e:	000015a3          	sh	zero,11(zero) # b <_start+0xb>
    return crcu16((ee_u16)newval, crc);
    2a22:	0001                	nop
        if (x16 == 1)
    2a24:	b85a                	fsd	fs6,48(sp)
    2a26:	0015                	c.nop	5
    return crcu16((ee_u16)newval, crc);
    2a28:	c300                	sw	s0,0(a4)
    2a2a:	0015                	c.nop	5
        data >>= 1;
    2a2c:	0100                	addi	s0,sp,128
    2a2e:	5a00                	lw	s0,48(a2)
	...
            crc |= 0x8000;
    2a38:	1580                	addi	s0,sp,736
    2a3a:	0000                	unimp
    2a3c:	1588                	addi	a0,sp,736
    2a3e:	0000                	unimp
    2a40:	0001                	nop
    2a42:	885a                	mv	a6,s6
    2a44:	0015                	c.nop	5
    2a46:	dc00                	sw	s0,56(s0)
    2a48:	0015                	c.nop	5
    2a4a:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a4c:	5800                	lw	s0,48(s0)
    2a4e:	15dc                	addi	a5,sp,740
        if (x16 == 1)
    2a50:	0000                	unimp
    2a52:	15f0                	addi	a2,sp,748
        data >>= 1;
    2a54:	0000                	unimp
    2a56:	0004                	0x4
        if (x16 == 1)
    2a58:	9f5a01f3          	0x9f5a01f3
    2a5c:	15f0                	addi	a2,sp,748
    2a5e:	0000                	unimp
            crc |= 0x8000;
    2a60:	1604                	addi	s1,sp,800
    2a62:	0000                	unimp
    2a64:	0001                	nop
    2a66:	0058                	addi	a4,sp,4
    2a68:	0000                	unimp
    2a6a:	0000                	unimp
    2a6c:	0000                	unimp
    2a6e:	8000                	0x8000
    2a70:	0015                	c.nop	5
    2a72:	e400                	fsw	fs0,8(s0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a74:	0015                	c.nop	5
    2a76:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2a78:	6200                	flw	fs0,0(a2)
    2a7a:	15f0                	addi	a2,sp,748
        data >>= 1;
    2a7c:	0000                	unimp
    2a7e:	1604                	addi	s1,sp,800
        if (x16 == 1)
    2a80:	0000                	unimp
    2a82:	0001                	nop
    2a84:	0062                	c.slli	zero,0x18
    2a86:	0000                	unimp
            crc |= 0x8000;
    2a88:	0000                	unimp
    2a8a:	0000                	unimp
    2a8c:	b800                	fsd	fs0,48(s0)
    2a8e:	e400001b          	0xe400001b
    2a92:	0100001b          	0x100001b
    2a96:	5a00                	lw	s0,48(a2)
    2a98:	1be4                	addi	s1,sp,508
    2a9a:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a9c:	1c28                	addi	a0,sp,568
    2a9e:	0000                	unimp
        if (x16 == 1)
    2aa0:	0001                	nop
    2aa2:	2860                	fld	fs0,208(s0)
        data >>= 1;
    2aa4:	001c                	0x1c
    2aa6:	c800                	sw	s0,16(s0)
        if (x16 == 1)
    2aa8:	001c                	0x1c
    2aaa:	0400                	addi	s0,sp,512
    2aac:	f300                	fsw	fs0,32(a4)
    2aae:	5a01                	li	s4,-32
            crc |= 0x8000;
    2ab0:	c89f 001c dc00      	0xdc00001cc89f
    2ab6:	001c                	0x1c
    2ab8:	0100                	addi	s0,sp,128
    2aba:	6000                	flw	fs0,0(s0)
	...
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ac4:	1bb8                	addi	a4,sp,504
    2ac6:	0000                	unimp
        if (x16 == 1)
    2ac8:	1c30                	addi	a2,sp,568
    2aca:	0000                	unimp
        data >>= 1;
    2acc:	0001                	nop
    2ace:	001c305b          	0x1c305b
        if (x16 == 1)
    2ad2:	c800                	sw	s0,16(s0)
    2ad4:	001c                	0x1c
    2ad6:	0400                	addi	s0,sp,512
            crc |= 0x8000;
    2ad8:	f300                	fsw	fs0,32(a4)
    2ada:	5b01                	li	s6,-32
    2adc:	c89f 001c dc00      	0xdc00001cc89f
    2ae2:	001c                	0x1c
    2ae4:	0100                	addi	s0,sp,128
    2ae6:	5b00                	lw	s0,48(a4)
	...
        if (x16 == 1)
    2af0:	1bb8                	addi	a4,sp,504
    2af2:	0000                	unimp
        data >>= 1;
    2af4:	1bd4                	addi	a3,sp,500
    2af6:	0000                	unimp
        if (x16 == 1)
    2af8:	0001                	nop
    2afa:	d45c                	sw	a5,44(s0)
    2afc:	3c00001b          	0x3c00001b
            crc |= 0x8000;
    2b00:	001c                	0x1c
    2b02:	0100                	addi	s0,sp,128
    2b04:	5c00                	lw	s0,56(s0)
    2b06:	1c68                	addi	a0,sp,572
    2b08:	0000                	unimp
    2b0a:	1cdc                	addi	a5,sp,628
    2b0c:	0000                	unimp
    2b0e:	0001                	nop
    2b10:	005c                	addi	a5,sp,4
    2b12:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b14:	0000                	unimp
    2b16:	0000                	unimp
        if (x16 == 1)
    2b18:	cc00                	sw	s0,24(s0)
    2b1a:	0000001b          	0x1b
        data >>= 1;
    2b1e:	001c                	0x1c
        if (x16 == 1)
    2b20:	0200                	addi	s0,sp,256
    2b22:	3000                	fld	fs0,32(s0)
    2b24:	009f 001c 1400      	0x1400001c009f
            crc |= 0x8000;
    2b2a:	001c                	0x1c
    2b2c:	0100                	addi	s0,sp,128
    2b2e:	5a00                	lw	s0,48(a2)
    2b30:	1cc8                	addi	a0,sp,628
    2b32:	0000                	unimp
    2b34:	1cdc                	addi	a5,sp,628
    2b36:	0000                	unimp
    2b38:	ff090003          	lb	zero,-16(s2)
        if (x16 == 1)
    2b3c:	009f 0000 0000      	0x9f
    2b42:	0000                	unimp
    2b44:	0000                	unimp
    2b46:	001c                	0x1c
            crc |= 0x8000;
    2b48:	1400                	addi	s0,sp,544
    2b4a:	001c                	0x1c
    2b4c:	0800                	addi	s0,sp,16
    2b4e:	7b00                	flw	fs0,48(a4)
    2b50:	097f                	0x97f
    2b52:	1afc                	addi	a5,sp,380
    2b54:	c89f0423          	sb	s1,-888(t5) # ffffec88 <__freertos_irq_stack_top+0xfefeec88>
    2b58:	001c                	0x1c
    2b5a:	dc00                	sw	s0,56(s0)
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b5c:	001c                	0x1c
    2b5e:	0800                	addi	s0,sp,16
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b60:	7b00                	flw	fs0,48(a4)
    2b62:	097f                	0x97f
        if (x16 == 1)
    2b64:	1afc                	addi	a5,sp,380
    2b66:	009f0423          	sb	s1,8(t5)
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b6a:	0000                	unimp
        data >>= 1;
    2b6c:	0000                	unimp
    2b6e:	0000                	unimp
        if (x16 == 1)
    2b70:	1000                	addi	s0,sp,32
    2b72:	001c                	0x1c
    2b74:	c800                	sw	s0,16(s0)
    2b76:	001c                	0x1c
            crc |= 0x8000;
    2b78:	0100                	addi	s0,sp,128
    2b7a:	5700                	lw	s0,40(a4)
    2b7c:	1ccc                	addi	a1,sp,628
    2b7e:	0000                	unimp
    2b80:	1cdc                	addi	a5,sp,628
    2b82:	0000                	unimp
    2b84:	0001                	nop
    2b86:	00000057          	0x57
    2b8a:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b8c:	0000                	unimp
    2b8e:	cc00                	sw	s0,24(s0)
        if (x16 == 1)
    2b90:	3000001b          	0x3000001b
        data >>= 1;
    2b94:	001c                	0x1c
    2b96:	0200                	addi	s0,sp,256
        if (x16 == 1)
    2b98:	3100                	fld	fs0,32(a0)
    2b9a:	309f 001c 5400      	0x5400001c309f
            crc |= 0x8000;
    2ba0:	001c                	0x1c
    2ba2:	0100                	addi	s0,sp,128
    2ba4:	6000                	flw	fs0,0(s0)
    2ba6:	1c54                	addi	a3,sp,564
    2ba8:	0000                	unimp
    2baa:	1c84                	addi	s1,sp,624
    2bac:	0000                	unimp
    2bae:	7f800003          	lb	zero,2040(zero) # 7f8 <main+0x780>
    2bb2:	849f 001c 9400      	0x9400001c849f
        if (x16 == 1)
    2bb8:	001c                	0x1c
    2bba:	0100                	addi	s0,sp,128
        data >>= 1;
    2bbc:	6000                	flw	fs0,0(s0)
    2bbe:	1cc8                	addi	a0,sp,628
        if (x16 == 1)
    2bc0:	0000                	unimp
    2bc2:	1cdc                	addi	a5,sp,628
    2bc4:	0000                	unimp
    2bc6:	0002                	c.slli64	zero
            crc |= 0x8000;
    2bc8:	9f31                	0x9f31
	...
    2bd2:	1c74                	addi	a3,sp,572
    2bd4:	0000                	unimp
    2bd6:	1c7c                	addi	a5,sp,572
    2bd8:	0000                	unimp
    2bda:	0001                	nop
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bdc:	7c5e                	flw	fs8,244(sp)
    2bde:	001c                	0x1c
        if (x16 == 1)
    2be0:	8000                	0x8000
    2be2:	001c                	0x1c
        data >>= 1;
    2be4:	0600                	addi	s0,sp,768
    2be6:	7f00                	flw	fs0,56(a4)
        if (x16 == 1)
    2be8:	0800                	addi	s0,sp,16
    2bea:	1aff                	0x1aff
    2bec:	809f 001c 9400      	0x9400001c809f
            crc |= 0x8000;
    2bf2:	001c                	0x1c
    2bf4:	0d00                	addi	s0,sp,656
    2bf6:	8000                	0x8000
    2bf8:	407f                	0x407f
    2bfa:	4024                	lw	s1,64(s0)
    2bfc:	7e25                	lui	t3,0xfffe9
    2bfe:	2200                	fld	fs0,0(a2)
    2c00:	ff08                	fsw	fa0,56(a4)
    2c02:	9f1a                	add	t5,t5,t1
	...
        data >>= 1;
    2c0c:	1bcc                	addi	a1,sp,500
    2c0e:	0000                	unimp
        if (x16 == 1)
    2c10:	1bec                	addi	a1,sp,508
    2c12:	0000                	unimp
    2c14:	0002                	c.slli64	zero
    2c16:	9f30                	0x9f30
            crc |= 0x8000;
    2c18:	1bec                	addi	a1,sp,508
    2c1a:	0000                	unimp
    2c1c:	1bf0                	addi	a2,sp,508
    2c1e:	0000                	unimp
    2c20:	0001                	nop
    2c22:	f05e                	fsw	fs7,32(sp)
    2c24:	f400001b          	0xf400001b
    2c28:	0100001b          	0x100001b
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c2c:	5a00                	lw	s0,48(a2)
    2c2e:	1bf4                	addi	a3,sp,508
        if (x16 == 1)
    2c30:	0000                	unimp
    2c32:	1c10                	addi	a2,sp,560
        data >>= 1;
    2c34:	0000                	unimp
    2c36:	0001                	nop
        if (x16 == 1)
    2c38:	105e                	c.slli	zero,0x37
    2c3a:	001c                	0x1c
    2c3c:	3000                	fld	fs0,32(s0)
    2c3e:	001c                	0x1c
            crc |= 0x8000;
    2c40:	0200                	addi	s0,sp,256
    2c42:	3000                	fld	fs0,32(s0)
    2c44:	309f 001c 9400      	0x9400001c309f
    2c4a:	001c                	0x1c
    2c4c:	0100                	addi	s0,sp,128
    2c4e:	6e00                	flw	fs0,24(a2)
    2c50:	1cc8                	addi	a0,sp,628
    2c52:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c54:	1cdc                	addi	a5,sp,628
    2c56:	0000                	unimp
        if (x16 == 1)
    2c58:	0002                	c.slli64	zero
    2c5a:	9f30                	0x9f30
	...
    2c64:	1bcc                	addi	a1,sp,500
    2c66:	0000                	unimp
            crc |= 0x8000;
    2c68:	1bec                	addi	a1,sp,508
    2c6a:	0000                	unimp
    2c6c:	0002                	c.slli64	zero
    2c6e:	9f30                	0x9f30
    2c70:	1bec                	addi	a1,sp,508
    2c72:	0000                	unimp
    2c74:	1bf0                	addi	a2,sp,508
    2c76:	0000                	unimp
    2c78:	0001                	nop
    2c7a:	f05f 001b fc00      	0xfc00001bf05f
        if (x16 == 1)
    2c80:	0200001b          	0x200001b
    2c84:	3000                	fld	fs0,32(s0)
    2c86:	fc9f 001b 1400      	0x1400001bfc9f
            crc |= 0x8000;
    2c8c:	001c                	0x1c
    2c8e:	0100                	addi	s0,sp,128
    2c90:	5f00                	lw	s0,56(a4)
    2c92:	1c30                	addi	a2,sp,568
    2c94:	0000                	unimp
    2c96:	1c38                	addi	a4,sp,568
    2c98:	0000                	unimp
    2c9a:	0002                	c.slli64	zero
}
    2c9c:	9f30                	0x9f30
    2c9e:	1c38                	addi	a4,sp,568
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ca0:	0000                	unimp
    2ca2:	1c50                	addi	a2,sp,564
    crc = crcu8((ee_u8)(newval), crc);
    2ca4:	0000                	unimp
    2ca6:	0001                	nop
    return crcu16((ee_u16)newval, crc);
    2ca8:	5061                	c.li	zero,-8
    2caa:	001c                	0x1c
        if (x16 == 1)
    2cac:	8400                	0x8400
    2cae:	001c                	0x1c
    return crcu16((ee_u16)newval, crc);
    2cb0:	0300                	addi	s0,sp,384
    2cb2:	8100                	0x8100
        data >>= 1;
    2cb4:	9f7f                	0x9f7f
    2cb6:	1c84                	addi	s1,sp,624
        if (x16 == 1)
    2cb8:	0000                	unimp
    2cba:	1c94                	addi	a3,sp,624
    2cbc:	0000                	unimp
    2cbe:	0001                	nop
            crc |= 0x8000;
    2cc0:	c861                	beqz	s0,2d90 <crc16+0xf0>
    2cc2:	001c                	0x1c
    2cc4:	dc00                	sw	s0,56(s0)
    2cc6:	001c                	0x1c
    2cc8:	0200                	addi	s0,sp,256
    2cca:	3000                	fld	fs0,32(s0)
    2ccc:	009f 0000 0000      	0x9f
    2cd2:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cd4:	0400                	addi	s0,sp,512
    2cd6:	0016                	c.slli	zero,0x5
        if (x16 == 1)
    2cd8:	8000                	0x8000
    2cda:	0016                	c.slli	zero,0x5
    2cdc:	0100                	addi	s0,sp,128
    2cde:	5a00                	lw	s0,48(a2)
        data >>= 1;
    2ce0:	1680                	addi	s0,sp,864
    2ce2:	0000                	unimp
        if (x16 == 1)
    2ce4:	16c8                	addi	a0,sp,868
    2ce6:	0000                	unimp
            crc |= 0x8000;
    2ce8:	0001                	nop
    2cea:	c856                	sw	s5,16(sp)
    2cec:	0016                	c.slli	zero,0x5
    2cee:	3400                	fld	fs0,40(s0)
    2cf0:	0400001b          	0x400001b
    2cf4:	f300                	fsw	fs0,32(a4)
    2cf6:	5a01                	li	s4,-32
    2cf8:	349f 001b 3f00      	0x3f00001b349f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cfe:	0100001b          	0x100001b
        if (x16 == 1)
    2d02:	5a00                	lw	s0,48(a2)
        data >>= 1;
    2d04:	00001b3f 00001b74 	0x1b7400001b3f
        if (x16 == 1)
    2d0c:	0004                	0x4
    2d0e:	9f5a01f3          	0x9f5a01f3
	...
            crc |= 0x8000;
    2d1a:	1604                	addi	s1,sp,800
    2d1c:	0000                	unimp
    2d1e:	1660                	addi	s0,sp,812
    2d20:	0000                	unimp
    2d22:	0001                	nop
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d24:	0016605b          	0x16605b
        if (x16 == 1)
    2d28:	c800                	sw	s0,16(s0)
    2d2a:	0016                	c.slli	zero,0x5
        data >>= 1;
    2d2c:	0100                	addi	s0,sp,128
    2d2e:	6a00                	flw	fs0,16(a2)
        if (x16 == 1)
    2d30:	16c8                	addi	a0,sp,868
    2d32:	0000                	unimp
    2d34:	1a40                	addi	s0,sp,308
    2d36:	0000                	unimp
            crc |= 0x8000;
    2d38:	0001                	nop
    2d3a:	001a4063          	blt	s4,ra,2d3a <crc16+0x9a>
    2d3e:	2c00                	fld	fs0,24(s0)
    2d40:	0400001b          	0x400001b
    2d44:	f300                	fsw	fs0,32(a4)
    2d46:	5b01                	li	s6,-32
    2d48:	2c9f 001b 3400      	0x3400001b2c9f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d4e:	0100001b          	0x100001b
        if (x16 == 1)
    2d52:	6300                	flw	fs0,0(a4)
        data >>= 1;
    2d54:	1b34                	addi	a3,sp,440
    2d56:	0000                	unimp
        if (x16 == 1)
    2d58:	1b38                	addi	a4,sp,440
    2d5a:	0000                	unimp
    2d5c:	0001                	nop
    2d5e:	001b385b          	0x1b385b
            crc |= 0x8000;
    2d62:	7400                	flw	fs0,40(s0)
    2d64:	0400001b          	0x400001b
    2d68:	f300                	fsw	fs0,32(a4)
    2d6a:	5b01                	li	s6,-32
    2d6c:	009f 0000 0000      	0x9f
    2d72:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d74:	0400                	addi	s0,sp,512
    2d76:	0016                	c.slli	zero,0x5
        if (x16 == 1)
    2d78:	7800                	flw	fs0,48(s0)
    2d7a:	0016                	c.slli	zero,0x5
        data >>= 1;
    2d7c:	0100                	addi	s0,sp,128
    2d7e:	5c00                	lw	s0,56(s0)
        if (x16 == 1)
    2d80:	1678                	addi	a4,sp,812
    2d82:	0000                	unimp
    2d84:	1abc                	addi	a5,sp,376
    2d86:	0000                	unimp
            crc |= 0x8000;
    2d88:	0001                	nop
    2d8a:	bc62                	fsd	fs8,56(sp)
    2d8c:	001a                	c.slli	zero,0x6
    2d8e:	2800                	fld	fs0,16(s0)
    2d90:	0300001b          	0x300001b
    2d94:	9100                	0x9100
    2d96:	7fb8                	flw	fa4,120(a5)
    2d98:	1b28                	addi	a0,sp,440
    2d9a:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d9c:	1b2c                	addi	a1,sp,440
    2d9e:	0000                	unimp
        if (x16 == 1)
    2da0:	b8720003          	lb	zero,-1145(tp) # fffffb87 <__freertos_irq_stack_top+0xfefefb87>
        data >>= 1;
    2da4:	2c7f                	0x2c7f
    2da6:	3400001b          	0x3400001b
        if (x16 == 1)
    2daa:	0100001b          	0x100001b
    2dae:	6200                	flw	fs0,0(a2)
            crc |= 0x8000;
    2db0:	1b34                	addi	a3,sp,440
    2db2:	0000                	unimp
    2db4:	00001b3f 3f5c0001 	0x3f5c000100001b3f
    2dbc:	7400001b          	0x7400001b
    2dc0:	0300001b          	0x300001b
        if (x16 == 1)
    2dc4:	9100                	0x9100
    2dc6:	7fb8                	flw	fa4,120(a5)
	...
            crc |= 0x8000;
    2dd0:	1604                	addi	s1,sp,800
    2dd2:	0000                	unimp
    2dd4:	1680                	addi	s0,sp,864
    2dd6:	0000                	unimp
    2dd8:	0001                	nop
    2dda:	805d                	srli	s0,s0,0x17
    2ddc:	0016                	c.slli	zero,0x5
    2dde:	e800                	fsw	fs0,16(s0)
    2de0:	001a                	c.slli	zero,0x6
    2de2:	0100                	addi	s0,sp,128
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2de4:	5900                	lw	s0,48(a0)
    2de6:	1ae8                	addi	a0,sp,380
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2de8:	0000                	unimp
    2dea:	1b2c                	addi	a1,sp,440
        if (x16 == 1)
    2dec:	0000                	unimp
    2dee:	0004                	0x4
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2df0:	9f5d01f3          	0x9f5d01f3
        data >>= 1;
    2df4:	1b2c                	addi	a1,sp,440
    2df6:	0000                	unimp
        if (x16 == 1)
    2df8:	1b34                	addi	a3,sp,440
    2dfa:	0000                	unimp
    2dfc:	0001                	nop
    2dfe:	3459                	jal	2884 <crcu32+0xf4>
            crc |= 0x8000;
    2e00:	3f00001b          	0x3f00001b
    2e04:	0100001b          	0x100001b
    2e08:	5d00                	lw	s0,56(a0)
    2e0a:	00001b3f 00001b74 	0x1b7400001b3f
    2e12:	0004                	0x4
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e14:	9f5d01f3          	0x9f5d01f3
	...
        if (x16 == 1)
    2e20:	1604                	addi	s1,sp,800
    2e22:	0000                	unimp
    2e24:	1720                	addi	s0,sp,936
    2e26:	0000                	unimp
            crc |= 0x8000;
    2e28:	0001                	nop
    2e2a:	205e                	fld	ft0,464(sp)
    2e2c:	34000017          	auipc	zero,0x34000
    2e30:	0400001b          	0x400001b
    2e34:	f300                	fsw	fs0,32(a4)
    2e36:	5e01                	li	t3,-32
    2e38:	349f 001b 3f00      	0x3f00001b349f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e3e:	0100001b          	0x100001b
        if (x16 == 1)
    2e42:	5e00                	lw	s0,56(a2)
        data >>= 1;
    2e44:	00001b3f 00001b74 	0x1b7400001b3f
        if (x16 == 1)
    2e4c:	0004                	0x4
    2e4e:	9f5e01f3          	0x9f5e01f3
	...
            crc |= 0x8000;
    2e5a:	1644                	addi	s1,sp,804
    2e5c:	0000                	unimp
    2e5e:	179c                	addi	a5,sp,992
    2e60:	0000                	unimp
    2e62:	0002                	c.slli64	zero
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e64:	9f30                	0x9f30
    2e66:	179c                	addi	a5,sp,992
        if (x16 == 1)
    2e68:	0000                	unimp
    2e6a:	1884                	addi	s1,sp,112
        data >>= 1;
    2e6c:	0000                	unimp
    2e6e:	0001                	nop
        if (x16 == 1)
    2e70:	8464                	0x8464
    2e72:	0018                	0x18
    2e74:	b800                	fsd	fs0,48(s0)
    2e76:	001a                	c.slli	zero,0x6
            crc |= 0x8000;
    2e78:	0300                	addi	s0,sp,384
    2e7a:	9100                	0x9100
    2e7c:	7fbc                	flw	fa5,120(a5)
    2e7e:	1ab8                	addi	a4,sp,376
    2e80:	0000                	unimp
    2e82:	1af4                	addi	a3,sp,380
    2e84:	0000                	unimp
    2e86:	0001                	nop
    2e88:	2c5a                	fld	fs8,400(sp)
    2e8a:	3400001b          	0x3400001b
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e8e:	0300001b          	0x300001b
        if (x16 == 1)
    2e92:	9100                	0x9100
        data >>= 1;
    2e94:	7fbc                	flw	fa5,120(a5)
    2e96:	1b34                	addi	a3,sp,440
        if (x16 == 1)
    2e98:	0000                	unimp
    2e9a:	1b40                	addi	s0,sp,436
    2e9c:	0000                	unimp
    2e9e:	0002                	c.slli64	zero
            crc |= 0x8000;
    2ea0:	9f30                	0x9f30
    2ea2:	1b40                	addi	s0,sp,436
    2ea4:	0000                	unimp
    2ea6:	1b48                	addi	a0,sp,436
    2ea8:	0000                	unimp
    2eaa:	0001                	nop
    2eac:	505a                	0x505a
    2eae:	5800001b          	0x5800001b
    2eb2:	0100001b          	0x100001b
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2eb6:	5a00                	lw	s0,48(a2)
        if (x16 == 1)
    2eb8:	1b60                	addi	s0,sp,444
    2eba:	0000                	unimp
        data >>= 1;
    2ebc:	1b68                	addi	a0,sp,444
    2ebe:	0000                	unimp
        if (x16 == 1)
    2ec0:	0001                	nop
    2ec2:	705a                	flw	ft0,180(sp)
    2ec4:	7400001b          	0x7400001b
            crc |= 0x8000;
    2ec8:	0100001b          	0x100001b
    2ecc:	5a00                	lw	s0,48(a2)
	...
    2ed6:	1648                	addi	a0,sp,804
    2ed8:	0000                	unimp
    2eda:	1b0c                	addi	a1,sp,432
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2edc:	0000                	unimp
    2ede:	0001                	nop
        if (x16 == 1)
    2ee0:	2c66                	fld	fs8,88(sp)
    2ee2:	7400001b          	0x7400001b
        data >>= 1;
    2ee6:	0100001b          	0x100001b
        if (x16 == 1)
    2eea:	6600                	flw	fs0,8(a2)
	...
            crc |= 0x8000;
    2ef4:	1648                	addi	a0,sp,804
    2ef6:	0000                	unimp
    2ef8:	1720                	addi	s0,sp,936
    2efa:	0000                	unimp
    2efc:	0001                	nop
    2efe:	345e                	fld	fs0,496(sp)
    2f00:	3f00001b          	0x3f00001b
        if (x16 == 1)
    2f04:	0100001b          	0x100001b
    2f08:	5e00                	lw	s0,56(a2)
	...
            crc |= 0x8000;
    2f12:	1648                	addi	a0,sp,804
    2f14:	0000                	unimp
    2f16:	1678                	addi	a4,sp,812
    2f18:	0000                	unimp
    2f1a:	0001                	nop
    2f1c:	785c                	flw	fa5,52(s0)
    2f1e:	0016                	c.slli	zero,0x5
    2f20:	bc00                	fsd	fs0,56(s0)
    2f22:	001a                	c.slli	zero,0x6
}
    2f24:	0100                	addi	s0,sp,128
    2f26:	6200                	flw	fs0,0(a2)
}
    2f28:	1abc                	addi	a5,sp,376
    2f2a:	0000                	unimp
    2f2c:	1b28                	addi	a0,sp,440
    2f2e:	0000                	unimp
    uint64_t time = (((uint64_t)(TIMER->hi)) << 32) + ((uint64_t)(TIMER->lo));
    2f30:	b8910003          	lb	zero,-1143(sp)
    2f34:	287f                	0x287f
    2f36:	2c00001b          	0x2c00001b
    2f3a:	0300001b          	0x300001b
    time = time / 84000;
    2f3e:	7200                	flw	fs0,32(a2)
uint64_t timer_getms() {
    2f40:	7fb8                	flw	fa4,120(a5)
    2f42:	1b2c                	addi	a1,sp,440
    uint64_t time = (((uint64_t)(TIMER->hi)) << 32) + ((uint64_t)(TIMER->lo));
    2f44:	0000                	unimp
    2f46:	1b34                	addi	a3,sp,440
    time = time / 84000;
    2f48:	0000                	unimp
    2f4a:	0001                	nop
    2f4c:	3462                	fld	fs0,56(sp)
    2f4e:	3f00001b          	0x3f00001b
    2f52:	0100001b          	0x100001b
uint64_t timer_getms() {
    2f56:	5c00                	lw	s0,56(s0)
    time = time / 84000;
    2f58:	00001b3f 00001b74 	0x1b7400001b3f
    2f60:	b8910003          	lb	zero,-1143(sp)
    2f64:	007f                	0x7f
    2f66:	0000                	unimp
    2f68:	0000                	unimp
    2f6a:	0000                	unimp
    for (int i = 0;i<size;i++) {
    2f6c:	4800                	lw	s0,16(s0)
    2f6e:	0016                	c.slli	zero,0x5
    2f70:	8000                	0x8000
    2f72:	0016                	c.slli	zero,0x5
        int tx_finish = USART->ctrl & 0x1;
    2f74:	0100                	addi	s0,sp,128
    2f76:	5a00                	lw	s0,48(a2)
        send_char(pBuffer[i]);
    2f78:	1680                	addi	s0,sp,864
    2f7a:	0000                	unimp
        int tx_finish = USART->ctrl & 0x1;
    2f7c:	16c8                	addi	a0,sp,868
    2f7e:	0000                	unimp
    2f80:	0001                	nop
    2f82:	c856                	sw	s5,16(sp)
        if (tx_finish) {
    2f84:	0016                	c.slli	zero,0x5
    2f86:	3400                	fld	fs0,40(s0)
            USART->write = c;
    2f88:	0400001b          	0x400001b
            return;
    2f8c:	f300                	fsw	fs0,32(a4)
    2f8e:	5a01                	li	s4,-32
    for (int i = 0;i<size;i++) {
    2f90:	349f 001b 3f00      	0x3f00001b349f
}
    2f96:	0100001b          	0x100001b
    2f9a:	5a00                	lw	s0,48(a2)
    2f9c:	00001b3f 00001b74 	0x1b7400001b3f
    2fa4:	0004                	0x4
    2fa6:	9f5a01f3          	0x9f5a01f3
	...
    2fb2:	1648                	addi	a0,sp,804
    2fb4:	0000                	unimp
    2fb6:	1680                	addi	s0,sp,864
    2fb8:	0000                	unimp
    2fba:	0002                	c.slli64	zero
    2fbc:	9f30                	0x9f30
    2fbe:	1680                	addi	s0,sp,864
    2fc0:	0000                	unimp
    2fc2:	16a0                	addi	s0,sp,872
    2fc4:	0000                	unimp
    2fc6:	0001                	nop
    2fc8:	a060                	fsd	fs0,192(s0)
    2fca:	0016                	c.slli	zero,0x5
    2fcc:	e800                	fsw	fs0,16(s0)
    2fce:	001a                	c.slli	zero,0x6
    2fd0:	0100                	addi	s0,sp,128
    2fd2:	5800                	lw	s0,48(s0)
    2fd4:	1b2c                	addi	a1,sp,440
    2fd6:	0000                	unimp
    2fd8:	1b34                	addi	a3,sp,440
    2fda:	0000                	unimp
    2fdc:	0001                	nop
    2fde:	3458                	fld	fa4,168(s0)
    2fe0:	7400001b          	0x7400001b
    2fe4:	0200001b          	0x200001b
    2fe8:	3000                	fld	fs0,32(s0)
    2fea:	009f 0000 0000      	0x9f
    2ff0:	0000                	unimp
    2ff2:	8000                	0x8000
    2ff4:	0016                	c.slli	zero,0x5
    2ff6:	8800                	0x8800
    2ff8:	0016                	c.slli	zero,0x5
    2ffa:	0200                	addi	s0,sp,256
    2ffc:	3000                	fld	fs0,32(s0)
    2ffe:	009f 0000 0000      	0x9f
    3004:	0000                	unimp
    3006:	c800                	sw	s0,16(s0)
    3008:	0016                	c.slli	zero,0x5
    300a:	f000                	fsw	fs0,32(s0)
    300c:	0016                	c.slli	zero,0x5
    300e:	0100                	addi	s0,sp,128
    3010:	6c00                	flw	fs0,24(s0)
    3012:	16f0                	addi	a2,sp,876
    3014:	0000                	unimp
    3016:	1714                	addi	a3,sp,928
    3018:	0000                	unimp
    301a:	0001                	nop
    301c:	145f 0017 2000      	0x20000017145f
    3022:	03000017          	auipc	zero,0x3000
    3026:	8c00                	0x8c00
    3028:	9f01                	0x9f01
    302a:	1b34                	addi	a3,sp,440
    302c:	0000                	unimp
    302e:	1b74                	addi	a3,sp,444
    3030:	0000                	unimp
    3032:	0002                	c.slli64	zero
    3034:	9f30                	0x9f30
	...
    303e:	16c8                	addi	a0,sp,868
    3040:	0000                	unimp
    3042:	16d4                	addi	a3,sp,868
    3044:	0000                	unimp
    3046:	0002                	c.slli64	zero
    3048:	9f30                	0x9f30
	...
    3052:	1720                	addi	s0,sp,936
    3054:	0000                	unimp
    3056:	176c                	addi	a1,sp,940
    3058:	0000                	unimp
    305a:	0001                	nop
    305c:	6c5c                	flw	fa5,28(s0)
    305e:	70000017          	auipc	zero,0x70000
    3062:	02000017          	auipc	zero,0x2000
    3066:	3000                	fld	fs0,32(s0)
    3068:	709f 0017 8c00      	0x8c000017709f
    306e:	01000017          	auipc	zero,0x1000
    3072:	5c00                	lw	s0,56(s0)
	...
    307c:	1720                	addi	s0,sp,936
    307e:	0000                	unimp
    3080:	172c                	addi	a1,sp,936
    3082:	0000                	unimp
    3084:	0001                	nop
    3086:	385f 0017 4000      	0x40000017385f
    308c:	01000017          	auipc	zero,0x1000
    3090:	5e00                	lw	s0,56(a2)
    3092:	1740                	addi	s0,sp,932
    3094:	0000                	unimp
    3096:	1750                	addi	a2,sp,932
    3098:	0000                	unimp
    309a:	0001                	nop
    309c:	705f 0017 7c00      	0x7c000017705f
    30a2:	01000017          	auipc	zero,0x1000
    30a6:	5e00                	lw	s0,56(a2)
	...
    30b0:	172c                	addi	a1,sp,936
    30b2:	0000                	unimp
    30b4:	1740                	addi	s0,sp,932
    30b6:	0000                	unimp
    30b8:	0001                	nop
    30ba:	445e                	lw	s0,212(sp)
    30bc:	8c000017          	auipc	zero,0x8c000
    30c0:	01000017          	auipc	zero,0x1000
    30c4:	5e00                	lw	s0,56(a2)
	...
    30ce:	1720                	addi	s0,sp,936
    30d0:	0000                	unimp
    30d2:	172c                	addi	a1,sp,936
    30d4:	0000                	unimp
    30d6:	0001                	nop
    30d8:	385a                	fld	fa6,432(sp)
    30da:	48000017          	auipc	zero,0x48000
    30de:	01000017          	auipc	zero,0x1000
    30e2:	5a00                	lw	s0,48(a2)
    30e4:	176c                	addi	a1,sp,940
    30e6:	0000                	unimp
    30e8:	178c                	addi	a1,sp,992
    30ea:	0000                	unimp
    30ec:	0001                	nop
    30ee:	005a                	c.slli	zero,0x16
    30f0:	0000                	unimp
    30f2:	0000                	unimp
    30f4:	0000                	unimp
    30f6:	2000                	fld	fs0,0(s0)
    30f8:	7c000017          	auipc	zero,0x7c000
    30fc:	01000017          	auipc	zero,0x1000
    3100:	6d00                	flw	fs0,24(a0)
    3102:	177c                	addi	a5,sp,940
    3104:	0000                	unimp
    3106:	178c                	addi	a1,sp,992
    3108:	0000                	unimp
    310a:	0001                	nop
    310c:	005d                	c.nop	23
    310e:	0000                	unimp
    3110:	0000                	unimp
    3112:	0000                	unimp
    3114:	2000                	fld	fs0,0(s0)
    3116:	2c000017          	auipc	zero,0x2c000
    311a:	02000017          	auipc	zero,0x2000
    311e:	3000                	fld	fs0,32(s0)
    3120:	009f 0000 0000      	0x9f
    3126:	0000                	unimp
    3128:	9c00                	0x9c00
    312a:	e8000017          	auipc	zero,0xe8000
    312e:	001a                	c.slli	zero,0x6
    3130:	0100                	addi	s0,sp,128
    3132:	5900                	lw	s0,48(a0)
    3134:	1ae8                	addi	a0,sp,380
    3136:	0000                	unimp
    3138:	1b2c                	addi	a1,sp,440
    313a:	0000                	unimp
    313c:	0004                	0x4
    313e:	9f5d01f3          	0x9f5d01f3
    3142:	1b2c                	addi	a1,sp,440
    3144:	0000                	unimp
    3146:	1b34                	addi	a3,sp,440
    3148:	0000                	unimp
    314a:	0001                	nop
    314c:	4059                	c.li	zero,22
    314e:	7400001b          	0x7400001b
    3152:	0400001b          	0x400001b
    3156:	f300                	fsw	fs0,32(a4)
    3158:	5d01                	li	s10,-32
    315a:	009f 0000 0000      	0x9f
    3160:	0000                	unimp
    3162:	9c00                	0x9c00
    3164:	bc000017          	auipc	zero,0xbc000
    3168:	001a                	c.slli	zero,0x6
    316a:	0100                	addi	s0,sp,128
    316c:	6200                	flw	fs0,0(a2)
    316e:	1abc                	addi	a5,sp,376
    3170:	0000                	unimp
    3172:	1b28                	addi	a0,sp,440
    3174:	0000                	unimp
    3176:	b8910003          	lb	zero,-1143(sp)
    317a:	287f                	0x287f
    317c:	2c00001b          	0x2c00001b
    3180:	0300001b          	0x300001b
    3184:	7200                	flw	fs0,32(a2)
    3186:	7fb8                	flw	fa4,120(a5)
    3188:	1b2c                	addi	a1,sp,440
    318a:	0000                	unimp
    318c:	1b34                	addi	a3,sp,440
    318e:	0000                	unimp
    3190:	0001                	nop
    3192:	4062                	0x4062
    3194:	7400001b          	0x7400001b
    3198:	0300001b          	0x300001b
    319c:	9100                	0x9100
    319e:	7fb8                	flw	fa4,120(a5)
	...
    31a8:	179c                	addi	a5,sp,992
    31aa:	0000                	unimp
    31ac:	1a40                	addi	s0,sp,308
    31ae:	0000                	unimp
    31b0:	0001                	nop
    31b2:	001a4063          	blt	s4,ra,31b2 <__udivdi3+0x216>
    31b6:	2c00                	fld	fs0,24(s0)
    31b8:	0400001b          	0x400001b
    31bc:	f300                	fsw	fs0,32(a4)
    31be:	5b01                	li	s6,-32
    31c0:	2c9f 001b 3400      	0x3400001b2c9f
    31c6:	0100001b          	0x100001b
    31ca:	6300                	flw	fs0,0(a4)
    31cc:	1b40                	addi	s0,sp,436
    31ce:	0000                	unimp
    31d0:	1b74                	addi	a3,sp,444
    31d2:	0000                	unimp
    31d4:	0004                	0x4
    31d6:	9f5b01f3          	0x9f5b01f3
	...
    31e2:	179c                	addi	a5,sp,992
    31e4:	0000                	unimp
    31e6:	1ae8                	addi	a0,sp,380
    31e8:	0000                	unimp
    31ea:	0001                	nop
    31ec:	2c58                	fld	fa4,152(s0)
    31ee:	3400001b          	0x3400001b
    31f2:	0100001b          	0x100001b
    31f6:	5800                	lw	s0,48(s0)
    31f8:	1b40                	addi	s0,sp,436
    31fa:	0000                	unimp
    31fc:	1b74                	addi	a3,sp,444
    31fe:	0000                	unimp
    3200:	0002                	c.slli64	zero
    3202:	9f30                	0x9f30
	...
    320c:	179c                	addi	a5,sp,992
    320e:	0000                	unimp
    3210:	17bc                	addi	a5,sp,1000
    3212:	0000                	unimp
    3214:	0002                	c.slli64	zero
    3216:	9f30                	0x9f30
    3218:	1b40                	addi	s0,sp,436
    321a:	0000                	unimp
    321c:	1b74                	addi	a3,sp,444
    321e:	0000                	unimp
    3220:	0002                	c.slli64	zero
    3222:	9f30                	0x9f30
	...
    322c:	17bc                	addi	a5,sp,1000
    322e:	0000                	unimp
    3230:	17c8                	addi	a0,sp,996
    3232:	0000                	unimp
    3234:	0002                	c.slli64	zero
    3236:	9f30                	0x9f30
	...
    3240:	1808                	addi	a0,sp,48
    3242:	0000                	unimp
    3244:	1858                	addi	a4,sp,52
    3246:	0000                	unimp
    3248:	0001                	nop
    324a:	585d                	li	a6,-9
    324c:	0018                	0x18
    324e:	5c00                	lw	s0,56(s0)
    3250:	0018                	0x18
    3252:	0200                	addi	s0,sp,256
    3254:	3000                	fld	fs0,32(s0)
    3256:	5c9f 0018 7400      	0x740000185c9f
    325c:	0018                	0x18
    325e:	0100                	addi	s0,sp,128
    3260:	5d00                	lw	s0,56(a0)
	...
    326a:	1808                	addi	a0,sp,48
    326c:	0000                	unimp
    326e:	1814                	addi	a3,sp,48
    3270:	0000                	unimp
    3272:	0001                	nop
    3274:	205f 0018 2c00      	0x2c000018205f
    327a:	0018                	0x18
    327c:	0100                	addi	s0,sp,128
    327e:	5e00                	lw	s0,56(a2)
    3280:	182c                	addi	a1,sp,56
    3282:	0000                	unimp
    3284:	183c                	addi	a5,sp,56
    3286:	0000                	unimp
    3288:	0001                	nop
    328a:	5c5f 0018 6c00      	0x6c0000185c5f
    3290:	0018                	0x18
    3292:	0100                	addi	s0,sp,128
    3294:	5e00                	lw	s0,56(a2)
	...
    329e:	1814                	addi	a3,sp,48
    32a0:	0000                	unimp
    32a2:	182c                	addi	a1,sp,56
    32a4:	0000                	unimp
    32a6:	0001                	nop
    32a8:	305e                	fld	ft0,496(sp)
    32aa:	0018                	0x18
    32ac:	7400                	flw	fs0,40(s0)
    32ae:	0018                	0x18
    32b0:	0100                	addi	s0,sp,128
    32b2:	5e00                	lw	s0,56(a2)
	...
    32bc:	1808                	addi	a0,sp,48
    32be:	0000                	unimp
    32c0:	1814                	addi	a3,sp,48
    32c2:	0000                	unimp
    32c4:	0001                	nop
    32c6:	205a                	fld	ft0,400(sp)
    32c8:	0018                	0x18
    32ca:	3400                	fld	fs0,40(s0)
    32cc:	0018                	0x18
    32ce:	0100                	addi	s0,sp,128
    32d0:	5a00                	lw	s0,48(a2)
    32d2:	1858                	addi	a4,sp,52
    32d4:	0000                	unimp
    32d6:	1874                	addi	a3,sp,60
    32d8:	0000                	unimp
    32da:	0001                	nop
    32dc:	005a                	c.slli	zero,0x16
    32de:	0000                	unimp
    32e0:	0000                	unimp
    32e2:	0000                	unimp
    32e4:	0800                	addi	s0,sp,16
    32e6:	0018                	0x18
    32e8:	7400                	flw	fs0,40(s0)
    32ea:	0018                	0x18
    32ec:	0100                	addi	s0,sp,128
    32ee:	6100                	flw	fs0,0(a0)
	...
    32f8:	1808                	addi	a0,sp,48
    32fa:	0000                	unimp
    32fc:	1814                	addi	a3,sp,48
    32fe:	0000                	unimp
    3300:	0002                	c.slli64	zero
    3302:	9f30                	0x9f30
    3304:	1814                	addi	a3,sp,48
    3306:	0000                	unimp
    3308:	181c                	addi	a5,sp,48
    330a:	0000                	unimp
    330c:	0001                	nop
    330e:	1c5c                	addi	a5,sp,564
    3310:	0018                	0x18
    3312:	2000                	fld	fs0,0(s0)
    3314:	0018                	0x18
    3316:	0300                	addi	s0,sp,384
    3318:	7c00                	flw	fs0,56(s0)
    331a:	9f7f                	0x9f7f
    331c:	1820                	addi	s0,sp,56
    331e:	0000                	unimp
    3320:	1854                	addi	a3,sp,52
    3322:	0000                	unimp
    3324:	0001                	nop
    3326:	545c                	lw	a5,44(s0)
    3328:	0018                	0x18
    332a:	5c00                	lw	s0,56(s0)
    332c:	0018                	0x18
    332e:	0300                	addi	s0,sp,384
    3330:	7c00                	flw	fs0,56(s0)
    3332:	9f7f                	0x9f7f
    3334:	185c                	addi	a5,sp,52
    3336:	0000                	unimp
    3338:	1874                	addi	a3,sp,60
    333a:	0000                	unimp
    333c:	0001                	nop
    333e:	005c                	addi	a5,sp,4
    3340:	0000                	unimp
    3342:	0000                	unimp
    3344:	0000                	unimp
    3346:	8400                	0x8400
    3348:	0018                	0x18
    334a:	e800                	fsw	fs0,16(s0)
    334c:	001a                	c.slli	zero,0x6
    334e:	0100                	addi	s0,sp,128
    3350:	5900                	lw	s0,48(a0)
    3352:	1ae8                	addi	a0,sp,380
    3354:	0000                	unimp
    3356:	1b2c                	addi	a1,sp,440
    3358:	0000                	unimp
    335a:	0004                	0x4
    335c:	9f5d01f3          	0x9f5d01f3
    3360:	1b2c                	addi	a1,sp,440
    3362:	0000                	unimp
    3364:	1b34                	addi	a3,sp,440
    3366:	0000                	unimp
    3368:	0001                	nop
    336a:	5059                	c.li	zero,-10
    336c:	7400001b          	0x7400001b
    3370:	0400001b          	0x400001b
    3374:	f300                	fsw	fs0,32(a4)
    3376:	5d01                	li	s10,-32
    3378:	009f 0000 0000      	0x9f
    337e:	0000                	unimp
    3380:	8400                	0x8400
    3382:	0018                	0x18
    3384:	bc00                	fsd	fs0,56(s0)
    3386:	001a                	c.slli	zero,0x6
    3388:	0100                	addi	s0,sp,128
    338a:	6200                	flw	fs0,0(a2)
    338c:	1abc                	addi	a5,sp,376
    338e:	0000                	unimp
    3390:	1b28                	addi	a0,sp,440
    3392:	0000                	unimp
    3394:	b8910003          	lb	zero,-1143(sp)
    3398:	287f                	0x287f
    339a:	2c00001b          	0x2c00001b
    339e:	0300001b          	0x300001b
    33a2:	7200                	flw	fs0,32(a2)
    33a4:	7fb8                	flw	fa4,120(a5)
    33a6:	1b2c                	addi	a1,sp,440
    33a8:	0000                	unimp
    33aa:	1b34                	addi	a3,sp,440
    33ac:	0000                	unimp
    33ae:	0001                	nop
    33b0:	5062                	0x5062
    33b2:	7400001b          	0x7400001b
    33b6:	0300001b          	0x300001b
    33ba:	9100                	0x9100
    33bc:	7fb8                	flw	fa4,120(a5)
	...
    33c6:	1884                	addi	s1,sp,112
    33c8:	0000                	unimp
    33ca:	1a40                	addi	s0,sp,308
    33cc:	0000                	unimp
    33ce:	0001                	nop
    33d0:	001a4063          	blt	s4,ra,33d0 <__udivdi3+0x434>
    33d4:	2c00                	fld	fs0,24(s0)
    33d6:	0400001b          	0x400001b
    33da:	f300                	fsw	fs0,32(a4)
    33dc:	5b01                	li	s6,-32
    33de:	2c9f 001b 3400      	0x3400001b2c9f
    33e4:	0100001b          	0x100001b
    33e8:	6300                	flw	fs0,0(a4)
    33ea:	1b50                	addi	a2,sp,436
    33ec:	0000                	unimp
    33ee:	1b74                	addi	a3,sp,444
    33f0:	0000                	unimp
    33f2:	0004                	0x4
    33f4:	9f5b01f3          	0x9f5b01f3
	...
    3400:	1884                	addi	s1,sp,112
    3402:	0000                	unimp
    3404:	1ae8                	addi	a0,sp,380
    3406:	0000                	unimp
    3408:	0001                	nop
    340a:	2c58                	fld	fa4,152(s0)
    340c:	3400001b          	0x3400001b
    3410:	0100001b          	0x100001b
    3414:	5800                	lw	s0,48(s0)
    3416:	1b50                	addi	a2,sp,436
    3418:	0000                	unimp
    341a:	1b74                	addi	a3,sp,444
    341c:	0000                	unimp
    341e:	0002                	c.slli64	zero
    3420:	9f30                	0x9f30
	...
    342a:	1884                	addi	s1,sp,112
    342c:	0000                	unimp
    342e:	1898                	addi	a4,sp,112
    3430:	0000                	unimp
    3432:	0002                	c.slli64	zero
    3434:	9f30                	0x9f30
    3436:	1898                	addi	a4,sp,112
    3438:	0000                	unimp
    343a:	1998                	addi	a4,sp,240
    343c:	0000                	unimp
    343e:	0001                	nop
    3440:	2c65                	jal	36f8 <__divdf3+0x2bc>
    3442:	3400001b          	0x3400001b
    3446:	0200001b          	0x200001b
    344a:	3000                	fld	fs0,32(s0)
    344c:	509f 001b 7400      	0x7400001b509f
    3452:	0200001b          	0x200001b
    3456:	3000                	fld	fs0,32(s0)
    3458:	009f 0000 0000      	0x9f
    345e:	0000                	unimp
    3460:	9800                	0x9800
    3462:	0018                	0x18
    3464:	bc00                	fsd	fs0,56(s0)
    3466:	0018                	0x18
    3468:	0200                	addi	s0,sp,256
    346a:	3000                	fld	fs0,32(s0)
    346c:	bc9f 0018 1800      	0x18000018bc9f
    3472:	0019                	c.nop	6
    3474:	0100                	addi	s0,sp,128
    3476:	5a00                	lw	s0,48(a2)
	...
    3480:	18bc                	addi	a5,sp,120
    3482:	0000                	unimp
    3484:	18cc                	addi	a1,sp,116
    3486:	0000                	unimp
    3488:	0002                	c.slli64	zero
    348a:	9f30                	0x9f30
    348c:	18cc                	addi	a1,sp,116
    348e:	0000                	unimp
    3490:	1924                	addi	s1,sp,184
    3492:	0000                	unimp
    3494:	0001                	nop
    3496:	005e                	c.slli	zero,0x17
    3498:	0000                	unimp
    349a:	0000                	unimp
    349c:	0000                	unimp
    349e:	2400                	fld	fs0,8(s0)
    34a0:	0019                	c.nop	6
    34a2:	7400                	flw	fs0,40(s0)
    34a4:	0019                	c.nop	6
    34a6:	0100                	addi	s0,sp,128
    34a8:	5d00                	lw	s0,56(a0)
    34aa:	1974                	addi	a3,sp,188
    34ac:	0000                	unimp
    34ae:	1978                	addi	a4,sp,188
    34b0:	0000                	unimp
    34b2:	0002                	c.slli64	zero
    34b4:	9f30                	0x9f30
    34b6:	1978                	addi	a4,sp,188
    34b8:	0000                	unimp
    34ba:	1990                	addi	a2,sp,240
    34bc:	0000                	unimp
    34be:	0001                	nop
    34c0:	005d                	c.nop	23
    34c2:	0000                	unimp
    34c4:	0000                	unimp
    34c6:	0000                	unimp
    34c8:	2400                	fld	fs0,8(s0)
    34ca:	0019                	c.nop	6
    34cc:	3000                	fld	fs0,32(s0)
    34ce:	0019                	c.nop	6
    34d0:	0100                	addi	s0,sp,128
    34d2:	5f00                	lw	s0,56(a4)
    34d4:	193c                	addi	a5,sp,184
    34d6:	0000                	unimp
    34d8:	1948                	addi	a0,sp,180
    34da:	0000                	unimp
    34dc:	0001                	nop
    34de:	485e                	lw	a6,212(sp)
    34e0:	0019                	c.nop	6
    34e2:	5800                	lw	s0,48(s0)
    34e4:	0019                	c.nop	6
    34e6:	0100                	addi	s0,sp,128
    34e8:	5f00                	lw	s0,56(a4)
    34ea:	1978                	addi	a4,sp,188
    34ec:	0000                	unimp
    34ee:	1988                	addi	a0,sp,240
    34f0:	0000                	unimp
    34f2:	0001                	nop
    34f4:	005e                	c.slli	zero,0x17
    34f6:	0000                	unimp
    34f8:	0000                	unimp
    34fa:	0000                	unimp
    34fc:	3000                	fld	fs0,32(s0)
    34fe:	0019                	c.nop	6
    3500:	4800                	lw	s0,16(s0)
    3502:	0019                	c.nop	6
    3504:	0100                	addi	s0,sp,128
    3506:	5e00                	lw	s0,56(a2)
    3508:	194c                	addi	a1,sp,180
    350a:	0000                	unimp
    350c:	1990                	addi	a2,sp,240
    350e:	0000                	unimp
    3510:	0001                	nop
    3512:	005e                	c.slli	zero,0x17
    3514:	0000                	unimp
    3516:	0000                	unimp
    3518:	0000                	unimp
    351a:	2400                	fld	fs0,8(s0)
    351c:	0019                	c.nop	6
    351e:	3000                	fld	fs0,32(s0)
    3520:	0019                	c.nop	6
    3522:	0100                	addi	s0,sp,128
    3524:	5a00                	lw	s0,48(a2)
    3526:	193c                	addi	a5,sp,184
    3528:	0000                	unimp
    352a:	1950                	addi	a2,sp,180
    352c:	0000                	unimp
    352e:	0001                	nop
    3530:	745a                	flw	fs0,180(sp)
    3532:	0019                	c.nop	6
    3534:	9000                	0x9000
    3536:	0019                	c.nop	6
    3538:	0100                	addi	s0,sp,128
    353a:	5a00                	lw	s0,48(a2)
	...
    3544:	1924                	addi	s1,sp,184
    3546:	0000                	unimp
    3548:	1990                	addi	a2,sp,240
    354a:	0000                	unimp
    354c:	0001                	nop
    354e:	0061                	c.nop	24
    3550:	0000                	unimp
    3552:	0000                	unimp
    3554:	0000                	unimp
    3556:	2400                	fld	fs0,8(s0)
    3558:	0019                	c.nop	6
    355a:	3000                	fld	fs0,32(s0)
    355c:	0019                	c.nop	6
    355e:	0200                	addi	s0,sp,256
    3560:	3000                	fld	fs0,32(s0)
    3562:	309f 0019 3800      	0x38000019309f
    3568:	0019                	c.nop	6
    356a:	0100                	addi	s0,sp,128
    356c:	5c00                	lw	s0,56(s0)
    356e:	1938                	addi	a4,sp,184
    3570:	0000                	unimp
    3572:	193c                	addi	a5,sp,184
    3574:	0000                	unimp
    3576:	7f7c0003          	lb	zero,2039(s8) # 167f7 <_data_lma+0xc1df>
    357a:	3c9f 0019 7000      	0x700000193c9f
    3580:	0019                	c.nop	6
    3582:	0100                	addi	s0,sp,128
    3584:	5c00                	lw	s0,56(s0)
    3586:	1970                	addi	a2,sp,188
    3588:	0000                	unimp
    358a:	1978                	addi	a4,sp,188
    358c:	0000                	unimp
    358e:	7f7c0003          	lb	zero,2039(s8)
    3592:	789f 0019 9000      	0x90000019789f
    3598:	0019                	c.nop	6
    359a:	0100                	addi	s0,sp,128
    359c:	5c00                	lw	s0,56(s0)
	...
    35a6:	19a8                	addi	a0,sp,248
    35a8:	0000                	unimp
    35aa:	1ae8                	addi	a0,sp,380
    35ac:	0000                	unimp
    35ae:	0001                	nop
    35b0:	e859                	bnez	s0,3646 <__divdf3+0x20a>
    35b2:	001a                	c.slli	zero,0x6
    35b4:	2c00                	fld	fs0,24(s0)
    35b6:	0400001b          	0x400001b
    35ba:	f300                	fsw	fs0,32(a4)
    35bc:	5d01                	li	s10,-32
    35be:	609f 001b 7400      	0x7400001b609f
    35c4:	0400001b          	0x400001b
    35c8:	f300                	fsw	fs0,32(a4)
    35ca:	5d01                	li	s10,-32
    35cc:	009f 0000 0000      	0x9f
    35d2:	0000                	unimp
    35d4:	a800                	fsd	fs0,16(s0)
    35d6:	0019                	c.nop	6
    35d8:	bc00                	fsd	fs0,56(s0)
    35da:	001a                	c.slli	zero,0x6
    35dc:	0100                	addi	s0,sp,128
    35de:	6200                	flw	fs0,0(a2)
    35e0:	1abc                	addi	a5,sp,376
    35e2:	0000                	unimp
    35e4:	1b28                	addi	a0,sp,440
    35e6:	0000                	unimp
    35e8:	b8910003          	lb	zero,-1143(sp)
    35ec:	287f                	0x287f
    35ee:	2c00001b          	0x2c00001b
    35f2:	0300001b          	0x300001b
    35f6:	7200                	flw	fs0,32(a2)
    35f8:	7fb8                	flw	fa4,120(a5)
    35fa:	1b60                	addi	s0,sp,444
    35fc:	0000                	unimp
    35fe:	1b74                	addi	a3,sp,444
    3600:	0000                	unimp
    3602:	b8910003          	lb	zero,-1143(sp)
    3606:	007f                	0x7f
    3608:	0000                	unimp
    360a:	0000                	unimp
    360c:	0000                	unimp
    360e:	a800                	fsd	fs0,16(s0)
    3610:	0019                	c.nop	6
    3612:	4000                	lw	s0,0(s0)
    3614:	001a                	c.slli	zero,0x6
    3616:	0100                	addi	s0,sp,128
    3618:	6300                	flw	fs0,0(a4)
    361a:	1a40                	addi	s0,sp,308
    361c:	0000                	unimp
    361e:	1b2c                	addi	a1,sp,440
    3620:	0000                	unimp
    3622:	0004                	0x4
    3624:	9f5b01f3          	0x9f5b01f3
    3628:	1b60                	addi	s0,sp,444
    362a:	0000                	unimp
    362c:	1b74                	addi	a3,sp,444
    362e:	0000                	unimp
    3630:	0004                	0x4
    3632:	9f5b01f3          	0x9f5b01f3
	...
    363e:	19a8                	addi	a0,sp,248
    3640:	0000                	unimp
    3642:	1ae8                	addi	a0,sp,380
    3644:	0000                	unimp
    3646:	0001                	nop
    3648:	6058                	flw	fa4,4(s0)
    364a:	7400001b          	0x7400001b
    364e:	0200001b          	0x200001b
    3652:	3000                	fld	fs0,32(s0)
    3654:	009f 0000 0000      	0x9f
    365a:	0000                	unimp
    365c:	a800                	fsd	fs0,16(s0)
    365e:	0019                	c.nop	6
    3660:	e800                	fsw	fs0,16(s0)
    3662:	001a                	c.slli	zero,0x6
    3664:	0100                	addi	s0,sp,128
    3666:	6500                	flw	fs0,8(a0)
    3668:	1b60                	addi	s0,sp,444
    366a:	0000                	unimp
    366c:	1b74                	addi	a3,sp,444
    366e:	0000                	unimp
    3670:	0002                	c.slli64	zero
    3672:	9f30                	0x9f30
	...
    367c:	19a8                	addi	a0,sp,248
    367e:	0000                	unimp
    3680:	19c8                	addi	a0,sp,244
    3682:	0000                	unimp
    3684:	0002                	c.slli64	zero
    3686:	9f30                	0x9f30
    3688:	19c8                	addi	a0,sp,244
    368a:	0000                	unimp
    368c:	1a40                	addi	s0,sp,308
    368e:	0000                	unimp
    3690:	0001                	nop
    3692:	0061                	c.nop	24
    3694:	0000                	unimp
    3696:	0000                	unimp
    3698:	0000                	unimp
    369a:	c800                	sw	s0,16(s0)
    369c:	0019                	c.nop	6
    369e:	d800                	sw	s0,48(s0)
    36a0:	0019                	c.nop	6
    36a2:	0200                	addi	s0,sp,256
    36a4:	3000                	fld	fs0,32(s0)
    36a6:	d89f 0019 e400      	0xe4000019d89f
    36ac:	0019                	c.nop	6
    36ae:	0100                	addi	s0,sp,128
    36b0:	5d00                	lw	s0,56(a0)
    36b2:	19e4                	addi	s1,sp,252
    36b4:	0000                	unimp
    36b6:	19ec                	addi	a1,sp,252
    36b8:	0000                	unimp
    36ba:	7f7d0003          	lb	zero,2039(s10)
    36be:	ec9f 0019 3c00      	0x3c000019ec9f
    36c4:	001a                	c.slli	zero,0x6
    36c6:	0100                	addi	s0,sp,128
    36c8:	5d00                	lw	s0,56(a0)
	...
    36d2:	19ec                	addi	a1,sp,252
    36d4:	0000                	unimp
    36d6:	19f8                	addi	a4,sp,252
    36d8:	0000                	unimp
    36da:	0001                	nop
    36dc:	005f 0000 0000      	0x5f
    36e2:	0000                	unimp
    36e4:	4000                	lw	s0,0(s0)
    36e6:	001a                	c.slli	zero,0x6
    36e8:	9000                	0x9000
    36ea:	001a                	c.slli	zero,0x6
    36ec:	0100                	addi	s0,sp,128
    36ee:	5d00                	lw	s0,56(a0)
    36f0:	1a90                	addi	a2,sp,368
    36f2:	0000                	unimp
    36f4:	1a94                	addi	a3,sp,368
    36f6:	0000                	unimp
    36f8:	0002                	c.slli64	zero
    36fa:	9f30                	0x9f30
    36fc:	1a94                	addi	a3,sp,368
    36fe:	0000                	unimp
    3700:	1aac                	addi	a1,sp,376
    3702:	0000                	unimp
    3704:	0001                	nop
    3706:	005d                	c.nop	23
    3708:	0000                	unimp
    370a:	0000                	unimp
    370c:	0000                	unimp
    370e:	4000                	lw	s0,0(s0)
    3710:	001a                	c.slli	zero,0x6
    3712:	4c00                	lw	s0,24(s0)
    3714:	001a                	c.slli	zero,0x6
    3716:	0100                	addi	s0,sp,128
    3718:	5f00                	lw	s0,56(a4)
    371a:	1a58                	addi	a4,sp,308
    371c:	0000                	unimp
    371e:	1a64                	addi	s1,sp,316
    3720:	0000                	unimp
    3722:	0001                	nop
    3724:	645e                	flw	fs0,212(sp)
    3726:	001a                	c.slli	zero,0x6
    3728:	7400                	flw	fs0,40(s0)
    372a:	001a                	c.slli	zero,0x6
    372c:	0100                	addi	s0,sp,128
    372e:	5f00                	lw	s0,56(a4)
    3730:	1a94                	addi	a3,sp,368
    3732:	0000                	unimp
    3734:	1aa4                	addi	s1,sp,376
    3736:	0000                	unimp
    3738:	0001                	nop
    373a:	005e                	c.slli	zero,0x17
    373c:	0000                	unimp
    373e:	0000                	unimp
    3740:	0000                	unimp
    3742:	4c00                	lw	s0,24(s0)
    3744:	001a                	c.slli	zero,0x6
    3746:	6400                	flw	fs0,8(s0)
    3748:	001a                	c.slli	zero,0x6
    374a:	0100                	addi	s0,sp,128
    374c:	5e00                	lw	s0,56(a2)
    374e:	1a68                	addi	a0,sp,316
    3750:	0000                	unimp
    3752:	1aac                	addi	a1,sp,376
    3754:	0000                	unimp
    3756:	0001                	nop
    3758:	005e                	c.slli	zero,0x17
    375a:	0000                	unimp
    375c:	0000                	unimp
    375e:	0000                	unimp
    3760:	4000                	lw	s0,0(s0)
    3762:	001a                	c.slli	zero,0x6
    3764:	4c00                	lw	s0,24(s0)
    3766:	001a                	c.slli	zero,0x6
    3768:	0100                	addi	s0,sp,128
    376a:	5a00                	lw	s0,48(a2)
    376c:	1a58                	addi	a4,sp,308
    376e:	0000                	unimp
    3770:	1a6c                	addi	a1,sp,316
    3772:	0000                	unimp
    3774:	0001                	nop
    3776:	905a                	c.add	zero,s6
    3778:	001a                	c.slli	zero,0x6
    377a:	ac00                	fsd	fs0,24(s0)
    377c:	001a                	c.slli	zero,0x6
    377e:	0100                	addi	s0,sp,128
    3780:	5a00                	lw	s0,48(a2)
	...
    378a:	1a40                	addi	s0,sp,308
    378c:	0000                	unimp
    378e:	1aac                	addi	a1,sp,376
    3790:	0000                	unimp
    3792:	0001                	nop
    3794:	0061                	c.nop	24
    3796:	0000                	unimp
    3798:	0000                	unimp
    379a:	0000                	unimp
    379c:	4000                	lw	s0,0(s0)
    379e:	001a                	c.slli	zero,0x6
    37a0:	4c00                	lw	s0,24(s0)
    37a2:	001a                	c.slli	zero,0x6
    37a4:	0200                	addi	s0,sp,256
    37a6:	3000                	fld	fs0,32(s0)
    37a8:	4c9f 001a 5400      	0x5400001a4c9f
    37ae:	001a                	c.slli	zero,0x6
    37b0:	0100                	addi	s0,sp,128
    37b2:	5c00                	lw	s0,56(s0)
    37b4:	1a54                	addi	a3,sp,308
    37b6:	0000                	unimp
    37b8:	1a58                	addi	a4,sp,308
    37ba:	0000                	unimp
    37bc:	7f7c0003          	lb	zero,2039(s8)
    37c0:	589f 001a 8c00      	0x8c00001a589f
    37c6:	001a                	c.slli	zero,0x6
    37c8:	0100                	addi	s0,sp,128
    37ca:	5c00                	lw	s0,56(s0)
    37cc:	1a8c                	addi	a1,sp,368
    37ce:	0000                	unimp
    37d0:	1a94                	addi	a3,sp,368
    37d2:	0000                	unimp
    37d4:	7f7c0003          	lb	zero,2039(s8)
    37d8:	949f 001a ac00      	0xac00001a949f
    37de:	001a                	c.slli	zero,0x6
    37e0:	0100                	addi	s0,sp,128
    37e2:	5c00                	lw	s0,56(s0)
	...
    37ec:	1ab8                	addi	a4,sp,376
    37ee:	0000                	unimp
    37f0:	1abc                	addi	a5,sp,376
    37f2:	0000                	unimp
    37f4:	0001                	nop
    37f6:	bc62                	fsd	fs8,56(sp)
    37f8:	001a                	c.slli	zero,0x6
    37fa:	e800                	fsw	fs0,16(s0)
    37fc:	001a                	c.slli	zero,0x6
    37fe:	0300                	addi	s0,sp,384
    3800:	9100                	0x9100
    3802:	7fb8                	flw	fa4,120(a5)
    3804:	1b70                	addi	a2,sp,444
    3806:	0000                	unimp
    3808:	1b74                	addi	a3,sp,444
    380a:	0000                	unimp
    380c:	b8910003          	lb	zero,-1143(sp)
    3810:	007f                	0x7f
    3812:	0000                	unimp
    3814:	0000                	unimp
    3816:	0000                	unimp
    3818:	b800                	fsd	fs0,48(s0)
    381a:	001a                	c.slli	zero,0x6
    381c:	e800                	fsw	fs0,16(s0)
    381e:	001a                	c.slli	zero,0x6
    3820:	0100                	addi	s0,sp,128
    3822:	5800                	lw	s0,48(s0)
    3824:	1b70                	addi	a2,sp,444
    3826:	0000                	unimp
    3828:	1b74                	addi	a3,sp,444
    382a:	0000                	unimp
    382c:	0002                	c.slli64	zero
    382e:	9f30                	0x9f30
	...
    3838:	1ab8                	addi	a4,sp,376
    383a:	0000                	unimp
    383c:	1abc                	addi	a5,sp,376
    383e:	0000                	unimp
    3840:	0002                	c.slli64	zero
    3842:	9f30                	0x9f30
    3844:	1abc                	addi	a5,sp,376
    3846:	0000                	unimp
    3848:	1ae8                	addi	a0,sp,380
    384a:	0000                	unimp
    384c:	0001                	nop
    384e:	705c                	flw	fa5,36(s0)
    3850:	7400001b          	0x7400001b
    3854:	0200001b          	0x200001b
    3858:	3000                	fld	fs0,32(s0)
    385a:	009f 0000 0000      	0x9f
    3860:	0000                	unimp
    3862:	bc00                	fsd	fs0,56(s0)
    3864:	001a                	c.slli	zero,0x6
    3866:	c400                	sw	s0,8(s0)
    3868:	001a                	c.slli	zero,0x6
    386a:	0200                	addi	s0,sp,256
    386c:	3000                	fld	fs0,32(s0)
    386e:	c49f 001a e800      	0xe800001ac49f
    3874:	001a                	c.slli	zero,0x6
    3876:	0100                	addi	s0,sp,128
    3878:	5d00                	lw	s0,56(a0)
	...
    3882:	1b74                	addi	a3,sp,444
    3884:	0000                	unimp
    3886:	1b94                	addi	a3,sp,496
    3888:	0000                	unimp
    388a:	0001                	nop
    388c:	945a                	add	s0,s0,s6
    388e:	b800001b          	0xb800001b
    3892:	0400001b          	0x400001b
    3896:	f300                	fsw	fs0,32(a4)
    3898:	5a01                	li	s4,-32
    389a:	009f 0000 0000      	0x9f
    38a0:	0000                	unimp
    38a2:	7400                	flw	fs0,40(s0)
    38a4:	8800001b          	0x8800001b
    38a8:	0100001b          	0x100001b
    38ac:	5b00                	lw	s0,48(a4)
    38ae:	1b88                	addi	a0,sp,496
    38b0:	0000                	unimp
    38b2:	1bb8                	addi	a4,sp,504
    38b4:	0000                	unimp
    38b6:	0004                	0x4
    38b8:	9f5b01f3          	0x9f5b01f3
	...
    38c4:	1b74                	addi	a3,sp,444
    38c6:	0000                	unimp
    38c8:	1b90                	addi	a2,sp,496
    38ca:	0000                	unimp
    38cc:	0001                	nop
    38ce:	905c                	0x905c
    38d0:	b800001b          	0xb800001b
    38d4:	0400001b          	0x400001b
    38d8:	f300                	fsw	fs0,32(a4)
    38da:	5c01                	li	s8,-32
    38dc:	009f 0000 0000      	0x9f
    38e2:	0000                	unimp
    38e4:	7400                	flw	fs0,40(s0)
    38e6:	9400001b          	0x9400001b
    38ea:	0200001b          	0x200001b
    38ee:	7a00                	flw	fs0,48(a2)
    38f0:	9400                	0x9400
    38f2:	9f00001b          	0x9f00001b
    38f6:	0300001b          	0x300001b
    38fa:	f300                	fsw	fs0,32(a4)
    38fc:	5a01                	li	s4,-32
	...
    3906:	1b74                	addi	a3,sp,444
    3908:	0000                	unimp
    390a:	1b94                	addi	a3,sp,496
    390c:	0000                	unimp
    390e:	0002                	c.slli64	zero
    3910:	0c7a                	slli	s8,s8,0x1e
    3912:	1b94                	addi	a3,sp,496
    3914:	0000                	unimp
    3916:	1b9f 0000 0005      	0x500001b9f
    391c:	235a01f3          	0x235a01f3
    3920:	000c                	0xc
    3922:	0000                	unimp
    3924:	0000                	unimp
    3926:	0000                	unimp
    3928:	7400                	flw	fs0,40(s0)
    392a:	9400001b          	0x9400001b
    392e:	0200001b          	0x200001b
    3932:	7a00                	flw	fs0,48(a2)
    3934:	9404                	0x9404
    3936:	9f00001b          	0x9f00001b
    393a:	0500001b          	0x500001b
    393e:	f300                	fsw	fs0,32(a4)
    3940:	5a01                	li	s4,-32
    3942:	00000423          	sb	zero,8(zero) # 8 <_start+0x8>
    3946:	0000                	unimp
    3948:	0000                	unimp
    394a:	0000                	unimp
    394c:	1b74                	addi	a3,sp,444
    394e:	0000                	unimp
    3950:	1b94                	addi	a3,sp,496
    3952:	0000                	unimp
    3954:	0002                	c.slli64	zero
    3956:	087a                	slli	a6,a6,0x1e
    3958:	1b94                	addi	a3,sp,496
    395a:	0000                	unimp
    395c:	1b9f 0000 0005      	0x500001b9f
    3962:	235a01f3          	0x235a01f3
    3966:	0008                	0x8
    3968:	0000                	unimp
    396a:	0000                	unimp
    396c:	0000                	unimp
    396e:	7400                	flw	fs0,40(s0)
    3970:	8800001b          	0x8800001b
    3974:	0100001b          	0x100001b
    3978:	5b00                	lw	s0,48(a4)
    397a:	1b88                	addi	a0,sp,496
    397c:	0000                	unimp
    397e:	1bb8                	addi	a4,sp,504
    3980:	0000                	unimp
    3982:	0004                	0x4
    3984:	9f5b01f3          	0x9f5b01f3
	...
    3998:	0001                	nop
    399a:	005a                	c.slli	zero,0x16
    399c:	0000                	unimp
    399e:	0000                	unimp
    39a0:	0000                	unimp
    39a2:	0100                	addi	s0,sp,128
    39a4:	6e00                	flw	fs0,24(a2)
	...
    39ae:	0001                	nop
    39b0:	005a                	c.slli	zero,0x16
    39b2:	0000                	unimp
    39b4:	0000                	unimp
    39b6:	0000                	unimp
    39b8:	0100                	addi	s0,sp,128
    39ba:	6e00                	flw	fs0,24(a2)
	...
    39cc:	0001                	nop
    39ce:	0000005b          	0x5b
    39d2:	0000                	unimp
    39d4:	0000                	unimp
    39d6:	0400                	addi	s0,sp,512
    39d8:	f300                	fsw	fs0,32(a4)
    39da:	5b01                	li	s6,-32
    39dc:	009f 0000 0000      	0x9f
    39e2:	0000                	unimp
    39e4:	0100                	addi	s0,sp,128
    39e6:	5b00                	lw	s0,48(a4)
	...
    39f8:	0002                	c.slli64	zero
    39fa:	9f30                	0x9f30
	...
    3a04:	0001                	nop
    3a06:	0000005b          	0x5b
    3a0a:	0000                	unimp
    3a0c:	0000                	unimp
    3a0e:	0200                	addi	s0,sp,256
    3a10:	3000                	fld	fs0,32(s0)
    3a12:	009f 0000 0000      	0x9f
    3a18:	0000                	unimp
    3a1a:	0100                	addi	s0,sp,128
    3a1c:	5b00                	lw	s0,48(a4)
	...
    3a26:	0002                	c.slli64	zero
    3a28:	9f30                	0x9f30
	...
    3a3a:	0002                	c.slli64	zero
    3a3c:	9f30                	0x9f30
	...
    3a46:	0001                	nop
    3a48:	005e                	c.slli	zero,0x17
    3a4a:	0000                	unimp
    3a4c:	0000                	unimp
    3a4e:	0000                	unimp
    3a50:	0100                	addi	s0,sp,128
    3a52:	5d00                	lw	s0,56(a0)
	...
    3a5c:	0001                	nop
    3a5e:	005e                	c.slli	zero,0x17
    3a60:	0000                	unimp
    3a62:	0000                	unimp
    3a64:	0000                	unimp
    3a66:	0100                	addi	s0,sp,128
    3a68:	5d00                	lw	s0,56(a0)
	...
    3a72:	0002                	c.slli64	zero
    3a74:	9f30                	0x9f30
	...
    3a86:	0002                	c.slli64	zero
    3a88:	9f30                	0x9f30
	...
    3a92:	0001                	nop
    3a94:	005d                	c.nop	23
    3a96:	0000                	unimp
    3a98:	0000                	unimp
    3a9a:	0000                	unimp
    3a9c:	0100                	addi	s0,sp,128
    3a9e:	5d00                	lw	s0,56(a0)
	...
    3aa8:	0002                	c.slli64	zero
    3aaa:	9f30                	0x9f30
	...
    3abc:	0002                	c.slli64	zero
    3abe:	9f30                	0x9f30
	...
    3ac8:	0001                	nop
    3aca:	005a                	c.slli	zero,0x16
    3acc:	0000                	unimp
    3ace:	0000                	unimp
    3ad0:	0000                	unimp
    3ad2:	0100                	addi	s0,sp,128
    3ad4:	5a00                	lw	s0,48(a2)
	...
    3ade:	0001                	nop
    3ae0:	005a                	c.slli	zero,0x16
    3ae2:	0000                	unimp
    3ae4:	0000                	unimp
    3ae6:	0000                	unimp
    3ae8:	0200                	addi	s0,sp,256
    3aea:	3000                	fld	fs0,32(s0)
    3aec:	009f 0000 0000      	0x9f
	...
    3afa:	0000                	unimp
    3afc:	0200                	addi	s0,sp,256
    3afe:	3000                	fld	fs0,32(s0)
    3b00:	009f 0000 0000      	0x9f
    3b06:	0000                	unimp
    3b08:	0100                	addi	s0,sp,128
    3b0a:	5600                	lw	s0,40(a2)
	...
    3b14:	0002                	c.slli64	zero
    3b16:	9f30                	0x9f30
	...
    3b28:	0002                	c.slli64	zero
    3b2a:	9f30                	0x9f30
	...
    3b3c:	0001                	nop
    3b3e:	0000005b          	0x5b
    3b42:	0000                	unimp
    3b44:	0000                	unimp
    3b46:	0400                	addi	s0,sp,512
    3b48:	f300                	fsw	fs0,32(a4)
    3b4a:	5b01                	li	s6,-32
    3b4c:	009f 0000 0000      	0x9f
	...
    3b5a:	0000                	unimp
    3b5c:	0100                	addi	s0,sp,128
    3b5e:	5c00                	lw	s0,56(s0)
	...
    3b68:	0004                	0x4
    3b6a:	9f5c01f3          	0x9f5c01f3
	...
    3b7e:	0002                	c.slli64	zero
    3b80:	9f30                	0x9f30
	...
    3b8a:	0001                	nop
    3b8c:	0061                	c.nop	24
	...
    3b9a:	0000                	unimp
    3b9c:	0200                	addi	s0,sp,256
    3b9e:	3000                	fld	fs0,32(s0)
    3ba0:	009f 0000 0000      	0x9f
	...
    3bae:	0000                	unimp
    3bb0:	0100                	addi	s0,sp,128
    3bb2:	5b00                	lw	s0,48(a4)
	...
    3bbc:	0004                	0x4
    3bbe:	9f5b01f3          	0x9f5b01f3
	...
    3bd2:	0001                	nop
    3bd4:	005c                	addi	a5,sp,4
    3bd6:	0000                	unimp
    3bd8:	0000                	unimp
    3bda:	0000                	unimp
    3bdc:	0400                	addi	s0,sp,512
    3bde:	f300                	fsw	fs0,32(a4)
    3be0:	5c01                	li	s8,-32
    3be2:	009f 0000 0000      	0x9f
	...
    3bf0:	0000                	unimp
    3bf2:	0200                	addi	s0,sp,256
    3bf4:	3000                	fld	fs0,32(s0)
    3bf6:	009f 0000 0000      	0x9f
    3bfc:	0000                	unimp
    3bfe:	0100                	addi	s0,sp,128
    3c00:	5b00                	lw	s0,48(a4)
	...
    3c12:	0002                	c.slli64	zero
    3c14:	9f30                	0x9f30
	...
    3c26:	0001                	nop
    3c28:	005a                	c.slli	zero,0x16
    3c2a:	0000                	unimp
    3c2c:	0000                	unimp
    3c2e:	0000                	unimp
    3c30:	0100                	addi	s0,sp,128
    3c32:	5900                	lw	s0,48(a0)
	...
    3c3c:	0004                	0x4
    3c3e:	9f5a01f3          	0x9f5a01f3
	...
    3c4a:	0001                	nop
    3c4c:	005a                	c.slli	zero,0x16
	...
    3c5a:	0000                	unimp
    3c5c:	0100                	addi	s0,sp,128
    3c5e:	5b00                	lw	s0,48(a4)
	...
    3c68:	0001                	nop
    3c6a:	005f 0000 0000      	0x5f
    3c70:	0000                	unimp
    3c72:	0400                	addi	s0,sp,512
    3c74:	f300                	fsw	fs0,32(a4)
    3c76:	5b01                	li	s6,-32
    3c78:	009f 0000 0000      	0x9f
    3c7e:	0000                	unimp
    3c80:	0100                	addi	s0,sp,128
    3c82:	5b00                	lw	s0,48(a4)
	...
    3c94:	0001                	nop
    3c96:	005c                	addi	a5,sp,4
    3c98:	0000                	unimp
    3c9a:	0000                	unimp
    3c9c:	0000                	unimp
    3c9e:	0100                	addi	s0,sp,128
    3ca0:	5800                	lw	s0,48(s0)
	...
    3caa:	0004                	0x4
    3cac:	9f5c01f3          	0x9f5c01f3
	...
    3cb8:	0001                	nop
    3cba:	005c                	addi	a5,sp,4
	...
    3cc8:	0000                	unimp
    3cca:	0100                	addi	s0,sp,128
    3ccc:	5d00                	lw	s0,56(a0)
	...
    3cd6:	0001                	nop
    3cd8:	0062                	c.slli	zero,0x18
    3cda:	0000                	unimp
    3cdc:	0000                	unimp
    3cde:	0000                	unimp
    3ce0:	0400                	addi	s0,sp,512
    3ce2:	f300                	fsw	fs0,32(a4)
    3ce4:	5d01                	li	s10,-32
    3ce6:	009f 0000 0000      	0x9f
    3cec:	0000                	unimp
    3cee:	0100                	addi	s0,sp,128
    3cf0:	5d00                	lw	s0,56(a0)
	...
    3d02:	0002                	c.slli64	zero
    3d04:	9f30                	0x9f30
	...
    3d0e:	0002                	c.slli64	zero
    3d10:	9f30                	0x9f30
	...
    3d22:	0002                	c.slli64	zero
    3d24:	9f30                	0x9f30
	...
    3d36:	0001                	nop
    3d38:	005a                	c.slli	zero,0x16
    3d3a:	0000                	unimp
    3d3c:	0000                	unimp
    3d3e:	0000                	unimp
    3d40:	0100                	addi	s0,sp,128
    3d42:	6200                	flw	fs0,0(a2)
	...
    3d4c:	0004                	0x4
    3d4e:	9f5a01f3          	0x9f5a01f3
	...
    3d5a:	0001                	nop
    3d5c:	005a                	c.slli	zero,0x16
	...
    3d6a:	0000                	unimp
    3d6c:	0100                	addi	s0,sp,128
    3d6e:	5b00                	lw	s0,48(a4)
	...
    3d78:	0004                	0x4
    3d7a:	9f5b01f3          	0x9f5b01f3
	...
    3d86:	0001                	nop
    3d88:	0000005b          	0x5b
	...
    3d98:	0100                	addi	s0,sp,128
    3d9a:	5c00                	lw	s0,56(s0)
	...
    3da4:	0004                	0x4
    3da6:	9f5c01f3          	0x9f5c01f3
	...
    3db2:	0001                	nop
    3db4:	005c                	addi	a5,sp,4
	...
    3dc2:	0000                	unimp
    3dc4:	0100                	addi	s0,sp,128
    3dc6:	5d00                	lw	s0,56(a0)
	...
    3dd0:	0001                	nop
    3dd2:	00000063          	beqz	zero,3dd2 <__fixunsdfsi+0xe>
    3dd6:	0000                	unimp
    3dd8:	0000                	unimp
    3dda:	0400                	addi	s0,sp,512
    3ddc:	f300                	fsw	fs0,32(a4)
    3dde:	5d01                	li	s10,-32
    3de0:	009f 0000 0000      	0x9f
    3de6:	0000                	unimp
    3de8:	0100                	addi	s0,sp,128
    3dea:	5d00                	lw	s0,56(a0)
	...
    3dfc:	0002                	c.slli64	zero
    3dfe:	9f30                	0x9f30
	...
    3e08:	0001                	nop
    3e0a:	0066                	c.slli	zero,0x19
    3e0c:	0000                	unimp
    3e0e:	0000                	unimp
    3e10:	0000                	unimp
    3e12:	0200                	addi	s0,sp,256
    3e14:	3000                	fld	fs0,32(s0)
    3e16:	009f 0000 0000      	0x9f
	...
    3e24:	0000                	unimp
    3e26:	0200                	addi	s0,sp,256
    3e28:	3000                	fld	fs0,32(s0)
    3e2a:	009f 0000 0000      	0x9f
	...
    3e38:	0000                	unimp
    3e3a:	0200                	addi	s0,sp,256
    3e3c:	3000                	fld	fs0,32(s0)
    3e3e:	009f 0000 0000      	0x9f
	...
    3e4c:	0000                	unimp
    3e4e:	0100                	addi	s0,sp,128
    3e50:	5a00                	lw	s0,48(a2)
	...
    3e5a:	0001                	nop
    3e5c:	0058                	addi	a4,sp,4
    3e5e:	0000                	unimp
    3e60:	0000                	unimp
    3e62:	0000                	unimp
    3e64:	0400                	addi	s0,sp,512
    3e66:	f300                	fsw	fs0,32(a4)
    3e68:	5a01                	li	s4,-32
    3e6a:	009f 0000 0000      	0x9f
    3e70:	0000                	unimp
    3e72:	0100                	addi	s0,sp,128
    3e74:	5a00                	lw	s0,48(a2)
	...
    3e86:	0001                	nop
    3e88:	0000005b          	0x5b
    3e8c:	0000                	unimp
    3e8e:	0000                	unimp
    3e90:	0400                	addi	s0,sp,512
    3e92:	f300                	fsw	fs0,32(a4)
    3e94:	5b01                	li	s6,-32
    3e96:	009f 0000 0000      	0x9f
    3e9c:	0000                	unimp
    3e9e:	0100                	addi	s0,sp,128
    3ea0:	5b00                	lw	s0,48(a4)
	...
    3eb2:	0001                	nop
    3eb4:	005c                	addi	a5,sp,4
    3eb6:	0000                	unimp
    3eb8:	0000                	unimp
    3eba:	0000                	unimp
    3ebc:	0400                	addi	s0,sp,512
    3ebe:	f300                	fsw	fs0,32(a4)
    3ec0:	5c01                	li	s8,-32
    3ec2:	009f 0000 0000      	0x9f
    3ec8:	0000                	unimp
    3eca:	0100                	addi	s0,sp,128
    3ecc:	5c00                	lw	s0,56(s0)
	...
    3ede:	0001                	nop
    3ee0:	005d                	c.nop	23
    3ee2:	0000                	unimp
    3ee4:	0000                	unimp
    3ee6:	0000                	unimp
    3ee8:	0100                	addi	s0,sp,128
    3eea:	5900                	lw	s0,48(a0)
	...
    3ef4:	0004                	0x4
    3ef6:	9f5d01f3          	0x9f5d01f3
	...
    3f02:	0001                	nop
    3f04:	005d                	c.nop	23
	...
    3f12:	0000                	unimp
    3f14:	0200                	addi	s0,sp,256
    3f16:	3000                	fld	fs0,32(s0)
    3f18:	009f 0000 0000      	0x9f
    3f1e:	0000                	unimp
    3f20:	0100                	addi	s0,sp,128
    3f22:	6600                	flw	fs0,8(a2)
	...
    3f2c:	0002                	c.slli64	zero
    3f2e:	9f30                	0x9f30
	...
    3f40:	0002                	c.slli64	zero
    3f42:	9f30                	0x9f30
	...
    3f54:	0002                	c.slli64	zero
    3f56:	9f30                	0x9f30
	...
    3f68:	0001                	nop
    3f6a:	005f 0000 0000      	0x5f
    3f70:	0000                	unimp
    3f72:	7400                	flw	fs0,40(s0)
    3f74:	001d                	c.nop	7
    3f76:	8400                	0x8400
    3f78:	001d                	c.nop	7
    3f7a:	0100                	addi	s0,sp,128
    3f7c:	5a00                	lw	s0,48(a2)
    3f7e:	1d84                	addi	s1,sp,752
    3f80:	0000                	unimp
    3f82:	1da4                	addi	s1,sp,760
    3f84:	0000                	unimp
    3f86:	0001                	nop
    3f88:	a458                	fsd	fa4,136(s0)
    3f8a:	001d                	c.nop	7
    3f8c:	ac00                	fsd	fs0,24(s0)
    3f8e:	001d                	c.nop	7
    3f90:	0400                	addi	s0,sp,512
    3f92:	f300                	fsw	fs0,32(a4)
    3f94:	5a01                	li	s4,-32
    3f96:	009f 0000 0000      	0x9f
    3f9c:	0000                	unimp
    3f9e:	7400                	flw	fs0,40(s0)
    3fa0:	001d                	c.nop	7
    3fa2:	9300                	0x9300
    3fa4:	001d                	c.nop	7
    3fa6:	0100                	addi	s0,sp,128
    3fa8:	5b00                	lw	s0,48(a4)
    3faa:	00001d93          	slli	s11,zero,0x0
    3fae:	1dac                	addi	a1,sp,760
    3fb0:	0000                	unimp
    3fb2:	0004                	0x4
    3fb4:	9f5b01f3          	0x9f5b01f3
	...
    3fc0:	1d74                	addi	a3,sp,700
    3fc2:	0000                	unimp
    3fc4:	00001d93          	slli	s11,zero,0x0
    3fc8:	0001                	nop
    3fca:	935c                	0x935c
    3fcc:	001d                	c.nop	7
    3fce:	ac00                	fsd	fs0,24(s0)
    3fd0:	001d                	c.nop	7
    3fd2:	0400                	addi	s0,sp,512
    3fd4:	f300                	fsw	fs0,32(a4)
    3fd6:	5c01                	li	s8,-32
    3fd8:	009f 0000 0000      	0x9f
    3fde:	0000                	unimp
    3fe0:	4400                	lw	s0,8(s0)
    3fe2:	001d                	c.nop	7
    3fe4:	5300                	lw	s0,32(a4)
    3fe6:	001d                	c.nop	7
    3fe8:	0100                	addi	s0,sp,128
    3fea:	5a00                	lw	s0,48(a2)
    3fec:	00001d53          	fadd.s	fs10,ft0,ft0,rtz
    3ff0:	1d74                	addi	a3,sp,700
    3ff2:	0000                	unimp
    3ff4:	0004                	0x4
    3ff6:	9f5a01f3          	0x9f5a01f3
	...
    4002:	1f70                	addi	a2,sp,956
    4004:	0000                	unimp
    4006:	2050                	fld	fa2,128(s0)
    4008:	0000                	unimp
    400a:	0001                	nop
    400c:	505a                	0x505a
    400e:	0020                	addi	s0,sp,8
    4010:	5400                	lw	s0,40(s0)
    4012:	0020                	addi	s0,sp,8
    4014:	0400                	addi	s0,sp,512
    4016:	f300                	fsw	fs0,32(a4)
    4018:	5a01                	li	s4,-32
    401a:	549f 0020 8800      	0x88000020549f
    4020:	0020                	addi	s0,sp,8
    4022:	0100                	addi	s0,sp,128
    4024:	5a00                	lw	s0,48(a2)
    4026:	2088                	fld	fa0,0(s1)
    4028:	0000                	unimp
    402a:	208c                	fld	fa1,0(s1)
    402c:	0000                	unimp
    402e:	0004                	0x4
    4030:	9f5a01f3          	0x9f5a01f3
    4034:	208c                	fld	fa1,0(s1)
    4036:	0000                	unimp
    4038:	20a8                	fld	fa0,64(s1)
    403a:	0000                	unimp
    403c:	0001                	nop
    403e:	a85a                	fsd	fs6,16(sp)
    4040:	0020                	addi	s0,sp,8
    4042:	ac00                	fsd	fs0,24(s0)
    4044:	0020                	addi	s0,sp,8
    4046:	0400                	addi	s0,sp,512
    4048:	f300                	fsw	fs0,32(a4)
    404a:	5a01                	li	s4,-32
    404c:	ac9f 0020 f000      	0xf0000020ac9f
    4052:	0020                	addi	s0,sp,8
    4054:	0100                	addi	s0,sp,128
    4056:	5a00                	lw	s0,48(a2)
    4058:	20f0                	fld	fa2,192(s1)
    405a:	0000                	unimp
    405c:	20f4                	fld	fa3,192(s1)
    405e:	0000                	unimp
    4060:	0004                	0x4
    4062:	9f5a01f3          	0x9f5a01f3
    4066:	20f4                	fld	fa3,192(s1)
    4068:	0000                	unimp
    406a:	215c                	fld	fa5,128(a0)
    406c:	0000                	unimp
    406e:	0001                	nop
    4070:	5c5a                	lw	s8,180(sp)
    4072:	0021                	c.nop	8
    4074:	6000                	flw	fs0,0(s0)
    4076:	0021                	c.nop	8
    4078:	0400                	addi	s0,sp,512
    407a:	f300                	fsw	fs0,32(a4)
    407c:	5a01                	li	s4,-32
    407e:	609f 0021 a000      	0xa0000021609f
    4084:	0022                	c.slli	zero,0x8
    4086:	0100                	addi	s0,sp,128
    4088:	5a00                	lw	s0,48(a2)
	...
    4092:	1f74                	addi	a3,sp,956
    4094:	0000                	unimp
    4096:	1fa4                	addi	s1,sp,1016
    4098:	0000                	unimp
    409a:	0001                	nop
    409c:	a45f 001f b000      	0xb000001fa45f
    40a2:	001f 0300 7f00      	0x7f000300001f
    40a8:	9f01                	0x9f01
    40aa:	1fb0                	addi	a2,sp,1016
    40ac:	0000                	unimp
    40ae:	1fb4                	addi	a3,sp,1016
    40b0:	0000                	unimp
    40b2:	0006                	c.slli	zero,0x1
    40b4:	007a                	c.slli	zero,0x1e
    40b6:	2306                	fld	ft6,64(sp)
    40b8:	9f01                	0x9f01
    40ba:	1fd8                	addi	a4,sp,1012
    40bc:	0000                	unimp
    40be:	1fec                	addi	a1,sp,1020
    40c0:	0000                	unimp
    40c2:	0001                	nop
    40c4:	ec5c                	fsw	fa5,28(s0)
    40c6:	001f f400 001f      	0x1ff400001f
    40cc:	0100                	addi	s0,sp,128
    40ce:	5f00                	lw	s0,56(a4)
    40d0:	2054                	fld	fa3,128(s0)
    40d2:	0000                	unimp
    40d4:	2078                	fld	fa4,192(s0)
    40d6:	0000                	unimp
    40d8:	0001                	nop
    40da:	785f 0020 8000      	0x80000020785f
    40e0:	0020                	addi	s0,sp,8
    40e2:	0200                	addi	s0,sp,256
    40e4:	7a00                	flw	fs0,48(a2)
    40e6:	8000                	0x8000
    40e8:	0020                	addi	s0,sp,8
    40ea:	8400                	0x8400
    40ec:	0020                	addi	s0,sp,8
    40ee:	0600                	addi	s0,sp,768
    40f0:	7a00                	flw	fs0,48(a2)
    40f2:	0600                	addi	s0,sp,768
    40f4:	849f0123          	sb	s1,-1982(t5)
    40f8:	0020                	addi	s0,sp,8
    40fa:	8c00                	0x8c00
    40fc:	0020                	addi	s0,sp,8
    40fe:	0100                	addi	s0,sp,128
    4100:	5e00                	lw	s0,56(a2)
    4102:	20ac                	fld	fa1,64(s1)
    4104:	0000                	unimp
    4106:	20b0                	fld	fa2,64(s1)
    4108:	0000                	unimp
    410a:	0001                	nop
    410c:	b05f 0020 e400      	0xe4000020b05f
    4112:	0020                	addi	s0,sp,8
    4114:	0300                	addi	s0,sp,384
    4116:	7f00                	flw	fs0,56(a4)
    4118:	9f01                	0x9f01
    411a:	20e4                	fld	fs1,192(s1)
    411c:	0000                	unimp
    411e:	20e8                	fld	fa0,192(s1)
    4120:	0000                	unimp
    4122:	037f0003          	lb	zero,55(t5)
    4126:	e89f 0020 ec00      	0xec000020e89f
    412c:	0020                	addi	s0,sp,8
    412e:	0600                	addi	s0,sp,768
    4130:	7a00                	flw	fs0,48(a2)
    4132:	0600                	addi	s0,sp,768
    4134:	ec9f0223          	sb	s1,-316(t5)
    4138:	0020                	addi	s0,sp,8
    413a:	f400                	fsw	fs0,40(s0)
    413c:	0020                	addi	s0,sp,8
    413e:	0100                	addi	s0,sp,128
    4140:	5e00                	lw	s0,56(a2)
    4142:	20f4                	fld	fa3,192(s1)
    4144:	0000                	unimp
    4146:	20f8                	fld	fa4,192(s1)
    4148:	0000                	unimp
    414a:	017f0003          	lb	zero,23(t5)
    414e:	f89f 0020 0800      	0x8000020f89f
    4154:	0021                	c.nop	8
    4156:	0300                	addi	s0,sp,384
    4158:	7f00                	flw	fs0,56(a4)
    415a:	21089f03          	lh	t5,528(a7) # 210 <main+0x198>
    415e:	0000                	unimp
    4160:	210c                	fld	fa1,0(a0)
    4162:	0000                	unimp
    4164:	0006                	c.slli	zero,0x1
    4166:	007a                	c.slli	zero,0x1e
    4168:	2306                	fld	ft6,64(sp)
    416a:	21a49f03          	lh	t5,538(s1)
    416e:	0000                	unimp
    4170:	21bc                	fld	fa5,64(a1)
    4172:	0000                	unimp
    4174:	0001                	nop
    4176:	bc5f 0021 c400      	0xc4000021bc5f
    417c:	0021                	c.nop	8
    417e:	0100                	addi	s0,sp,128
    4180:	5e00                	lw	s0,56(a2)
    4182:	21c4                	fld	fs1,128(a1)
    4184:	0000                	unimp
    4186:	21c8                	fld	fa0,128(a1)
    4188:	0000                	unimp
    418a:	017e0003          	lb	zero,23(t3) # fffe9017 <__freertos_irq_stack_top+0xfefd9017>
    418e:	c89f 0021 d800      	0xd8000021c89f
    4194:	0021                	c.nop	8
    4196:	0100                	addi	s0,sp,128
    4198:	5f00                	lw	s0,56(a4)
    419a:	21d8                	fld	fa4,128(a1)
    419c:	0000                	unimp
    419e:	21e4                	fld	fs1,192(a1)
    41a0:	0000                	unimp
    41a2:	0001                	nop
    41a4:	ec5e                	fsw	fs7,24(sp)
    41a6:	0021                	c.nop	8
    41a8:	0000                	unimp
    41aa:	0022                	c.slli	zero,0x8
    41ac:	0100                	addi	s0,sp,128
    41ae:	5e00                	lw	s0,56(a2)
    41b0:	2200                	fld	fs0,0(a2)
    41b2:	0000                	unimp
    41b4:	2204                	fld	fs1,0(a2)
    41b6:	0000                	unimp
    41b8:	0001                	nop
    41ba:	045f 0022 1400      	0x14000022045f
    41c0:	0022                	c.slli	zero,0x8
    41c2:	0300                	addi	s0,sp,384
    41c4:	7f00                	flw	fs0,56(a4)
    41c6:	9f01                	0x9f01
    41c8:	221c                	fld	fa5,0(a2)
    41ca:	0000                	unimp
    41cc:	2220                	fld	fs0,64(a2)
    41ce:	0000                	unimp
    41d0:	017f0003          	lb	zero,23(t5)
    41d4:	209f 0022 2c00      	0x2c000022209f
    41da:	0022                	c.slli	zero,0x8
    41dc:	0300                	addi	s0,sp,384
    41de:	7f00                	flw	fs0,56(a4)
    41e0:	222c9f03          	lh	t5,546(s9)
    41e4:	0000                	unimp
    41e6:	2234                	fld	fa3,64(a2)
    41e8:	0000                	unimp
    41ea:	0006                	c.slli	zero,0x1
    41ec:	007a                	c.slli	zero,0x1e
    41ee:	2306                	fld	ft6,64(sp)
    41f0:	22409f03          	lh	t5,548(ra)
    41f4:	0000                	unimp
    41f6:	2244                	fld	fs1,128(a2)
    41f8:	0000                	unimp
    41fa:	0001                	nop
    41fc:	685f 0022 7000      	0x70000022685f
    4202:	0022                	c.slli	zero,0x8
    4204:	0100                	addi	s0,sp,128
    4206:	5f00                	lw	s0,56(a4)
    4208:	2270                	fld	fa2,192(a2)
    420a:	0000                	unimp
    420c:	2274                	fld	fa3,192(a2)
    420e:	0000                	unimp
    4210:	0002                	c.slli64	zero
    4212:	007a                	c.slli	zero,0x1e
    4214:	2274                	fld	fa3,192(a2)
    4216:	0000                	unimp
    4218:	2278                	fld	fa4,192(a2)
    421a:	0000                	unimp
    421c:	017f0003          	lb	zero,23(t5)
    4220:	789f 0022 7c00      	0x7c000022789f
    4226:	0022                	c.slli	zero,0x8
    4228:	0600                	addi	s0,sp,768
    422a:	7a00                	flw	fs0,48(a2)
    422c:	0600                	addi	s0,sp,768
    422e:	7c9f0123          	sb	s1,1986(t5)
    4232:	0022                	c.slli	zero,0x8
    4234:	8000                	0x8000
    4236:	0022                	c.slli	zero,0x8
    4238:	0100                	addi	s0,sp,128
    423a:	5e00                	lw	s0,56(a2)
    423c:	2280                	fld	fs0,0(a3)
    423e:	0000                	unimp
    4240:	2284                	fld	fs1,0(a3)
    4242:	0000                	unimp
    4244:	0001                	nop
    4246:	845f 0022 8800      	0x88000022845f
    424c:	0022                	c.slli	zero,0x8
    424e:	0300                	addi	s0,sp,384
    4250:	8000                	0x8000
    4252:	9f7f                	0x9f7f
    4254:	2294                	fld	fa3,0(a3)
    4256:	0000                	unimp
    4258:	22a0                	fld	fs0,64(a3)
    425a:	0000                	unimp
    425c:	0001                	nop
    425e:	005c                	addi	a5,sp,4
    4260:	0000                	unimp
    4262:	0000                	unimp
    4264:	0000                	unimp
    4266:	7c00                	flw	fs0,56(s0)
    4268:	001f a800 001f      	0x1fa800001f
    426e:	0100                	addi	s0,sp,128
    4270:	5d00                	lw	s0,56(a0)
    4272:	1fac                	addi	a1,sp,1016
    4274:	0000                	unimp
    4276:	1ff8                	addi	a4,sp,1020
    4278:	0000                	unimp
    427a:	0001                	nop
    427c:	085d                	addi	a6,a6,23
    427e:	0020                	addi	s0,sp,8
    4280:	2800                	fld	fs0,16(s0)
    4282:	0020                	addi	s0,sp,8
    4284:	0100                	addi	s0,sp,128
    4286:	5d00                	lw	s0,56(a0)
    4288:	2054                	fld	fa3,128(s0)
    428a:	0000                	unimp
    428c:	2070                	fld	fa2,192(s0)
    428e:	0000                	unimp
    4290:	0001                	nop
    4292:	705d                	c.lui	zero,0xffff7
    4294:	0020                	addi	s0,sp,8
    4296:	7400                	flw	fs0,40(s0)
    4298:	0020                	addi	s0,sp,8
    429a:	0200                	addi	s0,sp,256
    429c:	7f00                	flw	fs0,56(a4)
    429e:	8c00                	0x8c00
    42a0:	0020                	addi	s0,sp,8
    42a2:	9000                	0x9000
    42a4:	0020                	addi	s0,sp,8
    42a6:	0100                	addi	s0,sp,128
    42a8:	5d00                	lw	s0,56(a0)
    42aa:	20ac                	fld	fa1,64(s1)
    42ac:	0000                	unimp
    42ae:	20b8                	fld	fa4,64(s1)
    42b0:	0000                	unimp
    42b2:	0001                	nop
    42b4:	b85d                	j	3b6a <__divdf3+0x72e>
    42b6:	0020                	addi	s0,sp,8
    42b8:	0000                	unimp
    42ba:	0021                	c.nop	8
    42bc:	0100                	addi	s0,sp,128
    42be:	6100                	flw	fs0,0(a0)
    42c0:	2100                	fld	fs0,0(a0)
    42c2:	0000                	unimp
    42c4:	2110                	fld	fa2,0(a0)
    42c6:	0000                	unimp
    42c8:	0001                	nop
    42ca:	2c5d                	jal	4580 <_printf_float+0x3f0>
    42cc:	0021                	c.nop	8
    42ce:	4000                	lw	s0,0(s0)
    42d0:	0021                	c.nop	8
    42d2:	0100                	addi	s0,sp,128
    42d4:	5f00                	lw	s0,56(a4)
    42d6:	2140                	fld	fs0,128(a0)
    42d8:	0000                	unimp
    42da:	2144                	fld	fs1,128(a0)
    42dc:	0000                	unimp
    42de:	2b7f0003          	lb	zero,695(t5)
    42e2:	689f 0021 7800      	0x78000021689f
    42e8:	0021                	c.nop	8
    42ea:	0100                	addi	s0,sp,128
    42ec:	5f00                	lw	s0,56(a4)
    42ee:	2178                	fld	fa4,192(a0)
    42f0:	0000                	unimp
    42f2:	217c                	fld	fa5,192(a0)
    42f4:	0000                	unimp
    42f6:	307f0003          	lb	zero,775(t5)
    42fa:	7c9f 0021 8800      	0x880000217c9f
    4300:	0021                	c.nop	8
    4302:	0200                	addi	s0,sp,256
    4304:	7c00                	flw	fs0,56(s0)
    4306:	9401                	srai	s0,s0,0x20
    4308:	0021                	c.nop	8
    430a:	a800                	fsd	fs0,16(s0)
    430c:	0021                	c.nop	8
    430e:	0100                	addi	s0,sp,128
    4310:	5d00                	lw	s0,56(a0)
    4312:	21cc                	fld	fa1,128(a1)
    4314:	0000                	unimp
    4316:	21e4                	fld	fs1,192(a1)
    4318:	0000                	unimp
    431a:	0001                	nop
    431c:	e85d                	bnez	s0,43d2 <_printf_float+0x242>
    431e:	0021                	c.nop	8
    4320:	0800                	addi	s0,sp,16
    4322:	0022                	c.slli	zero,0x8
    4324:	0100                	addi	s0,sp,128
    4326:	5d00                	lw	s0,56(a0)
    4328:	220c                	fld	fa1,0(a2)
    432a:	0000                	unimp
    432c:	221c                	fld	fa5,0(a2)
    432e:	0000                	unimp
    4330:	0001                	nop
    4332:	1c5d                	addi	s8,s8,-9
    4334:	0022                	c.slli	zero,0x8
    4336:	2800                	fld	fs0,16(s0)
    4338:	0022                	c.slli	zero,0x8
    433a:	0100                	addi	s0,sp,128
    433c:	6100                	flw	fs0,0(a0)
    433e:	2228                	fld	fa0,64(a2)
    4340:	0000                	unimp
    4342:	2238                	fld	fa4,64(a2)
    4344:	0000                	unimp
    4346:	0001                	nop
    4348:	405d                	c.li	zero,23
    434a:	0022                	c.slli	zero,0x8
    434c:	4c00                	lw	s0,24(s0)
    434e:	0022                	c.slli	zero,0x8
    4350:	0100                	addi	s0,sp,128
    4352:	5d00                	lw	s0,56(a0)
    4354:	227c                	fld	fa5,192(a2)
    4356:	0000                	unimp
    4358:	2288                	fld	fa0,0(a3)
    435a:	0000                	unimp
    435c:	0001                	nop
    435e:	945d                	srai	s0,s0,0x37
    4360:	0022                	c.slli	zero,0x8
    4362:	a000                	fsd	fs0,0(s0)
    4364:	0022                	c.slli	zero,0x8
    4366:	0100                	addi	s0,sp,128
    4368:	5d00                	lw	s0,56(a0)
	...
    4372:	1f74                	addi	a3,sp,956
    4374:	0000                	unimp
    4376:	1fa0                	addi	s0,sp,1016
    4378:	0000                	unimp
    437a:	0002                	c.slli64	zero
    437c:	9f30                	0x9f30
    437e:	1fa0                	addi	s0,sp,1016
    4380:	0000                	unimp
    4382:	1ff4                	addi	a3,sp,1020
    4384:	0000                	unimp
    4386:	0002                	c.slli64	zero
    4388:	9f34                	0x9f34
    438a:	1ff4                	addi	a3,sp,1020
    438c:	0000                	unimp
    438e:	2034                	fld	fa3,64(s0)
    4390:	0000                	unimp
    4392:	0002                	c.slli64	zero
    4394:	9f35                	0x9f35
    4396:	2034                	fld	fa3,64(s0)
    4398:	0000                	unimp
    439a:	2054                	fld	fa3,128(s0)
    439c:	0000                	unimp
    439e:	0002                	c.slli64	zero
    43a0:	9f31                	0x9f31
    43a2:	2054                	fld	fa3,128(s0)
    43a4:	0000                	unimp
    43a6:	206c                	fld	fa1,192(s0)
    43a8:	0000                	unimp
    43aa:	0002                	c.slli64	zero
    43ac:	9f30                	0x9f30
    43ae:	206c                	fld	fa1,192(s0)
    43b0:	0000                	unimp
    43b2:	20a0                	fld	fs0,64(s1)
    43b4:	0000                	unimp
    43b6:	0002                	c.slli64	zero
    43b8:	9f31                	0x9f31
    43ba:	20ac                	fld	fa1,64(s1)
    43bc:	0000                	unimp
    43be:	20e0                	fld	fs0,192(s1)
    43c0:	0000                	unimp
    43c2:	0002                	c.slli64	zero
    43c4:	9f32                	add	t5,t5,a2
    43c6:	20e0                	fld	fs0,192(s1)
    43c8:	0000                	unimp
    43ca:	20f4                	fld	fa3,192(s1)
    43cc:	0000                	unimp
    43ce:	0002                	c.slli64	zero
    43d0:	9f31                	0x9f31
    43d2:	20f4                	fld	fa3,192(s1)
    43d4:	0000                	unimp
    43d6:	2118                	fld	fa4,0(a0)
    43d8:	0000                	unimp
    43da:	0002                	c.slli64	zero
    43dc:	9f34                	0x9f34
    43de:	2118                	fld	fa4,0(a0)
    43e0:	0000                	unimp
    43e2:	2150                	fld	fa2,128(a0)
    43e4:	0000                	unimp
    43e6:	0002                	c.slli64	zero
    43e8:	21509f33          	0x21509f33
    43ec:	0000                	unimp
    43ee:	2160                	fld	fs0,192(a0)
    43f0:	0000                	unimp
    43f2:	0002                	c.slli64	zero
    43f4:	9f31                	0x9f31
    43f6:	2160                	fld	fs0,192(a0)
    43f8:	0000                	unimp
    43fa:	218c                	fld	fa1,0(a1)
    43fc:	0000                	unimp
    43fe:	0002                	c.slli64	zero
    4400:	9f36                	add	t5,t5,a3
    4402:	218c                	fld	fa1,0(a1)
    4404:	0000                	unimp
    4406:	21b0                	fld	fa2,64(a1)
    4408:	0000                	unimp
    440a:	0002                	c.slli64	zero
    440c:	21b09f37          	lui	t5,0x21b09
    4410:	0000                	unimp
    4412:	21c8                	fld	fa0,128(a1)
    4414:	0000                	unimp
    4416:	0002                	c.slli64	zero
    4418:	9f31                	0x9f31
    441a:	21c8                	fld	fa0,128(a1)
    441c:	0000                	unimp
    441e:	21e4                	fld	fs1,192(a1)
    4420:	0000                	unimp
    4422:	0002                	c.slli64	zero
    4424:	21e49f37          	lui	t5,0x21e49
    4428:	0000                	unimp
    442a:	2240                	fld	fs0,128(a2)
    442c:	0000                	unimp
    442e:	0002                	c.slli64	zero
    4430:	9f35                	0x9f35
    4432:	2240                	fld	fs0,128(a2)
    4434:	0000                	unimp
    4436:	2248                	fld	fa0,128(a2)
    4438:	0000                	unimp
    443a:	0002                	c.slli64	zero
    443c:	9f30                	0x9f30
    443e:	2248                	fld	fa0,128(a2)
    4440:	0000                	unimp
    4442:	2254                	fld	fa3,128(a2)
    4444:	0000                	unimp
    4446:	0002                	c.slli64	zero
    4448:	22549f37          	lui	t5,0x22549
    444c:	0000                	unimp
    444e:	225c                	fld	fa5,128(a2)
    4450:	0000                	unimp
    4452:	0002                	c.slli64	zero
    4454:	9f36                	add	t5,t5,a3
    4456:	225c                	fld	fa5,128(a2)
    4458:	0000                	unimp
    445a:	2268                	fld	fa0,192(a2)
    445c:	0000                	unimp
    445e:	0002                	c.slli64	zero
    4460:	22689f33          	0x22689f33
    4464:	0000                	unimp
    4466:	2274                	fld	fa3,192(a2)
    4468:	0000                	unimp
    446a:	0002                	c.slli64	zero
    446c:	9f30                	0x9f30
    446e:	2274                	fld	fa3,192(a2)
    4470:	0000                	unimp
    4472:	227c                	fld	fa5,192(a2)
    4474:	0000                	unimp
    4476:	0002                	c.slli64	zero
    4478:	9f32                	add	t5,t5,a2
    447a:	227c                	fld	fa5,192(a2)
    447c:	0000                	unimp
    447e:	2288                	fld	fa0,0(a3)
    4480:	0000                	unimp
    4482:	0002                	c.slli64	zero
    4484:	22889f37          	lui	t5,0x22889
    4488:	0000                	unimp
    448a:	2294                	fld	fa3,0(a3)
    448c:	0000                	unimp
    448e:	0002                	c.slli64	zero
    4490:	9f35                	0x9f35
    4492:	2294                	fld	fa3,0(a3)
    4494:	0000                	unimp
    4496:	22a0                	fld	fs0,64(a3)
    4498:	0000                	unimp
    449a:	0002                	c.slli64	zero
    449c:	9f34                	0x9f34
	...
    44a6:	1f88                	addi	a0,sp,1008
    44a8:	0000                	unimp
    44aa:	1fa8                	addi	a0,sp,1016
    44ac:	0000                	unimp
    44ae:	0001                	nop
    44b0:	005d                	c.nop	23
    44b2:	0000                	unimp
    44b4:	0000                	unimp
    44b6:	0000                	unimp
    44b8:	5400                	lw	s0,40(s0)
    44ba:	0020                	addi	s0,sp,8
    44bc:	8c00                	0x8c00
    44be:	0020                	addi	s0,sp,8
    44c0:	0200                	addi	s0,sp,256
    44c2:	3000                	fld	fs0,32(s0)
    44c4:	ac9f 0020 0c00      	0xc000020ac9f
    44ca:	0021                	c.nop	8
    44cc:	0200                	addi	s0,sp,256
    44ce:	3000                	fld	fs0,32(s0)
    44d0:	009f 0022 3400      	0x34000022009f
    44d6:	0022                	c.slli	zero,0x8
    44d8:	0200                	addi	s0,sp,256
    44da:	3000                	fld	fs0,32(s0)
    44dc:	749f 0022 7c00      	0x7c000022749f
    44e2:	0022                	c.slli	zero,0x8
    44e4:	0200                	addi	s0,sp,256
    44e6:	3000                	fld	fs0,32(s0)
    44e8:	009f 0000 0000      	0x9f
    44ee:	0000                	unimp
    44f0:	c400                	sw	s0,8(s0)
    44f2:	001f d400 001f      	0x1fd400001f
    44f8:	0100                	addi	s0,sp,128
    44fa:	5d00                	lw	s0,56(a0)
    44fc:	1fe8                	addi	a0,sp,1020
    44fe:	0000                	unimp
    4500:	1ff8                	addi	a4,sp,1020
    4502:	0000                	unimp
    4504:	0001                	nop
    4506:	005d                	c.nop	23
    4508:	0000                	unimp
    450a:	0000                	unimp
    450c:	0000                	unimp
    450e:	8c00                	0x8c00
    4510:	0020                	addi	s0,sp,8
    4512:	a000                	fsd	fs0,0(s0)
    4514:	0020                	addi	s0,sp,8
    4516:	0200                	addi	s0,sp,256
    4518:	3000                	fld	fs0,32(s0)
    451a:	009f 0000 0000      	0x9f
    4520:	0000                	unimp
    4522:	2000                	fld	fs0,0(s0)
    4524:	0020                	addi	s0,sp,8
    4526:	2800                	fld	fs0,16(s0)
    4528:	0020                	addi	s0,sp,8
    452a:	0100                	addi	s0,sp,128
    452c:	5d00                	lw	s0,56(a0)
	...
    4536:	2034                	fld	fa3,64(s0)
    4538:	0000                	unimp
    453a:	2054                	fld	fa3,128(s0)
    453c:	0000                	unimp
    453e:	0002                	c.slli64	zero
    4540:	9f30                	0x9f30
	...
    454a:	20c0                	fld	fs0,128(s1)
    454c:	0000                	unimp
    454e:	20d8                	fld	fa4,128(s1)
    4550:	0000                	unimp
    4552:	0001                	nop
    4554:	0061                	c.nop	24
    4556:	0000                	unimp
    4558:	0000                	unimp
    455a:	0000                	unimp
    455c:	d800                	sw	s0,48(s0)
    455e:	0020                	addi	s0,sp,8
    4560:	f400                	fsw	fs0,40(s0)
    4562:	0020                	addi	s0,sp,8
    4564:	0200                	addi	s0,sp,256
    4566:	3000                	fld	fs0,32(s0)
    4568:	f49f 0020 0c00      	0xc000020f49f
    456e:	0021                	c.nop	8
    4570:	0200                	addi	s0,sp,256
    4572:	3100                	fld	fs0,32(a0)
    4574:	1c9f 0022 3400      	0x340000221c9f
    457a:	0022                	c.slli	zero,0x8
    457c:	0200                	addi	s0,sp,256
    457e:	3000                	fld	fs0,32(s0)
    4580:	009f 0000 0000      	0x9f
    4586:	0000                	unimp
    4588:	7000                	flw	fs0,32(s0)
    458a:	0021                	c.nop	8
    458c:	7800                	flw	fs0,48(s0)
    458e:	0021                	c.nop	8
    4590:	0100                	addi	s0,sp,128
    4592:	5f00                	lw	s0,56(a4)
    4594:	2178                	fld	fa4,192(a0)
    4596:	0000                	unimp
    4598:	217c                	fld	fa5,192(a0)
    459a:	0000                	unimp
    459c:	307f0003          	lb	zero,775(t5) # 22889307 <__freertos_irq_stack_top+0x21879307>
    45a0:	7c9f 0021 8800      	0x880000217c9f
    45a6:	0021                	c.nop	8
    45a8:	0200                	addi	s0,sp,256
    45aa:	7c00                	flw	fs0,56(s0)
    45ac:	0001                	nop
    45ae:	0000                	unimp
    45b0:	0000                	unimp
    45b2:	0000                	unimp
    45b4:	5000                	lw	s0,32(s0)
    45b6:	0021                	c.nop	8
    45b8:	6000                	flw	fs0,0(s0)
    45ba:	0021                	c.nop	8
    45bc:	0200                	addi	s0,sp,256
    45be:	3000                	fld	fs0,32(s0)
    45c0:	8c9f 0021 e400      	0xe40000218c9f
    45c6:	0021                	c.nop	8
    45c8:	0200                	addi	s0,sp,256
    45ca:	3100                	fld	fs0,32(a0)
    45cc:	489f 0022 5400      	0x54000022489f
    45d2:	0022                	c.slli	zero,0x8
    45d4:	0200                	addi	s0,sp,256
    45d6:	3100                	fld	fs0,32(a0)
    45d8:	7c9f 0022 8800      	0x880000227c9f
    45de:	0022                	c.slli	zero,0x8
    45e0:	0200                	addi	s0,sp,256
    45e2:	3100                	fld	fs0,32(a0)
    45e4:	009f 0000 0000      	0x9f
    45ea:	0000                	unimp
    45ec:	a400                	fsd	fs0,8(s0)
    45ee:	0021                	c.nop	8
    45f0:	a800                	fsd	fs0,16(s0)
    45f2:	0021                	c.nop	8
    45f4:	0100                	addi	s0,sp,128
    45f6:	5d00                	lw	s0,56(a0)
	...
    4600:	21b0                	fld	fa2,64(a1)
    4602:	0000                	unimp
    4604:	21c8                	fld	fa0,128(a1)
    4606:	0000                	unimp
    4608:	0002                	c.slli64	zero
    460a:	9f30                	0x9f30
	...
    4614:	1db4                	addi	a3,sp,760
    4616:	0000                	unimp
    4618:	1db8                	addi	a4,sp,760
    461a:	0000                	unimp
    461c:	0001                	nop
    461e:	b85a                	fsd	fs6,48(sp)
    4620:	001d                	c.nop	7
    4622:	3f00                	fld	fs0,56(a4)
    4624:	001f 0100 6100      	0x61000100001f
    462a:	00001f3f 00001f40 	0x1f4000001f3f
    4632:	0006                	c.slli	zero,0x1
    4634:	315a01f3          	0x315a01f3
    4638:	9f1c                	0x9f1c
    463a:	1f40                	addi	s0,sp,948
    463c:	0000                	unimp
    463e:	00001f6f          	jal	t5,563e <quorem+0x14a>
    4642:	0001                	nop
    4644:	6f61                	lui	t5,0x18
    4646:	001f 7000 001f      	0x1f7000001f
    464c:	0600                	addi	s0,sp,768
    464e:	f300                	fsw	fs0,32(a4)
    4650:	5a01                	li	s4,-32
    4652:	1c31                	addi	s8,s8,-20
    4654:	009f 0000 0000      	0x9f
    465a:	0000                	unimp
    465c:	b400                	fsd	fs0,40(s0)
    465e:	001d                	c.nop	7
    4660:	d000                	sw	s0,32(s0)
    4662:	001d                	c.nop	7
    4664:	0100                	addi	s0,sp,128
    4666:	5b00                	lw	s0,48(a4)
    4668:	1dd0                	addi	a2,sp,756
    466a:	0000                	unimp
    466c:	1e0c                	addi	a1,sp,816
    466e:	0000                	unimp
    4670:	7f7c0003          	lb	zero,2039(s8)
    4674:	0c9f 001e 4c00      	0x4c00001e0c9f
    467a:	001e                	c.slli	zero,0x7
    467c:	0100                	addi	s0,sp,128
    467e:	5c00                	lw	s0,56(s0)
    4680:	1ebc                	addi	a5,sp,888
    4682:	0000                	unimp
    4684:	1ee0                	addi	s0,sp,892
    4686:	0000                	unimp
    4688:	0001                	nop
    468a:	005c                	addi	a5,sp,4
    468c:	001f 0400 001f      	0x1f0400001f
    4692:	0100                	addi	s0,sp,128
    4694:	5c00                	lw	s0,56(s0)
    4696:	1f40                	addi	s0,sp,948
    4698:	0000                	unimp
    469a:	1f48                	addi	a0,sp,948
    469c:	0000                	unimp
    469e:	0001                	nop
    46a0:	585c                	lw	a5,52(s0)
    46a2:	001f 6400 001f      	0x1f6400001f
    46a8:	0100                	addi	s0,sp,128
    46aa:	5b00                	lw	s0,48(a4)
    46ac:	1f64                	addi	s1,sp,956
    46ae:	0000                	unimp
    46b0:	1f70                	addi	a2,sp,956
    46b2:	0000                	unimp
    46b4:	0004                	0x4
    46b6:	9f5b01f3          	0x9f5b01f3
	...
    46c2:	1db4                	addi	a3,sp,760
    46c4:	0000                	unimp
    46c6:	1dc8                	addi	a0,sp,756
    46c8:	0000                	unimp
    46ca:	0001                	nop
    46cc:	c85c                	sw	a5,20(s0)
    46ce:	001d                	c.nop	7
    46d0:	3f00                	fld	fs0,56(a4)
    46d2:	001f 0100 6f00      	0x6f000100001f
    46d8:	00001f3f 00001f40 	0x1f4000001f3f
    46e0:	0004                	0x4
    46e2:	9f5c01f3          	0x9f5c01f3
    46e6:	1f40                	addi	s0,sp,948
    46e8:	0000                	unimp
    46ea:	1f58                	addi	a4,sp,948
    46ec:	0000                	unimp
    46ee:	0001                	nop
    46f0:	001f586f          	jal	a6,f9ef0 <_data_lma+0xef8d8>
    46f4:	6000                	flw	fs0,0(s0)
    46f6:	001f 0100 5c00      	0x5c000100001f
    46fc:	1f60                	addi	s0,sp,956
    46fe:	0000                	unimp
    4700:	00001f6f          	jal	t5,5700 <_dtoa_r+0x40>
    4704:	0001                	nop
    4706:	001f6f6f          	jal	t5,faf06 <_data_lma+0xf08ee>
    470a:	7000                	flw	fs0,32(s0)
    470c:	001f 0400 f300      	0xf3000400001f
    4712:	5c01                	li	s8,-32
    4714:	009f 0000 0000      	0x9f
    471a:	0000                	unimp
    471c:	b400                	fsd	fs0,40(s0)
    471e:	001d                	c.nop	7
    4720:	0c00                	addi	s0,sp,528
    4722:	001e                	c.slli	zero,0x7
    4724:	0200                	addi	s0,sp,256
    4726:	3000                	fld	fs0,32(s0)
    4728:	0c9f 001e 6c00      	0x6c00001e0c9f
    472e:	001e                	c.slli	zero,0x7
    4730:	0100                	addi	s0,sp,128
    4732:	5d00                	lw	s0,56(a0)
    4734:	1eb8                	addi	a4,sp,888
    4736:	0000                	unimp
    4738:	1ec0                	addi	s0,sp,884
    473a:	0000                	unimp
    473c:	0001                	nop
    473e:	c05f 001e 3f00      	0x3f00001ec05f
    4744:	001f 0100 5d00      	0x5d000100001f
    474a:	1f40                	addi	s0,sp,948
    474c:	0000                	unimp
    474e:	1f58                	addi	a4,sp,948
    4750:	0000                	unimp
    4752:	0001                	nop
    4754:	585d                	li	a6,-9
    4756:	001f 5c00 001f      	0x1f5c00001f
    475c:	0200                	addi	s0,sp,256
    475e:	3000                	fld	fs0,32(s0)
    4760:	5c9f 001f 6f00      	0x6f00001f5c9f
    4766:	001f 0100 5d00      	0x5d000100001f
    476c:	00001f6f          	jal	t5,576c <_dtoa_r+0xac>
    4770:	1f70                	addi	a2,sp,956
    4772:	0000                	unimp
    4774:	0002                	c.slli64	zero
    4776:	9f30                	0x9f30
	...
    4780:	1db4                	addi	a3,sp,760
    4782:	0000                	unimp
    4784:	1e30                	addi	a2,sp,824
    4786:	0000                	unimp
    4788:	0002                	c.slli64	zero
    478a:	9f30                	0x9f30
    478c:	1e58                	addi	a4,sp,820
    478e:	0000                	unimp
    4790:	1e64                	addi	s1,sp,828
    4792:	0000                	unimp
    4794:	0002                	c.slli64	zero
    4796:	9f38                	0x9f38
    4798:	1ef0                	addi	a2,sp,892
    479a:	0000                	unimp
    479c:	1f00                	addi	s0,sp,944
    479e:	0000                	unimp
    47a0:	0002                	c.slli64	zero
    47a2:	9f34                	0x9f34
    47a4:	1f14                	addi	a3,sp,944
    47a6:	0000                	unimp
    47a8:	1f1c                	addi	a5,sp,944
    47aa:	0000                	unimp
    47ac:	0002                	c.slli64	zero
    47ae:	9f38                	0x9f38
    47b0:	1f58                	addi	a4,sp,948
    47b2:	0000                	unimp
    47b4:	1f70                	addi	a2,sp,956
    47b6:	0000                	unimp
    47b8:	0002                	c.slli64	zero
    47ba:	9f30                	0x9f30
	...
    47c4:	1e64                	addi	s1,sp,828
    47c6:	0000                	unimp
    47c8:	1e70                	addi	a2,sp,828
    47ca:	0000                	unimp
    47cc:	0002                	c.slli64	zero
    47ce:	9f30                	0x9f30
    47d0:	1e70                	addi	a2,sp,828
    47d2:	0000                	unimp
    47d4:	1e78                	addi	a4,sp,828
    47d6:	0000                	unimp
    47d8:	0002                	c.slli64	zero
    47da:	9f31                	0x9f31
    47dc:	1e78                	addi	a4,sp,828
    47de:	0000                	unimp
    47e0:	1e80                	addi	s0,sp,880
    47e2:	0000                	unimp
    47e4:	0002                	c.slli64	zero
    47e6:	9f32                	add	t5,t5,a2
    47e8:	1e80                	addi	s0,sp,880
    47ea:	0000                	unimp
    47ec:	1e88                	addi	a0,sp,880
    47ee:	0000                	unimp
    47f0:	0002                	c.slli64	zero
    47f2:	1e889f33          	0x1e889f33
    47f6:	0000                	unimp
    47f8:	1e94                	addi	a3,sp,880
    47fa:	0000                	unimp
    47fc:	0002                	c.slli64	zero
    47fe:	9f34                	0x9f34
    4800:	1e94                	addi	a3,sp,880
    4802:	0000                	unimp
    4804:	1e9c                	addi	a5,sp,880
    4806:	0000                	unimp
    4808:	0002                	c.slli64	zero
    480a:	9f35                	0x9f35
    480c:	1e9c                	addi	a5,sp,880
    480e:	0000                	unimp
    4810:	1ea4                	addi	s1,sp,888
    4812:	0000                	unimp
    4814:	0002                	c.slli64	zero
    4816:	9f36                	add	t5,t5,a3
    4818:	1ea4                	addi	s1,sp,888
    481a:	0000                	unimp
    481c:	1eb0                	addi	a2,sp,888
    481e:	0000                	unimp
    4820:	0002                	c.slli64	zero
    4822:	00009f37          	lui	t5,0x9
    4826:	0000                	unimp
    4828:	0000                	unimp
    482a:	0000                	unimp
    482c:	1db4                	addi	a3,sp,760
    482e:	0000                	unimp
    4830:	1e30                	addi	a2,sp,824
    4832:	0000                	unimp
    4834:	0002                	c.slli64	zero
    4836:	9f30                	0x9f30
    4838:	1e58                	addi	a4,sp,820
    483a:	0000                	unimp
    483c:	1eac                	addi	a1,sp,888
    483e:	0000                	unimp
    4840:	0001                	nop
    4842:	f05e                	fsw	fs7,32(sp)
    4844:	001e                	c.slli	zero,0x7
    4846:	0000                	unimp
    4848:	001f 0100 5e00      	0x5e000100001f
    484e:	1f14                	addi	a3,sp,944
    4850:	0000                	unimp
    4852:	00001f3f 485e0001 	0x485e000100001f3f
    485a:	001f 5800 001f      	0x1f5800001f
    4860:	0100                	addi	s0,sp,128
    4862:	5e00                	lw	s0,56(a2)
    4864:	1f58                	addi	a4,sp,948
    4866:	0000                	unimp
    4868:	1f70                	addi	a2,sp,956
    486a:	0000                	unimp
    486c:	0002                	c.slli64	zero
    486e:	9f30                	0x9f30
	...
    4878:	22a0                	fld	fs0,64(a3)
    487a:	0000                	unimp
    487c:	2334                	fld	fa3,64(a4)
    487e:	0000                	unimp
    4880:	0001                	nop
    4882:	345a                	fld	fs0,432(sp)
    4884:	70000023          	sb	zero,1792(zero) # 700 <main+0x688>
    4888:	01000023          	sb	a6,0(zero) # 0 <_start>
    488c:	6700                	flw	fs0,8(a4)
    488e:	2370                	fld	fa2,192(a4)
    4890:	0000                	unimp
    4892:	2498                	fld	fa4,8(s1)
    4894:	0000                	unimp
    4896:	0004                	0x4
    4898:	9f5a01f3          	0x9f5a01f3
    489c:	2498                	fld	fa4,8(s1)
    489e:	0000                	unimp
    48a0:	24a4                	fld	fs1,72(s1)
    48a2:	0000                	unimp
    48a4:	0001                	nop
    48a6:	a45a                	fsd	fs6,8(sp)
    48a8:	0024                	addi	s1,sp,8
    48aa:	ac00                	fsd	fs0,24(s0)
    48ac:	0024                	addi	s1,sp,8
    48ae:	0400                	addi	s0,sp,512
    48b0:	f300                	fsw	fs0,32(a4)
    48b2:	5a01                	li	s4,-32
    48b4:	009f 0000 0000      	0x9f
    48ba:	0000                	unimp
    48bc:	a000                	fsd	fs0,0(s0)
    48be:	0022                	c.slli	zero,0x8
    48c0:	d000                	sw	s0,32(s0)
    48c2:	0022                	c.slli	zero,0x8
    48c4:	0100                	addi	s0,sp,128
    48c6:	5b00                	lw	s0,48(a4)
    48c8:	22d0                	fld	fa2,128(a3)
    48ca:	0000                	unimp
    48cc:	2404                	fld	fs1,8(s0)
    48ce:	0000                	unimp
    48d0:	0001                	nop
    48d2:	0458                	addi	a4,sp,516
    48d4:	0024                	addi	s1,sp,8
    48d6:	9800                	0x9800
    48d8:	0024                	addi	s1,sp,8
    48da:	0400                	addi	s0,sp,512
    48dc:	f300                	fsw	fs0,32(a4)
    48de:	5b01                	li	s6,-32
    48e0:	989f 0024 ac00      	0xac000024989f
    48e6:	0024                	addi	s1,sp,8
    48e8:	0100                	addi	s0,sp,128
    48ea:	5800                	lw	s0,48(s0)
	...
    48f4:	22a0                	fld	fs0,64(a3)
    48f6:	0000                	unimp
    48f8:	2334                	fld	fa3,64(a4)
    48fa:	0000                	unimp
    48fc:	0001                	nop
    48fe:	345c                	fld	fa5,168(s0)
    4900:	98000023          	sb	zero,-1664(zero) # fffff980 <__freertos_irq_stack_top+0xfefef980>
    4904:	0024                	addi	s1,sp,8
    4906:	0400                	addi	s0,sp,512
    4908:	f300                	fsw	fs0,32(a4)
    490a:	5c01                	li	s8,-32
    490c:	989f 0024 a400      	0xa4000024989f
    4912:	0024                	addi	s1,sp,8
    4914:	0100                	addi	s0,sp,128
    4916:	5c00                	lw	s0,56(s0)
    4918:	24a4                	fld	fs1,72(s1)
    491a:	0000                	unimp
    491c:	24ac                	fld	fa1,72(s1)
    491e:	0000                	unimp
    4920:	0004                	0x4
    4922:	9f5c01f3          	0x9f5c01f3
	...
    492e:	22a0                	fld	fs0,64(a3)
    4930:	0000                	unimp
    4932:	2334                	fld	fa3,64(a4)
    4934:	0000                	unimp
    4936:	0001                	nop
    4938:	345d                	jal	43de <_printf_float+0x24e>
    493a:	98000023          	sb	zero,-1664(zero) # fffff980 <__freertos_irq_stack_top+0xfefef980>
    493e:	0024                	addi	s1,sp,8
    4940:	0400                	addi	s0,sp,512
    4942:	f300                	fsw	fs0,32(a4)
    4944:	5d01                	li	s10,-32
    4946:	989f 0024 a400      	0xa4000024989f
    494c:	0024                	addi	s1,sp,8
    494e:	0100                	addi	s0,sp,128
    4950:	5d00                	lw	s0,56(a0)
    4952:	24a4                	fld	fs1,72(s1)
    4954:	0000                	unimp
    4956:	24ac                	fld	fa1,72(s1)
    4958:	0000                	unimp
    495a:	0004                	0x4
    495c:	9f5d01f3          	0x9f5d01f3
	...
    4968:	22a0                	fld	fs0,64(a3)
    496a:	0000                	unimp
    496c:	2334                	fld	fa3,64(a4)
    496e:	0000                	unimp
    4970:	0001                	nop
    4972:	345e                	fld	fs0,496(sp)
    4974:	98000023          	sb	zero,-1664(zero) # fffff980 <__freertos_irq_stack_top+0xfefef980>
    4978:	0024                	addi	s1,sp,8
    497a:	0400                	addi	s0,sp,512
    497c:	f300                	fsw	fs0,32(a4)
    497e:	5e01                	li	t3,-32
    4980:	989f 0024 a400      	0xa4000024989f
    4986:	0024                	addi	s1,sp,8
    4988:	0100                	addi	s0,sp,128
    498a:	5e00                	lw	s0,56(a2)
    498c:	24a4                	fld	fs1,72(s1)
    498e:	0000                	unimp
    4990:	24ac                	fld	fa1,72(s1)
    4992:	0000                	unimp
    4994:	0004                	0x4
    4996:	9f5e01f3          	0x9f5e01f3
	...
    49a2:	22a0                	fld	fs0,64(a3)
    49a4:	0000                	unimp
    49a6:	2334                	fld	fa3,64(a4)
    49a8:	0000                	unimp
    49aa:	0001                	nop
    49ac:	345f 0023 2c00      	0x2c000023345f
    49b2:	0024                	addi	s1,sp,8
    49b4:	0400                	addi	s0,sp,512
    49b6:	f300                	fsw	fs0,32(a4)
    49b8:	5f01                	li	t5,-32
    49ba:	2c9f 0024 4000      	0x400000242c9f
    49c0:	0024                	addi	s1,sp,8
    49c2:	0100                	addi	s0,sp,128
    49c4:	6300                	flw	fs0,0(a4)
    49c6:	2440                	fld	fs0,136(s0)
    49c8:	0000                	unimp
    49ca:	2448                	fld	fa0,136(s0)
    49cc:	0000                	unimp
    49ce:	0001                	nop
    49d0:	585a                	lw	a6,180(sp)
    49d2:	0024                	addi	s1,sp,8
    49d4:	8800                	0x8800
    49d6:	0024                	addi	s1,sp,8
    49d8:	0100                	addi	s0,sp,128
    49da:	5a00                	lw	s0,48(a2)
    49dc:	2488                	fld	fa0,8(s1)
    49de:	0000                	unimp
    49e0:	2498                	fld	fa4,8(s1)
    49e2:	0000                	unimp
    49e4:	0004                	0x4
    49e6:	9f5f01f3          	0x9f5f01f3
    49ea:	2498                	fld	fa4,8(s1)
    49ec:	0000                	unimp
    49ee:	24a4                	fld	fs1,72(s1)
    49f0:	0000                	unimp
    49f2:	0001                	nop
    49f4:	a45f 0024 ac00      	0xac000024a45f
    49fa:	0024                	addi	s1,sp,8
    49fc:	0400                	addi	s0,sp,512
    49fe:	f300                	fsw	fs0,32(a4)
    4a00:	5f01                	li	t5,-32
    4a02:	009f 0000 0000      	0x9f
    4a08:	0000                	unimp
    4a0a:	dc00                	sw	s0,56(s0)
    4a0c:	0022                	c.slli	zero,0x8
    4a0e:	2c00                	fld	fs0,24(s0)
    4a10:	0024                	addi	s1,sp,8
    4a12:	0200                	addi	s0,sp,256
    4a14:	3000                	fld	fs0,32(s0)
    4a16:	889f 0024 ac00      	0xac000024889f
    4a1c:	0024                	addi	s1,sp,8
    4a1e:	0200                	addi	s0,sp,256
    4a20:	3000                	fld	fs0,32(s0)
    4a22:	009f 0000 0000      	0x9f
    4a28:	0000                	unimp
    4a2a:	4400                	lw	s0,8(s0)
    4a2c:	4c000023          	sb	zero,1216(zero) # 4c0 <main+0x448>
    4a30:	01000023          	sb	a6,0(zero) # 0 <_start>
    4a34:	5a00                	lw	s0,48(a2)
	...
    4a3e:	23d4                	fld	fa3,128(a5)
    4a40:	0000                	unimp
    4a42:	23dc                	fld	fa5,128(a5)
    4a44:	0000                	unimp
    4a46:	0001                	nop
    4a48:	005a                	c.slli	zero,0x16
    4a4a:	0000                	unimp
    4a4c:	0000                	unimp
    4a4e:	0000                	unimp
    4a50:	9000                	0x9000
    4a52:	18000027          	0x18000027
    4a56:	002a                	c.slli	zero,0xa
    4a58:	0100                	addi	s0,sp,128
    4a5a:	5a00                	lw	s0,48(a2)
    4a5c:	2a18                	fld	fa4,16(a2)
    4a5e:	0000                	unimp
    4a60:	2ca0                	fld	fs0,88(s1)
    4a62:	0000                	unimp
    4a64:	0004                	0x4
    4a66:	9f5a01f3          	0x9f5a01f3
	...
    4a72:	2790                	fld	fa2,8(a5)
    4a74:	0000                	unimp
    4a76:	27b4                	fld	fa3,72(a5)
    4a78:	0000                	unimp
    4a7a:	0001                	nop
    4a7c:	0027b45b          	0x27b45b
    4a80:	1400                	addi	s0,sp,544
    4a82:	002a                	c.slli	zero,0xa
    4a84:	0400                	addi	s0,sp,512
    4a86:	f300                	fsw	fs0,32(a4)
    4a88:	5b01                	li	s6,-32
    4a8a:	9c9f 002c a000      	0xa000002c9c9f
    4a90:	002c                	addi	a1,sp,8
    4a92:	0100                	addi	s0,sp,128
    4a94:	5a00                	lw	s0,48(a2)
	...
    4a9e:	2790                	fld	fa2,8(a5)
    4aa0:	0000                	unimp
    4aa2:	27b4                	fld	fa3,72(a5)
    4aa4:	0000                	unimp
    4aa6:	0001                	nop
    4aa8:	0000005b          	0x5b
    4aac:	0000                	unimp
    4aae:	0000                	unimp
    4ab0:	9000                	0x9000
    4ab2:	14000027          	0x14000027
    4ab6:	002a                	c.slli	zero,0xa
    4ab8:	0100                	addi	s0,sp,128
    4aba:	5a00                	lw	s0,48(a2)
	...
    4ac4:	27a4                	fld	fs1,72(a5)
    4ac6:	0000                	unimp
    4ac8:	27b4                	fld	fa3,72(a5)
    4aca:	0000                	unimp
    4acc:	0001                	nop
    4ace:	0000005b          	0x5b
    4ad2:	0000                	unimp
    4ad4:	0000                	unimp
    4ad6:	a400                	fsd	fs0,8(s0)
    4ad8:	d8000027          	0xd8000027
    4adc:	0028                	addi	a0,sp,8
    4ade:	0100                	addi	s0,sp,128
    4ae0:	5e00                	lw	s0,56(a2)
    4ae2:	28d8                	fld	fa4,144(s1)
    4ae4:	0000                	unimp
    4ae6:	2a14                	fld	fa3,16(a2)
    4ae8:	0000                	unimp
    4aea:	007a0007          	0x7a0007
    4aee:	2440                	fld	fs0,136(s0)
    4af0:	2540                	fld	fs0,136(a0)
    4af2:	009f 0000 0000      	0x9f
    4af8:	0000                	unimp
    4afa:	a400                	fsd	fs0,8(s0)
    4afc:	b0000027          	0xb0000027
    4b00:	01000027          	0x1000027
    4b04:	5b00                	lw	s0,48(a4)
    4b06:	27b0                	fld	fa2,72(a5)
    4b08:	0000                	unimp
    4b0a:	27c0                	fld	fs0,136(a5)
    4b0c:	0000                	unimp
    4b0e:	007f0007          	0x7f0007
    4b12:	010a                	slli	sp,sp,0x2
    4b14:	2720                	fld	fs0,72(a4)
    4b16:	e49f 0027 e800      	0xe8000027e49f
    4b1c:	07000027          	0x7000027
    4b20:	7f00                	flw	fs0,56(a4)
    4b22:	0a00                	addi	s0,sp,272
    4b24:	2001                	jal	4b24 <_printf_i+0x28>
    4b26:	28009f27          	0x28009f27
    4b2a:	0000                	unimp
    4b2c:	2810                	fld	fa2,16(s0)
    4b2e:	0000                	unimp
    4b30:	007f0007          	0x7f0007
    4b34:	010a                	slli	sp,sp,0x2
    4b36:	2720                	fld	fs0,72(a4)
    4b38:	289f 0028 3800      	0x38000028289f
    4b3e:	0028                	addi	a0,sp,8
    4b40:	0700                	addi	s0,sp,896
    4b42:	7f00                	flw	fs0,56(a4)
    4b44:	0a00                	addi	s0,sp,272
    4b46:	2001                	jal	4b46 <_printf_i+0x4a>
    4b48:	28509f27          	0x28509f27
    4b4c:	0000                	unimp
    4b4e:	2860                	fld	fs0,208(s0)
    4b50:	0000                	unimp
    4b52:	007f0007          	0x7f0007
    4b56:	010a                	slli	sp,sp,0x2
    4b58:	2720                	fld	fs0,72(a4)
    4b5a:	789f 0028 8800      	0x88000028789f
    4b60:	0028                	addi	a0,sp,8
    4b62:	0700                	addi	s0,sp,896
    4b64:	7f00                	flw	fs0,56(a4)
    4b66:	0a00                	addi	s0,sp,272
    4b68:	2001                	jal	4b68 <_printf_i+0x6c>
    4b6a:	28a09f27          	0x28a09f27
    4b6e:	0000                	unimp
    4b70:	28b0                	fld	fa2,80(s1)
    4b72:	0000                	unimp
    4b74:	007f0007          	0x7f0007
    4b78:	010a                	slli	sp,sp,0x2
    4b7a:	2720                	fld	fs0,72(a4)
    4b7c:	c09f 0028 d000      	0xd0000028c09f
    4b82:	0028                	addi	a0,sp,8
    4b84:	0700                	addi	s0,sp,896
    4b86:	7f00                	flw	fs0,56(a4)
    4b88:	0a00                	addi	s0,sp,272
    4b8a:	2001                	jal	4b8a <_printf_i+0x8e>
    4b8c:	00009f27          	0x9f27
    4b90:	0000                	unimp
    4b92:	0000                	unimp
    4b94:	0000                	unimp
    4b96:	27a4                	fld	fs1,72(a5)
    4b98:	0000                	unimp
    4b9a:	27a8                	fld	fa0,72(a5)
    4b9c:	0000                	unimp
    4b9e:	0001                	nop
    4ba0:	a85d                	j	4c56 <_printf_i+0x15a>
    4ba2:	c8000027          	0xc8000027
    4ba6:	01000027          	0x1000027
    4baa:	5c00                	lw	s0,56(s0)
    4bac:	27c8                	fld	fa0,136(a5)
    4bae:	0000                	unimp
    4bb0:	27d4                	fld	fa3,136(a5)
    4bb2:	0000                	unimp
    4bb4:	0005                	c.nop	1
    4bb6:	007d                	c.nop	31
    4bb8:	2531                	jal	51c4 <_puts_r+0x14c>
    4bba:	d49f 0027 f000      	0xf0000027d49f
    4bc0:	01000027          	0x1000027
    4bc4:	5c00                	lw	s0,56(s0)
    4bc6:	27f0                	fld	fa2,200(a5)
    4bc8:	0000                	unimp
    4bca:	27f8                	fld	fa4,200(a5)
    4bcc:	0000                	unimp
    4bce:	0005                	c.nop	1
    4bd0:	007d                	c.nop	31
    4bd2:	2532                	fld	fa0,264(sp)
    4bd4:	f89f 0027 1800      	0x18000027f89f
    4bda:	0028                	addi	a0,sp,8
    4bdc:	0100                	addi	s0,sp,128
    4bde:	5b00                	lw	s0,48(a4)
    4be0:	2818                	fld	fa4,16(s0)
    4be2:	0000                	unimp
    4be4:	2820                	fld	fs0,80(s0)
    4be6:	0000                	unimp
    4be8:	0005                	c.nop	1
    4bea:	007d                	c.nop	31
    4bec:	209f2533          	0x209f2533
    4bf0:	0028                	addi	a0,sp,8
    4bf2:	4000                	lw	s0,0(s0)
    4bf4:	0028                	addi	a0,sp,8
    4bf6:	0100                	addi	s0,sp,128
    4bf8:	5c00                	lw	s0,56(s0)
    4bfa:	2840                	fld	fs0,144(s0)
    4bfc:	0000                	unimp
    4bfe:	2848                	fld	fa0,144(s0)
    4c00:	0000                	unimp
    4c02:	0005                	c.nop	1
    4c04:	007d                	c.nop	31
    4c06:	2534                	fld	fa3,72(a0)
    4c08:	489f 0028 6800      	0x68000028489f
    4c0e:	0028                	addi	a0,sp,8
    4c10:	0100                	addi	s0,sp,128
    4c12:	5b00                	lw	s0,48(a4)
    4c14:	2868                	fld	fa0,208(s0)
    4c16:	0000                	unimp
    4c18:	2870                	fld	fa2,208(s0)
    4c1a:	0000                	unimp
    4c1c:	0005                	c.nop	1
    4c1e:	007d                	c.nop	31
    4c20:	2535                	jal	524c <__swbuf_r+0x2c>
    4c22:	709f 0028 9000      	0x90000028709f
    4c28:	0028                	addi	a0,sp,8
    4c2a:	0100                	addi	s0,sp,128
    4c2c:	5c00                	lw	s0,56(s0)
    4c2e:	2890                	fld	fa2,16(s1)
    4c30:	0000                	unimp
    4c32:	2898                	fld	fa4,16(s1)
    4c34:	0000                	unimp
    4c36:	0005                	c.nop	1
    4c38:	007d                	c.nop	31
    4c3a:	2536                	fld	fa0,328(sp)
    4c3c:	989f 0028 b400      	0xb4000028989f
    4c42:	0028                	addi	a0,sp,8
    4c44:	0100                	addi	s0,sp,128
    4c46:	5d00                	lw	s0,56(a0)
    4c48:	28b4                	fld	fa3,80(s1)
    4c4a:	0000                	unimp
    4c4c:	28d4                	fld	fa3,144(s1)
    4c4e:	0000                	unimp
    4c50:	0002                	c.slli64	zero
    4c52:	9f30                	0x9f30
	...
    4c5c:	27a4                	fld	fs1,72(a5)
    4c5e:	0000                	unimp
    4c60:	27b4                	fld	fa3,72(a5)
    4c62:	0000                	unimp
    4c64:	0008                	0x8
    4c66:	007a007b          	0x7a007b
    4c6a:	9f1a3127          	fsd	fa7,-1566(s4) # 9f09e2 <_data_lma+0x9e63ca>
	...
    4c76:	27a4                	fld	fs1,72(a5)
    4c78:	0000                	unimp
    4c7a:	27b0                	fld	fa2,72(a5)
    4c7c:	0000                	unimp
    4c7e:	0002                	c.slli64	zero
    4c80:	9f30                	0x9f30
    4c82:	27b0                	fld	fa2,72(a5)
    4c84:	0000                	unimp
    4c86:	27c4                	fld	fs1,136(a5)
    4c88:	0000                	unimp
    4c8a:	0002                	c.slli64	zero
    4c8c:	9f31                	0x9f31
    4c8e:	27d8                	fld	fa4,136(a5)
    4c90:	0000                	unimp
    4c92:	27ec                	fld	fa1,200(a5)
    4c94:	0000                	unimp
    4c96:	0002                	c.slli64	zero
    4c98:	9f31                	0x9f31
    4c9a:	2800                	fld	fs0,16(s0)
    4c9c:	0000                	unimp
    4c9e:	2814                	fld	fa3,16(s0)
    4ca0:	0000                	unimp
    4ca2:	0002                	c.slli64	zero
    4ca4:	9f31                	0x9f31
    4ca6:	2828                	fld	fa0,80(s0)
    4ca8:	0000                	unimp
    4caa:	283c                	fld	fa5,80(s0)
    4cac:	0000                	unimp
    4cae:	0002                	c.slli64	zero
    4cb0:	9f31                	0x9f31
    4cb2:	2850                	fld	fa2,144(s0)
    4cb4:	0000                	unimp
    4cb6:	2864                	fld	fs1,208(s0)
    4cb8:	0000                	unimp
    4cba:	0002                	c.slli64	zero
    4cbc:	9f31                	0x9f31
    4cbe:	2878                	fld	fa4,208(s0)
    4cc0:	0000                	unimp
    4cc2:	288c                	fld	fa1,16(s1)
    4cc4:	0000                	unimp
    4cc6:	0002                	c.slli64	zero
    4cc8:	9f31                	0x9f31
    4cca:	28a0                	fld	fs0,80(s1)
    4ccc:	0000                	unimp
    4cce:	28b4                	fld	fa3,80(s1)
    4cd0:	0000                	unimp
    4cd2:	0002                	c.slli64	zero
    4cd4:	9f31                	0x9f31
    4cd6:	28c0                	fld	fs0,144(s1)
    4cd8:	0000                	unimp
    4cda:	28d4                	fld	fa3,144(s1)
    4cdc:	0000                	unimp
    4cde:	0002                	c.slli64	zero
    4ce0:	9f31                	0x9f31
	...
    4cea:	28f0                	fld	fa2,208(s1)
    4cec:	0000                	unimp
    4cee:	2900                	fld	fs0,16(a0)
    4cf0:	0000                	unimp
    4cf2:	007f0007          	0x7f0007
    4cf6:	010a                	slli	sp,sp,0x2
    4cf8:	2720                	fld	fs0,72(a4)
    4cfa:	189f 0029 2800      	0x28000029189f
    4d00:	0029                	c.nop	10
    4d02:	0700                	addi	s0,sp,896
    4d04:	7f00                	flw	fs0,56(a4)
    4d06:	0a00                	addi	s0,sp,272
    4d08:	2001                	jal	4d08 <_printf_i+0x20c>
    4d0a:	29409f27          	0x29409f27
    4d0e:	0000                	unimp
    4d10:	2950                	fld	fa2,144(a0)
    4d12:	0000                	unimp
    4d14:	007f0007          	0x7f0007
    4d18:	010a                	slli	sp,sp,0x2
    4d1a:	2720                	fld	fs0,72(a4)
    4d1c:	689f 0029 7800      	0x78000029689f
    4d22:	0029                	c.nop	10
    4d24:	0700                	addi	s0,sp,896
    4d26:	7f00                	flw	fs0,56(a4)
    4d28:	0a00                	addi	s0,sp,272
    4d2a:	2001                	jal	4d2a <_printf_i+0x22e>
    4d2c:	29909f27          	0x29909f27
    4d30:	0000                	unimp
    4d32:	29a0                	fld	fs0,80(a1)
    4d34:	0000                	unimp
    4d36:	007f0007          	0x7f0007
    4d3a:	010a                	slli	sp,sp,0x2
    4d3c:	2720                	fld	fs0,72(a4)
    4d3e:	b89f 0029 c800      	0xc8000029b89f
    4d44:	0029                	c.nop	10
    4d46:	0700                	addi	s0,sp,896
    4d48:	7f00                	flw	fs0,56(a4)
    4d4a:	0a00                	addi	s0,sp,272
    4d4c:	2001                	jal	4d4c <_printf_i+0x250>
    4d4e:	29e09f27          	0x29e09f27
    4d52:	0000                	unimp
    4d54:	29f0                	fld	fa2,208(a1)
    4d56:	0000                	unimp
    4d58:	007f0007          	0x7f0007
    4d5c:	010a                	slli	sp,sp,0x2
    4d5e:	2720                	fld	fs0,72(a4)
    4d60:	009f 002a 1000      	0x1000002a009f
    4d66:	002a                	c.slli	zero,0xa
    4d68:	0700                	addi	s0,sp,896
    4d6a:	7f00                	flw	fs0,56(a4)
    4d6c:	0a00                	addi	s0,sp,272
    4d6e:	2001                	jal	4d6e <_printf_i+0x272>
    4d70:	00009f27          	0x9f27
    4d74:	0000                	unimp
    4d76:	0000                	unimp
    4d78:	0000                	unimp
    4d7a:	28e4                	fld	fs1,208(s1)
    4d7c:	0000                	unimp
    4d7e:	28e8                	fld	fa0,208(s1)
    4d80:	0000                	unimp
    4d82:	0001                	nop
    4d84:	e85e                	fsw	fs7,16(sp)
    4d86:	0028                	addi	a0,sp,8
    4d88:	0800                	addi	s0,sp,16
    4d8a:	0029                	c.nop	10
    4d8c:	0100                	addi	s0,sp,128
    4d8e:	5c00                	lw	s0,56(s0)
    4d90:	2908                	fld	fa0,16(a0)
    4d92:	0000                	unimp
    4d94:	2910                	fld	fa2,16(a0)
    4d96:	0000                	unimp
    4d98:	0005                	c.nop	1
    4d9a:	007e                	c.slli	zero,0x1f
    4d9c:	2531                	jal	53a8 <__swsetup_r+0x40>
    4d9e:	109f 0029 3000      	0x30000029109f
    4da4:	0029                	c.nop	10
    4da6:	0100                	addi	s0,sp,128
    4da8:	5d00                	lw	s0,56(a0)
    4daa:	2930                	fld	fa2,80(a0)
    4dac:	0000                	unimp
    4dae:	2938                	fld	fa4,80(a0)
    4db0:	0000                	unimp
    4db2:	0005                	c.nop	1
    4db4:	007e                	c.slli	zero,0x1f
    4db6:	2532                	fld	fa0,264(sp)
    4db8:	389f 0029 5800      	0x58000029389f
    4dbe:	0029                	c.nop	10
    4dc0:	0100                	addi	s0,sp,128
    4dc2:	5c00                	lw	s0,56(s0)
    4dc4:	2958                	fld	fa4,144(a0)
    4dc6:	0000                	unimp
    4dc8:	2960                	fld	fs0,208(a0)
    4dca:	0000                	unimp
    4dcc:	0005                	c.nop	1
    4dce:	007e                	c.slli	zero,0x1f
    4dd0:	609f2533          	0x609f2533
    4dd4:	0029                	c.nop	10
    4dd6:	8000                	0x8000
    4dd8:	0029                	c.nop	10
    4dda:	0100                	addi	s0,sp,128
    4ddc:	5d00                	lw	s0,56(a0)
    4dde:	2980                	fld	fs0,16(a1)
    4de0:	0000                	unimp
    4de2:	2988                	fld	fa0,16(a1)
    4de4:	0000                	unimp
    4de6:	0005                	c.nop	1
    4de8:	007e                	c.slli	zero,0x1f
    4dea:	2534                	fld	fa3,72(a0)
    4dec:	889f 0029 a800      	0xa8000029889f
    4df2:	0029                	c.nop	10
    4df4:	0100                	addi	s0,sp,128
    4df6:	5c00                	lw	s0,56(s0)
    4df8:	29a8                	fld	fa0,80(a1)
    4dfa:	0000                	unimp
    4dfc:	29b0                	fld	fa2,80(a1)
    4dfe:	0000                	unimp
    4e00:	0005                	c.nop	1
    4e02:	007e                	c.slli	zero,0x1f
    4e04:	2535                	jal	5430 <__swsetup_r+0xc8>
    4e06:	b09f 0029 d000      	0xd0000029b09f
    4e0c:	0029                	c.nop	10
    4e0e:	0100                	addi	s0,sp,128
    4e10:	5d00                	lw	s0,56(a0)
    4e12:	29d0                	fld	fa2,144(a1)
    4e14:	0000                	unimp
    4e16:	29d8                	fld	fa4,144(a1)
    4e18:	0000                	unimp
    4e1a:	0005                	c.nop	1
    4e1c:	007e                	c.slli	zero,0x1f
    4e1e:	2536                	fld	fa0,328(sp)
    4e20:	d89f 0029 f400      	0xf4000029d89f
    4e26:	0029                	c.nop	10
    4e28:	0100                	addi	s0,sp,128
    4e2a:	5e00                	lw	s0,56(a2)
    4e2c:	29f4                	fld	fa3,208(a1)
    4e2e:	0000                	unimp
    4e30:	2a14                	fld	fa3,16(a2)
    4e32:	0000                	unimp
    4e34:	0002                	c.slli64	zero
    4e36:	9f30                	0x9f30
	...
    4e40:	28f0                	fld	fa2,208(s1)
    4e42:	0000                	unimp
    4e44:	2904                	fld	fs1,16(a0)
    4e46:	0000                	unimp
    4e48:	0002                	c.slli64	zero
    4e4a:	9f31                	0x9f31
    4e4c:	2918                	fld	fa4,16(a0)
    4e4e:	0000                	unimp
    4e50:	292c                	fld	fa1,80(a0)
    4e52:	0000                	unimp
    4e54:	0002                	c.slli64	zero
    4e56:	9f31                	0x9f31
    4e58:	2940                	fld	fs0,144(a0)
    4e5a:	0000                	unimp
    4e5c:	2954                	fld	fa3,144(a0)
    4e5e:	0000                	unimp
    4e60:	0002                	c.slli64	zero
    4e62:	9f31                	0x9f31
    4e64:	2968                	fld	fa0,208(a0)
    4e66:	0000                	unimp
    4e68:	297c                	fld	fa5,208(a0)
    4e6a:	0000                	unimp
    4e6c:	0002                	c.slli64	zero
    4e6e:	9f31                	0x9f31
    4e70:	2990                	fld	fa2,16(a1)
    4e72:	0000                	unimp
    4e74:	29a4                	fld	fs1,80(a1)
    4e76:	0000                	unimp
    4e78:	0002                	c.slli64	zero
    4e7a:	9f31                	0x9f31
    4e7c:	29b8                	fld	fa4,80(a1)
    4e7e:	0000                	unimp
    4e80:	29cc                	fld	fa1,144(a1)
    4e82:	0000                	unimp
    4e84:	0002                	c.slli64	zero
    4e86:	9f31                	0x9f31
    4e88:	29e0                	fld	fs0,208(a1)
    4e8a:	0000                	unimp
    4e8c:	29f4                	fld	fa3,208(a1)
    4e8e:	0000                	unimp
    4e90:	0002                	c.slli64	zero
    4e92:	9f31                	0x9f31
    4e94:	2a00                	fld	fs0,16(a2)
    4e96:	0000                	unimp
    4e98:	2a14                	fld	fa3,16(a2)
    4e9a:	0000                	unimp
    4e9c:	0002                	c.slli64	zero
    4e9e:	9f31                	0x9f31
	...
    4ea8:	2a18                	fld	fa4,16(a2)
    4eaa:	0000                	unimp
    4eac:	2a34                	fld	fa3,80(a2)
    4eae:	0000                	unimp
    4eb0:	0001                	nop
    4eb2:	345a                	fld	fs0,432(sp)
    4eb4:	002a                	c.slli	zero,0xa
    4eb6:	9c00                	0x9c00
    4eb8:	002c                	addi	a1,sp,8
    4eba:	0600                	addi	s0,sp,768
    4ebc:	f300                	fsw	fs0,32(a4)
    4ebe:	5a01                	li	s4,-32
    4ec0:	2540                	fld	fs0,136(a0)
    4ec2:	009f 0000 0000      	0x9f
    4ec8:	0000                	unimp
    4eca:	2c00                	fld	fs0,24(s0)
    4ecc:	002a                	c.slli	zero,0xa
    4ece:	7000                	flw	fs0,32(s0)
    4ed0:	0100002b          	0x100002b
    4ed4:	5d00                	lw	s0,56(a0)
    4ed6:	2b70                	fld	fa2,208(a4)
    4ed8:	0000                	unimp
    4eda:	2c9c                	fld	fa5,24(s1)
    4edc:	0000                	unimp
    4ede:	000a                	c.slli	zero,0x2
    4ee0:	405a01f3          	0x405a01f3
    4ee4:	4025                	c.li	zero,9
    4ee6:	4024                	lw	s1,64(s0)
    4ee8:	9f25                	0x9f25
	...
    4ef2:	2a38                	fld	fa4,80(a2)
    4ef4:	0000                	unimp
    4ef6:	2a48                	fld	fa0,144(a2)
    4ef8:	0000                	unimp
    4efa:	007a0007          	0x7a0007
    4efe:	010a                	slli	sp,sp,0x2
    4f00:	2720                	fld	fs0,72(a4)
    4f02:	609f 002a 7000      	0x7000002a609f
    4f08:	002a                	c.slli	zero,0xa
    4f0a:	0700                	addi	s0,sp,896
    4f0c:	7a00                	flw	fs0,48(a2)
    4f0e:	0a00                	addi	s0,sp,272
    4f10:	2001                	jal	4f10 <iprintf+0x40>
    4f12:	2a889f27          	0x2a889f27
    4f16:	0000                	unimp
    4f18:	2a98                	fld	fa4,16(a3)
    4f1a:	0000                	unimp
    4f1c:	007a0007          	0x7a0007
    4f20:	010a                	slli	sp,sp,0x2
    4f22:	2720                	fld	fs0,72(a4)
    4f24:	b09f 002a c000      	0xc000002ab09f
    4f2a:	002a                	c.slli	zero,0xa
    4f2c:	0700                	addi	s0,sp,896
    4f2e:	7a00                	flw	fs0,48(a2)
    4f30:	0a00                	addi	s0,sp,272
    4f32:	2001                	jal	4f32 <iprintf+0x62>
    4f34:	2ad89f27          	0x2ad89f27
    4f38:	0000                	unimp
    4f3a:	2ae8                	fld	fa0,208(a3)
    4f3c:	0000                	unimp
    4f3e:	007a0007          	0x7a0007
    4f42:	010a                	slli	sp,sp,0x2
    4f44:	2720                	fld	fs0,72(a4)
    4f46:	009f 002b 1000      	0x1000002b009f
    4f4c:	0700002b          	0x700002b
    4f50:	7a00                	flw	fs0,48(a2)
    4f52:	0a00                	addi	s0,sp,272
    4f54:	2001                	jal	4f54 <putchar>
    4f56:	2b289f27          	0x2b289f27
    4f5a:	0000                	unimp
    4f5c:	2b38                	fld	fa4,80(a4)
    4f5e:	0000                	unimp
    4f60:	007a0007          	0x7a0007
    4f64:	010a                	slli	sp,sp,0x2
    4f66:	2720                	fld	fs0,72(a4)
    4f68:	489f 002b 5800      	0x5800002b489f
    4f6e:	0700002b          	0x700002b
    4f72:	7a00                	flw	fs0,48(a2)
    4f74:	0a00                	addi	s0,sp,272
    4f76:	2001                	jal	4f76 <putchar+0x22>
    4f78:	00009f27          	0x9f27
    4f7c:	0000                	unimp
    4f7e:	0000                	unimp
    4f80:	0000                	unimp
    4f82:	2a2c                	fld	fa1,80(a2)
    4f84:	0000                	unimp
    4f86:	2a30                	fld	fa2,80(a2)
    4f88:	0000                	unimp
    4f8a:	0001                	nop
    4f8c:	305e                	fld	ft0,496(sp)
    4f8e:	002a                	c.slli	zero,0xa
    4f90:	5000                	lw	s0,32(s0)
    4f92:	002a                	c.slli	zero,0xa
    4f94:	0100                	addi	s0,sp,128
    4f96:	5c00                	lw	s0,56(s0)
    4f98:	2a50                	fld	fa2,144(a2)
    4f9a:	0000                	unimp
    4f9c:	2a58                	fld	fa4,144(a2)
    4f9e:	0000                	unimp
    4fa0:	0005                	c.nop	1
    4fa2:	007e                	c.slli	zero,0x1f
    4fa4:	2531                	jal	55b0 <quorem+0xbc>
    4fa6:	589f 002a 7800      	0x7800002a589f
    4fac:	002a                	c.slli	zero,0xa
    4fae:	0100                	addi	s0,sp,128
    4fb0:	5f00                	lw	s0,56(a4)
    4fb2:	2a78                	fld	fa4,208(a2)
    4fb4:	0000                	unimp
    4fb6:	2a80                	fld	fs0,16(a3)
    4fb8:	0000                	unimp
    4fba:	0005                	c.nop	1
    4fbc:	007e                	c.slli	zero,0x1f
    4fbe:	2532                	fld	fa0,264(sp)
    4fc0:	809f 002a a000      	0xa000002a809f
    4fc6:	002a                	c.slli	zero,0xa
    4fc8:	0100                	addi	s0,sp,128
    4fca:	5c00                	lw	s0,56(s0)
    4fcc:	2aa0                	fld	fs0,80(a3)
    4fce:	0000                	unimp
    4fd0:	2aa8                	fld	fa0,80(a3)
    4fd2:	0000                	unimp
    4fd4:	0005                	c.nop	1
    4fd6:	007e                	c.slli	zero,0x1f
    4fd8:	a89f2533          	0xa89f2533
    4fdc:	002a                	c.slli	zero,0xa
    4fde:	c800                	sw	s0,16(s0)
    4fe0:	002a                	c.slli	zero,0xa
    4fe2:	0100                	addi	s0,sp,128
    4fe4:	5f00                	lw	s0,56(a4)
    4fe6:	2ac8                	fld	fa0,144(a3)
    4fe8:	0000                	unimp
    4fea:	2ad0                	fld	fa2,144(a3)
    4fec:	0000                	unimp
    4fee:	0005                	c.nop	1
    4ff0:	007e                	c.slli	zero,0x1f
    4ff2:	2534                	fld	fa3,72(a0)
    4ff4:	d09f 002a f000      	0xf000002ad09f
    4ffa:	002a                	c.slli	zero,0xa
    4ffc:	0100                	addi	s0,sp,128
    4ffe:	5c00                	lw	s0,56(s0)
    5000:	2af0                	fld	fa2,208(a3)
    5002:	0000                	unimp
    5004:	2af8                	fld	fa4,208(a3)
    5006:	0000                	unimp
    5008:	0005                	c.nop	1
    500a:	007e                	c.slli	zero,0x1f
    500c:	2535                	jal	5638 <quorem+0x144>
    500e:	f89f 002a 1800      	0x1800002af89f
    5014:	0100002b          	0x100002b
    5018:	5f00                	lw	s0,56(a4)
    501a:	2b18                	fld	fa4,16(a4)
    501c:	0000                	unimp
    501e:	2b20                	fld	fs0,80(a4)
    5020:	0000                	unimp
    5022:	0005                	c.nop	1
    5024:	007e                	c.slli	zero,0x1f
    5026:	2536                	fld	fa0,328(sp)
    5028:	209f 002b 3c00      	0x3c00002b209f
    502e:	0100002b          	0x100002b
    5032:	5e00                	lw	s0,56(a2)
    5034:	2b3c                	fld	fa5,80(a4)
    5036:	0000                	unimp
    5038:	2b5c                	fld	fa5,144(a4)
    503a:	0000                	unimp
    503c:	0002                	c.slli64	zero
    503e:	9f30                	0x9f30
	...
    5048:	2a2c                	fld	fa1,80(a2)
    504a:	0000                	unimp
    504c:	2a38                	fld	fa4,80(a2)
    504e:	0000                	unimp
    5050:	0002                	c.slli64	zero
    5052:	9f30                	0x9f30
    5054:	2a38                	fld	fa4,80(a2)
    5056:	0000                	unimp
    5058:	2a4c                	fld	fa1,144(a2)
    505a:	0000                	unimp
    505c:	0002                	c.slli64	zero
    505e:	9f31                	0x9f31
    5060:	2a60                	fld	fs0,208(a2)
    5062:	0000                	unimp
    5064:	2a74                	fld	fa3,208(a2)
    5066:	0000                	unimp
    5068:	0002                	c.slli64	zero
    506a:	9f31                	0x9f31
    506c:	2a88                	fld	fa0,16(a3)
    506e:	0000                	unimp
    5070:	2a9c                	fld	fa5,16(a3)
    5072:	0000                	unimp
    5074:	0002                	c.slli64	zero
    5076:	9f31                	0x9f31
    5078:	2ab0                	fld	fa2,80(a3)
    507a:	0000                	unimp
    507c:	2ac4                	fld	fs1,144(a3)
    507e:	0000                	unimp
    5080:	0002                	c.slli64	zero
    5082:	9f31                	0x9f31
    5084:	2ad8                	fld	fa4,144(a3)
    5086:	0000                	unimp
    5088:	2aec                	fld	fa1,208(a3)
    508a:	0000                	unimp
    508c:	0002                	c.slli64	zero
    508e:	9f31                	0x9f31
    5090:	2b00                	fld	fs0,16(a4)
    5092:	0000                	unimp
    5094:	2b14                	fld	fa3,16(a4)
    5096:	0000                	unimp
    5098:	0002                	c.slli64	zero
    509a:	9f31                	0x9f31
    509c:	2b28                	fld	fa0,80(a4)
    509e:	0000                	unimp
    50a0:	2b3c                	fld	fa5,80(a4)
    50a2:	0000                	unimp
    50a4:	0002                	c.slli64	zero
    50a6:	9f31                	0x9f31
    50a8:	2b48                	fld	fa0,144(a4)
    50aa:	0000                	unimp
    50ac:	2b5c                	fld	fa5,144(a4)
    50ae:	0000                	unimp
    50b0:	0002                	c.slli64	zero
    50b2:	9f31                	0x9f31
	...
    50bc:	2b78                	fld	fa4,208(a4)
    50be:	0000                	unimp
    50c0:	2b88                	fld	fa0,16(a5)
    50c2:	0000                	unimp
    50c4:	007a0007          	0x7a0007
    50c8:	010a                	slli	sp,sp,0x2
    50ca:	2720                	fld	fs0,72(a4)
    50cc:	a09f 002b b000      	0xb000002ba09f
    50d2:	0700002b          	0x700002b
    50d6:	7a00                	flw	fs0,48(a2)
    50d8:	0a00                	addi	s0,sp,272
    50da:	2001                	jal	50da <_puts_r+0x62>
    50dc:	2bc89f27          	0x2bc89f27
    50e0:	0000                	unimp
    50e2:	2bd8                	fld	fa4,144(a5)
    50e4:	0000                	unimp
    50e6:	007a0007          	0x7a0007
    50ea:	010a                	slli	sp,sp,0x2
    50ec:	2720                	fld	fs0,72(a4)
    50ee:	f09f 002b 0000      	0x2bf09f
    50f4:	002c                	addi	a1,sp,8
    50f6:	0700                	addi	s0,sp,896
    50f8:	7a00                	flw	fs0,48(a2)
    50fa:	0a00                	addi	s0,sp,272
    50fc:	2001                	jal	50fc <_puts_r+0x84>
    50fe:	2c189f27          	0x2c189f27
    5102:	0000                	unimp
    5104:	2c28                	fld	fa0,88(s0)
    5106:	0000                	unimp
    5108:	007a0007          	0x7a0007
    510c:	010a                	slli	sp,sp,0x2
    510e:	2720                	fld	fs0,72(a4)
    5110:	409f 002c 5000      	0x5000002c409f
    5116:	002c                	addi	a1,sp,8
    5118:	0700                	addi	s0,sp,896
    511a:	7a00                	flw	fs0,48(a2)
    511c:	0a00                	addi	s0,sp,272
    511e:	2001                	jal	511e <_puts_r+0xa6>
    5120:	2c689f27          	0x2c689f27
    5124:	0000                	unimp
    5126:	2c78                	fld	fa4,216(s0)
    5128:	0000                	unimp
    512a:	007a0007          	0x7a0007
    512e:	010a                	slli	sp,sp,0x2
    5130:	2720                	fld	fs0,72(a4)
    5132:	889f 002c 9400      	0x9400002c889f
    5138:	002c                	addi	a1,sp,8
    513a:	0700                	addi	s0,sp,896
    513c:	7a00                	flw	fs0,48(a2)
    513e:	0a00                	addi	s0,sp,272
    5140:	2001                	jal	5140 <_puts_r+0xc8>
    5142:	2c949f27          	0x2c949f27
    5146:	0000                	unimp
    5148:	2c98                	fld	fa4,24(s1)
    514a:	0000                	unimp
    514c:	007a000b          	0x7a000b
    5150:	27a0010b          	0x27a0010b
    5154:	010a                	slli	sp,sp,0x2
    5156:	2720                	fld	fs0,72(a4)
    5158:	009f 0000 0000      	0x9f
    515e:	0000                	unimp
    5160:	6c00                	flw	fs0,24(s0)
    5162:	7000002b          	0x7000002b
    5166:	0100002b          	0x100002b
    516a:	5f00                	lw	s0,56(a4)
    516c:	2b70                	fld	fa2,208(a4)
    516e:	0000                	unimp
    5170:	2b90                	fld	fa2,16(a5)
    5172:	0000                	unimp
    5174:	0001                	nop
    5176:	905d                	srli	s0,s0,0x37
    5178:	9800002b          	0x9800002b
    517c:	0500002b          	0x500002b
    5180:	7f00                	flw	fs0,56(a4)
    5182:	3100                	fld	fs0,32(a0)
    5184:	9f25                	0x9f25
    5186:	2b98                	fld	fa4,16(a5)
    5188:	0000                	unimp
    518a:	2bb8                	fld	fa4,80(a5)
    518c:	0000                	unimp
    518e:	0001                	nop
    5190:	b85e                	fsd	fs7,48(sp)
    5192:	c000002b          	0xc000002b
    5196:	0500002b          	0x500002b
    519a:	7f00                	flw	fs0,56(a4)
    519c:	3200                	fld	fs0,32(a2)
    519e:	9f25                	0x9f25
    51a0:	2bc0                	fld	fs0,144(a5)
    51a2:	0000                	unimp
    51a4:	2be0                	fld	fs0,208(a5)
    51a6:	0000                	unimp
    51a8:	0001                	nop
    51aa:	e05d                	bnez	s0,5250 <__swbuf_r+0x30>
    51ac:	e800002b          	0xe800002b
    51b0:	0500002b          	0x500002b
    51b4:	7f00                	flw	fs0,56(a4)
    51b6:	3300                	fld	fs0,32(a4)
    51b8:	9f25                	0x9f25
    51ba:	2be8                	fld	fa0,208(a5)
    51bc:	0000                	unimp
    51be:	2c08                	fld	fa0,24(s0)
    51c0:	0000                	unimp
    51c2:	0001                	nop
    51c4:	085e                	slli	a6,a6,0x17
    51c6:	002c                	addi	a1,sp,8
    51c8:	1000                	addi	s0,sp,32
    51ca:	002c                	addi	a1,sp,8
    51cc:	0500                	addi	s0,sp,640
    51ce:	7f00                	flw	fs0,56(a4)
    51d0:	3400                	fld	fs0,40(s0)
    51d2:	9f25                	0x9f25
    51d4:	2c10                	fld	fa2,24(s0)
    51d6:	0000                	unimp
    51d8:	2c30                	fld	fa2,88(s0)
    51da:	0000                	unimp
    51dc:	0001                	nop
    51de:	305d                	jal	4a84 <_printf_common+0x138>
    51e0:	002c                	addi	a1,sp,8
    51e2:	3800                	fld	fs0,48(s0)
    51e4:	002c                	addi	a1,sp,8
    51e6:	0500                	addi	s0,sp,640
    51e8:	7f00                	flw	fs0,56(a4)
    51ea:	3500                	fld	fs0,40(a0)
    51ec:	9f25                	0x9f25
    51ee:	2c38                	fld	fa4,88(s0)
    51f0:	0000                	unimp
    51f2:	2c58                	fld	fa4,152(s0)
    51f4:	0000                	unimp
    51f6:	0001                	nop
    51f8:	585e                	lw	a6,244(sp)
    51fa:	002c                	addi	a1,sp,8
    51fc:	6000                	flw	fs0,0(s0)
    51fe:	002c                	addi	a1,sp,8
    5200:	0500                	addi	s0,sp,640
    5202:	7f00                	flw	fs0,56(a4)
    5204:	3600                	fld	fs0,40(a2)
    5206:	9f25                	0x9f25
    5208:	2c60                	fld	fs0,216(s0)
    520a:	0000                	unimp
    520c:	2c7c                	fld	fa5,216(s0)
    520e:	0000                	unimp
    5210:	0001                	nop
    5212:	7c5f 002c 9c00      	0x9c00002c7c5f
    5218:	002c                	addi	a1,sp,8
    521a:	0200                	addi	s0,sp,256
    521c:	3000                	fld	fs0,32(s0)
    521e:	009f 0000 0000      	0x9f
    5224:	0000                	unimp
    5226:	7800                	flw	fs0,48(s0)
    5228:	8c00002b          	0x8c00002b
    522c:	0200002b          	0x200002b
    5230:	3100                	fld	fs0,32(a0)
    5232:	a09f 002b b400      	0xb400002ba09f
    5238:	0200002b          	0x200002b
    523c:	3100                	fld	fs0,32(a0)
    523e:	c89f 002b dc00      	0xdc00002bc89f
    5244:	0200002b          	0x200002b
    5248:	3100                	fld	fs0,32(a0)
    524a:	f09f 002b 0400      	0x400002bf09f
    5250:	002c                	addi	a1,sp,8
    5252:	0200                	addi	s0,sp,256
    5254:	3100                	fld	fs0,32(a0)
    5256:	189f 002c 2c00      	0x2c00002c189f
    525c:	002c                	addi	a1,sp,8
    525e:	0200                	addi	s0,sp,256
    5260:	3100                	fld	fs0,32(a0)
    5262:	409f 002c 5400      	0x5400002c409f
    5268:	002c                	addi	a1,sp,8
    526a:	0200                	addi	s0,sp,256
    526c:	3100                	fld	fs0,32(a0)
    526e:	689f 002c 7c00      	0x7c00002c689f
    5274:	002c                	addi	a1,sp,8
    5276:	0200                	addi	s0,sp,256
    5278:	3100                	fld	fs0,32(a0)
    527a:	889f 002c 9c00      	0x9c00002c889f
    5280:	002c                	addi	a1,sp,8
    5282:	0200                	addi	s0,sp,256
    5284:	3100                	fld	fs0,32(a0)
    5286:	009f 0000 0000      	0x9f
    528c:	0000                	unimp
    528e:	ac00                	fsd	fs0,24(s0)
    5290:	0024                	addi	s1,sp,8
    5292:	c000                	sw	s0,0(s0)
    5294:	0024                	addi	s1,sp,8
    5296:	0100                	addi	s0,sp,128
    5298:	5a00                	lw	s0,48(a2)
    529a:	24c0                	fld	fs0,136(s1)
    529c:	0000                	unimp
    529e:	2510                	fld	fa2,8(a0)
    52a0:	0000                	unimp
    52a2:	0004                	0x4
    52a4:	9f5a01f3          	0x9f5a01f3
	...
    52b0:	24d4                	fld	fa3,136(s1)
    52b2:	0000                	unimp
    52b4:	24d8                	fld	fa4,136(s1)
    52b6:	0000                	unimp
    52b8:	0001                	nop
    52ba:	e05a                	fsw	fs6,0(sp)
    52bc:	0024                	addi	s1,sp,8
    52be:	e400                	fsw	fs0,8(s0)
    52c0:	0024                	addi	s1,sp,8
    52c2:	0100                	addi	s0,sp,128
    52c4:	5a00                	lw	s0,48(a2)
    52c6:	24ec                	fld	fa1,200(s1)
    52c8:	0000                	unimp
    52ca:	24f0                	fld	fa2,200(s1)
    52cc:	0000                	unimp
    52ce:	0001                	nop
    52d0:	f85a                	fsw	fs6,48(sp)
    52d2:	0024                	addi	s1,sp,8
    52d4:	fc00                	fsw	fs0,56(s0)
    52d6:	0024                	addi	s1,sp,8
    52d8:	0100                	addi	s0,sp,128
    52da:	5a00                	lw	s0,48(a2)
    52dc:	2504                	fld	fs1,8(a0)
    52de:	0000                	unimp
    52e0:	2508                	fld	fa0,8(a0)
    52e2:	0000                	unimp
    52e4:	0001                	nop
    52e6:	0c5a                	slli	s8,s8,0x16
    52e8:	0025                	c.nop	9
    52ea:	1000                	addi	s0,sp,32
    52ec:	0025                	c.nop	9
    52ee:	0200                	addi	s0,sp,256
    52f0:	3000                	fld	fs0,32(s0)
    52f2:	009f 0000 0000      	0x9f
	...
    5300:	0000                	unimp
    5302:	0100                	addi	s0,sp,128
    5304:	5a00                	lw	s0,48(a2)
	...
    530e:	0001                	nop
    5310:	005e                	c.slli	zero,0x17
    5312:	0000                	unimp
    5314:	0000                	unimp
    5316:	0000                	unimp
    5318:	0500                	addi	s0,sp,640
    531a:	7a00                	flw	fs0,48(a2)
    531c:	3100                	fld	fs0,32(a0)
    531e:	9f25                	0x9f25
	...
    5328:	0001                	nop
    532a:	005d                	c.nop	23
    532c:	0000                	unimp
    532e:	0000                	unimp
    5330:	0000                	unimp
    5332:	0500                	addi	s0,sp,640
    5334:	7a00                	flw	fs0,48(a2)
    5336:	3200                	fld	fs0,32(a2)
    5338:	9f25                	0x9f25
	...
    5342:	0001                	nop
    5344:	005e                	c.slli	zero,0x17
    5346:	0000                	unimp
    5348:	0000                	unimp
    534a:	0000                	unimp
    534c:	0500                	addi	s0,sp,640
    534e:	7a00                	flw	fs0,48(a2)
    5350:	3300                	fld	fs0,32(a4)
    5352:	9f25                	0x9f25
	...
    535c:	0001                	nop
    535e:	005d                	c.nop	23
    5360:	0000                	unimp
    5362:	0000                	unimp
    5364:	0000                	unimp
    5366:	0500                	addi	s0,sp,640
    5368:	7a00                	flw	fs0,48(a2)
    536a:	3400                	fld	fs0,40(s0)
    536c:	9f25                	0x9f25
	...
    5376:	0001                	nop
    5378:	005e                	c.slli	zero,0x17
    537a:	0000                	unimp
    537c:	0000                	unimp
    537e:	0000                	unimp
    5380:	0500                	addi	s0,sp,640
    5382:	7a00                	flw	fs0,48(a2)
    5384:	3500                	fld	fs0,40(a0)
    5386:	9f25                	0x9f25
	...
    5390:	0001                	nop
    5392:	005d                	c.nop	23
    5394:	0000                	unimp
    5396:	0000                	unimp
    5398:	0000                	unimp
    539a:	0500                	addi	s0,sp,640
    539c:	7a00                	flw	fs0,48(a2)
    539e:	3600                	fld	fs0,40(a2)
    53a0:	9f25                	0x9f25
	...
    53aa:	0001                	nop
    53ac:	005e                	c.slli	zero,0x17
    53ae:	0000                	unimp
    53b0:	0000                	unimp
    53b2:	0000                	unimp
    53b4:	0200                	addi	s0,sp,256
    53b6:	3000                	fld	fs0,32(s0)
    53b8:	009f 0000 0000      	0x9f
	...
    53c6:	0000                	unimp
    53c8:	0100                	addi	s0,sp,128
    53ca:	5b00                	lw	s0,48(a4)
	...
    53d4:	007f0007          	0x7f0007
    53d8:	010a                	slli	sp,sp,0x2
    53da:	2720                	fld	fs0,72(a4)
    53dc:	009f 0000 0000      	0x9f
    53e2:	0000                	unimp
    53e4:	0c00                	addi	s0,sp,528
    53e6:	7b00                	flw	fs0,48(a4)
    53e8:	3100                	fld	fs0,32(a0)
    53ea:	7d25                	lui	s10,0xfffe9
    53ec:	2700                	fld	fs0,8(a4)
    53ee:	010a                	slli	sp,sp,0x2
    53f0:	2720                	fld	fs0,72(a4)
    53f2:	009f 0000 0000      	0x9f
    53f8:	0000                	unimp
    53fa:	0700                	addi	s0,sp,896
    53fc:	7f00                	flw	fs0,56(a4)
    53fe:	0a00                	addi	s0,sp,272
    5400:	2001                	jal	5400 <__swsetup_r+0x98>
    5402:	00009f27          	0x9f27
    5406:	0000                	unimp
    5408:	0000                	unimp
    540a:	0000                	unimp
    540c:	007f0007          	0x7f0007
    5410:	010a                	slli	sp,sp,0x2
    5412:	2720                	fld	fs0,72(a4)
    5414:	009f 0000 0000      	0x9f
    541a:	0000                	unimp
    541c:	0700                	addi	s0,sp,896
    541e:	7f00                	flw	fs0,56(a4)
    5420:	0a00                	addi	s0,sp,272
    5422:	2001                	jal	5422 <__swsetup_r+0xba>
    5424:	00009f27          	0x9f27
    5428:	0000                	unimp
    542a:	0000                	unimp
    542c:	0000                	unimp
    542e:	007f0007          	0x7f0007
    5432:	010a                	slli	sp,sp,0x2
    5434:	2720                	fld	fs0,72(a4)
    5436:	009f 0000 0000      	0x9f
    543c:	0000                	unimp
    543e:	0700                	addi	s0,sp,896
    5440:	7f00                	flw	fs0,56(a4)
    5442:	0a00                	addi	s0,sp,272
    5444:	2001                	jal	5444 <__swsetup_r+0xdc>
    5446:	00009f27          	0x9f27
    544a:	0000                	unimp
    544c:	0000                	unimp
    544e:	0000                	unimp
    5450:	007f0007          	0x7f0007
    5454:	010a                	slli	sp,sp,0x2
    5456:	2720                	fld	fs0,72(a4)
    5458:	009f 0000 0000      	0x9f
    545e:	0000                	unimp
    5460:	0700                	addi	s0,sp,896
    5462:	7a00                	flw	fs0,48(a2)
    5464:	0a00                	addi	s0,sp,272
    5466:	2001                	jal	5466 <__swsetup_r+0xfe>
    5468:	00009f27          	0x9f27
    546c:	0000                	unimp
    546e:	0000                	unimp
    5470:	0000                	unimp
    5472:	007f000b          	0x7f000b
    5476:	27a0010b          	0x27a0010b
    547a:	010a                	slli	sp,sp,0x2
    547c:	2720                	fld	fs0,72(a4)
    547e:	009f 0000 0000      	0x9f
    5484:	0000                	unimp
    5486:	0100                	addi	s0,sp,128
    5488:	5a00                	lw	s0,48(a2)
	...
    549a:	0008                	0x8
    549c:	007a                	c.slli	zero,0x1e
    549e:	3127007b          	0x3127007b
    54a2:	9f1a                	add	t5,t5,t1
	...
    54b4:	0002                	c.slli64	zero
    54b6:	9f30                	0x9f30
	...
    54c0:	0002                	c.slli64	zero
    54c2:	9f31                	0x9f31
	...
    54cc:	0002                	c.slli64	zero
    54ce:	9f31                	0x9f31
	...
    54d8:	0002                	c.slli64	zero
    54da:	9f31                	0x9f31
	...
    54e4:	0002                	c.slli64	zero
    54e6:	9f31                	0x9f31
	...
    54f0:	0002                	c.slli64	zero
    54f2:	9f31                	0x9f31
	...
    54fc:	0002                	c.slli64	zero
    54fe:	9f31                	0x9f31
	...
    5508:	0002                	c.slli64	zero
    550a:	9f31                	0x9f31
	...
    5514:	0002                	c.slli64	zero
    5516:	9f31                	0x9f31
	...
    5520:	2510                	fld	fa2,8(a0)
    5522:	0000                	unimp
    5524:	2650                	fld	fa2,136(a2)
    5526:	0000                	unimp
    5528:	0001                	nop
    552a:	505a                	0x505a
    552c:	0026                	c.slli	zero,0x9
    552e:	9000                	0x9000
    5530:	04000027          	0x4000027
    5534:	f300                	fsw	fs0,32(a4)
    5536:	5a01                	li	s4,-32
    5538:	009f 0000 0000      	0x9f
    553e:	0000                	unimp
    5540:	1000                	addi	s0,sp,32
    5542:	0025                	c.nop	9
    5544:	4c00                	lw	s0,24(s0)
    5546:	0026                	c.slli	zero,0x9
    5548:	0100                	addi	s0,sp,128
    554a:	5b00                	lw	s0,48(a4)
    554c:	278c                	fld	fa1,8(a5)
    554e:	0000                	unimp
    5550:	2790                	fld	fa2,8(a5)
    5552:	0000                	unimp
    5554:	0001                	nop
    5556:	005a                	c.slli	zero,0x16
    5558:	0000                	unimp
    555a:	0000                	unimp
    555c:	0000                	unimp
    555e:	1800                	addi	s0,sp,48
    5560:	0025                	c.nop	9
    5562:	2800                	fld	fs0,16(s0)
    5564:	0025                	c.nop	9
    5566:	0100                	addi	s0,sp,128
    5568:	5b00                	lw	s0,48(a4)
    556a:	2528                	fld	fa0,72(a0)
    556c:	0000                	unimp
    556e:	2538                	fld	fa4,72(a0)
    5570:	0000                	unimp
    5572:	007f0007          	0x7f0007
    5576:	010a                	slli	sp,sp,0x2
    5578:	2720                	fld	fs0,72(a4)
    557a:	389f 0025 3c00      	0x3c000025389f
    5580:	0025                	c.nop	9
    5582:	0c00                	addi	s0,sp,528
    5584:	7b00                	flw	fs0,48(a4)
    5586:	3100                	fld	fs0,32(a0)
    5588:	7c25                	lui	s8,0xfffe9
    558a:	2700                	fld	fs0,8(a4)
    558c:	010a                	slli	sp,sp,0x2
    558e:	2720                	fld	fs0,72(a4)
    5590:	5c9f 0025 6000      	0x600000255c9f
    5596:	0025                	c.nop	9
    5598:	0700                	addi	s0,sp,896
    559a:	7f00                	flw	fs0,56(a4)
    559c:	0a00                	addi	s0,sp,272
    559e:	2001                	jal	559e <quorem+0xaa>
    55a0:	25789f27          	0x25789f27
    55a4:	0000                	unimp
    55a6:	2588                	fld	fa0,8(a1)
    55a8:	0000                	unimp
    55aa:	007f0007          	0x7f0007
    55ae:	010a                	slli	sp,sp,0x2
    55b0:	2720                	fld	fs0,72(a4)
    55b2:	a09f 0025 b000      	0xb0000025a09f
    55b8:	0025                	c.nop	9
    55ba:	0700                	addi	s0,sp,896
    55bc:	7f00                	flw	fs0,56(a4)
    55be:	0a00                	addi	s0,sp,272
    55c0:	2001                	jal	55c0 <quorem+0xcc>
    55c2:	25c89f27          	0x25c89f27
    55c6:	0000                	unimp
    55c8:	25d8                	fld	fa4,136(a1)
    55ca:	0000                	unimp
    55cc:	007f0007          	0x7f0007
    55d0:	010a                	slli	sp,sp,0x2
    55d2:	2720                	fld	fs0,72(a4)
    55d4:	f09f 0025 0000      	0x25f09f
    55da:	0026                	c.slli	zero,0x9
    55dc:	0700                	addi	s0,sp,896
    55de:	7f00                	flw	fs0,56(a4)
    55e0:	0a00                	addi	s0,sp,272
    55e2:	2001                	jal	55e2 <quorem+0xee>
    55e4:	26189f27          	0x26189f27
    55e8:	0000                	unimp
    55ea:	2628                	fld	fa0,72(a2)
    55ec:	0000                	unimp
    55ee:	007f0007          	0x7f0007
    55f2:	010a                	slli	sp,sp,0x2
    55f4:	2720                	fld	fs0,72(a4)
    55f6:	389f 0026 4800      	0x48000026389f
    55fc:	0026                	c.slli	zero,0x9
    55fe:	0700                	addi	s0,sp,896
    5600:	7f00                	flw	fs0,56(a4)
    5602:	0a00                	addi	s0,sp,272
    5604:	2001                	jal	5604 <quorem+0x110>
    5606:	00009f27          	0x9f27
    560a:	0000                	unimp
    560c:	0000                	unimp
    560e:	0000                	unimp
    5610:	2518                	fld	fa4,8(a0)
    5612:	0000                	unimp
    5614:	2520                	fld	fs0,72(a0)
    5616:	0000                	unimp
    5618:	0001                	nop
    561a:	205d                	jal	56c0 <_dtoa_r>
    561c:	0025                	c.nop	9
    561e:	4000                	lw	s0,0(s0)
    5620:	0025                	c.nop	9
    5622:	0100                	addi	s0,sp,128
    5624:	5e00                	lw	s0,56(a2)
    5626:	2540                	fld	fs0,136(a0)
    5628:	0000                	unimp
    562a:	254c                	fld	fa1,136(a0)
    562c:	0000                	unimp
    562e:	0005                	c.nop	1
    5630:	007d                	c.nop	31
    5632:	2531                	jal	5c3e <_dtoa_r+0x57e>
    5634:	4c9f 0025 6800      	0x680000254c9f
    563a:	0025                	c.nop	9
    563c:	0100                	addi	s0,sp,128
    563e:	5e00                	lw	s0,56(a2)
    5640:	2568                	fld	fa0,200(a0)
    5642:	0000                	unimp
    5644:	2570                	fld	fa2,200(a0)
    5646:	0000                	unimp
    5648:	0005                	c.nop	1
    564a:	007d                	c.nop	31
    564c:	2532                	fld	fa0,264(sp)
    564e:	709f 0025 9000      	0x90000025709f
    5654:	0025                	c.nop	9
    5656:	0100                	addi	s0,sp,128
    5658:	5c00                	lw	s0,56(s0)
    565a:	2590                	fld	fa2,8(a1)
    565c:	0000                	unimp
    565e:	2598                	fld	fa4,8(a1)
    5660:	0000                	unimp
    5662:	0005                	c.nop	1
    5664:	007d                	c.nop	31
    5666:	989f2533          	0x989f2533
    566a:	0025                	c.nop	9
    566c:	b800                	fsd	fs0,48(s0)
    566e:	0025                	c.nop	9
    5670:	0100                	addi	s0,sp,128
    5672:	5e00                	lw	s0,56(a2)
    5674:	25b8                	fld	fa4,72(a1)
    5676:	0000                	unimp
    5678:	25c0                	fld	fs0,136(a1)
    567a:	0000                	unimp
    567c:	0005                	c.nop	1
    567e:	007d                	c.nop	31
    5680:	2534                	fld	fa3,72(a0)
    5682:	c09f 0025 e000      	0xe0000025c09f
    5688:	0025                	c.nop	9
    568a:	0100                	addi	s0,sp,128
    568c:	5c00                	lw	s0,56(s0)
    568e:	25e0                	fld	fs0,200(a1)
    5690:	0000                	unimp
    5692:	25e8                	fld	fa0,200(a1)
    5694:	0000                	unimp
    5696:	0005                	c.nop	1
    5698:	007d                	c.nop	31
    569a:	2535                	jal	5cc6 <_dtoa_r+0x606>
    569c:	e89f 0025 0800      	0x8000025e89f
    56a2:	0026                	c.slli	zero,0x9
    56a4:	0100                	addi	s0,sp,128
    56a6:	5e00                	lw	s0,56(a2)
    56a8:	2608                	fld	fa0,8(a2)
    56aa:	0000                	unimp
    56ac:	2610                	fld	fa2,8(a2)
    56ae:	0000                	unimp
    56b0:	0005                	c.nop	1
    56b2:	007d                	c.nop	31
    56b4:	2536                	fld	fa0,328(sp)
    56b6:	109f 0026 2c00      	0x2c000026109f
    56bc:	0026                	c.slli	zero,0x9
    56be:	0100                	addi	s0,sp,128
    56c0:	5d00                	lw	s0,56(a0)
    56c2:	262c                	fld	fa1,72(a2)
    56c4:	0000                	unimp
    56c6:	264c                	fld	fa1,136(a2)
    56c8:	0000                	unimp
    56ca:	0002                	c.slli64	zero
    56cc:	9f30                	0x9f30
	...
    56d6:	2518                	fld	fa4,8(a0)
    56d8:	0000                	unimp
    56da:	253c                	fld	fa5,72(a0)
    56dc:	0000                	unimp
    56de:	0008                	0x8
    56e0:	007a007b          	0x7a007b
    56e4:	9f1a3127          	fsd	fa7,-1566(s4)
	...
    56f0:	2518                	fld	fa4,8(a0)
    56f2:	0000                	unimp
    56f4:	2528                	fld	fa0,72(a0)
    56f6:	0000                	unimp
    56f8:	0002                	c.slli64	zero
    56fa:	9f30                	0x9f30
    56fc:	2528                	fld	fa0,72(a0)
    56fe:	0000                	unimp
    5700:	253c                	fld	fa5,72(a0)
    5702:	0000                	unimp
    5704:	0002                	c.slli64	zero
    5706:	9f31                	0x9f31
    5708:	2550                	fld	fa2,136(a0)
    570a:	0000                	unimp
    570c:	2564                	fld	fs1,200(a0)
    570e:	0000                	unimp
    5710:	0002                	c.slli64	zero
    5712:	9f31                	0x9f31
    5714:	2578                	fld	fa4,200(a0)
    5716:	0000                	unimp
    5718:	258c                	fld	fa1,8(a1)
    571a:	0000                	unimp
    571c:	0002                	c.slli64	zero
    571e:	9f31                	0x9f31
    5720:	25a0                	fld	fs0,72(a1)
    5722:	0000                	unimp
    5724:	25b4                	fld	fa3,72(a1)
    5726:	0000                	unimp
    5728:	0002                	c.slli64	zero
    572a:	9f31                	0x9f31
    572c:	25c8                	fld	fa0,136(a1)
    572e:	0000                	unimp
    5730:	25dc                	fld	fa5,136(a1)
    5732:	0000                	unimp
    5734:	0002                	c.slli64	zero
    5736:	9f31                	0x9f31
    5738:	25f0                	fld	fa2,200(a1)
    573a:	0000                	unimp
    573c:	2604                	fld	fs1,8(a2)
    573e:	0000                	unimp
    5740:	0002                	c.slli64	zero
    5742:	9f31                	0x9f31
    5744:	2618                	fld	fa4,8(a2)
    5746:	0000                	unimp
    5748:	262c                	fld	fa1,72(a2)
    574a:	0000                	unimp
    574c:	0002                	c.slli64	zero
    574e:	9f31                	0x9f31
    5750:	2638                	fld	fa4,72(a2)
    5752:	0000                	unimp
    5754:	264c                	fld	fa1,136(a2)
    5756:	0000                	unimp
    5758:	0002                	c.slli64	zero
    575a:	9f31                	0x9f31
	...
    5764:	2668                	fld	fa0,200(a2)
    5766:	0000                	unimp
    5768:	2678                	fld	fa4,200(a2)
    576a:	0000                	unimp
    576c:	007a0007          	0x7a0007
    5770:	010a                	slli	sp,sp,0x2
    5772:	2720                	fld	fs0,72(a4)
    5774:	909f 0026 a000      	0xa0000026909f
    577a:	0026                	c.slli	zero,0x9
    577c:	0700                	addi	s0,sp,896
    577e:	7a00                	flw	fs0,48(a2)
    5780:	0a00                	addi	s0,sp,272
    5782:	2001                	jal	5782 <_dtoa_r+0xc2>
    5784:	26b89f27          	0x26b89f27
    5788:	0000                	unimp
    578a:	26c8                	fld	fa0,136(a3)
    578c:	0000                	unimp
    578e:	007a0007          	0x7a0007
    5792:	010a                	slli	sp,sp,0x2
    5794:	2720                	fld	fs0,72(a4)
    5796:	e09f 0026 f000      	0xf0000026e09f
    579c:	0026                	c.slli	zero,0x9
    579e:	0700                	addi	s0,sp,896
    57a0:	7a00                	flw	fs0,48(a2)
    57a2:	0a00                	addi	s0,sp,272
    57a4:	2001                	jal	57a4 <_dtoa_r+0xe4>
    57a6:	27089f27          	0x27089f27
    57aa:	0000                	unimp
    57ac:	2718                	fld	fa4,8(a4)
    57ae:	0000                	unimp
    57b0:	007a0007          	0x7a0007
    57b4:	010a                	slli	sp,sp,0x2
    57b6:	2720                	fld	fs0,72(a4)
    57b8:	309f 0027 4000      	0x40000027309f
    57be:	07000027          	0x7000027
    57c2:	7a00                	flw	fs0,48(a2)
    57c4:	0a00                	addi	s0,sp,272
    57c6:	2001                	jal	57c6 <_dtoa_r+0x106>
    57c8:	27589f27          	0x27589f27
    57cc:	0000                	unimp
    57ce:	2768                	fld	fa0,200(a4)
    57d0:	0000                	unimp
    57d2:	007a0007          	0x7a0007
    57d6:	010a                	slli	sp,sp,0x2
    57d8:	2720                	fld	fs0,72(a4)
    57da:	789f 0027 8400      	0x84000027789f
    57e0:	07000027          	0x7000027
    57e4:	7a00                	flw	fs0,48(a2)
    57e6:	0a00                	addi	s0,sp,272
    57e8:	2001                	jal	57e8 <_dtoa_r+0x128>
    57ea:	27849f27          	0x27849f27
    57ee:	0000                	unimp
    57f0:	2788                	fld	fa0,8(a5)
    57f2:	0000                	unimp
    57f4:	007a000b          	0x7a000b
    57f8:	27a0010b          	0x27a0010b
    57fc:	010a                	slli	sp,sp,0x2
    57fe:	2720                	fld	fs0,72(a4)
    5800:	009f 0000 0000      	0x9f
    5806:	0000                	unimp
    5808:	5800                	lw	s0,48(s0)
    580a:	0026                	c.slli	zero,0x9
    580c:	6000                	flw	fs0,0(s0)
    580e:	0026                	c.slli	zero,0x9
    5810:	0100                	addi	s0,sp,128
    5812:	5e00                	lw	s0,56(a2)
    5814:	2660                	fld	fs0,200(a2)
    5816:	0000                	unimp
    5818:	2680                	fld	fs0,8(a3)
    581a:	0000                	unimp
    581c:	0001                	nop
    581e:	805d                	srli	s0,s0,0x17
    5820:	0026                	c.slli	zero,0x9
    5822:	8800                	0x8800
    5824:	0026                	c.slli	zero,0x9
    5826:	0500                	addi	s0,sp,640
    5828:	7e00                	flw	fs0,56(a2)
    582a:	3100                	fld	fs0,32(a0)
    582c:	9f25                	0x9f25
    582e:	2688                	fld	fa0,8(a3)
    5830:	0000                	unimp
    5832:	26a8                	fld	fa0,72(a3)
    5834:	0000                	unimp
    5836:	0001                	nop
    5838:	a85f 0026 b000      	0xb0000026a85f
    583e:	0026                	c.slli	zero,0x9
    5840:	0500                	addi	s0,sp,640
    5842:	7e00                	flw	fs0,56(a2)
    5844:	3200                	fld	fs0,32(a2)
    5846:	9f25                	0x9f25
    5848:	26b0                	fld	fa2,72(a3)
    584a:	0000                	unimp
    584c:	26d0                	fld	fa2,136(a3)
    584e:	0000                	unimp
    5850:	0001                	nop
    5852:	d05d                	beqz	s0,57f8 <_dtoa_r+0x138>
    5854:	0026                	c.slli	zero,0x9
    5856:	d800                	sw	s0,48(s0)
    5858:	0026                	c.slli	zero,0x9
    585a:	0500                	addi	s0,sp,640
    585c:	7e00                	flw	fs0,56(a2)
    585e:	3300                	fld	fs0,32(a4)
    5860:	9f25                	0x9f25
    5862:	26d8                	fld	fa4,136(a3)
    5864:	0000                	unimp
    5866:	26f8                	fld	fa4,200(a3)
    5868:	0000                	unimp
    586a:	0001                	nop
    586c:	f85f 0026 0000      	0x26f85f
    5872:	05000027          	0x5000027
    5876:	7e00                	flw	fs0,56(a2)
    5878:	3400                	fld	fs0,40(s0)
    587a:	9f25                	0x9f25
    587c:	2700                	fld	fs0,8(a4)
    587e:	0000                	unimp
    5880:	2720                	fld	fs0,72(a4)
    5882:	0000                	unimp
    5884:	0001                	nop
    5886:	205d                	jal	592c <_dtoa_r+0x26c>
    5888:	28000027          	0x28000027
    588c:	05000027          	0x5000027
    5890:	7e00                	flw	fs0,56(a2)
    5892:	3500                	fld	fs0,40(a0)
    5894:	9f25                	0x9f25
    5896:	2728                	fld	fa0,72(a4)
    5898:	0000                	unimp
    589a:	2748                	fld	fa0,136(a4)
    589c:	0000                	unimp
    589e:	0001                	nop
    58a0:	485f 0027 5000      	0x50000027485f
    58a6:	05000027          	0x5000027
    58aa:	7e00                	flw	fs0,56(a2)
    58ac:	3600                	fld	fs0,40(a2)
    58ae:	9f25                	0x9f25
    58b0:	2750                	fld	fa2,136(a4)
    58b2:	0000                	unimp
    58b4:	276c                	fld	fa1,200(a4)
    58b6:	0000                	unimp
    58b8:	0001                	nop
    58ba:	6c5e                	flw	fs8,212(sp)
    58bc:	8c000027          	0x8c000027
    58c0:	02000027          	0x2000027
    58c4:	3000                	fld	fs0,32(s0)
    58c6:	009f 0000 0000      	0x9f
    58cc:	0000                	unimp
    58ce:	6800                	flw	fs0,16(s0)
    58d0:	0026                	c.slli	zero,0x9
    58d2:	7c00                	flw	fs0,56(s0)
    58d4:	0026                	c.slli	zero,0x9
    58d6:	0200                	addi	s0,sp,256
    58d8:	3100                	fld	fs0,32(a0)
    58da:	909f 0026 a400      	0xa4000026909f
    58e0:	0026                	c.slli	zero,0x9
    58e2:	0200                	addi	s0,sp,256
    58e4:	3100                	fld	fs0,32(a0)
    58e6:	b89f 0026 cc00      	0xcc000026b89f
    58ec:	0026                	c.slli	zero,0x9
    58ee:	0200                	addi	s0,sp,256
    58f0:	3100                	fld	fs0,32(a0)
    58f2:	e09f 0026 f400      	0xf4000026e09f
    58f8:	0026                	c.slli	zero,0x9
    58fa:	0200                	addi	s0,sp,256
    58fc:	3100                	fld	fs0,32(a0)
    58fe:	089f 0027 1c00      	0x1c000027089f
    5904:	02000027          	0x2000027
    5908:	3100                	fld	fs0,32(a0)
    590a:	309f 0027 4400      	0x44000027309f
    5910:	02000027          	0x2000027
    5914:	3100                	fld	fs0,32(a0)
    5916:	589f 0027 6c00      	0x6c000027589f
    591c:	02000027          	0x2000027
    5920:	3100                	fld	fs0,32(a0)
    5922:	789f 0027 8c00      	0x8c000027789f
    5928:	02000027          	0x2000027
    592c:	3100                	fld	fs0,32(a0)
    592e:	009f 0000 0000      	0x9f
    5934:	0000                	unimp
    5936:	a000                	fsd	fs0,0(s0)
    5938:	002c                	addi	a1,sp,8
    593a:	bc00                	fsd	fs0,56(s0)
    593c:	002c                	addi	a1,sp,8
    593e:	0100                	addi	s0,sp,128
    5940:	5a00                	lw	s0,48(a2)
    5942:	2cbc                	fld	fa5,88(s1)
    5944:	0000                	unimp
    5946:	2f28                	fld	fa0,88(a4)
    5948:	0000                	unimp
    594a:	0004                	0x4
    594c:	9f5a01f3          	0x9f5a01f3
	...
    5958:	2ca0                	fld	fs0,88(s1)
    595a:	0000                	unimp
    595c:	2cc4                	fld	fs1,152(s1)
    595e:	0000                	unimp
    5960:	0001                	nop
    5962:	002cc45b          	0x2cc45b
    5966:	2800                	fld	fs0,16(s0)
    5968:	0400002f          	0x400002f
    596c:	f300                	fsw	fs0,32(a4)
    596e:	5b01                	li	s6,-32
    5970:	009f 0000 0000      	0x9f
    5976:	0000                	unimp
    5978:	b400                	fsd	fs0,40(s0)
    597a:	002c                	addi	a1,sp,8
    597c:	c400                	sw	s0,8(s0)
    597e:	002c                	addi	a1,sp,8
    5980:	0100                	addi	s0,sp,128
    5982:	5b00                	lw	s0,48(a4)
	...
    598c:	2cb4                	fld	fa3,88(s1)
    598e:	0000                	unimp
    5990:	2de8                	fld	fa0,216(a1)
    5992:	0000                	unimp
    5994:	0001                	nop
    5996:	005f 0000 0000      	0x5f
    599c:	0000                	unimp
    599e:	b400                	fsd	fs0,40(s0)
    59a0:	002c                	addi	a1,sp,8
    59a2:	c000                	sw	s0,0(s0)
    59a4:	002c                	addi	a1,sp,8
    59a6:	0100                	addi	s0,sp,128
    59a8:	5b00                	lw	s0,48(a4)
    59aa:	2cc0                	fld	fs0,152(s1)
    59ac:	0000                	unimp
    59ae:	2cd0                	fld	fa2,152(s1)
    59b0:	0000                	unimp
    59b2:	007a0007          	0x7a0007
    59b6:	010a                	slli	sp,sp,0x2
    59b8:	2720                	fld	fs0,72(a4)
    59ba:	f49f 002c f800      	0xf800002cf49f
    59c0:	002c                	addi	a1,sp,8
    59c2:	0700                	addi	s0,sp,896
    59c4:	7a00                	flw	fs0,48(a2)
    59c6:	0a00                	addi	s0,sp,272
    59c8:	2001                	jal	59c8 <_dtoa_r+0x308>
    59ca:	2d109f27          	0x2d109f27
    59ce:	0000                	unimp
    59d0:	2d20                	fld	fs0,88(a0)
    59d2:	0000                	unimp
    59d4:	007a0007          	0x7a0007
    59d8:	010a                	slli	sp,sp,0x2
    59da:	2720                	fld	fs0,72(a4)
    59dc:	389f 002d 4800      	0x4800002d389f
    59e2:	002d                	c.nop	11
    59e4:	0700                	addi	s0,sp,896
    59e6:	7a00                	flw	fs0,48(a2)
    59e8:	0a00                	addi	s0,sp,272
    59ea:	2001                	jal	59ea <_dtoa_r+0x32a>
    59ec:	2d609f27          	0x2d609f27
    59f0:	0000                	unimp
    59f2:	2d70                	fld	fa2,216(a0)
    59f4:	0000                	unimp
    59f6:	007a0007          	0x7a0007
    59fa:	010a                	slli	sp,sp,0x2
    59fc:	2720                	fld	fs0,72(a4)
    59fe:	889f 002d 9800      	0x9800002d889f
    5a04:	002d                	c.nop	11
    5a06:	0700                	addi	s0,sp,896
    5a08:	7a00                	flw	fs0,48(a2)
    5a0a:	0a00                	addi	s0,sp,272
    5a0c:	2001                	jal	5a0c <_dtoa_r+0x34c>
    5a0e:	2db09f27          	0x2db09f27
    5a12:	0000                	unimp
    5a14:	2dc0                	fld	fs0,152(a1)
    5a16:	0000                	unimp
    5a18:	007a0007          	0x7a0007
    5a1c:	010a                	slli	sp,sp,0x2
    5a1e:	2720                	fld	fs0,72(a4)
    5a20:	d09f 002d e000      	0xe000002dd09f
    5a26:	002d                	c.nop	11
    5a28:	0700                	addi	s0,sp,896
    5a2a:	7a00                	flw	fs0,48(a2)
    5a2c:	0a00                	addi	s0,sp,272
    5a2e:	2001                	jal	5a2e <_dtoa_r+0x36e>
    5a30:	00009f27          	0x9f27
    5a34:	0000                	unimp
    5a36:	0000                	unimp
    5a38:	0000                	unimp
    5a3a:	2cb4                	fld	fa3,88(s1)
    5a3c:	0000                	unimp
    5a3e:	2cb8                	fld	fa4,88(s1)
    5a40:	0000                	unimp
    5a42:	0001                	nop
    5a44:	b85e                	fsd	fs7,48(sp)
    5a46:	002c                	addi	a1,sp,8
    5a48:	d800                	sw	s0,48(s0)
    5a4a:	002c                	addi	a1,sp,8
    5a4c:	0100                	addi	s0,sp,128
    5a4e:	5d00                	lw	s0,56(a0)
    5a50:	2cd8                	fld	fa4,152(s1)
    5a52:	0000                	unimp
    5a54:	2ce4                	fld	fs1,216(s1)
    5a56:	0000                	unimp
    5a58:	0005                	c.nop	1
    5a5a:	007e                	c.slli	zero,0x1f
    5a5c:	2531                	jal	6068 <_dtoa_r+0x9a8>
    5a5e:	e49f 002c 0000      	0x2ce49f
    5a64:	002d                	c.nop	11
    5a66:	0100                	addi	s0,sp,128
    5a68:	5d00                	lw	s0,56(a0)
    5a6a:	2d00                	fld	fs0,24(a0)
    5a6c:	0000                	unimp
    5a6e:	2d08                	fld	fa0,24(a0)
    5a70:	0000                	unimp
    5a72:	0005                	c.nop	1
    5a74:	007e                	c.slli	zero,0x1f
    5a76:	2532                	fld	fa0,264(sp)
    5a78:	089f 002d 2800      	0x2800002d089f
    5a7e:	002d                	c.nop	11
    5a80:	0100                	addi	s0,sp,128
    5a82:	5c00                	lw	s0,56(s0)
    5a84:	2d28                	fld	fa0,88(a0)
    5a86:	0000                	unimp
    5a88:	2d30                	fld	fa2,88(a0)
    5a8a:	0000                	unimp
    5a8c:	0005                	c.nop	1
    5a8e:	007e                	c.slli	zero,0x1f
    5a90:	309f2533          	0x309f2533
    5a94:	002d                	c.nop	11
    5a96:	5000                	lw	s0,32(s0)
    5a98:	002d                	c.nop	11
    5a9a:	0100                	addi	s0,sp,128
    5a9c:	5d00                	lw	s0,56(a0)
    5a9e:	2d50                	fld	fa2,152(a0)
    5aa0:	0000                	unimp
    5aa2:	2d58                	fld	fa4,152(a0)
    5aa4:	0000                	unimp
    5aa6:	0005                	c.nop	1
    5aa8:	007e                	c.slli	zero,0x1f
    5aaa:	2534                	fld	fa3,72(a0)
    5aac:	589f 002d 7800      	0x7800002d589f
    5ab2:	002d                	c.nop	11
    5ab4:	0100                	addi	s0,sp,128
    5ab6:	5c00                	lw	s0,56(s0)
    5ab8:	2d78                	fld	fa4,216(a0)
    5aba:	0000                	unimp
    5abc:	2d80                	fld	fs0,24(a1)
    5abe:	0000                	unimp
    5ac0:	0005                	c.nop	1
    5ac2:	007e                	c.slli	zero,0x1f
    5ac4:	2535                	jal	60f0 <_dtoa_r+0xa30>
    5ac6:	809f 002d a000      	0xa000002d809f
    5acc:	002d                	c.nop	11
    5ace:	0100                	addi	s0,sp,128
    5ad0:	5d00                	lw	s0,56(a0)
    5ad2:	2da0                	fld	fs0,88(a1)
    5ad4:	0000                	unimp
    5ad6:	2da8                	fld	fa0,88(a1)
    5ad8:	0000                	unimp
    5ada:	0005                	c.nop	1
    5adc:	007e                	c.slli	zero,0x1f
    5ade:	2536                	fld	fa0,328(sp)
    5ae0:	a89f 002d c400      	0xc400002da89f
    5ae6:	002d                	c.nop	11
    5ae8:	0100                	addi	s0,sp,128
    5aea:	5e00                	lw	s0,56(a2)
    5aec:	2dc4                	fld	fs1,152(a1)
    5aee:	0000                	unimp
    5af0:	2de4                	fld	fs1,216(a1)
    5af2:	0000                	unimp
    5af4:	0002                	c.slli64	zero
    5af6:	9f30                	0x9f30
	...
    5b00:	2cb4                	fld	fa3,88(s1)
    5b02:	0000                	unimp
    5b04:	2cbc                	fld	fa5,88(s1)
    5b06:	0000                	unimp
    5b08:	0008                	0x8
    5b0a:	007a007b          	0x7a007b
    5b0e:	9f1a3127          	fsd	fa7,-1566(s4)
	...
    5b1a:	2cb4                	fld	fa3,88(s1)
    5b1c:	0000                	unimp
    5b1e:	2cc0                	fld	fs0,152(s1)
    5b20:	0000                	unimp
    5b22:	0002                	c.slli64	zero
    5b24:	9f30                	0x9f30
    5b26:	2cc0                	fld	fs0,152(s1)
    5b28:	0000                	unimp
    5b2a:	2cd4                	fld	fa3,152(s1)
    5b2c:	0000                	unimp
    5b2e:	0002                	c.slli64	zero
    5b30:	9f31                	0x9f31
    5b32:	2ce8                	fld	fa0,216(s1)
    5b34:	0000                	unimp
    5b36:	2cfc                	fld	fa5,216(s1)
    5b38:	0000                	unimp
    5b3a:	0002                	c.slli64	zero
    5b3c:	9f31                	0x9f31
    5b3e:	2d10                	fld	fa2,24(a0)
    5b40:	0000                	unimp
    5b42:	2d24                	fld	fs1,88(a0)
    5b44:	0000                	unimp
    5b46:	0002                	c.slli64	zero
    5b48:	9f31                	0x9f31
    5b4a:	2d38                	fld	fa4,88(a0)
    5b4c:	0000                	unimp
    5b4e:	2d4c                	fld	fa1,152(a0)
    5b50:	0000                	unimp
    5b52:	0002                	c.slli64	zero
    5b54:	9f31                	0x9f31
    5b56:	2d60                	fld	fs0,216(a0)
    5b58:	0000                	unimp
    5b5a:	2d74                	fld	fa3,216(a0)
    5b5c:	0000                	unimp
    5b5e:	0002                	c.slli64	zero
    5b60:	9f31                	0x9f31
    5b62:	2d88                	fld	fa0,24(a1)
    5b64:	0000                	unimp
    5b66:	2d9c                	fld	fa5,24(a1)
    5b68:	0000                	unimp
    5b6a:	0002                	c.slli64	zero
    5b6c:	9f31                	0x9f31
    5b6e:	2db0                	fld	fa2,88(a1)
    5b70:	0000                	unimp
    5b72:	2dc4                	fld	fs1,152(a1)
    5b74:	0000                	unimp
    5b76:	0002                	c.slli64	zero
    5b78:	9f31                	0x9f31
    5b7a:	2dd0                	fld	fa2,152(a1)
    5b7c:	0000                	unimp
    5b7e:	2de4                	fld	fs1,216(a1)
    5b80:	0000                	unimp
    5b82:	0002                	c.slli64	zero
    5b84:	9f31                	0x9f31
	...
    5b8e:	2e00                	fld	fs0,24(a2)
    5b90:	0000                	unimp
    5b92:	2e10                	fld	fa2,24(a2)
    5b94:	0000                	unimp
    5b96:	007a0007          	0x7a0007
    5b9a:	010a                	slli	sp,sp,0x2
    5b9c:	2720                	fld	fs0,72(a4)
    5b9e:	289f 002e 3800      	0x3800002e289f
    5ba4:	002e                	c.slli	zero,0xb
    5ba6:	0700                	addi	s0,sp,896
    5ba8:	7a00                	flw	fs0,48(a2)
    5baa:	0a00                	addi	s0,sp,272
    5bac:	2001                	jal	5bac <_dtoa_r+0x4ec>
    5bae:	2e509f27          	0x2e509f27
    5bb2:	0000                	unimp
    5bb4:	2e60                	fld	fs0,216(a2)
    5bb6:	0000                	unimp
    5bb8:	007a0007          	0x7a0007
    5bbc:	010a                	slli	sp,sp,0x2
    5bbe:	2720                	fld	fs0,72(a4)
    5bc0:	789f 002e 8800      	0x8800002e789f
    5bc6:	002e                	c.slli	zero,0xb
    5bc8:	0700                	addi	s0,sp,896
    5bca:	7a00                	flw	fs0,48(a2)
    5bcc:	0a00                	addi	s0,sp,272
    5bce:	2001                	jal	5bce <_dtoa_r+0x50e>
    5bd0:	2ea09f27          	0x2ea09f27
    5bd4:	0000                	unimp
    5bd6:	2eb0                	fld	fa2,88(a3)
    5bd8:	0000                	unimp
    5bda:	007a0007          	0x7a0007
    5bde:	010a                	slli	sp,sp,0x2
    5be0:	2720                	fld	fs0,72(a4)
    5be2:	c89f 002e d800      	0xd800002ec89f
    5be8:	002e                	c.slli	zero,0xb
    5bea:	0700                	addi	s0,sp,896
    5bec:	7a00                	flw	fs0,48(a2)
    5bee:	0a00                	addi	s0,sp,272
    5bf0:	2001                	jal	5bf0 <_dtoa_r+0x530>
    5bf2:	2ef09f27          	0x2ef09f27
    5bf6:	0000                	unimp
    5bf8:	2f00                	fld	fs0,24(a4)
    5bfa:	0000                	unimp
    5bfc:	007a0007          	0x7a0007
    5c00:	010a                	slli	sp,sp,0x2
    5c02:	2720                	fld	fs0,72(a4)
    5c04:	109f 002f 1c00      	0x1c00002f109f
    5c0a:	0700002f          	0x700002f
    5c0e:	7a00                	flw	fs0,48(a2)
    5c10:	0a00                	addi	s0,sp,272
    5c12:	2001                	jal	5c12 <_dtoa_r+0x552>
    5c14:	2f1c9f27          	0x2f1c9f27
    5c18:	0000                	unimp
    5c1a:	2f20                	fld	fs0,88(a4)
    5c1c:	0000                	unimp
    5c1e:	007a000b          	0x7a000b
    5c22:	27a0010b          	0x27a0010b
    5c26:	010a                	slli	sp,sp,0x2
    5c28:	2720                	fld	fs0,72(a4)
    5c2a:	009f 0000 0000      	0x9f
    5c30:	0000                	unimp
    5c32:	f400                	fsw	fs0,40(s0)
    5c34:	002d                	c.nop	11
    5c36:	f800                	fsw	fs0,48(s0)
    5c38:	002d                	c.nop	11
    5c3a:	0100                	addi	s0,sp,128
    5c3c:	5f00                	lw	s0,56(a4)
    5c3e:	2df8                	fld	fa4,216(a1)
    5c40:	0000                	unimp
    5c42:	2e18                	fld	fa4,24(a2)
    5c44:	0000                	unimp
    5c46:	0001                	nop
    5c48:	185d                	addi	a6,a6,-9
    5c4a:	002e                	c.slli	zero,0xb
    5c4c:	2000                	fld	fs0,0(s0)
    5c4e:	002e                	c.slli	zero,0xb
    5c50:	0500                	addi	s0,sp,640
    5c52:	7f00                	flw	fs0,56(a4)
    5c54:	3100                	fld	fs0,32(a0)
    5c56:	9f25                	0x9f25
    5c58:	2e20                	fld	fs0,88(a2)
    5c5a:	0000                	unimp
    5c5c:	2e40                	fld	fs0,152(a2)
    5c5e:	0000                	unimp
    5c60:	0001                	nop
    5c62:	405e                	0x405e
    5c64:	002e                	c.slli	zero,0xb
    5c66:	4800                	lw	s0,16(s0)
    5c68:	002e                	c.slli	zero,0xb
    5c6a:	0500                	addi	s0,sp,640
    5c6c:	7f00                	flw	fs0,56(a4)
    5c6e:	3200                	fld	fs0,32(a2)
    5c70:	9f25                	0x9f25
    5c72:	2e48                	fld	fa0,152(a2)
    5c74:	0000                	unimp
    5c76:	2e68                	fld	fa0,216(a2)
    5c78:	0000                	unimp
    5c7a:	0001                	nop
    5c7c:	685d                	lui	a6,0x17
    5c7e:	002e                	c.slli	zero,0xb
    5c80:	7000                	flw	fs0,32(s0)
    5c82:	002e                	c.slli	zero,0xb
    5c84:	0500                	addi	s0,sp,640
    5c86:	7f00                	flw	fs0,56(a4)
    5c88:	3300                	fld	fs0,32(a4)
    5c8a:	9f25                	0x9f25
    5c8c:	2e70                	fld	fa2,216(a2)
    5c8e:	0000                	unimp
    5c90:	2e90                	fld	fa2,24(a3)
    5c92:	0000                	unimp
    5c94:	0001                	nop
    5c96:	905e                	c.add	zero,s7
    5c98:	002e                	c.slli	zero,0xb
    5c9a:	9800                	0x9800
    5c9c:	002e                	c.slli	zero,0xb
    5c9e:	0500                	addi	s0,sp,640
    5ca0:	7f00                	flw	fs0,56(a4)
    5ca2:	3400                	fld	fs0,40(s0)
    5ca4:	9f25                	0x9f25
    5ca6:	2e98                	fld	fa4,24(a3)
    5ca8:	0000                	unimp
    5caa:	2eb8                	fld	fa4,88(a3)
    5cac:	0000                	unimp
    5cae:	0001                	nop
    5cb0:	b85d                	j	5566 <quorem+0x72>
    5cb2:	002e                	c.slli	zero,0xb
    5cb4:	c000                	sw	s0,0(s0)
    5cb6:	002e                	c.slli	zero,0xb
    5cb8:	0500                	addi	s0,sp,640
    5cba:	7f00                	flw	fs0,56(a4)
    5cbc:	3500                	fld	fs0,40(a0)
    5cbe:	9f25                	0x9f25
    5cc0:	2ec0                	fld	fs0,152(a3)
    5cc2:	0000                	unimp
    5cc4:	2ee0                	fld	fs0,216(a3)
    5cc6:	0000                	unimp
    5cc8:	0001                	nop
    5cca:	e05e                	fsw	fs7,0(sp)
    5ccc:	002e                	c.slli	zero,0xb
    5cce:	e800                	fsw	fs0,16(s0)
    5cd0:	002e                	c.slli	zero,0xb
    5cd2:	0500                	addi	s0,sp,640
    5cd4:	7f00                	flw	fs0,56(a4)
    5cd6:	3600                	fld	fs0,40(a2)
    5cd8:	9f25                	0x9f25
    5cda:	2ee8                	fld	fa0,216(a3)
    5cdc:	0000                	unimp
    5cde:	2f04                	fld	fs1,24(a4)
    5ce0:	0000                	unimp
    5ce2:	0001                	nop
    5ce4:	045f 002f 2400      	0x2400002f045f
    5cea:	0200002f          	0x200002f
    5cee:	3000                	fld	fs0,32(s0)
    5cf0:	009f 0000 0000      	0x9f
    5cf6:	0000                	unimp
    5cf8:	0000                	unimp
    5cfa:	002e                	c.slli	zero,0xb
    5cfc:	1400                	addi	s0,sp,544
    5cfe:	002e                	c.slli	zero,0xb
    5d00:	0200                	addi	s0,sp,256
    5d02:	3100                	fld	fs0,32(a0)
    5d04:	289f 002e 3c00      	0x3c00002e289f
    5d0a:	002e                	c.slli	zero,0xb
    5d0c:	0200                	addi	s0,sp,256
    5d0e:	3100                	fld	fs0,32(a0)
    5d10:	509f 002e 6400      	0x6400002e509f
    5d16:	002e                	c.slli	zero,0xb
    5d18:	0200                	addi	s0,sp,256
    5d1a:	3100                	fld	fs0,32(a0)
    5d1c:	789f 002e 8c00      	0x8c00002e789f
    5d22:	002e                	c.slli	zero,0xb
    5d24:	0200                	addi	s0,sp,256
    5d26:	3100                	fld	fs0,32(a0)
    5d28:	a09f 002e b400      	0xb400002ea09f
    5d2e:	002e                	c.slli	zero,0xb
    5d30:	0200                	addi	s0,sp,256
    5d32:	3100                	fld	fs0,32(a0)
    5d34:	c89f 002e dc00      	0xdc00002ec89f
    5d3a:	002e                	c.slli	zero,0xb
    5d3c:	0200                	addi	s0,sp,256
    5d3e:	3100                	fld	fs0,32(a0)
    5d40:	f09f 002e 0400      	0x400002ef09f
    5d46:	0200002f          	0x200002f
    5d4a:	3100                	fld	fs0,32(a0)
    5d4c:	109f 002f 2400      	0x2400002f109f
    5d52:	0200002f          	0x200002f
    5d56:	3100                	fld	fs0,32(a0)
    5d58:	009f 0000 0000      	0x9f
    5d5e:	0000                	unimp
    5d60:	6c00                	flw	fs0,24(s0)
    5d62:	9800002f          	0x9800002f
    5d66:	0100002f          	0x100002f
    5d6a:	5a00                	lw	s0,48(a2)
    5d6c:	2f98                	fld	fa4,24(a5)
    5d6e:	0000                	unimp
    5d70:	2f9c                	fld	fa5,24(a5)
    5d72:	0000                	unimp
    5d74:	0004                	0x4
    5d76:	9f5a01f3          	0x9f5a01f3
	...
    5d82:	2f6c                	fld	fa1,216(a4)
    5d84:	0000                	unimp
    5d86:	2f78                	fld	fa4,216(a4)
    5d88:	0000                	unimp
    5d8a:	0001                	nop
    5d8c:	002f785b          	0x2f785b
    5d90:	9c00                	0x9c00
    5d92:	0400002f          	0x400002f
    5d96:	f300                	fsw	fs0,32(a4)
    5d98:	5b01                	li	s6,-32
    5d9a:	009f 0000 0000      	0x9f
    5da0:	0000                	unimp
    5da2:	6c00                	flw	fs0,24(s0)
    5da4:	7800002f          	0x7800002f
    5da8:	0200002f          	0x200002f
    5dac:	3000                	fld	fs0,32(s0)
    5dae:	789f 002f 8c00      	0x8c00002f789f
    5db4:	0700002f          	0x700002f
    5db8:	7b00                	flw	fs0,48(a4)
    5dba:	f300                	fsw	fs0,32(a4)
    5dbc:	5b01                	li	s6,-32
    5dbe:	9f1c                	0x9f1c
    5dc0:	2f8c                	fld	fa1,24(a5)
    5dc2:	0000                	unimp
    5dc4:	2f90                	fld	fa2,24(a5)
    5dc6:	0000                	unimp
    5dc8:	0009                	c.nop	2
    5dca:	01f3007b          	0x1f3007b
    5dce:	01231c5b          	0x1231c5b
    5dd2:	909f 002f 9400      	0x9400002f909f
    5dd8:	0700002f          	0x700002f
    5ddc:	7b00                	flw	fs0,48(a4)
    5dde:	f300                	fsw	fs0,32(a4)
    5de0:	5b01                	li	s6,-32
    5de2:	9f1c                	0x9f1c
	...
    5dec:	2f7c                	fld	fa5,216(a4)
    5dee:	0000                	unimp
    5df0:	2f8c                	fld	fa1,24(a5)
    5df2:	0000                	unimp
    5df4:	0001                	nop
    5df6:	005d                	c.nop	23
    5df8:	0000                	unimp
    5dfa:	0000                	unimp
    5dfc:	0000                	unimp
    5dfe:	8000                	0x8000
    5e00:	8400002f          	0x8400002f
    5e04:	0500002f          	0x500002f
    5e08:	7f00                	flw	fs0,56(a4)
    5e0a:	3100                	fld	fs0,32(a0)
    5e0c:	9f1a                	add	t5,t5,t1
    5e0e:	2f84                	fld	fs1,24(a5)
    5e10:	0000                	unimp
    5e12:	2f8c                	fld	fa1,24(a5)
    5e14:	0000                	unimp
    5e16:	0001                	nop
    5e18:	005f 0000 0000      	0x5f
	...
    5e26:	0000                	unimp
    5e28:	0100                	addi	s0,sp,128
    5e2a:	5a00                	lw	s0,48(a2)
	...
    5e34:	0004                	0x4
    5e36:	9f5a01f3          	0x9f5a01f3
	...
    5e4a:	0002                	c.slli64	zero
    5e4c:	9f30                	0x9f30
	...
    5e56:	0001                	nop
    5e58:	005c                	addi	a5,sp,4
    5e5a:	0000                	unimp
    5e5c:	0000                	unimp
    5e5e:	0000                	unimp
    5e60:	0100                	addi	s0,sp,128
    5e62:	5b00                	lw	s0,48(a4)
	...
    5e74:	0005                	c.nop	1
    5e76:	007f                	0x7f
    5e78:	1a32                	slli	s4,s4,0x2c
    5e7a:	009f 0000 0000      	0x9f
    5e80:	0000                	unimp
    5e82:	0100                	addi	s0,sp,128
    5e84:	5f00                	lw	s0,56(a4)
	...
    5e96:	0005                	c.nop	1
    5e98:	007e                	c.slli	zero,0x1f
    5e9a:	1a34                	addi	a3,sp,312
    5e9c:	009f 0000 0000      	0x9f
    5ea2:	0000                	unimp
    5ea4:	0100                	addi	s0,sp,128
    5ea6:	5e00                	lw	s0,56(a2)
	...
    5eb8:	0002                	c.slli64	zero
    5eba:	9f30                	0x9f30
	...
    5ec4:	0006                	c.slli	zero,0x1
    5ec6:	007d                	c.nop	31
    5ec8:	007a                	c.slli	zero,0x1e
    5eca:	9f1c                	0x9f1c
	...
    5ed4:	007a0007          	0x7a0007
    5ed8:	7d20                	flw	fs0,120(a0)
    5eda:	2200                	fld	fs0,0(a2)
    5edc:	009f 0000 0000      	0x9f
	...
    5eea:	0000                	unimp
    5eec:	0500                	addi	s0,sp,640
    5eee:	7f00                	flw	fs0,56(a4)
    5ef0:	3100                	fld	fs0,32(a0)
    5ef2:	9f1a                	add	t5,t5,t1
	...
    5efc:	0001                	nop
    5efe:	005f 0000 0000      	0x5f
	...
    5f0c:	0000                	unimp
    5f0e:	0500                	addi	s0,sp,640
    5f10:	7f00                	flw	fs0,56(a4)
    5f12:	3100                	fld	fs0,32(a0)
    5f14:	9f1a                	add	t5,t5,t1
	...
    5f1e:	0001                	nop
    5f20:	005f 0000 0000      	0x5f
	...
    5f2e:	0000                	unimp
    5f30:	0500                	addi	s0,sp,640
    5f32:	7f00                	flw	fs0,56(a4)
    5f34:	3200                	fld	fs0,32(a2)
    5f36:	9f1a                	add	t5,t5,t1
	...
    5f40:	0001                	nop
    5f42:	005f 0000 0000      	0x5f
	...
    5f50:	0000                	unimp
    5f52:	0500                	addi	s0,sp,640
    5f54:	7e00                	flw	fs0,56(a2)
    5f56:	3400                	fld	fs0,40(s0)
    5f58:	9f1a                	add	t5,t5,t1
	...
    5f62:	0001                	nop
    5f64:	005e                	c.slli	zero,0x17
    5f66:	0000                	unimp
    5f68:	0000                	unimp
    5f6a:	0000                	unimp
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
	la gp, __global_pointer$
   0:	0074                	addi	a3,sp,12
   2:	0000                	unimp
   4:	0002                	c.slli64	zero
   6:	0000                	unimp
	la sp, _sp 
   8:	0000                	unimp
   a:	0004                	0x4
	...
	sw t0, (a1)
  30:	0c60                	addi	s0,sp,540
  32:	0000                	unimp
	lw t1, (a1)
  34:	0690                	addi	a2,sp,832
  36:	0000                	unimp
	addi a0, a0, 4
  38:	12f0                	addi	a2,sp,364
  3a:	0000                	unimp
	addi a1, a1, 4
  3c:	026c                	addi	a1,sp,268
	...
    j loop
  76:	0000                	unimp
{
  78:	0024                	addi	s1,sp,8
  7a:	0000                	unimp
    portable_init(&(results[0].port), &argc, argv);
  7c:	0002                	c.slli64	zero
  7e:	1a69                	addi	s4,s4,-6
{
  80:	0000                	unimp
  82:	0004                	0x4
  84:	0000                	unimp
  86:	0000                	unimp
  88:	155c                	addi	a5,sp,676
  8a:	0000                	unimp
  8c:	00a8                	addi	a0,sp,72
  8e:	0000                	unimp
  90:	0078                	addi	a4,sp,12
  92:	0000                	unimp
  94:	0be8                	addi	a0,sp,476
	...
  9e:	0000                	unimp
  a0:	005c                	addi	a5,sp,4
  a2:	0000                	unimp
  a4:	0002                	c.slli64	zero
  a6:	00002e67          	0x2e67
  aa:	0004                	0x4
  ac:	0000                	unimp
  ae:	0000                	unimp
  b0:	1604                	addi	s1,sp,800
  b2:	0000                	unimp
  b4:	0570                	addi	a2,sp,652
  b6:	0000                	unimp
  b8:	1b74                	addi	a3,sp,444
  ba:	0000                	unimp
    portable_init(&(results[0].port), &argc, argv);
  bc:	0044                	addi	s1,sp,4
  be:	0000                	unimp
  c0:	1bb8                	addi	a4,sp,504
  c2:	0000                	unimp
  c4:	0124                	addi	s1,sp,136
	...
    results[0].seed2      = get_seed(2);
  fe:	0000                	unimp
    results[0].seed3      = get_seed(3);
 100:	0044                	addi	s1,sp,4
 102:	0000                	unimp
 104:	0002                	c.slli64	zero
 106:	4321                	li	t1,8
 108:	0000                	unimp
 10a:	0004                	0x4
 10c:	0000                	unimp
 10e:	0000                	unimp
    results[0].iterations = get_seed_32(4);
 110:	1cdc                	addi	a5,sp,628
 112:	0000                	unimp
 114:	0028                	addi	a0,sp,8
 116:	0000                	unimp
 118:	1d04                	addi	s1,sp,688
 11a:	0000                	unimp
 11c:	0028                	addi	a0,sp,8
 11e:	0000                	unimp
    results[0].execs = get_seed_32(5);
 120:	1d2c                	addi	a1,sp,696
 122:	0000                	unimp
 124:	0018                	0x18
 126:	0000                	unimp
 128:	1d44                	addi	s1,sp,692
 12a:	0000                	unimp
    if (results[0].execs == 0)
 12c:	0030                	addi	a2,sp,8
 12e:	0000                	unimp
    results[0].execs = get_seed_32(5);
 130:	1d74                	addi	a3,sp,700
 132:	0000                	unimp
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
 134:	0038                	addi	a4,sp,8
 136:	0000                	unimp
 138:	1dac                	addi	a1,sp,760
 13a:	0000                	unimp
 13c:	0008                	0x8
	...
 146:	0000                	unimp
 148:	002c                	addi	a1,sp,8
 14a:	0000                	unimp
 14c:	0002                	c.slli64	zero
 14e:	00004ec7          	fmsub.s	ft9,ft0,ft0,ft0,rmm
 152:	0004                	0x4
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
 154:	0000                	unimp
 156:	0000                	unimp
 158:	1db4                	addi	a3,sp,760
 15a:	0000                	unimp
        && (results[0].seed3 == 0))
 15c:	01bc                	addi	a5,sp,200
 15e:	0000                	unimp
 160:	1f70                	addi	a2,sp,956
 162:	0000                	unimp
 164:	0330                	addi	a2,sp,392
 166:	0000                	unimp
        results[0].seed1 = 0x3415;
 168:	22a0                	fld	fs0,64(a3)
 16a:	0000                	unimp
 16c:	020c                	addi	a1,sp,256
	...
 176:	0000                	unimp
        results[0].seed3 = 0x66;
 178:	0044                	addi	s1,sp,4
 17a:	0000                	unimp
 17c:	0002                	c.slli64	zero
 17e:	5cb4                	lw	a3,120(s1)
        if ((1 << (ee_u32)i) & results[0].execs)
 180:	0000                	unimp
 182:	0004                	0x4
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 184:	0000                	unimp
 186:	0000                	unimp
 188:	24ac                	fld	fa1,72(s1)
 18a:	0000                	unimp
 18c:	0064                	addi	s1,sp,12
	...
 196:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 198:	2510                	fld	fa2,8(a0)
 19a:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 19c:	0280                	addi	s0,sp,320
 19e:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 1a0:	2790                	fld	fa2,8(a5)
 1a2:	0000                	unimp
            num_algorithms++;
 1a4:	0510                	addi	a2,sp,640
 1a6:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 1a8:	2ca0                	fld	fs0,88(s1)
 1aa:	0000                	unimp
 1ac:	0288                	addi	a0,sp,320
 1ae:	0000                	unimp
    results[i].err         = 0;
 1b0:	2f28                	fld	fa0,88(a4)
 1b2:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 1b4:	0008                	0x8
	...
 1be:	0000                	unimp
            num_algorithms++;
 1c0:	0024                	addi	s1,sp,8
 1c2:	0000                	unimp
 1c4:	0002                	c.slli64	zero
 1c6:	6af6                	flw	fs5,92(sp)
 1c8:	0000                	unimp
 1ca:	0004                	0x4
	...
        if ((1 << (ee_u32)i) & results[0].execs)
 1d8:	2f30                	fld	fa2,88(a4)
 1da:	0000                	unimp
        results[i].size = results[i].size / num_algorithms;
 1dc:	003c                	addi	a5,sp,8
	...
        if ((1 << (ee_u32)i) & results[0].execs)
 1e6:	0000                	unimp
 1e8:	003c                	addi	a5,sp,8
 1ea:	0000                	unimp
        if (results[i].execs & ID_LIST)
 1ec:	0002                	c.slli64	zero
 1ee:	7498                	flw	fa4,40(s1)
        if (results[i].execs & ID_MATRIX)
 1f0:	0000                	unimp
 1f2:	0004                	0x4
	...
            core_init_state(
 218:	2f6c                	fld	fa1,216(a4)
 21a:	0000                	unimp
 21c:	0030                	addi	a2,sp,8
	...
 226:	0000                	unimp
    if (results[0].iterations == 0)
 228:	001c                	0x1c
 22a:	0000                	unimp
 22c:	0002                	c.slli64	zero
 22e:	0000771b          	0x771b
        while (secs_passed < (secs_ret)1)
 232:	0004                	0x4
	...
        results[0].iterations = 1;
 23c:	0078                	addi	a4,sp,12
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
	la gp, __global_pointer$
   0:	0001                	nop
   2:	0000                	unimp
   4:	0001                	nop
   6:	0000                	unimp
	la sp, _sp 
   8:	0001                	nop
   a:	0000                	unimp
   c:	0001                	nop
   e:	0000                	unimp
	la a0, _data_lma 
  10:	0001                	nop
  12:	0000                	unimp
  14:	0001                	nop
	...
	la a1, _data
  1e:	0000                	unimp
	la a2, _edata
  20:	0001                	nop
  22:	0000                	unimp
  24:	0001                	nop
  26:	0000                	unimp
	bgeu a1, a2, 2f
  28:	0001                	nop
  2a:	0000                	unimp
	lw t0, (a0)
  2c:	0001                	nop
  2e:	0000                	unimp
	sw t0, (a1)
  30:	0001                	nop
  32:	0000                	unimp
	lw t1, (a1)
  34:	0001                	nop
  36:	0000                	unimp
	addi a0, a0, 4
  38:	0001                	nop
  3a:	0000                	unimp
	addi a1, a1, 4
  3c:	0001                	nop
  3e:	0000                	unimp
	bltu a1, a2, 1b
  40:	0001                	nop
  42:	0000                	unimp
	la a0, __bss_start
  44:	0001                	nop
  46:	0000                	unimp
  48:	0001                	nop
  4a:	0000                	unimp
	la a1, _end
  4c:	0001                	nop
	...
	bgeu a0, a1, 2f
  56:	0000                	unimp
	sw zero, (a0)
  58:	0001                	nop
  5a:	0000                	unimp
	addi a0, a0, 4
  5c:	0001                	nop
  5e:	0000                	unimp
	bltu a0, a1, 1b
  60:	0001                	nop
  62:	0000                	unimp
    li x31,0xa0
  64:	0001                	nop
  66:	0000                	unimp
    call main
  68:	0001                	nop
  6a:	0000                	unimp
  6c:	0001                	nop
  6e:	0000                	unimp
    li x31,0xaa
  70:	0001                	nop
  72:	0000                	unimp
    j loop
  74:	0001                	nop
	...
    portable_init(&(results[0].port), &argc, argv);
  7e:	0000                	unimp
{
  80:	0001                	nop
  82:	0000                	unimp
  84:	0001                	nop
  86:	0000                	unimp
  88:	0001                	nop
  8a:	0000                	unimp
  8c:	0001                	nop
  8e:	0000                	unimp
  90:	0001                	nop
  92:	0000                	unimp
  94:	0001                	nop
	...
  9e:	0000                	unimp
  a0:	0001                	nop
  a2:	0000                	unimp
  a4:	0001                	nop
  a6:	0000                	unimp
  a8:	0001                	nop
  aa:	0000                	unimp
  ac:	0001                	nop
  ae:	0000                	unimp
  b0:	0001                	nop
  b2:	0000                	unimp
  b4:	0001                	nop
  b6:	0000                	unimp
  b8:	0001                	nop
  ba:	0000                	unimp
    portable_init(&(results[0].port), &argc, argv);
  bc:	0001                	nop
	...
  c6:	0000                	unimp
  c8:	0cc0                	addi	s0,sp,596
  ca:	0000                	unimp
{
  cc:	0cc4                	addi	s1,sp,596
  ce:	0000                	unimp
    portable_init(&(results[0].port), &argc, argv);
  d0:	0ccc                	addi	a1,sp,596
  d2:	0000                	unimp
  d4:	0d04                	addi	s1,sp,656
  d6:	0000                	unimp
  d8:	0d04                	addi	s1,sp,656
  da:	0000                	unimp
  dc:	0d0c                	addi	a1,sp,656
  de:	0000                	unimp
    results[0].seed1      = get_seed(1);
  e0:	0f7c                	addi	a5,sp,924
  e2:	0000                	unimp
  e4:	0fb0                	addi	a2,sp,984
	...
  ee:	0000                	unimp
    results[0].seed2      = get_seed(2);
  f0:	0d04                	addi	s1,sp,656
  f2:	0000                	unimp
  f4:	0d04                	addi	s1,sp,656
  f6:	0000                	unimp
  f8:	0d0c                	addi	a1,sp,656
  fa:	0000                	unimp
  fc:	0d20                	addi	s0,sp,664
	...
    results[0].seed3      = get_seed(3);
 106:	0000                	unimp
 108:	0db8                	addi	a4,sp,728
 10a:	0000                	unimp
 10c:	0db8                	addi	a4,sp,728
 10e:	0000                	unimp
    results[0].iterations = get_seed_32(4);
 110:	0dbc                	addi	a5,sp,728
 112:	0000                	unimp
 114:	0dd8                	addi	a4,sp,724
 116:	0000                	unimp
 118:	0ddc                	addi	a5,sp,724
 11a:	0000                	unimp
 11c:	0de0                	addi	s0,sp,732
	...
    results[0].execs = get_seed_32(5);
 126:	0000                	unimp
 128:	0db8                	addi	a4,sp,728
 12a:	0000                	unimp
    if (results[0].execs == 0)
 12c:	0dbc                	addi	a5,sp,728
 12e:	0000                	unimp
    results[0].execs = get_seed_32(5);
 130:	0dd8                	addi	a4,sp,724
 132:	0000                	unimp
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
 134:	0ddc                	addi	a5,sp,724
 136:	0000                	unimp
 138:	0de0                	addi	s0,sp,732
 13a:	0000                	unimp
 13c:	0dfc                	addi	a5,sp,732
 13e:	0000                	unimp
 140:	0f20                	addi	s0,sp,920
 142:	0000                	unimp
 144:	0f38                	addi	a4,sp,920
	...
 14e:	0000                	unimp
 150:	0e2c                	addi	a1,sp,792
 152:	0000                	unimp
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
 154:	0e34                	addi	a3,sp,792
 156:	0000                	unimp
 158:	0e38                	addi	a4,sp,792
 15a:	0000                	unimp
        && (results[0].seed3 == 0))
 15c:	0e48                	addi	a0,sp,788
	...
 166:	0000                	unimp
        results[0].seed1 = 0x3415;
 168:	0e34                	addi	a3,sp,792
 16a:	0000                	unimp
 16c:	0e38                	addi	a4,sp,792
 16e:	0000                	unimp
 170:	0e48                	addi	a0,sp,788
 172:	0000                	unimp
 174:	0f20                	addi	s0,sp,920
 176:	0000                	unimp
        results[0].seed3 = 0x66;
 178:	0f44                	addi	s1,sp,916
 17a:	0000                	unimp
 17c:	0f7c                	addi	a5,sp,924
 17e:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 180:	0fd8                	addi	a4,sp,980
 182:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 184:	0fd8                	addi	a4,sp,980
 186:	0000                	unimp
 188:	11f0                	addi	a2,sp,236
 18a:	0000                	unimp
 18c:	11f8                	addi	a4,sp,236
	...
 196:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 198:	1048                	addi	a0,sp,36
 19a:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 19c:	11f0                	addi	a2,sp,236
 19e:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 1a0:	11f8                	addi	a4,sp,236
 1a2:	0000                	unimp
            num_algorithms++;
 1a4:	12e8                	addi	a0,sp,364
	...
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 1ae:	0000                	unimp
    results[i].err         = 0;
 1b0:	1054                	addi	a3,sp,36
 1b2:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 1b4:	105c                	addi	a5,sp,36
 1b6:	0000                	unimp
            num_algorithms++;
 1b8:	106c                	addi	a1,sp,44
 1ba:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 1bc:	1070                	addi	a2,sp,44
 1be:	0000                	unimp
            num_algorithms++;
 1c0:	10b0                	addi	a2,sp,104
 1c2:	0000                	unimp
 1c4:	1174                	addi	a3,sp,172
 1c6:	0000                	unimp
 1c8:	11f8                	addi	a4,sp,236
 1ca:	0000                	unimp
        results[i].size = results[i].size / num_algorithms;
 1cc:	12e8                	addi	a0,sp,364
	...
 1d6:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 1d8:	1054                	addi	a3,sp,36
 1da:	0000                	unimp
        results[i].size = results[i].size / num_algorithms;
 1dc:	105c                	addi	a5,sp,36
 1de:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
 1e0:	106c                	addi	a1,sp,44
 1e2:	0000                	unimp
 1e4:	1070                	addi	a2,sp,44
 1e6:	0000                	unimp
 1e8:	1110                	addi	a2,sp,160
 1ea:	0000                	unimp
        if (results[i].execs & ID_LIST)
 1ec:	1170                	addi	a2,sp,172
 1ee:	0000                	unimp
        if (results[i].execs & ID_MATRIX)
 1f0:	11f8                	addi	a4,sp,236
 1f2:	0000                	unimp
        if (results[i].execs & ID_STATE)
 1f4:	126c                	addi	a1,sp,300
	...
            core_init_state(
 1fe:	0000                	unimp
 200:	1054                	addi	a3,sp,36
 202:	0000                	unimp
                results[0].size, results[i].seed1, results[i].memblock[3]);
 204:	105c                	addi	a5,sp,36
 206:	0000                	unimp
            core_init_state(
 208:	106c                	addi	a1,sp,44
 20a:	0000                	unimp
 20c:	1070                	addi	a2,sp,44
 20e:	0000                	unimp
 210:	1120                	addi	s0,sp,168
 212:	0000                	unimp
 214:	1170                	addi	a2,sp,172
 216:	0000                	unimp
 218:	11f8                	addi	a4,sp,236
 21a:	0000                	unimp
 21c:	126c                	addi	a1,sp,300
	...
 226:	0000                	unimp
    if (results[0].iterations == 0)
 228:	10b0                	addi	a2,sp,104
 22a:	0000                	unimp
 22c:	1110                	addi	a2,sp,160
 22e:	0000                	unimp
        while (secs_passed < (secs_ret)1)
 230:	126c                	addi	a1,sp,300
 232:	0000                	unimp
 234:	12e8                	addi	a0,sp,364
	...
        results[0].iterations = 1;
 23e:	0000                	unimp
 240:	10c0                	addi	s0,sp,100
 242:	0000                	unimp
        crc      = core_bench_list(res, 1);
 244:	1110                	addi	a2,sp,160
 246:	0000                	unimp
 248:	126c                	addi	a1,sp,300
 24a:	0000                	unimp
 24c:	12e8                	addi	a0,sp,364
	...
 256:	0000                	unimp
 258:	1304                	addi	s1,sp,416
 25a:	0000                	unimp
            results[0].iterations *= 10;
 25c:	1308                	addi	a0,sp,416
 25e:	0000                	unimp
    for (i = 0; i < iterations; i++)
 260:	1330                	addi	a2,sp,424
 262:	0000                	unimp
            results[0].iterations *= 10;
 264:	1358                	addi	a4,sp,420
 266:	0000                	unimp
 268:	1554                	addi	a3,sp,676
 26a:	0000                	unimp
 26c:	155c                	addi	a5,sp,676
	...
            start_time();
 276:	0000                	unimp
 278:	1360                	addi	s0,sp,428
 27a:	0000                	unimp
    ee_u32        iterations = res->iterations;
 27c:	1368                	addi	a0,sp,428
 27e:	0000                	unimp
    res->crc                 = 0;
 280:	136c                	addi	a1,sp,428
 282:	0000                	unimp
 284:	13c4                	addi	s1,sp,484
	...
        crc      = core_bench_list(res, 1);
 28e:	0000                	unimp
 290:	1360                	addi	s0,sp,428
 292:	0000                	unimp
 294:	1368                	addi	a0,sp,428
 296:	0000                	unimp
 298:	136c                	addi	a1,sp,428
 29a:	0000                	unimp
        res->crc = crcu16(crc, res->crc);
 29c:	1370                	addi	a2,sp,428
 29e:	0000                	unimp
 2a0:	1370                	addi	a2,sp,428
 2a2:	0000                	unimp
 2a4:	1388                	addi	a0,sp,480
 2a6:	0000                	unimp
 2a8:	1398                	addi	a4,sp,480
 2aa:	0000                	unimp
        crc      = core_bench_list(res, -1);
 2ac:	139c                	addi	a5,sp,480
 2ae:	0000                	unimp
 2b0:	13a0                	addi	s0,sp,488
 2b2:	0000                	unimp
 2b4:	13a4                	addi	s1,sp,488
 2b6:	0000                	unimp
 2b8:	13a8                	addi	a0,sp,488
 2ba:	0000                	unimp
        res->crc = crcu16(crc, res->crc);
 2bc:	13ac                	addi	a1,sp,488
 2be:	0000                	unimp
 2c0:	13b0                	addi	a2,sp,488
 2c2:	0000                	unimp
 2c4:	13c4                	addi	s1,sp,484
	...
        if (i == 0)
 2ce:	0000                	unimp
    for (i = 0; i < iterations; i++)
 2d0:	1360                	addi	s0,sp,428
 2d2:	0000                	unimp
 2d4:	1368                	addi	a0,sp,428
 2d6:	0000                	unimp
            stop_time();
 2d8:	136c                	addi	a1,sp,428
 2da:	0000                	unimp
 2dc:	1370                	addi	a2,sp,428
 2de:	0000                	unimp
            secs_passed = time_in_secs(get_time());
 2e0:	13ac                	addi	a1,sp,488
 2e2:	0000                	unimp
 2e4:	13ac                	addi	a1,sp,488
 2e6:	0000                	unimp
 2e8:	13b0                	addi	a2,sp,488
 2ea:	0000                	unimp
 2ec:	13b8                	addi	a4,sp,488
 2ee:	0000                	unimp
        while (secs_passed < (secs_ret)1)
 2f0:	13b8                	addi	a4,sp,488
 2f2:	0000                	unimp
 2f4:	13c4                	addi	s1,sp,484
	...
            secs_passed = time_in_secs(get_time());
 2fe:	0000                	unimp
        while (secs_passed < (secs_ret)1)
 300:	13dc                	addi	a5,sp,484
 302:	0000                	unimp
 304:	13e0                	addi	s0,sp,492
 306:	0000                	unimp
 308:	13e4                	addi	s1,sp,492
 30a:	0000                	unimp
        divisor = (ee_u32)secs_passed;
 30c:	13e8                	addi	a0,sp,492
 30e:	0000                	unimp
 310:	150c                	addi	a1,sp,672
 312:	0000                	unimp
 314:	1518                	addi	a4,sp,672
 316:	0000                	unimp
 318:	151c                	addi	a5,sp,672
 31a:	0000                	unimp
        if (divisor == 0) /* some machines cast float to int as 0 since this
 31c:	152c                	addi	a1,sp,680
 31e:	0000                	unimp
            divisor = 1;
 320:	1530                	addi	a2,sp,680
 322:	0000                	unimp
        results[0].iterations *= 1 + 10 / divisor;
 324:	1538                	addi	a4,sp,680
	...
 32e:	0000                	unimp
 330:	0001                	nop
 332:	0000                	unimp
 334:	0001                	nop
 336:	0000                	unimp
 338:	0001                	nop
 33a:	0000                	unimp
    start_time();
 33c:	0001                	nop
	...
    iterate(&results[0]);
 346:	0000                	unimp
 348:	0001                	nop
 34a:	0000                	unimp
 34c:	0001                	nop
 34e:	0000                	unimp
 350:	0001                	nop
 352:	0000                	unimp
 354:	0001                	nop
 356:	0000                	unimp
 358:	0001                	nop
 35a:	0000                	unimp
 35c:	0001                	nop
 35e:	0000                	unimp
 360:	0001                	nop
 362:	0000                	unimp
    stop_time();
 364:	0001                	nop
 366:	0000                	unimp
 368:	0c60                	addi	s0,sp,540
 36a:	0000                	unimp
    total_time = get_time();
 36c:	12f0                	addi	a2,sp,364
 36e:	0000                	unimp
 370:	12f0                	addi	a2,sp,364
 372:	0000                	unimp
    seedcrc = crc16(results[0].seed1, seedcrc);
 374:	155c                	addi	a5,sp,676
 376:	0000                	unimp
 378:	0001                	nop
 37a:	0000                	unimp
 37c:	0001                	nop
 37e:	0000                	unimp
    total_time = get_time();
 380:	0001                	nop
 382:	0000                	unimp
    seedcrc = crc16(results[0].seed1, seedcrc);
 384:	0001                	nop
 386:	0000                	unimp
 388:	0001                	nop
 38a:	0000                	unimp
 38c:	0001                	nop
 38e:	0000                	unimp
 390:	0001                	nop
 392:	0000                	unimp
 394:	0001                	nop
 396:	0000                	unimp
    seedcrc = crc16(results[0].seed2, seedcrc);
 398:	0001                	nop
 39a:	0000                	unimp
 39c:	0001                	nop
 39e:	0000                	unimp
 3a0:	0001                	nop
 3a2:	0000                	unimp
 3a4:	0001                	nop
	...
    seedcrc = crc16(results[0].seed3, seedcrc);
 3ae:	0000                	unimp
 3b0:	01d8                	addi	a4,sp,196
 3b2:	0000                	unimp
 3b4:	01dc                	addi	a5,sp,196
 3b6:	0000                	unimp
 3b8:	01e0                	addi	s0,sp,204
 3ba:	0000                	unimp
 3bc:	01ec                	addi	a1,sp,204
 3be:	0000                	unimp
    seedcrc = crc16(results[0].size, seedcrc);
 3c0:	0a58                	addi	a4,sp,276
 3c2:	0000                	unimp
 3c4:	0ac4                	addi	s1,sp,340
	...
 3ce:	0000                	unimp
    switch (seedcrc)
 3d0:	0230                	addi	a2,sp,264
 3d2:	0000                	unimp
 3d4:	033c                	addi	a5,sp,392
 3d6:	0000                	unimp
    seedcrc = crc16(results[0].size, seedcrc);
 3d8:	0ae0                	addi	s0,sp,348
 3da:	0000                	unimp
    switch (seedcrc)
 3dc:	0af4                	addi	a3,sp,348
	...
 3e6:	0000                	unimp
 3e8:	0244                	addi	s1,sp,260
 3ea:	0000                	unimp
 3ec:	025c                	addi	a5,sp,260
 3ee:	0000                	unimp
 3f0:	0260                	addi	s0,sp,268
 3f2:	0000                	unimp
 3f4:	0264                	addi	s1,sp,268
 3f6:	0000                	unimp
 3f8:	027c                	addi	a5,sp,268
 3fa:	0000                	unimp
            ee_printf("2K performance run parameters for coremark.\n");
 3fc:	02d8                	addi	a4,sp,324
 3fe:	0000                	unimp
 400:	0ae0                	addi	s0,sp,348
 402:	0000                	unimp
 404:	0af4                	addi	a3,sp,348
	...
 40e:	0000                	unimp
 410:	155c                	addi	a5,sp,676
 412:	0000                	unimp
 414:	1604                	addi	s1,sp,800
 416:	0000                	unimp
            known_id = 3;
 418:	0078                	addi	a4,sp,12
 41a:	0000                	unimp
            ee_printf("2K performance run parameters for coremark.\n");
 41c:	0c60                	addi	s0,sp,540
	...
 426:	0000                	unimp
            known_id = 3;
 428:	1648                	addi	a0,sp,804
 42a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 42c:	1684                	addi	s1,sp,864
 42e:	0000                	unimp
 430:	1688                	addi	a0,sp,864
 432:	0000                	unimp
 434:	16c0                	addi	s0,sp,868
 436:	0000                	unimp
 438:	16cc                	addi	a1,sp,868
 43a:	0000                	unimp
 43c:	16d4                	addi	a3,sp,868
	...
            results[i].err = 0;
 446:	0000                	unimp
 448:	16c0                	addi	s0,sp,868
 44a:	0000                	unimp
 44c:	16cc                	addi	a1,sp,868
 44e:	0000                	unimp
 450:	16d4                	addi	a3,sp,868
 452:	0000                	unimp
 454:	170c                	addi	a1,sp,928
	...
 45e:	0000                	unimp
 460:	170c                	addi	a1,sp,928
 462:	0000                	unimp
 464:	178c                	addi	a1,sp,992
 466:	0000                	unimp
 468:	1b34                	addi	a3,sp,440
 46a:	0000                	unimp
 46c:	1b34                	addi	a3,sp,440
	...
 476:	0000                	unimp
            total_errors += results[i].err;
 478:	179c                	addi	a5,sp,992
 47a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 47c:	17b0                	addi	a2,sp,1000
 47e:	0000                	unimp
            total_errors += results[i].err;
 480:	17bc                	addi	a5,sp,1000
 482:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 484:	17bc                	addi	a5,sp,1000
 486:	0000                	unimp
            total_errors += results[i].err;
 488:	17c8                	addi	a0,sp,996
 48a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 48c:	17f8                	addi	a4,sp,1004
 48e:	0000                	unimp
            total_errors += results[i].err;
 490:	1b40                	addi	s0,sp,436
 492:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 494:	1b40                	addi	s0,sp,436
	...
 49e:	0000                	unimp
            results[i].err = 0;
 4a0:	17f8                	addi	a4,sp,1004
 4a2:	0000                	unimp
 4a4:	1874                	addi	a3,sp,60
 4a6:	0000                	unimp
 4a8:	18b0                	addi	a2,sp,120
 4aa:	0000                	unimp
 4ac:	18b8                	addi	a4,sp,120
 4ae:	0000                	unimp
 4b0:	1b40                	addi	s0,sp,436
 4b2:	0000                	unimp
 4b4:	1b40                	addi	s0,sp,436
	...
 4be:	0000                	unimp
            if ((results[i].execs & ID_LIST)
 4c0:	1884                	addi	s1,sp,112
 4c2:	0000                	unimp
 4c4:	18b0                	addi	a2,sp,120
 4c6:	0000                	unimp
                && (results[i].crclist != list_known_crc[known_id]))
 4c8:	18b8                	addi	a4,sp,120
 4ca:	0000                	unimp
 4cc:	1914                	addi	a3,sp,176
 4ce:	0000                	unimp
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
 4d0:	1b2c                	addi	a1,sp,440
 4d2:	0000                	unimp
 4d4:	1b34                	addi	a3,sp,440
 4d6:	0000                	unimp
 4d8:	1b50                	addi	a2,sp,436
 4da:	0000                	unimp
 4dc:	1b50                	addi	a2,sp,436
	...
 4e6:	0000                	unimp
                results[i].err++;
 4e8:	1914                	addi	a3,sp,176
 4ea:	0000                	unimp
 4ec:	1990                	addi	a2,sp,240
 4ee:	0000                	unimp
 4f0:	19bc                	addi	a5,sp,248
 4f2:	0000                	unimp
            if ((results[i].execs & ID_MATRIX)
 4f4:	19c4                	addi	s1,sp,244
 4f6:	0000                	unimp
 4f8:	1b50                	addi	a2,sp,436
 4fa:	0000                	unimp
 4fc:	1b50                	addi	a2,sp,436
	...
 506:	0000                	unimp
 508:	1994                	addi	a3,sp,240
 50a:	0000                	unimp
 50c:	1998                	addi	a4,sp,240
 50e:	0000                	unimp
 510:	19a8                	addi	a0,sp,248
 512:	0000                	unimp
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
 514:	19bc                	addi	a5,sp,248
 516:	0000                	unimp
 518:	19c4                	addi	s1,sp,244
 51a:	0000                	unimp
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
 51c:	1a30                	addi	a2,sp,312
 51e:	0000                	unimp
 520:	1b60                	addi	s0,sp,444
 522:	0000                	unimp
 524:	1b60                	addi	s0,sp,444
	...
 52e:	0000                	unimp
 530:	19d8                	addi	a4,sp,244
 532:	0000                	unimp
                results[i].err++;
 534:	19e0                	addi	s0,sp,252
 536:	0000                	unimp
 538:	19e8                	addi	a0,sp,252
 53a:	0000                	unimp
 53c:	1a08                	addi	a0,sp,304
	...
            if ((results[i].execs & ID_STATE)
 546:	0000                	unimp
 548:	1a30                	addi	a2,sp,312
 54a:	0000                	unimp
                && (results[i].crcstate != state_known_crc[known_id]))
 54c:	1aac                	addi	a1,sp,376
 54e:	0000                	unimp
 550:	1abc                	addi	a5,sp,376
 552:	0000                	unimp
 554:	1ac0                	addi	s0,sp,372
 556:	0000                	unimp
 558:	1b60                	addi	s0,sp,444
 55a:	0000                	unimp
 55c:	1b60                	addi	s0,sp,444
	...
 566:	0000                	unimp
 568:	1ab8                	addi	a4,sp,376
 56a:	0000                	unimp
 56c:	1abc                	addi	a5,sp,376
 56e:	0000                	unimp
        && (results[0].seed3 == 0))
 570:	1ac0                	addi	s0,sp,372
 572:	0000                	unimp
 574:	1ae8                	addi	a0,sp,380
	...
        results[0].seed3 = 0x66;
 57e:	0000                	unimp
 580:	1604                	addi	s1,sp,800
 582:	0000                	unimp
 584:	1b74                	addi	a3,sp,444
 586:	0000                	unimp
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
 588:	1b74                	addi	a3,sp,444
 58a:	0000                	unimp
            results[i].list = core_list_init(
 58c:	1bb8                	addi	a4,sp,504
 58e:	0000                	unimp
 590:	1bb8                	addi	a4,sp,504
 592:	0000                	unimp
 594:	1cdc                	addi	a5,sp,628
 596:	0000                	unimp
 598:	0001                	nop
 59a:	0000                	unimp
 59c:	0001                	nop
 59e:	0000                	unimp
 5a0:	0001                	nop
 5a2:	0000                	unimp
 5a4:	0001                	nop
 5a6:	0000                	unimp
 5a8:	0001                	nop
 5aa:	0000                	unimp
 5ac:	0001                	nop
 5ae:	0000                	unimp
 5b0:	0001                	nop
 5b2:	0000                	unimp
 5b4:	0001                	nop
 5b6:	0000                	unimp
 5b8:	0001                	nop
 5ba:	0000                	unimp
 5bc:	0001                	nop
 5be:	0000                	unimp
        if (results[i].execs & ID_MATRIX)
 5c0:	0001                	nop
 5c2:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
 5c4:	0001                	nop
	...
 5ce:	0000                	unimp
            core_init_matrix(results[0].size,
 5d0:	1cdc                	addi	a5,sp,628
 5d2:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
 5d4:	1d04                	addi	s1,sp,688
 5d6:	0000                	unimp
 5d8:	1d04                	addi	s1,sp,688
 5da:	0000                	unimp
                             (ee_s32)results[i].seed1
 5dc:	1d2c                	addi	a1,sp,696
 5de:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
 5e0:	1d2c                	addi	a1,sp,696
 5e2:	0000                	unimp
            core_init_matrix(results[0].size,
 5e4:	1d44                	addi	s1,sp,692
 5e6:	0000                	unimp
                             (ee_s32)results[i].seed1
 5e8:	1d44                	addi	s1,sp,692
 5ea:	0000                	unimp
            core_init_matrix(results[0].size,
 5ec:	1d74                	addi	a3,sp,700
 5ee:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
 5f0:	1d74                	addi	a3,sp,700
 5f2:	0000                	unimp
            core_init_matrix(results[0].size,
 5f4:	1dac                	addi	a1,sp,760
 5f6:	0000                	unimp
 5f8:	1dac                	addi	a1,sp,760
 5fa:	0000                	unimp
 5fc:	1db4                	addi	a3,sp,760
	...
 606:	0000                	unimp
 608:	1f88                	addi	a0,sp,1008
 60a:	0000                	unimp
    switch (seedcrc)
 60c:	1fa0                	addi	s0,sp,1016
 60e:	0000                	unimp
 610:	2054                	fld	fa3,128(s0)
 612:	0000                	unimp
 614:	2054                	fld	fa3,128(s0)
	...
 61e:	0000                	unimp
 620:	1fb4                	addi	a3,sp,1016
 622:	0000                	unimp
            ee_printf("Profile generation run parameters for coremark.\n");
 624:	1fb8                	addi	a4,sp,1016
 626:	0000                	unimp
 628:	1fbc                	addi	a5,sp,1016
 62a:	0000                	unimp
 62c:	1fc0                	addi	s0,sp,1012
 62e:	0000                	unimp
 630:	1fc4                	addi	s1,sp,1012
 632:	0000                	unimp
 634:	1fc8                	addi	a0,sp,1012
 636:	0000                	unimp
 638:	1fcc                	addi	a1,sp,1012
 63a:	0000                	unimp
 63c:	1fd0                	addi	a2,sp,1012
 63e:	0000                	unimp
            known_id = 2;
 640:	1fe8                	addi	a0,sp,1020
 642:	0000                	unimp
            ee_printf("Profile generation run parameters for coremark.\n");
 644:	1ff0                	addi	a2,sp,1020
 646:	0000                	unimp
 648:	208c                	fld	fa1,0(s1)
 64a:	0000                	unimp
 64c:	208c                	fld	fa1,0(s1)
	...
            known_id = 2;
 656:	0000                	unimp
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
 658:	2018                	fld	fa4,0(s0)
 65a:	0000                	unimp
 65c:	201c                	fld	fa5,0(s0)
 65e:	0000                	unimp
 660:	2020                	fld	fs0,64(s0)
 662:	0000                	unimp
 664:	2024                	fld	fs1,64(s0)
 666:	0000                	unimp
 668:	2028                	fld	fa0,64(s0)
 66a:	0000                	unimp
 66c:	202c                	fld	fa1,64(s0)
 66e:	0000                	unimp
                results[i].err++;
 670:	2030                	fld	fa2,64(s0)
 672:	0000                	unimp
 674:	2034                	fld	fa3,64(s0)
	...
 67e:	0000                	unimp
 680:	20c0                	fld	fs0,128(s1)
 682:	0000                	unimp
 684:	20d8                	fld	fa4,128(s1)
 686:	0000                	unimp
    switch (seedcrc)
 688:	20f4                	fld	fa3,192(s1)
 68a:	0000                	unimp
    ee_s16       known_id = -1, total_errors = 0;
 68c:	20f4                	fld	fa3,192(s1)
	...
 696:	0000                	unimp
 698:	2150                	fld	fa2,128(a0)
 69a:	0000                	unimp
    total_errors += check_data_types();
 69c:	2150                	fld	fa2,128(a0)
 69e:	0000                	unimp
 6a0:	2170                	fld	fa2,192(a0)
 6a2:	0000                	unimp
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
 6a4:	2184                	fld	fs1,0(a1)
 6a6:	0000                	unimp
    total_errors += check_data_types();
 6a8:	2188                	fld	fa0,0(a1)
 6aa:	0000                	unimp
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
 6ac:	218c                	fld	fa1,0(a1)
	...
 6b6:	0000                	unimp
 6b8:	219c                	fld	fa5,0(a1)
 6ba:	0000                	unimp
    ee_printf("Total ticks      : %d\n", (int)total_time);
 6bc:	21a0                	fld	fs0,64(a1)
 6be:	0000                	unimp
 6c0:	21a4                	fld	fs1,64(a1)
 6c2:	0000                	unimp
 6c4:	21a4                	fld	fs1,64(a1)
 6c6:	0000                	unimp
 6c8:	21a4                	fld	fs1,64(a1)
 6ca:	0000                	unimp
 6cc:	21b0                	fld	fa2,64(a1)
	...
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
 6d6:	0000                	unimp
 6d8:	2334                	fld	fa3,64(a4)
 6da:	0000                	unimp
 6dc:	2350                	fld	fa2,128(a4)
 6de:	0000                	unimp
 6e0:	2354                	fld	fa3,128(a4)
 6e2:	0000                	unimp
 6e4:	2358                	fld	fa4,128(a4)
 6e6:	0000                	unimp
 6e8:	235c                	fld	fa5,128(a4)
 6ea:	0000                	unimp
 6ec:	2364                	fld	fs1,192(a4)
	...
    if (time_in_secs(total_time) > 0)
 6f6:	0000                	unimp
 6f8:	23c4                	fld	fs1,128(a5)
 6fa:	0000                	unimp
 6fc:	23e0                	fld	fs0,192(a5)
 6fe:	0000                	unimp
    total_errors += check_data_types();
 700:	23e4                	fld	fs1,192(a5)
 702:	0000                	unimp
    if (time_in_secs(total_time) > 0)
 704:	23e8                	fld	fa0,192(a5)
 706:	0000                	unimp
 708:	23ec                	fld	fa1,192(a5)
 70a:	0000                	unimp
    total_errors += check_data_types();
 70c:	23f4                	fld	fa3,192(a5)
	...
    if (time_in_secs(total_time) > 0)
 716:	0000                	unimp
 718:	1db4                	addi	a3,sp,760
 71a:	0000                	unimp
                  default_num_contexts * results[0].iterations
 71c:	1f70                	addi	a2,sp,956
 71e:	0000                	unimp
        ee_printf("Iterations/Sec   : %lf\n",
 720:	1f70                	addi	a2,sp,956
 722:	0000                	unimp
 724:	22a0                	fld	fs0,64(a3)
 726:	0000                	unimp
 728:	22a0                	fld	fs0,64(a3)
 72a:	0000                	unimp
 72c:	24ac                	fld	fa1,72(s1)
	...
                      / time_in_secs(total_time));
 736:	0000                	unimp
        ee_printf("Iterations/Sec   : %lf\n",
 738:	2510                	fld	fa2,8(a0)
 73a:	0000                	unimp
                      / time_in_secs(total_time));
 73c:	2514                	fld	fa3,8(a0)
 73e:	0000                	unimp
 740:	2518                	fld	fa4,8(a0)
 742:	0000                	unimp
        ee_printf("Iterations/Sec   : %lf\n",
 744:	264c                	fld	fa1,136(a2)
	...
 74e:	0000                	unimp
 750:	2650                	fld	fa2,136(a2)
 752:	0000                	unimp
 754:	2654                	fld	fa3,136(a2)
 756:	0000                	unimp
 758:	2658                	fld	fa4,136(a2)
 75a:	0000                	unimp
 75c:	278c                	fld	fa1,8(a5)
	...
 766:	0000                	unimp
 768:	2790                	fld	fa2,8(a5)
 76a:	0000                	unimp
 76c:	2798                	fld	fa4,8(a5)
 76e:	0000                	unimp
 770:	279c                	fld	fa5,8(a5)
 772:	0000                	unimp
    if (time_in_secs(total_time) < 10)
 774:	27a0                	fld	fs0,72(a5)
 776:	0000                	unimp
 778:	27a4                	fld	fs1,72(a5)
 77a:	0000                	unimp
 77c:	2a14                	fld	fa3,16(a2)
	...
 786:	0000                	unimp
 788:	2790                	fld	fa2,8(a5)
 78a:	0000                	unimp
 78c:	2794                	fld	fa3,8(a5)
 78e:	0000                	unimp
 790:	279c                	fld	fa5,8(a5)
 792:	0000                	unimp
 794:	27a0                	fld	fs0,72(a5)
 796:	0000                	unimp
    ee_printf("Iterations       : %lu\n",
 798:	27a4                	fld	fs1,72(a5)
 79a:	0000                	unimp
 79c:	28d4                	fld	fa3,144(s1)
	...
 7a6:	0000                	unimp
 7a8:	28d8                	fld	fa4,144(s1)
 7aa:	0000                	unimp
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
 7ac:	28e0                	fld	fs0,208(s1)
 7ae:	0000                	unimp
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
 7b0:	28e4                	fld	fs1,208(s1)
 7b2:	0000                	unimp
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
 7b4:	2a14                	fld	fa3,16(a2)
	...
        total_errors++;
 7be:	0000                	unimp
    ee_printf("Iterations       : %lu\n",
 7c0:	2a18                	fld	fa4,16(a2)
 7c2:	0000                	unimp
 7c4:	2a20                	fld	fs0,80(a2)
 7c6:	0000                	unimp
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
 7c8:	2a24                	fld	fs1,80(a2)
 7ca:	0000                	unimp
 7cc:	2a28                	fld	fa0,80(a2)
 7ce:	0000                	unimp
 7d0:	2a2c                	fld	fa1,80(a2)
 7d2:	0000                	unimp
 7d4:	2c9c                	fld	fa5,24(s1)
	...
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
 7de:	0000                	unimp
 7e0:	2a18                	fld	fa4,16(a2)
 7e2:	0000                	unimp
 7e4:	2a1c                	fld	fa5,16(a2)
 7e6:	0000                	unimp
 7e8:	2a24                	fld	fs1,80(a2)
 7ea:	0000                	unimp
 7ec:	2a28                	fld	fa0,80(a2)
 7ee:	0000                	unimp
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
 7f0:	2a2c                	fld	fa1,80(a2)
 7f2:	0000                	unimp
 7f4:	2b5c                	fld	fa5,144(a4)
	...
 7fe:	0000                	unimp
 800:	2b60                	fld	fs0,208(a4)
 802:	0000                	unimp
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
 804:	2b68                	fld	fa0,208(a4)
 806:	0000                	unimp
 808:	2b6c                	fld	fa1,208(a4)
 80a:	0000                	unimp
 80c:	2c9c                	fld	fa5,24(s1)
	...
 816:	0000                	unimp
    if (results[0].execs & ID_LIST)
 818:	2ca0                	fld	fs0,88(s1)
 81a:	0000                	unimp
 81c:	2ca8                	fld	fa0,88(s1)
 81e:	0000                	unimp
 820:	2cac                	fld	fa1,88(s1)
 822:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 824:	2cb0                	fld	fa2,88(s1)
 826:	0000                	unimp
 828:	2cb4                	fld	fa3,88(s1)
 82a:	0000                	unimp
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
 82c:	2f24                	fld	fs1,88(a4)
	...
 836:	0000                	unimp
 838:	2ca0                	fld	fs0,88(s1)
 83a:	0000                	unimp
 83c:	2ca4                	fld	fs1,88(s1)
 83e:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 840:	2cac                	fld	fa1,88(s1)
 842:	0000                	unimp
 844:	2cb0                	fld	fa2,88(s1)
 846:	0000                	unimp
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
 848:	2cb4                	fld	fa3,88(s1)
 84a:	0000                	unimp
 84c:	2de4                	fld	fs1,216(a1)
	...
 856:	0000                	unimp
 858:	2de8                	fld	fa0,216(a1)
 85a:	0000                	unimp
 85c:	2df0                	fld	fa2,216(a1)
 85e:	0000                	unimp
 860:	2df4                	fld	fa3,216(a1)
 862:	0000                	unimp
 864:	2f24                	fld	fs1,88(a4)
	...
 86e:	0000                	unimp
 870:	24ac                	fld	fa1,72(s1)
 872:	0000                	unimp
 874:	2510                	fld	fa2,8(a0)
 876:	0000                	unimp
 878:	0001                	nop
 87a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 87c:	0001                	nop
 87e:	0000                	unimp
 880:	2510                	fld	fa2,8(a0)
 882:	0000                	unimp
 884:	2790                	fld	fa2,8(a5)
 886:	0000                	unimp
 888:	2790                	fld	fa2,8(a5)
 88a:	0000                	unimp
 88c:	2ca0                	fld	fs0,88(s1)
 88e:	0000                	unimp
 890:	2ca0                	fld	fs0,88(s1)
 892:	0000                	unimp
    if (results[0].execs & ID_MATRIX)
 894:	2f28                	fld	fa0,88(a4)
 896:	0000                	unimp
 898:	2f28                	fld	fa0,88(a4)
 89a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 89c:	2f30                	fld	fa2,88(a4)
	...
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
 8a6:	0000                	unimp
 8a8:	0001                	nop
 8aa:	0000                	unimp
 8ac:	0001                	nop
 8ae:	0000                	unimp
 8b0:	2f30                	fld	fa2,88(a4)
 8b2:	0000                	unimp
 8b4:	2f6c                	fld	fa1,216(a4)
	...
        for (i = 0; i < default_num_contexts; i++)
 8be:	0000                	unimp
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
 8c0:	0001                	nop
 8c2:	0000                	unimp
 8c4:	0001                	nop
 8c6:	0000                	unimp
 8c8:	0001                	nop
 8ca:	0000                	unimp
 8cc:	0001                	nop
	...
 8d6:	0000                	unimp
 8d8:	0001                	nop
 8da:	0000                	unimp
 8dc:	0001                	nop
 8de:	0000                	unimp
 8e0:	0001                	nop
 8e2:	0000                	unimp
 8e4:	0001                	nop
	...
 8ee:	0000                	unimp
 8f0:	0001                	nop
 8f2:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 8f4:	0001                	nop
 8f6:	0000                	unimp
 8f8:	0001                	nop
 8fa:	0000                	unimp
 8fc:	0001                	nop
	...
 906:	0000                	unimp
 908:	0001                	nop
 90a:	0000                	unimp
    if (results[0].execs & ID_STATE)
 90c:	0001                	nop
 90e:	0000                	unimp
 910:	0001                	nop
 912:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
 914:	0001                	nop
	...
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
 91e:	0000                	unimp
 920:	0001                	nop
 922:	0000                	unimp
 924:	0001                	nop
 926:	0000                	unimp
 928:	0001                	nop
 92a:	0000                	unimp
 92c:	0001                	nop
	...
        for (i = 0; i < default_num_contexts; i++)
 936:	0000                	unimp
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
 938:	0001                	nop
 93a:	0000                	unimp
 93c:	0001                	nop
 93e:	0000                	unimp
 940:	0001                	nop
 942:	0000                	unimp
 944:	0001                	nop
 946:	0000                	unimp
 948:	0001                	nop
 94a:	0000                	unimp
 94c:	0001                	nop
	...
 956:	0000                	unimp
 958:	2f6c                	fld	fa1,216(a4)
 95a:	0000                	unimp
 95c:	2f7c                	fld	fa5,216(a4)
 95e:	0000                	unimp
 960:	2f7c                	fld	fa5,216(a4)
 962:	0000                	unimp
 964:	2f94                	fld	fa3,24(a5)
	...
        for (i = 0; i < default_num_contexts; i++)
 96e:	0000                	unimp
 970:	2f74                	fld	fa3,216(a4)
 972:	0000                	unimp
 974:	2f78                	fld	fa4,216(a4)
 976:	0000                	unimp
 978:	2f7c                	fld	fa5,216(a4)
 97a:	0000                	unimp
 97c:	2f90                	fld	fa2,24(a5)
	...
    for (i = 0; i < default_num_contexts; i++)
 986:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
 988:	0001                	nop
 98a:	0000                	unimp
 98c:	0001                	nop
 98e:	0000                	unimp
 990:	0001                	nop
 992:	0000                	unimp
    for (i = 0; i < default_num_contexts; i++)
 994:	0001                	nop
 996:	0000                	unimp
 998:	0001                	nop
 99a:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
 99c:	0001                	nop
 99e:	0000                	unimp
 9a0:	0001                	nop
 9a2:	0000                	unimp
    for (i = 0; i < default_num_contexts; i++)
 9a4:	0001                	nop
 9a6:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
 9a8:	2f6c                	fld	fa1,216(a4)
 9aa:	0000                	unimp
 9ac:	2f9c                	fld	fa5,24(a5)
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
	la gp, __global_pointer$
       0:	24b2                	fld	fs1,264(sp)
       2:	0000                	unimp
       4:	019d0003          	lb	zero,25(s10) # fffe9019 <__freertos_irq_stack_top+0xfefd9019>
	la sp, _sp 
       8:	0000                	unimp
       a:	0101                	addi	sp,sp,0
       c:	000d0efb          	0xd0efb
	la a0, _data_lma 
      10:	0101                	addi	sp,sp,0
      12:	0101                	addi	sp,sp,0
      14:	0000                	unimp
      16:	0100                	addi	s0,sp,128
	la a1, _data
      18:	0000                	unimp
      1a:	2e01                	jal	32a <main+0x2b2>
      1c:	6372732f          	0x6372732f
	la a2, _edata
      20:	726f632f          	0x726f632f
      24:	6d65                	lui	s10,0x19
      26:	7261                	lui	tp,0xffff8
	bgeu a1, a2, 2f
      28:	3a65006b          	0x3a65006b
	lw t0, (a0)
      2c:	705c                	flw	fa5,36(s0)
      2e:	6f72                	flw	ft10,28(sp)
	sw t0, (a1)
      30:	6d617267          	0x6d617267
	lw t1, (a1)
      34:	6620                	flw	fs0,72(a2)
      36:	6c69                	lui	s8,0x1a
	addi a0, a0, 4
      38:	7365                	lui	t1,0xffff9
      3a:	2820                	fld	fs0,80(s0)
	addi a1, a1, 4
      3c:	3878                	fld	fa4,240(s0)
      3e:	2936                	fld	fs2,328(sp)
	bltu a1, a2, 1b
      40:	785c                	flw	fa5,52(s0)
      42:	6170                	flw	fa2,68(a0)
	la a0, __bss_start
      44:	722d6b63          	bltu	s10,sp,77a <main+0x702>
      48:	7369                	lui	t1,0xffffa
      4a:	6e2d7663          	bgeu	s10,sp,736 <main+0x6be>
	la a1, _end
      4e:	2d656e6f          	jal	t3,56324 <_data_lma+0x4bd0c>
      52:	6d65                	lui	s10,0x19
	bgeu a0, a1, 2f
      54:	6562                	flw	fa0,24(sp)
      56:	2d64                	fld	fs1,216(a0)
	sw zero, (a0)
      58:	2d636367          	0x2d636367
	addi a0, a0, 4
      5c:	2e38                	fld	fa4,88(a2)
      5e:	2d302e33          	0x2d302e33
	bltu a0, a1, 1b
      62:	2e32                	fld	ft8,264(sp)
    li x31,0xa0
      64:	696c5c33          	0x696c5c33
    call main
      68:	5c62                	lw	s8,56(sp)
      6a:	5c636367          	0x5c636367
      6e:	6972                	flw	fs2,28(sp)
    li x31,0xaa
      70:	2d766373          	csrrsi	t1,0x2d7,12
    j loop
      74:	6f6e                	flw	ft10,216(sp)
      76:	656e                	flw	fa0,216(sp)
{
      78:	652d                	lui	a0,0xb
      7a:	626d                	lui	tp,0x1b
    portable_init(&(results[0].port), &argc, argv);
      7c:	6465                	lui	s0,0x19
      7e:	385c                	fld	fa5,176(s0)
{
      80:	332e                	fld	ft6,232(sp)
      82:	302e                	fld	ft0,232(sp)
      84:	695c                	flw	fa5,20(a0)
      86:	636e                	flw	ft6,216(sp)
      88:	756c                	flw	fa1,108(a0)
      8a:	6564                	flw	fs1,76(a0)
      8c:	6500                	flw	fs0,8(a0)
      8e:	5c3a                	lw	s8,172(sp)
      90:	7270                	flw	fa2,100(a2)
      92:	6172676f          	jal	a4,26ea8 <_data_lma+0x1c890>
      96:	206d                	jal	140 <main+0xc8>
      98:	6966                	flw	fs2,88(sp)
      9a:	656c                	flw	fa1,76(a0)
      9c:	78282073          	csrs	0x782,a6
      a0:	3638                	fld	fa4,104(a2)
      a2:	5c29                	li	s8,-22
      a4:	7078                	flw	fa4,100(s0)
      a6:	6361                	lui	t1,0x18
      a8:	69722d6b          	0x69722d6b
      ac:	2d766373          	csrrsi	t1,0x2d7,12
      b0:	6f6e                	flw	ft10,216(sp)
      b2:	656e                	flw	fa0,216(sp)
      b4:	652d                	lui	a0,0xb
      b6:	626d                	lui	tp,0x1b
      b8:	6465                	lui	s0,0x19
      ba:	672d                	lui	a4,0xb
    portable_init(&(results[0].port), &argc, argv);
      bc:	382d6363          	bltu	s10,sp,442 <main+0x3ca>
      c0:	332e                	fld	ft6,232(sp)
      c2:	302e                	fld	ft0,232(sp)
      c4:	322d                	jal	fffff9ee <__freertos_irq_stack_top+0xfefef9ee>
      c6:	332e                	fld	ft6,232(sp)
      c8:	725c                	flw	fa5,36(a2)
      ca:	7369                	lui	t1,0xffffa
{
      cc:	6e2d7663          	bgeu	s10,sp,7b8 <main+0x740>
    portable_init(&(results[0].port), &argc, argv);
      d0:	2d656e6f          	jal	t3,563a6 <_data_lma+0x4bd8e>
      d4:	6d65                	lui	s10,0x19
      d6:	6562                	flw	fa0,24(sp)
      d8:	5c64                	lw	s1,124(s0)
      da:	6e69                	lui	t3,0x1a
      dc:	64756c63          	bltu	a0,t2,734 <main+0x6bc>
    results[0].seed1      = get_seed(1);
      e0:	5c65                	li	s8,-7
      e2:	00737973          	csrrci	s2,0x7,6
      e6:	3a65                	jal	fffffa9e <__freertos_irq_stack_top+0xfefefa9e>
      e8:	705c                	flw	fa5,36(s0)
      ea:	6f72                	flw	ft10,28(sp)
      ec:	6d617267          	0x6d617267
    results[0].seed2      = get_seed(2);
      f0:	6620                	flw	fs0,72(a2)
      f2:	6c69                	lui	s8,0x1a
      f4:	7365                	lui	t1,0xffff9
      f6:	2820                	fld	fs0,80(s0)
      f8:	3878                	fld	fa4,240(s0)
      fa:	2936                	fld	fs2,328(sp)
      fc:	785c                	flw	fa5,52(s0)
      fe:	6170                	flw	fa2,68(a0)
    results[0].seed3      = get_seed(3);
     100:	722d6b63          	bltu	s10,sp,836 <main+0x7be>
     104:	7369                	lui	t1,0xffffa
     106:	6e2d7663          	bgeu	s10,sp,7f2 <main+0x77a>
     10a:	2d656e6f          	jal	t3,563e0 <_data_lma+0x4bdc8>
     10e:	6d65                	lui	s10,0x19
    results[0].iterations = get_seed_32(4);
     110:	6562                	flw	fa0,24(sp)
     112:	2d64                	fld	fs1,216(a0)
     114:	2d636367          	0x2d636367
     118:	2e38                	fld	fa4,88(a2)
     11a:	2d302e33          	0x2d302e33
     11e:	2e32                	fld	ft8,264(sp)
    results[0].execs = get_seed_32(5);
     120:	69725c33          	0x69725c33
     124:	2d766373          	csrrsi	t1,0x2d7,12
     128:	6f6e                	flw	ft10,216(sp)
     12a:	656e                	flw	fa0,216(sp)
    if (results[0].execs == 0)
     12c:	652d                	lui	a0,0xb
     12e:	626d                	lui	tp,0x1b
    results[0].execs = get_seed_32(5);
     130:	6465                	lui	s0,0x19
     132:	695c                	flw	fa5,20(a0)
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
     134:	636e                	flw	ft6,216(sp)
     136:	756c                	flw	fa1,108(a0)
     138:	6564                	flw	fs1,76(a0)
     13a:	0000                	unimp
     13c:	65726f63          	bltu	tp,s7,79a <main+0x722>
     140:	6c5f 7369 5f74      	0x5f7473696c5f
     146:	6f6a                	flw	ft10,152(sp)
     148:	6e69                	lui	t3,0x1a
     14a:	632e                	flw	ft6,200(sp)
     14c:	0100                	addi	s0,sp,128
     14e:	0000                	unimp
     150:	64647473          	csrrci	s0,0x646,8
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     154:	6665                	lui	a2,0x19
     156:	682e                	flw	fa6,200(sp)
     158:	0200                	addi	s0,sp,256
     15a:	0000                	unimp
        && (results[0].seed3 == 0))
     15c:	745f 7079 7365      	0x73657079745f
     162:	682e                	flw	fa6,200(sp)
     164:	0300                	addi	s0,sp,384
     166:	0000                	unimp
        results[0].seed1 = 0x3415;
     168:	6572                	flw	fa0,28(sp)
     16a:	6e65                	lui	t3,0x19
     16c:	2e74                	fld	fa3,216(a2)
     16e:	0068                	addi	a0,sp,12
     170:	6c000003          	lb	zero,1728(zero) # 6c0 <main+0x648>
     174:	2e6b636f          	jal	t1,b645a <_data_lma+0xabe42>
        results[0].seed3 = 0x66;
     178:	0068                	addi	a0,sp,12
     17a:	74000003          	lb	zero,1856(zero) # 740 <main+0x6c8>
     17e:	6d69                	lui	s10,0x1a
        if ((1 << (ee_u32)i) & results[0].execs)
     180:	2e65                	jal	538 <main+0x4c0>
     182:	0068                	addi	a0,sp,12
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     184:	0004                	0x4
     186:	6300                	flw	fs0,0(a4)
     188:	5f65726f          	jal	tp,5777e <_data_lma+0x4d166>
     18c:	6f70                	flw	fa2,92(a4)
     18e:	7472                	flw	fs0,60(sp)
     190:	656d                	lui	a0,0x1b
     192:	682e                	flw	fa6,200(sp)
     194:	0100                	addi	s0,sp,128
     196:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     198:	65726f63          	bltu	tp,s7,7f6 <main+0x77e>
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     19c:	616d                	addi	sp,sp,240
     19e:	6b72                	flw	fs6,28(sp)
        if ((1 << (ee_u32)i) & results[0].execs)
     1a0:	682e                	flw	fa6,200(sp)
     1a2:	0100                	addi	s0,sp,128
            num_algorithms++;
     1a4:	0000                	unimp
     1a6:	0500                	addi	s0,sp,640
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1a8:	0001                	nop
     1aa:	0205                	addi	tp,tp,1
     1ac:	0000                	unimp
     1ae:	0000                	unimp
    results[i].err         = 0;
     1b0:	0100c603          	lbu	a2,16(ra)
        if ((1 << (ee_u32)i) & results[0].execs)
     1b4:	0505                	addi	a0,a0,1
     1b6:	00090103          	lb	sp,0(s2)
            num_algorithms++;
     1ba:	0100                	addi	s0,sp,128
        if ((1 << (ee_u32)i) & results[0].execs)
     1bc:	0105                	addi	sp,sp,1
     1be:	0306                	slli	t1,t1,0x1
            num_algorithms++;
     1c0:	097f                	0x97f
     1c2:	0000                	unimp
     1c4:	0501                	addi	a0,a0,0
     1c6:	030c                	addi	a1,sp,384
     1c8:	0901                	addi	s2,s2,0
     1ca:	0000                	unimp
        results[i].size = results[i].size / num_algorithms;
     1cc:	0501                	addi	a0,a0,0
     1ce:	0605                	addi	a2,a2,1
     1d0:	00090103          	lb	sp,0(s2)
     1d4:	0100                	addi	s0,sp,128
     1d6:	00090103          	lb	sp,0(s2)
        if ((1 << (ee_u32)i) & results[0].execs)
     1da:	0100                	addi	s0,sp,128
        results[i].size = results[i].size / num_algorithms;
     1dc:	00090303          	lb	t1,0(s2)
        if ((1 << (ee_u32)i) & results[0].execs)
     1e0:	0100                	addi	s0,sp,128
     1e2:	0905                	addi	s2,s2,1
     1e4:	00090103          	lb	sp,0(s2)
     1e8:	0100                	addi	s0,sp,128
     1ea:	0105                	addi	sp,sp,1
        if (results[i].execs & ID_LIST)
     1ec:	0306                	slli	t1,t1,0x1
     1ee:	0979                	addi	s2,s2,30
        if (results[i].execs & ID_MATRIX)
     1f0:	0000                	unimp
     1f2:	0501                	addi	a0,a0,0
        if (results[i].execs & ID_STATE)
     1f4:	0905030b          	0x905030b
     1f8:	0000                	unimp
     1fa:	0501                	addi	a0,a0,0
            core_init_state(
     1fc:	0301                	addi	t1,t1,0
     1fe:	0000097b          	0x97b
     202:	0501                	addi	a0,a0,0
                results[0].size, results[i].seed1, results[i].memblock[3]);
     204:	0308                	addi	a0,sp,384
     206:	0906                	slli	s2,s2,0x1
            core_init_state(
     208:	0000                	unimp
     20a:	0501                	addi	a0,a0,0
     20c:	0316                	slli	t1,t1,0x5
     20e:	0901                	addi	s2,s2,0
     210:	0000                	unimp
     212:	0501                	addi	a0,a0,0
     214:	0308                	addi	a0,sp,384
     216:	097f                	0x97f
     218:	0000                	unimp
     21a:	0501                	addi	a0,a0,0
     21c:	0609                	addi	a2,a2,2
     21e:	00090403          	lb	s0,0(s2)
     222:	0100                	addi	s0,sp,128
     224:	1005                	c.nop	-31
     226:	0306                	slli	t1,t1,0x1
    if (results[0].iterations == 0)
     228:	00000903          	lb	s2,0(zero) # 0 <_start>
     22c:	0301                	addi	t1,t1,0
     22e:	097e                	slli	s2,s2,0x1f
        while (secs_passed < (secs_ret)1)
     230:	0000                	unimp
     232:	0501                	addi	a0,a0,0
     234:	0903030f          	0x903030f
     238:	0000                	unimp
     23a:	0501                	addi	a0,a0,0
        results[0].iterations = 1;
     23c:	0310                	addi	a2,sp,384
     23e:	097c                	addi	a5,sp,156
     240:	0000                	unimp
     242:	0501                	addi	a0,a0,0
        crc      = core_bench_list(res, 1);
     244:	0609                	addi	a2,a2,2
     246:	00090103          	lb	sp,0(s2)
     24a:	0100                	addi	s0,sp,128
     24c:	00090303          	lb	t1,0(s2)
     250:	0100                	addi	s0,sp,128
     252:	0f05                	addi	t5,t5,1
     254:	0306                	slli	t1,t1,0x1
     256:	0900                	addi	s0,sp,144
     258:	0000                	unimp
     25a:	0501                	addi	a0,a0,0
            results[0].iterations *= 10;
     25c:	0609                	addi	a2,a2,2
     25e:	00090103          	lb	sp,0(s2)
    for (i = 0; i < iterations; i++)
     262:	0100                	addi	s0,sp,128
            results[0].iterations *= 10;
     264:	0c05                	addi	s8,s8,1
     266:	0306                	slli	t1,t1,0x1
     268:	0972                	slli	s2,s2,0x1c
     26a:	0000                	unimp
     26c:	0501                	addi	a0,a0,0
     26e:	0609                	addi	a2,a2,2
     270:	00092503          	lw	a0,0(s2)
            start_time();
     274:	0100                	addi	s0,sp,128
     276:	1405                	addi	s0,s0,-31
     278:	0306                	slli	t1,t1,0x1
     27a:	0900                	addi	s0,sp,144
    ee_u32        iterations = res->iterations;
     27c:	0000                	unimp
     27e:	0501                	addi	a0,a0,0
    res->crc                 = 0;
     280:	0310                	addi	a2,sp,384
     282:	0901                	addi	s2,s2,0
     284:	0000                	unimp
     286:	0501                	addi	a0,a0,0
    for (i = 0; i < iterations; i++)
     288:	0318                	addi	a4,sp,384
     28a:	0901                	addi	s2,s2,0
        crc      = core_bench_list(res, 1);
     28c:	0000                	unimp
     28e:	0501                	addi	a0,a0,0
     290:	0314                	addi	a3,sp,384
     292:	097e                	slli	s2,s2,0x1f
     294:	0000                	unimp
     296:	0501                	addi	a0,a0,0
     298:	0902032b          	0x902032b
        res->crc = crcu16(crc, res->crc);
     29c:	0000                	unimp
     29e:	0501                	addi	a0,a0,0
     2a0:	0312                	slli	t1,t1,0x4
     2a2:	097e                	slli	s2,s2,0x1f
     2a4:	0000                	unimp
     2a6:	0501                	addi	a0,a0,0
     2a8:	0609                	addi	a2,a2,2
     2aa:	00090103          	lb	sp,0(s2)
        crc      = core_bench_list(res, -1);
     2ae:	0100                	addi	s0,sp,128
     2b0:	00090103          	lb	sp,0(s2)
     2b4:	0100                	addi	s0,sp,128
     2b6:	2b05                	jal	7e6 <main+0x76e>
     2b8:	0306                	slli	t1,t1,0x1
     2ba:	0900                	addi	s0,sp,144
        res->crc = crcu16(crc, res->crc);
     2bc:	0000                	unimp
     2be:	0501                	addi	a0,a0,0
     2c0:	0310                	addi	a2,sp,384
     2c2:	0900                	addi	s0,sp,144
     2c4:	0000                	unimp
     2c6:	0501                	addi	a0,a0,0
     2c8:	0609                	addi	a2,a2,2
     2ca:	00090103          	lb	sp,0(s2)
        if (i == 0)
     2ce:	0100                	addi	s0,sp,128
    for (i = 0; i < iterations; i++)
     2d0:	0105                	addi	sp,sp,1
     2d2:	0306                	slli	t1,t1,0x1
     2d4:	0902                	c.slli64	s2
     2d6:	0000                	unimp
            stop_time();
     2d8:	0501                	addi	a0,a0,0
     2da:	0611                	addi	a2,a2,4
     2dc:	00096703          	0x96703
            secs_passed = time_in_secs(get_time());
     2e0:	0100                	addi	s0,sp,128
     2e2:	00090203          	lb	tp,0(s2)
     2e6:	0100                	addi	s0,sp,128
     2e8:	1a05                	addi	s4,s4,-31
     2ea:	0306                	slli	t1,t1,0x1
     2ec:	0900                	addi	s0,sp,144
     2ee:	0000                	unimp
        while (secs_passed < (secs_ret)1)
     2f0:	0501                	addi	a0,a0,0
     2f2:	0314                	addi	a3,sp,384
     2f4:	0906                	slli	s2,s2,0x1
     2f6:	0000                	unimp
            secs_passed = time_in_secs(get_time());
     2f8:	0501                	addi	a0,a0,0
     2fa:	0318                	addi	a4,sp,384
     2fc:	097a                	slli	s2,s2,0x1e
     2fe:	0000                	unimp
        while (secs_passed < (secs_ret)1)
     300:	0501                	addi	a0,a0,0
     302:	0611                	addi	a2,a2,4
     304:	00090603          	lb	a2,0(s2)
     308:	0100                	addi	s0,sp,128
     30a:	1405                	addi	s0,s0,-31
        divisor = (ee_u32)secs_passed;
     30c:	0306                	slli	t1,t1,0x1
     30e:	0900                	addi	s0,sp,144
     310:	0000                	unimp
     312:	0501                	addi	a0,a0,0
     314:	0615                	addi	a2,a2,5
     316:	00090103          	lb	sp,0(s2)
     31a:	0100                	addi	s0,sp,128
        if (divisor == 0) /* some machines cast float to int as 0 since this
     31c:	2305                	jal	83c <main+0x7c4>
     31e:	0306                	slli	t1,t1,0x1
            divisor = 1;
     320:	0900                	addi	s0,sp,144
     322:	0000                	unimp
        results[0].iterations *= 1 + 10 / divisor;
     324:	0501                	addi	a0,a0,0
     326:	0611                	addi	a2,a2,4
     328:	00090303          	lb	t1,0(s2)
     32c:	0100                	addi	s0,sp,128
     32e:	1a05                	addi	s4,s4,-31
     330:	0306                	slli	t1,t1,0x1
     332:	0900                	addi	s0,sp,144
     334:	0000                	unimp
     336:	0501                	addi	a0,a0,0
     338:	0314                	addi	a3,sp,384
     33a:	0901                	addi	s2,s2,0
    start_time();
     33c:	0000                	unimp
     33e:	0501                	addi	a0,a0,0
     340:	0318                	addi	a4,sp,384
     342:	097f                	0x97f
    iterate(&results[0]);
     344:	0000                	unimp
     346:	0501                	addi	a0,a0,0
     348:	0611                	addi	a2,a2,4
     34a:	00090103          	lb	sp,0(s2)
     34e:	0100                	addi	s0,sp,128
     350:	1405                	addi	s0,s0,-31
     352:	0306                	slli	t1,t1,0x1
     354:	0900                	addi	s0,sp,144
     356:	0000                	unimp
     358:	0501                	addi	a0,a0,0
     35a:	0615                	addi	a2,a2,5
     35c:	00090103          	lb	sp,0(s2)
     360:	0100                	addi	s0,sp,128
     362:	2405                	jal	582 <main+0x50a>
    stop_time();
     364:	0306                	slli	t1,t1,0x1
     366:	0900                	addi	s0,sp,144
     368:	0000                	unimp
     36a:	0901                	addi	s2,s2,0
    total_time = get_time();
     36c:	0000                	unimp
     36e:	0100                	addi	s0,sp,128
     370:	0501                	addi	a0,a0,0
     372:	0001                	nop
    seedcrc = crc16(results[0].seed1, seedcrc);
     374:	0205                	addi	tp,tp,1
     376:	0000                	unimp
     378:	0000                	unimp
     37a:	0100f903          	0x100f903
     37e:	0505                	addi	a0,a0,1
    total_time = get_time();
     380:	00090103          	lb	sp,0(s2)
    seedcrc = crc16(results[0].seed1, seedcrc);
     384:	0100                	addi	s0,sp,128
     386:	0105                	addi	sp,sp,1
     388:	0306                	slli	t1,t1,0x1
     38a:	097f                	0x97f
     38c:	0000                	unimp
     38e:	0501                	addi	a0,a0,0
     390:	030c                	addi	a1,sp,384
     392:	094e                	slli	s2,s2,0x13
     394:	0000                	unimp
     396:	0501                	addi	a0,a0,0
    seedcrc = crc16(results[0].seed2, seedcrc);
     398:	0301                	addi	t1,t1,0
     39a:	0932                	slli	s2,s2,0xc
     39c:	0000                	unimp
     39e:	0501                	addi	a0,a0,0
     3a0:	0952030b          	0x952030b
     3a4:	0000                	unimp
     3a6:	0501                	addi	a0,a0,0
     3a8:	0301                	addi	t1,t1,0
     3aa:	092e                	slli	s2,s2,0xb
    seedcrc = crc16(results[0].seed3, seedcrc);
     3ac:	0000                	unimp
     3ae:	0501                	addi	a0,a0,0
     3b0:	0308                	addi	a0,sp,384
     3b2:	00000953          	fadd.s	fs2,ft0,ft0,rne
     3b6:	0501                	addi	a0,a0,0
     3b8:	0301                	addi	t1,t1,0
     3ba:	092d                	addi	s2,s2,11
     3bc:	0000                	unimp
     3be:	0501                	addi	a0,a0,0
    seedcrc = crc16(results[0].size, seedcrc);
     3c0:	0605                	addi	a2,a2,1
     3c2:	00094e03          	lbu	t3,0(s2)
     3c6:	0100                	addi	s0,sp,128
     3c8:	00090103          	lb	sp,0(s2)
     3cc:	0100                	addi	s0,sp,128
     3ce:	00090103          	lb	sp,0(s2)
    switch (seedcrc)
     3d2:	0100                	addi	s0,sp,128
     3d4:	00090303          	lb	t1,0(s2)
    seedcrc = crc16(results[0].size, seedcrc);
     3d8:	0100                	addi	s0,sp,128
     3da:	0905                	addi	s2,s2,1
    switch (seedcrc)
     3dc:	00090103          	lb	sp,0(s2)
     3e0:	0100                	addi	s0,sp,128
     3e2:	1605                	addi	a2,a2,-31
     3e4:	0306                	slli	t1,t1,0x1
     3e6:	0900                	addi	s0,sp,144
     3e8:	0000                	unimp
     3ea:	0501                	addi	a0,a0,0
     3ec:	0308                	addi	a0,sp,384
     3ee:	097f                	0x97f
     3f0:	0000                	unimp
     3f2:	0501                	addi	a0,a0,0
     3f4:	0609                	addi	a2,a2,2
     3f6:	00090403          	lb	s0,0(s2)
     3fa:	0100                	addi	s0,sp,128
            ee_printf("2K performance run parameters for coremark.\n");
     3fc:	1005                	c.nop	-31
     3fe:	0306                	slli	t1,t1,0x1
     400:	00000903          	lb	s2,0(zero) # 0 <_start>
     404:	0301                	addi	t1,t1,0
     406:	097e                	slli	s2,s2,0x1f
     408:	0000                	unimp
     40a:	0501                	addi	a0,a0,0
     40c:	0903030f          	0x903030f
     410:	0000                	unimp
     412:	0501                	addi	a0,a0,0
     414:	0310                	addi	a2,sp,384
     416:	097c                	addi	a5,sp,156
            known_id = 3;
     418:	0000                	unimp
     41a:	0501                	addi	a0,a0,0
            ee_printf("2K performance run parameters for coremark.\n");
     41c:	0609                	addi	a2,a2,2
     41e:	00090103          	lb	sp,0(s2)
     422:	0100                	addi	s0,sp,128
     424:	00090303          	lb	t1,0(s2)
            known_id = 3;
     428:	0100                	addi	s0,sp,128
     42a:	0f05                	addi	t5,t5,1
        for (i = 0; i < default_num_contexts; i++)
     42c:	0306                	slli	t1,t1,0x1
     42e:	0900                	addi	s0,sp,144
     430:	0000                	unimp
     432:	0501                	addi	a0,a0,0
     434:	0609                	addi	a2,a2,2
     436:	00090103          	lb	sp,0(s2)
     43a:	0100                	addi	s0,sp,128
     43c:	0c05                	addi	s8,s8,1
     43e:	0306                	slli	t1,t1,0x1
            results[i].err = 0;
     440:	0972                	slli	s2,s2,0x1c
     442:	0000                	unimp
     444:	0501                	addi	a0,a0,0
     446:	0609                	addi	a2,a2,2
     448:	00092503          	lw	a0,0(s2)
     44c:	0100                	addi	s0,sp,128
     44e:	1405                	addi	s0,s0,-31
     450:	0306                	slli	t1,t1,0x1
     452:	0900                	addi	s0,sp,144
     454:	0000                	unimp
     456:	0501                	addi	a0,a0,0
     458:	0310                	addi	a2,sp,384
     45a:	0901                	addi	s2,s2,0
     45c:	0000                	unimp
     45e:	0501                	addi	a0,a0,0
     460:	0318                	addi	a4,sp,384
     462:	0901                	addi	s2,s2,0
     464:	0000                	unimp
     466:	0501                	addi	a0,a0,0
     468:	0314                	addi	a3,sp,384
     46a:	097e                	slli	s2,s2,0x1f
     46c:	0000                	unimp
     46e:	0501                	addi	a0,a0,0
     470:	0902032b          	0x902032b
     474:	0000                	unimp
     476:	0501                	addi	a0,a0,0
            total_errors += results[i].err;
     478:	0312                	slli	t1,t1,0x4
     47a:	097e                	slli	s2,s2,0x1f
        for (i = 0; i < default_num_contexts; i++)
     47c:	0000                	unimp
     47e:	0501                	addi	a0,a0,0
            total_errors += results[i].err;
     480:	0609                	addi	a2,a2,2
     482:	00090103          	lb	sp,0(s2)
        for (i = 0; i < default_num_contexts; i++)
     486:	0100                	addi	s0,sp,128
            total_errors += results[i].err;
     488:	00090103          	lb	sp,0(s2)
        for (i = 0; i < default_num_contexts; i++)
     48c:	0100                	addi	s0,sp,128
     48e:	2b05                	jal	9be <main+0x946>
            total_errors += results[i].err;
     490:	0306                	slli	t1,t1,0x1
     492:	0900                	addi	s0,sp,144
        for (i = 0; i < default_num_contexts; i++)
     494:	0000                	unimp
     496:	0501                	addi	a0,a0,0
            total_errors += results[i].err;
     498:	0310                	addi	a2,sp,384
     49a:	0900                	addi	s0,sp,144
        for (i = 0; i < default_num_contexts; i++)
     49c:	0000                	unimp
     49e:	0501                	addi	a0,a0,0
            results[i].err = 0;
     4a0:	0609                	addi	a2,a2,2
     4a2:	00090103          	lb	sp,0(s2)
     4a6:	0100                	addi	s0,sp,128
     4a8:	0505                	addi	a0,a0,1
     4aa:	00090c03          	lb	s8,0(s2)
     4ae:	0100                	addi	s0,sp,128
     4b0:	00094c03          	lbu	s8,0(s2)
     4b4:	0100                	addi	s0,sp,128
     4b6:	0c05                	addi	s8,s8,1
            if ((results[i].execs & ID_LIST)
     4b8:	0306                	slli	t1,t1,0x1
     4ba:	0900                	addi	s0,sp,144
            results[i].err = 0;
     4bc:	0000                	unimp
     4be:	0501                	addi	a0,a0,0
            if ((results[i].execs & ID_LIST)
     4c0:	0605                	addi	a2,a2,1
     4c2:	00090103          	lb	sp,0(s2)
     4c6:	0100                	addi	s0,sp,128
                && (results[i].crclist != list_known_crc[known_id]))
     4c8:	00090103          	lb	sp,0(s2)
     4cc:	0100                	addi	s0,sp,128
     4ce:	00090303          	lb	t1,0(s2)
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
     4d2:	0100                	addi	s0,sp,128
     4d4:	0905                	addi	s2,s2,1
     4d6:	00090103          	lb	sp,0(s2)
     4da:	0100                	addi	s0,sp,128
     4dc:	0b05                	addi	s6,s6,1
     4de:	0306                	slli	t1,t1,0x1
     4e0:	097e                	slli	s2,s2,0x1f
     4e2:	0000                	unimp
     4e4:	0501                	addi	a0,a0,0
     4e6:	0308                	addi	a0,sp,384
                results[i].err++;
     4e8:	0901                	addi	s2,s2,0
     4ea:	0000                	unimp
     4ec:	0501                	addi	a0,a0,0
     4ee:	0316                	slli	t1,t1,0x5
     4f0:	0901                	addi	s2,s2,0
     4f2:	0000                	unimp
            if ((results[i].execs & ID_MATRIX)
     4f4:	0501                	addi	a0,a0,0
     4f6:	0308                	addi	a0,sp,384
     4f8:	097f                	0x97f
     4fa:	0000                	unimp
     4fc:	0501                	addi	a0,a0,0
     4fe:	0609                	addi	a2,a2,2
     500:	00090403          	lb	s0,0(s2)
     504:	0100                	addi	s0,sp,128
     506:	1005                	c.nop	-31
     508:	0306                	slli	t1,t1,0x1
     50a:	00000903          	lb	s2,0(zero) # 0 <_start>
     50e:	0301                	addi	t1,t1,0
     510:	097e                	slli	s2,s2,0x1f
     512:	0000                	unimp
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
     514:	0501                	addi	a0,a0,0
     516:	0903030f          	0x903030f
     51a:	0000                	unimp
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
     51c:	0501                	addi	a0,a0,0
     51e:	0310                	addi	a2,sp,384
     520:	097c                	addi	a5,sp,156
     522:	0000                	unimp
     524:	0501                	addi	a0,a0,0
     526:	0609                	addi	a2,a2,2
     528:	00090103          	lb	sp,0(s2)
     52c:	0100                	addi	s0,sp,128
     52e:	00090303          	lb	t1,0(s2)
     532:	0100                	addi	s0,sp,128
                results[i].err++;
     534:	0f05                	addi	t5,t5,1
     536:	0306                	slli	t1,t1,0x1
     538:	0900                	addi	s0,sp,144
     53a:	0000                	unimp
     53c:	0501                	addi	a0,a0,0
     53e:	0609                	addi	a2,a2,2
     540:	00090103          	lb	sp,0(s2)
            if ((results[i].execs & ID_STATE)
     544:	0100                	addi	s0,sp,128
     546:	0c05                	addi	s8,s8,1
     548:	0306                	slli	t1,t1,0x1
     54a:	0972                	slli	s2,s2,0x1c
                && (results[i].crcstate != state_known_crc[known_id]))
     54c:	0000                	unimp
     54e:	0501                	addi	a0,a0,0
     550:	0609                	addi	a2,a2,2
     552:	00092503          	lw	a0,0(s2)
     556:	0100                	addi	s0,sp,128
     558:	1405                	addi	s0,s0,-31
     55a:	0306                	slli	t1,t1,0x1
     55c:	0900                	addi	s0,sp,144
     55e:	0000                	unimp
     560:	0501                	addi	a0,a0,0
     562:	0310                	addi	a2,sp,384
     564:	0901                	addi	s2,s2,0
     566:	0000                	unimp
     568:	0501                	addi	a0,a0,0
     56a:	0318                	addi	a4,sp,384
     56c:	0901                	addi	s2,s2,0
     56e:	0000                	unimp
        && (results[0].seed3 == 0))
     570:	0501                	addi	a0,a0,0
     572:	0314                	addi	a3,sp,384
     574:	097e                	slli	s2,s2,0x1f
     576:	0000                	unimp
     578:	0501                	addi	a0,a0,0
     57a:	0902032b          	0x902032b
        results[0].seed3 = 0x66;
     57e:	0000                	unimp
     580:	0501                	addi	a0,a0,0
     582:	0312                	slli	t1,t1,0x4
     584:	097e                	slli	s2,s2,0x1f
     586:	0000                	unimp
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     588:	0501                	addi	a0,a0,0
     58a:	0609                	addi	a2,a2,2
            results[i].list = core_list_init(
     58c:	00090103          	lb	sp,0(s2)
     590:	0100                	addi	s0,sp,128
     592:	00090103          	lb	sp,0(s2)
     596:	0100                	addi	s0,sp,128
     598:	2b05                	jal	ac8 <main+0xa50>
     59a:	0306                	slli	t1,t1,0x1
     59c:	0900                	addi	s0,sp,144
     59e:	0000                	unimp
     5a0:	0501                	addi	a0,a0,0
     5a2:	0310                	addi	a2,sp,384
     5a4:	0900                	addi	s0,sp,144
     5a6:	0000                	unimp
     5a8:	0501                	addi	a0,a0,0
     5aa:	0609                	addi	a2,a2,2
     5ac:	00090103          	lb	sp,0(s2)
     5b0:	0100                	addi	s0,sp,128
     5b2:	0505                	addi	a0,a0,1
     5b4:	00090d03          	lb	s10,0(s2)
     5b8:	0100                	addi	s0,sp,128
     5ba:	0105                	addi	sp,sp,1
     5bc:	0306                	slli	t1,t1,0x1
     5be:	0901                	addi	s2,s2,0
        if (results[i].execs & ID_MATRIX)
     5c0:	0000                	unimp
     5c2:	0501                	addi	a0,a0,0
                                 | (((ee_s32)results[i].seed2) << 16),
     5c4:	0611                	addi	a2,a2,4
     5c6:	00095b03          	lhu	s6,0(s2)
     5ca:	0100                	addi	s0,sp,128
     5cc:	00090203          	lb	tp,0(s2)
            core_init_matrix(results[0].size,
     5d0:	0100                	addi	s0,sp,128
     5d2:	1a05                	addi	s4,s4,-31
                                 | (((ee_s32)results[i].seed2) << 16),
     5d4:	0306                	slli	t1,t1,0x1
     5d6:	0900                	addi	s0,sp,144
     5d8:	0000                	unimp
     5da:	0501                	addi	a0,a0,0
                             (ee_s32)results[i].seed1
     5dc:	0314                	addi	a3,sp,384
     5de:	0906                	slli	s2,s2,0x1
                                 | (((ee_s32)results[i].seed2) << 16),
     5e0:	0000                	unimp
     5e2:	0501                	addi	a0,a0,0
            core_init_matrix(results[0].size,
     5e4:	0318                	addi	a4,sp,384
     5e6:	097a                	slli	s2,s2,0x1e
                             (ee_s32)results[i].seed1
     5e8:	0000                	unimp
     5ea:	0501                	addi	a0,a0,0
            core_init_matrix(results[0].size,
     5ec:	0611                	addi	a2,a2,4
     5ee:	00090603          	lb	a2,0(s2)
                                 | (((ee_s32)results[i].seed2) << 16),
     5f2:	0100                	addi	s0,sp,128
            core_init_matrix(results[0].size,
     5f4:	1405                	addi	s0,s0,-31
     5f6:	0306                	slli	t1,t1,0x1
     5f8:	0900                	addi	s0,sp,144
     5fa:	0000                	unimp
     5fc:	0501                	addi	a0,a0,0
     5fe:	0615                	addi	a2,a2,5
     600:	00090103          	lb	sp,0(s2)
     604:	0100                	addi	s0,sp,128
     606:	2305                	jal	b26 <main+0xaae>
     608:	0306                	slli	t1,t1,0x1
     60a:	0900                	addi	s0,sp,144
    switch (seedcrc)
     60c:	0000                	unimp
     60e:	0501                	addi	a0,a0,0
     610:	0611                	addi	a2,a2,4
     612:	00097703          	0x97703
     616:	0100                	addi	s0,sp,128
     618:	00090203          	lb	tp,0(s2)
     61c:	0100                	addi	s0,sp,128
     61e:	1a05                	addi	s4,s4,-31
     620:	0306                	slli	t1,t1,0x1
     622:	0900                	addi	s0,sp,144
            ee_printf("Profile generation run parameters for coremark.\n");
     624:	0000                	unimp
     626:	0501                	addi	a0,a0,0
     628:	0314                	addi	a3,sp,384
     62a:	0906                	slli	s2,s2,0x1
     62c:	0000                	unimp
     62e:	0501                	addi	a0,a0,0
     630:	0318                	addi	a4,sp,384
     632:	097a                	slli	s2,s2,0x1e
     634:	0000                	unimp
     636:	0501                	addi	a0,a0,0
     638:	0611                	addi	a2,a2,4
     63a:	00090603          	lb	a2,0(s2)
     63e:	0100                	addi	s0,sp,128
            known_id = 2;
     640:	1405                	addi	s0,s0,-31
     642:	0306                	slli	t1,t1,0x1
            ee_printf("Profile generation run parameters for coremark.\n");
     644:	0900                	addi	s0,sp,144
     646:	0000                	unimp
     648:	0501                	addi	a0,a0,0
     64a:	0615                	addi	a2,a2,5
     64c:	00090103          	lb	sp,0(s2)
            known_id = 2;
     650:	0100                	addi	s0,sp,128
     652:	2305                	jal	b72 <main+0xafa>
     654:	0306                	slli	t1,t1,0x1
     656:	0900                	addi	s0,sp,144
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
     658:	0000                	unimp
     65a:	0501                	addi	a0,a0,0
     65c:	0611                	addi	a2,a2,4
     65e:	00090303          	lb	t1,0(s2)
     662:	0100                	addi	s0,sp,128
     664:	1a05                	addi	s4,s4,-31
     666:	0306                	slli	t1,t1,0x1
     668:	0900                	addi	s0,sp,144
     66a:	0000                	unimp
     66c:	0501                	addi	a0,a0,0
     66e:	0314                	addi	a3,sp,384
                results[i].err++;
     670:	0901                	addi	s2,s2,0
     672:	0000                	unimp
     674:	0501                	addi	a0,a0,0
     676:	0318                	addi	a4,sp,384
     678:	097f                	0x97f
     67a:	0000                	unimp
     67c:	0501                	addi	a0,a0,0
     67e:	0611                	addi	a2,a2,4
     680:	00090103          	lb	sp,0(s2)
     684:	0100                	addi	s0,sp,128
     686:	1405                	addi	s0,s0,-31
    switch (seedcrc)
     688:	0306                	slli	t1,t1,0x1
     68a:	0900                	addi	s0,sp,144
    ee_s16       known_id = -1, total_errors = 0;
     68c:	0000                	unimp
     68e:	0501                	addi	a0,a0,0
    switch (seedcrc)
     690:	0615                	addi	a2,a2,5
     692:	00090103          	lb	sp,0(s2)
    ee_s16       known_id = -1, total_errors = 0;
     696:	0100                	addi	s0,sp,128
     698:	2405                	jal	8b8 <main+0x840>
     69a:	0306                	slli	t1,t1,0x1
    total_errors += check_data_types();
     69c:	0900                	addi	s0,sp,144
     69e:	0000                	unimp
     6a0:	0501                	addi	a0,a0,0
     6a2:	0611                	addi	a2,a2,4
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     6a4:	00097e03          	0x97e03
    total_errors += check_data_types();
     6a8:	0100                	addi	s0,sp,128
     6aa:	1a05                	addi	s4,s4,-31
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     6ac:	0306                	slli	t1,t1,0x1
     6ae:	0900                	addi	s0,sp,144
     6b0:	0000                	unimp
     6b2:	0501                	addi	a0,a0,0
     6b4:	0314                	addi	a3,sp,384
     6b6:	0901                	addi	s2,s2,0
     6b8:	0000                	unimp
     6ba:	0501                	addi	a0,a0,0
    ee_printf("Total ticks      : %d\n", (int)total_time);
     6bc:	0318                	addi	a4,sp,384
     6be:	097f                	0x97f
     6c0:	0000                	unimp
     6c2:	0501                	addi	a0,a0,0
     6c4:	0611                	addi	a2,a2,4
     6c6:	00090103          	lb	sp,0(s2)
     6ca:	0100                	addi	s0,sp,128
     6cc:	1405                	addi	s0,s0,-31
     6ce:	0306                	slli	t1,t1,0x1
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
     6d0:	0900                	addi	s0,sp,144
     6d2:	0000                	unimp
     6d4:	0501                	addi	a0,a0,0
     6d6:	0615                	addi	a2,a2,5
     6d8:	00090103          	lb	sp,0(s2)
     6dc:	0100                	addi	s0,sp,128
     6de:	2405                	jal	8fe <main+0x886>
     6e0:	0306                	slli	t1,t1,0x1
     6e2:	0900                	addi	s0,sp,144
     6e4:	0000                	unimp
     6e6:	0901                	addi	s2,s2,0
     6e8:	0000                	unimp
     6ea:	0100                	addi	s0,sp,128
     6ec:	0501                	addi	a0,a0,0
     6ee:	0001                	nop
     6f0:	0205                	addi	tp,tp,1
     6f2:	0000                	unimp
    if (time_in_secs(total_time) > 0)
     6f4:	0000                	unimp
     6f6:	01018603          	lb	a2,16(gp) # 10013b0 <__global_pointer$+0x10>
     6fa:	0505                	addi	a0,a0,1
     6fc:	00090103          	lb	sp,0(s2)
    total_errors += check_data_types();
     700:	0100                	addi	s0,sp,128
     702:	0805                	addi	a6,a6,1
    if (time_in_secs(total_time) > 0)
     704:	0306                	slli	t1,t1,0x1
     706:	0900                	addi	s0,sp,144
     708:	0000                	unimp
     70a:	0501                	addi	a0,a0,0
    total_errors += check_data_types();
     70c:	0605                	addi	a2,a2,1
     70e:	00090503          	lb	a0,0(s2)
    if (time_in_secs(total_time) > 0)
     712:	0100                	addi	s0,sp,128
     714:	0d05                	addi	s10,s10,1
     716:	0306                	slli	t1,t1,0x1
     718:	0900                	addi	s0,sp,144
     71a:	0000                	unimp
                  default_num_contexts * results[0].iterations
     71c:	0501                	addi	a0,a0,0
     71e:	0316                	slli	t1,t1,0x5
        ee_printf("Iterations/Sec   : %lf\n",
     720:	0900                	addi	s0,sp,144
     722:	0000                	unimp
     724:	0501                	addi	a0,a0,0
     726:	0301                	addi	t1,t1,0
     728:	0901                	addi	s2,s2,0
     72a:	0000                	unimp
     72c:	0501                	addi	a0,a0,0
     72e:	0609                	addi	a2,a2,2
     730:	00097c03          	0x97c03
                      / time_in_secs(total_time));
     734:	0100                	addi	s0,sp,128
     736:	1705                	addi	a4,a4,-31
        ee_printf("Iterations/Sec   : %lf\n",
     738:	0306                	slli	t1,t1,0x1
     73a:	0900                	addi	s0,sp,144
                      / time_in_secs(total_time));
     73c:	0000                	unimp
     73e:	0501                	addi	a0,a0,0
     740:	032a                	slli	t1,t1,0xa
     742:	0900                	addi	s0,sp,144
        ee_printf("Iterations/Sec   : %lf\n",
     744:	0000                	unimp
     746:	0501                	addi	a0,a0,0
     748:	0320                	addi	s0,sp,392
     74a:	0900                	addi	s0,sp,144
     74c:	0000                	unimp
     74e:	0501                	addi	a0,a0,0
     750:	032a                	slli	t1,t1,0xa
     752:	0900                	addi	s0,sp,144
     754:	0000                	unimp
     756:	0501                	addi	a0,a0,0
     758:	09000313          	li	t1,144
     75c:	0000                	unimp
     75e:	0501                	addi	a0,a0,0
     760:	0609                	addi	a2,a2,2
     762:	00090103          	lb	sp,0(s2)
     766:	0100                	addi	s0,sp,128
     768:	1705                	addi	a4,a4,-31
     76a:	0306                	slli	t1,t1,0x1
     76c:	0900                	addi	s0,sp,144
     76e:	0000                	unimp
     770:	0501                	addi	a0,a0,0
     772:	030d                	addi	t1,t1,3
    if (time_in_secs(total_time) < 10)
     774:	0902                	c.slli64	s2
     776:	0000                	unimp
     778:	0501                	addi	a0,a0,0
     77a:	032a                	slli	t1,t1,0xa
     77c:	097e                	slli	s2,s2,0x1f
     77e:	0000                	unimp
     780:	0501                	addi	a0,a0,0
     782:	0320                	addi	s0,sp,392
     784:	0900                	addi	s0,sp,144
     786:	0000                	unimp
     788:	0501                	addi	a0,a0,0
     78a:	032a                	slli	t1,t1,0xa
     78c:	0900                	addi	s0,sp,144
     78e:	0000                	unimp
     790:	0501                	addi	a0,a0,0
     792:	09000313          	li	t1,144
     796:	0000                	unimp
    ee_printf("Iterations       : %lu\n",
     798:	0501                	addi	a0,a0,0
     79a:	0605                	addi	a2,a2,1
     79c:	00090203          	lb	tp,0(s2)
     7a0:	0100                	addi	s0,sp,128
     7a2:	1605                	addi	a2,a2,-31
     7a4:	0306                	slli	t1,t1,0x1
     7a6:	0900                	addi	s0,sp,144
     7a8:	0000                	unimp
     7aa:	0501                	addi	a0,a0,0
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     7ac:	0301                	addi	t1,t1,0
     7ae:	0901                	addi	s2,s2,0
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     7b0:	0000                	unimp
     7b2:	0901                	addi	s2,s2,0
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     7b4:	0000                	unimp
     7b6:	0100                	addi	s0,sp,128
        total_errors++;
     7b8:	0501                	addi	a0,a0,0
     7ba:	0001                	nop
     7bc:	0205                	addi	tp,tp,1
     7be:	0000                	unimp
    ee_printf("Iterations       : %lu\n",
     7c0:	0000                	unimp
     7c2:	01019103          	lh	sp,16(gp) # 10013b0 <__global_pointer$+0x10>
     7c6:	0505                	addi	a0,a0,1
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     7c8:	00090103          	lb	sp,0(s2)
     7cc:	0100                	addi	s0,sp,128
     7ce:	1605                	addi	a2,a2,-31
     7d0:	0306                	slli	t1,t1,0x1
     7d2:	0900                	addi	s0,sp,144
     7d4:	0000                	unimp
     7d6:	0301                	addi	t1,t1,0
     7d8:	0901                	addi	s2,s2,0
     7da:	0000                	unimp
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     7dc:	0501                	addi	a0,a0,0
     7de:	0310                	addi	a2,sp,384
     7e0:	097f                	0x97f
     7e2:	0000                	unimp
     7e4:	0501                	addi	a0,a0,0
     7e6:	0605                	addi	a2,a2,1
     7e8:	00090103          	lb	sp,0(s2)
     7ec:	0100                	addi	s0,sp,128
     7ee:	1005                	c.nop	-31
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     7f0:	0306                	slli	t1,t1,0x1
     7f2:	0900                	addi	s0,sp,144
     7f4:	0000                	unimp
     7f6:	0501                	addi	a0,a0,0
     7f8:	0301                	addi	t1,t1,0
     7fa:	0901                	addi	s2,s2,0
     7fc:	0000                	unimp
     7fe:	0901                	addi	s2,s2,0
     800:	0000                	unimp
     802:	0100                	addi	s0,sp,128
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
     804:	0501                	addi	a0,a0,0
     806:	0001                	nop
     808:	0205                	addi	tp,tp,1
     80a:	0c60                	addi	s0,sp,540
     80c:	0000                	unimp
     80e:	01019f03          	lh	t5,16(gp) # 10013b0 <__global_pointer$+0x10>
     812:	0505                	addi	a0,a0,1
     814:	00090103          	lb	sp,0(s2)
    if (results[0].execs & ID_LIST)
     818:	0100                	addi	s0,sp,128
     81a:	00090103          	lb	sp,0(s2)
     81e:	0100                	addi	s0,sp,128
     820:	00090103          	lb	sp,0(s2)
        for (i = 0; i < default_num_contexts; i++)
     824:	0100                	addi	s0,sp,128
     826:	1005                	c.nop	-31
     828:	0306                	slli	t1,t1,0x1
     82a:	0901                	addi	s2,s2,0
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     82c:	0000                	unimp
     82e:	0501                	addi	a0,a0,0
     830:	0301                	addi	t1,t1,0
     832:	097c                	addi	a5,sp,156
     834:	0004                	0x4
     836:	0301                	addi	t1,t1,0
     838:	0900                	addi	s0,sp,144
     83a:	0038                	addi	a4,sp,8
     83c:	0501                	addi	a0,a0,0
     83e:	0310                	addi	a2,sp,384
        for (i = 0; i < default_num_contexts; i++)
     840:	00080903          	lb	s2,0(a6) # 17000 <_data_lma+0xc9e8>
     844:	0501                	addi	a0,a0,0
     846:	0605                	addi	a2,a2,1
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     848:	04090103          	lb	sp,64(s2)
     84c:	0100                	addi	s0,sp,128
     84e:	00090103          	lb	sp,0(s2)
     852:	0100                	addi	s0,sp,128
     854:	00090103          	lb	sp,0(s2)
     858:	0100                	addi	s0,sp,128
     85a:	00090103          	lb	sp,0(s2)
     85e:	0100                	addi	s0,sp,128
     860:	00090103          	lb	sp,0(s2)
     864:	0100                	addi	s0,sp,128
     866:	00090203          	lb	tp,0(s2)
     86a:	0100                	addi	s0,sp,128
     86c:	00090303          	lb	t1,0(s2)
     870:	0100                	addi	s0,sp,128
     872:	0e05                	addi	t3,t3,1
     874:	0306                	slli	t1,t1,0x1
     876:	097d                	addi	s2,s2,31
     878:	0004                	0x4
     87a:	0501                	addi	a0,a0,0
        for (i = 0; i < default_num_contexts; i++)
     87c:	030c                	addi	a1,sp,384
     87e:	00040903          	lb	s2,0(s0) # 19000 <_data_lma+0xe9e8>
     882:	0501                	addi	a0,a0,0
     884:	0975031b          	0x975031b
     888:	0004                	0x4
     88a:	0501                	addi	a0,a0,0
     88c:	0310                	addi	a2,sp,384
     88e:	0900                	addi	s0,sp,144
     890:	0004                	0x4
     892:	0301                	addi	t1,t1,0
    if (results[0].execs & ID_MATRIX)
     894:	097f                	0x97f
     896:	0004                	0x4
     898:	0501                	addi	a0,a0,0
     89a:	0609                	addi	a2,a2,2
        for (i = 0; i < default_num_contexts; i++)
     89c:	04090e03          	lb	t3,64(s2)
     8a0:	0100                	addi	s0,sp,128
     8a2:	0805                	addi	a6,a6,1
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     8a4:	0306                	slli	t1,t1,0x1
     8a6:	0286                	slli	t0,t0,0x1
     8a8:	0009                	c.nop	2
     8aa:	0100                	addi	s0,sp,128
     8ac:	1a05                	addi	s4,s4,-31
     8ae:	097dfa03          	0x97dfa03
     8b2:	0004                	0x4
     8b4:	0501                	addi	a0,a0,0
     8b6:	0609                	addi	a2,a2,2
        for (i = 0; i < default_num_contexts; i++)
     8b8:	08090103          	lb	sp,128(s2)
     8bc:	0100                	addi	s0,sp,128
     8be:	0505                	addi	a0,a0,1
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     8c0:	09028503          	lb	a0,144(t0) # 11957c2 <__freertos_irq_stack_top+0x1857c2>
     8c4:	0000                	unimp
     8c6:	0501                	addi	a0,a0,0
     8c8:	0608                	addi	a0,sp,768
     8ca:	00090003          	lb	zero,0(s2)
     8ce:	0100                	addi	s0,sp,128
     8d0:	0f05                	addi	t5,t5,1
     8d2:	04090203          	lb	tp,64(s2)
     8d6:	0100                	addi	s0,sp,128
     8d8:	2305                	jal	df8 <core_bench_list+0x198>
     8da:	04090003          	lb	zero,64(s2)
     8de:	0100                	addi	s0,sp,128
     8e0:	1505                	addi	a0,a0,-31
     8e2:	08090003          	lb	zero,128(s2)
     8e6:	0100                	addi	s0,sp,128
     8e8:	2305                	jal	e08 <core_bench_list+0x1a8>
     8ea:	10090003          	lb	zero,256(s2)
     8ee:	0100                	addi	s0,sp,128
     8f0:	1505                	addi	a0,a0,-31
     8f2:	04090003          	lb	zero,64(s2)
        for (i = 0; i < default_num_contexts; i++)
     8f6:	0100                	addi	s0,sp,128
     8f8:	0d05                	addi	s10,s10,1
     8fa:	0306                	slli	t1,t1,0x1
     8fc:	0901                	addi	s2,s2,0
     8fe:	000c                	0xc
     900:	0501                	addi	a0,a0,0
     902:	0612                	slli	a2,a2,0x4
     904:	00090003          	lb	zero,0(s2)
     908:	0100                	addi	s0,sp,128
     90a:	0f05                	addi	t5,t5,1
    if (results[0].execs & ID_STATE)
     90c:	04097f03          	0x4097f03
     910:	0100                	addi	s0,sp,128
     912:	0905                	addi	s2,s2,1
        for (i = 0; i < default_num_contexts; i++)
     914:	0306                	slli	t1,t1,0x1
     916:	7dfa                	flw	fs11,188(sp)
     918:	0409                	addi	s0,s0,2
     91a:	0100                	addi	s0,sp,128
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     91c:	0505                	addi	a0,a0,1
     91e:	0902a203          	lw	tp,144(t0)
     922:	0000                	unimp
     924:	0301                	addi	t1,t1,0
     926:	0901                	addi	s2,s2,0
     928:	0000                	unimp
     92a:	0501                	addi	a0,a0,0
     92c:	0615                	addi	a2,a2,5
     92e:	00096303          	0x96303
        for (i = 0; i < default_num_contexts; i++)
     932:	0100                	addi	s0,sp,128
     934:	0b05                	addi	s6,s6,1
     936:	08091d03          	lh	s10,128(s2)
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     93a:	0100                	addi	s0,sp,128
     93c:	0905                	addi	s2,s2,1
     93e:	0306                	slli	t1,t1,0x1
     940:	0902                	c.slli64	s2
     942:	0008                	0x8
     944:	0501                	addi	a0,a0,0
     946:	0614                	addi	a3,sp,768
     948:	00090003          	lb	zero,0(s2)
     94c:	0100                	addi	s0,sp,128
     94e:	0905                	addi	s2,s2,1
     950:	0306                	slli	t1,t1,0x1
     952:	0901                	addi	s2,s2,0
     954:	0004                	0x4
     956:	0501                	addi	a0,a0,0
     958:	0614                	addi	a3,sp,768
     95a:	00090003          	lb	zero,0(s2)
     95e:	0100                	addi	s0,sp,128
     960:	0905                	addi	s2,s2,1
     962:	0306                	slli	t1,t1,0x1
     964:	0901                	addi	s2,s2,0
     966:	0004                	0x4
     968:	0301                	addi	t1,t1,0
     96a:	0901                	addi	s2,s2,0
        for (i = 0; i < default_num_contexts; i++)
     96c:	0000                	unimp
     96e:	0501                	addi	a0,a0,0
     970:	7b03060b          	0x7b03060b
     974:	0009                	c.nop	2
     976:	0100                	addi	s0,sp,128
     978:	0505                	addi	a0,a0,1
     97a:	0306                	slli	t1,t1,0x1
     97c:	00040907          	0x40907
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     980:	0501                	addi	a0,a0,0
     982:	0309                	addi	t1,t1,2
    for (i = 0; i < default_num_contexts; i++)
     984:	00097dd7          	0x97dd7
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     988:	0100                	addi	s0,sp,128
     98a:	0c05                	addi	s8,s8,1
     98c:	0306                	slli	t1,t1,0x1
     98e:	0900                	addi	s0,sp,144
     990:	0000                	unimp
     992:	0501                	addi	a0,a0,0
    for (i = 0; i < default_num_contexts; i++)
     994:	060d                	addi	a2,a2,3
     996:	04090703          	lb	a4,64(s2)
     99a:	0100                	addi	s0,sp,128
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     99c:	2005                	jal	9bc <main+0x944>
     99e:	0306                	slli	t1,t1,0x1
     9a0:	0901                	addi	s2,s2,0
     9a2:	0000                	unimp
    for (i = 0; i < default_num_contexts; i++)
     9a4:	0501                	addi	a0,a0,0
     9a6:	0312                	slli	t1,t1,0x4
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     9a8:	097f                	0x97f
     9aa:	0004                	0x4
     9ac:	0501                	addi	a0,a0,0
     9ae:	0320                	addi	s0,sp,392
     9b0:	0901                	addi	s2,s2,0
     9b2:	0008                	0x8
     9b4:	0501                	addi	a0,a0,0
     9b6:	0312                	slli	t1,t1,0x4
     9b8:	097f                	0x97f
     9ba:	0004                	0x4
     9bc:	0501                	addi	a0,a0,0
     9be:	060d                	addi	a2,a2,3
     9c0:	04090103          	lb	sp,64(s2)
     9c4:	0100                	addi	s0,sp,128
     9c6:	1005                	c.nop	-31
     9c8:	0306                	slli	t1,t1,0x1
     9ca:	0900                	addi	s0,sp,144
     9cc:	0000                	unimp
     9ce:	0501                	addi	a0,a0,0
    for (i = 0; i < default_num_contexts; i++)
     9d0:	0611                	addi	a2,a2,4
     9d2:	08090103          	lb	sp,128(s2)
     9d6:	0100                	addi	s0,sp,128
     9d8:	3a05                	jal	308 <main+0x290>
     9da:	0306                	slli	t1,t1,0x1
     9dc:	0900                	addi	s0,sp,144
     9de:	0000                	unimp
     9e0:	0501                	addi	a0,a0,0
     9e2:	0318                	addi	a4,sp,384
    if (total_errors == 0)
     9e4:	0900                	addi	s0,sp,144
     9e6:	0008                	0x8
    if (total_errors > 0)
     9e8:	0501                	addi	a0,a0,0
     9ea:	060d                	addi	a2,a2,3
        ee_printf("Errors detected\n");
     9ec:	0c090203          	lb	tp,192(s2)
     9f0:	0100                	addi	s0,sp,128
     9f2:	1a05                	addi	s4,s4,-31
     9f4:	0306                	slli	t1,t1,0x1
     9f6:	0900                	addi	s0,sp,144
     9f8:	0000                	unimp
     9fa:	0501                	addi	a0,a0,0
    portable_fini(&(results[0].port));
     9fc:	0310                	addi	a2,sp,384
     9fe:	0900                	addi	s0,sp,144
     a00:	0004                	0x4
     a02:	0501                	addi	a0,a0,0
     a04:	0611                	addi	a2,a2,4
     a06:	04090203          	lb	tp,64(s2)
}
     a0a:	0100                	addi	s0,sp,128
     a0c:	00090103          	lb	sp,0(s2)
     a10:	0100                	addi	s0,sp,128
     a12:	2905                	jal	e42 <core_bench_list+0x1e2>
     a14:	0306                	slli	t1,t1,0x1
     a16:	0900                	addi	s0,sp,144
     a18:	0000                	unimp
     a1a:	0501                	addi	a0,a0,0
     a1c:	0321                	addi	t1,t1,8
     a1e:	0900                	addi	s0,sp,144
     a20:	0004                	0x4
     a22:	0501                	addi	a0,a0,0
     a24:	0611                	addi	a2,a2,4
     a26:	04090103          	lb	sp,64(s2)
     a2a:	0100                	addi	s0,sp,128
     a2c:	2705                	jal	114c <__stack_size+0x14c>
     a2e:	0306                	slli	t1,t1,0x1
     a30:	0900                	addi	s0,sp,144
     a32:	0000                	unimp
     a34:	0501                	addi	a0,a0,0
     a36:	0321                	addi	t1,t1,8
     a38:	0900                	addi	s0,sp,144
     a3a:	0004                	0x4
     a3c:	0501                	addi	a0,a0,0
     a3e:	0611                	addi	a2,a2,4
     a40:	04090103          	lb	sp,64(s2)
     a44:	0100                	addi	s0,sp,128
     a46:	2105                	jal	e66 <core_bench_list+0x206>
     a48:	0306                	slli	t1,t1,0x1
     a4a:	0900                	addi	s0,sp,144
        results[0].execs = ALL_ALGORITHMS_MASK;
     a4c:	0000                	unimp
     a4e:	0501                	addi	a0,a0,0
     a50:	0609                	addi	a2,a2,2
     a52:	04090303          	lb	t1,64(s2)
     a56:	0100                	addi	s0,sp,128
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a58:	0c05                	addi	s8,s8,1
     a5a:	0306                	slli	t1,t1,0x1
     a5c:	0900                	addi	s0,sp,144
     a5e:	0000                	unimp
     a60:	0501                	addi	a0,a0,0
     a62:	060d                	addi	a2,a2,3
     a64:	08090103          	lb	sp,128(s2)
     a68:	0100                	addi	s0,sp,128
     a6a:	1505                	addi	a0,a0,-31
     a6c:	0306                	slli	t1,t1,0x1
     a6e:	0900                	addi	s0,sp,144
     a70:	0000                	unimp
     a72:	0501                	addi	a0,a0,0
            j++;
     a74:	0005                	c.nop	1
     a76:	0402                	c.slli64	s0
        if ((1 << (ee_u32)i) & results[0].execs)
     a78:	0302                	c.slli64	t1
     a7a:	001c0967          	jalr	s2,1(s8) # 1a001 <_data_lma+0xf9e9>
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a7e:	0601                	addi	a2,a2,0
     a80:	1c091e03          	lh	t3,448(s2)
     a84:	0100                	addi	s0,sp,128
     a86:	00090203          	lb	tp,0(s2)
            j++;
     a8a:	0100                	addi	s0,sp,128
     a8c:	0805                	addi	a6,a6,1
     a8e:	0306                	slli	t1,t1,0x1
     a90:	0900                	addi	s0,sp,144
     a92:	0000                	unimp
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a94:	0501                	addi	a0,a0,0
     a96:	0605                	addi	a2,a2,1
     a98:	04090203          	lb	tp,64(s2)
     a9c:	0100                	addi	s0,sp,128
     a9e:	2405                	jal	cbe <core_bench_list+0x5e>
     aa0:	0306                	slli	t1,t1,0x1
     aa2:	0900                	addi	s0,sp,144
     aa4:	0000                	unimp
     aa6:	0501                	addi	a0,a0,0
     aa8:	0605                	addi	a2,a2,1
     aaa:	0901ac03          	lw	s8,144(gp) # 1001430 <__global_pointer$+0x90>
     aae:	0004                	0x4
        if ((1 << (ee_u32)i) & results[0].execs)
     ab0:	0301                	addi	t1,t1,0
     ab2:	0901                	addi	s2,s2,0
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     ab4:	0000                	unimp
     ab6:	0501                	addi	a0,a0,0
     ab8:	0608                	addi	a0,sp,768
     aba:	00093903          	0x93903
     abe:	0100                	addi	s0,sp,128
     ac0:	1005                	c.nop	-31
     ac2:	04094703          	lbu	a4,64(s2)
        if (results[i].execs & ID_LIST)
     ac6:	0100                	addi	s0,sp,128
     ac8:	0505                	addi	a0,a0,1
     aca:	0306                	slli	t1,t1,0x1
        ee_printf(
     acc:	0902                	c.slli64	s2
     ace:	0004                	0x4
     ad0:	0501                	addi	a0,a0,0
     ad2:	0610                	addi	a2,sp,768
     ad4:	00090003          	lb	zero,0(s2)
     ad8:	0100                	addi	s0,sp,128
     ada:	0505                	addi	a0,a0,1
     adc:	0306                	slli	t1,t1,0x1
     ade:	0901                	addi	s2,s2,0
            res->crclist = res->crc;
     ae0:	0004                	0x4
     ae2:	0501                	addi	a0,a0,0
    for (i = 0; i < iterations; i++)
     ae4:	0615                	addi	a2,a2,5
     ae6:	00090003          	lb	zero,0(s2)
     aea:	0100                	addi	s0,sp,128
     aec:	1c05                	addi	s8,s8,-31
     aee:	04090303          	lb	t1,64(s2)
     af2:	0100                	addi	s0,sp,128
        ee_printf(
     af4:	1005                	c.nop	-31
     af6:	04097d03          	0x4097d03
     afa:	0100                	addi	s0,sp,128
     afc:	0505                	addi	a0,a0,1
     afe:	0306                	slli	t1,t1,0x1
     b00:	0901                	addi	s2,s2,0
     b02:	0004                	0x4
        if (known_id == 3)
     b04:	0501                	addi	a0,a0,0
     b06:	0610                	addi	a2,sp,768
     b08:	00090003          	lb	zero,0(s2)
     b0c:	0100                	addi	s0,sp,128
     b0e:	0505                	addi	a0,a0,1
                      default_num_contexts * results[0].iterations
     b10:	0306                	slli	t1,t1,0x1
     b12:	0902                	c.slli64	s2
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b14:	0004                	0x4
     b16:	0501                	addi	a0,a0,0
     b18:	0610                	addi	a2,sp,768
     b1a:	00090003          	lb	zero,0(s2)
     b1e:	0100                	addi	s0,sp,128
     b20:	0505                	addi	a0,a0,1
     b22:	0306                	slli	t1,t1,0x1
     b24:	0901                	addi	s2,s2,0
     b26:	0004                	0x4
                          / time_in_secs(total_time),
     b28:	0501                	addi	a0,a0,0
     b2a:	0608                	addi	a0,sp,768
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b2c:	00093203          	0x93203
                          / time_in_secs(total_time),
     b30:	0100                	addi	s0,sp,128
     b32:	1005                	c.nop	-31
     b34:	04094e03          	lbu	t3,64(s2)
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b38:	0100                	addi	s0,sp,128
     b3a:	0505                	addi	a0,a0,1
     b3c:	0306                	slli	t1,t1,0x1
     b3e:	0901                	addi	s2,s2,0
     b40:	0004                	0x4
     b42:	0301                	addi	t1,t1,0
     b44:	7ece                	flw	ft9,240(sp)
     b46:	0009                	c.nop	2
     b48:	0100                	addi	s0,sp,128
     b4a:	0901e303          	0x901e303
     b4e:	0000                	unimp
     b50:	0501                	addi	a0,a0,0
     b52:	0608                	addi	a0,sp,768
     b54:	00090003          	lb	zero,0(s2)
     b58:	0100                	addi	s0,sp,128
     b5a:	2305                	jal	107a <__stack_size+0x7a>
     b5c:	04090203          	lb	tp,64(s2)
     b60:	0100                	addi	s0,sp,128
     b62:	1505                	addi	a0,a0,-31
     b64:	04090003          	lb	zero,64(s2)
     b68:	0100                	addi	s0,sp,128
     b6a:	0d05                	addi	s10,s10,1
     b6c:	0306                	slli	t1,t1,0x1
     b6e:	0901                	addi	s2,s2,0
            ee_printf(" / %s", MEM_LOCATION);
     b70:	000c                	0xc
     b72:	0501                	addi	a0,a0,0
     b74:	0612                	slli	a2,a2,0x4
     b76:	00090003          	lb	zero,0(s2)
     b7a:	0100                	addi	s0,sp,128
     b7c:	0f05                	addi	t5,t5,1
     b7e:	04097f03          	0x4097f03
     b82:	0100                	addi	s0,sp,128
            ee_printf("\n");
     b84:	0505                	addi	a0,a0,1
     b86:	0306                	slli	t1,t1,0x1
     b88:	7e9c                	flw	fa5,56(a3)
     b8a:	0409                	addi	s0,s0,2
     b8c:	0100                	addi	s0,sp,128
     b8e:	0905                	addi	s2,s2,1
     b90:	00090103          	lb	sp,0(s2)
        ee_printf(
     b94:	0100                	addi	s0,sp,128
     b96:	1005                	c.nop	-31
     b98:	0306                	slli	t1,t1,0x1
     b9a:	0900                	addi	s0,sp,144
     b9c:	0000                	unimp
     b9e:	0501                	addi	a0,a0,0
     ba0:	0901030b          	0x901030b
        total_errors++;
     ba4:	0004                	0x4
     ba6:	0501                	addi	a0,a0,0
     ba8:	0609                	addi	a2,a2,2
     baa:	04090203          	lb	tp,64(s2)
    if (results[0].execs & ID_STATE)
     bae:	0100                	addi	s0,sp,128
     bb0:	1205                	addi	tp,tp,-31
     bb2:	0306                	slli	t1,t1,0x1
     bb4:	0900                	addi	s0,sp,144
     bb6:	0000                	unimp
            ee_printf("6k validation run parameters for coremark.\n");
     bb8:	0501                	addi	a0,a0,0
     bba:	0310                	addi	a2,sp,384
     bbc:	0901                	addi	s2,s2,0
     bbe:	0014                	0x14
     bc0:	0501                	addi	a0,a0,0
     bc2:	0312                	slli	t1,t1,0x4
     bc4:	097f                	0x97f
     bc6:	0004                	0x4
     bc8:	0501                	addi	a0,a0,0
     bca:	0609                	addi	a2,a2,2
     bcc:	04090103          	lb	sp,64(s2)
     bd0:	0100                	addi	s0,sp,128
     bd2:	0b05                	addi	s6,s6,1
     bd4:	0306                	slli	t1,t1,0x1
     bd6:	097d                	addi	s2,s2,31
            known_id = 1;
     bd8:	0000                	unimp
     bda:	0501                	addi	a0,a0,0
            ee_printf("6k validation run parameters for coremark.\n");
     bdc:	0605                	addi	a2,a2,1
     bde:	0c090803          	lb	a6,192(s2)
     be2:	0100                	addi	s0,sp,128
     be4:	0901bd03          	0x901bd03
            known_id = 1;
     be8:	0000                	unimp
     bea:	0301                	addi	t1,t1,0
     bec:	0902                	c.slli64	s2
     bee:	0000                	unimp
            ee_printf("6k performance run parameters for coremark.\n");
     bf0:	0301                	addi	t1,t1,0
     bf2:	0901                	addi	s2,s2,0
     bf4:	0000                	unimp
     bf6:	0501                	addi	a0,a0,0
     bf8:	0628                	addi	a0,sp,776
     bfa:	00090003          	lb	zero,0(s2)
     bfe:	0100                	addi	s0,sp,128
     c00:	04090303          	lb	t1,64(s2)
     c04:	0100                	addi	s0,sp,128
     c06:	0c05                	addi	s8,s8,1
     c08:	0900d903          	lhu	s2,144(ra)
     c0c:	0004                	0x4
     c0e:	0501                	addi	a0,a0,0
     c10:	0319                	addi	t1,t1,6
     c12:	7fa4                	flw	fs1,120(a5)
     c14:	0409                	addi	s0,s0,2
     c16:	0100                	addi	s0,sp,128
     c18:	0505                	addi	a0,a0,1
     c1a:	0306                	slli	t1,t1,0x1
            known_id = 0;
     c1c:	0901                	addi	s2,s2,0
     c1e:	0004                	0x4
     c20:	0501                	addi	a0,a0,0
     c22:	0619                	addi	a2,a2,6
            ee_printf("2K validation run parameters for coremark.\n");
     c24:	00090003          	lb	zero,0(s2)
     c28:	0100                	addi	s0,sp,128
     c2a:	0505                	addi	a0,a0,1
     c2c:	0306                	slli	t1,t1,0x1
     c2e:	0902                	c.slli64	s2
     c30:	0004                	0x4
     c32:	0501                	addi	a0,a0,0
     c34:	0619                	addi	a2,a2,6
     c36:	00090003          	lb	zero,0(s2)
     c3a:	0100                	addi	s0,sp,128
            known_id = 4;
     c3c:	0505                	addi	a0,a0,1
     c3e:	0306                	slli	t1,t1,0x1
            ee_printf("2K validation run parameters for coremark.\n");
     c40:	0901                	addi	s2,s2,0
     c42:	0004                	0x4
     c44:	0501                	addi	a0,a0,0
     c46:	0619                	addi	a2,a2,6
     c48:	00090003          	lb	zero,0(s2)
     c4c:	0100                	addi	s0,sp,128
     c4e:	0505                	addi	a0,a0,1
            known_id = 4;
     c50:	0306                	slli	t1,t1,0x1
     c52:	0901                	addi	s2,s2,0
     c54:	0004                	0x4
     c56:	0301                	addi	t1,t1,0
        for (i = 0; i < default_num_contexts; i++)
     c58:	7ebd                	lui	t4,0xfffef
     c5a:	0009                	c.nop	2
     c5c:	0100                	addi	s0,sp,128
     c5e:	09029703          	lh	a4,144(t0)
    ee_s16     find_num = res->seed3;
     c62:	0000                	unimp
{
     c64:	0301                	addi	t1,t1,0
     c66:	0901                	addi	s2,s2,0
     c68:	0000                	unimp
     c6a:	0301                	addi	t1,t1,0
     c6c:	0902                	c.slli64	s2
     c6e:	0000                	unimp
     c70:	0301                	addi	t1,t1,0
     c72:	0902                	c.slli64	s2
     c74:	0000                	unimp
     c76:	0501                	addi	a0,a0,0
     c78:	0309                	addi	t1,t1,2
     c7a:	0902                	c.slli64	s2
     c7c:	0000                	unimp
     c7e:	0301                	addi	t1,t1,0
     c80:	0901                	addi	s2,s2,0
     c82:	0000                	unimp
     c84:	0301                	addi	t1,t1,0
     c86:	0901                	addi	s2,s2,0
     c88:	0000                	unimp
     c8a:	0301                	addi	t1,t1,0
     c8c:	0902                	c.slli64	s2
     c8e:	0000                	unimp
     c90:	0301                	addi	t1,t1,0
     c92:	0902                	c.slli64	s2
     c94:	0000                	unimp
     c96:	0501                	addi	a0,a0,0
     c98:	060e                	slli	a2,a2,0x3
     c9a:	00097c03          	0x97c03
     c9e:	0100                	addi	s0,sp,128
     ca0:	04097f03          	0x4097f03
    list_head *list     = res->list;
     ca4:	0100                	addi	s0,sp,128
     ca6:	1105                	addi	sp,sp,-31
    for (i = 0; i < find_num; i++)
     ca8:	04090303          	lb	t1,64(s2)
    info.idx = finder_idx;
     cac:	0100                	addi	s0,sp,128
     cae:	0c05                	addi	s8,s8,1
    for (i = 0; i < find_num; i++)
     cb0:	0900c903          	lbu	s2,144(ra)
    ee_u16     found = 0, missed = 0;
     cb4:	0004                	0x4
     cb6:	0501                	addi	a0,a0,0
     cb8:	060d                	addi	a2,a2,3
     cba:	097fbb03          	0x97fbb03
    ee_u16     retval = 0;
     cbe:	0004                	0x4
    if (info->idx >= 0)
     cc0:	0501                	addi	a0,a0,0
     cc2:	0614                	addi	a3,sp,768
        info.data16 = (i & 0xff);
     cc4:	00090003          	lb	zero,0(s2)
     cc8:	0100                	addi	s0,sp,128
     cca:	0d05                	addi	s10,s10,1
    if (info->idx >= 0)
     ccc:	0306                	slli	t1,t1,0x1
     cce:	0902                	c.slli64	s2
        while (list && (list->info->idx != info->idx))
     cd0:	0004                	0x4
     cd2:	0301                	addi	t1,t1,0
     cd4:	0901                	addi	s2,s2,0
     cd6:	0000                	unimp
     cd8:	0301                	addi	t1,t1,0
     cda:	0901                	addi	s2,s2,0
     cdc:	0000                	unimp
     cde:	0501                	addi	a0,a0,0
     ce0:	0614                	addi	a3,sp,768
     ce2:	00097c03          	0x97c03
     ce6:	0100                	addi	s0,sp,128
     ce8:	1305                	addi	t1,t1,-31
     cea:	04090303          	lb	t1,64(s2)
     cee:	0100                	addi	s0,sp,128
     cf0:	1105                	addi	sp,sp,-31
     cf2:	0306                	slli	t1,t1,0x1
     cf4:	00040903          	lb	s2,0(s0)
     cf8:	0501                	addi	a0,a0,0
     cfa:	01030613          	addi	a2,t1,16 # ffffa010 <__freertos_irq_stack_top+0xfefea010>
            list = list->next;
     cfe:	0009                	c.nop	2
        while (list && (list->info->idx != info->idx))
     d00:	0100                	addi	s0,sp,128
     d02:	1605                	addi	a2,a2,-31
     d04:	04097f03          	0x4097f03
     d08:	0100                	addi	s0,sp,128
     d0a:	1105                	addi	sp,sp,-31
    while (list)
     d0c:	0306                	slli	t1,t1,0x1
     d0e:	0901                	addi	s2,s2,0
     d10:	0004                	0x4
     d12:	0301                	addi	t1,t1,0
        tmp        = list->next;
     d14:	0901                	addi	s2,s2,0
     d16:	0000                	unimp
        list->next = next;
     d18:	0501                	addi	a0,a0,0
     d1a:	0614                	addi	a3,sp,768
    while (list)
     d1c:	00090003          	lb	zero,0(s2)
        if (this_find == NULL)
     d20:	0100                	addi	s0,sp,128
     d22:	0d05                	addi	s10,s10,1
            if (this_find->info->data16 & 0x1) /* use found value */
     d24:	04097c03          	0x4097c03
            found++;
     d28:	0100                	addi	s0,sp,128
     d2a:	1a05                	addi	s4,s4,-31
     d2c:	08093503          	0x8093503
            if (this_find->info->data16 & 0x1) /* use found value */
     d30:	0100                	addi	s0,sp,128
     d32:	1305                	addi	t1,t1,-31
            found++;
     d34:	0c095703          	lhu	a4,192(s2)
            if (this_find->info->data16 & 0x1) /* use found value */
     d38:	0100                	addi	s0,sp,128
     d3a:	1105                	addi	sp,sp,-31
     d3c:	0306                	slli	t1,t1,0x1
     d3e:	0904                	addi	s1,sp,144
                retval += (this_find->info->data16 >> 9) & 1;
     d40:	0004                	0x4
     d42:	0501                	addi	a0,a0,0
     d44:	0316                	slli	t1,t1,0x5
     d46:	00000907          	0x907
     d4a:	0501                	addi	a0,a0,0
     d4c:	0619                	addi	a2,a2,6
     d4e:	00090003          	lb	zero,0(s2)
     d52:	0100                	addi	s0,sp,128
            if (this_find->next != NULL)
     d54:	2505                	jal	1374 <core_list_init+0x84>
     d56:	04090003          	lb	zero,64(s2)
     d5a:	0100                	addi	s0,sp,128
                this_find->next = finder->next;
     d5c:	1605                	addi	a2,a2,-31
     d5e:	0306                	slli	t1,t1,0x1
     d60:	00040907          	0x40907
                finder->next    = list->next;
     d64:	0501                	addi	a0,a0,0
     d66:	061f 0003 0009      	0x90003061f
                list->next      = finder;
     d6c:	0100                	addi	s0,sp,128
     d6e:	2805                	jal	d9e <core_bench_list+0x13e>
        if (info.idx >= 0)
     d70:	04090003          	lb	zero,64(s2)
     d74:	0100                	addi	s0,sp,128
     d76:	0505                	addi	a0,a0,1
            info.idx++;
     d78:	0306                	slli	t1,t1,0x1
     d7a:	7ce1                	lui	s9,0xffff8
     d7c:	0409                	addi	s0,s0,2
     d7e:	0100                	addi	s0,sp,128
     d80:	0905                	addi	s2,s2,1
     d82:	00090203          	lb	tp,0(s2)
     d86:	0100                	addi	s0,sp,128
     d88:	1705                	addi	a4,a4,-31
     d8a:	0306                	slli	t1,t1,0x1
     d8c:	0900                	addi	s0,sp,144
     d8e:	0000                	unimp
     d90:	0501                	addi	a0,a0,0
     d92:	0316                	slli	t1,t1,0x5
    for (i = 0; i < find_num; i++)
     d94:	00040903          	lb	s2,0(s0)
     d98:	0501                	addi	a0,a0,0
     d9a:	030d                	addi	t1,t1,3
     d9c:	0900                	addi	s0,sp,144
     d9e:	0004                	0x4
     da0:	0501                	addi	a0,a0,0
     da2:	032a                	slli	t1,t1,0xa
     da4:	097d                	addi	s2,s2,31
     da6:	0004                	0x4
     da8:	0501                	addi	a0,a0,0
     daa:	0320                	addi	s0,sp,392
     dac:	0900                	addi	s0,sp,144
     dae:	0008                	0x8
    if (finder_idx > 0)
     db0:	0501                	addi	a0,a0,0
     db2:	032a                	slli	t1,t1,0xa
    remover = core_list_remove(list->next);
     db4:	0900                	addi	s0,sp,144
     db6:	0004                	0x4
    if (info->idx >= 0)
     db8:	0501                	addi	a0,a0,0
     dba:	09000313          	li	t1,144
    list_head *ret = item->next;
     dbe:	0008                	0x8
    tmp        = item->info;
     dc0:	0501                	addi	a0,a0,0
     dc2:	0609                	addi	a2,a2,2
    item->info = ret->info;
     dc4:	04090103          	lb	sp,64(s2)
    item->next = item->next->next;
     dc8:	0100                	addi	s0,sp,128
     dca:	1705                	addi	a4,a4,-31
    item->info = ret->info;
     dcc:	0306                	slli	t1,t1,0x1
     dce:	0900                	addi	s0,sp,144
    ret->info  = tmp;
     dd0:	0000                	unimp
     dd2:	0501                	addi	a0,a0,0
    item->next = item->next->next;
     dd4:	09020313          	addi	t1,tp,144 # 1b090 <_data_lma+0x10a78>
    if (info->idx >= 0)
     dd8:	0004                	0x4
     dda:	0501                	addi	a0,a0,0
    ret->next  = NULL;
     ddc:	032a                	slli	t1,t1,0xa
     dde:	097e                	slli	s2,s2,0x1f
    if (info->idx >= 0)
     de0:	0004                	0x4
     de2:	0501                	addi	a0,a0,0
        while (list && (list->info->idx != info->idx))
     de4:	0320                	addi	s0,sp,392
     de6:	0900                	addi	s0,sp,144
     de8:	0008                	0x8
     dea:	0501                	addi	a0,a0,0
     dec:	032a                	slli	t1,t1,0xa
     dee:	0900                	addi	s0,sp,144
     df0:	0004                	0x4
     df2:	0501                	addi	a0,a0,0
            list = list->next;
     df4:	09000313          	li	t1,144
        while (list && (list->info->idx != info->idx))
     df8:	0008                	0x8
     dfa:	0501                	addi	a0,a0,0
        finder = list->next;
     dfc:	0605                	addi	a2,a2,1
     dfe:	04090203          	lb	tp,64(s2)
    while (finder)
     e02:	0100                	addi	s0,sp,128
        retval = crc16(list->info->data16, retval);
     e04:	1905                	addi	s2,s2,-31
     e06:	0306                	slli	t1,t1,0x1
     e08:	039a                	slli	t2,t2,0x6
     e0a:	0009                	c.nop	2
     e0c:	0100                	addi	s0,sp,128
     e0e:	1505                	addi	a0,a0,-31
     e10:	0306                	slli	t1,t1,0x1
     e12:	0004090b          	0x4090b
     e16:	0301                	addi	t1,t1,0
        finder = finder->next;
     e18:	0901                	addi	s2,s2,0
     e1a:	0000                	unimp
        retval = crc16(list->info->data16, retval);
     e1c:	0301                	addi	t1,t1,0
     e1e:	0901                	addi	s2,s2,0
    while (finder)
     e20:	0000                	unimp
     e22:	0501                	addi	a0,a0,0
     e24:	061a                	slli	a2,a2,0x6
     e26:	00090003          	lb	zero,0(s2)
     e2a:	0100                	addi	s0,sp,128
    item_removed->info  = item_modified->info;
     e2c:	1705                	addi	a4,a4,-31
     e2e:	04097f03          	0x4097f03
    item_removed->next  = item_modified->next;
     e32:	0100                	addi	s0,sp,128
    insize = 1;
     e34:	1a05                	addi	s4,s4,-31
     e36:	04090103          	lb	sp,64(s2)
    item_removed->info  = item_modified->info;
     e3a:	0100                	addi	s0,sp,128
    item_modified->info = tmp;
     e3c:	1105                	addi	sp,sp,-31
     e3e:	0306                	slli	t1,t1,0x1
    item_removed->next  = item_modified->next;
     e40:	0904                	addi	s1,sp,144
     e42:	0004                	0x4
    item_modified->next = item_removed;
     e44:	0501                	addi	a0,a0,0
     e46:	0614                	addi	a3,sp,768
        tail = NULL;
     e48:	00090003          	lb	zero,0(s2)
        list = NULL;
     e4c:	0100                	addi	s0,sp,128
     e4e:	1505                	addi	a0,a0,-31
        nmerges = 0; /* count number of merges we do in this pass */
     e50:	0306                	slli	t1,t1,0x1
     e52:	0902                	c.slli64	s2
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     e54:	0004                	0x4
     e56:	0501                	addi	a0,a0,0
            nmerges++; /* there exists a merge to be done */
     e58:	0620                	addi	s0,sp,776
     e5a:	00090003          	lb	zero,0(s2)
     e5e:	0100                	addi	s0,sp,128
            psize = 0;
     e60:	1a05                	addi	s4,s4,-31
     e62:	04090403          	lb	s0,64(s2)
                q = q->next;
     e66:	0100                	addi	s0,sp,128
                psize++;
     e68:	1305                	addi	t1,t1,-31
     e6a:	04095703          	lhu	a4,64(s2)
                if (!q)
     e6e:	0100                	addi	s0,sp,128
            for (i = 0; i < insize; i++)
     e70:	1e05                	addi	t3,t3,-31
     e72:	04090003          	lb	zero,64(s2)
     e76:	0100                	addi	s0,sp,128
                    list = e;
     e78:	2c05                	jal	10a8 <__stack_size+0xa8>
     e7a:	04090003          	lb	zero,64(s2)
     e7e:	0100                	addi	s0,sp,128
     e80:	1105                	addi	sp,sp,-31
     e82:	0306                	slli	t1,t1,0x1
            while (psize > 0 || (qsize > 0 && q))
     e84:	0904                	addi	s1,sp,144
     e86:	0004                	0x4
                else if (qsize == 0 || !q)
     e88:	0501                	addi	a0,a0,0
     e8a:	0315                	addi	t1,t1,5
     e8c:	00000903          	lb	s2,0(zero) # 0 <_start>
                else if (cmp(p->info, q->info, res) <= 0)
     e90:	0301                	addi	t1,t1,0
     e92:	0901                	addi	s2,s2,0
     e94:	0000                	unimp
     e96:	0301                	addi	t1,t1,0
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     e98:	0901                	addi	s2,s2,0
     e9a:	0000                	unimp
    return a->idx - b->idx;
     e9c:	0501                	addi	a0,a0,0
     e9e:	061a                	slli	a2,a2,0x6
     ea0:	00090003          	lb	zero,0(s2)
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     ea4:	0100                	addi	s0,sp,128
     ea6:	1705                	addi	a4,a4,-31
     ea8:	08097f03          	0x8097f03
     eac:	0100                	addi	s0,sp,128
     eae:	1105                	addi	sp,sp,-31
     eb0:	0306                	slli	t1,t1,0x1
     eb2:	0004091b          	0x4091b
     eb6:	0501                	addi	a0,a0,0
     eb8:	0614                	addi	a3,sp,768
     eba:	00090003          	lb	zero,0(s2)
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     ebe:	0100                	addi	s0,sp,128
    return a->idx - b->idx;
     ec0:	1a05                	addi	s4,s4,-31
     ec2:	04090603          	lb	a2,64(s2)
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     ec6:	0100                	addi	s0,sp,128
     ec8:	2405                	jal	10e8 <__stack_size+0xe8>
     eca:	097eff03          	0x97eff03
     ece:	000c                	0xc
     ed0:	0501                	addi	a0,a0,0
     ed2:	0315                	addi	t1,t1,5
     ed4:	0900                	addi	s0,sp,144
     ed6:	0004                	0x4
     ed8:	0501                	addi	a0,a0,0
     eda:	032d                	addi	t1,t1,11
                else if (cmp(p->info, q->info, res) <= 0)
     edc:	0900                	addi	s0,sp,144
     ede:	0004                	0x4
                    qsize--;
     ee0:	0501                	addi	a0,a0,0
     ee2:	0315                	addi	t1,t1,5
                    q = q->next;
     ee4:	0900                	addi	s0,sp,144
     ee6:	0004                	0x4
                    qsize--;
     ee8:	0501                	addi	a0,a0,0
     eea:	060d                	addi	a2,a2,3
                if (tail)
     eec:	04090103          	lb	sp,64(s2)
                    tail->next = e;
     ef0:	0100                	addi	s0,sp,128
     ef2:	1205                	addi	tp,tp,-31
                    list = e;
     ef4:	0306                	slli	t1,t1,0x1
     ef6:	0900                	addi	s0,sp,144
            while (psize > 0 || (qsize > 0 && q))
     ef8:	0000                	unimp
     efa:	0501                	addi	a0,a0,0
     efc:	097f030f          	0x97f030f
     f00:	0004                	0x4
     f02:	0501                	addi	a0,a0,0
                    qsize--;
     f04:	0605                	addi	a2,a2,1
     f06:	097e9603          	lh	a2,151(t4) # fffef097 <__freertos_irq_stack_top+0xfefdf097>
     f0a:	0004                	0x4
                    q = q->next;
     f0c:	0501                	addi	a0,a0,0
     f0e:	0309                	addi	t1,t1,2
                if (tail)
     f10:	0901                	addi	s2,s2,0
     f12:	0000                	unimp
                    list = e;
     f14:	0501                	addi	a0,a0,0
     f16:	0610                	addi	a2,sp,768
     f18:	00090003          	lb	zero,0(s2)
     f1c:	0100                	addi	s0,sp,128
     f1e:	0b05                	addi	s6,s6,1
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f20:	04090103          	lb	sp,64(s2)
     f24:	0100                	addi	s0,sp,128
     f26:	1505                	addi	a0,a0,-31
     f28:	0306                	slli	t1,t1,0x1
     f2a:	02d6                	slli	t0,t0,0x15
     f2c:	0809                	addi	a6,a6,2
     f2e:	0100                	addi	s0,sp,128
            list = list->next;
     f30:	00090103          	lb	sp,0(s2)
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f34:	0100                	addi	s0,sp,128
     f36:	00090103          	lb	sp,0(s2)
        finder = list->next;
     f3a:	0100                	addi	s0,sp,128
    while (finder)
     f3c:	1a05                	addi	s4,s4,-31
     f3e:	0306                	slli	t1,t1,0x1
     f40:	0900                	addi	s0,sp,144
     f42:	0000                	unimp
                    psize--;
     f44:	0501                	addi	a0,a0,0
     f46:	097f0317          	auipc	t1,0x97f0
     f4a:	0008                	0x8
                    p = p->next;
     f4c:	0501                	addi	a0,a0,0
     f4e:	0957030f          	0x957030f
     f52:	0008                	0x8
        while (p)
     f54:	0501                	addi	a0,a0,0
     f56:	0609                	addi	a2,a2,2
        tail->next = NULL;
     f58:	0900c403          	lbu	s0,144(ra)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     f5c:	0004                	0x4
     f5e:	0501                	addi	a0,a0,0
        insize *= 2;
     f60:	0614                	addi	a3,sp,768
     f62:	00090003          	lb	zero,0(s2)
        while (p)
     f66:	0100                	addi	s0,sp,128
     f68:	0905                	addi	s2,s2,1
     f6a:	0306                	slli	t1,t1,0x1
        nmerges = 0; /* count number of merges we do in this pass */
     f6c:	00040903          	lb	s2,0(s0)
        tail = NULL;
     f70:	0501                	addi	a0,a0,0
     f72:	060c                	addi	a1,sp,768
        list = NULL;
     f74:	00090003          	lb	zero,0(s2)
     f78:	0100                	addi	s0,sp,128
     f7a:	0905                	addi	s2,s2,1
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f7c:	0306                	slli	t1,t1,0x1
     f7e:	0904                	addi	s1,sp,144
     f80:	0004                	0x4
     f82:	0501                	addi	a0,a0,0
     f84:	0610                	addi	a2,sp,768
     f86:	00090003          	lb	zero,0(s2)
     f8a:	0100                	addi	s0,sp,128
     f8c:	0505                	addi	a0,a0,1
     f8e:	0306                	slli	t1,t1,0x1
     f90:	7fad                	lui	t6,0xfffeb
     f92:	0409                	addi	s0,s0,2
     f94:	0100                	addi	s0,sp,128
     f96:	0905                	addi	s2,s2,1
     f98:	00090203          	lb	tp,0(s2)
     f9c:	0100                	addi	s0,sp,128
     f9e:	00090103          	lb	sp,0(s2)
     fa2:	0100                	addi	s0,sp,128
            list = list->next;
     fa4:	00090103          	lb	sp,0(s2)
        while (list && ((list->info->data16 & 0xff) != info->data16))
     fa8:	0100                	addi	s0,sp,128
     faa:	00090203          	lb	tp,0(s2)
     fae:	0100                	addi	s0,sp,128
            retval += (list->next->info->data16 >> 8) & 1;
     fb0:	00090203          	lb	tp,0(s2)
            missed++;
     fb4:	0100                	addi	s0,sp,128
     fb6:	0f05                	addi	t5,t5,1
     fb8:	0306                	slli	t1,t1,0x1
     fba:	0900                	addi	s0,sp,144
            retval += (list->next->info->data16 >> 8) & 1;
     fbc:	0000                	unimp
     fbe:	0501                	addi	a0,a0,0
            missed++;
     fc0:	0311                	addi	t1,t1,4
     fc2:	097e                	slli	s2,s2,0x1f
            retval += (list->next->info->data16 >> 8) & 1;
     fc4:	0008                	0x8
     fc6:	0501                	addi	a0,a0,0
     fc8:	030e                	slli	t1,t1,0x3
     fca:	097e                	slli	s2,s2,0x1f
     fcc:	0004                	0x4
     fce:	0301                	addi	t1,t1,0
     fd0:	097f                	0x97f
     fd2:	0004                	0x4
     fd4:	0501                	addi	a0,a0,0
     fd6:	7fbf030f          	0x7fbf030f
    finder = list->next;
     fda:	0809                	addi	a6,a6,2
    while (finder)
     fdc:	0100                	addi	s0,sp,128
     fde:	2405                	jal	11fe <__stack_size+0x1fe>
        retval = crc16(list->info->data16, retval);
     fe0:	04090003          	lb	zero,64(s2)
     fe4:	0100                	addi	s0,sp,128
     fe6:	1505                	addi	a0,a0,-31
     fe8:	04090003          	lb	zero,64(s2)
     fec:	0100                	addi	s0,sp,128
     fee:	2d05                	jal	161e <matrix_test+0x1a>
     ff0:	04090003          	lb	zero,64(s2)
        finder = finder->next;
     ff4:	0100                	addi	s0,sp,128
     ff6:	1505                	addi	a0,a0,-31
        retval = crc16(list->info->data16, retval);
     ff8:	04090003          	lb	zero,64(s2)
    while (finder)
     ffc:	0100                	addi	s0,sp,128
     ffe:	2405                	jal	121e <__stack_size+0x21e>
}
    1000:	08090003          	lb	zero,128(s2)
    1004:	0100                	addi	s0,sp,128
    1006:	1505                	addi	a0,a0,-31
    1008:	04090003          	lb	zero,64(s2)
    100c:	0100                	addi	s0,sp,128
    100e:	2d05                	jal	163e <matrix_test+0x3a>
    1010:	04090003          	lb	zero,64(s2)
    1014:	0100                	addi	s0,sp,128
    1016:	1505                	addi	a0,a0,-31
    1018:	04090003          	lb	zero,64(s2)
    101c:	0100                	addi	s0,sp,128
    101e:	0d05                	addi	s10,s10,1
    1020:	0306                	slli	t1,t1,0x1
    1022:	0901                	addi	s2,s2,0
    1024:	0004                	0x4
    1026:	0501                	addi	a0,a0,0
    1028:	0612                	slli	a2,a2,0x4
    102a:	00090003          	lb	zero,0(s2)
    102e:	0100                	addi	s0,sp,128
    1030:	0f05                	addi	t5,t5,1
    1032:	04097f03          	0x4097f03
    1036:	0100                	addi	s0,sp,128
    1038:	0d05                	addi	s10,s10,1
    103a:	0306                	slli	t1,t1,0x1
    info.idx = finder_idx;
    103c:	08097df7          	0x8097df7
    1040:	0100                	addi	s0,sp,128
    1042:	2805                	jal	1072 <__stack_size+0x72>
    if (finder_idx > 0)
    1044:	0306                	slli	t1,t1,0x1
    1046:	0901                	addi	s2,s2,0
        while (p)
    1048:	0000                	unimp
    104a:	0501                	addi	a0,a0,0
    104c:	097f0313          	addi	t1,t5,151 # 9097 <__adddf3+0x7b3>
    1050:	0004                	0x4
    1052:	0501                	addi	a0,a0,0
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1054:	09010337          	lui	t1,0x9010
    1058:	0008                	0x8
    105a:	0501                	addi	a0,a0,0
        while (p)
    105c:	097f0313          	addi	t1,t5,151
        tail = NULL;
    1060:	0004                	0x4
    1062:	0501                	addi	a0,a0,0
        list = NULL;
    1064:	060d                	addi	a2,a2,3
    1066:	04090103          	lb	sp,64(s2)
        nmerges = 0; /* count number of merges we do in this pass */
    106a:	0100                	addi	s0,sp,128
        switch (flag)
    106c:	3705                	jal	f8c <core_bench_list+0x32c>
    106e:	0306                	slli	t1,t1,0x1
            nmerges++; /* there exists a merge to be done */
    1070:	0900                	addi	s0,sp,144
    1072:	0000                	unimp
    1074:	0501                	addi	a0,a0,0
    1076:	0314                	addi	a3,sp,384
            psize = 0;
    1078:	0900                	addi	s0,sp,144
    107a:	0004                	0x4
            nmerges++; /* there exists a merge to be done */
    107c:	0501                	addi	a0,a0,0
    107e:	060d                	addi	a2,a2,3
    1080:	09039603          	lh	a2,144(t2)
                q = q->next;
    1084:	0010                	0x10
    1086:	0501                	addi	a0,a0,0
                psize++;
    1088:	0305                	addi	t1,t1,1
    108a:	7d96                	flw	fs11,100(sp)
                if (!q)
    108c:	0009                	c.nop	2
    108e:	0100                	addi	s0,sp,128
            for (i = 0; i < insize; i++)
    1090:	0c05                	addi	s8,s8,1
    1092:	0306                	slli	t1,t1,0x1
    1094:	0900                	addi	s0,sp,144
    1096:	0000                	unimp
                    list = e;
    1098:	0501                	addi	a0,a0,0
    109a:	0605                	addi	a2,a2,1
            while (psize > 0 || (qsize > 0 && q))
    109c:	04090103          	lb	sp,64(s2)
                else if (qsize == 0 || !q)
    10a0:	0100                	addi	s0,sp,128
    10a2:	0b05                	addi	s6,s6,1
    10a4:	0306                	slli	t1,t1,0x1
    10a6:	0900                	addi	s0,sp,144
                else if (cmp(p->info, q->info, res) <= 0)
    10a8:	0000                	unimp
    10aa:	0501                	addi	a0,a0,0
    10ac:	0609                	addi	a2,a2,2
    10ae:	04090203          	lb	tp,64(s2)
    ee_s16 data = *pdata;
    10b2:	0100                	addi	s0,sp,128
    if (optype) /* if cached, use cache */
    10b4:	1205                	addi	tp,tp,-31
    10b6:	0306                	slli	t1,t1,0x1
        return (data & 0x007f);
    10b8:	0900                	addi	s0,sp,144
    10ba:	0000                	unimp
    if (optype) /* if cached, use cache */
    10bc:	0501                	addi	a0,a0,0
    10be:	0310                	addi	a2,sp,384
               & 0xf);       /* bits 3-6 is specific data for the operation */
    10c0:	0901                	addi	s2,s2,0
    10c2:	0014                	0x14
        ee_s16 dtype
    10c4:	0501                	addi	a0,a0,0
    10c6:	0312                	slli	t1,t1,0x4
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    10c8:	097f                	0x97f
    10ca:	0004                	0x4
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    10cc:	0501                	addi	a0,a0,0
    10ce:	0609                	addi	a2,a2,2
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    10d0:	04090103          	lb	sp,64(s2)
        switch (flag)
    10d4:	0100                	addi	s0,sp,128
    10d6:	0b05                	addi	s6,s6,1
    10d8:	0306                	slli	t1,t1,0x1
    10da:	097d                	addi	s2,s2,31
    10dc:	0000                	unimp
    10de:	0501                	addi	a0,a0,0
    10e0:	0301                	addi	t1,t1,0
    10e2:	0909                	addi	s2,s2,2
    10e4:	0004                	0x4
    10e6:	0501                	addi	a0,a0,0
    10e8:	0605                	addi	a2,a2,1
    10ea:	3c096003          	0x3c096003
        res->crc = crcu16(retval, res->crc);
    10ee:	0100                	addi	s0,sp,128
    10f0:	00090203          	lb	tp,0(s2)
    10f4:	0100                	addi	s0,sp,128
    10f6:	0e05                	addi	t3,t3,1
        retval &= 0x007f;
    10f8:	0306                	slli	t1,t1,0x1
    10fa:	095d                	addi	s2,s2,23
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    10fc:	0000                	unimp
    10fe:	0501                	addi	a0,a0,0
    1100:	0308                	addi	a0,sp,384
    1102:	00080923          	sb	zero,18(a6)
        res->crc = crcu16(retval, res->crc);
    1106:	0501                	addi	a0,a0,0
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1108:	0605                	addi	a2,a2,1
    110a:	0902ae03          	lw	t3,144(t0)
    110e:	0004                	0x4
    ee_s16 data = *pdata;
    1110:	0501                	addi	a0,a0,0
    1112:	0309                	addi	t1,t1,2
    if (optype) /* if cached, use cache */
    1114:	0902                	c.slli64	s2
    1116:	0000                	unimp
        return (data & 0x007f);
    1118:	0301                	addi	t1,t1,0
    111a:	0901                	addi	s2,s2,0
    if (optype) /* if cached, use cache */
    111c:	0000                	unimp
    111e:	0301                	addi	t1,t1,0
               & 0xf);       /* bits 3-6 is specific data for the operation */
    1120:	0901                	addi	s2,s2,0
    1122:	0000                	unimp
        ee_s16 dtype
    1124:	0301                	addi	t1,t1,0
    1126:	0902                	c.slli64	s2
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1128:	0000                	unimp
    112a:	0301                	addi	t1,t1,0
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    112c:	0902                	c.slli64	s2
    112e:	0000                	unimp
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1130:	0501                	addi	a0,a0,0
    1132:	0003060f          	0x3060f
        switch (flag)
    1136:	0009                	c.nop	2
    1138:	0100                	addi	s0,sp,128
    113a:	1a05                	addi	s4,s4,-31
    113c:	097ce203          	0x97ce203
    1140:	000c                	0xc
    1142:	0501                	addi	a0,a0,0
    1144:	039e030f          	0x39e030f
    1148:	0809                	addi	a6,a6,2
    114a:	0100                	addi	s0,sp,128
        res->crc = crcu16(retval, res->crc);
    114c:	0e05                	addi	t3,t3,1
    114e:	04097c03          	0x4097c03
    1152:	0100                	addi	s0,sp,128
    1154:	04097f03          	0x4097f03
        retval &= 0x007f;
    1158:	0100                	addi	s0,sp,128
    115a:	1105                	addi	sp,sp,-31
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    115c:	04090303          	lb	t1,64(s2)
    1160:	0100                	addi	s0,sp,128
    1162:	0905                	addi	s2,s2,1
        res->crc = crcu16(retval, res->crc);
    1164:	097cd503          	lhu	a0,151(s9) # ffff8097 <__freertos_irq_stack_top+0xfefe8097>
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1168:	0004                	0x4
    116a:	0501                	addi	a0,a0,0
    116c:	060d                	addi	a2,a2,3
    116e:	0903af03          	lw	t5,144(t2)
    return val1 - val2;
    1172:	0004                	0x4
                else if (cmp(p->info, q->info, res) <= 0)
    1174:	0501                	addi	a0,a0,0
    1176:	0614                	addi	a3,sp,768
                    qsize--;
    1178:	00090003          	lb	zero,0(s2)
                    q = q->next;
    117c:	0100                	addi	s0,sp,128
    117e:	1305                	addi	t1,t1,-31
                    qsize--;
    1180:	08090303          	lb	t1,128(s2)
                if (tail)
    1184:	0100                	addi	s0,sp,128
    1186:	1405                	addi	s0,s0,-31
                    tail->next = e;
    1188:	04097d03          	0x4097d03
                    list = e;
    118c:	0100                	addi	s0,sp,128
    118e:	0d05                	addi	s10,s10,1
            while (psize > 0 || (qsize > 0 && q))
    1190:	0306                	slli	t1,t1,0x1
    1192:	0902                	c.slli64	s2
    1194:	0008                	0x8
    1196:	0301                	addi	t1,t1,0
    1198:	0901                	addi	s2,s2,0
    119a:	0000                	unimp
                    qsize--;
    119c:	0301                	addi	t1,t1,0
    119e:	0901                	addi	s2,s2,0
    11a0:	0000                	unimp
    11a2:	0501                	addi	a0,a0,0
                    q = q->next;
    11a4:	0311                	addi	t1,t1,4
    11a6:	0902                	c.slli64	s2
                if (tail)
    11a8:	0000                	unimp
    11aa:	0501                	addi	a0,a0,0
                    list = e;
    11ac:	01030613          	addi	a2,t1,16 # 9010010 <__freertos_irq_stack_top+0x8000010>
    11b0:	0009                	c.nop	2
    11b2:	0100                	addi	s0,sp,128
    11b4:	1605                	addi	a2,a2,-31
    11b6:	04097f03          	0x4097f03
                    psize--;
    11ba:	0100                	addi	s0,sp,128
    11bc:	1105                	addi	sp,sp,-31
    11be:	0306                	slli	t1,t1,0x1
                    p = p->next;
    11c0:	0901                	addi	s2,s2,0
    11c2:	0004                	0x4
    11c4:	0301                	addi	t1,t1,0
    11c6:	0901                	addi	s2,s2,0
    11c8:	0000                	unimp
    11ca:	0501                	addi	a0,a0,0
        while (p)
    11cc:	0614                	addi	a3,sp,768
    11ce:	00090003          	lb	zero,0(s2)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    11d2:	0100                	addi	s0,sp,128
        tail->next = NULL;
    11d4:	0d05                	addi	s10,s10,1
    11d6:	04097c03          	0x4097c03
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    11da:	0100                	addi	s0,sp,128
    11dc:	1a05                	addi	s4,s4,-31
    11de:	08093503          	0x8093503
        insize *= 2;
    11e2:	0100                	addi	s0,sp,128
    11e4:	1305                	addi	t1,t1,-31
    11e6:	04095703          	lhu	a4,64(s2)
    11ea:	0100                	addi	s0,sp,128
        while (p)
    11ec:	1105                	addi	sp,sp,-31
    11ee:	0306                	slli	t1,t1,0x1
        tail->next = NULL;
    11f0:	0904                	addi	s1,sp,144
    11f2:	0004                	0x4
    11f4:	0501                	addi	a0,a0,0
    11f6:	0316                	slli	t1,t1,0x5
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    11f8:	00000907          	0x907
    11fc:	0501                	addi	a0,a0,0
    11fe:	0619                	addi	a2,a2,6
    1200:	00090003          	lb	zero,0(s2)
    1204:	0100                	addi	s0,sp,128
    1206:	2505                	jal	1826 <matrix_test+0x222>
                if (res->crcmatrix == 0)
    1208:	04090003          	lb	zero,64(s2)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    120c:	0100                	addi	s0,sp,128
    120e:	1605                	addi	a2,a2,-31
    1210:	0306                	slli	t1,t1,0x1
    1212:	00040907          	0x40907
                if (res->crcmatrix == 0)
    1216:	0501                	addi	a0,a0,0
                    res->crcmatrix = retval;
    1218:	061f 0003 0009      	0x90003061f
    121e:	0100                	addi	s0,sp,128
    1220:	2805                	jal	1250 <__stack_size+0x250>
    1222:	04090003          	lb	zero,64(s2)
                retval = core_bench_state(res->size,
    1226:	0100                	addi	s0,sp,128
    1228:	0505                	addi	a0,a0,1
    122a:	0306                	slli	t1,t1,0x1
    122c:	7cd4                	flw	fa3,60(s1)
    122e:	0409                	addi	s0,s0,2
    1230:	0100                	addi	s0,sp,128
    1232:	00094d03          	lbu	s10,0(s2)
    1236:	0100                	addi	s0,sp,128
    1238:	0c05                	addi	s8,s8,1
    123a:	0306                	slli	t1,t1,0x1
    123c:	0900                	addi	s0,sp,144
    123e:	0000                	unimp
    1240:	0501                	addi	a0,a0,0
    1242:	0605                	addi	a2,a2,1
    1244:	04090103          	lb	sp,64(s2)
    1248:	0100                	addi	s0,sp,128
    124a:	00090103          	lb	sp,0(s2)
    124e:	0100                	addi	s0,sp,128
                if (res->crcstate == 0)
    1250:	00090303          	lb	t1,0(s2)
                retval = core_bench_state(res->size,
    1254:	0100                	addi	s0,sp,128
    1256:	0905                	addi	s2,s2,1
    1258:	00090103          	lb	sp,0(s2)
                if (res->crcstate == 0)
    125c:	0100                	addi	s0,sp,128
    125e:	0805                	addi	a6,a6,1
                    res->crcstate = retval;
    1260:	0306                	slli	t1,t1,0x1
    1262:	097f                	0x97f
    1264:	0000                	unimp
    1266:	0501                	addi	a0,a0,0
    1268:	0316                	slli	t1,t1,0x5
    126a:	0901                	addi	s2,s2,0
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    126c:	0004                	0x4
    126e:	0501                	addi	a0,a0,0
    1270:	0308                	addi	a0,sp,384
    1272:	097f                	0x97f
    1274:	0004                	0x4
    1276:	0501                	addi	a0,a0,0
    1278:	0609                	addi	a2,a2,2
    127a:	04090403          	lb	s0,64(s2)
                if (res->crcmatrix == 0)
    127e:	0100                	addi	s0,sp,128
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1280:	1005                	c.nop	-31
    1282:	0306                	slli	t1,t1,0x1
    1284:	00000903          	lb	s2,0(zero) # 0 <_start>
                if (res->crcmatrix == 0)
    1288:	0301                	addi	t1,t1,0
    128a:	097e                	slli	s2,s2,0x1f
                    res->crcmatrix = retval;
    128c:	0004                	0x4
    128e:	0501                	addi	a0,a0,0
    1290:	0903030f          	0x903030f
    1294:	0004                	0x4
    1296:	0501                	addi	a0,a0,0
                retval = core_bench_state(res->size,
    1298:	0310                	addi	a2,sp,384
    129a:	097c                	addi	a5,sp,156
    129c:	0004                	0x4
    129e:	0501                	addi	a0,a0,0
    12a0:	0609                	addi	a2,a2,2
    12a2:	04090103          	lb	sp,64(s2)
    12a6:	0100                	addi	s0,sp,128
    12a8:	00090303          	lb	t1,0(s2)
    12ac:	0100                	addi	s0,sp,128
    12ae:	0f05                	addi	t5,t5,1
    12b0:	0306                	slli	t1,t1,0x1
    12b2:	0900                	addi	s0,sp,144
    12b4:	0000                	unimp
    12b6:	0501                	addi	a0,a0,0
    12b8:	0609                	addi	a2,a2,2
    12ba:	04090103          	lb	sp,64(s2)
    12be:	0100                	addi	s0,sp,128
    12c0:	18091703          	lh	a4,384(s2)
                if (res->crcstate == 0)
    12c4:	0100                	addi	s0,sp,128
    12c6:	1405                	addi	s0,s0,-31
                retval = core_bench_state(res->size,
    12c8:	0306                	slli	t1,t1,0x1
    12ca:	0900                	addi	s0,sp,144
    12cc:	0000                	unimp
    12ce:	0501                	addi	a0,a0,0
                if (res->crcstate == 0)
    12d0:	0310                	addi	a2,sp,384
    12d2:	0901                	addi	s2,s2,0
                    res->crcstate = retval;
    12d4:	000c                	0xc
    12d6:	0501                	addi	a0,a0,0
    12d8:	0318                	addi	a4,sp,384
    12da:	0901                	addi	s2,s2,0
    12dc:	0004                	0x4
    12de:	0501                	addi	a0,a0,0
    12e0:	0900032b          	0x900032b
    12e4:	0004                	0x4
    12e6:	0501                	addi	a0,a0,0
            retval += (list->next->info->data16 >> 8) & 1;
    12e8:	0312                	slli	t1,t1,0x4
    12ea:	097e                	slli	s2,s2,0x1f
    12ec:	0004                	0x4
    12ee:	0501                	addi	a0,a0,0
    ee_u32 size     = (blksize / per_item)
    12f0:	0609                	addi	a2,a2,2
    12f2:	04090103          	lb	sp,64(s2)
    12f6:	0100                	addi	s0,sp,128
    list->info->data16 = (ee_s16)0x8080;
    12f8:	00090103          	lb	sp,0(s2)
    list->next         = NULL;
    12fc:	0100                	addi	s0,sp,128
    12fe:	2b05                	jal	182e <matrix_test+0x22a>
    list->info->data16 = (ee_s16)0x8080;
    1300:	0306                	slli	t1,t1,0x1
    1302:	0900                	addi	s0,sp,144
    if ((*memblock + 1) >= memblock_end)
    1304:	0000                	unimp
    1306:	0501                	addi	a0,a0,0
    memblock++;
    1308:	0310                	addi	a2,sp,384
    130a:	0900                	addi	s0,sp,144
    ee_u32 size     = (blksize / per_item)
    130c:	0004                	0x4
    130e:	0501                	addi	a0,a0,0
    list_head *memblock_end  = memblock + size;
    1310:	0609                	addi	a2,a2,2
    1312:	04090103          	lb	sp,64(s2)
    1316:	0100                	addi	s0,sp,128
    list->info         = datablock;
    1318:	0505                	addi	a0,a0,1
    131a:	00090c03          	lb	s8,0(s2)
    list_data *datablock_end = datablock + size;
    131e:	0100                	addi	s0,sp,128
    list->info->idx    = 0x0000;
    1320:	00094c03          	lbu	s8,0(s2)
    list->info->data16 = (ee_s16)0x8080;
    1324:	0100                	addi	s0,sp,128
    1326:	0c05                	addi	s8,s8,1
    list_data *datablock_end = datablock + size;
    1328:	0306                	slli	t1,t1,0x1
    132a:	0900                	addi	s0,sp,144
    datablock++;
    132c:	0000                	unimp
    132e:	0501                	addi	a0,a0,0
    if ((*memblock + 1) >= memblock_end)
    1330:	0605                	addi	a2,a2,1
    1332:	04090103          	lb	sp,64(s2)
    if ((*datablock + 1) >= datablock_end)
    1336:	0100                	addi	s0,sp,128
    1338:	00090103          	lb	sp,0(s2)
    newitem->info = *datablock;
    133c:	0100                	addi	s0,sp,128
    133e:	00090303          	lb	t1,0(s2)
    newitem->next      = insert_point->next;
    1342:	0100                	addi	s0,sp,128
    insert_point->next = newitem;
    1344:	0905                	addi	s2,s2,1
    1346:	00090103          	lb	sp,0(s2)
    to->idx    = from->idx;
    134a:	0100                	addi	s0,sp,128
    to->data16 = from->data16;
    134c:	0805                	addi	a6,a6,1
    134e:	0306                	slli	t1,t1,0x1
    1350:	097f                	0x97f
    1352:	0000                	unimp
    to->idx    = from->idx;
    1354:	0501                	addi	a0,a0,0
    1356:	0316                	slli	t1,t1,0x5
    for (i = 0; i < size; i++)
    1358:	0901                	addi	s2,s2,0
    135a:	0004                	0x4
    135c:	0501                	addi	a0,a0,0
    135e:	0308                	addi	a0,sp,384
    to->idx    = from->idx;
    1360:	097f                	0x97f
    1362:	0004                	0x4
    1364:	0501                	addi	a0,a0,0
    1366:	0609                	addi	a2,a2,2
    for (i = 0; i < size; i++)
    1368:	04090403          	lb	s0,64(s2)
    to->idx    = from->idx;
    136c:	0100                	addi	s0,sp,128
    136e:	1005                	c.nop	-31
    if ((*memblock + 1) >= memblock_end)
    1370:	0306                	slli	t1,t1,0x1
    1372:	00000903          	lb	s2,0(zero) # 0 <_start>
    1376:	0301                	addi	t1,t1,0
    if ((*datablock + 1) >= datablock_end)
    1378:	097e                	slli	s2,s2,0x1f
    137a:	0004                	0x4
    137c:	0501                	addi	a0,a0,0
    137e:	0903030f          	0x903030f
    1382:	0004                	0x4
    1384:	0501                	addi	a0,a0,0
    1386:	0310                	addi	a2,sp,384
        ee_u16 datpat = ((ee_u16)(seed ^ i) & 0xf);
    1388:	097c                	addi	a5,sp,156
    138a:	0004                	0x4
            = (datpat << 3) | (i & 0x7); /* alternate between algorithms */
    138c:	0501                	addi	a0,a0,0
    138e:	0609                	addi	a2,a2,2
    1390:	04090103          	lb	sp,64(s2)
    1394:	0100                	addi	s0,sp,128
    1396:	00090303          	lb	t1,0(s2)
    newitem->next      = insert_point->next;
    139a:	0100                	addi	s0,sp,128
        ee_u16 dat
    139c:	0f05                	addi	t5,t5,1
    139e:	0306                	slli	t1,t1,0x1
    insert_point->next = newitem;
    13a0:	0900                	addi	s0,sp,144
    13a2:	0000                	unimp
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    13a4:	0501                	addi	a0,a0,0
    13a6:	0609                	addi	a2,a2,2
    newitem->info = *datablock;
    13a8:	04090103          	lb	sp,64(s2)
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    13ac:	0100                	addi	s0,sp,128
    13ae:	18091703          	lh	a4,384(s2)
    to->data16 = from->data16;
    13b2:	0100                	addi	s0,sp,128
    to->idx    = from->idx;
    13b4:	1405                	addi	s0,s0,-31
    13b6:	0306                	slli	t1,t1,0x1
    13b8:	0900                	addi	s0,sp,144
    13ba:	0000                	unimp
    13bc:	0501                	addi	a0,a0,0
    13be:	0310                	addi	a2,sp,384
    13c0:	0901                	addi	s2,s2,0
    13c2:	000c                	0xc
    for (i = 0; i < size; i++)
    13c4:	0501                	addi	a0,a0,0
    13c6:	0318                	addi	a4,sp,384
    13c8:	0901                	addi	s2,s2,0
    13ca:	0004                	0x4
    while (finder->next != NULL)
    13cc:	0501                	addi	a0,a0,0
    13ce:	0900032b          	0x900032b
    13d2:	0004                	0x4
        if (i < size / 5) /* first 20% of the list in order */
    13d4:	0501                	addi	a0,a0,0
    13d6:	0312                	slli	t1,t1,0x4
    13d8:	097e                	slli	s2,s2,0x1f
    13da:	0004                	0x4
                                & (((i & 0x07) << 8)
    13dc:	0501                	addi	a0,a0,0
    13de:	0609                	addi	a2,a2,2
        if (i < size / 5) /* first 20% of the list in order */
    13e0:	04090103          	lb	sp,64(s2)
                                & (((i & 0x07) << 8)
    13e4:	0100                	addi	s0,sp,128
    13e6:	00090103          	lb	sp,0(s2)
        if (i < size / 5) /* first 20% of the list in order */
    13ea:	0100                	addi	s0,sp,128
    13ec:	2b05                	jal	191c <matrix_test+0x318>
    13ee:	0306                	slli	t1,t1,0x1
        finder = finder->next;
    13f0:	0900                	addi	s0,sp,144
    13f2:	0000                	unimp
            finder->info->idx = i++;
    13f4:	0501                	addi	a0,a0,0
    13f6:	0310                	addi	a2,sp,384
        finder = finder->next;
    13f8:	0900                	addi	s0,sp,144
    13fa:	0004                	0x4
    while (finder->next != NULL)
    13fc:	0501                	addi	a0,a0,0
    13fe:	0609                	addi	a2,a2,2
    1400:	04090103          	lb	sp,64(s2)
    insize = 1;
    1404:	0100                	addi	s0,sp,128
    1406:	0505                	addi	a0,a0,1
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1408:	00090d03          	lb	s10,0(s2)
    insize = 1;
    140c:	0100                	addi	s0,sp,128
    140e:	1105                	addi	sp,sp,-31
        tail = NULL;
    1410:	0306                	slli	t1,t1,0x1
    1412:	0900                	addi	s0,sp,144
        list = NULL;
    1414:	0000                	unimp
    1416:	0501                	addi	a0,a0,0
        nmerges = 0; /* count number of merges we do in this pass */
    1418:	0319                	addi	t1,t1,6
    141a:	03aa                	slli	t2,t2,0xa
            nmerges++; /* there exists a merge to be done */
    141c:	0409                	addi	s0,s0,2
    141e:	0100                	addi	s0,sp,128
    1420:	1505                	addi	a0,a0,-31
    1422:	0306                	slli	t1,t1,0x1
            psize = 0;
    1424:	0004090b          	0x4090b
                q = q->next;
    1428:	0301                	addi	t1,t1,0
    142a:	0901                	addi	s2,s2,0
                psize++;
    142c:	0000                	unimp
    142e:	0301                	addi	t1,t1,0
                if (!q)
    1430:	0901                	addi	s2,s2,0
    1432:	0000                	unimp
            for (i = 0; i < insize; i++)
    1434:	0501                	addi	a0,a0,0
    1436:	061a                	slli	a2,a2,0x6
                    list = e;
    1438:	00090003          	lb	zero,0(s2)
    143c:	0100                	addi	s0,sp,128
    143e:	1705                	addi	a4,a4,-31
    1440:	04097f03          	0x4097f03
            while (psize > 0 || (qsize > 0 && q))
    1444:	0100                	addi	s0,sp,128
    1446:	1a05                	addi	s4,s4,-31
                else if (qsize == 0 || !q)
    1448:	04090103          	lb	sp,64(s2)
    144c:	0100                	addi	s0,sp,128
    144e:	1105                	addi	sp,sp,-31
                else if (cmp(p->info, q->info, res) <= 0)
    1450:	0306                	slli	t1,t1,0x1
    1452:	0904                	addi	s1,sp,144
    1454:	0004                	0x4
    1456:	0501                	addi	a0,a0,0
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1458:	0614                	addi	a3,sp,768
    145a:	00090003          	lb	zero,0(s2)
    return a->idx - b->idx;
    145e:	0100                	addi	s0,sp,128
    1460:	1505                	addi	a0,a0,-31
    1462:	0306                	slli	t1,t1,0x1
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1464:	0902                	c.slli64	s2
    1466:	0004                	0x4
    1468:	0501                	addi	a0,a0,0
    146a:	0620                	addi	s0,sp,776
    146c:	00090003          	lb	zero,0(s2)
    1470:	0100                	addi	s0,sp,128
    1472:	1a05                	addi	s4,s4,-31
    1474:	04090403          	lb	s0,64(s2)
    1478:	0100                	addi	s0,sp,128
    147a:	1305                	addi	t1,t1,-31
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    147c:	04095703          	lhu	a4,64(s2)
    return a->idx - b->idx;
    1480:	0100                	addi	s0,sp,128
    1482:	1e05                	addi	t3,t3,-31
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    1484:	04090003          	lb	zero,64(s2)
    1488:	0100                	addi	s0,sp,128
    148a:	2c05                	jal	16ba <matrix_test+0xb6>
    148c:	04090003          	lb	zero,64(s2)
    1490:	0100                	addi	s0,sp,128
    1492:	1105                	addi	sp,sp,-31
    1494:	0306                	slli	t1,t1,0x1
    1496:	0904                	addi	s1,sp,144
    1498:	0004                	0x4
    149a:	0501                	addi	a0,a0,0
                else if (cmp(p->info, q->info, res) <= 0)
    149c:	0315                	addi	t1,t1,5
    149e:	00000903          	lb	s2,0(zero) # 0 <_start>
                    qsize--;
    14a2:	0301                	addi	t1,t1,0
                    q = q->next;
    14a4:	0901                	addi	s2,s2,0
    14a6:	0000                	unimp
                    qsize--;
    14a8:	0301                	addi	t1,t1,0
    14aa:	0901                	addi	s2,s2,0
                if (tail)
    14ac:	0000                	unimp
    14ae:	0501                	addi	a0,a0,0
                    tail->next = e;
    14b0:	061a                	slli	a2,a2,0x6
    14b2:	00090003          	lb	zero,0(s2)
                    list = e;
    14b6:	0100                	addi	s0,sp,128
            while (psize > 0 || (qsize > 0 && q))
    14b8:	1705                	addi	a4,a4,-31
    14ba:	08097f03          	0x8097f03
    14be:	0100                	addi	s0,sp,128
    14c0:	1105                	addi	sp,sp,-31
    14c2:	0306                	slli	t1,t1,0x1
                    qsize--;
    14c4:	0004091b          	0x4091b
    14c8:	0501                	addi	a0,a0,0
    14ca:	0614                	addi	a3,sp,768
                    q = q->next;
    14cc:	00090003          	lb	zero,0(s2)
                if (tail)
    14d0:	0100                	addi	s0,sp,128
    14d2:	1a05                	addi	s4,s4,-31
                    list = e;
    14d4:	04090603          	lb	a2,64(s2)
    14d8:	0100                	addi	s0,sp,128
    14da:	1505                	addi	a0,a0,-31
    14dc:	0306                	slli	t1,t1,0x1
    14de:	096d                	addi	s2,s2,27
                    psize--;
    14e0:	000c                	0xc
    14e2:	0301                	addi	t1,t1,0
    14e4:	0901                	addi	s2,s2,0
    14e6:	0000                	unimp
                    p = p->next;
    14e8:	0301                	addi	t1,t1,0
    14ea:	0901                	addi	s2,s2,0
    14ec:	0000                	unimp
    14ee:	0501                	addi	a0,a0,0
        while (p)
    14f0:	061a                	slli	a2,a2,0x6
    14f2:	00090003          	lb	zero,0(s2)
        tail->next = NULL;
    14f6:	0100                	addi	s0,sp,128
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    14f8:	1705                	addi	a4,a4,-31
    14fa:	08097f03          	0x8097f03
        insize *= 2;
    14fe:	0100                	addi	s0,sp,128
        while (p)
    1500:	0f05                	addi	t5,t5,1
    1502:	0c095703          	lhu	a4,192(s2)
        tail->next = NULL;
    1506:	0100                	addi	s0,sp,128
    1508:	0905                	addi	s2,s2,1
    150a:	0306                	slli	t1,t1,0x1
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    150c:	00c4                	addi	s1,sp,68
    150e:	0409                	addi	s0,s0,2
    1510:	0100                	addi	s0,sp,128
    1512:	0c05                	addi	s8,s8,1
                                & (((i & 0x07) << 8)
    1514:	0306                	slli	t1,t1,0x1
    1516:	00000903          	lb	s2,0(zero) # 0 <_start>
        finder = finder->next;
    151a:	0501                	addi	a0,a0,0
                                & (((i & 0x07) << 8)
    151c:	0314                	addi	a3,sp,384
    151e:	097d                	addi	s2,s2,31
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    1520:	0004                	0x4
    1522:	0501                	addi	a0,a0,0
                                & (((i & 0x07) << 8)
    1524:	0609                	addi	a2,a2,2
    1526:	04090303          	lb	t1,64(s2)
                                   | pat); /* make sure the mixed items end up
    152a:	0100                	addi	s0,sp,128
    while (finder->next != NULL)
    152c:	0c05                	addi	s8,s8,1
    152e:	0306                	slli	t1,t1,0x1
                                & (((i & 0x07) << 8)
    1530:	0900                	addi	s0,sp,144
    1532:	0000                	unimp
            finder->info->idx = 0x3fff
    1534:	0501                	addi	a0,a0,0
    1536:	0609                	addi	a2,a2,2
        finder = finder->next;
    1538:	08090403          	lb	s0,128(s2)
    while (finder->next != NULL)
    153c:	0100                	addi	s0,sp,128
    153e:	1005                	c.nop	-31
    1540:	0306                	slli	t1,t1,0x1
    1542:	0900                	addi	s0,sp,144
}
    1544:	0000                	unimp
    1546:	0501                	addi	a0,a0,0
    1548:	0605                	addi	a2,a2,1
    154a:	097fad03          	lw	s10,151(t6) # fffeb097 <__freertos_irq_stack_top+0xfefdb097>
    memblock++;
    154e:	000c                	0xc
    datablock++;
    1550:	0501                	addi	a0,a0,0
    1552:	0309                	addi	t1,t1,2
    if ((*datablock + 1) >= datablock_end)
    1554:	0902                	c.slli64	s2
    1556:	0000                	unimp
    1558:	0301                	addi	t1,t1,0
    155a:	0901                	addi	s2,s2,0
{
    155c:	0000                	unimp
    155e:	0301                	addi	t1,t1,0
    1560:	0901                	addi	s2,s2,0
    1562:	0000                	unimp
    ee_u32        iterations = res->iterations;
    1564:	0301                	addi	t1,t1,0
    1566:	0902                	c.slli64	s2
{
    1568:	0000                	unimp
    156a:	0301                	addi	t1,t1,0
    156c:	0902                	c.slli64	s2
    156e:	0000                	unimp
    1570:	0501                	addi	a0,a0,0
    1572:	0003060f          	0x3060f
    res->crc                 = 0;
    1576:	0009                	c.nop	2
    1578:	0100                	addi	s0,sp,128
    157a:	0905                	addi	s2,s2,1
{
    157c:	0306                	slli	t1,t1,0x1
    157e:	00c4                	addi	s1,sp,68
    for (i = 0; i < iterations; i++)
    1580:	0409                	addi	s0,s0,2
    1582:	0100                	addi	s0,sp,128
    1584:	1405                	addi	s0,s0,-31
    1586:	0306                	slli	t1,t1,0x1
        crc      = core_bench_list(res, 1);
    1588:	0900                	addi	s0,sp,144
    158a:	0000                	unimp
    158c:	0501                	addi	a0,a0,0
    158e:	0611                	addi	a2,a2,4
    1590:	097c9e03          	lh	t3,151(s9)
    1594:	0008                	0x8
    1596:	0501                	addi	a0,a0,0
        res->crc = crcu16(crc, res->crc);
    1598:	061a                	slli	a2,a2,0x6
    159a:	00090003          	lb	zero,0(s2)
    159e:	0100                	addi	s0,sp,128
    15a0:	1405                	addi	s0,s0,-31
    15a2:	10090103          	lb	sp,256(s2)
    15a6:	0100                	addi	s0,sp,128
        crc      = core_bench_list(res, -1);
    15a8:	1805                	addi	a6,a6,-31
    15aa:	04097f03          	0x4097f03
    15ae:	0100                	addi	s0,sp,128
    15b0:	1105                	addi	sp,sp,-31
    15b2:	0306                	slli	t1,t1,0x1
    15b4:	0901                	addi	s2,s2,0
    15b6:	0008                	0x8
        res->crc = crcu16(crc, res->crc);
    15b8:	0501                	addi	a0,a0,0
    15ba:	0614                	addi	a3,sp,768
    15bc:	00090003          	lb	zero,0(s2)
    15c0:	0100                	addi	s0,sp,128
    15c2:	1505                	addi	a0,a0,-31
    15c4:	0306                	slli	t1,t1,0x1
    15c6:	0901                	addi	s2,s2,0
        if (i == 0)
    15c8:	0004                	0x4
    15ca:	0501                	addi	a0,a0,0
    for (i = 0; i < iterations; i++)
    15cc:	0624                	addi	s1,sp,776
    15ce:	04090003          	lb	zero,64(s2)
    15d2:	0100                	addi	s0,sp,128
}
    15d4:	1105                	addi	sp,sp,-31
    15d6:	0306                	slli	t1,t1,0x1
    15d8:	0972                	slli	s2,s2,0x1c
    15da:	0008                	0x8
    15dc:	0301                	addi	t1,t1,0
    15de:	0902                	c.slli64	s2
    15e0:	0000                	unimp
    15e2:	0501                	addi	a0,a0,0
    15e4:	061a                	slli	a2,a2,0x6
    15e6:	00090003          	lb	zero,0(s2)
    15ea:	0100                	addi	s0,sp,128
    15ec:	1405                	addi	s0,s0,-31
    15ee:	2c090603          	lb	a2,704(s2)
            res->crclist = res->crc;
    15f2:	0100                	addi	s0,sp,128
    for (i = 0; i < iterations; i++)
    15f4:	1805                	addi	a6,a6,-31
    15f6:	04097a03          	0x4097a03
    15fa:	0100                	addi	s0,sp,128
    15fc:	1105                	addi	sp,sp,-31
    15fe:	0306                	slli	t1,t1,0x1
    1600:	0906                	slli	s2,s2,0x1
    1602:	0008                	0x8
{
    1604:	0501                	addi	a0,a0,0
    1606:	0614                	addi	a3,sp,768
    1608:	00090003          	lb	zero,0(s2)
    160c:	0100                	addi	s0,sp,128
    160e:	1505                	addi	a0,a0,-31
    MATDAT clipval = matrix_big(val);
    1610:	0306                	slli	t1,t1,0x1
    1612:	0901                	addi	s2,s2,0
{
    1614:	0004                	0x4
    1616:	0501                	addi	a0,a0,0
    1618:	00030623          	sb	zero,12(t1)
    161c:	0009                	c.nop	2
    161e:	0100                	addi	s0,sp,128
    1620:	1105                	addi	sp,sp,-31
    1622:	0306                	slli	t1,t1,0x1
    1624:	000c0903          	lb	s2,0(s8)
    1628:	0501                	addi	a0,a0,0
    162a:	061a                	slli	a2,a2,0x6
    162c:	00090003          	lb	zero,0(s2)
    1630:	0100                	addi	s0,sp,128
    1632:	1405                	addi	s0,s0,-31
    1634:	10090103          	lb	sp,256(s2)
    1638:	0100                	addi	s0,sp,128
    163a:	1805                	addi	a6,a6,-31
    163c:	04097f03          	0x4097f03
    1640:	0100                	addi	s0,sp,128
    1642:	1105                	addi	sp,sp,-31
    MATDAT clipval = matrix_big(val);
    1644:	0306                	slli	t1,t1,0x1
    1646:	0901                	addi	s2,s2,0
    for (i = 0; i < N; i++)
    1648:	0008                	0x8
    164a:	0501                	addi	a0,a0,0
    164c:	0614                	addi	a3,sp,768
    164e:	00090003          	lb	zero,0(s2)
    1652:	0100                	addi	s0,sp,128
    1654:	1505                	addi	a0,a0,-31
    1656:	0306                	slli	t1,t1,0x1
    1658:	0901                	addi	s2,s2,0
    165a:	0004                	0x4
    165c:	0501                	addi	a0,a0,0
    165e:	0624                	addi	s1,sp,776
    1660:	04090003          	lb	zero,64(s2)
    1664:	0100                	addi	s0,sp,128
    1666:	1105                	addi	sp,sp,-31
    1668:	0306                	slli	t1,t1,0x1
    166a:	0972                	slli	s2,s2,0x1c
    166c:	0008                	0x8
    166e:	0301                	addi	t1,t1,0
    1670:	0902                	c.slli64	s2
    1672:	0000                	unimp
    1674:	0501                	addi	a0,a0,0
    1676:	061a                	slli	a2,a2,0x6
    1678:	00090003          	lb	zero,0(s2)
    167c:	0100                	addi	s0,sp,128
    167e:	1405                	addi	s0,s0,-31
    1680:	2c090603          	lb	a2,704(s2)
{
    1684:	0100                	addi	s0,sp,128
    1686:	1805                	addi	a6,a6,-31
            A[i * N + j] += val;
    1688:	04097a03          	0x4097a03
    168c:	0100                	addi	s0,sp,128
    168e:	1105                	addi	sp,sp,-31
    1690:	0306                	slli	t1,t1,0x1
    1692:	0906                	slli	s2,s2,0x1
    1694:	0008                	0x8
    1696:	0501                	addi	a0,a0,0
        for (j = 0; j < N; j++)
    1698:	0614                	addi	a3,sp,768
    169a:	00090003          	lb	zero,0(s2)
    for (i = 0; i < N; i++)
    169e:	0100                	addi	s0,sp,128
    16a0:	1505                	addi	a0,a0,-31
    16a2:	0306                	slli	t1,t1,0x1
    16a4:	0901                	addi	s2,s2,0
    16a6:	0004                	0x4
    16a8:	0501                	addi	a0,a0,0
    16aa:	00030623          	sb	zero,12(t1)
    16ae:	0009                	c.nop	2
    16b0:	0100                	addi	s0,sp,128
    16b2:	0d05                	addi	s10,s10,1
    16b4:	0306                	slli	t1,t1,0x1
    16b6:	00d2                	slli	ra,ra,0x14
    16b8:	1409                	addi	s0,s0,-30
    16ba:	0100                	addi	s0,sp,128
    16bc:	00090103          	lb	sp,0(s2)
    for (i = 0; i < N; i++)
    16c0:	0100                	addi	s0,sp,128
    16c2:	1c05                	addi	s8,s8,-31
    16c4:	0306                	slli	t1,t1,0x1
    16c6:	0900                	addi	s0,sp,144
    16c8:	0000                	unimp
    16ca:	0901                	addi	s2,s2,0
    for (i = 0; i < N; i++)
    16cc:	0008                	0x8
    16ce:	0100                	addi	s0,sp,128
    16d0:	0501                	addi	a0,a0,0
    16d2:	0001                	nop
            C[i * N + j] = (MATRES)A[i * N + j] * (MATRES)val;
    16d4:	0205                	addi	tp,tp,1
    16d6:	12f0                	addi	a2,sp,364
    16d8:	0000                	unimp
    16da:	0101fb03          	0x101fb03
    16de:	0505                	addi	a0,a0,1
    16e0:	00090203          	lb	tp,0(s2)
    16e4:	0100                	addi	s0,sp,128
    16e6:	00090103          	lb	sp,0(s2)
        for (j = 0; j < N; j++)
    16ea:	0100                	addi	s0,sp,128
    for (i = 0; i < N; i++)
    16ec:	2005                	jal	170c <matrix_test+0x108>
    16ee:	0306                	slli	t1,t1,0x1
    16f0:	0900                	addi	s0,sp,144
    16f2:	0000                	unimp
    16f4:	0501                	addi	a0,a0,0
    16f6:	0318                	addi	a4,sp,384
    16f8:	0008090f          	0x8090f
    16fc:	0301                	addi	t1,t1,0
    16fe:	097d                	addi	s2,s2,31
    1700:	0004                	0x4
    1702:	0301                	addi	t1,t1,0
    1704:	00040903          	lb	s2,0(s0)
    1708:	0501                	addi	a0,a0,0
    170a:	0314                	addi	a3,sp,384
    ee_s16 ret = 0;
    170c:	040900cb          	0x40900cb
    MATRES tmp = 0, prev = 0, cur = 0;
    1710:	0100                	addi	s0,sp,128
    1712:	0d05                	addi	s10,s10,1
    1714:	097fb603          	0x97fb603
    for (i = 0; i < N; i++)
    1718:	0004                	0x4
    171a:	0501                	addi	a0,a0,0
    171c:	030c                	addi	a1,sp,384
    171e:	0970                	addi	a2,sp,156
    1720:	0004                	0x4
    1722:	0501                	addi	a0,a0,0
    1724:	0605                	addi	a2,a2,1
    1726:	04090303          	lb	t1,64(s2)
    172a:	0100                	addi	s0,sp,128
                ret += (cur > prev) ? 1 : 0;
    172c:	2905                	jal	1b5c <matrix_test+0x558>
    172e:	0306                	slli	t1,t1,0x1
    1730:	0900                	addi	s0,sp,144
    1732:	0000                	unimp
    1734:	0501                	addi	a0,a0,0
    1736:	0310                	addi	a2,sp,384
            cur = C[i * N + j];
    1738:	0900                	addi	s0,sp,144
    173a:	0004                	0x4
        for (j = 0; j < N; j++)
    173c:	0501                	addi	a0,a0,0
    173e:	0605                	addi	a2,a2,1
            cur = C[i * N + j];
    1740:	04090103          	lb	sp,64(s2)
            tmp += cur;
    1744:	0100                	addi	s0,sp,128
    1746:	00090103          	lb	sp,0(s2)
    174a:	0100                	addi	s0,sp,128
                ret += (cur > prev) ? 1 : 0;
    174c:	1805                	addi	a6,a6,-31
    174e:	0306                	slli	t1,t1,0x1
            tmp += cur;
    1750:	0908                	addi	a0,sp,144
    1752:	0000                	unimp
                ret += 10;
    1754:	0501                	addi	a0,a0,0
    1756:	032a                	slli	t1,t1,0xa
                ret += (cur > prev) ? 1 : 0;
    1758:	0978                	addi	a4,sp,156
    175a:	0004                	0x4
            if (tmp > clipval)
    175c:	0501                	addi	a0,a0,0
    175e:	0318                	addi	a4,sp,384
                ret += 10;
    1760:	0909                	addi	s2,s2,2
    1762:	0004                	0x4
    1764:	0301                	addi	t1,t1,0
    1766:	0901                	addi	s2,s2,0
    1768:	0004                	0x4
    176a:	0501                	addi	a0,a0,0
                tmp = 0;
    176c:	0310                	addi	a2,sp,384
    176e:	0976                	slli	s2,s2,0x1d
            cur = C[i * N + j];
    1770:	0004                	0x4
    1772:	0501                	addi	a0,a0,0
        for (j = 0; j < N; j++)
    1774:	0605                	addi	a2,a2,1
    1776:	04090203          	lb	tp,64(s2)
    for (i = 0; i < N; i++)
    177a:	0100                	addi	s0,sp,128
    177c:	00090103          	lb	sp,0(s2)
    1780:	0100                	addi	s0,sp,128
    1782:	00090103          	lb	sp,0(s2)
    1786:	0100                	addi	s0,sp,128
    1788:	00090303          	lb	t1,0(s2)
    crc = crc16(matrix_sum(N, C, clipval), crc);
    178c:	0100                	addi	s0,sp,128
    178e:	00090103          	lb	sp,0(s2)
    1792:	0100                	addi	s0,sp,128
    1794:	00090103          	lb	sp,0(s2)
    1798:	0100                	addi	s0,sp,128
    179a:	00090103          	lb	sp,0(s2)
    for (i = 0; i < N; i++)
    179e:	0100                	addi	s0,sp,128
    17a0:	00090103          	lb	sp,0(s2)
    17a4:	0100                	addi	s0,sp,128
    17a6:	00090103          	lb	sp,0(s2)
    17aa:	0100                	addi	s0,sp,128
    17ac:	0e05                	addi	t3,t3,1
    17ae:	0306                	slli	t1,t1,0x1
    crc = crc16(matrix_sum(N, C, clipval), crc);
    17b0:	0900                	addi	s0,sp,144
    17b2:	0000                	unimp
    17b4:	0501                	addi	a0,a0,0
    17b6:	0605                	addi	a2,a2,1
    17b8:	04090103          	lb	sp,64(s2)
    17bc:	0100                	addi	s0,sp,128
    17be:	00090103          	lb	sp,0(s2)
    17c2:	0100                	addi	s0,sp,128
    17c4:	00090103          	lb	sp,0(s2)
            C[i] += (MATRES)A[i * N + j] * (MATRES)B[j];
    17c8:	0100                	addi	s0,sp,128
    17ca:	0900c403          	lbu	s0,144(ra)
    17ce:	0000                	unimp
    17d0:	0301                	addi	t1,t1,0
    17d2:	0902                	c.slli64	s2
    17d4:	0000                	unimp
    17d6:	0501                	addi	a0,a0,0
    17d8:	0608                	addi	a0,sp,768
    17da:	00090003          	lb	zero,0(s2)
    17de:	0100                	addi	s0,sp,128
        for (j = 0; j < N; j++)
    17e0:	0505                	addi	a0,a0,1
    17e2:	0306                	slli	t1,t1,0x1
    17e4:	0902                	c.slli64	s2
    17e6:	0004                	0x4
    17e8:	0501                	addi	a0,a0,0
    17ea:	0615                	addi	a2,a2,5
    17ec:	00090003          	lb	zero,0(s2)
    for (i = 0; i < N; i++)
    17f0:	0100                	addi	s0,sp,128
    17f2:	0805                	addi	a6,a6,1
    17f4:	04090003          	lb	zero,64(s2)
    ee_s16 ret = 0;
    17f8:	0100                	addi	s0,sp,128
    17fa:	0505                	addi	a0,a0,1
    MATRES tmp = 0, prev = 0, cur = 0;
    17fc:	0306                	slli	t1,t1,0x1
    17fe:	00040903          	lb	s2,0(s0)
    1802:	0301                	addi	t1,t1,0
    for (i = 0; i < N; i++)
    1804:	0901                	addi	s2,s2,0
    1806:	0000                	unimp
    1808:	0301                	addi	t1,t1,0
    180a:	0901                	addi	s2,s2,0
        for (j = 0; j < N; j++)
    180c:	0000                	unimp
    180e:	0501                	addi	a0,a0,0
    1810:	03030613          	addi	a2,t1,48
                ret += (cur > prev) ? 1 : 0;
    1814:	0009                	c.nop	2
    1816:	0100                	addi	s0,sp,128
        for (j = 0; j < N; j++)
    1818:	1805                	addi	a6,a6,-31
    181a:	04097d03          	0x4097d03
                ret += (cur > prev) ? 1 : 0;
    181e:	0100                	addi	s0,sp,128
            prev = cur;
    1820:	0505                	addi	a0,a0,1
    1822:	0306                	slli	t1,t1,0x1
            cur = C[i * N + j];
    1824:	0901                	addi	s2,s2,0
    1826:	0004                	0x4
        for (j = 0; j < N; j++)
    1828:	0501                	addi	a0,a0,0
    182a:	0618                	addi	a4,sp,768
            cur = C[i * N + j];
    182c:	00090003          	lb	zero,0(s2)
            tmp += cur;
    1830:	0100                	addi	s0,sp,128
    1832:	0505                	addi	a0,a0,1
    1834:	0306                	slli	t1,t1,0x1
    1836:	0902                	c.slli64	s2
                ret += (cur > prev) ? 1 : 0;
    1838:	0004                	0x4
    183a:	0301                	addi	t1,t1,0
            tmp += cur;
    183c:	0901                	addi	s2,s2,0
    183e:	0000                	unimp
                ret += 10;
    1840:	0301                	addi	t1,t1,0
    1842:	0901                	addi	s2,s2,0
                ret += (cur > prev) ? 1 : 0;
    1844:	0000                	unimp
    1846:	0301                	addi	t1,t1,0
            if (tmp > clipval)
    1848:	7eae                	flw	ft9,232(sp)
    184a:	0009                	c.nop	2
                ret += 10;
    184c:	0100                	addi	s0,sp,128
    184e:	1005                	c.nop	-31
        for (j = 0; j < N; j++)
    1850:	0306                	slli	t1,t1,0x1
    1852:	0901                	addi	s2,s2,0
                ret += 10;
    1854:	0000                	unimp
    1856:	0301                	addi	t1,t1,0
                tmp = 0;
    1858:	097f                	0x97f
    185a:	0004                	0x4
            prev = cur;
    185c:	0501                	addi	a0,a0,0
    185e:	0605                	addi	a2,a2,1
            cur = C[i * N + j];
    1860:	08090103          	lb	sp,128(s2)
        for (j = 0; j < N; j++)
    1864:	0100                	addi	s0,sp,128
    1866:	1005                	c.nop	-31
    for (i = 0; i < N; i++)
    1868:	0306                	slli	t1,t1,0x1
    186a:	0900                	addi	s0,sp,144
    186c:	0000                	unimp
    186e:	0501                	addi	a0,a0,0
    1870:	0605                	addi	a2,a2,1
    1872:	0901d303          	lhu	t1,144(gp) # 1001430 <__global_pointer$+0x90>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1876:	0004                	0x4
    1878:	0001                	nop
    187a:	0402                	c.slli64	s0
    187c:	0601                	addi	a2,a2,0
    187e:	097fb003          	0x97fb003
    1882:	0000                	unimp
            C[i * N + j] = 0;
    1884:	0501                	addi	a0,a0,0
    1886:	0310                	addi	a2,sp,384
    1888:	7efd                	lui	t4,0xfffff
    188a:	0809                	addi	a6,a6,2
    188c:	0100                	addi	s0,sp,128
    188e:	0505                	addi	a0,a0,1
    1890:	09018303          	lb	t1,144(gp) # 1001430 <__global_pointer$+0x90>
    for (i = 0; i < N; i++)
    1894:	0008                	0x8
    1896:	0501                	addi	a0,a0,0
    1898:	0310                	addi	a2,sp,384
    189a:	7efd                	lui	t4,0xfffff
    189c:	0409                	addi	s0,s0,2
    189e:	0100                	addi	s0,sp,128
    18a0:	0905                	addi	s2,s2,1
    18a2:	0200                	addi	s0,sp,256
    18a4:	0304                	addi	s1,sp,384
    18a6:	0306                	slli	t1,t1,0x1
    18a8:	0185                	addi	gp,gp,1
    18aa:	0409                	addi	s0,s0,2
    18ac:	0100                	addi	s0,sp,128
    18ae:	0200                	addi	s0,sp,256
                tmp = 0;
    18b0:	0304                	addi	s1,sp,384
    18b2:	00090103          	lb	sp,0(s2)
    18b6:	0100                	addi	s0,sp,128
        for (j = 0; j < N; j++)
    18b8:	0200                	addi	s0,sp,256
    18ba:	0304                	addi	s1,sp,384
    18bc:	00090203          	lb	tp,0(s2)
    18c0:	0100                	addi	s0,sp,128
    18c2:	0200                	addi	s0,sp,256
    18c4:	0304                	addi	s1,sp,384
    18c6:	00090203          	lb	tp,0(s2)
            for (k = 0; k < N; k++)
    18ca:	0100                	addi	s0,sp,128
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    18cc:	0505                	addi	a0,a0,1
    18ce:	0200                	addi	s0,sp,256
    18d0:	0304                	addi	s1,sp,384
    18d2:	00093903          	0x93903
            for (k = 0; k < N; k++)
    18d6:	0100                	addi	s0,sp,128
    18d8:	0200                	addi	s0,sp,256
    18da:	0304                	addi	s1,sp,384
                C[i * N + j] += (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    18dc:	00090203          	lb	tp,0(s2)
    18e0:	0100                	addi	s0,sp,128
    18e2:	1405                	addi	s0,s0,-31
    18e4:	0200                	addi	s0,sp,256
    18e6:	0304                	addi	s1,sp,384
            for (k = 0; k < N; k++)
    18e8:	0306                	slli	t1,t1,0x1
    18ea:	0900                	addi	s0,sp,144
    18ec:	0000                	unimp
    18ee:	0501                	addi	a0,a0,0
        for (j = 0; j < N; j++)
    18f0:	0008                	0x8
    18f2:	0402                	c.slli64	s0
    18f4:	09000303          	lb	t1,144(zero) # 90 <main+0x18>
    18f8:	0004                	0x4
    18fa:	0501                	addi	a0,a0,0
    18fc:	0605                	addi	a2,a2,1
    18fe:	04090203          	lb	tp,64(s2)
    for (i = 0; i < N; i++)
    1902:	0100                	addi	s0,sp,128
    1904:	1505                	addi	a0,a0,-31
    1906:	0306                	slli	t1,t1,0x1
    1908:	0900                	addi	s0,sp,144
    190a:	0000                	unimp
    190c:	0501                	addi	a0,a0,0
    190e:	0308                	addi	a0,sp,384
    1910:	0900                	addi	s0,sp,144
    1912:	0004                	0x4
    ee_s16 ret = 0;
    1914:	0501                	addi	a0,a0,0
    1916:	031a                	slli	t1,t1,0x6
    MATRES tmp = 0, prev = 0, cur = 0;
    1918:	7fbe                	flw	ft11,236(sp)
    191a:	0c09                	addi	s8,s8,2
    191c:	0100                	addi	s0,sp,128
    191e:	1705                	addi	a4,a4,-31
    for (i = 0; i < N; i++)
    1920:	04090203          	lb	tp,64(s2)
    1924:	0100                	addi	s0,sp,128
    1926:	2205                	jal	1a46 <matrix_test+0x442>
        for (j = 0; j < N; j++)
    1928:	08090003          	lb	zero,128(s2)
    192c:	0100                	addi	s0,sp,128
    192e:	1805                	addi	a6,a6,-31
                ret += (cur > prev) ? 1 : 0;
    1930:	0900c503          	lbu	a0,144(ra)
        for (j = 0; j < N; j++)
    1934:	0004                	0x4
    1936:	0501                	addi	a0,a0,0
                ret += (cur > prev) ? 1 : 0;
    1938:	0310                	addi	a2,sp,384
    193a:	7fba                	flw	ft11,172(sp)
            prev = cur;
    193c:	0409                	addi	s0,s0,2
    193e:	0100                	addi	s0,sp,128
            cur = C[i * N + j];
    1940:	0505                	addi	a0,a0,1
    1942:	0306                	slli	t1,t1,0x1
        for (j = 0; j < N; j++)
    1944:	00c4                	addi	s1,sp,68
    1946:	0409                	addi	s0,s0,2
            cur = C[i * N + j];
    1948:	0100                	addi	s0,sp,128
    194a:	00090103          	lb	sp,0(s2)
            tmp += cur;
    194e:	0100                	addi	s0,sp,128
    1950:	00090103          	lb	sp,0(s2)
                ret += (cur > prev) ? 1 : 0;
    1954:	0100                	addi	s0,sp,128
    1956:	00090103          	lb	sp,0(s2)
            tmp += cur;
    195a:	0100                	addi	s0,sp,128
                ret += 10;
    195c:	1805                	addi	a6,a6,-31
    195e:	0306                	slli	t1,t1,0x1
                ret += (cur > prev) ? 1 : 0;
    1960:	0900                	addi	s0,sp,144
    1962:	0000                	unimp
            if (tmp > clipval)
    1964:	0501                	addi	a0,a0,0
    1966:	0605                	addi	a2,a2,1
                ret += 10;
    1968:	04090203          	lb	tp,64(s2)
        for (j = 0; j < N; j++)
    196c:	0100                	addi	s0,sp,128
    196e:	1c05                	addi	s8,s8,-31
                ret += 10;
    1970:	0306                	slli	t1,t1,0x1
    1972:	7fb9                	lui	t6,0xfffee
                tmp = 0;
    1974:	0009                	c.nop	2
    1976:	0100                	addi	s0,sp,128
            prev = cur;
    1978:	1305                	addi	t1,t1,-31
    197a:	0900c703          	lbu	a4,144(ra)
            cur = C[i * N + j];
    197e:	0004                	0x4
        for (j = 0; j < N; j++)
    1980:	0501                	addi	a0,a0,0
    1982:	0605                	addi	a2,a2,1
    for (i = 0; i < N; i++)
    1984:	04090103          	lb	sp,64(s2)
    1988:	0100                	addi	s0,sp,128
    198a:	00090103          	lb	sp,0(s2)
    198e:	0100                	addi	s0,sp,128
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1990:	097eae03          	lw	t3,151(t4) # fffff097 <__freertos_irq_stack_top+0xfefef097>
    for (i = 0; i < N; i++)
    1994:	0000                	unimp
    1996:	0501                	addi	a0,a0,0
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1998:	0622                	slli	a2,a2,0x8
    199a:	09018903          	lb	s2,144(gp) # 1001430 <__global_pointer$+0x90>
    199e:	0000                	unimp
    19a0:	0501                	addi	a0,a0,0
    19a2:	0310                	addi	a2,sp,384
    19a4:	04097ef7          	0x4097ef7
    for (i = 0; i < N; i++)
    19a8:	0100                	addi	s0,sp,128
    19aa:	0505                	addi	a0,a0,1
    19ac:	0306                	slli	t1,t1,0x1
    19ae:	0901                	addi	s2,s2,0
    19b0:	0004                	0x4
    19b2:	0501                	addi	a0,a0,0
    19b4:	0610                	addi	a2,sp,768
    19b6:	00090003          	lb	zero,0(s2)
    19ba:	0100                	addi	s0,sp,128
                tmp = 0;
    19bc:	0505                	addi	a0,a0,1
    19be:	0306                	slli	t1,t1,0x1
    19c0:	040901d3          	0x40901d3
        for (j = 0; j < N; j++)
    19c4:	0100                	addi	s0,sp,128
    19c6:	1005                	c.nop	-31
    19c8:	0306                	slli	t1,t1,0x1
    19ca:	7ead                	lui	t4,0xfffeb
    19cc:	0009                	c.nop	2
    19ce:	0100                	addi	s0,sp,128
    19d0:	1c05                	addi	s8,s8,-31
    19d2:	09018303          	lb	t1,144(gp) # 1001430 <__global_pointer$+0x90>
            for (k = 0; k < N; k++)
    19d6:	000c                	0xc
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    19d8:	0501                	addi	a0,a0,0
    19da:	0305                	addi	t1,t1,1
    19dc:	0900                	addi	s0,sp,144
    19de:	0004                	0x4
            for (k = 0; k < N; k++)
    19e0:	0601                	addi	a2,a2,0
    19e2:	04090b03          	lb	s6,64(s2)
    19e6:	0100                	addi	s0,sp,128
                MATRES tmp = (MATRES)A[i * N + k] * (MATRES)B[k * N + j];
    19e8:	00090103          	lb	sp,0(s2)
                C[i * N + j] += bit_extract(tmp, 2, 4) * bit_extract(tmp, 5, 7);
    19ec:	0100                	addi	s0,sp,128
    19ee:	00090103          	lb	sp,0(s2)
    19f2:	0100                	addi	s0,sp,128
    19f4:	0b05                	addi	s6,s6,1
    19f6:	0306                	slli	t1,t1,0x1
    19f8:	0900                	addi	s0,sp,144
    19fa:	0000                	unimp
    19fc:	0501                	addi	a0,a0,0
    19fe:	0316                	slli	t1,t1,0x5
    1a00:	0902                	c.slli64	s2
    1a02:	0008                	0x8
    1a04:	0501                	addi	a0,a0,0
    1a06:	0321                	addi	t1,t1,8
            for (k = 0; k < N; k++)
    1a08:	0906                	slli	s2,s2,0x1
    1a0a:	0008                	0x8
    1a0c:	0501                	addi	a0,a0,0
    1a0e:	0316                	slli	t1,t1,0x5
        for (j = 0; j < N; j++)
    1a10:	097a                	slli	s2,s2,0x1e
    1a12:	0004                	0x4
    1a14:	0501                	addi	a0,a0,0
    1a16:	0321                	addi	t1,t1,8
    1a18:	0906                	slli	s2,s2,0x1
    1a1a:	0004                	0x4
    1a1c:	0501                	addi	a0,a0,0
    1a1e:	0609                	addi	a2,a2,2
    for (i = 0; i < N; i++)
    1a20:	04097a03          	0x4097a03
    1a24:	0100                	addi	s0,sp,128
    1a26:	0c05                	addi	s8,s8,1
    1a28:	0306                	slli	t1,t1,0x1
    1a2a:	0900                	addi	s0,sp,144
    1a2c:	0004                	0x4
    1a2e:	0501                	addi	a0,a0,0
    ee_s16 ret = 0;
    1a30:	060d                	addi	a2,a2,3
    1a32:	04090103          	lb	sp,64(s2)
    MATRES tmp = 0, prev = 0, cur = 0;
    1a36:	0100                	addi	s0,sp,128
    1a38:	1005                	c.nop	-31
    1a3a:	0306                	slli	t1,t1,0x1
    for (i = 0; i < N; i++)
    1a3c:	0909                	addi	s2,s2,2
    1a3e:	0000                	unimp
    1a40:	0501                	addi	a0,a0,0
    1a42:	031f 0977 0004      	0x40977031f
        for (j = 0; j < N; j++)
    1a48:	0501                	addi	a0,a0,0
    1a4a:	0609                	addi	a2,a2,2
                ret += (cur > prev) ? 1 : 0;
    1a4c:	04090903          	lb	s2,64(s2)
        for (j = 0; j < N; j++)
    1a50:	0100                	addi	s0,sp,128
    1a52:	0b05                	addi	s6,s6,1
                ret += (cur > prev) ? 1 : 0;
    1a54:	0306                	slli	t1,t1,0x1
    1a56:	0974                	addi	a3,sp,156
            prev = cur;
    1a58:	0004                	0x4
    1a5a:	0501                	addi	a0,a0,0
            cur = C[i * N + j];
    1a5c:	0605                	addi	a2,a2,1
    1a5e:	0901d703          	lhu	a4,144(gp) # 1001430 <__global_pointer$+0x90>
        for (j = 0; j < N; j++)
    1a62:	0008                	0x8
            cur = C[i * N + j];
    1a64:	0501                	addi	a0,a0,0
    1a66:	0309                	addi	t1,t1,2
            tmp += cur;
    1a68:	0902                	c.slli64	s2
    1a6a:	0000                	unimp
    1a6c:	0301                	addi	t1,t1,0
    1a6e:	0901                	addi	s2,s2,0
                ret += (cur > prev) ? 1 : 0;
    1a70:	0000                	unimp
    1a72:	0301                	addi	t1,t1,0
            tmp += cur;
    1a74:	0901                	addi	s2,s2,0
    1a76:	0000                	unimp
                ret += 10;
    1a78:	0301                	addi	t1,t1,0
    1a7a:	0902                	c.slli64	s2
                ret += (cur > prev) ? 1 : 0;
    1a7c:	0000                	unimp
    1a7e:	0301                	addi	t1,t1,0
            if (tmp > clipval)
    1a80:	0902                	c.slli64	s2
    1a82:	0000                	unimp
                ret += 10;
    1a84:	0501                	addi	a0,a0,0
    1a86:	060c                	addi	a1,sp,768
        for (j = 0; j < N; j++)
    1a88:	00097603          	0x97603
                ret += 10;
    1a8c:	0100                	addi	s0,sp,128
    1a8e:	0900d103          	lhu	sp,144(ra)
                tmp = 0;
    1a92:	0004                	0x4
            prev = cur;
    1a94:	0301                	addi	t1,t1,0
    1a96:	04097faf          	0x4097faf
            cur = C[i * N + j];
    1a9a:	0100                	addi	s0,sp,128
        for (j = 0; j < N; j++)
    1a9c:	0e05                	addi	t3,t3,1
    1a9e:	04090603          	lb	a2,64(s2)
    for (i = 0; i < N; i++)
    1aa2:	0100                	addi	s0,sp,128
    1aa4:	04097f03          	0x4097f03
    1aa8:	0100                	addi	s0,sp,128
    1aaa:	1105                	addi	sp,sp,-31
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1aac:	04090303          	lb	t1,64(s2)
    1ab0:	0100                	addi	s0,sp,128
    1ab2:	0d05                	addi	s10,s10,1
    1ab4:	0306                	slli	t1,t1,0x1
    1ab6:	0904                	addi	s1,sp,144
    for (i = 0; i < N; i++)
    1ab8:	0004                	0x4
    1aba:	0501                	addi	a0,a0,0
                tmp = 0;
    1abc:	0614                	addi	a3,sp,768
    1abe:	00090003          	lb	zero,0(s2)
        for (j = 0; j < N; j++)
    1ac2:	0100                	addi	s0,sp,128
            A[i * N + j] += val;
    1ac4:	0d05                	addi	s10,s10,1
    1ac6:	0306                	slli	t1,t1,0x1
    1ac8:	0902                	c.slli64	s2
    1aca:	0004                	0x4
        for (j = 0; j < N; j++)
    1acc:	0301                	addi	t1,t1,0
    1ace:	0901                	addi	s2,s2,0
            A[i * N + j] += val;
    1ad0:	0000                	unimp
    1ad2:	0301                	addi	t1,t1,0
    1ad4:	0901                	addi	s2,s2,0
    1ad6:	0000                	unimp
        for (j = 0; j < N; j++)
    1ad8:	0501                	addi	a0,a0,0
    1ada:	0614                	addi	a3,sp,768
    for (i = 0; i < N; i++)
    1adc:	00097c03          	0x97c03
    1ae0:	0100                	addi	s0,sp,128
    1ae2:	1305                	addi	t1,t1,-31
    1ae4:	04090303          	lb	t1,64(s2)
}
    1ae8:	0100                	addi	s0,sp,128
    1aea:	1105                	addi	sp,sp,-31
    1aec:	0306                	slli	t1,t1,0x1
    1aee:	00040903          	lb	s2,0(s0)
    return crc;
    1af2:	0501                	addi	a0,a0,0
}
    1af4:	01030613          	addi	a2,t1,16
    1af8:	0009                	c.nop	2
    1afa:	0100                	addi	s0,sp,128
    1afc:	1605                	addi	a2,a2,-31
    1afe:	04097f03          	0x4097f03
    1b02:	0100                	addi	s0,sp,128
    1b04:	1105                	addi	sp,sp,-31
    1b06:	0306                	slli	t1,t1,0x1
    1b08:	0901                	addi	s2,s2,0
    1b0a:	0004                	0x4
    1b0c:	0301                	addi	t1,t1,0
    1b0e:	0901                	addi	s2,s2,0
    1b10:	0000                	unimp
    1b12:	0501                	addi	a0,a0,0
    1b14:	0614                	addi	a3,sp,768
    1b16:	00090003          	lb	zero,0(s2)
    1b1a:	0100                	addi	s0,sp,128
    1b1c:	0d05                	addi	s10,s10,1
    1b1e:	04097c03          	0x4097c03
    return crc;
    1b22:	0100                	addi	s0,sp,128
}
    1b24:	1a05                	addi	s4,s4,-31
    1b26:	04093503          	0x4093503
    1b2a:	0100                	addi	s0,sp,128
            C[i * N + j] = 0;
    1b2c:	1305                	addi	t1,t1,-31
    1b2e:	0c095703          	lhu	a4,192(s2)
    1b32:	0100                	addi	s0,sp,128
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b34:	1105                	addi	sp,sp,-31
    1b36:	0306                	slli	t1,t1,0x1
    1b38:	0904                	addi	s1,sp,144
    1b3a:	0004                	0x4
    1b3c:	0501                	addi	a0,a0,0
    1b3e:	0316                	slli	t1,t1,0x5
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b40:	00000907          	0x907
    1b44:	0501                	addi	a0,a0,0
    1b46:	0619                	addi	a2,a2,6
    1b48:	00090003          	lb	zero,0(s2)
    1b4c:	0100                	addi	s0,sp,128
    1b4e:	2505                	jal	216e <core_state_transition+0x1fe>
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b50:	04090003          	lb	zero,64(s2)
    1b54:	0100                	addi	s0,sp,128
    1b56:	1605                	addi	a2,a2,-31
    1b58:	0306                	slli	t1,t1,0x1
    1b5a:	00040907          	0x40907
    1b5e:	0501                	addi	a0,a0,0
    crc = crc16(matrix_sum(N, C, clipval), crc);
    1b60:	061f 0003 0009      	0x90003061f
    1b66:	0100                	addi	s0,sp,128
    1b68:	2805                	jal	1b98 <core_bench_matrix+0x24>
    1b6a:	04090003          	lb	zero,64(s2)
    1b6e:	0100                	addi	s0,sp,128
    matrix_add_const(N, A, -val); /* return matrix to initial value */
    1b70:	0505                	addi	a0,a0,1
    1b72:	0306                	slli	t1,t1,0x1
{
    1b74:	7ce1                	lui	s9,0xffff8
    1b76:	0409                	addi	s0,s0,2
    1b78:	0100                	addi	s0,sp,128
    1b7a:	0905                	addi	s2,s2,1
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1b7c:	00090203          	lb	tp,0(s2)
{
    1b80:	0100                	addi	s0,sp,128
    1b82:	1705                	addi	a4,a4,-31
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1b84:	0306                	slli	t1,t1,0x1
    1b86:	0900                	addi	s0,sp,144
    1b88:	0000                	unimp
    1b8a:	0501                	addi	a0,a0,0
    1b8c:	0316                	slli	t1,t1,0x5
    1b8e:	00040903          	lb	s2,0(s0)
    1b92:	0501                	addi	a0,a0,0
{
    1b94:	030d                	addi	t1,t1,3
    1b96:	0900                	addi	s0,sp,144
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1b98:	0004                	0x4
    1b9a:	0501                	addi	a0,a0,0
    1b9c:	032a                	slli	t1,t1,0xa
    1b9e:	097d                	addi	s2,s2,31
    1ba0:	0004                	0x4
    1ba2:	0501                	addi	a0,a0,0
}
    1ba4:	0320                	addi	s0,sp,392
    1ba6:	0900                	addi	s0,sp,144
    1ba8:	0008                	0x8
    1baa:	0501                	addi	a0,a0,0
    1bac:	032a                	slli	t1,t1,0xa
    1bae:	0900                	addi	s0,sp,144
    crc = crc16(matrix_test(N, C, A, B, val), crc);
    1bb0:	0004                	0x4
    1bb2:	0501                	addi	a0,a0,0
    1bb4:	09000313          	li	t1,144
{
    1bb8:	0008                	0x8
    1bba:	0501                	addi	a0,a0,0
    1bbc:	0609                	addi	a2,a2,2
    1bbe:	04090103          	lb	sp,64(s2)
    1bc2:	0100                	addi	s0,sp,128
    1bc4:	1705                	addi	a4,a4,-31
    1bc6:	0306                	slli	t1,t1,0x1
    1bc8:	0900                	addi	s0,sp,144
    1bca:	0000                	unimp
    if (seed == 0)
    1bcc:	0501                	addi	a0,a0,0
    1bce:	09020313          	addi	t1,tp,144 # 90 <main+0x18>
        seed = 1;
    1bd2:	0004                	0x4
    1bd4:	0501                	addi	a0,a0,0
    1bd6:	032a                	slli	t1,t1,0xa
    1bd8:	097e                	slli	s2,s2,0x1f
    1bda:	0004                	0x4
    1bdc:	0501                	addi	a0,a0,0
    1bde:	0320                	addi	s0,sp,392
    while (j < blksize)
    1be0:	0900                	addi	s0,sp,144
    1be2:	0008                	0x8
    1be4:	0501                	addi	a0,a0,0
    1be6:	032a                	slli	t1,t1,0xa
    1be8:	0900                	addi	s0,sp,144
    1bea:	0004                	0x4
        i++;
    1bec:	0501                	addi	a0,a0,0
    1bee:	09000313          	li	t1,144
    1bf2:	0008                	0x8
        j = i * i * 2 * 4;
    1bf4:	0501                	addi	a0,a0,0
    1bf6:	0605                	addi	a2,a2,1
    1bf8:	04090203          	lb	tp,64(s2)
    while (j < blksize)
    1bfc:	0100                	addi	s0,sp,128
    1bfe:	1905                	addi	s2,s2,-31
    B = A + N * N;
    1c00:	0306                	slli	t1,t1,0x1
    1c02:	039a                	slli	t2,t2,0x6
    1c04:	0009                	c.nop	2
    1c06:	0100                	addi	s0,sp,128
    1c08:	1505                	addi	a0,a0,-31
    1c0a:	0306                	slli	t1,t1,0x1
    1c0c:	0004090b          	0x4090b
    for (i = 0; i < N; i++)
    1c10:	0301                	addi	t1,t1,0
    1c12:	0901                	addi	s2,s2,0
            seed         = ((order * seed) % 65536);
    1c14:	0000                	unimp
    1c16:	0301                	addi	t1,t1,0
    1c18:	0901                	addi	s2,s2,0
    1c1a:	0000                	unimp
    B = A + N * N;
    1c1c:	0501                	addi	a0,a0,0
    1c1e:	061a                	slli	a2,a2,0x6
    1c20:	00090003          	lb	zero,0(s2)
    1c24:	0100                	addi	s0,sp,128
    1c26:	1705                	addi	a4,a4,-31
    1c28:	04097f03          	0x4097f03
            seed         = ((order * seed) % 65536);
    1c2c:	0100                	addi	s0,sp,128
    1c2e:	1a05                	addi	s4,s4,-31
        seed = 1;
    1c30:	04090103          	lb	sp,64(s2)
        for (j = 0; j < N; j++)
    1c34:	0100                	addi	s0,sp,128
    1c36:	1105                	addi	sp,sp,-31
            seed         = ((order * seed) % 65536);
    1c38:	0306                	slli	t1,t1,0x1
    1c3a:	0904                	addi	s1,sp,144
    1c3c:	0004                	0x4
    1c3e:	0501                	addi	a0,a0,0
    1c40:	0614                	addi	a3,sp,768
    1c42:	00090003          	lb	zero,0(s2)
            A[i * N + j] = val;
    1c46:	0100                	addi	s0,sp,128
    1c48:	1505                	addi	a0,a0,-31
    1c4a:	0306                	slli	t1,t1,0x1
        for (j = 0; j < N; j++)
    1c4c:	0902                	c.slli64	s2
    1c4e:	0004                	0x4
            val          = (seed + order);
    1c50:	0501                	addi	a0,a0,0
    1c52:	0620                	addi	s0,sp,776
            seed         = ((order * seed) % 65536);
    1c54:	00090003          	lb	zero,0(s2)
    1c58:	0100                	addi	s0,sp,128
    1c5a:	1a05                	addi	s4,s4,-31
    1c5c:	04090403          	lb	s0,64(s2)
    1c60:	0100                	addi	s0,sp,128
    1c62:	1305                	addi	t1,t1,-31
    1c64:	04095703          	lhu	a4,64(s2)
            val          = (seed + order);
    1c68:	0100                	addi	s0,sp,128
    1c6a:	1e05                	addi	t3,t3,-31
    1c6c:	04090003          	lb	zero,64(s2)
    1c70:	0100                	addi	s0,sp,128
    1c72:	2c05                	jal	1ea2 <core_init_state+0xee>
            val          = (val + order);
    1c74:	04090003          	lb	zero,64(s2)
            B[i * N + j] = val;
    1c78:	0100                	addi	s0,sp,128
    1c7a:	1105                	addi	sp,sp,-31
            val          = matrix_clip(val, 1);
    1c7c:	0306                	slli	t1,t1,0x1
    1c7e:	0904                	addi	s1,sp,144
            A[i * N + j] = val;
    1c80:	0004                	0x4
    1c82:	0501                	addi	a0,a0,0
        for (j = 0; j < N; j++)
    1c84:	0315                	addi	t1,t1,5
    1c86:	00000903          	lb	s2,0(zero) # 0 <_start>
    for (i = 0; i < N; i++)
    1c8a:	0301                	addi	t1,t1,0
    1c8c:	0901                	addi	s2,s2,0
    1c8e:	0000                	unimp
    1c90:	0301                	addi	t1,t1,0
    1c92:	0901                	addi	s2,s2,0
    p->C = (MATRES *)align_mem(B + N * N);
    1c94:	0000                	unimp
    1c96:	0501                	addi	a0,a0,0
    1c98:	061a                	slli	a2,a2,0x6
    1c9a:	00090003          	lb	zero,0(s2)
}
    1c9e:	0100                	addi	s0,sp,128
    p->C = (MATRES *)align_mem(B + N * N);
    1ca0:	1705                	addi	a4,a4,-31
    1ca2:	08097f03          	0x8097f03
    1ca6:	0100                	addi	s0,sp,128
    p->A = A;
    1ca8:	1105                	addi	sp,sp,-31
    1caa:	0306                	slli	t1,t1,0x1
    p->N = N;
    1cac:	0004091b          	0x4091b
    p->B = B;
    1cb0:	0501                	addi	a0,a0,0
    1cb2:	0614                	addi	a3,sp,768
    p->C = (MATRES *)align_mem(B + N * N);
    1cb4:	00090003          	lb	zero,0(s2)
}
    1cb8:	0100                	addi	s0,sp,128
    1cba:	1a05                	addi	s4,s4,-31
    1cbc:	04090603          	lb	a2,64(s2)
    1cc0:	0100                	addi	s0,sp,128
    1cc2:	1505                	addi	a0,a0,-31
    1cc4:	0306                	slli	t1,t1,0x1
    1cc6:	096d                	addi	s2,s2,27
    B = A + N * N;
    1cc8:	000c                	0xc
    1cca:	0301                	addi	t1,t1,0
    1ccc:	0901                	addi	s2,s2,0
    1cce:	0000                	unimp
    N = i - 1;
    1cd0:	0301                	addi	t1,t1,0
    1cd2:	0901                	addi	s2,s2,0
    B = A + N * N;
    1cd4:	0000                	unimp
    1cd6:	0501                	addi	a0,a0,0
    1cd8:	061a                	slli	a2,a2,0x6
    1cda:	00090003          	lb	zero,0(s2)
start_time(void) {
    1cde:	0100                	addi	s0,sp,128
    1ce0:	1705                	addi	a4,a4,-31
    1ce2:	08097f03          	0x8097f03
    timer_0 = timer_getms();
    1ce6:	0100                	addi	s0,sp,128
    1ce8:	0f05                	addi	t5,t5,1
    1cea:	08095703          	lhu	a4,128(s2)
}
    1cee:	0100                	addi	s0,sp,128
    timer_0 = timer_getms();
    1cf0:	0905                	addi	s2,s2,1
    1cf2:	0306                	slli	t1,t1,0x1
    1cf4:	00c4                	addi	s1,sp,68
    1cf6:	0409                	addi	s0,s0,2
    1cf8:	0100                	addi	s0,sp,128
    1cfa:	1405                	addi	s0,s0,-31
}
    1cfc:	0306                	slli	t1,t1,0x1
    1cfe:	0900                	addi	s0,sp,144
    1d00:	0000                	unimp
    1d02:	0501                	addi	a0,a0,0
stop_time(void) {
    1d04:	0609                	addi	a2,a2,2
    1d06:	04090303          	lb	t1,64(s2)
    1d0a:	0100                	addi	s0,sp,128
    timer_1 = timer_getms();
    1d0c:	0c05                	addi	s8,s8,1
    1d0e:	0306                	slli	t1,t1,0x1
    1d10:	0900                	addi	s0,sp,144
    1d12:	0000                	unimp
}
    1d14:	0501                	addi	a0,a0,0
    1d16:	0609                	addi	a2,a2,2
    timer_1 = timer_getms();
    1d18:	04090403          	lb	s0,64(s2)
    1d1c:	0100                	addi	s0,sp,128
    1d1e:	1005                	c.nop	-31
    1d20:	0306                	slli	t1,t1,0x1
    1d22:	0900                	addi	s0,sp,144
}
    1d24:	0000                	unimp
    1d26:	0501                	addi	a0,a0,0
    1d28:	0605                	addi	a2,a2,1
    1d2a:	097fad03          	lw	s10,151(t6) # fffee097 <__freertos_irq_stack_top+0xfefde097>
    return timer_1 - timer_0;
    1d2e:	0004                	0x4
    1d30:	0501                	addi	a0,a0,0
    1d32:	0309                	addi	t1,t1,2
    1d34:	0902                	c.slli64	s2
    1d36:	0000                	unimp
    1d38:	0301                	addi	t1,t1,0
    1d3a:	0901                	addi	s2,s2,0
}
    1d3c:	0000                	unimp
    1d3e:	0301                	addi	t1,t1,0
    1d40:	0901                	addi	s2,s2,0
    1d42:	0000                	unimp
time_in_secs(CORE_TICKS ticks) {
    1d44:	0301                	addi	t1,t1,0
    1d46:	0902                	c.slli64	s2
    1d48:	0000                	unimp
    1d4a:	0301                	addi	t1,t1,0
    return ((double)ticks) / 1000.0;
    1d4c:	0902                	c.slli64	s2
    1d4e:	0000                	unimp
    1d50:	0501                	addi	a0,a0,0
    1d52:	0003060f          	0x3060f
    1d56:	0009                	c.nop	2
    1d58:	0100                	addi	s0,sp,128
    1d5a:	0905                	addi	s2,s2,1
    1d5c:	0306                	slli	t1,t1,0x1
    1d5e:	00c4                	addi	s1,sp,68
    1d60:	0409                	addi	s0,s0,2
    1d62:	0100                	addi	s0,sp,128
    1d64:	1405                	addi	s0,s0,-31
    1d66:	0306                	slli	t1,t1,0x1
}
    1d68:	0900                	addi	s0,sp,144
    1d6a:	0000                	unimp
    1d6c:	0501                	addi	a0,a0,0
    1d6e:	060d                	addi	a2,a2,3
    1d70:	097de303          	0x97de303
portable_init(core_portable* p, int* argc, char* argv[]) {
    1d74:	0008                	0x8
    1d76:	0301                	addi	t1,t1,0
    1d78:	0901                	addi	s2,s2,0
    1d7a:	0008                	0x8
    1d7c:	0501                	addi	a0,a0,0
    1d7e:	0630                	addi	a2,sp,776
    printf("start run!!\n");
    1d80:	00090103          	lb	sp,0(s2)
    1d84:	0100                	addi	s0,sp,128
    1d86:	1005                	c.nop	-31
portable_init(core_portable* p, int* argc, char* argv[]) {
    1d88:	04090403          	lb	s0,64(s2)
    printf("start run!!\n");
    1d8c:	0100                	addi	s0,sp,128
    1d8e:	3005                	jal	15ae <iterate+0x52>
    1d90:	04097c03          	0x4097c03
    p->portable_id = 1;
    1d94:	0100                	addi	s0,sp,128
    1d96:	1405                	addi	s0,s0,-31
    1d98:	04097e03          	0x4097e03
}
    1d9c:	0100                	addi	s0,sp,128
    1d9e:	3005                	jal	15be <iterate+0x62>
    1da0:	04090203          	lb	tp,64(s2)
    1da4:	0100                	addi	s0,sp,128
    1da6:	2405                	jal	1fc6 <core_state_transition+0x56>
    1da8:	04090103          	lb	sp,64(s2)
    p->portable_id = 0;
    1dac:	0100                	addi	s0,sp,128
    1dae:	0b05                	addi	s6,s6,1
}
    1db0:	04097703          	0x4097703
    size--;
    1db4:	0100                	addi	s0,sp,128
    1db6:	2105                	jal	21d6 <core_state_transition+0x266>
    while ((total + next + 1) < size)
    1db8:	04090803          	lb	a6,64(s2)
{
    1dbc:	0100                	addi	s0,sp,128
    1dbe:	1f05                	addi	t5,t5,-31
    while ((total + next + 1) < size)
    1dc0:	04097f03          	0x4097f03
    1dc4:	0100                	addi	s0,sp,128
    1dc6:	0905                	addi	s2,s2,1
    1dc8:	0306                	slli	t1,t1,0x1
    1dca:	0905                	addi	s2,s2,1
    1dcc:	0004                	0x4
    1dce:	0501                	addi	a0,a0,0
        switch (seed & 0x7)
    1dd0:	7403060b          	0x7403060b
    1dd4:	0409                	addi	s0,s0,2
    1dd6:	0100                	addi	s0,sp,128
{
    1dd8:	0105                	addi	sp,sp,1
    1dda:	08091b03          	lh	s6,128(s2)
        switch (seed & 0x7)
    1dde:	0100                	addi	s0,sp,128
                buf  = intpat[(seed >> 3) & 0x3];
    1de0:	0d05                	addi	s10,s10,1
    1de2:	08095003          	lhu	zero,128(s2)
        switch (seed & 0x7)
    1de6:	0100                	addi	s0,sp,128
                buf  = errpat[(seed >> 3) & 0x3];
    1de8:	0e05                	addi	t3,t3,1
    1dea:	04090103          	lb	sp,64(s2)
                buf  = scipat[(seed >> 3) & 0x3];
    1dee:	0100                	addi	s0,sp,128
                buf  = floatpat[(seed >> 3) & 0x3];
    1df0:	0805                	addi	a6,a6,1
    1df2:	0900cb03          	lbu	s6,144(ra)
    1df6:	0004                	0x4
{
    1df8:	0901                	addi	s2,s2,0
    1dfa:	0008                	0x8
    1dfc:	0100                	addi	s0,sp,128
    1dfe:	0501                	addi	a0,a0,0
        switch (seed & 0x7)
    1e00:	0001                	nop
    1e02:	0205                	addi	tp,tp,1
    1e04:	0000                	unimp
    1e06:	0000                	unimp
    ee_u32 total = 0, next = 0, i;
    1e08:	0102d503          	lhu	a0,16(t0)
                buf  = intpat[(seed >> 3) & 0x3];
    1e0c:	0505                	addi	a0,a0,1
    1e0e:	00090103          	lb	sp,0(s2)
        switch (seed & 0x7)
    1e12:	0100                	addi	s0,sp,128
                buf  = errpat[(seed >> 3) & 0x3];
    1e14:	00090203          	lb	tp,0(s2)
                next = 8;
    1e18:	0100                	addi	s0,sp,128
    1e1a:	0a05                	addi	s4,s4,1
                buf  = scipat[(seed >> 3) & 0x3];
    1e1c:	0306                	slli	t1,t1,0x1
    1e1e:	0900                	addi	s0,sp,144
                buf  = floatpat[(seed >> 3) & 0x3];
    1e20:	0000                	unimp
    1e22:	0501                	addi	a0,a0,0
            *(p + total + i) = ',';
    1e24:	0314                	addi	a3,sp,384
    1e26:	0900                	addi	s0,sp,144
    1e28:	0000                	unimp
    1e2a:	0501                	addi	a0,a0,0
        switch (seed & 0x7)
    1e2c:	0308                	addi	a0,sp,384
    1e2e:	0900                	addi	s0,sp,144
    1e30:	0000                	unimp
    1e32:	0501                	addi	a0,a0,0
    1e34:	0605                	addi	a2,a2,1
    1e36:	00090203          	lb	tp,0(s2)
    1e3a:	0100                	addi	s0,sp,128
                buf  = errpat[(seed >> 3) & 0x3];
    1e3c:	0a05                	addi	s4,s4,1
    1e3e:	0306                	slli	t1,t1,0x1
        switch (seed & 0x7)
    1e40:	0900                	addi	s0,sp,144
    1e42:	0000                	unimp
                buf  = floatpat[(seed >> 3) & 0x3];
    1e44:	0501                	addi	a0,a0,0
    1e46:	0315                	addi	t1,t1,5
    1e48:	0900                	addi	s0,sp,144
    1e4a:	0000                	unimp
    1e4c:	0501                	addi	a0,a0,0
    1e4e:	0308                	addi	a0,sp,384
    while ((total + next + 1) < size)
    1e50:	0900                	addi	s0,sp,144
    1e52:	0000                	unimp
                buf  = errpat[(seed >> 3) & 0x3];
    1e54:	0501                	addi	a0,a0,0
    1e56:	0605                	addi	a2,a2,1
                break;
    1e58:	00090303          	lb	t1,0(s2)
    while ((total + next + 1) < size)
    1e5c:	0100                	addi	s0,sp,128
    1e5e:	00090103          	lb	sp,0(s2)
                next = 8;
    1e62:	0100                	addi	s0,sp,128
                *(p + total + i) = buf[i];
    1e64:	1005                	c.nop	-31
    1e66:	0306                	slli	t1,t1,0x1
    1e68:	0900                	addi	s0,sp,144
    1e6a:	0000                	unimp
    1e6c:	0501                	addi	a0,a0,0
    1e6e:	0605                	addi	a2,a2,1
    1e70:	00090103          	lb	sp,0(s2)
    1e74:	0100                	addi	s0,sp,128
    1e76:	2605                	jal	2196 <core_state_transition+0x226>
    1e78:	0306                	slli	t1,t1,0x1
    1e7a:	0900                	addi	s0,sp,144
    1e7c:	0000                	unimp
    1e7e:	0501                	addi	a0,a0,0
    1e80:	0316                	slli	t1,t1,0x5
    1e82:	00097eb3          	and	t4,s2,zero
    1e86:	0100                	addi	s0,sp,128
            for (i = 0; i < next; i++)
    1e88:	00090103          	lb	sp,0(s2)
                *(p + total + i) = buf[i];
    1e8c:	0100                	addi	s0,sp,128
    1e8e:	1805                	addi	a6,a6,-31
    1e90:	0901cc03          	lbu	s8,144(gp) # 1001430 <__global_pointer$+0x90>
    1e94:	0000                	unimp
    1e96:	0501                	addi	a0,a0,0
    1e98:	0605                	addi	a2,a2,1
    1e9a:	00090103          	lb	sp,0(s2)
    1e9e:	0100                	addi	s0,sp,128
    1ea0:	1805                	addi	a6,a6,-31
    1ea2:	0306                	slli	t1,t1,0x1
            for (i = 0; i < next; i++)
    1ea4:	0900                	addi	s0,sp,144
    1ea6:	0000                	unimp
                *(p + total + i) = buf[i];
    1ea8:	0501                	addi	a0,a0,0
    1eaa:	0605                	addi	a2,a2,1
    1eac:	00090203          	lb	tp,0(s2)
            *(p + total + i) = ',';
    1eb0:	0100                	addi	s0,sp,128
    1eb2:	1305                	addi	t1,t1,-31
    1eb4:	0306                	slli	t1,t1,0x1
    1eb6:	0900                	addi	s0,sp,144
    1eb8:	0000                	unimp
    1eba:	0501                	addi	a0,a0,0
        switch (seed & 0x7)
    1ebc:	0605                	addi	a2,a2,1
    1ebe:	00090103          	lb	sp,0(s2)
    1ec2:	0100                	addi	s0,sp,128
    1ec4:	1105                	addi	sp,sp,-31
    1ec6:	0306                	slli	t1,t1,0x1
    1ec8:	0900                	addi	s0,sp,144
    1eca:	0000                	unimp
    1ecc:	0501                	addi	a0,a0,0
    1ece:	0301                	addi	t1,t1,0
    1ed0:	0904                	addi	s1,sp,144
    1ed2:	0000                	unimp
    1ed4:	0501                	addi	a0,a0,0
    1ed6:	0311                	addi	t1,t1,4
                buf  = intpat[(seed >> 3) & 0x3];
    1ed8:	097c                	addi	a5,sp,156
    1eda:	0000                	unimp
    1edc:	0501                	addi	a0,a0,0
    1ede:	0605                	addi	a2,a2,1
    1ee0:	00090103          	lb	sp,0(s2)
    1ee4:	0100                	addi	s0,sp,128
    1ee6:	1605                	addi	a2,a2,-31
    while ((total + next + 1) < size)
    1ee8:	0306                	slli	t1,t1,0x1
    1eea:	0900                	addi	s0,sp,144
                buf  = intpat[(seed >> 3) & 0x3];
    1eec:	0000                	unimp
    1eee:	0501                	addi	a0,a0,0
                break;
    1ef0:	0605                	addi	a2,a2,1
    1ef2:	097eae03          	lw	t3,151(t4) # fffeb097 <__freertos_irq_stack_top+0xfefdb097>
    while ((total + next + 1) < size)
    1ef6:	0000                	unimp
                next = 4;
    1ef8:	0501                	addi	a0,a0,0
    1efa:	0610                	addi	a2,sp,768
    1efc:	00090003          	lb	zero,0(s2)
                buf  = scipat[(seed >> 3) & 0x3];
    1f00:	0100                	addi	s0,sp,128
    1f02:	0505                	addi	a0,a0,1
    1f04:	0306                	slli	t1,t1,0x1
    1f06:	0901                	addi	s2,s2,0
    1f08:	0000                	unimp
    1f0a:	0501                	addi	a0,a0,0
    while ((total + next + 1) < size)
    1f0c:	0610                	addi	a2,sp,768
    1f0e:	00090003          	lb	zero,0(s2)
                buf  = errpat[(seed >> 3) & 0x3];
    1f12:	0100                	addi	s0,sp,128
                break;
    1f14:	0505                	addi	a0,a0,1
    1f16:	0306                	slli	t1,t1,0x1
    while ((total + next + 1) < size)
    1f18:	000901d3          	fadd.s	ft3,fs2,ft0,rne
    while (total < size)
    1f1c:	0100                	addi	s0,sp,128
    1f1e:	0105                	addi	sp,sp,1
}
    1f20:	0306                	slli	t1,t1,0x1
    1f22:	0901                	addi	s2,s2,0
    1f24:	0000                	unimp
    1f26:	0501                	addi	a0,a0,0
    1f28:	0310                	addi	a2,sp,384
    1f2a:	0972                	slli	s2,s2,0x1c
    1f2c:	0000                	unimp
    1f2e:	0501                	addi	a0,a0,0
    1f30:	0301                	addi	t1,t1,0
    1f32:	090e                	slli	s2,s2,0x3
    1f34:	0000                	unimp
    1f36:	0901                	addi	s2,s2,0
    1f38:	0000                	unimp
    1f3a:	0100                	addi	s0,sp,128
    1f3c:	0501                	addi	a0,a0,0
    1f3e:	0001                	nop
                buf  = errpat[(seed >> 3) & 0x3];
    1f40:	0205                	addi	tp,tp,1
    1f42:	0000                	unimp
    1f44:	0000                	unimp
    1f46:	0102f903          	0x102f903
}
    1f4a:	0505                	addi	a0,a0,1
    1f4c:	00090103          	lb	sp,0(s2)
    1f50:	0100                	addi	s0,sp,128
    1f52:	00090103          	lb	sp,0(s2)
    1f56:	0100                	addi	s0,sp,128
    ee_u32 total = 0, next = 0, i;
    1f58:	1005                	c.nop	-31
    1f5a:	0306                	slli	t1,t1,0x1
    1f5c:	0900                	addi	s0,sp,144
    1f5e:	0000                	unimp
    1f60:	0501                	addi	a0,a0,0
    1f62:	0605                	addi	a2,a2,1
    1f64:	00090203          	lb	tp,0(s2)
    1f68:	0100                	addi	s0,sp,128
    1f6a:	1005                	c.nop	-31
    1f6c:	0306                	slli	t1,t1,0x1
    1f6e:	0900                	addi	s0,sp,144
    ee_u8 *         str = *instr;
    1f70:	0000                	unimp
    1f72:	0501                	addi	a0,a0,0
    for (; *str && state != CORE_INVALID; str++)
    1f74:	0605                	addi	a2,a2,1
    1f76:	00090103          	lb	sp,0(s2)
    1f7a:	0100                	addi	s0,sp,128
        if (NEXT_SYMBOL == ',') /* end of this input */
    1f7c:	0105                	addi	sp,sp,1
    1f7e:	0306                	slli	t1,t1,0x1
    1f80:	0000097b          	0x97b
    1f84:	0501                	addi	a0,a0,0
    1f86:	0315                	addi	t1,t1,5
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1f88:	0905                	addi	s2,s2,1
    1f8a:	0000                	unimp
    1f8c:	0501                	addi	a0,a0,0
    1f8e:	031c                	addi	a5,sp,384
    1f90:	00000903          	lb	s2,0(zero) # 0 <_start>
    1f94:	0501                	addi	a0,a0,0
    1f96:	0301                	addi	t1,t1,0
    1f98:	00000903          	lb	s2,0(zero) # 0 <_start>
    1f9c:	0501                	addi	a0,a0,0
    1f9e:	0310                	addi	a2,sp,384
                transition_count[CORE_START]++;
    1fa0:	097a                	slli	s2,s2,0x1e
    1fa2:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    1fa4:	0501                	addi	a0,a0,0
    1fa6:	0605                	addi	a2,a2,1
    1fa8:	00090103          	lb	sp,0(s2)
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fac:	0100                	addi	s0,sp,128
    1fae:	1005                	c.nop	-31
    1fb0:	0306                	slli	t1,t1,0x1
    1fb2:	0900                	addi	s0,sp,144
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fb4:	0000                	unimp
    1fb6:	0501                	addi	a0,a0,0
                if (NEXT_SYMBOL == '.')
    1fb8:	0605                	addi	a2,a2,1
    1fba:	00090203          	lb	tp,0(s2)
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fbe:	0100                	addi	s0,sp,128
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fc0:	1005                	c.nop	-31
    1fc2:	0306                	slli	t1,t1,0x1
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fc4:	0900                	addi	s0,sp,144
    1fc6:	0000                	unimp
                if (NEXT_SYMBOL == '.')
    1fc8:	0501                	addi	a0,a0,0
    1fca:	0605                	addi	a2,a2,1
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fcc:	00090103          	lb	sp,0(s2)
    for (; *str && state != CORE_INVALID; str++)
    1fd0:	0100                	addi	s0,sp,128
    1fd2:	1005                	c.nop	-31
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fd4:	0306                	slli	t1,t1,0x1
    1fd6:	0900                	addi	s0,sp,144
    1fd8:	0000                	unimp
    1fda:	0501                	addi	a0,a0,0
    for (; *str && state != CORE_INVALID; str++)
    1fdc:	0605                	addi	a2,a2,1
    1fde:	00090103          	lb	sp,0(s2)
        if (NEXT_SYMBOL == ',') /* end of this input */
    1fe2:	0100                	addi	s0,sp,128
    1fe4:	0105                	addi	sp,sp,1
    1fe6:	0306                	slli	t1,t1,0x1
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    1fe8:	0901                	addi	s2,s2,0
    1fea:	0000                	unimp
    1fec:	0901                	addi	s2,s2,0
    1fee:	0000                	unimp
                if (NEXT_SYMBOL == '.')
    1ff0:	0100                	addi	s0,sp,128
    1ff2:	0501                	addi	a0,a0,0
                    transition_count[CORE_INT]++;
    1ff4:	0001                	nop
    1ff6:	0205                	addi	tp,tp,1
    1ff8:	0000                	unimp
    1ffa:	0000                	unimp
    1ffc:	01039803          	lh	a6,16(t2)
    for (; *str && state != CORE_INVALID; str++)
    2000:	0505                	addi	a0,a0,1
    2002:	00090103          	lb	sp,0(s2)
    2006:	0100                	addi	s0,sp,128
        if (NEXT_SYMBOL == ',') /* end of this input */
    2008:	00090203          	lb	tp,0(s2)
    200c:	0100                	addi	s0,sp,128
    200e:	2805                	jal	203e <core_state_transition+0xce>
    2010:	0306                	slli	t1,t1,0x1
    2012:	0901                	addi	s2,s2,0
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    2014:	0000                	unimp
    2016:	0501                	addi	a0,a0,0
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2018:	0319                	addi	t1,t1,6
    201a:	097f                	0x97f
        if (NEXT_SYMBOL == ',') /* end of this input */
    201c:	0000                	unimp
    201e:	0501                	addi	a0,a0,0
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2020:	0605                	addi	a2,a2,1
    2022:	00090103          	lb	sp,0(s2)
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    2026:	0100                	addi	s0,sp,128
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2028:	2805                	jal	2058 <core_state_transition+0xe8>
    202a:	0306                	slli	t1,t1,0x1
                if (NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e')
    202c:	00000903          	lb	s2,0(zero) # 0 <_start>
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2030:	0501                	addi	a0,a0,0
    2032:	0319                	addi	t1,t1,6
                    transition_count[CORE_FLOAT]++;
    2034:	097d                	addi	s2,s2,31
    2036:	0000                	unimp
    2038:	0501                	addi	a0,a0,0
    203a:	0605                	addi	a2,a2,1
                    state = CORE_INVALID;
    203c:	00090103          	lb	sp,0(s2)
                    transition_count[CORE_FLOAT]++;
    2040:	0100                	addi	s0,sp,128
    2042:	1905                	addi	s2,s2,-31
    2044:	0306                	slli	t1,t1,0x1
    2046:	0900                	addi	s0,sp,144
    *instr = str;
    2048:	0000                	unimp
    204a:	0501                	addi	a0,a0,0
}
    204c:	0605                	addi	a2,a2,1
    204e:	00090203          	lb	tp,0(s2)
    2052:	0100                	addi	s0,sp,128
                else if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    2054:	1905                	addi	s2,s2,-31
    2056:	0306                	slli	t1,t1,0x1
    2058:	0900                	addi	s0,sp,144
    205a:	0000                	unimp
    205c:	0501                	addi	a0,a0,0
    205e:	0605                	addi	a2,a2,1
    2060:	00090103          	lb	sp,0(s2)
                else if (NEXT_SYMBOL == '.')
    2064:	0100                	addi	s0,sp,128
    2066:	1905                	addi	s2,s2,-31
    2068:	0306                	slli	t1,t1,0x1
    206a:	0900                	addi	s0,sp,144
                    transition_count[CORE_INVALID]++;
    206c:	0000                	unimp
    206e:	0501                	addi	a0,a0,0
                transition_count[CORE_START]++;
    2070:	0605                	addi	a2,a2,1
    2072:	00090103          	lb	sp,0(s2)
                    state = CORE_INVALID;
    2076:	0100                	addi	s0,sp,128
                    transition_count[CORE_INVALID]++;
    2078:	0105                	addi	sp,sp,1
    207a:	0306                	slli	t1,t1,0x1
    207c:	0901                	addi	s2,s2,0
    207e:	0000                	unimp
    *instr = str;
    2080:	0901                	addi	s2,s2,0
    2082:	0000                	unimp
}
    2084:	0100                	addi	s0,sp,128
    2086:	0501                	addi	a0,a0,0
    2088:	0001                	nop
    208a:	0205                	addi	tp,tp,1
                    transition_count[CORE_INT]++;
    208c:	0000                	unimp
    208e:	0000                	unimp
    2090:	0103b303          	0x103b303
                    state = CORE_INVALID;
    2094:	0505                	addi	a0,a0,1
    2096:	00090103          	lb	sp,0(s2)
                    transition_count[CORE_INT]++;
    209a:	0100                	addi	s0,sp,128
    209c:	0d05                	addi	s10,s10,1
    209e:	0306                	slli	t1,t1,0x1
    *instr = str;
    20a0:	0900                	addi	s0,sp,144
    20a2:	0000                	unimp
}
    20a4:	0501                	addi	a0,a0,0
    20a6:	0308                	addi	a0,sp,384
    20a8:	0900                	addi	s0,sp,144
    20aa:	0000                	unimp
                transition_count[CORE_START]++;
    20ac:	0501                	addi	a0,a0,0
    20ae:	0902030f          	0x902030f
    for (; *str && state != CORE_INVALID; str++)
    20b2:	0000                	unimp
    20b4:	0501                	addi	a0,a0,0
    20b6:	09000323          	sb	a6,134(zero) # 86 <main+0xe>
        if (NEXT_SYMBOL == ',') /* end of this input */
    20ba:	0000                	unimp
    20bc:	0501                	addi	a0,a0,0
    20be:	0315                	addi	t1,t1,5
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    20c0:	0900                	addi	s0,sp,144
    20c2:	0000                	unimp
    20c4:	0501                	addi	a0,a0,0
    20c6:	04020023          	sb	zero,64(tp) # 40 <_start+0x40>
    20ca:	0301                	addi	t1,t1,0
    20cc:	0900                	addi	s0,sp,144
    20ce:	0000                	unimp
    20d0:	0501                	addi	a0,a0,0
    20d2:	0015                	c.nop	5
    20d4:	0402                	c.slli64	s0
    20d6:	0301                	addi	t1,t1,0
                else if (NEXT_SYMBOL == '.')
    20d8:	0900                	addi	s0,sp,144
    20da:	0000                	unimp
    20dc:	0501                	addi	a0,a0,0
    20de:	060d                	addi	a2,a2,3
                    transition_count[CORE_S1]++;
    20e0:	00090103          	lb	sp,0(s2)
                    state = CORE_INVALID;
    20e4:	0100                	addi	s0,sp,128
    20e6:	1205                	addi	tp,tp,-31
    *instr = str;
    20e8:	0306                	slli	t1,t1,0x1
    20ea:	0900                	addi	s0,sp,144
}
    20ec:	0000                	unimp
    20ee:	0501                	addi	a0,a0,0
    20f0:	097f030f          	0x97f030f
                    transition_count[CORE_S1]++;
    20f4:	0000                	unimp
    20f6:	0501                	addi	a0,a0,0
    for (; *str && state != CORE_INVALID; str++)
    20f8:	0301                	addi	t1,t1,0
    20fa:	090a                	slli	s2,s2,0x2
    20fc:	0000                	unimp
    20fe:	0501                	addi	a0,a0,0
        if (NEXT_SYMBOL == ',') /* end of this input */
    2100:	097c030f          	0x97c030f
    2104:	0000                	unimp
    2106:	0501                	addi	a0,a0,0
    2108:	0324                	addi	s1,sp,392
    210a:	0900                	addi	s0,sp,144
    for (; *str && state != CORE_INVALID; str++)
    210c:	0000                	unimp
    210e:	0501                	addi	a0,a0,0
    2110:	033c                	addi	a5,sp,392
    2112:	0900                	addi	s0,sp,144
    2114:	0000                	unimp
    2116:	0501                	addi	a0,a0,0
                    transition_count[CORE_FLOAT]++;
    2118:	032d                	addi	t1,t1,11
    211a:	0900                	addi	s0,sp,144
    211c:	0000                	unimp
    211e:	0501                	addi	a0,a0,0
    2120:	0315                	addi	t1,t1,5
    2122:	0900                	addi	s0,sp,144
    for (; *str && state != CORE_INVALID; str++)
    2124:	0000                	unimp
    2126:	0501                	addi	a0,a0,0
    2128:	0324                	addi	s1,sp,392
    212a:	0900                	addi	s0,sp,144
        if (NEXT_SYMBOL == ',') /* end of this input */
    212c:	0000                	unimp
    212e:	0501                	addi	a0,a0,0
    2130:	032d                	addi	t1,t1,11
    2132:	0900                	addi	s0,sp,144
    2134:	0000                	unimp
    2136:	0501                	addi	a0,a0,0
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    2138:	0315                	addi	t1,t1,5
    213a:	0900                	addi	s0,sp,144
    213c:	0000                	unimp
    213e:	0501                	addi	a0,a0,0
    2140:	060d                	addi	a2,a2,3
    2142:	00090103          	lb	sp,0(s2)
    2146:	0100                	addi	s0,sp,128
                    transition_count[CORE_S2]++;
    2148:	1205                	addi	tp,tp,-31
    214a:	0306                	slli	t1,t1,0x1
                if (NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-')
    214c:	0900                	addi	s0,sp,144
    214e:	0000                	unimp
                    state = CORE_INVALID;
    2150:	0501                	addi	a0,a0,0
    2152:	097f030f          	0x97f030f
    *instr = str;
    2156:	0000                	unimp
}
    2158:	0901                	addi	s2,s2,0
    215a:	0000                	unimp
    215c:	0100                	addi	s0,sp,128
    215e:	0501                	addi	a0,a0,0
    for (; *str && state != CORE_INVALID; str++)
    2160:	0001                	nop
    2162:	0205                	addi	tp,tp,1
    2164:	0000                	unimp
    2166:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    2168:	0103d103          	lhu	sp,16(t2)
    216c:	0505                	addi	a0,a0,1
    216e:	00090103          	lb	sp,0(s2)
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2172:	0100                	addi	s0,sp,128
    2174:	00090103          	lb	sp,0(s2)
    2178:	0100                	addi	s0,sp,128
    217a:	0b05                	addi	s6,s6,1
    217c:	0306                	slli	t1,t1,0x1
    217e:	0900                	addi	s0,sp,144
    2180:	0000                	unimp
    2182:	0501                	addi	a0,a0,0
                    transition_count[CORE_EXPONENT]++;
    2184:	0310                	addi	a2,sp,384
    2186:	097f                	0x97f
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    2188:	0000                	unimp
    218a:	0501                	addi	a0,a0,0
    for (; *str && state != CORE_INVALID; str++)
    218c:	0609                	addi	a2,a2,2
    218e:	00090303          	lb	t1,0(s2)
    2192:	0100                	addi	s0,sp,128
        if (NEXT_SYMBOL == ',') /* end of this input */
    2194:	1405                	addi	s0,s0,-31
    2196:	0306                	slli	t1,t1,0x1
    2198:	0900                	addi	s0,sp,144
    219a:	0000                	unimp
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    219c:	0501                	addi	a0,a0,0
    219e:	0609                	addi	a2,a2,2
        if (NEXT_SYMBOL == ',') /* end of this input */
    21a0:	00090103          	lb	sp,0(s2)
    retval = ((c >= '0') & (c <= '9')) ? 1 : 0;
    21a4:	0100                	addi	s0,sp,128
    21a6:	1405                	addi	s0,s0,-31
    21a8:	0306                	slli	t1,t1,0x1
    21aa:	0900                	addi	s0,sp,144
    21ac:	0000                	unimp
    21ae:	0501                	addi	a0,a0,0
                    transition_count[CORE_INVALID]++;
    21b0:	0609                	addi	a2,a2,2
    21b2:	00090103          	lb	sp,0(s2)
    21b6:	0100                	addi	s0,sp,128
                    state = CORE_INVALID;
    21b8:	00090103          	lb	sp,0(s2)
                    transition_count[CORE_INVALID]++;
    21bc:	0100                	addi	s0,sp,128
    21be:	0b05                	addi	s6,s6,1
    21c0:	0306                	slli	t1,t1,0x1
    21c2:	0000097b          	0x97b
    21c6:	0501                	addi	a0,a0,0
    for (; *str && state != CORE_INVALID; str++)
    21c8:	0605                	addi	a2,a2,1
    21ca:	00090703          	lb	a4,0(s2)
        if (NEXT_SYMBOL == ',') /* end of this input */
    21ce:	0100                	addi	s0,sp,128
    21d0:	0105                	addi	sp,sp,1
    21d2:	0306                	slli	t1,t1,0x1
    for (; *str && state != CORE_INVALID; str++)
    21d4:	0901                	addi	s2,s2,0
    21d6:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    21d8:	0901                	addi	s2,s2,0
    21da:	0000                	unimp
    21dc:	0100                	addi	s0,sp,128
    21de:	0501                	addi	a0,a0,0
    21e0:	0001                	nop
    21e2:	0205                	addi	tp,tp,1
    for (; *str && state != CORE_INVALID; str++)
    21e4:	0000                	unimp
    21e6:	0000                	unimp
        if (NEXT_SYMBOL == ',') /* end of this input */
    21e8:	0103f403          	0x103f403
    21ec:	0505                	addi	a0,a0,1
    21ee:	00090103          	lb	sp,0(s2)
    for (; *str && state != CORE_INVALID; str++)
    21f2:	0100                	addi	s0,sp,128
        if (NEXT_SYMBOL == ',') /* end of this input */
    21f4:	00090103          	lb	sp,0(s2)
    21f8:	0100                	addi	s0,sp,128
    21fa:	00090203          	lb	tp,0(s2)
    21fe:	0100                	addi	s0,sp,128
                transition_count[CORE_START]++;
    2200:	00090203          	lb	tp,0(s2)
    for (; *str && state != CORE_INVALID; str++)
    2204:	0100                	addi	s0,sp,128
    2206:	0905                	addi	s2,s2,1
    2208:	00090203          	lb	tp,0(s2)
        if (NEXT_SYMBOL == ',') /* end of this input */
    220c:	0100                	addi	s0,sp,128
    220e:	00090103          	lb	sp,0(s2)
    2212:	0100                	addi	s0,sp,128
    2214:	00090103          	lb	sp,0(s2)
    2218:	0100                	addi	s0,sp,128
    221a:	00090203          	lb	tp,0(s2)
                    transition_count[CORE_S1]++;
    221e:	0100                	addi	s0,sp,128
    for (; *str && state != CORE_INVALID; str++)
    2220:	00090203          	lb	tp,0(s2)
    2224:	0100                	addi	s0,sp,128
    2226:	0f05                	addi	t5,t5,1
        if (NEXT_SYMBOL == ',') /* end of this input */
    2228:	0306                	slli	t1,t1,0x1
    222a:	0900                	addi	s0,sp,144
    222c:	0000                	unimp
    222e:	0501                	addi	a0,a0,0
    2230:	0301                	addi	t1,t1,0
    2232:	0972                	slli	s2,s2,0x1c
    for (; *str && state != CORE_INVALID; str++)
    2234:	0000                	unimp
    2236:	0501                	addi	a0,a0,0
                    state = CORE_FLOAT;
    2238:	030c                	addi	a1,sp,384
    223a:	0904                	addi	s1,sp,144
    223c:	0000                	unimp
    223e:	0301                	addi	t1,t1,0
        if (NEXT_SYMBOL == ',') /* end of this input */
    2240:	00d1                	addi	ra,ra,20
    2242:	0009                	c.nop	2
            break;
    2244:	0100                	addi	s0,sp,128
    2246:	097faf03          	lw	t5,151(t6)
    for (; *str && state != CORE_INVALID; str++)
    224a:	0000                	unimp
    224c:	0501                	addi	a0,a0,0
    224e:	0311                	addi	t1,t1,4
    2250:	0908                	addi	a0,sp,144
    2252:	0000                	unimp
                    state = CORE_EXPONENT;
    2254:	0501                	addi	a0,a0,0
    2256:	030e                	slli	t1,t1,0x3
    2258:	097e                	slli	s2,s2,0x1f
    225a:	0000                	unimp
    for (; *str && state != CORE_INVALID; str++)
    225c:	0301                	addi	t1,t1,0
    225e:	097f                	0x97f
                    state = CORE_S2;
    2260:	0000                	unimp
    2262:	0501                	addi	a0,a0,0
    2264:	060d                	addi	a2,a2,3
    2266:	00090703          	lb	a4,0(s2)
    for (; *str && state != CORE_INVALID; str++)
    226a:	0100                	addi	s0,sp,128
    enum CORE_STATE state = CORE_START;
    226c:	1405                	addi	s0,s0,-31
    226e:	0306                	slli	t1,t1,0x1
    2270:	0900                	addi	s0,sp,144
    2272:	0000                	unimp
                    state = CORE_S1;
    2274:	0501                	addi	a0,a0,0
    2276:	060d                	addi	a2,a2,3
    2278:	00090203          	lb	tp,0(s2)
        if (NEXT_SYMBOL == ',') /* end of this input */
    227c:	0100                	addi	s0,sp,128
    227e:	00090103          	lb	sp,0(s2)
    2282:	0100                	addi	s0,sp,128
    2284:	00090103          	lb	sp,0(s2)
    for (; *str && state != CORE_INVALID; str++)
    2288:	0100                	addi	s0,sp,128
    228a:	1405                	addi	s0,s0,-31
                    state = CORE_FLOAT;
    228c:	0306                	slli	t1,t1,0x1
    228e:	097c                	addi	a5,sp,156
    2290:	0000                	unimp
    2292:	0501                	addi	a0,a0,0
        if (NEXT_SYMBOL == ',') /* end of this input */
    2294:	09030313          	addi	t1,t1,144
    2298:	0000                	unimp
    229a:	0501                	addi	a0,a0,0
    229c:	0611                	addi	a2,a2,4
    229e:	00090303          	lb	t1,0(s2)
{
    22a2:	0100                	addi	s0,sp,128
    22a4:	1305                	addi	t1,t1,-31
    22a6:	0306                	slli	t1,t1,0x1
    22a8:	0901                	addi	s2,s2,0
    22aa:	0000                	unimp
    22ac:	0501                	addi	a0,a0,0
    22ae:	0316                	slli	t1,t1,0x5
    22b0:	097f                	0x97f
    22b2:	0000                	unimp
    22b4:	0501                	addi	a0,a0,0
    22b6:	0611                	addi	a2,a2,4
    22b8:	00090103          	lb	sp,0(s2)
    22bc:	0100                	addi	s0,sp,128
    22be:	00090103          	lb	sp,0(s2)
    22c2:	0100                	addi	s0,sp,128
    22c4:	1405                	addi	s0,s0,-31
    22c6:	0306                	slli	t1,t1,0x1
    22c8:	0900                	addi	s0,sp,144
    22ca:	0000                	unimp
    while (*p != 0)
    22cc:	0501                	addi	a0,a0,0
    22ce:	000d                	c.nop	3
    22d0:	0402                	c.slli64	s0
    22d2:	0301                	addi	t1,t1,0
    22d4:	097c                	addi	a5,sp,156
    22d6:	0000                	unimp
    ee_u8 *p = memblock;
    22d8:	0501                	addi	a0,a0,0
    22da:	031a                	slli	t1,t1,0x6
    for (i = 0; i < NUM_CORE_STATES; i++)
    22dc:	0935                	addi	s2,s2,13
    22de:	0000                	unimp
    22e0:	0501                	addi	a0,a0,0
    22e2:	09570313          	addi	t1,a4,149 # b095 <_data_lma+0xa7d>
    22e6:	0000                	unimp
    22e8:	0501                	addi	a0,a0,0
    22ea:	0611                	addi	a2,a2,4
    22ec:	00090403          	lb	s0,0(s2)
    22f0:	0100                	addi	s0,sp,128
    22f2:	1605                	addi	a2,a2,-31
    22f4:	00090703          	lb	a4,0(s2)
    22f8:	0100                	addi	s0,sp,128
    22fa:	1905                	addi	s2,s2,-31
    22fc:	0306                	slli	t1,t1,0x1
    22fe:	0900                	addi	s0,sp,144
    2300:	0000                	unimp
    2302:	0501                	addi	a0,a0,0
    2304:	0025                	c.nop	9
    2306:	0402                	c.slli64	s0
    2308:	0301                	addi	t1,t1,0
    230a:	0900                	addi	s0,sp,144
    230c:	0000                	unimp
    230e:	0501                	addi	a0,a0,0
    2310:	0616                	slli	a2,a2,0x5
    2312:	00090703          	lb	a4,0(s2)
    2316:	0100                	addi	s0,sp,128
{
    2318:	1a05                	addi	s4,s4,-31
    231a:	0306                	slli	t1,t1,0x1
    231c:	0900                	addi	s0,sp,144
    231e:	0000                	unimp
    2320:	0501                	addi	a0,a0,0
    2322:	0319                	addi	t1,t1,6
    2324:	0900                	addi	s0,sp,144
    2326:	0000                	unimp
    2328:	0501                	addi	a0,a0,0
    232a:	0615                	addi	a2,a2,5
    while (*p != 0)
    232c:	00090b03          	lb	s6,0(s2)
    2330:	0100                	addi	s0,sp,128
    2332:	00090103          	lb	sp,0(s2)
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    2336:	0100                	addi	s0,sp,128
    2338:	00090103          	lb	sp,0(s2)
    233c:	0100                	addi	s0,sp,128
    233e:	1a05                	addi	s4,s4,-31
    2340:	0306                	slli	t1,t1,0x1
    2342:	0900                	addi	s0,sp,144
        final_counts[fstate]++;
    2344:	0000                	unimp
    2346:	0501                	addi	a0,a0,0
    2348:	097f0317          	auipc	t1,0x97f0
    234c:	0000                	unimp
    234e:	0501                	addi	a0,a0,0
    while (*p != 0)
    2350:	031a                	slli	t1,t1,0x6
    2352:	0901                	addi	s2,s2,0
        final_counts[fstate]++;
    2354:	0000                	unimp
    2356:	0501                	addi	a0,a0,0
    while (*p != 0)
    2358:	0611                	addi	a2,a2,4
    235a:	00090403          	lb	s0,0(s2)
        final_counts[fstate]++;
    235e:	0100                	addi	s0,sp,128
    2360:	1405                	addi	s0,s0,-31
    2362:	0306                	slli	t1,t1,0x1
    while (*p != 0)
    2364:	0900                	addi	s0,sp,144
    2366:	0000                	unimp
    p = memblock;
    2368:	0501                	addi	a0,a0,0
    236a:	0615                	addi	a2,a2,5
    while (p < (memblock + blksize))
    236c:	00090203          	lb	tp,0(s2)
    2370:	0100                	addi	s0,sp,128
    2372:	2005                	jal	2392 <core_bench_state+0xf2>
    2374:	0306                	slli	t1,t1,0x1
    2376:	0900                	addi	s0,sp,144
        if (*p != ',')
    2378:	0000                	unimp
    237a:	0501                	addi	a0,a0,0
{
    237c:	031a                	slli	t1,t1,0x6
    237e:	0904                	addi	s1,sp,144
            *p ^= (ee_u8)seed1;
    2380:	0000                	unimp
    2382:	0501                	addi	a0,a0,0
        if (*p != ',')
    2384:	09570313          	addi	t1,a4,149
            *p ^= (ee_u8)seed1;
    2388:	0000                	unimp
    238a:	0501                	addi	a0,a0,0
        p += step;
    238c:	001e                	c.slli	zero,0x7
    238e:	0402                	c.slli64	s0
    2390:	0301                	addi	t1,t1,0
    2392:	0900                	addi	s0,sp,144
    2394:	0000                	unimp
    2396:	0501                	addi	a0,a0,0
    while (p < (memblock + blksize))
    2398:	002c                	addi	a1,sp,8
    239a:	0402                	c.slli64	s0
    239c:	0302                	c.slli64	t1
    239e:	0900                	addi	s0,sp,144
            *p ^= (ee_u8)seed1;
    23a0:	0000                	unimp
    23a2:	0501                	addi	a0,a0,0
        if (*p != ',')
    23a4:	0611                	addi	a2,a2,4
    23a6:	00090403          	lb	s0,0(s2)
        p += step;
    23aa:	0100                	addi	s0,sp,128
    23ac:	1505                	addi	a0,a0,-31
    23ae:	00090303          	lb	t1,0(s2)
    while (p < (memblock + blksize))
    23b2:	0100                	addi	s0,sp,128
    while (*p != 0)
    23b4:	00090103          	lb	sp,0(s2)
    p = memblock;
    23b8:	0100                	addi	s0,sp,128
    23ba:	00090103          	lb	sp,0(s2)
    while (*p != 0)
    23be:	0100                	addi	s0,sp,128
    23c0:	1a05                	addi	s4,s4,-31
    23c2:	0306                	slli	t1,t1,0x1
        enum CORE_STATE fstate = core_state_transition(&p, track_counts);
    23c4:	0900                	addi	s0,sp,144
    23c6:	0000                	unimp
    23c8:	0501                	addi	a0,a0,0
    23ca:	097f0317          	auipc	t1,0x97f0
    23ce:	0000                	unimp
    23d0:	0501                	addi	a0,a0,0
    23d2:	0611                	addi	a2,a2,4
        final_counts[fstate]++;
    23d4:	00091b03          	lh	s6,0(s2)
    23d8:	0100                	addi	s0,sp,128
    23da:	1405                	addi	s0,s0,-31
    23dc:	0306                	slli	t1,t1,0x1
    23de:	0900                	addi	s0,sp,144
    while (*p != 0)
    23e0:	0000                	unimp
    23e2:	0501                	addi	a0,a0,0
        final_counts[fstate]++;
    23e4:	031a                	slli	t1,t1,0x6
    23e6:	0906                	slli	s2,s2,0x1
    while (*p != 0)
    23e8:	0000                	unimp
    23ea:	0501                	addi	a0,a0,0
        final_counts[fstate]++;
    23ec:	0615                	addi	a2,a2,5
    23ee:	00096d03          	0x96d03
    23f2:	0100                	addi	s0,sp,128
    while (*p != 0)
    23f4:	00090103          	lb	sp,0(s2)
    p = memblock;
    23f8:	0100                	addi	s0,sp,128
    23fa:	00090103          	lb	sp,0(s2)
    while (p < (memblock + blksize))
    23fe:	0100                	addi	s0,sp,128
        if (*p != ',')
    2400:	1a05                	addi	s4,s4,-31
    2402:	0306                	slli	t1,t1,0x1
    2404:	0900                	addi	s0,sp,144
    2406:	0000                	unimp
            *p ^= (ee_u8)seed2;
    2408:	0501                	addi	a0,a0,0
    240a:	097f0317          	auipc	t1,0x97f0
        if (*p != ',')
    240e:	0000                	unimp
            *p ^= (ee_u8)seed2;
    2410:	0501                	addi	a0,a0,0
    2412:	0957030f          	0x957030f
        p += step;
    2416:	0000                	unimp
    2418:	0501                	addi	a0,a0,0
    241a:	0609                	addi	a2,a2,2
    241c:	0900c403          	lbu	s0,144(ra)
    while (p < (memblock + blksize))
    2420:	0000                	unimp
    2422:	0501                	addi	a0,a0,0
    2424:	0614                	addi	a3,sp,768
    2426:	00090003          	lb	zero,0(s2)
    242a:	0100                	addi	s0,sp,128
        crc = crcu32(final_counts[i], crc);
    242c:	0905                	addi	s2,s2,1
    242e:	0306                	slli	t1,t1,0x1
    2430:	00000903          	lb	s2,0(zero) # 0 <_start>
    2434:	0501                	addi	a0,a0,0
    2436:	060c                	addi	a1,sp,768
    2438:	00090003          	lb	zero,0(s2)
    243c:	0100                	addi	s0,sp,128
    243e:	0905                	addi	s2,s2,1
        crc = crcu32(track_counts[i], crc);
    2440:	0306                	slli	t1,t1,0x1
    2442:	0904                	addi	s1,sp,144
    2444:	0000                	unimp
    2446:	0501                	addi	a0,a0,0
    2448:	0610                	addi	a2,sp,768
    244a:	00090003          	lb	zero,0(s2)
    244e:	0100                	addi	s0,sp,128
    2450:	0505                	addi	a0,a0,1
    2452:	0306                	slli	t1,t1,0x1
    2454:	7fad                	lui	t6,0xfffeb
    2456:	0009                	c.nop	2
    for (i = 0; i < NUM_CORE_STATES; i++)
    2458:	0100                	addi	s0,sp,128
    245a:	0905                	addi	s2,s2,1
}
    245c:	00090203          	lb	tp,0(s2)
    2460:	0100                	addi	s0,sp,128
    2462:	00090103          	lb	sp,0(s2)
    2466:	0100                	addi	s0,sp,128
    2468:	00090103          	lb	sp,0(s2)
    246c:	0100                	addi	s0,sp,128
    246e:	00090203          	lb	tp,0(s2)
    2472:	0100                	addi	s0,sp,128
    2474:	00090203          	lb	tp,0(s2)
    2478:	0100                	addi	s0,sp,128
    247a:	0f05                	addi	t5,t5,1
    247c:	0306                	slli	t1,t1,0x1
    247e:	0900                	addi	s0,sp,144
    2480:	0000                	unimp
    2482:	0501                	addi	a0,a0,0
    2484:	0609                	addi	a2,a2,2
    2486:	0900c403          	lbu	s0,144(ra)
        p += step;
    248a:	0000                	unimp
    248c:	0501                	addi	a0,a0,0
    248e:	0614                	addi	a3,sp,768
    while (p < (memblock + blksize))
    2490:	00090003          	lb	zero,0(s2)
    2494:	0100                	addi	s0,sp,128
    2496:	0105                	addi	sp,sp,1
    while (p < (memblock + blksize))
    2498:	00090c03          	lb	s8,0(s2)
    249c:	0100                	addi	s0,sp,128
    249e:	0905                	addi	s2,s2,1
    24a0:	0306                	slli	t1,t1,0x1
    24a2:	0974                	addi	a3,sp,156
    while (*p != 0)
    24a4:	0000                	unimp
    24a6:	0501                	addi	a0,a0,0
    24a8:	0614                	addi	a3,sp,768
    24aa:	00090003          	lb	zero,0(s2)
    switch (i)
    24ae:	0100                	addi	s0,sp,128
    24b0:	0009                	c.nop	2
    24b2:	0000                	unimp
    24b4:	0101                	addi	sp,sp,0
    24b6:	1144                	addi	s1,sp,164
    24b8:	0000                	unimp
    24ba:	01bc0003          	lb	zero,27(s8)
    24be:	0000                	unimp
    24c0:	0101                	addi	sp,sp,0
    24c2:	000d0efb          	0xd0efb
    24c6:	0101                	addi	sp,sp,0
    24c8:	0101                	addi	sp,sp,0
    24ca:	0000                	unimp
            retval = seed5_volatile;
    24cc:	0100                	addi	s0,sp,128
    24ce:	0000                	unimp
    24d0:	2e01                	jal	27e0 <crcu32+0x50>
    24d2:	6372732f          	0x6372732f
            break;
    24d6:	726f632f          	0x726f632f
            retval = seed1_volatile;
    24da:	6d65                	lui	s10,0x19
    24dc:	7261                	lui	tp,0xffff8
    24de:	3a65006b          	0x3a65006b
            break;
    24e2:	705c                	flw	fa5,36(s0)
            retval = seed2_volatile;
    24e4:	6f72                	flw	ft10,28(sp)
    24e6:	6d617267          	0x6d617267
    24ea:	6620                	flw	fs0,72(a2)
            break;
    24ec:	6c69                	lui	s8,0x1a
    24ee:	7365                	lui	t1,0xffff9
            retval = seed3_volatile;
    24f0:	2820                	fld	fs0,80(s0)
    24f2:	3878                	fld	fa4,240(s0)
    24f4:	2936                	fld	fs2,328(sp)
    24f6:	785c                	flw	fa5,52(s0)
            break;
    24f8:	6170                	flw	fa2,68(a0)
    24fa:	722d6b63          	bltu	s10,sp,2c30 <crcu32+0x4a0>
            retval = seed4_volatile;
    24fe:	7369                	lui	t1,0xffffa
    2500:	6e2d7663          	bgeu	s10,sp,2bec <crcu32+0x45c>
            break;
    2504:	2d656e6f          	jal	t3,587da <_data_lma+0x4e1c2>
            retval = 0;
    2508:	6d65                	lui	s10,0x19
    250a:	6562                	flw	fa0,24(sp)
}
    250c:	2d64                	fld	fs1,216(a0)
    250e:	2d636367          	0x2d636367
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2512:	2e38                	fld	fa4,88(a2)
    crc = crcu8((ee_u8)(newval), crc);
    2514:	2d302e33          	0x2d302e33
        if (x16 == 1)
    2518:	2e32                	fld	ft8,264(sp)
    251a:	696c5c33          	0x696c5c33
        data >>= 1;
    251e:	5c62                	lw	s8,56(sp)
        if (x16 == 1)
    2520:	5c636367          	0x5c636367
    2524:	6972                	flw	fs2,28(sp)
    2526:	2d766373          	csrrsi	t1,0x2d7,12
            crc |= 0x8000;
    252a:	6f6e                	flw	ft10,216(sp)
    252c:	656e                	flw	fa0,216(sp)
    252e:	652d                	lui	a0,0xb
    2530:	626d                	lui	tp,0x1b
    2532:	6465                	lui	s0,0x19
    2534:	385c                	fld	fa5,176(s0)
    2536:	332e                	fld	ft6,232(sp)
    2538:	302e                	fld	ft0,232(sp)
    253a:	695c                	flw	fa5,20(a0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    253c:	636e                	flw	ft6,216(sp)
    253e:	756c                	flw	fa1,108(a0)
        if (x16 == 1)
    2540:	6564                	flw	fs1,76(a0)
    2542:	6500                	flw	fs0,8(a0)
    2544:	5c3a                	lw	s8,172(sp)
    2546:	7270                	flw	fa2,100(a2)
        data >>= 1;
    2548:	6172676f          	jal	a4,2935e <_data_lma+0x1ed46>
        if (x16 == 1)
    254c:	206d                	jal	25f6 <crcu16+0xe6>
    254e:	6966                	flw	fs2,88(sp)
            crc |= 0x8000;
    2550:	656c                	flw	fa1,76(a0)
    2552:	78282073          	csrs	0x782,a6
    2556:	3638                	fld	fa4,104(a2)
    2558:	5c29                	li	s8,-22
    255a:	7078                	flw	fa4,100(s0)
    255c:	6361                	lui	t1,0x18
    255e:	69722d6b          	0x69722d6b
    2562:	2d766373          	csrrsi	t1,0x2d7,12
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2566:	6f6e                	flw	ft10,216(sp)
        if (x16 == 1)
    2568:	656e                	flw	fa0,216(sp)
    256a:	652d                	lui	a0,0xb
        data >>= 1;
    256c:	626d                	lui	tp,0x1b
    256e:	6465                	lui	s0,0x19
        if (x16 == 1)
    2570:	672d                	lui	a4,0xb
    2572:	382d6363          	bltu	s10,sp,28f8 <crcu32+0x168>
    2576:	332e                	fld	ft6,232(sp)
            crc |= 0x8000;
    2578:	302e                	fld	ft0,232(sp)
    257a:	322d                	jal	1ea4 <core_init_state+0xf0>
    257c:	332e                	fld	ft6,232(sp)
    257e:	725c                	flw	fa5,36(a2)
    2580:	7369                	lui	t1,0xffffa
    2582:	6e2d7663          	bgeu	s10,sp,2c6e <crcu32+0x4de>
    2586:	2d656e6f          	jal	t3,5885c <_data_lma+0x4e244>
    258a:	6d65                	lui	s10,0x19
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    258c:	6562                	flw	fa0,24(sp)
    258e:	5c64                	lw	s1,124(s0)
        if (x16 == 1)
    2590:	6e69                	lui	t3,0x1a
    2592:	64756c63          	bltu	a0,t2,2bea <crcu32+0x45a>
        data >>= 1;
    2596:	5c65                	li	s8,-7
        if (x16 == 1)
    2598:	00737973          	csrrci	s2,0x7,6
    259c:	3a65                	jal	1f54 <core_init_state+0x1a0>
    259e:	705c                	flw	fa5,36(s0)
            crc |= 0x8000;
    25a0:	6f72                	flw	ft10,28(sp)
    25a2:	6d617267          	0x6d617267
    25a6:	6620                	flw	fs0,72(a2)
    25a8:	6c69                	lui	s8,0x1a
    25aa:	7365                	lui	t1,0xffff9
    25ac:	2820                	fld	fs0,80(s0)
    25ae:	3878                	fld	fa4,240(s0)
    25b0:	2936                	fld	fs2,328(sp)
    25b2:	785c                	flw	fa5,52(s0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    25b4:	6170                	flw	fa2,68(a0)
    25b6:	722d6b63          	bltu	s10,sp,2cec <crc16+0x4c>
        if (x16 == 1)
    25ba:	7369                	lui	t1,0xffffa
        data >>= 1;
    25bc:	6e2d7663          	bgeu	s10,sp,2ca8 <crc16+0x8>
        if (x16 == 1)
    25c0:	2d656e6f          	jal	t3,58896 <_data_lma+0x4e27e>
    25c4:	6d65                	lui	s10,0x19
    25c6:	6562                	flw	fa0,24(sp)
            crc |= 0x8000;
    25c8:	2d64                	fld	fs1,216(a0)
    25ca:	2d636367          	0x2d636367
    25ce:	2e38                	fld	fa4,88(a2)
    25d0:	2d302e33          	0x2d302e33
    25d4:	2e32                	fld	ft8,264(sp)
    25d6:	69725c33          	0x69725c33
    25da:	2d766373          	csrrsi	t1,0x2d7,12
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    25de:	6f6e                	flw	ft10,216(sp)
        if (x16 == 1)
    25e0:	656e                	flw	fa0,216(sp)
    25e2:	652d                	lui	a0,0xb
        data >>= 1;
    25e4:	626d                	lui	tp,0x1b
    25e6:	6465                	lui	s0,0x19
        if (x16 == 1)
    25e8:	695c                	flw	fa5,20(a0)
    25ea:	636e                	flw	ft6,216(sp)
    25ec:	756c                	flw	fa1,108(a0)
    25ee:	6564                	flw	fs1,76(a0)
            crc |= 0x8000;
    25f0:	0000                	unimp
    25f2:	65726f63          	bltu	tp,s7,2c50 <crcu32+0x4c0>
    25f6:	6d5f 6961 2e6e      	0x2e6e69616d5f
    25fc:	00010063          	beqz	sp,25fc <crcu16+0xec>
    2600:	7300                	flw	fs0,32(a4)
    2602:	6474                	flw	fa3,76(s0)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2604:	6564                	flw	fs1,76(a0)
    2606:	2e66                	fld	ft8,88(sp)
        if (x16 == 1)
    2608:	0068                	addi	a0,sp,12
    260a:	0002                	c.slli64	zero
        data >>= 1;
    260c:	5f00                	lw	s0,56(a4)
    260e:	7974                	flw	fa3,116(a0)
        if (x16 == 1)
    2610:	6570                	flw	fa2,76(a0)
    2612:	00682e73          	csrrs	t3,0x6,a6
    2616:	72000003          	lb	zero,1824(zero) # 720 <main+0x6a8>
            crc |= 0x8000;
    261a:	6565                	lui	a0,0x19
    261c:	746e                	flw	fs0,248(sp)
    261e:	682e                	flw	fa6,200(sp)
    2620:	0300                	addi	s0,sp,384
    2622:	0000                	unimp
    2624:	6f6c                	flw	fa1,92(a4)
    2626:	682e6b63          	bltu	t3,sp,2cbc <crc16+0x1c>
    262a:	0300                	addi	s0,sp,384
        if (x16 == 1)
    262c:	0000                	unimp
    262e:	7974                	flw	fa3,116(a0)
    2630:	6570                	flw	fa2,76(a0)
    2632:	00682e73          	csrrs	t3,0x6,a6
    2636:	74000003          	lb	zero,1856(zero) # 740 <main+0x6c8>
            crc |= 0x8000;
    263a:	6d69                	lui	s10,0x1a
    263c:	2e65                	jal	29f4 <crcu32+0x264>
    263e:	0068                	addi	a0,sp,12
    2640:	0004                	0x4
    2642:	6300                	flw	fs0,0(a4)
    2644:	5f65726f          	jal	tp,59c3a <_data_lma+0x4f622>
    2648:	6f70                	flw	fa2,92(a4)
    264a:	7472                	flw	fs0,60(sp)
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    264c:	656d                	lui	a0,0x1b
    264e:	682e                	flw	fa6,200(sp)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2650:	0100                	addi	s0,sp,128
    2652:	0000                	unimp
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2654:	65726f63          	bltu	tp,s7,2cb2 <crc16+0x12>
        if (x16 == 1)
    2658:	616d                	addi	sp,sp,240
    265a:	6b72                	flw	fs6,28(sp)
        data >>= 1;
    265c:	682e                	flw	fa6,200(sp)
    265e:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2660:	0000                	unimp
    2662:	69647473          	csrrci	s0,0x696,8
    2666:	00682e6f          	jal	t3,8466c <_data_lma+0x7a054>
            crc |= 0x8000;
    266a:	0004                	0x4
    266c:	3c00                	fld	fs0,56(s0)
    266e:	7562                	flw	fa0,56(sp)
    2670:	6c69                	lui	s8,0x1a
    2672:	2d74                	fld	fa3,216(a0)
    2674:	6e69                	lui	t3,0x1a
    2676:	003e                	c.slli	zero,0xf
    2678:	0000                	unimp
    267a:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    267c:	0105                	addi	sp,sp,1
    267e:	0500                	addi	s0,sp,640
        if (x16 == 1)
    2680:	5c02                	lw	s8,32(sp)
    2682:	0015                	c.nop	5
        data >>= 1;
    2684:	0300                	addi	s0,sp,384
    2686:	0115                	addi	sp,sp,5
        if (x16 == 1)
    2688:	0505                	addi	a0,a0,1
    268a:	00090103          	lb	sp,0(s2)
    268e:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2690:	00090103          	lb	sp,0(s2)
    2694:	0100                	addi	s0,sp,128
    2696:	00090103          	lb	sp,0(s2)
    269a:	0100                	addi	s0,sp,128
    269c:	0105                	addi	sp,sp,1
    269e:	0306                	slli	t1,t1,0x1
    26a0:	097d                	addi	s2,s2,31
    26a2:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    26a4:	0501                	addi	a0,a0,0
    26a6:	09040313          	addi	t1,s0,144 # 19090 <_data_lma+0xea78>
        if (x16 == 1)
    26aa:	0008                	0x8
        data >>= 1;
    26ac:	0501                	addi	a0,a0,0
    26ae:	0301                	addi	t1,t1,0
        if (x16 == 1)
    26b0:	097c                	addi	a5,sp,156
    26b2:	0004                	0x4
    26b4:	0501                	addi	a0,a0,0
    26b6:	031e                	slli	t1,t1,0x7
            crc |= 0x8000;
    26b8:	0905                	addi	s2,s2,1
    26ba:	000c                	0xc
    26bc:	0501                	addi	a0,a0,0
    26be:	0301                	addi	t1,t1,0
    26c0:	0008097b          	0x8097b
    26c4:	0501                	addi	a0,a0,0
    26c6:	0605                	addi	a2,a2,1
    26c8:	04090403          	lb	s0,64(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    26cc:	0100                	addi	s0,sp,128
    26ce:	00090103          	lb	sp,0(s2)
        if (x16 == 1)
    26d2:	0100                	addi	s0,sp,128
        data >>= 1;
    26d4:	00090103          	lb	sp,0(s2)
        if (x16 == 1)
    26d8:	0100                	addi	s0,sp,128
    26da:	00090103          	lb	sp,0(s2)
    26de:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    26e0:	00090103          	lb	sp,0(s2)
    26e4:	0100                	addi	s0,sp,128
    26e6:	00090203          	lb	tp,0(s2)
    26ea:	0100                	addi	s0,sp,128
    26ec:	0c05                	addi	s8,s8,1
    26ee:	0306                	slli	t1,t1,0x1
    26f0:	0900                	addi	s0,sp,144
    26f2:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    26f4:	0501                	addi	a0,a0,0
    26f6:	0305                	addi	t1,t1,1
        if (x16 == 1)
    26f8:	0900                	addi	s0,sp,144
    26fa:	0004                	0x4
        data >>= 1;
    26fc:	0501                	addi	a0,a0,0
    26fe:	0609                	addi	a2,a2,2
        if (x16 == 1)
    2700:	04090203          	lb	tp,64(s2)
    2704:	0100                	addi	s0,sp,128
    2706:	1405                	addi	s0,s0,-31
            crc |= 0x8000;
    2708:	0306                	slli	t1,t1,0x1
    270a:	0900                	addi	s0,sp,144
    270c:	0000                	unimp
    270e:	0501                	addi	a0,a0,0
    2710:	0609                	addi	a2,a2,2
    2712:	10090103          	lb	sp,256(s2)
    2716:	0100                	addi	s0,sp,128
    2718:	1405                	addi	s0,s0,-31
    271a:	0306                	slli	t1,t1,0x1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    271c:	0900                	addi	s0,sp,144
    271e:	0000                	unimp
        if (x16 == 1)
    2720:	0501                	addi	a0,a0,0
    2722:	0312                	slli	t1,t1,0x4
        data >>= 1;
    2724:	0900                	addi	s0,sp,144
    2726:	000c                	0xc
        if (x16 == 1)
    2728:	0501                	addi	a0,a0,0
    272a:	0609                	addi	a2,a2,2
    272c:	04090103          	lb	sp,64(s2)
            crc |= 0x8000;
    2730:	0100                	addi	s0,sp,128
    2732:	1405                	addi	s0,s0,-31
    2734:	0306                	slli	t1,t1,0x1
    2736:	0900                	addi	s0,sp,144
    2738:	0000                	unimp
    273a:	0501                	addi	a0,a0,0
    273c:	0609                	addi	a2,a2,2
    273e:	10090103          	lb	sp,256(s2)
    2742:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2744:	1405                	addi	s0,s0,-31
    2746:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    2748:	0900                	addi	s0,sp,144
    274a:	0000                	unimp
        data >>= 1;
    274c:	0501                	addi	a0,a0,0
    274e:	0312                	slli	t1,t1,0x4
        if (x16 == 1)
    2750:	0900                	addi	s0,sp,144
    2752:	000c                	0xc
    2754:	0501                	addi	a0,a0,0
    2756:	0609                	addi	a2,a2,2
            crc |= 0x8000;
    2758:	04090103          	lb	sp,64(s2)
    275c:	0100                	addi	s0,sp,128
    275e:	0c05                	addi	s8,s8,1
    2760:	0306                	slli	t1,t1,0x1
    2762:	0900                	addi	s0,sp,144
    2764:	0000                	unimp
    2766:	0501                	addi	a0,a0,0
    2768:	0022                	c.slli	zero,0x8
    276a:	0402                	c.slli64	s0
        if (x16 == 1)
    276c:	0302                	c.slli64	t1
    276e:	097a                	slli	s2,s2,0x1e
    2770:	0004                	0x4
    2772:	0501                	addi	a0,a0,0
    2774:	0005                	c.nop	1
    2776:	0402                	c.slli64	s0
            crc |= 0x8000;
    2778:	0302                	c.slli64	t1
    277a:	0900                	addi	s0,sp,144
    277c:	0004                	0x4
    277e:	0601                	addi	a2,a2,0
    2780:	04090903          	lb	s2,64(s2)
    2784:	0100                	addi	s0,sp,128
    2786:	0105                	addi	sp,sp,1
    2788:	0306                	slli	t1,t1,0x1
    278a:	0901                	addi	s2,s2,0
}
    278c:	0000                	unimp
    278e:	0501                	addi	a0,a0,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2790:	060d                	addi	a2,a2,3
    2792:	1c097d03          	0x1c097d03
    crc = crcu8((ee_u8)(newval), crc);
    2796:	0100                	addi	s0,sp,128
    return crcu16((ee_u16)newval, crc);
    2798:	1a05                	addi	s4,s4,-31
    279a:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    279c:	0900                	addi	s0,sp,144
    279e:	0000                	unimp
    return crcu16((ee_u16)newval, crc);
    27a0:	0501                	addi	a0,a0,0
    27a2:	0305                	addi	t1,t1,1
        data >>= 1;
    27a4:	0979                	addi	s2,s2,30
    27a6:	0004                	0x4
        if (x16 == 1)
    27a8:	0501                	addi	a0,a0,0
    27aa:	0322                	slli	t1,t1,0x8
    27ac:	0900                	addi	s0,sp,144
    27ae:	0008                	0x8
            crc |= 0x8000;
    27b0:	0901                	addi	s2,s2,0
    27b2:	0008                	0x8
    27b4:	0100                	addi	s0,sp,128
    27b6:	0501                	addi	a0,a0,0
    27b8:	0001                	nop
    27ba:	0205                	addi	tp,tp,1
    27bc:	0078                	addi	a4,sp,12
    27be:	0000                	unimp
    27c0:	0100d403          	lhu	s0,16(ra)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27c4:	0505                	addi	a0,a0,1
    27c6:	00090203          	lb	tp,0(s2)
        if (x16 == 1)
    27ca:	0100                	addi	s0,sp,128
    27cc:	00090103          	lb	sp,0(s2)
        data >>= 1;
    27d0:	0100                	addi	s0,sp,128
    27d2:	00090103          	lb	sp,0(s2)
        if (x16 == 1)
    27d6:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    27d8:	00090103          	lb	sp,0(s2)
    27dc:	0100                	addi	s0,sp,128
    27de:	00090103          	lb	sp,0(s2)
    27e2:	0100                	addi	s0,sp,128
    27e4:	00090203          	lb	tp,0(s2)
    27e8:	0100                	addi	s0,sp,128
    27ea:	00090303          	lb	t1,0(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    27ee:	0100                	addi	s0,sp,128
        if (x16 == 1)
    27f0:	0105                	addi	sp,sp,1
    27f2:	0306                	slli	t1,t1,0x1
        data >>= 1;
    27f4:	0975                	addi	s2,s2,29
    27f6:	0000                	unimp
        if (x16 == 1)
    27f8:	0501                	addi	a0,a0,0
    27fa:	0305                	addi	t1,t1,1
    27fc:	0004090b          	0x4090b
            crc |= 0x8000;
    2800:	0501                	addi	a0,a0,0
    2802:	0301                	addi	t1,t1,0
    2804:	0975                	addi	s2,s2,29
    2806:	0004                	0x4
    2808:	0501                	addi	a0,a0,0
    280a:	0305                	addi	t1,t1,1
    280c:	003c090b          	0x3c090b
    2810:	0501                	addi	a0,a0,0
    2812:	0301                	addi	t1,t1,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2814:	0975                	addi	s2,s2,29
    2816:	0010                	0x10
        if (x16 == 1)
    2818:	0501                	addi	a0,a0,0
    281a:	0305                	addi	t1,t1,1
        data >>= 1;
    281c:	0004090b          	0x4090b
        if (x16 == 1)
    2820:	0601                	addi	a2,a2,0
    2822:	10090203          	lb	tp,256(s2)
    2826:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2828:	00090503          	lb	a0,0(s2)
    282c:	0100                	addi	s0,sp,128
    282e:	1d05                	addi	s10,s10,-31
    2830:	0306                	slli	t1,t1,0x1
    2832:	0900                	addi	s0,sp,144
    2834:	0000                	unimp
    2836:	0501                	addi	a0,a0,0
    2838:	0605                	addi	a2,a2,1
    283a:	10090103          	lb	sp,256(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    283e:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2840:	1d05                	addi	s10,s10,-31
    2842:	0306                	slli	t1,t1,0x1
        data >>= 1;
    2844:	0900                	addi	s0,sp,144
    2846:	0000                	unimp
        if (x16 == 1)
    2848:	0501                	addi	a0,a0,0
    284a:	0605                	addi	a2,a2,1
    284c:	10090103          	lb	sp,256(s2)
            crc |= 0x8000;
    2850:	0100                	addi	s0,sp,128
    2852:	1d05                	addi	s10,s10,-31
    2854:	0306                	slli	t1,t1,0x1
    2856:	0900                	addi	s0,sp,144
    2858:	0000                	unimp
    285a:	0501                	addi	a0,a0,0
    285c:	0605                	addi	a2,a2,1
    285e:	10090103          	lb	sp,256(s2)
    2862:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2864:	1d05                	addi	s10,s10,-31
    2866:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    2868:	0900                	addi	s0,sp,144
    286a:	0000                	unimp
        data >>= 1;
    286c:	0501                	addi	a0,a0,0
    286e:	0900031b          	0x900031b
        if (x16 == 1)
    2872:	000c                	0xc
    2874:	0501                	addi	a0,a0,0
    2876:	0605                	addi	a2,a2,1
            crc |= 0x8000;
    2878:	04090403          	lb	s0,64(s2)
    287c:	0100                	addi	s0,sp,128
    287e:	1805                	addi	a6,a6,-31
    2880:	0306                	slli	t1,t1,0x1
    2882:	0900                	addi	s0,sp,144
    2884:	0000                	unimp
    2886:	0501                	addi	a0,a0,0
    2888:	0605                	addi	a2,a2,1
    288a:	0c090103          	lb	sp,192(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    288e:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2890:	0805                	addi	a6,a6,1
    2892:	0306                	slli	t1,t1,0x1
        data >>= 1;
    2894:	0900                	addi	s0,sp,144
    2896:	0000                	unimp
        if (x16 == 1)
    2898:	0501                	addi	a0,a0,0
    289a:	0316                	slli	t1,t1,0x5
    289c:	097f                	0x97f
    289e:	0004                	0x4
            crc |= 0x8000;
    28a0:	0501                	addi	a0,a0,0
    28a2:	0605                	addi	a2,a2,1
    28a4:	04090603          	lb	a2,64(s2)
    28a8:	0100                	addi	s0,sp,128
    28aa:	2105                	jal	2cca <crc16+0x2a>
    28ac:	0306                	slli	t1,t1,0x1
    28ae:	0900                	addi	s0,sp,144
    28b0:	0000                	unimp
    28b2:	0501                	addi	a0,a0,0
        if (x16 == 1)
    28b4:	0308                	addi	a0,sp,384
    28b6:	0900                	addi	s0,sp,144
    28b8:	001c                	0x1c
    28ba:	0501                	addi	a0,a0,0
    28bc:	0605                	addi	a2,a2,1
    28be:	04090703          	lb	a4,64(s2)
            crc |= 0x8000;
    28c2:	0100                	addi	s0,sp,128
    28c4:	0805                	addi	a6,a6,1
    28c6:	0306                	slli	t1,t1,0x1
    28c8:	0900                	addi	s0,sp,144
    28ca:	0000                	unimp
    28cc:	0501                	addi	a0,a0,0
    28ce:	0309                	addi	t1,t1,2
    28d0:	0901                	addi	s2,s2,0
    28d2:	0008                	0x8
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    28d4:	0601                	addi	a2,a2,0
    28d6:	0c090203          	lb	tp,192(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    28da:	0100                	addi	s0,sp,128
        if (x16 == 1)
    28dc:	00090103          	lb	sp,0(s2)
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    28e0:	0100                	addi	s0,sp,128
    28e2:	1a05                	addi	s4,s4,-31
        data >>= 1;
    28e4:	0306                	slli	t1,t1,0x1
    28e6:	097f                	0x97f
        if (x16 == 1)
    28e8:	0000                	unimp
    28ea:	0501                	addi	a0,a0,0
    28ec:	0609                	addi	a2,a2,2
    28ee:	10090203          	lb	tp,256(s2)
            crc |= 0x8000;
    28f2:	0100                	addi	s0,sp,128
    28f4:	1a05                	addi	s4,s4,-31
    28f6:	0306                	slli	t1,t1,0x1
    28f8:	0900                	addi	s0,sp,144
    28fa:	0000                	unimp
    28fc:	0501                	addi	a0,a0,0
    28fe:	0605                	addi	a2,a2,1
    2900:	08091b03          	lh	s6,128(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2904:	0100                	addi	s0,sp,128
    2906:	2a05                	jal	2a36 <crcu32+0x2a6>
        if (x16 == 1)
    2908:	0306                	slli	t1,t1,0x1
    290a:	0000090f          	0x90f
        data >>= 1;
    290e:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2910:	031c                	addi	a5,sp,384
    2912:	0971                	addi	s2,s2,28
    2914:	0004                	0x4
    2916:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2918:	031e                	slli	t1,t1,0x7
    291a:	0014090f          	0x14090f
    291e:	0501                	addi	a0,a0,0
    2920:	031c                	addi	a5,sp,384
    2922:	0971                	addi	s2,s2,28
    2924:	0004                	0x4
    2926:	0501                	addi	a0,a0,0
    2928:	031e                	slli	t1,t1,0x7
    292a:	0004090f          	0x4090f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    292e:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2930:	0901031b          	0x901031b
        data >>= 1;
    2934:	0004                	0x4
    2936:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2938:	031c                	addi	a5,sp,384
    293a:	0970                	addi	a2,sp,156
    293c:	0004                	0x4
    293e:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2940:	0605                	addi	a2,a2,1
    2942:	08090103          	lb	sp,128(s2)
    2946:	0100                	addi	s0,sp,128
    2948:	00090103          	lb	sp,0(s2)
    294c:	0100                	addi	s0,sp,128
    294e:	00090103          	lb	sp,0(s2)
    2952:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2954:	00090103          	lb	sp,0(s2)
        if (x16 == 1)
    2958:	0100                	addi	s0,sp,128
    295a:	00090103          	lb	sp,0(s2)
        data >>= 1;
    295e:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2960:	1c05                	addi	s8,s8,-31
    2962:	0306                	slli	t1,t1,0x1
    2964:	0900                	addi	s0,sp,144
    2966:	0000                	unimp
            crc |= 0x8000;
    2968:	0501                	addi	a0,a0,0
    296a:	0605                	addi	a2,a2,1
    296c:	04090103          	lb	sp,64(s2)
    2970:	0100                	addi	s0,sp,128
    2972:	0905                	addi	s2,s2,1
    2974:	00090903          	lb	s2,0(s2)
    2978:	0100                	addi	s0,sp,128
    297a:	00090003          	lb	zero,0(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    297e:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2980:	1e05                	addi	t3,t3,-31
    2982:	0306                	slli	t1,t1,0x1
        data >>= 1;
    2984:	0900                	addi	s0,sp,144
    2986:	0000                	unimp
        if (x16 == 1)
    2988:	0501                	addi	a0,a0,0
    298a:	0901031b          	0x901031b
    298e:	0004                	0x4
            crc |= 0x8000;
    2990:	0501                	addi	a0,a0,0
    2992:	0609                	addi	a2,a2,2
    2994:	04097f03          	0x4097f03
    2998:	0100                	addi	s0,sp,128
    299a:	0c05                	addi	s8,s8,1
    299c:	0306                	slli	t1,t1,0x1
    299e:	0900                	addi	s0,sp,144
    29a0:	0000                	unimp
    29a2:	0501                	addi	a0,a0,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29a4:	060d                	addi	a2,a2,3
    29a6:	04090103          	lb	sp,64(s2)
        if (x16 == 1)
    29aa:	0100                	addi	s0,sp,128
        data >>= 1;
    29ac:	1b05                	addi	s6,s6,-31
    29ae:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    29b0:	0900                	addi	s0,sp,144
    29b2:	0000                	unimp
    29b4:	0501                	addi	a0,a0,0
    29b6:	0609                	addi	a2,a2,2
            crc |= 0x8000;
    29b8:	0c090303          	lb	t1,192(s2)
    29bc:	0100                	addi	s0,sp,128
    29be:	2b05                	jal	2eee <crc16+0x24e>
    29c0:	0306                	slli	t1,t1,0x1
    29c2:	0900                	addi	s0,sp,144
    29c4:	0000                	unimp
    29c6:	0501                	addi	a0,a0,0
    29c8:	0319                	addi	t1,t1,6
    29ca:	0900                	addi	s0,sp,144
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    29cc:	0008                	0x8
    29ce:	0501                	addi	a0,a0,0
        if (x16 == 1)
    29d0:	030c                	addi	a1,sp,384
    29d2:	0905                	addi	s2,s2,1
        data >>= 1;
    29d4:	0004                	0x4
    29d6:	0501                	addi	a0,a0,0
        if (x16 == 1)
    29d8:	0319                	addi	t1,t1,6
    29da:	0004097b          	0x4097b
    29de:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    29e0:	0609                	addi	a2,a2,2
    29e2:	04090403          	lb	s0,64(s2)
    29e6:	0100                	addi	s0,sp,128
    29e8:	00090103          	lb	sp,0(s2)
    29ec:	0100                	addi	s0,sp,128
    29ee:	0c05                	addi	s8,s8,1
    29f0:	0306                	slli	t1,t1,0x1
    29f2:	0900                	addi	s0,sp,144
        if (x16 == 1)
    29f4:	0000                	unimp
    29f6:	0501                	addi	a0,a0,0
    29f8:	0609                	addi	a2,a2,2
    29fa:	04097f03          	0x4097f03
    29fe:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2a00:	00090103          	lb	sp,0(s2)
    2a04:	0100                	addi	s0,sp,128
    2a06:	0c05                	addi	s8,s8,1
    2a08:	0306                	slli	t1,t1,0x1
    2a0a:	0900                	addi	s0,sp,144
    2a0c:	0000                	unimp
    2a0e:	0501                	addi	a0,a0,0
    2a10:	0609                	addi	a2,a2,2
    2a12:	04097f03          	0x4097f03
    crc = crc16((ee_s16)(newval >> 16), crc);
    2a16:	0100                	addi	s0,sp,128
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a18:	00090103          	lb	sp,0(s2)
    crc = crcu8((ee_u8)(newval), crc);
    2a1c:	0100                	addi	s0,sp,128
    2a1e:	0c05                	addi	s8,s8,1
    return crcu16((ee_u16)newval, crc);
    2a20:	0306                	slli	t1,t1,0x1
    2a22:	0900                	addi	s0,sp,144
        if (x16 == 1)
    2a24:	0000                	unimp
    2a26:	0501                	addi	a0,a0,0
    return crcu16((ee_u16)newval, crc);
    2a28:	0009                	c.nop	2
    2a2a:	0402                	c.slli64	s0
        data >>= 1;
    2a2c:	0602                	c.slli64	a2
    2a2e:	04090b03          	lb	s6,64(s2)
        if (x16 == 1)
    2a32:	0100                	addi	s0,sp,128
    2a34:	0c05                	addi	s8,s8,1
    2a36:	0200                	addi	s0,sp,256
            crc |= 0x8000;
    2a38:	0204                	addi	s1,sp,256
    2a3a:	0306                	slli	t1,t1,0x1
    2a3c:	0900                	addi	s0,sp,144
    2a3e:	0000                	unimp
    2a40:	0501                	addi	a0,a0,0
    2a42:	0609                	addi	a2,a2,2
    2a44:	04090503          	lb	a0,64(s2)
    2a48:	0100                	addi	s0,sp,128
    2a4a:	0c05                	addi	s8,s8,1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a4c:	0306                	slli	t1,t1,0x1
    2a4e:	0900                	addi	s0,sp,144
        if (x16 == 1)
    2a50:	0000                	unimp
    2a52:	0501                	addi	a0,a0,0
        data >>= 1;
    2a54:	0609                	addi	a2,a2,2
    2a56:	04090803          	lb	a6,64(s2)
        if (x16 == 1)
    2a5a:	0100                	addi	s0,sp,128
    2a5c:	1e05                	addi	t3,t3,-31
    2a5e:	0306                	slli	t1,t1,0x1
            crc |= 0x8000;
    2a60:	0900                	addi	s0,sp,144
    2a62:	0000                	unimp
    2a64:	0501                	addi	a0,a0,0
    2a66:	030c                	addi	a1,sp,384
    2a68:	0900                	addi	s0,sp,144
    2a6a:	0004                	0x4
    2a6c:	0501                	addi	a0,a0,0
    2a6e:	060d                	addi	a2,a2,3
    2a70:	04090203          	lb	tp,64(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a74:	0100                	addi	s0,sp,128
    2a76:	4705                	li	a4,1
        if (x16 == 1)
    2a78:	0306                	slli	t1,t1,0x1
    2a7a:	0901                	addi	s2,s2,0
        data >>= 1;
    2a7c:	0008                	0x8
    2a7e:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2a80:	030d                	addi	t1,t1,3
    2a82:	097f                	0x97f
    2a84:	0004                	0x4
    2a86:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2a88:	0605                	addi	a2,a2,1
    2a8a:	20090603          	lb	a2,512(s2)
    2a8e:	0100                	addi	s0,sp,128
    2a90:	1305                	addi	t1,t1,-31
    2a92:	0306                	slli	t1,t1,0x1
    2a94:	0900                	addi	s0,sp,144
    2a96:	0000                	unimp
    2a98:	0501                	addi	a0,a0,0
    2a9a:	0308                	addi	a0,sp,384
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2a9c:	0900                	addi	s0,sp,144
    2a9e:	0004                	0x4
        if (x16 == 1)
    2aa0:	0501                	addi	a0,a0,0
    2aa2:	0609                	addi	a2,a2,2
        data >>= 1;
    2aa4:	04090203          	lb	tp,64(s2)
        if (x16 == 1)
    2aa8:	0100                	addi	s0,sp,128
    2aaa:	00090103          	lb	sp,0(s2)
    2aae:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2ab0:	00090103          	lb	sp,0(s2)
    2ab4:	0100                	addi	s0,sp,128
    2ab6:	0f05                	addi	t5,t5,1
    2ab8:	0306                	slli	t1,t1,0x1
    2aba:	0901                	addi	s2,s2,0
    2abc:	0000                	unimp
    2abe:	0501                	addi	a0,a0,0
    2ac0:	031f 097f 000c      	0xc097f031f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ac6:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2ac8:	0609                	addi	a2,a2,2
    2aca:	08090103          	lb	sp,128(s2)
        data >>= 1;
    2ace:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2ad0:	1405                	addi	s0,s0,-31
    2ad2:	0306                	slli	t1,t1,0x1
    2ad4:	7eca                	flw	ft9,176(sp)
    2ad6:	0009                	c.nop	2
            crc |= 0x8000;
    2ad8:	0100                	addi	s0,sp,128
    2ada:	0d05                	addi	s10,s10,1
    2adc:	0306                	slli	t1,t1,0x1
    2ade:	01b8                	addi	a4,sp,200
    2ae0:	1809                	addi	a6,a6,-30
    2ae2:	0100                	addi	s0,sp,128
    2ae4:	2305                	jal	3004 <__udivdi3+0x68>
    2ae6:	0306                	slli	t1,t1,0x1
    2ae8:	0900                	addi	s0,sp,144
    2aea:	0000                	unimp
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2aec:	0501                	addi	a0,a0,0
    2aee:	030c                	addi	a1,sp,384
        if (x16 == 1)
    2af0:	7ec6                	flw	ft9,112(sp)
    2af2:	0409                	addi	s0,s0,2
        data >>= 1;
    2af4:	0100                	addi	s0,sp,128
    2af6:	2305                	jal	3016 <__udivdi3+0x7a>
        if (x16 == 1)
    2af8:	0901ba03          	0x901ba03
    2afc:	0004                	0x4
    2afe:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2b00:	060d                	addi	a2,a2,3
    2b02:	10090103          	lb	sp,256(s2)
    2b06:	0100                	addi	s0,sp,128
    2b08:	08090103          	lb	sp,128(s2)
    2b0c:	0100                	addi	s0,sp,128
    2b0e:	0505                	addi	a0,a0,1
    2b10:	097ebb03          	0x97ebb03
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b14:	0000                	unimp
    2b16:	0301                	addi	t1,t1,0
        if (x16 == 1)
    2b18:	0901                	addi	s2,s2,0
    2b1a:	0000                	unimp
        data >>= 1;
    2b1c:	0301                	addi	t1,t1,0
    2b1e:	0901                	addi	s2,s2,0
        if (x16 == 1)
    2b20:	0000                	unimp
    2b22:	0301                	addi	t1,t1,0
    2b24:	0901                	addi	s2,s2,0
    2b26:	0000                	unimp
            crc |= 0x8000;
    2b28:	0501                	addi	a0,a0,0
    2b2a:	00030613          	mv	a2,t1
    2b2e:	0009                	c.nop	2
    2b30:	0100                	addi	s0,sp,128
    2b32:	0505                	addi	a0,a0,1
    2b34:	0306                	slli	t1,t1,0x1
    2b36:	0901                	addi	s2,s2,0
    2b38:	0004                	0x4
    2b3a:	0301                	addi	t1,t1,0
        if (x16 == 1)
    2b3c:	0901                	addi	s2,s2,0
    2b3e:	0000                	unimp
    2b40:	0301                	addi	t1,t1,0
    2b42:	0901                	addi	s2,s2,0
    2b44:	0000                	unimp
    2b46:	0301                	addi	t1,t1,0
            crc |= 0x8000;
    2b48:	0901                	addi	s2,s2,0
    2b4a:	0000                	unimp
    2b4c:	0501                	addi	a0,a0,0
    2b4e:	061e                	slli	a2,a2,0x7
    2b50:	00097d03          	0x97d03
    2b54:	0100                	addi	s0,sp,128
    2b56:	0505                	addi	a0,a0,1
    2b58:	0306                	slli	t1,t1,0x1
    2b5a:	0905                	addi	s2,s2,1
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b5c:	0008                	0x8
    2b5e:	0501                	addi	a0,a0,0
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b60:	0309                	addi	t1,t1,2
    2b62:	0902                	c.slli64	s2
        if (x16 == 1)
    2b64:	0004                	0x4
    2b66:	0501                	addi	a0,a0,0
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2b68:	0614                	addi	a3,sp,768
    2b6a:	00090003          	lb	zero,0(s2)
        data >>= 1;
    2b6e:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2b70:	0905                	addi	s2,s2,1
    2b72:	0306                	slli	t1,t1,0x1
    2b74:	0901                	addi	s2,s2,0
    2b76:	0010                	0x10
            crc |= 0x8000;
    2b78:	0501                	addi	a0,a0,0
    2b7a:	0614                	addi	a3,sp,768
    2b7c:	00090003          	lb	zero,0(s2)
    2b80:	0100                	addi	s0,sp,128
    2b82:	1205                	addi	tp,tp,-31
    2b84:	0c090003          	lb	zero,192(s2)
    2b88:	0100                	addi	s0,sp,128
    2b8a:	0905                	addi	s2,s2,1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2b8c:	0306                	slli	t1,t1,0x1
    2b8e:	0901                	addi	s2,s2,0
        if (x16 == 1)
    2b90:	0004                	0x4
    2b92:	0501                	addi	a0,a0,0
        data >>= 1;
    2b94:	0614                	addi	a3,sp,768
    2b96:	00090003          	lb	zero,0(s2)
        if (x16 == 1)
    2b9a:	0100                	addi	s0,sp,128
    2b9c:	0905                	addi	s2,s2,1
    2b9e:	0306                	slli	t1,t1,0x1
            crc |= 0x8000;
    2ba0:	0901                	addi	s2,s2,0
    2ba2:	0010                	0x10
    2ba4:	0501                	addi	a0,a0,0
    2ba6:	0614                	addi	a3,sp,768
    2ba8:	00090003          	lb	zero,0(s2)
    2bac:	0100                	addi	s0,sp,128
    2bae:	1205                	addi	tp,tp,-31
    2bb0:	0c090003          	lb	zero,192(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bb4:	0100                	addi	s0,sp,128
    2bb6:	0905                	addi	s2,s2,1
        if (x16 == 1)
    2bb8:	0306                	slli	t1,t1,0x1
    2bba:	0901                	addi	s2,s2,0
        data >>= 1;
    2bbc:	0004                	0x4
    2bbe:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2bc0:	060c                	addi	a1,sp,768
    2bc2:	00090003          	lb	zero,0(s2)
    2bc6:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2bc8:	2205                	jal	2ce8 <crc16+0x48>
    2bca:	04097a03          	0x4097a03
    2bce:	0100                	addi	s0,sp,128
    2bd0:	0505                	addi	a0,a0,1
    2bd2:	04090003          	lb	zero,64(s2)
    2bd6:	0100                	addi	s0,sp,128
    2bd8:	0306                	slli	t1,t1,0x1
    2bda:	0909                	addi	s2,s2,2
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2bdc:	0004                	0x4
    2bde:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2be0:	030d                	addi	t1,t1,3
    2be2:	01b4                	addi	a3,sp,200
        data >>= 1;
    2be4:	0009                	c.nop	2
    2be6:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2be8:	08090103          	lb	sp,128(s2)
    2bec:	0100                	addi	s0,sp,128
    2bee:	1b05                	addi	s6,s6,-31
            crc |= 0x8000;
    2bf0:	0306                	slli	t1,t1,0x1
    2bf2:	0900                	addi	s0,sp,144
    2bf4:	0000                	unimp
    2bf6:	0501                	addi	a0,a0,0
    2bf8:	097a030f          	0x97a030f
    2bfc:	0010                	0x10
    2bfe:	0501                	addi	a0,a0,0
    2c00:	0906031b          	0x906031b
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c04:	0008                	0x8
    2c06:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2c08:	097a030f          	0x97a030f
        data >>= 1;
    2c0c:	0008                	0x8
    2c0e:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2c10:	0609                	addi	a2,a2,2
    2c12:	0c090a03          	lb	s4,192(s2)
    2c16:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2c18:	1105                	addi	sp,sp,-31
    2c1a:	0306                	slli	t1,t1,0x1
    2c1c:	0900                	addi	s0,sp,144
    2c1e:	0000                	unimp
    2c20:	0501                	addi	a0,a0,0
    2c22:	0609                	addi	a2,a2,2
    2c24:	10090103          	lb	sp,256(s2)
    2c28:	0100                	addi	s0,sp,128
    2c2a:	0c05                	addi	s8,s8,1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c2c:	0306                	slli	t1,t1,0x1
    2c2e:	0900                	addi	s0,sp,144
        if (x16 == 1)
    2c30:	0000                	unimp
    2c32:	0501                	addi	a0,a0,0
        data >>= 1;
    2c34:	0315                	addi	t1,t1,5
    2c36:	00040903          	lb	s2,0(s0)
        if (x16 == 1)
    2c3a:	0501                	addi	a0,a0,0
    2c3c:	0609                	addi	a2,a2,2
    2c3e:	04090103          	lb	sp,64(s2)
            crc |= 0x8000;
    2c42:	0100                	addi	s0,sp,128
    2c44:	2905                	jal	3074 <__udivdi3+0xd8>
    2c46:	0306                	slli	t1,t1,0x1
    2c48:	0900                	addi	s0,sp,144
    2c4a:	0000                	unimp
    2c4c:	0501                	addi	a0,a0,0
    2c4e:	031f 0900 0008      	0x80900031f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2c54:	0501                	addi	a0,a0,0
    2c56:	0324                	addi	s1,sp,392
        if (x16 == 1)
    2c58:	0900                	addi	s0,sp,144
    2c5a:	0004                	0x4
        data >>= 1;
    2c5c:	0501                	addi	a0,a0,0
    2c5e:	031f 0900 0004      	0x40900031f
        if (x16 == 1)
    2c64:	0501                	addi	a0,a0,0
    2c66:	0605                	addi	a2,a2,1
            crc |= 0x8000;
    2c68:	08090303          	lb	t1,128(s2)
    2c6c:	0100                	addi	s0,sp,128
    2c6e:	08091103          	lh	sp,128(s2)
    2c72:	0100                	addi	s0,sp,128
    2c74:	20090203          	lb	tp,512(s2)
    2c78:	0100                	addi	s0,sp,128
    2c7a:	08090103          	lb	sp,128(s2)
        if (x16 == 1)
    2c7e:	0100                	addi	s0,sp,128
    2c80:	1205                	addi	tp,tp,-31
    2c82:	0306                	slli	t1,t1,0x1
    2c84:	0900                	addi	s0,sp,144
    2c86:	0000                	unimp
            crc |= 0x8000;
    2c88:	0501                	addi	a0,a0,0
    2c8a:	0902030f          	0x902030f
    2c8e:	0008                	0x8
    2c90:	0501                	addi	a0,a0,0
    2c92:	0312                	slli	t1,t1,0x4
    2c94:	097e                	slli	s2,s2,0x1f
    2c96:	000c                	0xc
    2c98:	0501                	addi	a0,a0,0
    2c9a:	0605                	addi	a2,a2,1
}
    2c9c:	04090203          	lb	tp,64(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2ca0:	0100                	addi	s0,sp,128
    2ca2:	0f05                	addi	t5,t5,1
    crc = crcu8((ee_u8)(newval), crc);
    2ca4:	0306                	slli	t1,t1,0x1
    2ca6:	0900                	addi	s0,sp,144
    return crcu16((ee_u16)newval, crc);
    2ca8:	0000                	unimp
    2caa:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2cac:	0605                	addi	a2,a2,1
    2cae:	14090103          	lb	sp,320(s2)
    return crcu16((ee_u16)newval, crc);
    2cb2:	0100                	addi	s0,sp,128
        data >>= 1;
    2cb4:	0f05                	addi	t5,t5,1
    2cb6:	0306                	slli	t1,t1,0x1
        if (x16 == 1)
    2cb8:	0900                	addi	s0,sp,144
    2cba:	0000                	unimp
    2cbc:	0501                	addi	a0,a0,0
    2cbe:	0605                	addi	a2,a2,1
            crc |= 0x8000;
    2cc0:	14090103          	lb	sp,320(s2)
    2cc4:	0100                	addi	s0,sp,128
    2cc6:	0f05                	addi	t5,t5,1
    2cc8:	0306                	slli	t1,t1,0x1
    2cca:	0900                	addi	s0,sp,144
    2ccc:	0000                	unimp
    2cce:	0501                	addi	a0,a0,0
    2cd0:	0605                	addi	a2,a2,1
    2cd2:	14090103          	lb	sp,320(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cd6:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2cd8:	0f05                	addi	t5,t5,1
    2cda:	0306                	slli	t1,t1,0x1
    2cdc:	0900                	addi	s0,sp,144
    2cde:	0000                	unimp
        data >>= 1;
    2ce0:	0501                	addi	a0,a0,0
    2ce2:	0305                	addi	t1,t1,1
        if (x16 == 1)
    2ce4:	0902                	c.slli64	s2
    2ce6:	0010                	0x10
            crc |= 0x8000;
    2ce8:	0501                	addi	a0,a0,0
    2cea:	097e030f          	0x97e030f
    2cee:	0008                	0x8
    2cf0:	0501                	addi	a0,a0,0
    2cf2:	0605                	addi	a2,a2,1
    2cf4:	04090203          	lb	tp,64(s2)
    2cf8:	0100                	addi	s0,sp,128
    2cfa:	0d05                	addi	s10,s10,1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2cfc:	20091103          	lh	sp,512(s2)
        if (x16 == 1)
    2d00:	0100                	addi	s0,sp,128
    2d02:	00090103          	lb	sp,0(s2)
        data >>= 1;
    2d06:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2d08:	10090103          	lb	sp,256(s2)
    2d0c:	0100                	addi	s0,sp,128
    2d0e:	0505                	addi	a0,a0,1
            crc |= 0x8000;
    2d10:	00090a03          	lb	s4,0(s2)
    2d14:	0100                	addi	s0,sp,128
    2d16:	0d05                	addi	s10,s10,1
    2d18:	0306                	slli	t1,t1,0x1
    2d1a:	0975                	addi	s2,s2,29
    2d1c:	0000                	unimp
    2d1e:	0501                	addi	a0,a0,0
    2d20:	0316                	slli	t1,t1,0x5
    2d22:	097f                	0x97f
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d24:	000c                	0xc
    2d26:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2d28:	030d                	addi	t1,t1,3
    2d2a:	0901                	addi	s2,s2,0
        data >>= 1;
    2d2c:	0004                	0x4
    2d2e:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2d30:	0316                	slli	t1,t1,0x5
    2d32:	097f                	0x97f
    2d34:	000c                	0xc
    2d36:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2d38:	04020017          	auipc	zero,0x4020
    2d3c:	0301                	addi	t1,t1,0
    2d3e:	090e                	slli	s2,s2,0x3
    2d40:	0004                	0x4
    2d42:	0501                	addi	a0,a0,0
    2d44:	0009                	c.nop	2
    2d46:	0402                	c.slli64	s0
    2d48:	0301                	addi	t1,t1,0
    2d4a:	0900                	addi	s0,sp,144
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d4c:	0004                	0x4
    2d4e:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2d50:	031c                	addi	a5,sp,384
    2d52:	0902                	c.slli64	s2
        data >>= 1;
    2d54:	0010                	0x10
    2d56:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2d58:	000d                	c.nop	3
    2d5a:	0402                	c.slli64	s0
    2d5c:	0602                	c.slli64	a2
    2d5e:	38091c03          	lh	s8,896(s2)
            crc |= 0x8000;
    2d62:	0100                	addi	s0,sp,128
    2d64:	1a05                	addi	s4,s4,-31
    2d66:	0200                	addi	s0,sp,256
    2d68:	0204                	addi	s1,sp,256
    2d6a:	0306                	slli	t1,t1,0x1
    2d6c:	0900                	addi	s0,sp,144
    2d6e:	0000                	unimp
    2d70:	0501                	addi	a0,a0,0
    2d72:	0030                	addi	a2,sp,8
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d74:	0402                	c.slli64	s0
    2d76:	0302                	c.slli64	t1
        if (x16 == 1)
    2d78:	0962                	slli	s2,s2,0x18
    2d7a:	0004                	0x4
        data >>= 1;
    2d7c:	0501                	addi	a0,a0,0
    2d7e:	001a                	c.slli	zero,0x6
        if (x16 == 1)
    2d80:	0402                	c.slli64	s0
    2d82:	0302                	c.slli64	t1
    2d84:	091e                	slli	s2,s2,0x7
    2d86:	0004                	0x4
            crc |= 0x8000;
    2d88:	0501                	addi	a0,a0,0
    2d8a:	0009                	c.nop	2
    2d8c:	0402                	c.slli64	s0
    2d8e:	0302                	c.slli64	t1
    2d90:	0962                	slli	s2,s2,0x18
    2d92:	0004                	0x4
    2d94:	0501                	addi	a0,a0,0
    2d96:	001a                	c.slli	zero,0x6
    2d98:	0402                	c.slli64	s0
    2d9a:	0302                	c.slli64	t1
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2d9c:	091e                	slli	s2,s2,0x7
    2d9e:	0004                	0x4
        if (x16 == 1)
    2da0:	0501                	addi	a0,a0,0
    2da2:	0030                	addi	a2,sp,8
        data >>= 1;
    2da4:	0402                	c.slli64	s0
    2da6:	0302                	c.slli64	t1
        if (x16 == 1)
    2da8:	0962                	slli	s2,s2,0x18
    2daa:	0004                	0x4
    2dac:	0501                	addi	a0,a0,0
    2dae:	001a                	c.slli	zero,0x6
            crc |= 0x8000;
    2db0:	0402                	c.slli64	s0
    2db2:	0302                	c.slli64	t1
    2db4:	091e                	slli	s2,s2,0x7
    2db6:	0004                	0x4
    2db8:	0501                	addi	a0,a0,0
    2dba:	0030                	addi	a2,sp,8
    2dbc:	0402                	c.slli64	s0
    2dbe:	0302                	c.slli64	t1
    2dc0:	0962                	slli	s2,s2,0x18
    2dc2:	0004                	0x4
        if (x16 == 1)
    2dc4:	0501                	addi	a0,a0,0
    2dc6:	001a                	c.slli	zero,0x6
    2dc8:	0402                	c.slli64	s0
    2dca:	0302                	c.slli64	t1
    2dcc:	091e                	slli	s2,s2,0x7
    2dce:	0004                	0x4
            crc |= 0x8000;
    2dd0:	0501                	addi	a0,a0,0
    2dd2:	0009                	c.nop	2
    2dd4:	0402                	c.slli64	s0
    2dd6:	0302                	c.slli64	t1
    2dd8:	0962                	slli	s2,s2,0x18
    2dda:	0004                	0x4
    2ddc:	0501                	addi	a0,a0,0
    2dde:	060d                	addi	a2,a2,3
    2de0:	04090203          	lb	tp,64(s2)
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2de4:	0100                	addi	s0,sp,128
    2de6:	1c05                	addi	s8,s8,-31
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2de8:	0306                	slli	t1,t1,0x1
    2dea:	0900                	addi	s0,sp,144
        if (x16 == 1)
    2dec:	0000                	unimp
    2dee:	0501                	addi	a0,a0,0
    crc = crcu8((ee_u8)((newval) >> 8), crc);
    2df0:	09010323          	sb	a6,134(sp)
        data >>= 1;
    2df4:	0018                	0x18
    2df6:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2df8:	031c                	addi	a5,sp,384
    2dfa:	097f                	0x97f
    2dfc:	0004                	0x4
    2dfe:	0501                	addi	a0,a0,0
            crc |= 0x8000;
    2e00:	060d                	addi	a2,a2,3
    2e02:	04090103          	lb	sp,64(s2)
    2e06:	0100                	addi	s0,sp,128
    2e08:	2305                	jal	3328 <__udivdi3+0x38c>
    2e0a:	0306                	slli	t1,t1,0x1
    2e0c:	0900                	addi	s0,sp,144
    2e0e:	0000                	unimp
    2e10:	0501                	addi	a0,a0,0
    2e12:	0310                	addi	a2,sp,384
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e14:	0900                	addi	s0,sp,144
    2e16:	0004                	0x4
        if (x16 == 1)
    2e18:	0501                	addi	a0,a0,0
    2e1a:	031f 0901 0004      	0x40901031f
    2e20:	0501                	addi	a0,a0,0
    2e22:	0311                	addi	t1,t1,4
    2e24:	0900                	addi	s0,sp,144
    2e26:	0004                	0x4
            crc |= 0x8000;
    2e28:	0601                	addi	a2,a2,0
    2e2a:	04090203          	lb	tp,64(s2)
    2e2e:	0100                	addi	s0,sp,128
    2e30:	18090403          	lb	s0,384(s2)
    2e34:	0100                	addi	s0,sp,128
    2e36:	1f05                	addi	t5,t5,-31
    2e38:	0306                	slli	t1,t1,0x1
    2e3a:	0900                	addi	s0,sp,144
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e3c:	0000                	unimp
    2e3e:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2e40:	060d                	addi	a2,a2,3
    2e42:	0c090203          	lb	tp,192(s2)
        data >>= 1;
    2e46:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2e48:	1c05                	addi	s8,s8,-31
    2e4a:	0306                	slli	t1,t1,0x1
    2e4c:	0900                	addi	s0,sp,144
    2e4e:	0000                	unimp
            crc |= 0x8000;
    2e50:	0501                	addi	a0,a0,0
    2e52:	09000323          	sb	a6,134(zero) # 86 <main+0xe>
    2e56:	0018                	0x18
    2e58:	0501                	addi	a0,a0,0
    2e5a:	0310                	addi	a2,sp,384
    2e5c:	0900                	addi	s0,sp,144
    2e5e:	0004                	0x4
    2e60:	0501                	addi	a0,a0,0
    2e62:	031f 0901 0004      	0x40901031f
        if (x16 == 1)
    2e68:	0501                	addi	a0,a0,0
    2e6a:	0311                	addi	t1,t1,4
        data >>= 1;
    2e6c:	0900                	addi	s0,sp,144
    2e6e:	0004                	0x4
        if (x16 == 1)
    2e70:	0601                	addi	a2,a2,0
    2e72:	04090203          	lb	tp,64(s2)
    2e76:	0100                	addi	s0,sp,128
            crc |= 0x8000;
    2e78:	18090403          	lb	s0,384(s2)
    2e7c:	0100                	addi	s0,sp,128
    2e7e:	1f05                	addi	t5,t5,-31
    2e80:	0306                	slli	t1,t1,0x1
    2e82:	0900                	addi	s0,sp,144
    2e84:	0000                	unimp
    2e86:	0501                	addi	a0,a0,0
    2e88:	060d                	addi	a2,a2,3
    2e8a:	10090203          	lb	tp,256(s2)
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2e8e:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2e90:	2305                	jal	33b0 <__udivdi3+0x414>
    2e92:	0306                	slli	t1,t1,0x1
        data >>= 1;
    2e94:	0900                	addi	s0,sp,144
    2e96:	0000                	unimp
        if (x16 == 1)
    2e98:	0501                	addi	a0,a0,0
    2e9a:	0310                	addi	a2,sp,384
    2e9c:	0900                	addi	s0,sp,144
    2e9e:	0004                	0x4
            crc |= 0x8000;
    2ea0:	0501                	addi	a0,a0,0
    2ea2:	031f 0901 0004      	0x40901031f
    2ea8:	0501                	addi	a0,a0,0
    2eaa:	0311                	addi	t1,t1,4
    2eac:	0900                	addi	s0,sp,144
    2eae:	0018                	0x18
    2eb0:	0501                	addi	a0,a0,0
    2eb2:	0309                	addi	t1,t1,2
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2eb4:	0c097ebb          	0xc097ebb
        if (x16 == 1)
    2eb8:	0100                	addi	s0,sp,128
    2eba:	0306                	slli	t1,t1,0x1
        data >>= 1;
    2ebc:	0902                	c.slli64	s2
    2ebe:	000c                	0xc
        if (x16 == 1)
    2ec0:	0301                	addi	t1,t1,0
    2ec2:	0901                	addi	s2,s2,0
    2ec4:	0000                	unimp
    2ec6:	0301                	addi	t1,t1,0
            crc |= 0x8000;
    2ec8:	0901                	addi	s2,s2,0
    2eca:	0000                	unimp
    2ecc:	0501                	addi	a0,a0,0
    2ece:	061a                	slli	a2,a2,0x6
    2ed0:	00090003          	lb	zero,0(s2)
    2ed4:	0100                	addi	s0,sp,128
    2ed6:	0505                	addi	a0,a0,1
    2ed8:	0306                	slli	t1,t1,0x1
    2eda:	0902                	c.slli64	s2
        x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
    2edc:	000c                	0xc
    2ede:	0501                	addi	a0,a0,0
        if (x16 == 1)
    2ee0:	030d                	addi	t1,t1,3
    2ee2:	00c5                	addi	ra,ra,17
        data >>= 1;
    2ee4:	0409                	addi	s0,s0,2
    2ee6:	0100                	addi	s0,sp,128
        if (x16 == 1)
    2ee8:	1f05                	addi	t5,t5,-31
    2eea:	0306                	slli	t1,t1,0x1
    2eec:	0900                	addi	s0,sp,144
    2eee:	0000                	unimp
            crc |= 0x8000;
    2ef0:	0501                	addi	a0,a0,0
    2ef2:	031d                	addi	t1,t1,7
    2ef4:	0900                	addi	s0,sp,144
    2ef6:	002c                	addi	a1,sp,8
    2ef8:	0501                	addi	a0,a0,0
    2efa:	0609                	addi	a2,a2,2
    2efc:	08090303          	lb	t1,128(s2)
    2f00:	0100                	addi	s0,sp,128
    2f02:	0c05                	addi	s8,s8,1
        if (x16 == 1)
    2f04:	0306                	slli	t1,t1,0x1
    2f06:	0900                	addi	s0,sp,144
    2f08:	0000                	unimp
    2f0a:	0501                	addi	a0,a0,0
    2f0c:	060d                	addi	a2,a2,3
    2f0e:	04090203          	lb	tp,64(s2)
            crc |= 0x8000;
    2f12:	0100                	addi	s0,sp,128
    2f14:	3805                	jal	2744 <crcu16+0x234>
    2f16:	0306                	slli	t1,t1,0x1
    2f18:	00000903          	lb	s2,0(zero) # 0 <_start>
    2f1c:	0501                	addi	a0,a0,0
    2f1e:	030d                	addi	t1,t1,3
    2f20:	097d                	addi	s2,s2,31
    2f22:	000c                	0xc
}
    2f24:	0501                	addi	a0,a0,0
    2f26:	0338                	addi	a4,sp,392
}
    2f28:	00040903          	lb	s2,0(s0)
    2f2c:	0501                	addi	a0,a0,0
    2f2e:	031e                	slli	t1,t1,0x7
    uint64_t time = (((uint64_t)(TIMER->hi)) << 32) + ((uint64_t)(TIMER->lo));
    2f30:	097f                	0x97f
    2f32:	0008                	0x8
    2f34:	0501                	addi	a0,a0,0
    2f36:	0326                	slli	t1,t1,0x9
    2f38:	0901                	addi	s2,s2,0
    2f3a:	0004                	0x4
    time = time / 84000;
    2f3c:	0501                	addi	a0,a0,0
    2f3e:	030d                	addi	t1,t1,3
uint64_t timer_getms() {
    2f40:	097d                	addi	s2,s2,31
    2f42:	0004                	0x4
    uint64_t time = (((uint64_t)(TIMER->hi)) << 32) + ((uint64_t)(TIMER->lo));
    2f44:	0501                	addi	a0,a0,0
    2f46:	031e                	slli	t1,t1,0x7
    time = time / 84000;
    2f48:	0902                	c.slli64	s2
    2f4a:	0004                	0x4
    2f4c:	0501                	addi	a0,a0,0
    2f4e:	030d                	addi	t1,t1,3
    2f50:	097e                	slli	s2,s2,0x1f
    2f52:	0004                	0x4
uint64_t timer_getms() {
    2f54:	0501                	addi	a0,a0,0
    2f56:	0340                	addi	s0,sp,388
    time = time / 84000;
    2f58:	00040903          	lb	s2,0(s0)
    2f5c:	0501                	addi	a0,a0,0
    2f5e:	030d                	addi	t1,t1,3
    2f60:	097d                	addi	s2,s2,31
    2f62:	0004                	0x4
    2f64:	0501                	addi	a0,a0,0
    2f66:	0305                	addi	t1,t1,1
    2f68:	00c0                	addi	s0,sp,68
    2f6a:	1809                	addi	a6,a6,-30
    for (int i = 0;i<size;i++) {
    2f6c:	0100                	addi	s0,sp,128
    2f6e:	0d05                	addi	s10,s10,1
    2f70:	0306                	slli	t1,t1,0x1
    2f72:	090d                	addi	s2,s2,3
        int tx_finish = USART->ctrl & 0x1;
    2f74:	0018                	0x18
    2f76:	0301                	addi	t1,t1,0
        send_char(pBuffer[i]);
    2f78:	0901                	addi	s2,s2,0
    2f7a:	0000                	unimp
        int tx_finish = USART->ctrl & 0x1;
    2f7c:	0301                	addi	t1,t1,0
    2f7e:	0901                	addi	s2,s2,0
    2f80:	0010                	0x10
    2f82:	0501                	addi	a0,a0,0
        if (tx_finish) {
    2f84:	0305                	addi	t1,t1,1
    2f86:	090e                	slli	s2,s2,0x3
            USART->write = c;
    2f88:	0000                	unimp
    2f8a:	0501                	addi	a0,a0,0
            return;
    2f8c:	060d                	addi	a2,a2,3
    2f8e:	00097103          	0x97103
    for (int i = 0;i<size;i++) {
    2f92:	0100                	addi	s0,sp,128
}
    2f94:	1605                	addi	a2,a2,-31
    2f96:	0c097f03          	0xc097f03
    2f9a:	0100                	addi	s0,sp,128
    2f9c:	0d05                	addi	s10,s10,1
    2f9e:	04090103          	lb	sp,64(s2)
    2fa2:	0100                	addi	s0,sp,128
    2fa4:	1605                	addi	a2,a2,-31
    2fa6:	0c097f03          	0xc097f03
    2faa:	0100                	addi	s0,sp,128
    2fac:	1105                	addi	sp,sp,-31
    2fae:	0306                	slli	t1,t1,0x1
    2fb0:	092a                	slli	s2,s2,0xa
    2fb2:	0008                	0x8
    2fb4:	0301                	addi	t1,t1,0
    2fb6:	0904                	addi	s1,sp,144
    2fb8:	0018                	0x18
    2fba:	0501                	addi	a0,a0,0
    2fbc:	061f 0003 0009      	0x90003061f
    2fc2:	0100                	addi	s0,sp,128
    2fc4:	0505                	addi	a0,a0,1
    2fc6:	18094503          	lbu	a0,384(s2)
    2fca:	0100                	addi	s0,sp,128
    2fcc:	1205                	addi	tp,tp,-31
    2fce:	097ed303          	lhu	t1,151(t4)
    2fd2:	0004                	0x4
    2fd4:	0501                	addi	a0,a0,0
    2fd6:	0305                	addi	t1,t1,1
    2fd8:	01ad                	addi	gp,gp,11
    2fda:	0409                	addi	s0,s0,2
    2fdc:	0100                	addi	s0,sp,128
    2fde:	1205                	addi	tp,tp,-31
    2fe0:	097ed303          	lhu	t1,151(t4)
    2fe4:	0004                	0x4
    2fe6:	0501                	addi	a0,a0,0
    2fe8:	0605                	addi	a2,a2,1
    2fea:	0901ed03          	0x901ed03
    2fee:	0008                	0x8
    2ff0:	0501                	addi	a0,a0,0
    2ff2:	0615                	addi	a2,a2,5
    2ff4:	00090003          	lb	zero,0(s2)
    2ff8:	0100                	addi	s0,sp,128
    2ffa:	0505                	addi	a0,a0,1
    2ffc:	08090203          	lb	tp,128(s2)
    3000:	0100                	addi	s0,sp,128
    3002:	1205                	addi	tp,tp,-31
    3004:	04097e03          	0x4097e03
    3008:	0100                	addi	s0,sp,128
    300a:	0505                	addi	a0,a0,1
    300c:	04090203          	lb	tp,64(s2)
    3010:	0100                	addi	s0,sp,128
    3012:	10090103          	lb	sp,256(s2)
    3016:	0100                	addi	s0,sp,128
    3018:	3305                	jal	2d38 <crc16+0x98>
    301a:	14090203          	lb	tp,320(s2)
    301e:	0100                	addi	s0,sp,128
    3020:	0505                	addi	a0,a0,1
    3022:	0c090003          	lb	zero,192(s2)
    3026:	0100                	addi	s0,sp,128
    3028:	0905                	addi	s2,s2,1
    302a:	18090103          	lb	sp,384(s2)
    302e:	0100                	addi	s0,sp,128
    3030:	1205                	addi	tp,tp,-31
    3032:	0c097a03          	0xc097a03
    3036:	0100                	addi	s0,sp,128
    3038:	0805                	addi	a6,a6,1
    303a:	04090603          	lb	a2,64(s2)
    303e:	0100                	addi	s0,sp,128
    3040:	1205                	addi	tp,tp,-31
    3042:	08097a03          	0x8097a03
    3046:	0100                	addi	s0,sp,128
    3048:	0505                	addi	a0,a0,1
    304a:	0306                	slli	t1,t1,0x1
    304c:	0902                	c.slli64	s2
    304e:	0004                	0x4
    3050:	0301                	addi	t1,t1,0
    3052:	0901                	addi	s2,s2,0
    3054:	0000                	unimp
    3056:	0301                	addi	t1,t1,0
    3058:	0902                	c.slli64	s2
    305a:	0000                	unimp
    305c:	0301                	addi	t1,t1,0
    305e:	0901                	addi	s2,s2,0
    3060:	0000                	unimp
    3062:	0501                	addi	a0,a0,0
    3064:	0608                	addi	a0,sp,768
    3066:	00090003          	lb	zero,0(s2)
    306a:	0100                	addi	s0,sp,128
    306c:	0905                	addi	s2,s2,1
    306e:	0306                	slli	t1,t1,0x1
    3070:	0901                	addi	s2,s2,0
    3072:	000c                	0xc
    3074:	0501                	addi	a0,a0,0
    3076:	0628                	addi	a0,sp,776
    3078:	00090103          	lb	sp,0(s2)
    307c:	0100                	addi	s0,sp,128
    307e:	0905                	addi	s2,s2,1
    3080:	04097f03          	0x4097f03
    3084:	0100                	addi	s0,sp,128
    3086:	1905                	addi	s2,s2,-31
    3088:	14090203          	lb	tp,320(s2)
    308c:	0100                	addi	s0,sp,128
    308e:	0905                	addi	s2,s2,1
    3090:	04097e03          	0x4097e03
    3094:	0100                	addi	s0,sp,128
    3096:	1905                	addi	s2,s2,-31
    3098:	04090203          	lb	tp,64(s2)
    309c:	0100                	addi	s0,sp,128
    309e:	0905                	addi	s2,s2,1
    30a0:	08097e03          	0x8097e03
    30a4:	0100                	addi	s0,sp,128
    30a6:	0505                	addi	a0,a0,1
    30a8:	0306                	slli	t1,t1,0x1
    30aa:	090a                	slli	s2,s2,0x2
    30ac:	0030                	addi	a2,sp,8
    30ae:	0501                	addi	a0,a0,0
    30b0:	0609                	addi	a2,a2,2
    30b2:	00090003          	lb	zero,0(s2)
    30b6:	0100                	addi	s0,sp,128
    30b8:	0805                	addi	a6,a6,1
    30ba:	0c090003          	lb	zero,192(s2)
    30be:	0100                	addi	s0,sp,128
    30c0:	0505                	addi	a0,a0,1
    30c2:	18090703          	lb	a4,384(s2)
    30c6:	0100                	addi	s0,sp,128
    30c8:	14090203          	lb	tp,320(s2)
    30cc:	0100                	addi	s0,sp,128
    30ce:	04090103          	lb	sp,64(s2)
    30d2:	0100                	addi	s0,sp,128
    30d4:	04090403          	lb	s0,64(s2)
    30d8:	0100                	addi	s0,sp,128
    30da:	1505                	addi	a0,a0,-31
    30dc:	04097603          	0x4097603
    30e0:	0100                	addi	s0,sp,128
    30e2:	0505                	addi	a0,a0,1
    30e4:	0306                	slli	t1,t1,0x1
    30e6:	00080903          	lb	s2,0(a6)
    30ea:	0301                	addi	t1,t1,0
    30ec:	0902                	c.slli64	s2
    30ee:	0008                	0x8
    30f0:	0301                	addi	t1,t1,0
    30f2:	0901                	addi	s2,s2,0
    30f4:	0014                	0x14
    30f6:	0301                	addi	t1,t1,0
    30f8:	0904                	addi	s1,sp,144
    30fa:	0014                	0x14
    30fc:	0301                	addi	t1,t1,0
    30fe:	0902                	c.slli64	s2
    3100:	0014                	0x14
    3102:	0301                	addi	t1,t1,0
    3104:	0901                	addi	s2,s2,0
    3106:	0014                	0x14
    3108:	0501                	addi	a0,a0,0
    310a:	061a                	slli	a2,a2,0x6
    310c:	00090003          	lb	zero,0(s2)
    3110:	0100                	addi	s0,sp,128
    3112:	0805                	addi	a6,a6,1
    3114:	08090003          	lb	zero,128(s2)
    3118:	0100                	addi	s0,sp,128
    311a:	0905                	addi	s2,s2,1
    311c:	04090103          	lb	sp,64(s2)
    3120:	0100                	addi	s0,sp,128
    3122:	4405                	li	s0,1
    3124:	08090103          	lb	sp,128(s2)
    3128:	0100                	addi	s0,sp,128
    312a:	1005                	c.nop	-31
    312c:	14097f03          	0x14097f03
    3130:	0100                	addi	s0,sp,128
    3132:	4405                	li	s0,1
    3134:	08090103          	lb	sp,128(s2)
    3138:	0100                	addi	s0,sp,128
    313a:	0d05                	addi	s10,s10,1
    313c:	0200                	addi	s0,sp,256
    313e:	0304                	addi	s1,sp,384
    3140:	0306                	slli	t1,t1,0x1
    3142:	0900                	addi	s0,sp,144
    3144:	0008                	0x8
    3146:	0501                	addi	a0,a0,0
    3148:	0044                	addi	s1,sp,4
    314a:	0402                	c.slli64	s0
    314c:	00030603          	lb	a2,0(t1) # ffffa000 <__freertos_irq_stack_top+0xfefea000>
    3150:	0009                	c.nop	2
    3152:	0100                	addi	s0,sp,128
    3154:	0d05                	addi	s10,s10,1
    3156:	0200                	addi	s0,sp,256
    3158:	0304                	addi	s1,sp,384
    315a:	18090003          	lb	zero,384(s2)
    315e:	0100                	addi	s0,sp,128
    3160:	3005                	jal	2980 <crcu32+0x1f0>
    3162:	0200                	addi	s0,sp,256
    3164:	0304                	addi	s1,sp,384
    3166:	14097f03          	0x14097f03
    316a:	0100                	addi	s0,sp,128
    316c:	0905                	addi	s2,s2,1
    316e:	0200                	addi	s0,sp,256
    3170:	0304                	addi	s1,sp,384
    3172:	04090003          	lb	zero,64(s2)
    3176:	0100                	addi	s0,sp,128
    3178:	3005                	jal	2998 <crcu32+0x208>
    317a:	0200                	addi	s0,sp,256
    317c:	0304                	addi	s1,sp,384
    317e:	04090003          	lb	zero,64(s2)
    3182:	0100                	addi	s0,sp,128
    3184:	0905                	addi	s2,s2,1
    3186:	0200                	addi	s0,sp,256
    3188:	0304                	addi	s1,sp,384
    318a:	08090003          	lb	zero,128(s2)
    318e:	0100                	addi	s0,sp,128
    3190:	0505                	addi	a0,a0,1
    3192:	0306                	slli	t1,t1,0x1
    3194:	0902                	c.slli64	s2
    3196:	0008                	0x8
    3198:	0501                	addi	a0,a0,0
    319a:	061a                	slli	a2,a2,0x6
    319c:	00090003          	lb	zero,0(s2)
    31a0:	0100                	addi	s0,sp,128
    31a2:	0805                	addi	a6,a6,1
    31a4:	04090003          	lb	zero,64(s2)
    31a8:	0100                	addi	s0,sp,128
    31aa:	0905                	addi	s2,s2,1
    31ac:	04090103          	lb	sp,64(s2)
    31b0:	0100                	addi	s0,sp,128
    31b2:	4405                	li	s0,1
    31b4:	08090103          	lb	sp,128(s2)
    31b8:	0100                	addi	s0,sp,128
    31ba:	1005                	c.nop	-31
    31bc:	14097f03          	0x14097f03
    31c0:	0100                	addi	s0,sp,128
    31c2:	4405                	li	s0,1
    31c4:	08090103          	lb	sp,128(s2)
    31c8:	0100                	addi	s0,sp,128
    31ca:	0d05                	addi	s10,s10,1
    31cc:	0200                	addi	s0,sp,256
    31ce:	0304                	addi	s1,sp,384
    31d0:	0306                	slli	t1,t1,0x1
    31d2:	0900                	addi	s0,sp,144
    31d4:	0008                	0x8
    31d6:	0501                	addi	a0,a0,0
    31d8:	0044                	addi	s1,sp,4
    31da:	0402                	c.slli64	s0
    31dc:	00030603          	lb	a2,0(t1)
    31e0:	0009                	c.nop	2
    31e2:	0100                	addi	s0,sp,128
    31e4:	0d05                	addi	s10,s10,1
    31e6:	0200                	addi	s0,sp,256
    31e8:	0304                	addi	s1,sp,384
    31ea:	18090003          	lb	zero,384(s2)
    31ee:	0100                	addi	s0,sp,128
    31f0:	3005                	jal	2a10 <crcu32+0x280>
    31f2:	0200                	addi	s0,sp,256
    31f4:	0304                	addi	s1,sp,384
    31f6:	14097f03          	0x14097f03
    31fa:	0100                	addi	s0,sp,128
    31fc:	0905                	addi	s2,s2,1
    31fe:	0200                	addi	s0,sp,256
    3200:	0304                	addi	s1,sp,384
    3202:	04090003          	lb	zero,64(s2)
    3206:	0100                	addi	s0,sp,128
    3208:	3005                	jal	2a28 <crcu32+0x298>
    320a:	0200                	addi	s0,sp,256
    320c:	0304                	addi	s1,sp,384
    320e:	04090003          	lb	zero,64(s2)
    3212:	0100                	addi	s0,sp,128
    3214:	0905                	addi	s2,s2,1
    3216:	0200                	addi	s0,sp,256
    3218:	0304                	addi	s1,sp,384
    321a:	08090003          	lb	zero,128(s2)
    321e:	0100                	addi	s0,sp,128
    3220:	0505                	addi	a0,a0,1
    3222:	0306                	slli	t1,t1,0x1
    3224:	0902                	c.slli64	s2
    3226:	0008                	0x8
    3228:	0501                	addi	a0,a0,0
    322a:	061a                	slli	a2,a2,0x6
    322c:	00090003          	lb	zero,0(s2)
    3230:	0100                	addi	s0,sp,128
    3232:	0805                	addi	a6,a6,1
    3234:	04090003          	lb	zero,64(s2)
    3238:	0100                	addi	s0,sp,128
    323a:	0905                	addi	s2,s2,1
    323c:	04090103          	lb	sp,64(s2)
    3240:	0100                	addi	s0,sp,128
    3242:	4405                	li	s0,1
    3244:	08090103          	lb	sp,128(s2)
    3248:	0100                	addi	s0,sp,128
    324a:	1005                	c.nop	-31
    324c:	14097f03          	0x14097f03
    3250:	0100                	addi	s0,sp,128
    3252:	4405                	li	s0,1
    3254:	08090103          	lb	sp,128(s2)
    3258:	0100                	addi	s0,sp,128
    325a:	0d05                	addi	s10,s10,1
    325c:	0200                	addi	s0,sp,256
    325e:	0304                	addi	s1,sp,384
    3260:	0306                	slli	t1,t1,0x1
    3262:	0900                	addi	s0,sp,144
    3264:	0008                	0x8
    3266:	0501                	addi	a0,a0,0
    3268:	0044                	addi	s1,sp,4
    326a:	0402                	c.slli64	s0
    326c:	00030603          	lb	a2,0(t1)
    3270:	0009                	c.nop	2
    3272:	0100                	addi	s0,sp,128
    3274:	0d05                	addi	s10,s10,1
    3276:	0200                	addi	s0,sp,256
    3278:	0304                	addi	s1,sp,384
    327a:	18090003          	lb	zero,384(s2)
    327e:	0100                	addi	s0,sp,128
    3280:	3005                	jal	2aa0 <crcu32+0x310>
    3282:	0200                	addi	s0,sp,256
    3284:	0304                	addi	s1,sp,384
    3286:	14097f03          	0x14097f03
    328a:	0100                	addi	s0,sp,128
    328c:	0905                	addi	s2,s2,1
    328e:	0200                	addi	s0,sp,256
    3290:	0304                	addi	s1,sp,384
    3292:	04090003          	lb	zero,64(s2)
    3296:	0100                	addi	s0,sp,128
    3298:	3005                	jal	2ab8 <crcu32+0x328>
    329a:	0200                	addi	s0,sp,256
    329c:	0304                	addi	s1,sp,384
    329e:	04090003          	lb	zero,64(s2)
    32a2:	0100                	addi	s0,sp,128
    32a4:	0905                	addi	s2,s2,1
    32a6:	0200                	addi	s0,sp,256
    32a8:	0304                	addi	s1,sp,384
    32aa:	08090003          	lb	zero,128(s2)
    32ae:	0100                	addi	s0,sp,128
    32b0:	4005                	c.li	zero,1
    32b2:	04090303          	lb	t1,64(s2)
    32b6:	0100                	addi	s0,sp,128
    32b8:	0505                	addi	a0,a0,1
    32ba:	04097f03          	0x4097f03
    32be:	0100                	addi	s0,sp,128
    32c0:	4005                	c.li	zero,1
    32c2:	04090103          	lb	sp,64(s2)
    32c6:	0100                	addi	s0,sp,128
    32c8:	0505                	addi	a0,a0,1
    32ca:	0c097f03          	0xc097f03
    32ce:	0100                	addi	s0,sp,128
    32d0:	4005                	c.li	zero,1
    32d2:	08090103          	lb	sp,128(s2)
    32d6:	0100                	addi	s0,sp,128
    32d8:	0505                	addi	a0,a0,1
    32da:	08097f03          	0x8097f03
    32de:	0100                	addi	s0,sp,128
    32e0:	0905                	addi	s2,s2,1
    32e2:	0200                	addi	s0,sp,256
    32e4:	0304                	addi	s1,sp,384
    32e6:	0306                	slli	t1,t1,0x1
    32e8:	0901                	addi	s2,s2,0
    32ea:	0004                	0x4
    32ec:	0501                	addi	a0,a0,0
    32ee:	0040                	addi	s0,sp,4
    32f0:	0402                	c.slli64	s0
    32f2:	00030603          	lb	a2,0(t1)
    32f6:	0009                	c.nop	2
    32f8:	0100                	addi	s0,sp,128
    32fa:	0905                	addi	s2,s2,1
    32fc:	0200                	addi	s0,sp,256
    32fe:	0304                	addi	s1,sp,384
    3300:	14090003          	lb	zero,320(s2)
    3304:	0100                	addi	s0,sp,128
    3306:	2c05                	jal	3536 <__divdf3+0xfa>
    3308:	0200                	addi	s0,sp,256
    330a:	0304                	addi	s1,sp,384
    330c:	14097f03          	0x14097f03
    3310:	0100                	addi	s0,sp,128
    3312:	0505                	addi	a0,a0,1
    3314:	0200                	addi	s0,sp,256
    3316:	0304                	addi	s1,sp,384
    3318:	04090003          	lb	zero,64(s2)
    331c:	0100                	addi	s0,sp,128
    331e:	2c05                	jal	354e <__divdf3+0x112>
    3320:	0200                	addi	s0,sp,256
    3322:	0304                	addi	s1,sp,384
    3324:	04090003          	lb	zero,64(s2)
    3328:	0100                	addi	s0,sp,128
    332a:	0505                	addi	a0,a0,1
    332c:	0200                	addi	s0,sp,256
    332e:	0304                	addi	s1,sp,384
    3330:	08090003          	lb	zero,128(s2)
    3334:	0100                	addi	s0,sp,128
    3336:	0306                	slli	t1,t1,0x1
    3338:	0902                	c.slli64	s2
    333a:	0004                	0x4
    333c:	0501                	addi	a0,a0,0
    333e:	0608                	addi	a0,sp,768
    3340:	00090003          	lb	zero,0(s2)
    3344:	0100                	addi	s0,sp,128
    3346:	0505                	addi	a0,a0,1
    3348:	0306                	slli	t1,t1,0x1
    334a:	091a                	slli	s2,s2,0x6
    334c:	0004                	0x4
    334e:	0501                	addi	a0,a0,0
    3350:	0608                	addi	a0,sp,768
    3352:	00090003          	lb	zero,0(s2)
    3356:	0100                	addi	s0,sp,128
    3358:	0905                	addi	s2,s2,1
    335a:	0306                	slli	t1,t1,0x1
    335c:	0901                	addi	s2,s2,0
    335e:	0004                	0x4
    3360:	0501                	addi	a0,a0,0
    3362:	0305                	addi	t1,t1,1
    3364:	0901                	addi	s2,s2,0
    3366:	0010                	0x10
    3368:	0301                	addi	t1,t1,0
    336a:	090a                	slli	s2,s2,0x2
    336c:	0000                	unimp
    336e:	0301                	addi	t1,t1,0
    3370:	0902                	c.slli64	s2
    3372:	000c                	0xc
    3374:	0501                	addi	a0,a0,0
    3376:	0601                	addi	a2,a2,0
    3378:	00090103          	lb	sp,0(s2)
    337c:	0100                	addi	s0,sp,128
    337e:	0905                	addi	s2,s2,1
    3380:	0306                	slli	t1,t1,0x1
    3382:	7dd6                	flw	fs11,116(sp)
    3384:	4409                	li	s0,2
    3386:	0100                	addi	s0,sp,128
    3388:	1a05                	addi	s4,s4,-31
    338a:	0306                	slli	t1,t1,0x1
    338c:	0900                	addi	s0,sp,144
    338e:	0000                	unimp
    3390:	0501                	addi	a0,a0,0
    3392:	0611                	addi	a2,a2,4
    3394:	0900c503          	lbu	a0,144(ra)
    3398:	000c                	0xc
    339a:	0501                	addi	a0,a0,0
    339c:	0615                	addi	a2,a2,5
    339e:	00090103          	lb	sp,0(s2)
    33a2:	0100                	addi	s0,sp,128
    33a4:	0d05                	addi	s10,s10,1
    33a6:	0306                	slli	t1,t1,0x1
    33a8:	0901                	addi	s2,s2,0
    33aa:	001c                	0x1c
    33ac:	0501                	addi	a0,a0,0
    33ae:	060e                	slli	a2,a2,0x3
    33b0:	00090003          	lb	zero,0(s2)
    33b4:	0100                	addi	s0,sp,128
    33b6:	0905                	addi	s2,s2,1
    33b8:	0306                	slli	t1,t1,0x1
    33ba:	097a                	slli	s2,s2,0x1e
    33bc:	0004                	0x4
    33be:	0301                	addi	t1,t1,0
    33c0:	0901                	addi	s2,s2,0
    33c2:	0000                	unimp
    33c4:	0501                	addi	a0,a0,0
    33c6:	060c                	addi	a1,sp,768
    33c8:	00090003          	lb	zero,0(s2)
    33cc:	0100                	addi	s0,sp,128
    33ce:	1105                	addi	sp,sp,-31
    33d0:	0306                	slli	t1,t1,0x1
    33d2:	00040903          	lb	s2,0(s0)
    33d6:	0501                	addi	a0,a0,0
    33d8:	064c                	addi	a1,sp,772
    33da:	00090103          	lb	sp,0(s2)
    33de:	0100                	addi	s0,sp,128
    33e0:	3a05                	jal	2d10 <crc16+0x70>
    33e2:	04090003          	lb	zero,64(s2)
    33e6:	0100                	addi	s0,sp,128
    33e8:	1505                	addi	a0,a0,-31
    33ea:	04090003          	lb	zero,64(s2)
    33ee:	0100                	addi	s0,sp,128
    33f0:	0e05                	addi	t3,t3,1
    33f2:	04090103          	lb	sp,64(s2)
    33f6:	0100                	addi	s0,sp,128
    33f8:	3a05                	jal	2d28 <crc16+0x88>
    33fa:	0c097f03          	0xc097f03
    33fe:	0100                	addi	s0,sp,128
    3400:	1505                	addi	a0,a0,-31
    3402:	04090003          	lb	zero,64(s2)
    3406:	0100                	addi	s0,sp,128
    3408:	0d05                	addi	s10,s10,1
    340a:	0306                	slli	t1,t1,0x1
    340c:	0901                	addi	s2,s2,0
    340e:	0018                	0x18
    3410:	0501                	addi	a0,a0,0
    3412:	0309                	addi	t1,t1,2
    3414:	097a                	slli	s2,s2,0x1e
    3416:	0000                	unimp
    3418:	0301                	addi	t1,t1,0
    341a:	0901                	addi	s2,s2,0
    341c:	0000                	unimp
    341e:	0501                	addi	a0,a0,0
    3420:	060c                	addi	a1,sp,768
    3422:	00090003          	lb	zero,0(s2)
    3426:	0100                	addi	s0,sp,128
    3428:	1105                	addi	sp,sp,-31
    342a:	0200                	addi	s0,sp,256
    342c:	0104                	addi	s1,sp,128
    342e:	0306                	slli	t1,t1,0x1
    3430:	00040903          	lb	s2,0(s0)
    3434:	0501                	addi	a0,a0,0
    3436:	004c                	addi	a1,sp,4
    3438:	0402                	c.slli64	s0
    343a:	0601                	addi	a2,a2,0
    343c:	00090103          	lb	sp,0(s2)
    3440:	0100                	addi	s0,sp,128
    3442:	3a05                	jal	2d72 <crc16+0xd2>
    3444:	0200                	addi	s0,sp,256
    3446:	0104                	addi	s1,sp,128
    3448:	04090003          	lb	zero,64(s2)
    344c:	0100                	addi	s0,sp,128
    344e:	1505                	addi	a0,a0,-31
    3450:	0200                	addi	s0,sp,256
    3452:	0104                	addi	s1,sp,128
    3454:	08090003          	lb	zero,128(s2)
    3458:	0100                	addi	s0,sp,128
    345a:	0d05                	addi	s10,s10,1
    345c:	0200                	addi	s0,sp,256
    345e:	0104                	addi	s1,sp,128
    3460:	0306                	slli	t1,t1,0x1
    3462:	0901                	addi	s2,s2,0
    3464:	0004                	0x4
    3466:	0501                	addi	a0,a0,0
    3468:	0009                	c.nop	2
    346a:	0402                	c.slli64	s0
    346c:	0301                	addi	t1,t1,0
    346e:	0906                	slli	s2,s2,0x1
    3470:	0000                	unimp
    3472:	0501                	addi	a0,a0,0
    3474:	000c                	0xc
    3476:	0402                	c.slli64	s0
    3478:	0601                	addi	a2,a2,0
    347a:	00090003          	lb	zero,0(s2)
    347e:	0100                	addi	s0,sp,128
    3480:	0505                	addi	a0,a0,1
    3482:	0306                	slli	t1,t1,0x1
    3484:	01d0                	addi	a2,sp,196
    3486:	0809                	addi	a6,a6,2
    3488:	0100                	addi	s0,sp,128
    348a:	0905                	addi	s2,s2,1
    348c:	00090103          	lb	sp,0(s2)
    3490:	0100                	addi	s0,sp,128
    3492:	0d05                	addi	s10,s10,1
    3494:	097d9803          	lh	a6,151(s11) # 9740097 <__freertos_irq_stack_top+0x8730097>
    3498:	0014                	0x14
    349a:	0501                	addi	a0,a0,0
    349c:	061a                	slli	a2,a2,0x6
    349e:	00090003          	lb	zero,0(s2)
    34a2:	0100                	addi	s0,sp,128
    34a4:	0505                	addi	a0,a0,1
    34a6:	04097903          	0x4097903
    34aa:	0100                	addi	s0,sp,128
    34ac:	2205                	jal	35cc <__divdf3+0x190>
    34ae:	08090003          	lb	zero,128(s2)
    34b2:	0100                	addi	s0,sp,128
    34b4:	0905                	addi	s2,s2,1
    34b6:	0306                	slli	t1,t1,0x1
    34b8:	02d4                	addi	a3,sp,324
    34ba:	0809                	addi	a6,a6,2
    34bc:	0100                	addi	s0,sp,128
    34be:	10090403          	lb	s0,256(s2)
    34c2:	0100                	addi	s0,sp,128
    34c4:	0c05                	addi	s8,s8,1
    34c6:	0306                	slli	t1,t1,0x1
    34c8:	0900                	addi	s0,sp,144
    34ca:	0000                	unimp
    34cc:	0501                	addi	a0,a0,0
    34ce:	060d                	addi	a2,a2,3
    34d0:	0c090203          	lb	tp,192(s2)
    34d4:	0100                	addi	s0,sp,128
    34d6:	2c05                	jal	3706 <__divdf3+0x2ca>
    34d8:	0306                	slli	t1,t1,0x1
    34da:	0901                	addi	s2,s2,0
    34dc:	0000                	unimp
    34de:	0501                	addi	a0,a0,0
    34e0:	030d                	addi	t1,t1,3
    34e2:	097f                	0x97f
    34e4:	0004                	0x4
    34e6:	0501                	addi	a0,a0,0
    34e8:	031d                	addi	t1,t1,7
    34ea:	0902                	c.slli64	s2
    34ec:	0014                	0x14
    34ee:	0501                	addi	a0,a0,0
    34f0:	030d                	addi	t1,t1,3
    34f2:	097e                	slli	s2,s2,0x1f
    34f4:	0004                	0x4
    34f6:	0501                	addi	a0,a0,0
    34f8:	031d                	addi	t1,t1,7
    34fa:	0902                	c.slli64	s2
    34fc:	0004                	0x4
    34fe:	0501                	addi	a0,a0,0
    3500:	030d                	addi	t1,t1,3
    3502:	097e                	slli	s2,s2,0x1f
    3504:	0008                	0x8
    3506:	0601                	addi	a2,a2,0
    3508:	38090603          	lb	a2,896(s2)
    350c:	0100                	addi	s0,sp,128
    350e:	14090803          	lb	a6,320(s2)
    3512:	0100                	addi	s0,sp,128
    3514:	0905                	addi	s2,s2,1
    3516:	10095003          	lhu	zero,256(s2)
    351a:	0100                	addi	s0,sp,128
    351c:	10090203          	lb	tp,256(s2)
    3520:	0100                	addi	s0,sp,128
    3522:	1505                	addi	a0,a0,-31
    3524:	0306                	slli	t1,t1,0x1
    3526:	0900                	addi	s0,sp,144
    3528:	0000                	unimp
    352a:	0501                	addi	a0,a0,0
    352c:	0605                	addi	a2,a2,1
    352e:	08091303          	lh	t1,128(s2)
    3532:	0100                	addi	s0,sp,128
    3534:	1a05                	addi	s4,s4,-31
    3536:	0306                	slli	t1,t1,0x1
    3538:	0900                	addi	s0,sp,144
    353a:	0000                	unimp
    353c:	0501                	addi	a0,a0,0
    353e:	0308                	addi	a0,sp,384
    3540:	0900                	addi	s0,sp,144
    3542:	0004                	0x4
    3544:	0501                	addi	a0,a0,0
    3546:	060d                	addi	a2,a2,3
    3548:	097fa003          	lw	zero,151(t6) # fffeb097 <__freertos_irq_stack_top+0xfefdb097>
    354c:	0008                	0x8
    354e:	0301                	addi	t1,t1,0
    3550:	0901                	addi	s2,s2,0
    3552:	0000                	unimp
    3554:	0301                	addi	t1,t1,0
    3556:	0901                	addi	s2,s2,0
    3558:	0010                	0x10
    355a:	0501                	addi	a0,a0,0
    355c:	0305                	addi	t1,t1,1
    355e:	00000913          	li	s2,0
    3562:	0501                	addi	a0,a0,0
    3564:	060d                	addi	a2,a2,3
    3566:	00096c03          	0x96c03
    356a:	0100                	addi	s0,sp,128
    356c:	1605                	addi	a2,a2,-31
    356e:	10097f03          	0x10097f03
    3572:	0100                	addi	s0,sp,128
    3574:	0d05                	addi	s10,s10,1
    3576:	04090103          	lb	sp,64(s2)
    357a:	0100                	addi	s0,sp,128
    357c:	1605                	addi	a2,a2,-31
    357e:	0c097f03          	0xc097f03
    3582:	0100                	addi	s0,sp,128
    3584:	0d05                	addi	s10,s10,1
    3586:	0306                	slli	t1,t1,0x1
    3588:	0008097b          	0x8097b
    358c:	0301                	addi	t1,t1,0
    358e:	0901                	addi	s2,s2,0
    3590:	0000                	unimp
    3592:	0301                	addi	t1,t1,0
    3594:	0901                	addi	s2,s2,0
    3596:	0020                	addi	s0,sp,8
    3598:	0501                	addi	a0,a0,0
    359a:	0305                	addi	t1,t1,1
    359c:	0918                	addi	a4,sp,144
    359e:	0000                	unimp
    35a0:	0501                	addi	a0,a0,0
    35a2:	060d                	addi	a2,a2,3
    35a4:	00096703          	0x96703
    35a8:	0100                	addi	s0,sp,128
    35aa:	1605                	addi	a2,a2,-31
    35ac:	0c097f03          	0xc097f03
    35b0:	0100                	addi	s0,sp,128
    35b2:	0d05                	addi	s10,s10,1
    35b4:	0306                	slli	t1,t1,0x1
    35b6:	00080913          	mv	s2,a6
    35ba:	0301                	addi	t1,t1,0
    35bc:	0901                	addi	s2,s2,0
    35be:	0000                	unimp
    35c0:	0301                	addi	t1,t1,0
    35c2:	0901                	addi	s2,s2,0
    35c4:	0010                	0x10
    35c6:	0501                	addi	a0,a0,0
    35c8:	0305                	addi	t1,t1,1
    35ca:	0905                	addi	s2,s2,1
    35cc:	0000                	unimp
    35ce:	0501                	addi	a0,a0,0
    35d0:	060d                	addi	a2,a2,3
    35d2:	00097a03          	0x97a03
    35d6:	0100                	addi	s0,sp,128
    35d8:	1605                	addi	a2,a2,-31
    35da:	08097f03          	0x8097f03
    35de:	0100                	addi	s0,sp,128
    35e0:	0d05                	addi	s10,s10,1
    35e2:	04090103          	lb	sp,64(s2)
    35e6:	0100                	addi	s0,sp,128
    35e8:	1605                	addi	a2,a2,-31
    35ea:	10097f03          	0x10097f03
    35ee:	0100                	addi	s0,sp,128
    35f0:	0905                	addi	s2,s2,1
    35f2:	08090903          	lb	s2,128(s2)
    35f6:	0100                	addi	s0,sp,128
    35f8:	0809                	addi	a6,a6,2
    35fa:	0000                	unimp
    35fc:	0101                	addi	sp,sp,0
    35fe:	11da                	slli	gp,gp,0x36
    3600:	0000                	unimp
    3602:	01a80003          	lb	zero,26(a6)
    3606:	0000                	unimp
    3608:	0101                	addi	sp,sp,0
    360a:	000d0efb          	0xd0efb
    360e:	0101                	addi	sp,sp,0
    3610:	0101                	addi	sp,sp,0
    3612:	0000                	unimp
    3614:	0100                	addi	s0,sp,128
    3616:	0000                	unimp
    3618:	2e01                	jal	3928 <__divdf3+0x4ec>
    361a:	6372732f          	0x6372732f
    361e:	726f632f          	0x726f632f
    3622:	6d65                	lui	s10,0x19
    3624:	7261                	lui	tp,0xffff8
    3626:	3a65006b          	0x3a65006b
    362a:	705c                	flw	fa5,36(s0)
    362c:	6f72                	flw	ft10,28(sp)
    362e:	6d617267          	0x6d617267
    3632:	6620                	flw	fs0,72(a2)
    3634:	6c69                	lui	s8,0x1a
    3636:	7365                	lui	t1,0xffff9
    3638:	2820                	fld	fs0,80(s0)
    363a:	3878                	fld	fa4,240(s0)
    363c:	2936                	fld	fs2,328(sp)
    363e:	785c                	flw	fa5,52(s0)
    3640:	6170                	flw	fa2,68(a0)
    3642:	722d6b63          	bltu	s10,sp,3d78 <__ledf2+0xb4>
    3646:	7369                	lui	t1,0xffffa
    3648:	6e2d7663          	bgeu	s10,sp,3d34 <__ledf2+0x70>
    364c:	2d656e6f          	jal	t3,59922 <_data_lma+0x4f30a>
    3650:	6d65                	lui	s10,0x19
    3652:	6562                	flw	fa0,24(sp)
    3654:	2d64                	fld	fs1,216(a0)
    3656:	2d636367          	0x2d636367
    365a:	2e38                	fld	fa4,88(a2)
    365c:	2d302e33          	0x2d302e33
    3660:	2e32                	fld	ft8,264(sp)
    3662:	696c5c33          	0x696c5c33
    3666:	5c62                	lw	s8,56(sp)
    3668:	5c636367          	0x5c636367
    366c:	6972                	flw	fs2,28(sp)
    366e:	2d766373          	csrrsi	t1,0x2d7,12
    3672:	6f6e                	flw	ft10,216(sp)
    3674:	656e                	flw	fa0,216(sp)
    3676:	652d                	lui	a0,0xb
    3678:	626d                	lui	tp,0x1b
    367a:	6465                	lui	s0,0x19
    367c:	385c                	fld	fa5,176(s0)
    367e:	332e                	fld	ft6,232(sp)
    3680:	302e                	fld	ft0,232(sp)
    3682:	695c                	flw	fa5,20(a0)
    3684:	636e                	flw	ft6,216(sp)
    3686:	756c                	flw	fa1,108(a0)
    3688:	6564                	flw	fs1,76(a0)
    368a:	6500                	flw	fs0,8(a0)
    368c:	5c3a                	lw	s8,172(sp)
    368e:	7270                	flw	fa2,100(a2)
    3690:	6172676f          	jal	a4,2a4a6 <_data_lma+0x1fe8e>
    3694:	206d                	jal	373e <__divdf3+0x302>
    3696:	6966                	flw	fs2,88(sp)
    3698:	656c                	flw	fa1,76(a0)
    369a:	78282073          	csrs	0x782,a6
    369e:	3638                	fld	fa4,104(a2)
    36a0:	5c29                	li	s8,-22
    36a2:	7078                	flw	fa4,100(s0)
    36a4:	6361                	lui	t1,0x18
    36a6:	69722d6b          	0x69722d6b
    36aa:	2d766373          	csrrsi	t1,0x2d7,12
    36ae:	6f6e                	flw	ft10,216(sp)
    36b0:	656e                	flw	fa0,216(sp)
    36b2:	652d                	lui	a0,0xb
    36b4:	626d                	lui	tp,0x1b
    36b6:	6465                	lui	s0,0x19
    36b8:	672d                	lui	a4,0xb
    36ba:	382d6363          	bltu	s10,sp,3a40 <__divdf3+0x604>
    36be:	332e                	fld	ft6,232(sp)
    36c0:	302e                	fld	ft0,232(sp)
    36c2:	322d                	jal	2fec <__udivdi3+0x50>
    36c4:	332e                	fld	ft6,232(sp)
    36c6:	725c                	flw	fa5,36(a2)
    36c8:	7369                	lui	t1,0xffffa
    36ca:	6e2d7663          	bgeu	s10,sp,3db6 <__ledf2+0xf2>
    36ce:	2d656e6f          	jal	t3,599a4 <_data_lma+0x4f38c>
    36d2:	6d65                	lui	s10,0x19
    36d4:	6562                	flw	fa0,24(sp)
    36d6:	5c64                	lw	s1,124(s0)
    36d8:	6e69                	lui	t3,0x1a
    36da:	64756c63          	bltu	a0,t2,3d32 <__ledf2+0x6e>
    36de:	5c65                	li	s8,-7
    36e0:	00737973          	csrrci	s2,0x7,6
    36e4:	3a65                	jal	309c <__udivdi3+0x100>
    36e6:	705c                	flw	fa5,36(s0)
    36e8:	6f72                	flw	ft10,28(sp)
    36ea:	6d617267          	0x6d617267
    36ee:	6620                	flw	fs0,72(a2)
    36f0:	6c69                	lui	s8,0x1a
    36f2:	7365                	lui	t1,0xffff9
    36f4:	2820                	fld	fs0,80(s0)
    36f6:	3878                	fld	fa4,240(s0)
    36f8:	2936                	fld	fs2,328(sp)
    36fa:	785c                	flw	fa5,52(s0)
    36fc:	6170                	flw	fa2,68(a0)
    36fe:	722d6b63          	bltu	s10,sp,3e34 <__fixunsdfsi+0x70>
    3702:	7369                	lui	t1,0xffffa
    3704:	6e2d7663          	bgeu	s10,sp,3df0 <__fixunsdfsi+0x2c>
    3708:	2d656e6f          	jal	t3,599de <_data_lma+0x4f3c6>
    370c:	6d65                	lui	s10,0x19
    370e:	6562                	flw	fa0,24(sp)
    3710:	2d64                	fld	fs1,216(a0)
    3712:	2d636367          	0x2d636367
    3716:	2e38                	fld	fa4,88(a2)
    3718:	2d302e33          	0x2d302e33
    371c:	2e32                	fld	ft8,264(sp)
    371e:	69725c33          	0x69725c33
    3722:	2d766373          	csrrsi	t1,0x2d7,12
    3726:	6f6e                	flw	ft10,216(sp)
    3728:	656e                	flw	fa0,216(sp)
    372a:	652d                	lui	a0,0xb
    372c:	626d                	lui	tp,0x1b
    372e:	6465                	lui	s0,0x19
    3730:	695c                	flw	fa5,20(a0)
    3732:	636e                	flw	ft6,216(sp)
    3734:	756c                	flw	fa1,108(a0)
    3736:	6564                	flw	fs1,76(a0)
    3738:	0000                	unimp
    373a:	65726f63          	bltu	tp,s7,3d98 <__ledf2+0xd4>
    373e:	6d5f 7461 6972      	0x697274616d5f
    3744:	2e78                	fld	fa4,216(a2)
    3746:	00010063          	beqz	sp,3746 <__divdf3+0x30a>
    374a:	7300                	flw	fs0,32(a4)
    374c:	6474                	flw	fa3,76(s0)
    374e:	6564                	flw	fs1,76(a0)
    3750:	2e66                	fld	ft8,88(sp)
    3752:	0068                	addi	a0,sp,12
    3754:	0002                	c.slli64	zero
    3756:	5f00                	lw	s0,56(a4)
    3758:	7974                	flw	fa3,116(a0)
    375a:	6570                	flw	fa2,76(a0)
    375c:	00682e73          	csrrs	t3,0x6,a6
    3760:	72000003          	lb	zero,1824(zero) # 720 <main+0x6a8>
    3764:	6565                	lui	a0,0x19
    3766:	746e                	flw	fs0,248(sp)
    3768:	682e                	flw	fa6,200(sp)
    376a:	0300                	addi	s0,sp,384
    376c:	0000                	unimp
    376e:	6f6c                	flw	fa1,92(a4)
    3770:	682e6b63          	bltu	t3,sp,3e06 <__fixunsdfsi+0x42>
    3774:	0300                	addi	s0,sp,384
    3776:	0000                	unimp
    3778:	6974                	flw	fa3,84(a0)
    377a:	656d                	lui	a0,0x1b
    377c:	682e                	flw	fa6,200(sp)
    377e:	0400                	addi	s0,sp,512
    3780:	0000                	unimp
    3782:	65726f63          	bltu	tp,s7,3de0 <__fixunsdfsi+0x1c>
    3786:	705f 726f 6d74      	0x6d74726f705f
    378c:	2e65                	jal	3b44 <__divdf3+0x708>
    378e:	0068                	addi	a0,sp,12
    3790:	0001                	nop
    3792:	6300                	flw	fs0,0(a4)
    3794:	6d65726f          	jal	tp,5ae6a <_data_lma+0x50852>
    3798:	7261                	lui	tp,0xffff8
    379a:	00682e6b          	0x682e6b
    379e:	0001                	nop
    37a0:	3c00                	fld	fs0,56(s0)
    37a2:	7562                	flw	fa0,56(sp)
    37a4:	6c69                	lui	s8,0x1a
    37a6:	2d74                	fld	fa3,216(a0)
    37a8:	6e69                	lui	t3,0x1a
    37aa:	003e                	c.slli	zero,0xf
    37ac:	0000                	unimp
    37ae:	0000                	unimp
    37b0:	0105                	addi	sp,sp,1
    37b2:	0500                	addi	s0,sp,640
    37b4:	0402                	c.slli64	s0
    37b6:	0016                	c.slli	zero,0x5
    37b8:	0300                	addi	s0,sp,384
    37ba:	0182                	c.slli64	gp
    37bc:	0501                	addi	a0,a0,0
    37be:	060c                	addi	a1,sp,768
    37c0:	0c090203          	lb	tp,192(s2)
    37c4:	0100                	addi	s0,sp,128
    37c6:	0105                	addi	sp,sp,1
    37c8:	04097e03          	0x4097e03
    37cc:	0100                	addi	s0,sp,128
    37ce:	2c090003          	lb	zero,704(s2)
    37d2:	0100                	addi	s0,sp,128
    37d4:	0505                	addi	a0,a0,1
    37d6:	0306                	slli	t1,t1,0x1
    37d8:	0901                	addi	s2,s2,0
    37da:	0004                	0x4
    37dc:	0301                	addi	t1,t1,0
    37de:	0901                	addi	s2,s2,0
    37e0:	0000                	unimp
    37e2:	0501                	addi	a0,a0,0
    37e4:	060c                	addi	a1,sp,768
    37e6:	00090003          	lb	zero,0(s2)
    37ea:	0100                	addi	s0,sp,128
    37ec:	0505                	addi	a0,a0,1
    37ee:	0306                	slli	t1,t1,0x1
    37f0:	0902                	c.slli64	s2
    37f2:	0004                	0x4
    37f4:	0301                	addi	t1,t1,0
    37f6:	0198                	addi	a4,sp,192
    37f8:	0009                	c.nop	2
    37fa:	0100                	addi	s0,sp,128
    37fc:	00090103          	lb	sp,0(s2)
    3800:	0100                	addi	s0,sp,128
    3802:	0c05                	addi	s8,s8,1
    3804:	0306                	slli	t1,t1,0x1
    3806:	0900                	addi	s0,sp,144
    3808:	0030                	addi	a2,sp,8
    380a:	0501                	addi	a0,a0,0
    380c:	0301                	addi	t1,t1,0
    380e:	0c097ee3          	bgeu	s2,zero,40ea <__exponent+0x2>
    3812:	0100                	addi	s0,sp,128
    3814:	0d05                	addi	s10,s10,1
    3816:	0306                	slli	t1,t1,0x1
    3818:	01a1                	addi	gp,gp,8
    381a:	0409                	addi	s0,s0,2
    381c:	0100                	addi	s0,sp,128
    381e:	1a05                	addi	s4,s4,-31
    3820:	0306                	slli	t1,t1,0x1
    3822:	0900                	addi	s0,sp,144
    3824:	0000                	unimp
    3826:	0501                	addi	a0,a0,0
    3828:	0309                	addi	t1,t1,2
    382a:	097e                	slli	s2,s2,0x1f
    382c:	0010                	0x10
    382e:	0501                	addi	a0,a0,0
    3830:	0319                	addi	t1,t1,6
    3832:	097e                	slli	s2,s2,0x1f
    3834:	0004                	0x4
    3836:	0501                	addi	a0,a0,0
    3838:	0305                	addi	t1,t1,1
    383a:	0900                	addi	s0,sp,144
    383c:	0008                	0x8
    383e:	0501                	addi	a0,a0,0
    3840:	030c                	addi	a1,sp,384
    3842:	0970                	addi	a2,sp,156
    3844:	001c                	0x1c
    3846:	0501                	addi	a0,a0,0
    3848:	0305                	addi	t1,t1,1
    384a:	0910                	addi	a2,sp,144
    384c:	000c                	0xc
    384e:	0501                	addi	a0,a0,0
    3850:	060d                	addi	a2,a2,3
    3852:	08097403          	0x8097403
    3856:	0100                	addi	s0,sp,128
    3858:	1c05                	addi	s8,s8,-31
    385a:	0306                	slli	t1,t1,0x1
    385c:	0900                	addi	s0,sp,144
    385e:	0000                	unimp
    3860:	0501                	addi	a0,a0,0
    3862:	0331                	addi	t1,t1,12
    3864:	0900                	addi	s0,sp,144
    3866:	000c                	0xc
    3868:	0501                	addi	a0,a0,0
    386a:	031a                	slli	t1,t1,0x6
    386c:	0900                	addi	s0,sp,144
    386e:	0004                	0x4
    3870:	0501                	addi	a0,a0,0
    3872:	0309                	addi	t1,t1,2
    3874:	097e                	slli	s2,s2,0x1f
    3876:	0004                	0x4
    3878:	0501                	addi	a0,a0,0
    387a:	0319                	addi	t1,t1,6
    387c:	097e                	slli	s2,s2,0x1f
    387e:	0004                	0x4
    3880:	0501                	addi	a0,a0,0
    3882:	0305                	addi	t1,t1,1
    3884:	0900                	addi	s0,sp,144
    3886:	000c                	0xc
    3888:	0501                	addi	a0,a0,0
    388a:	030c                	addi	a1,sp,384
    388c:	0961                	addi	s2,s2,24
    388e:	0014                	0x14
    3890:	0501                	addi	a0,a0,0
    3892:	0315                	addi	t1,t1,5
    3894:	097f                	0x97f
    3896:	0004                	0x4
    3898:	0501                	addi	a0,a0,0
    389a:	030c                	addi	a1,sp,384
    389c:	0900                	addi	s0,sp,144
    389e:	0004                	0x4
    38a0:	0301                	addi	t1,t1,0
    38a2:	00040903          	lb	s2,0(s0) # 19000 <_data_lma+0xe9e8>
    38a6:	0501                	addi	a0,a0,0
    38a8:	0305                	addi	t1,t1,1
    38aa:	0900                	addi	s0,sp,144
    38ac:	000c                	0xc
    38ae:	0501                	addi	a0,a0,0
    38b0:	0315                	addi	t1,t1,5
    38b2:	090d                	addi	s2,s2,3
    38b4:	0008                	0x8
    38b6:	0501                	addi	a0,a0,0
    38b8:	060d                	addi	a2,a2,3
    38ba:	0c090203          	lb	tp,192(s2)
    38be:	0100                	addi	s0,sp,128
    38c0:	1105                	addi	sp,sp,-31
    38c2:	0306                	slli	t1,t1,0x1
    38c4:	0975                	addi	s2,s2,29
    38c6:	0000                	unimp
    38c8:	0501                	addi	a0,a0,0
    38ca:	0309                	addi	t1,t1,2
    38cc:	097e                	slli	s2,s2,0x1f
    38ce:	0004                	0x4
    38d0:	0501                	addi	a0,a0,0
    38d2:	060d                	addi	a2,a2,3
    38d4:	04090203          	lb	tp,64(s2)
    38d8:	0100                	addi	s0,sp,128
    38da:	1105                	addi	sp,sp,-31
    38dc:	00090903          	lb	s2,0(s2)
    38e0:	0100                	addi	s0,sp,128
    38e2:	00097b03          	0x97b03
    38e6:	0100                	addi	s0,sp,128
    38e8:	0306                	slli	t1,t1,0x1
    38ea:	097c                	addi	a5,sp,156
    38ec:	0000                	unimp
    38ee:	0501                	addi	a0,a0,0
    38f0:	060d                	addi	a2,a2,3
    38f2:	04090103          	lb	sp,64(s2)
    38f6:	0100                	addi	s0,sp,128
    38f8:	2905                	jal	3d28 <__ledf2+0x64>
    38fa:	0306                	slli	t1,t1,0x1
    38fc:	0908                	addi	a0,sp,144
    38fe:	0008                	0x8
    3900:	0501                	addi	a0,a0,0
    3902:	0311                	addi	t1,t1,4
    3904:	0978                	addi	a4,sp,156
    3906:	0004                	0x4
    3908:	0501                	addi	a0,a0,0
    390a:	060d                	addi	a2,a2,3
    390c:	04090103          	lb	sp,64(s2)
    3910:	0100                	addi	s0,sp,128
    3912:	1505                	addi	a0,a0,-31
    3914:	0306                	slli	t1,t1,0x1
    3916:	0902                	c.slli64	s2
    3918:	0000                	unimp
    391a:	0301                	addi	t1,t1,0
    391c:	0905                	addi	s2,s2,1
    391e:	0004                	0x4
    3920:	0501                	addi	a0,a0,0
    3922:	0310                	addi	a2,sp,384
    3924:	0979                	addi	s2,s2,30
    3926:	0004                	0x4
    3928:	0501                	addi	a0,a0,0
    392a:	0315                	addi	t1,t1,5
    392c:	0902                	c.slli64	s2
    392e:	0004                	0x4
    3930:	0501                	addi	a0,a0,0
    3932:	0611                	addi	a2,a2,4
    3934:	0c090103          	lb	sp,192(s2)
    3938:	0100                	addi	s0,sp,128
    393a:	1505                	addi	a0,a0,-31
    393c:	0306                	slli	t1,t1,0x1
    393e:	0900                	addi	s0,sp,144
    3940:	0000                	unimp
    3942:	0501                	addi	a0,a0,0
    3944:	060d                	addi	a2,a2,3
    3946:	04090603          	lb	a2,64(s2)
    394a:	0100                	addi	s0,sp,128
    394c:	1105                	addi	sp,sp,-31
    394e:	0306                	slli	t1,t1,0x1
    3950:	0975                	addi	s2,s2,29
    3952:	0000                	unimp
    3954:	0501                	addi	a0,a0,0
    3956:	0309                	addi	t1,t1,2
    3958:	097e                	slli	s2,s2,0x1f
    395a:	0004                	0x4
    395c:	0501                	addi	a0,a0,0
    395e:	0319                	addi	t1,t1,6
    3960:	097e                	slli	s2,s2,0x1f
    3962:	0004                	0x4
    3964:	0501                	addi	a0,a0,0
    3966:	0305                	addi	t1,t1,1
    3968:	0900                	addi	s0,sp,144
    396a:	0008                	0x8
    396c:	0601                	addi	a2,a2,0
    396e:	0c091203          	lh	tp,192(s2)
    3972:	0100                	addi	s0,sp,128
    3974:	0b05                	addi	s6,s6,1
    3976:	0306                	slli	t1,t1,0x1
    3978:	00097f87          	0x97f87
    397c:	0100                	addi	s0,sp,128
    397e:	0505                	addi	a0,a0,1
    3980:	0306                	slli	t1,t1,0x1
    3982:	0904                	addi	s1,sp,144
    3984:	0010                	0x10
    3986:	0301                	addi	t1,t1,0
    3988:	01a1                	addi	gp,gp,8
    398a:	0009                	c.nop	2
    398c:	0100                	addi	s0,sp,128
    398e:	00090103          	lb	sp,0(s2)
    3992:	0100                	addi	s0,sp,128
    3994:	0b05                	addi	s6,s6,1
    3996:	0306                	slli	t1,t1,0x1
    3998:	7eda                	flw	ft9,180(sp)
    399a:	1409                	addi	s0,s0,-30
    399c:	0100                	addi	s0,sp,128
    399e:	0905                	addi	s2,s2,1
    39a0:	0306                	slli	t1,t1,0x1
    39a2:	01a8                	addi	a0,sp,200
    39a4:	0c09                	addi	s8,s8,2
    39a6:	0100                	addi	s0,sp,128
    39a8:	00090103          	lb	sp,0(s2)
    39ac:	0100                	addi	s0,sp,128
    39ae:	0b05                	addi	s6,s6,1
    39b0:	0306                	slli	t1,t1,0x1
    39b2:	00097ed7          	0x97ed7
    39b6:	0100                	addi	s0,sp,128
    39b8:	0d05                	addi	s10,s10,1
    39ba:	0306                	slli	t1,t1,0x1
    39bc:	0c0901ab          	0xc0901ab
    39c0:	0100                	addi	s0,sp,128
    39c2:	1505                	addi	a0,a0,-31
    39c4:	0306                	slli	t1,t1,0x1
    39c6:	0900                	addi	s0,sp,144
    39c8:	0000                	unimp
    39ca:	0501                	addi	a0,a0,0
    39cc:	032c                	addi	a1,sp,392
    39ce:	0900                	addi	s0,sp,144
    39d0:	0004                	0x4
    39d2:	0501                	addi	a0,a0,0
    39d4:	032a                	slli	t1,t1,0xa
    39d6:	0900                	addi	s0,sp,144
    39d8:	000c                	0xc
    39da:	0501                	addi	a0,a0,0
    39dc:	0312                	slli	t1,t1,0x4
    39de:	0900                	addi	s0,sp,144
    39e0:	0004                	0x4
    39e2:	0501                	addi	a0,a0,0
    39e4:	0309                	addi	t1,t1,2
    39e6:	097e                	slli	s2,s2,0x1f
    39e8:	0004                	0x4
    39ea:	0501                	addi	a0,a0,0
    39ec:	0305                	addi	t1,t1,1
    39ee:	097d                	addi	s2,s2,31
    39f0:	0010                	0x10
    39f2:	0501                	addi	a0,a0,0
    39f4:	030c                	addi	a1,sp,384
    39f6:	08097fbf 15050100 	0x1505010008097fbf
    39fe:	04097f03          	0x4097f03
    3a02:	0100                	addi	s0,sp,128
    3a04:	0c05                	addi	s8,s8,1
    3a06:	04090003          	lb	zero,64(s2)
    3a0a:	0100                	addi	s0,sp,128
    3a0c:	04090303          	lb	t1,64(s2)
    3a10:	0100                	addi	s0,sp,128
    3a12:	1005                	c.nop	-31
    3a14:	08090203          	lb	tp,128(s2)
    3a18:	0100                	addi	s0,sp,128
    3a1a:	1505                	addi	a0,a0,-31
    3a1c:	08090b03          	lb	s6,128(s2)
    3a20:	0100                	addi	s0,sp,128
    3a22:	1d05                	addi	s10,s10,-31
    3a24:	04097503          	0x4097503
    3a28:	0100                	addi	s0,sp,128
    3a2a:	1505                	addi	a0,a0,-31
    3a2c:	04090b03          	lb	s6,64(s2)
    3a30:	0100                	addi	s0,sp,128
    3a32:	0d05                	addi	s10,s10,1
    3a34:	0306                	slli	t1,t1,0x1
    3a36:	0902                	c.slli64	s2
    3a38:	0004                	0x4
    3a3a:	0501                	addi	a0,a0,0
    3a3c:	0611                	addi	a2,a2,4
    3a3e:	04097503          	0x4097503
    3a42:	0100                	addi	s0,sp,128
    3a44:	0905                	addi	s2,s2,1
    3a46:	04097e03          	0x4097e03
    3a4a:	0100                	addi	s0,sp,128
    3a4c:	0d05                	addi	s10,s10,1
    3a4e:	0306                	slli	t1,t1,0x1
    3a50:	0902                	c.slli64	s2
    3a52:	0004                	0x4
    3a54:	0501                	addi	a0,a0,0
    3a56:	0311                	addi	t1,t1,4
    3a58:	0909                	addi	s2,s2,2
    3a5a:	0000                	unimp
    3a5c:	0301                	addi	t1,t1,0
    3a5e:	0000097b          	0x97b
    3a62:	0601                	addi	a2,a2,0
    3a64:	00097c03          	0x97c03
    3a68:	0100                	addi	s0,sp,128
    3a6a:	0d05                	addi	s10,s10,1
    3a6c:	0306                	slli	t1,t1,0x1
    3a6e:	0901                	addi	s2,s2,0
    3a70:	0004                	0x4
    3a72:	0501                	addi	a0,a0,0
    3a74:	0629                	addi	a2,a2,10
    3a76:	08090803          	lb	a6,128(s2)
    3a7a:	0100                	addi	s0,sp,128
    3a7c:	1105                	addi	sp,sp,-31
    3a7e:	04097803          	0x4097803
    3a82:	0100                	addi	s0,sp,128
    3a84:	0d05                	addi	s10,s10,1
    3a86:	0306                	slli	t1,t1,0x1
    3a88:	0901                	addi	s2,s2,0
    3a8a:	0004                	0x4
    3a8c:	0501                	addi	a0,a0,0
    3a8e:	0615                	addi	a2,a2,5
    3a90:	00090203          	lb	tp,0(s2)
    3a94:	0100                	addi	s0,sp,128
    3a96:	04090503          	lb	a0,64(s2)
    3a9a:	0100                	addi	s0,sp,128
    3a9c:	1005                	c.nop	-31
    3a9e:	04097903          	0x4097903
    3aa2:	0100                	addi	s0,sp,128
    3aa4:	1505                	addi	a0,a0,-31
    3aa6:	04090203          	lb	tp,64(s2)
    3aaa:	0100                	addi	s0,sp,128
    3aac:	1d05                	addi	s10,s10,-31
    3aae:	04097a03          	0x4097a03
    3ab2:	0100                	addi	s0,sp,128
    3ab4:	1505                	addi	a0,a0,-31
    3ab6:	04090603          	lb	a2,64(s2)
    3aba:	0100                	addi	s0,sp,128
    3abc:	1105                	addi	sp,sp,-31
    3abe:	0306                	slli	t1,t1,0x1
    3ac0:	0901                	addi	s2,s2,0
    3ac2:	0004                	0x4
    3ac4:	0501                	addi	a0,a0,0
    3ac6:	0615                	addi	a2,a2,5
    3ac8:	00090003          	lb	zero,0(s2)
    3acc:	0100                	addi	s0,sp,128
    3ace:	0d05                	addi	s10,s10,1
    3ad0:	0306                	slli	t1,t1,0x1
    3ad2:	0906                	slli	s2,s2,0x1
    3ad4:	0004                	0x4
    3ad6:	0501                	addi	a0,a0,0
    3ad8:	0611                	addi	a2,a2,4
    3ada:	04097503          	0x4097503
    3ade:	0100                	addi	s0,sp,128
    3ae0:	0905                	addi	s2,s2,1
    3ae2:	04097e03          	0x4097e03
    3ae6:	0100                	addi	s0,sp,128
    3ae8:	1905                	addi	s2,s2,-31
    3aea:	04097e03          	0x4097e03
    3aee:	0100                	addi	s0,sp,128
    3af0:	0505                	addi	a0,a0,1
    3af2:	08090003          	lb	zero,128(s2)
    3af6:	0100                	addi	s0,sp,128
    3af8:	0306                	slli	t1,t1,0x1
    3afa:	0912                	slli	s2,s2,0x4
    3afc:	0004                	0x4
    3afe:	0501                	addi	a0,a0,0
    3b00:	8c03060b          	0x8c03060b
    3b04:	097f                	0x97f
    3b06:	0000                	unimp
    3b08:	0501                	addi	a0,a0,0
    3b0a:	0605                	addi	a2,a2,1
    3b0c:	10090403          	lb	s0,256(s2)
    3b10:	0100                	addi	s0,sp,128
    3b12:	0901af03          	lw	t5,144(gp) # 1001430 <__global_pointer$+0x90>
    3b16:	0000                	unimp
    3b18:	0301                	addi	t1,t1,0
    3b1a:	0901                	addi	s2,s2,0
    3b1c:	0000                	unimp
    3b1e:	0501                	addi	a0,a0,0
    3b20:	061a                	slli	a2,a2,0x6
    3b22:	00090403          	lb	s0,0(s2)
    3b26:	0100                	addi	s0,sp,128
    3b28:	0c05                	addi	s8,s8,1
    3b2a:	10097c03          	0x10097c03
    3b2e:	0100                	addi	s0,sp,128
    3b30:	1505                	addi	a0,a0,-31
    3b32:	097fb703          	0x97fb703
    3b36:	001c                	0x1c
    3b38:	0501                	addi	a0,a0,0
    3b3a:	0310                	addi	a2,sp,384
    3b3c:	080900cb          	fnmsub.s	ft1,fs2,ft0,ft1,rne
    3b40:	0100                	addi	s0,sp,128
    3b42:	0d05                	addi	s10,s10,1
    3b44:	0306                	slli	t1,t1,0x1
    3b46:	0902                	c.slli64	s2
    3b48:	0004                	0x4
    3b4a:	0301                	addi	t1,t1,0
    3b4c:	0901                	addi	s2,s2,0
    3b4e:	0000                	unimp
    3b50:	0501                	addi	a0,a0,0
    3b52:	0610                	addi	a2,sp,768
    3b54:	00097d03          	0x97d03
    3b58:	0100                	addi	s0,sp,128
    3b5a:	1405                	addi	s0,s0,-31
    3b5c:	0c090303          	lb	t1,192(s2)
    3b60:	0100                	addi	s0,sp,128
    3b62:	1105                	addi	sp,sp,-31
    3b64:	0306                	slli	t1,t1,0x1
    3b66:	0902                	c.slli64	s2
    3b68:	0004                	0x4
    3b6a:	0501                	addi	a0,a0,0
    3b6c:	0621                	addi	a2,a2,8
    3b6e:	00090003          	lb	zero,0(s2)
    3b72:	0100                	addi	s0,sp,128
    3b74:	3805                	jal	33a4 <__udivdi3+0x408>
    3b76:	04090003          	lb	zero,64(s2)
    3b7a:	0100                	addi	s0,sp,128
    3b7c:	2105                	jal	3f9c <__cvt+0x18>
    3b7e:	04097e03          	0x4097e03
    3b82:	0100                	addi	s0,sp,128
    3b84:	3605                	jal	36a4 <__divdf3+0x268>
    3b86:	08090203          	lb	tp,128(s2)
    3b8a:	0100                	addi	s0,sp,128
    3b8c:	1e05                	addi	t3,t3,-31
    3b8e:	08090003          	lb	zero,128(s2)
    3b92:	0100                	addi	s0,sp,128
    3b94:	0d05                	addi	s10,s10,1
    3b96:	04097e03          	0x4097e03
    3b9a:	0100                	addi	s0,sp,128
    3b9c:	1d05                	addi	s10,s10,-31
    3b9e:	08097d03          	0x8097d03
    3ba2:	0100                	addi	s0,sp,128
    3ba4:	0905                	addi	s2,s2,1
    3ba6:	0c090003          	lb	zero,192(s2)
    3baa:	0100                	addi	s0,sp,128
    3bac:	1905                	addi	s2,s2,-31
    3bae:	04097e03          	0x4097e03
    3bb2:	0100                	addi	s0,sp,128
    3bb4:	0505                	addi	a0,a0,1
    3bb6:	0c090003          	lb	zero,192(s2)
    3bba:	0100                	addi	s0,sp,128
    3bbc:	0c05                	addi	s8,s8,1
    3bbe:	097fac03          	lw	s8,151(t6)
    3bc2:	0008                	0x8
    3bc4:	0501                	addi	a0,a0,0
    3bc6:	0315                	addi	t1,t1,5
    3bc8:	097f                	0x97f
    3bca:	0004                	0x4
    3bcc:	0501                	addi	a0,a0,0
    3bce:	030c                	addi	a1,sp,384
    3bd0:	0900                	addi	s0,sp,144
    3bd2:	0004                	0x4
    3bd4:	0301                	addi	t1,t1,0
    3bd6:	00040903          	lb	s2,0(s0)
    3bda:	0501                	addi	a0,a0,0
    3bdc:	0310                	addi	a2,sp,384
    3bde:	0902                	c.slli64	s2
    3be0:	0008                	0x8
    3be2:	0501                	addi	a0,a0,0
    3be4:	0315                	addi	t1,t1,5
    3be6:	0008090b          	0x8090b
    3bea:	0501                	addi	a0,a0,0
    3bec:	031d                	addi	t1,t1,7
    3bee:	0975                	addi	s2,s2,29
    3bf0:	0004                	0x4
    3bf2:	0501                	addi	a0,a0,0
    3bf4:	0315                	addi	t1,t1,5
    3bf6:	0004090b          	0x4090b
    3bfa:	0501                	addi	a0,a0,0
    3bfc:	060d                	addi	a2,a2,3
    3bfe:	04090203          	lb	tp,64(s2)
    3c02:	0100                	addi	s0,sp,128
    3c04:	1105                	addi	sp,sp,-31
    3c06:	0306                	slli	t1,t1,0x1
    3c08:	0975                	addi	s2,s2,29
    3c0a:	0004                	0x4
    3c0c:	0501                	addi	a0,a0,0
    3c0e:	0309                	addi	t1,t1,2
    3c10:	097e                	slli	s2,s2,0x1f
    3c12:	0004                	0x4
    3c14:	0501                	addi	a0,a0,0
    3c16:	060d                	addi	a2,a2,3
    3c18:	04090203          	lb	tp,64(s2)
    3c1c:	0100                	addi	s0,sp,128
    3c1e:	1105                	addi	sp,sp,-31
    3c20:	00090903          	lb	s2,0(s2)
    3c24:	0100                	addi	s0,sp,128
    3c26:	00097b03          	0x97b03
    3c2a:	0100                	addi	s0,sp,128
    3c2c:	0306                	slli	t1,t1,0x1
    3c2e:	097c                	addi	a5,sp,156
    3c30:	0000                	unimp
    3c32:	0501                	addi	a0,a0,0
    3c34:	060d                	addi	a2,a2,3
    3c36:	04090103          	lb	sp,64(s2)
    3c3a:	0100                	addi	s0,sp,128
    3c3c:	2905                	jal	406c <__cvt+0xe8>
    3c3e:	0306                	slli	t1,t1,0x1
    3c40:	0908                	addi	a0,sp,144
    3c42:	0008                	0x8
    3c44:	0501                	addi	a0,a0,0
    3c46:	0311                	addi	t1,t1,4
    3c48:	0978                	addi	a4,sp,156
    3c4a:	0004                	0x4
    3c4c:	0501                	addi	a0,a0,0
    3c4e:	060d                	addi	a2,a2,3
    3c50:	04090103          	lb	sp,64(s2)
    3c54:	0100                	addi	s0,sp,128
    3c56:	1505                	addi	a0,a0,-31
    3c58:	0306                	slli	t1,t1,0x1
    3c5a:	0902                	c.slli64	s2
    3c5c:	0000                	unimp
    3c5e:	0301                	addi	t1,t1,0
    3c60:	0905                	addi	s2,s2,1
    3c62:	0004                	0x4
    3c64:	0501                	addi	a0,a0,0
    3c66:	0310                	addi	a2,sp,384
    3c68:	0979                	addi	s2,s2,30
    3c6a:	0004                	0x4
    3c6c:	0501                	addi	a0,a0,0
    3c6e:	0315                	addi	t1,t1,5
    3c70:	0902                	c.slli64	s2
    3c72:	0004                	0x4
    3c74:	0501                	addi	a0,a0,0
    3c76:	031d                	addi	t1,t1,7
    3c78:	097a                	slli	s2,s2,0x1e
    3c7a:	0004                	0x4
    3c7c:	0501                	addi	a0,a0,0
    3c7e:	0315                	addi	t1,t1,5
    3c80:	0906                	slli	s2,s2,0x1
    3c82:	0004                	0x4
    3c84:	0501                	addi	a0,a0,0
    3c86:	0611                	addi	a2,a2,4
    3c88:	04090103          	lb	sp,64(s2)
    3c8c:	0100                	addi	s0,sp,128
    3c8e:	1505                	addi	a0,a0,-31
    3c90:	0306                	slli	t1,t1,0x1
    3c92:	0900                	addi	s0,sp,144
    3c94:	0000                	unimp
    3c96:	0501                	addi	a0,a0,0
    3c98:	060d                	addi	a2,a2,3
    3c9a:	04090603          	lb	a2,64(s2)
    3c9e:	0100                	addi	s0,sp,128
    3ca0:	1105                	addi	sp,sp,-31
    3ca2:	0306                	slli	t1,t1,0x1
    3ca4:	0975                	addi	s2,s2,29
    3ca6:	0004                	0x4
    3ca8:	0501                	addi	a0,a0,0
    3caa:	0309                	addi	t1,t1,2
    3cac:	097e                	slli	s2,s2,0x1f
    3cae:	0004                	0x4
    3cb0:	0501                	addi	a0,a0,0
    3cb2:	0319                	addi	t1,t1,6
    3cb4:	097e                	slli	s2,s2,0x1f
    3cb6:	0004                	0x4
    3cb8:	0501                	addi	a0,a0,0
    3cba:	0305                	addi	t1,t1,1
    3cbc:	0900                	addi	s0,sp,144
    3cbe:	0008                	0x8
    3cc0:	0601                	addi	a2,a2,0
    3cc2:	04091203          	lh	tp,64(s2)
    3cc6:	0100                	addi	s0,sp,128
    3cc8:	0b05                	addi	s6,s6,1
    3cca:	0306                	slli	t1,t1,0x1
    3ccc:	7f91                	lui	t6,0xfffe4
    3cce:	0009                	c.nop	2
    3cd0:	0100                	addi	s0,sp,128
    3cd2:	0c05                	addi	s8,s8,1
    3cd4:	0901c503          	lbu	a0,144(gp) # 1001430 <__global_pointer$+0x90>
    3cd8:	0004                	0x4
    3cda:	0501                	addi	a0,a0,0
    3cdc:	7ebb030b          	0x7ebb030b
    3ce0:	0409                	addi	s0,s0,2
    3ce2:	0100                	addi	s0,sp,128
    3ce4:	0505                	addi	a0,a0,1
    3ce6:	0306                	slli	t1,t1,0x1
    3ce8:	0904                	addi	s1,sp,144
    3cea:	0010                	0x10
    3cec:	0301                	addi	t1,t1,0
    3cee:	01c0                	addi	s0,sp,196
    3cf0:	0009                	c.nop	2
    3cf2:	0100                	addi	s0,sp,128
    3cf4:	00090103          	lb	sp,0(s2)
    3cf8:	0100                	addi	s0,sp,128
    3cfa:	1505                	addi	a0,a0,-31
    3cfc:	0306                	slli	t1,t1,0x1
    3cfe:	7fa1                	lui	t6,0xfffe8
    3d00:	1409                	addi	s0,s0,-30
    3d02:	0100                	addi	s0,sp,128
    3d04:	1005                	c.nop	-31
    3d06:	0900e103          	0x900e103
    3d0a:	0008                	0x8
    3d0c:	0501                	addi	a0,a0,0
    3d0e:	060d                	addi	a2,a2,3
    3d10:	04090203          	lb	tp,64(s2)
    3d14:	0100                	addi	s0,sp,128
    3d16:	00090103          	lb	sp,0(s2)
    3d1a:	0100                	addi	s0,sp,128
    3d1c:	1005                	c.nop	-31
    3d1e:	0306                	slli	t1,t1,0x1
    3d20:	097d                	addi	s2,s2,31
    3d22:	0000                	unimp
    3d24:	0501                	addi	a0,a0,0
    3d26:	0314                	addi	a3,sp,384
    3d28:	000c0903          	lb	s2,0(s8) # 1a000 <_data_lma+0xf9e8>
    3d2c:	0501                	addi	a0,a0,0
    3d2e:	0611                	addi	a2,a2,4
    3d30:	04090203          	lb	tp,64(s2)
    3d34:	0100                	addi	s0,sp,128
    3d36:	3505                	jal	3b56 <__divdf3+0x71a>
    3d38:	0306                	slli	t1,t1,0x1
    3d3a:	0900                	addi	s0,sp,144
    3d3c:	0000                	unimp
    3d3e:	0501                	addi	a0,a0,0
    3d40:	031e                	slli	t1,t1,0x7
    3d42:	0900                	addi	s0,sp,144
    3d44:	0004                	0x4
    3d46:	0501                	addi	a0,a0,0
    3d48:	0321                	addi	t1,t1,8
    3d4a:	097e                	slli	s2,s2,0x1f
    3d4c:	0004                	0x4
    3d4e:	0501                	addi	a0,a0,0
    3d50:	0318                	addi	a4,sp,384
    3d52:	0902                	c.slli64	s2
    3d54:	0008                	0x8
    3d56:	0501                	addi	a0,a0,0
    3d58:	0611                	addi	a2,a2,4
    3d5a:	04090103          	lb	sp,64(s2)
    3d5e:	0100                	addi	s0,sp,128
    3d60:	2105                	jal	4180 <__exponent+0x98>
    3d62:	0306                	slli	t1,t1,0x1
    3d64:	0900                	addi	s0,sp,144
    3d66:	0004                	0x4
    3d68:	0501                	addi	a0,a0,0
    3d6a:	033a                	slli	t1,t1,0xe
    3d6c:	0900                	addi	s0,sp,144
    3d6e:	0004                	0x4
    3d70:	0501                	addi	a0,a0,0
    3d72:	0321                	addi	t1,t1,8
    3d74:	0900                	addi	s0,sp,144
    3d76:	0004                	0x4
    3d78:	0501                	addi	a0,a0,0
    3d7a:	033a                	slli	t1,t1,0xe
    3d7c:	0900                	addi	s0,sp,144
    3d7e:	0004                	0x4
    3d80:	0501                	addi	a0,a0,0
    3d82:	0338                	addi	a4,sp,392
    3d84:	0900                	addi	s0,sp,144
    3d86:	0004                	0x4
    3d88:	0501                	addi	a0,a0,0
    3d8a:	031e                	slli	t1,t1,0x7
    3d8c:	0900                	addi	s0,sp,144
    3d8e:	0004                	0x4
    3d90:	0501                	addi	a0,a0,0
    3d92:	030d                	addi	t1,t1,3
    3d94:	097d                	addi	s2,s2,31
    3d96:	0004                	0x4
    3d98:	0501                	addi	a0,a0,0
    3d9a:	031d                	addi	t1,t1,7
    3d9c:	097d                	addi	s2,s2,31
    3d9e:	0008                	0x8
    3da0:	0501                	addi	a0,a0,0
    3da2:	0309                	addi	t1,t1,2
    3da4:	0900                	addi	s0,sp,144
    3da6:	000c                	0xc
    3da8:	0501                	addi	a0,a0,0
    3daa:	0319                	addi	t1,t1,6
    3dac:	097e                	slli	s2,s2,0x1f
    3dae:	0004                	0x4
    3db0:	0501                	addi	a0,a0,0
    3db2:	0305                	addi	t1,t1,1
    3db4:	0900                	addi	s0,sp,144
    3db6:	000c                	0xc
    3db8:	0501                	addi	a0,a0,0
    3dba:	030c                	addi	a1,sp,384
    3dbc:	7f96                	flw	ft11,100(sp)
    3dbe:	0409                	addi	s0,s0,2
    3dc0:	0100                	addi	s0,sp,128
    3dc2:	1505                	addi	a0,a0,-31
    3dc4:	04097f03          	0x4097f03
    3dc8:	0100                	addi	s0,sp,128
    3dca:	0c05                	addi	s8,s8,1
    3dcc:	04090003          	lb	zero,64(s2)
    3dd0:	0100                	addi	s0,sp,128
    3dd2:	04090303          	lb	t1,64(s2)
    3dd6:	0100                	addi	s0,sp,128
    3dd8:	1005                	c.nop	-31
    3dda:	08090203          	lb	tp,128(s2)
    3dde:	0100                	addi	s0,sp,128
    3de0:	1505                	addi	a0,a0,-31
    3de2:	08090b03          	lb	s6,128(s2)
    3de6:	0100                	addi	s0,sp,128
    3de8:	1d05                	addi	s10,s10,-31
    3dea:	04097503          	0x4097503
    3dee:	0100                	addi	s0,sp,128
    3df0:	1505                	addi	a0,a0,-31
    3df2:	04090b03          	lb	s6,64(s2)
    3df6:	0100                	addi	s0,sp,128
    3df8:	0d05                	addi	s10,s10,1
    3dfa:	0306                	slli	t1,t1,0x1
    3dfc:	0902                	c.slli64	s2
    3dfe:	0004                	0x4
    3e00:	0501                	addi	a0,a0,0
    3e02:	0611                	addi	a2,a2,4
    3e04:	04097503          	0x4097503
    3e08:	0100                	addi	s0,sp,128
    3e0a:	0905                	addi	s2,s2,1
    3e0c:	04097e03          	0x4097e03
    3e10:	0100                	addi	s0,sp,128
    3e12:	0d05                	addi	s10,s10,1
    3e14:	0306                	slli	t1,t1,0x1
    3e16:	0902                	c.slli64	s2
    3e18:	0004                	0x4
    3e1a:	0501                	addi	a0,a0,0
    3e1c:	0311                	addi	t1,t1,4
    3e1e:	0909                	addi	s2,s2,2
    3e20:	0000                	unimp
    3e22:	0301                	addi	t1,t1,0
    3e24:	0000097b          	0x97b
    3e28:	0601                	addi	a2,a2,0
    3e2a:	00097c03          	0x97c03
    3e2e:	0100                	addi	s0,sp,128
    3e30:	0d05                	addi	s10,s10,1
    3e32:	0306                	slli	t1,t1,0x1
    3e34:	0901                	addi	s2,s2,0
    3e36:	0004                	0x4
    3e38:	0501                	addi	a0,a0,0
    3e3a:	0629                	addi	a2,a2,10
    3e3c:	08090803          	lb	a6,128(s2)
    3e40:	0100                	addi	s0,sp,128
    3e42:	1105                	addi	sp,sp,-31
    3e44:	04097803          	0x4097803
    3e48:	0100                	addi	s0,sp,128
    3e4a:	0d05                	addi	s10,s10,1
    3e4c:	0306                	slli	t1,t1,0x1
    3e4e:	0901                	addi	s2,s2,0
    3e50:	0004                	0x4
    3e52:	0501                	addi	a0,a0,0
    3e54:	0615                	addi	a2,a2,5
    3e56:	00090203          	lb	tp,0(s2)
    3e5a:	0100                	addi	s0,sp,128
    3e5c:	04090503          	lb	a0,64(s2)
    3e60:	0100                	addi	s0,sp,128
    3e62:	1005                	c.nop	-31
    3e64:	04097903          	0x4097903
    3e68:	0100                	addi	s0,sp,128
    3e6a:	1505                	addi	a0,a0,-31
    3e6c:	04090203          	lb	tp,64(s2)
    3e70:	0100                	addi	s0,sp,128
    3e72:	1d05                	addi	s10,s10,-31
    3e74:	04097a03          	0x4097a03
    3e78:	0100                	addi	s0,sp,128
    3e7a:	1505                	addi	a0,a0,-31
    3e7c:	04090603          	lb	a2,64(s2)
    3e80:	0100                	addi	s0,sp,128
    3e82:	1105                	addi	sp,sp,-31
    3e84:	0306                	slli	t1,t1,0x1
    3e86:	0901                	addi	s2,s2,0
    3e88:	0004                	0x4
    3e8a:	0501                	addi	a0,a0,0
    3e8c:	0615                	addi	a2,a2,5
    3e8e:	00090003          	lb	zero,0(s2)
    3e92:	0100                	addi	s0,sp,128
    3e94:	0d05                	addi	s10,s10,1
    3e96:	0306                	slli	t1,t1,0x1
    3e98:	0906                	slli	s2,s2,0x1
    3e9a:	0004                	0x4
    3e9c:	0501                	addi	a0,a0,0
    3e9e:	0611                	addi	a2,a2,4
    3ea0:	04097503          	0x4097503
    3ea4:	0100                	addi	s0,sp,128
    3ea6:	0905                	addi	s2,s2,1
    3ea8:	04097e03          	0x4097e03
    3eac:	0100                	addi	s0,sp,128
    3eae:	1905                	addi	s2,s2,-31
    3eb0:	04097e03          	0x4097e03
    3eb4:	0100                	addi	s0,sp,128
    3eb6:	0505                	addi	a0,a0,1
    3eb8:	08090003          	lb	zero,128(s2)
    3ebc:	0100                	addi	s0,sp,128
    3ebe:	0306                	slli	t1,t1,0x1
    3ec0:	0912                	slli	s2,s2,0x4
    3ec2:	0004                	0x4
    3ec4:	0501                	addi	a0,a0,0
    3ec6:	9603060b          	0x9603060b
    3eca:	097f                	0x97f
    3ecc:	0000                	unimp
    3ece:	0501                	addi	a0,a0,0
    3ed0:	0605                	addi	a2,a2,1
    3ed2:	0c090503          	lb	a0,192(s2)
    3ed6:	0100                	addi	s0,sp,128
    3ed8:	0c05                	addi	s8,s8,1
    3eda:	0306                	slli	t1,t1,0x1
    3edc:	0180                	addi	s0,sp,192
    3ede:	0009                	c.nop	2
    3ee0:	0100                	addi	s0,sp,128
    3ee2:	1505                	addi	a0,a0,-31
    3ee4:	04095c03          	lhu	s8,64(s2)
    3ee8:	0100                	addi	s0,sp,128
    3eea:	1005                	c.nop	-31
    3eec:	04092603          	lw	a2,64(s2)
    3ef0:	0100                	addi	s0,sp,128
    3ef2:	0d05                	addi	s10,s10,1
    3ef4:	0306                	slli	t1,t1,0x1
    3ef6:	0902                	c.slli64	s2
    3ef8:	0004                	0x4
    3efa:	0501                	addi	a0,a0,0
    3efc:	061a                	slli	a2,a2,0x6
    3efe:	00090003          	lb	zero,0(s2)
    3f02:	0100                	addi	s0,sp,128
    3f04:	1d05                	addi	s10,s10,-31
    3f06:	08097e03          	0x8097e03
    3f0a:	0100                	addi	s0,sp,128
    3f0c:	1a05                	addi	s4,s4,-31
    3f0e:	04090203          	lb	tp,64(s2)
    3f12:	0100                	addi	s0,sp,128
    3f14:	0905                	addi	s2,s2,1
    3f16:	08097e03          	0x8097e03
    3f1a:	0100                	addi	s0,sp,128
    3f1c:	1905                	addi	s2,s2,-31
    3f1e:	04097e03          	0x4097e03
    3f22:	0100                	addi	s0,sp,128
    3f24:	0505                	addi	a0,a0,1
    3f26:	08090003          	lb	zero,128(s2)
    3f2a:	0100                	addi	s0,sp,128
    3f2c:	0306                	slli	t1,t1,0x1
    3f2e:	7f81                	lui	t6,0xfffe0
    3f30:	0409                	addi	s0,s0,2
    3f32:	0100                	addi	s0,sp,128
    3f34:	0105                	addi	sp,sp,1
    3f36:	0306                	slli	t1,t1,0x1
    3f38:	0901                	addi	s2,s2,0
    3f3a:	0000                	unimp
    3f3c:	0501                	addi	a0,a0,0
    3f3e:	030c                	addi	a1,sp,384
    3f40:	097f                	0x97f
    3f42:	0008                	0x8
    3f44:	0501                	addi	a0,a0,0
    3f46:	0301                	addi	t1,t1,0
    3f48:	0901                	addi	s2,s2,0
    3f4a:	0004                	0x4
    3f4c:	0501                	addi	a0,a0,0
    3f4e:	030c                	addi	a1,sp,384
    3f50:	097f                	0x97f
    3f52:	002c                	addi	a1,sp,8
    3f54:	0501                	addi	a0,a0,0
    3f56:	0301                	addi	t1,t1,0
    3f58:	0901                	addi	s2,s2,0
    3f5a:	0004                	0x4
    3f5c:	0501                	addi	a0,a0,0
    3f5e:	031a                	slli	t1,t1,0x6
    3f60:	080901a7          	0x80901a7
    3f64:	0100                	addi	s0,sp,128
    3f66:	0505                	addi	a0,a0,1
    3f68:	0306                	slli	t1,t1,0x1
    3f6a:	7fbc                	flw	fa5,120(a5)
    3f6c:	0809                	addi	a6,a6,2
    3f6e:	0100                	addi	s0,sp,128
    3f70:	0b05                	addi	s6,s6,1
    3f72:	0306                	slli	t1,t1,0x1
    3f74:	00097f87          	0x97f87
    3f78:	0100                	addi	s0,sp,128
    3f7a:	0505                	addi	a0,a0,1
    3f7c:	0306                	slli	t1,t1,0x1
    3f7e:	0904                	addi	s1,sp,144
    3f80:	000c                	0xc
    3f82:	0301                	addi	t1,t1,0
    3f84:	01a1                	addi	gp,gp,8
    3f86:	0009                	c.nop	2
    3f88:	0100                	addi	s0,sp,128
    3f8a:	00090103          	lb	sp,0(s2)
    3f8e:	0100                	addi	s0,sp,128
    3f90:	00095303          	lhu	t1,0(s2)
    3f94:	0100                	addi	s0,sp,128
    3f96:	0b05                	addi	s6,s6,1
    3f98:	0306                	slli	t1,t1,0x1
    3f9a:	7f8c                	flw	fa1,56(a5)
    3f9c:	0009                	c.nop	2
    3f9e:	0100                	addi	s0,sp,128
    3fa0:	0505                	addi	a0,a0,1
    3fa2:	0306                	slli	t1,t1,0x1
    3fa4:	0904                	addi	s1,sp,144
    3fa6:	0010                	0x10
    3fa8:	0301                	addi	t1,t1,0
    3faa:	000901af          	0x901af
    3fae:	0100                	addi	s0,sp,128
    3fb0:	00090103          	lb	sp,0(s2)
    3fb4:	0100                	addi	s0,sp,128
    3fb6:	00094003          	lbu	zero,0(s2)
    3fba:	0100                	addi	s0,sp,128
    3fbc:	0b05                	addi	s6,s6,1
    3fbe:	0306                	slli	t1,t1,0x1
    3fc0:	7f91                	lui	t6,0xfffe4
    3fc2:	0009                	c.nop	2
    3fc4:	0100                	addi	s0,sp,128
    3fc6:	0505                	addi	a0,a0,1
    3fc8:	0306                	slli	t1,t1,0x1
    3fca:	0904                	addi	s1,sp,144
    3fcc:	0010                	0x10
    3fce:	0301                	addi	t1,t1,0
    3fd0:	01c0                	addi	s0,sp,196
    3fd2:	0009                	c.nop	2
    3fd4:	0100                	addi	s0,sp,128
    3fd6:	00090103          	lb	sp,0(s2)
    3fda:	0100                	addi	s0,sp,128
    3fdc:	097faa03          	lw	s4,151(t6) # fffe4097 <__freertos_irq_stack_top+0xfefd4097>
    3fe0:	0000                	unimp
    3fe2:	0501                	addi	a0,a0,0
    3fe4:	9603060b          	0x9603060b
    3fe8:	097f                	0x97f
    3fea:	0000                	unimp
    3fec:	0501                	addi	a0,a0,0
    3fee:	0605                	addi	a2,a2,1
    3ff0:	10090503          	lb	a0,256(s2)
    3ff4:	0100                	addi	s0,sp,128
    3ff6:	0409                	addi	s0,s0,2
    3ff8:	0000                	unimp
    3ffa:	0101                	addi	sp,sp,0
    3ffc:	0105                	addi	sp,sp,1
    3ffe:	0500                	addi	s0,sp,640
    4000:	7402                	flw	fs0,32(sp)
    4002:	0300001b          	0x300001b
    4006:	00dc                	addi	a5,sp,68
    4008:	0501                	addi	a0,a0,0
    400a:	0305                	addi	t1,t1,1
    400c:	0901                	addi	s2,s2,0
    400e:	0000                	unimp
    4010:	0301                	addi	t1,t1,0
    4012:	0901                	addi	s2,s2,0
    4014:	0000                	unimp
    4016:	0301                	addi	t1,t1,0
    4018:	0901                	addi	s2,s2,0
    401a:	0000                	unimp
    401c:	0301                	addi	t1,t1,0
    401e:	0901                	addi	s2,s2,0
    4020:	0000                	unimp
    4022:	0301                	addi	t1,t1,0
    4024:	0901                	addi	s2,s2,0
    4026:	0000                	unimp
    4028:	0301                	addi	t1,t1,0
    402a:	0902                	c.slli64	s2
    402c:	0000                	unimp
    402e:	0501                	addi	a0,a0,0
    4030:	0601                	addi	a2,a2,0
    4032:	00097903          	0x97903
    4036:	0100                	addi	s0,sp,128
    4038:	0b05                	addi	s6,s6,1
    403a:	08090703          	lb	a4,128(s2)
    403e:	0100                	addi	s0,sp,128
    4040:	0105                	addi	sp,sp,1
    4042:	04097903          	0x4097903
    4046:	0100                	addi	s0,sp,128
    4048:	0b05                	addi	s6,s6,1
    404a:	04090703          	lb	a4,64(s2)
    404e:	0100                	addi	s0,sp,128
    4050:	0105                	addi	sp,sp,1
    4052:	10097903          	0x10097903
    4056:	0100                	addi	s0,sp,128
    4058:	0b05                	addi	s6,s6,1
    405a:	04090703          	lb	a4,64(s2)
    405e:	0100                	addi	s0,sp,128
    4060:	0105                	addi	sp,sp,1
    4062:	0c090303          	lb	t1,192(s2)
    4066:	0100                	addi	s0,sp,128
    4068:	0b05                	addi	s6,s6,1
    406a:	0c097d03          	0xc097d03
    406e:	0100                	addi	s0,sp,128
    4070:	0809                	addi	a6,a6,2
    4072:	0000                	unimp
    4074:	0101                	addi	sp,sp,0
    4076:	0105                	addi	sp,sp,1
    4078:	0500                	addi	s0,sp,640
    407a:	b802                	fsd	ft0,48(sp)
    407c:	0300001b          	0x300001b
    4080:	01b5                	addi	gp,gp,13
    4082:	0601                	addi	a2,a2,0
    4084:	10090003          	lb	zero,256(s2)
    4088:	0100                	addi	s0,sp,128
    408a:	0505                	addi	a0,a0,1
    408c:	0306                	slli	t1,t1,0x1
    408e:	0901                	addi	s2,s2,0
    4090:	0004                	0x4
    4092:	0301                	addi	t1,t1,0
    4094:	0901                	addi	s2,s2,0
    4096:	0000                	unimp
    4098:	0301                	addi	t1,t1,0
    409a:	0901                	addi	s2,s2,0
    409c:	0000                	unimp
    409e:	0301                	addi	t1,t1,0
    40a0:	0901                	addi	s2,s2,0
    40a2:	0000                	unimp
    40a4:	0301                	addi	t1,t1,0
    40a6:	0901                	addi	s2,s2,0
    40a8:	0000                	unimp
    40aa:	0301                	addi	t1,t1,0
    40ac:	0901                	addi	s2,s2,0
    40ae:	0000                	unimp
    40b0:	0301                	addi	t1,t1,0
    40b2:	0901                	addi	s2,s2,0
    40b4:	0000                	unimp
    40b6:	0501                	addi	a0,a0,0
    40b8:	0608                	addi	a0,sp,768
    40ba:	00090003          	lb	zero,0(s2)
    40be:	0100                	addi	s0,sp,128
    40c0:	0e05                	addi	t3,t3,1
    40c2:	04090103          	lb	sp,64(s2)
    40c6:	0100                	addi	s0,sp,128
    40c8:	0b05                	addi	s6,s6,1
    40ca:	10090103          	lb	sp,256(s2)
    40ce:	0100                	addi	s0,sp,128
    40d0:	0a05                	addi	s4,s4,1
    40d2:	0c090203          	lb	tp,192(s2)
    40d6:	0100                	addi	s0,sp,128
    40d8:	0905                	addi	s2,s2,1
    40da:	0306                	slli	t1,t1,0x1
    40dc:	0900                	addi	s0,sp,144
    40de:	0004                	0x4
    40e0:	0501                	addi	a0,a0,0
    40e2:	060a                	slli	a2,a2,0x2
    40e4:	00090003          	lb	zero,0(s2)
    40e8:	0100                	addi	s0,sp,128
    40ea:	0905                	addi	s2,s2,1
    40ec:	0306                	slli	t1,t1,0x1
    40ee:	0901                	addi	s2,s2,0
    40f0:	0004                	0x4
    40f2:	0501                	addi	a0,a0,0
    40f4:	0003060f          	0x3060f
    40f8:	0009                	c.nop	2
    40fa:	0100                	addi	s0,sp,128
    40fc:	0b05                	addi	s6,s6,1
    40fe:	04090003          	lb	zero,64(s2)
    4102:	0100                	addi	s0,sp,128
    4104:	04097d03          	0x4097d03
    4108:	0100                	addi	s0,sp,128
    410a:	0505                	addi	a0,a0,1
    410c:	0306                	slli	t1,t1,0x1
    410e:	0905                	addi	s2,s2,1
    4110:	0004                	0x4
    4112:	0301                	addi	t1,t1,0
    4114:	0901                	addi	s2,s2,0
    4116:	0000                	unimp
    4118:	0301                	addi	t1,t1,0
    411a:	0901                	addi	s2,s2,0
    411c:	0000                	unimp
    411e:	0501                	addi	a0,a0,0
    4120:	0003060f          	0x3060f
    4124:	0009                	c.nop	2
    4126:	0100                	addi	s0,sp,128
    4128:	0b05                	addi	s6,s6,1
    412a:	08090003          	lb	zero,128(s2)
    412e:	0100                	addi	s0,sp,128
    4130:	0705                	addi	a4,a4,1
    4132:	04090003          	lb	zero,64(s2)
    4136:	0100                	addi	s0,sp,128
    4138:	0505                	addi	a0,a0,1
    413a:	0306                	slli	t1,t1,0x1
    413c:	0902                	c.slli64	s2
    413e:	0004                	0x4
    4140:	0501                	addi	a0,a0,0
    4142:	061a                	slli	a2,a2,0x6
    4144:	04090403          	lb	s0,64(s2)
    4148:	0100                	addi	s0,sp,128
    414a:	0b05                	addi	s6,s6,1
    414c:	08097a03          	0x8097a03
    4150:	0100                	addi	s0,sp,128
    4152:	1a05                	addi	s4,s4,-31
    4154:	10090603          	lb	a2,256(s2)
    4158:	0100                	addi	s0,sp,128
    415a:	0e05                	addi	t3,t3,1
    415c:	04097203          	0x4097203
    4160:	0100                	addi	s0,sp,128
    4162:	1005                	c.nop	-31
    4164:	04090c03          	lb	s8,64(s2)
    4168:	0100                	addi	s0,sp,128
    416a:	0d05                	addi	s10,s10,1
    416c:	0200                	addi	s0,sp,256
    416e:	0304                	addi	s1,sp,384
    4170:	0306                	slli	t1,t1,0x1
    4172:	0902                	c.slli64	s2
    4174:	0004                	0x4
    4176:	0501                	addi	a0,a0,0
    4178:	0024                	addi	s1,sp,8
    417a:	0402                	c.slli64	s0
    417c:	00030603          	lb	a2,0(t1) # ffffa000 <__freertos_irq_stack_top+0xfefea000>
    4180:	0009                	c.nop	2
    4182:	0100                	addi	s0,sp,128
    4184:	1a05                	addi	s4,s4,-31
    4186:	0200                	addi	s0,sp,256
    4188:	0304                	addi	s1,sp,384
    418a:	0c090603          	lb	a2,192(s2)
    418e:	0100                	addi	s0,sp,128
    4190:	1d05                	addi	s10,s10,-31
    4192:	0200                	addi	s0,sp,256
    4194:	0304                	addi	s1,sp,384
    4196:	08097803          	0x8097803
    419a:	0100                	addi	s0,sp,128
    419c:	2205                	jal	42bc <_printf_float+0x12c>
    419e:	0200                	addi	s0,sp,256
    41a0:	0304                	addi	s1,sp,384
    41a2:	04090303          	lb	t1,64(s2)
    41a6:	0100                	addi	s0,sp,128
    41a8:	1a05                	addi	s4,s4,-31
    41aa:	0200                	addi	s0,sp,256
    41ac:	0304                	addi	s1,sp,384
    41ae:	04097f03          	0x4097f03
    41b2:	0100                	addi	s0,sp,128
    41b4:	0d05                	addi	s10,s10,1
    41b6:	0200                	addi	s0,sp,256
    41b8:	0304                	addi	s1,sp,384
    41ba:	0306                	slli	t1,t1,0x1
    41bc:	0901                	addi	s2,s2,0
    41be:	0014                	0x14
    41c0:	0501                	addi	a0,a0,0
    41c2:	0022                	c.slli	zero,0x8
    41c4:	0402                	c.slli64	s0
    41c6:	00030603          	lb	a2,0(t1)
    41ca:	0009                	c.nop	2
    41cc:	0100                	addi	s0,sp,128
    41ce:	0d05                	addi	s10,s10,1
    41d0:	0200                	addi	s0,sp,256
    41d2:	0304                	addi	s1,sp,384
    41d4:	0306                	slli	t1,t1,0x1
    41d6:	0901                	addi	s2,s2,0
    41d8:	000c                	0xc
    41da:	0001                	nop
    41dc:	0402                	c.slli64	s0
    41de:	09010303          	lb	t1,144(sp)
    41e2:	0000                	unimp
    41e4:	0501                	addi	a0,a0,0
    41e6:	0021                	c.nop	8
    41e8:	0402                	c.slli64	s0
    41ea:	01030603          	lb	a2,16(t1)
    41ee:	0009                	c.nop	2
    41f0:	0100                	addi	s0,sp,128
    41f2:	1a05                	addi	s4,s4,-31
    41f4:	0200                	addi	s0,sp,256
    41f6:	0304                	addi	s1,sp,384
    41f8:	04097f03          	0x4097f03
    41fc:	0100                	addi	s0,sp,128
    41fe:	0d05                	addi	s10,s10,1
    4200:	0200                	addi	s0,sp,256
    4202:	0304                	addi	s1,sp,384
    4204:	0306                	slli	t1,t1,0x1
    4206:	0901                	addi	s2,s2,0
    4208:	0004                	0x4
    420a:	0001                	nop
    420c:	0402                	c.slli64	s0
    420e:	09010303          	lb	t1,144(sp)
    4212:	0000                	unimp
    4214:	0001                	nop
    4216:	0402                	c.slli64	s0
    4218:	09010303          	lb	t1,144(sp)
    421c:	0000                	unimp
    421e:	0501                	addi	a0,a0,0
    4220:	001a                	c.slli	zero,0x6
    4222:	0402                	c.slli64	s0
    4224:	7f030603          	lb	a2,2032(t1)
    4228:	0009                	c.nop	2
    422a:	0100                	addi	s0,sp,128
    422c:	0200                	addi	s0,sp,256
    422e:	0304                	addi	s1,sp,384
    4230:	04090103          	lb	sp,64(s2)
    4234:	0100                	addi	s0,sp,128
    4236:	0d05                	addi	s10,s10,1
    4238:	0200                	addi	s0,sp,256
    423a:	0304                	addi	s1,sp,384
    423c:	0306                	slli	t1,t1,0x1
    423e:	0901                	addi	s2,s2,0
    4240:	0004                	0x4
    4242:	0501                	addi	a0,a0,0
    4244:	0009                	c.nop	2
    4246:	0402                	c.slli64	s0
    4248:	77030603          	lb	a2,1904(t1)
    424c:	0009                	c.nop	2
    424e:	0100                	addi	s0,sp,128
    4250:	1905                	addi	s2,s2,-31
    4252:	0200                	addi	s0,sp,256
    4254:	0204                	addi	s1,sp,256
    4256:	04097e03          	0x4097e03
    425a:	0100                	addi	s0,sp,128
    425c:	0505                	addi	a0,a0,1
    425e:	0200                	addi	s0,sp,256
    4260:	0204                	addi	s1,sp,256
    4262:	08090003          	lb	zero,128(s2)
    4266:	0100                	addi	s0,sp,128
    4268:	0306                	slli	t1,t1,0x1
    426a:	0004090f          	0x4090f
    426e:	0501                	addi	a0,a0,0
    4270:	0616                	slli	a2,a2,0x5
    4272:	00090203          	lb	tp,0(s2)
    4276:	0100                	addi	s0,sp,128
    4278:	0105                	addi	sp,sp,1
    427a:	08090703          	lb	a4,128(s2)
    427e:	0100                	addi	s0,sp,128
    4280:	1605                	addi	a2,a2,-31
    4282:	04097903          	0x4097903
    4286:	0100                	addi	s0,sp,128
    4288:	0a05                	addi	s4,s4,1
    428a:	08097e03          	0x8097e03
    428e:	0100                	addi	s0,sp,128
    4290:	0505                	addi	a0,a0,1
    4292:	0306                	slli	t1,t1,0x1
    4294:	0901                	addi	s2,s2,0
    4296:	0004                	0x4
    4298:	0501                	addi	a0,a0,0
    429a:	060a                	slli	a2,a2,0x2
    429c:	00090203          	lb	tp,0(s2)
    42a0:	0100                	addi	s0,sp,128
    42a2:	04097e03          	0x4097e03
    42a6:	0100                	addi	s0,sp,128
    42a8:	0505                	addi	a0,a0,1
    42aa:	0306                	slli	t1,t1,0x1
    42ac:	0901                	addi	s2,s2,0
    42ae:	0004                	0x4
    42b0:	0501                	addi	a0,a0,0
    42b2:	060a                	slli	a2,a2,0x2
    42b4:	00090003          	lb	zero,0(s2)
    42b8:	0100                	addi	s0,sp,128
    42ba:	0505                	addi	a0,a0,1
    42bc:	0306                	slli	t1,t1,0x1
    42be:	0901                	addi	s2,s2,0
    42c0:	0004                	0x4
    42c2:	0301                	addi	t1,t1,0
    42c4:	0905                	addi	s2,s2,1
    42c6:	0000                	unimp
    42c8:	0501                	addi	a0,a0,0
    42ca:	0601                	addi	a2,a2,0
    42cc:	00090103          	lb	sp,0(s2)
    42d0:	0100                	addi	s0,sp,128
    42d2:	0505                	addi	a0,a0,1
    42d4:	0306                	slli	t1,t1,0x1
    42d6:	0964                	addi	s1,sp,156
    42d8:	0010                	0x10
    42da:	0301                	addi	t1,t1,0
    42dc:	0901                	addi	s2,s2,0
    42de:	0000                	unimp
    42e0:	0301                	addi	t1,t1,0
    42e2:	0901                	addi	s2,s2,0
    42e4:	0000                	unimp
    42e6:	0501                	addi	a0,a0,0
    42e8:	00030607          	0x30607
    42ec:	0009                	c.nop	2
    42ee:	0100                	addi	s0,sp,128
    42f0:	0505                	addi	a0,a0,1
    42f2:	0306                	slli	t1,t1,0x1
    42f4:	0902                	c.slli64	s2
    42f6:	0004                	0x4
    42f8:	0501                	addi	a0,a0,0
    42fa:	7e030607          	0x7e030607
    42fe:	0009                	c.nop	2
    4300:	0100                	addi	s0,sp,128
    4302:	04097e03          	0x4097e03
    4306:	0100                	addi	s0,sp,128
    4308:	0b05                	addi	s6,s6,1
    430a:	04090203          	lb	tp,64(s2)
    430e:	0100                	addi	s0,sp,128
    4310:	0809                	addi	a6,a6,2
    4312:	0000                	unimp
    4314:	0101                	addi	sp,sp,0
    4316:	0105                	addi	sp,sp,1
    4318:	0500                	addi	s0,sp,640
    431a:	0002                	c.slli64	zero
    431c:	0000                	unimp
    431e:	0300                	addi	s0,sp,384
    4320:	01ee                	slli	gp,gp,0x1b
    4322:	0501                	addi	a0,a0,0
    4324:	0305                	addi	t1,t1,1
    4326:	0901                	addi	s2,s2,0
    4328:	0000                	unimp
    432a:	0301                	addi	t1,t1,0
    432c:	0901                	addi	s2,s2,0
    432e:	0000                	unimp
    4330:	0301                	addi	t1,t1,0
    4332:	0901                	addi	s2,s2,0
    4334:	0000                	unimp
    4336:	0301                	addi	t1,t1,0
    4338:	0901                	addi	s2,s2,0
    433a:	0000                	unimp
    433c:	0501                	addi	a0,a0,0
    433e:	0601                	addi	a2,a2,0
    4340:	00097c03          	0x97c03
    4344:	0100                	addi	s0,sp,128
    4346:	0505                	addi	a0,a0,1
    4348:	00090403          	lb	s0,0(s2)
    434c:	0100                	addi	s0,sp,128
    434e:	0c05                	addi	s8,s8,1
    4350:	00090003          	lb	zero,0(s2)
    4354:	0100                	addi	s0,sp,128
    4356:	00097e03          	0x97e03
    435a:	0100                	addi	s0,sp,128
    435c:	1505                	addi	a0,a0,-31
    435e:	00097f03          	0x97f03
    4362:	0100                	addi	s0,sp,128
    4364:	0c05                	addi	s8,s8,1
    4366:	00090003          	lb	zero,0(s2)
    436a:	0100                	addi	s0,sp,128
    436c:	1505                	addi	a0,a0,-31
    436e:	00091003          	lh	zero,0(s2)
    4372:	0100                	addi	s0,sp,128
    4374:	0d05                	addi	s10,s10,1
    4376:	0306                	slli	t1,t1,0x1
    4378:	0902                	c.slli64	s2
    437a:	0000                	unimp
    437c:	0501                	addi	a0,a0,0
    437e:	0611                	addi	a2,a2,4
    4380:	00097503          	0x97503
    4384:	0100                	addi	s0,sp,128
    4386:	0905                	addi	s2,s2,1
    4388:	00097e03          	0x97e03
    438c:	0100                	addi	s0,sp,128
    438e:	0d05                	addi	s10,s10,1
    4390:	0306                	slli	t1,t1,0x1
    4392:	0902                	c.slli64	s2
    4394:	0000                	unimp
    4396:	0501                	addi	a0,a0,0
    4398:	0311                	addi	t1,t1,4
    439a:	0909                	addi	s2,s2,2
    439c:	0000                	unimp
    439e:	0301                	addi	t1,t1,0
    43a0:	0000097b          	0x97b
    43a4:	0601                	addi	a2,a2,0
    43a6:	00097c03          	0x97c03
    43aa:	0100                	addi	s0,sp,128
    43ac:	0d05                	addi	s10,s10,1
    43ae:	0306                	slli	t1,t1,0x1
    43b0:	0901                	addi	s2,s2,0
    43b2:	0000                	unimp
    43b4:	0501                	addi	a0,a0,0
    43b6:	0629                	addi	a2,a2,10
    43b8:	00090803          	lb	a6,0(s2)
    43bc:	0100                	addi	s0,sp,128
    43be:	1105                	addi	sp,sp,-31
    43c0:	00097803          	0x97803
    43c4:	0100                	addi	s0,sp,128
    43c6:	0d05                	addi	s10,s10,1
    43c8:	0306                	slli	t1,t1,0x1
    43ca:	0901                	addi	s2,s2,0
    43cc:	0000                	unimp
    43ce:	0501                	addi	a0,a0,0
    43d0:	0615                	addi	a2,a2,5
    43d2:	00090203          	lb	tp,0(s2)
    43d6:	0100                	addi	s0,sp,128
    43d8:	00090503          	lb	a0,0(s2)
    43dc:	0100                	addi	s0,sp,128
    43de:	1005                	c.nop	-31
    43e0:	00097903          	0x97903
    43e4:	0100                	addi	s0,sp,128
    43e6:	1505                	addi	a0,a0,-31
    43e8:	00090203          	lb	tp,0(s2)
    43ec:	0100                	addi	s0,sp,128
    43ee:	1105                	addi	sp,sp,-31
    43f0:	0306                	slli	t1,t1,0x1
    43f2:	0901                	addi	s2,s2,0
    43f4:	0000                	unimp
    43f6:	0501                	addi	a0,a0,0
    43f8:	0615                	addi	a2,a2,5
    43fa:	00090003          	lb	zero,0(s2)
    43fe:	0100                	addi	s0,sp,128
    4400:	0d05                	addi	s10,s10,1
    4402:	0306                	slli	t1,t1,0x1
    4404:	0906                	slli	s2,s2,0x1
    4406:	0000                	unimp
    4408:	0501                	addi	a0,a0,0
    440a:	0611                	addi	a2,a2,4
    440c:	00097503          	0x97503
    4410:	0100                	addi	s0,sp,128
    4412:	0905                	addi	s2,s2,1
    4414:	00097e03          	0x97e03
    4418:	0100                	addi	s0,sp,128
    441a:	1905                	addi	s2,s2,-31
    441c:	00097e03          	0x97e03
    4420:	0100                	addi	s0,sp,128
    4422:	0505                	addi	a0,a0,1
    4424:	00090003          	lb	zero,0(s2)
    4428:	0100                	addi	s0,sp,128
    442a:	0c05                	addi	s8,s8,1
    442c:	00097e03          	0x97e03
    4430:	0100                	addi	s0,sp,128
    4432:	0505                	addi	a0,a0,1
    4434:	0306                	slli	t1,t1,0x1
    4436:	0914                	addi	a3,sp,144
    4438:	0000                	unimp
    443a:	0501                	addi	a0,a0,0
    443c:	0601                	addi	a2,a2,0
    443e:	00090103          	lb	sp,0(s2)
    4442:	0100                	addi	s0,sp,128
    4444:	0009                	c.nop	2
    4446:	0000                	unimp
    4448:	0101                	addi	sp,sp,0
    444a:	0105                	addi	sp,sp,1
    444c:	0500                	addi	s0,sp,640
    444e:	0002                	c.slli64	zero
    4450:	0000                	unimp
    4452:	0300                	addi	s0,sp,384
    4454:	028d                	addi	t0,t0,3
    4456:	0501                	addi	a0,a0,0
    4458:	0305                	addi	t1,t1,1
    445a:	0901                	addi	s2,s2,0
    445c:	0000                	unimp
    445e:	0301                	addi	t1,t1,0
    4460:	0901                	addi	s2,s2,0
    4462:	0000                	unimp
    4464:	0501                	addi	a0,a0,0
    4466:	060c                	addi	a1,sp,768
    4468:	00090003          	lb	zero,0(s2)
    446c:	0100                	addi	s0,sp,128
    446e:	0105                	addi	sp,sp,1
    4470:	00097e03          	0x97e03
    4474:	0100                	addi	s0,sp,128
    4476:	0d05                	addi	s10,s10,1
    4478:	0200                	addi	s0,sp,256
    447a:	0304                	addi	s1,sp,384
    447c:	0306                	slli	t1,t1,0x1
    447e:	0906                	slli	s2,s2,0x1
    4480:	0000                	unimp
    4482:	0501                	addi	a0,a0,0
    4484:	001c                	0x1c
    4486:	0402                	c.slli64	s0
    4488:	00030603          	lb	a2,0(t1)
    448c:	0009                	c.nop	2
    448e:	0100                	addi	s0,sp,128
    4490:	3105                	jal	40b0 <__cvt+0x12c>
    4492:	0200                	addi	s0,sp,256
    4494:	0304                	addi	s1,sp,384
    4496:	00090003          	lb	zero,0(s2)
    449a:	0100                	addi	s0,sp,128
    449c:	1a05                	addi	s4,s4,-31
    449e:	0200                	addi	s0,sp,256
    44a0:	0304                	addi	s1,sp,384
    44a2:	00090003          	lb	zero,0(s2)
    44a6:	0100                	addi	s0,sp,128
    44a8:	0905                	addi	s2,s2,1
    44aa:	0200                	addi	s0,sp,256
    44ac:	0304                	addi	s1,sp,384
    44ae:	00097e03          	0x97e03
    44b2:	0100                	addi	s0,sp,128
    44b4:	1905                	addi	s2,s2,-31
    44b6:	0200                	addi	s0,sp,256
    44b8:	0204                	addi	s1,sp,256
    44ba:	00097e03          	0x97e03
    44be:	0100                	addi	s0,sp,128
    44c0:	0505                	addi	a0,a0,1
    44c2:	0200                	addi	s0,sp,256
    44c4:	0204                	addi	s1,sp,256
    44c6:	00090003          	lb	zero,0(s2)
    44ca:	0100                	addi	s0,sp,128
    44cc:	0105                	addi	sp,sp,1
    44ce:	00090703          	lb	a4,0(s2)
    44d2:	0100                	addi	s0,sp,128
    44d4:	0009                	c.nop	2
    44d6:	0000                	unimp
    44d8:	0101                	addi	sp,sp,0
    44da:	0105                	addi	sp,sp,1
    44dc:	0500                	addi	s0,sp,640
    44de:	0002                	c.slli64	zero
    44e0:	0000                	unimp
    44e2:	0300                	addi	s0,sp,384
    44e4:	029d                	addi	t0,t0,7
    44e6:	0501                	addi	a0,a0,0
    44e8:	0305                	addi	t1,t1,1
    44ea:	0901                	addi	s2,s2,0
    44ec:	0000                	unimp
    44ee:	0301                	addi	t1,t1,0
    44f0:	0901                	addi	s2,s2,0
    44f2:	0000                	unimp
    44f4:	0501                	addi	a0,a0,0
    44f6:	060c                	addi	a1,sp,768
    44f8:	00090003          	lb	zero,0(s2)
    44fc:	0100                	addi	s0,sp,128
    44fe:	0105                	addi	sp,sp,1
    4500:	00097e03          	0x97e03
    4504:	0100                	addi	s0,sp,128
    4506:	0d05                	addi	s10,s10,1
    4508:	0200                	addi	s0,sp,256
    450a:	0304                	addi	s1,sp,384
    450c:	0306                	slli	t1,t1,0x1
    450e:	0906                	slli	s2,s2,0x1
    4510:	0000                	unimp
    4512:	0501                	addi	a0,a0,0
    4514:	001a                	c.slli	zero,0x6
    4516:	0402                	c.slli64	s0
    4518:	00030603          	lb	a2,0(t1)
    451c:	0009                	c.nop	2
    451e:	0100                	addi	s0,sp,128
    4520:	0905                	addi	s2,s2,1
    4522:	0200                	addi	s0,sp,256
    4524:	0304                	addi	s1,sp,384
    4526:	00097e03          	0x97e03
    452a:	0100                	addi	s0,sp,128
    452c:	1905                	addi	s2,s2,-31
    452e:	0200                	addi	s0,sp,256
    4530:	0204                	addi	s1,sp,256
    4532:	00097e03          	0x97e03
    4536:	0100                	addi	s0,sp,128
    4538:	0505                	addi	a0,a0,1
    453a:	0200                	addi	s0,sp,256
    453c:	0204                	addi	s1,sp,256
    453e:	00090003          	lb	zero,0(s2)
    4542:	0100                	addi	s0,sp,128
    4544:	0105                	addi	sp,sp,1
    4546:	00090703          	lb	a4,0(s2)
    454a:	0100                	addi	s0,sp,128
    454c:	0009                	c.nop	2
    454e:	0000                	unimp
    4550:	0101                	addi	sp,sp,0
    4552:	0105                	addi	sp,sp,1
    4554:	0500                	addi	s0,sp,640
    4556:	0002                	c.slli64	zero
    4558:	0000                	unimp
    455a:	0300                	addi	s0,sp,384
    455c:	050102af          	0x50102af
    4560:	0305                	addi	t1,t1,1
    4562:	0901                	addi	s2,s2,0
    4564:	0000                	unimp
    4566:	0301                	addi	t1,t1,0
    4568:	0901                	addi	s2,s2,0
    456a:	0000                	unimp
    456c:	0501                	addi	a0,a0,0
    456e:	0601                	addi	a2,a2,0
    4570:	00097e03          	0x97e03
    4574:	0100                	addi	s0,sp,128
    4576:	0e05                	addi	t3,t3,1
    4578:	00090403          	lb	s0,0(s2)
    457c:	0100                	addi	s0,sp,128
    457e:	0105                	addi	sp,sp,1
    4580:	00097c03          	0x97c03
    4584:	0100                	addi	s0,sp,128
    4586:	0905                	addi	s2,s2,1
    4588:	0306                	slli	t1,t1,0x1
    458a:	0904                	addi	s1,sp,144
    458c:	0000                	unimp
    458e:	0301                	addi	t1,t1,0
    4590:	0901                	addi	s2,s2,0
    4592:	0000                	unimp
    4594:	0501                	addi	a0,a0,0
    4596:	0601                	addi	a2,a2,0
    4598:	00097b03          	0x97b03
    459c:	0100                	addi	s0,sp,128
    459e:	0d05                	addi	s10,s10,1
    45a0:	0200                	addi	s0,sp,256
    45a2:	0304                	addi	s1,sp,384
    45a4:	0306                	slli	t1,t1,0x1
    45a6:	00000907          	0x907
    45aa:	0501                	addi	a0,a0,0
    45ac:	0015                	c.nop	5
    45ae:	0402                	c.slli64	s0
    45b0:	00030603          	lb	a2,0(t1)
    45b4:	0009                	c.nop	2
    45b6:	0100                	addi	s0,sp,128
    45b8:	2c05                	jal	47e8 <_printf_float+0x658>
    45ba:	0200                	addi	s0,sp,256
    45bc:	0304                	addi	s1,sp,384
    45be:	00090003          	lb	zero,0(s2)
    45c2:	0100                	addi	s0,sp,128
    45c4:	2a05                	jal	46f4 <_printf_float+0x564>
    45c6:	0200                	addi	s0,sp,256
    45c8:	0304                	addi	s1,sp,384
    45ca:	00090003          	lb	zero,0(s2)
    45ce:	0100                	addi	s0,sp,128
    45d0:	1205                	addi	tp,tp,-31
    45d2:	0200                	addi	s0,sp,256
    45d4:	0304                	addi	s1,sp,384
    45d6:	00090003          	lb	zero,0(s2)
    45da:	0100                	addi	s0,sp,128
    45dc:	0905                	addi	s2,s2,1
    45de:	0200                	addi	s0,sp,256
    45e0:	0304                	addi	s1,sp,384
    45e2:	00097e03          	0x97e03
    45e6:	0100                	addi	s0,sp,128
    45e8:	0505                	addi	a0,a0,1
    45ea:	0200                	addi	s0,sp,256
    45ec:	0204                	addi	s1,sp,256
    45ee:	00097d03          	0x97d03
    45f2:	0100                	addi	s0,sp,128
    45f4:	0105                	addi	sp,sp,1
    45f6:	00090803          	lb	a6,0(s2)
    45fa:	0100                	addi	s0,sp,128
    45fc:	0009                	c.nop	2
    45fe:	0000                	unimp
    4600:	0101                	addi	sp,sp,0
    4602:	0105                	addi	sp,sp,1
    4604:	0500                	addi	s0,sp,640
    4606:	0002                	c.slli64	zero
    4608:	0000                	unimp
    460a:	0300                	addi	s0,sp,384
    460c:	02c2                	slli	t0,t0,0x10
    460e:	0501                	addi	a0,a0,0
    4610:	0305                	addi	t1,t1,1
    4612:	0901                	addi	s2,s2,0
    4614:	0000                	unimp
    4616:	0301                	addi	t1,t1,0
    4618:	0901                	addi	s2,s2,0
    461a:	0000                	unimp
    461c:	0501                	addi	a0,a0,0
    461e:	0601                	addi	a2,a2,0
    4620:	00097e03          	0x97e03
    4624:	0100                	addi	s0,sp,128
    4626:	0c05                	addi	s8,s8,1
    4628:	00090203          	lb	tp,0(s2)
    462c:	0100                	addi	s0,sp,128
    462e:	0105                	addi	sp,sp,1
    4630:	00097e03          	0x97e03
    4634:	0100                	addi	s0,sp,128
    4636:	0d05                	addi	s10,s10,1
    4638:	0306                	slli	t1,t1,0x1
    463a:	0906                	slli	s2,s2,0x1
    463c:	0000                	unimp
    463e:	0301                	addi	t1,t1,0
    4640:	0901                	addi	s2,s2,0
    4642:	0000                	unimp
    4644:	0501                	addi	a0,a0,0
    4646:	0601                	addi	a2,a2,0
    4648:	00097903          	0x97903
    464c:	0100                	addi	s0,sp,128
    464e:	1105                	addi	sp,sp,-31
    4650:	0200                	addi	s0,sp,256
    4652:	0304                	addi	s1,sp,384
    4654:	0306                	slli	t1,t1,0x1
    4656:	0909                	addi	s2,s2,2
    4658:	0000                	unimp
    465a:	0501                	addi	a0,a0,0
    465c:	0021                	c.nop	8
    465e:	0402                	c.slli64	s0
    4660:	00030603          	lb	a2,0(t1)
    4664:	0009                	c.nop	2
    4666:	0100                	addi	s0,sp,128
    4668:	3805                	jal	3e98 <__floatunsidf+0x5c>
    466a:	0200                	addi	s0,sp,256
    466c:	0304                	addi	s1,sp,384
    466e:	00090003          	lb	zero,0(s2)
    4672:	0100                	addi	s0,sp,128
    4674:	3605                	jal	4194 <_printf_float+0x4>
    4676:	0200                	addi	s0,sp,256
    4678:	0304                	addi	s1,sp,384
    467a:	00090003          	lb	zero,0(s2)
    467e:	0100                	addi	s0,sp,128
    4680:	1e05                	addi	t3,t3,-31
    4682:	0200                	addi	s0,sp,256
    4684:	0304                	addi	s1,sp,384
    4686:	00090003          	lb	zero,0(s2)
    468a:	0100                	addi	s0,sp,128
    468c:	0d05                	addi	s10,s10,1
    468e:	0200                	addi	s0,sp,256
    4690:	0304                	addi	s1,sp,384
    4692:	00097e03          	0x97e03
    4696:	0100                	addi	s0,sp,128
    4698:	0905                	addi	s2,s2,1
    469a:	0200                	addi	s0,sp,256
    469c:	0204                	addi	s1,sp,256
    469e:	00097d03          	0x97d03
    46a2:	0100                	addi	s0,sp,128
    46a4:	1905                	addi	s2,s2,-31
    46a6:	0200                	addi	s0,sp,256
    46a8:	0204                	addi	s1,sp,256
    46aa:	00097e03          	0x97e03
    46ae:	0100                	addi	s0,sp,128
    46b0:	0505                	addi	a0,a0,1
    46b2:	0200                	addi	s0,sp,256
    46b4:	0204                	addi	s1,sp,256
    46b6:	00090003          	lb	zero,0(s2)
    46ba:	0100                	addi	s0,sp,128
    46bc:	0105                	addi	sp,sp,1
    46be:	00090b03          	lb	s6,0(s2)
    46c2:	0100                	addi	s0,sp,128
    46c4:	0009                	c.nop	2
    46c6:	0000                	unimp
    46c8:	0101                	addi	sp,sp,0
    46ca:	0105                	addi	sp,sp,1
    46cc:	0500                	addi	s0,sp,640
    46ce:	0002                	c.slli64	zero
    46d0:	0000                	unimp
    46d2:	0300                	addi	s0,sp,384
    46d4:	02d8                	addi	a4,sp,324
    46d6:	0501                	addi	a0,a0,0
    46d8:	0305                	addi	t1,t1,1
    46da:	0901                	addi	s2,s2,0
    46dc:	0000                	unimp
    46de:	0301                	addi	t1,t1,0
    46e0:	0901                	addi	s2,s2,0
    46e2:	0000                	unimp
    46e4:	0501                	addi	a0,a0,0
    46e6:	0601                	addi	a2,a2,0
    46e8:	00097e03          	0x97e03
    46ec:	0100                	addi	s0,sp,128
    46ee:	0c05                	addi	s8,s8,1
    46f0:	00090203          	lb	tp,0(s2)
    46f4:	0100                	addi	s0,sp,128
    46f6:	0105                	addi	sp,sp,1
    46f8:	00097e03          	0x97e03
    46fc:	0100                	addi	s0,sp,128
    46fe:	0d05                	addi	s10,s10,1
    4700:	0306                	slli	t1,t1,0x1
    4702:	0906                	slli	s2,s2,0x1
    4704:	0000                	unimp
    4706:	0301                	addi	t1,t1,0
    4708:	0901                	addi	s2,s2,0
    470a:	0000                	unimp
    470c:	0501                	addi	a0,a0,0
    470e:	0601                	addi	a2,a2,0
    4710:	00097903          	0x97903
    4714:	0100                	addi	s0,sp,128
    4716:	1105                	addi	sp,sp,-31
    4718:	0200                	addi	s0,sp,256
    471a:	0304                	addi	s1,sp,384
    471c:	0306                	slli	t1,t1,0x1
    471e:	0909                	addi	s2,s2,2
    4720:	0000                	unimp
    4722:	0501                	addi	a0,a0,0
    4724:	0035                	c.nop	13
    4726:	0402                	c.slli64	s0
    4728:	00030603          	lb	a2,0(t1)
    472c:	0009                	c.nop	2
    472e:	0100                	addi	s0,sp,128
    4730:	1e05                	addi	t3,t3,-31
    4732:	0200                	addi	s0,sp,256
    4734:	0304                	addi	s1,sp,384
    4736:	00090003          	lb	zero,0(s2)
    473a:	0100                	addi	s0,sp,128
    473c:	1805                	addi	a6,a6,-31
    473e:	0200                	addi	s0,sp,256
    4740:	0304                	addi	s1,sp,384
    4742:	00090003          	lb	zero,0(s2)
    4746:	0100                	addi	s0,sp,128
    4748:	1105                	addi	sp,sp,-31
    474a:	0200                	addi	s0,sp,256
    474c:	0304                	addi	s1,sp,384
    474e:	0306                	slli	t1,t1,0x1
    4750:	0901                	addi	s2,s2,0
    4752:	0000                	unimp
    4754:	0501                	addi	a0,a0,0
    4756:	0021                	c.nop	8
    4758:	0402                	c.slli64	s0
    475a:	00030603          	lb	a2,0(t1)
    475e:	0009                	c.nop	2
    4760:	0100                	addi	s0,sp,128
    4762:	3a05                	jal	4092 <__cvt+0x10e>
    4764:	0200                	addi	s0,sp,256
    4766:	0304                	addi	s1,sp,384
    4768:	00090003          	lb	zero,0(s2)
    476c:	0100                	addi	s0,sp,128
    476e:	2105                	jal	4b8e <_printf_i+0x92>
    4770:	0200                	addi	s0,sp,256
    4772:	0304                	addi	s1,sp,384
    4774:	00090003          	lb	zero,0(s2)
    4778:	0100                	addi	s0,sp,128
    477a:	3a05                	jal	40aa <__cvt+0x126>
    477c:	0200                	addi	s0,sp,256
    477e:	0304                	addi	s1,sp,384
    4780:	00090003          	lb	zero,0(s2)
    4784:	0100                	addi	s0,sp,128
    4786:	3805                	jal	3fb6 <__cvt+0x32>
    4788:	0200                	addi	s0,sp,256
    478a:	0304                	addi	s1,sp,384
    478c:	00090003          	lb	zero,0(s2)
    4790:	0100                	addi	s0,sp,128
    4792:	1e05                	addi	t3,t3,-31
    4794:	0200                	addi	s0,sp,256
    4796:	0304                	addi	s1,sp,384
    4798:	00090003          	lb	zero,0(s2)
    479c:	0100                	addi	s0,sp,128
    479e:	0d05                	addi	s10,s10,1
    47a0:	0200                	addi	s0,sp,256
    47a2:	0304                	addi	s1,sp,384
    47a4:	00097d03          	0x97d03
    47a8:	0100                	addi	s0,sp,128
    47aa:	0905                	addi	s2,s2,1
    47ac:	0200                	addi	s0,sp,256
    47ae:	0204                	addi	s1,sp,256
    47b0:	00097d03          	0x97d03
    47b4:	0100                	addi	s0,sp,128
    47b6:	1905                	addi	s2,s2,-31
    47b8:	0200                	addi	s0,sp,256
    47ba:	0204                	addi	s1,sp,256
    47bc:	00097e03          	0x97e03
    47c0:	0100                	addi	s0,sp,128
    47c2:	0505                	addi	a0,a0,1
    47c4:	0200                	addi	s0,sp,256
    47c6:	0204                	addi	s1,sp,256
    47c8:	00090003          	lb	zero,0(s2)
    47cc:	0100                	addi	s0,sp,128
    47ce:	0105                	addi	sp,sp,1
    47d0:	00090c03          	lb	s8,0(s2)
    47d4:	0100                	addi	s0,sp,128
    47d6:	0009                	c.nop	2
    47d8:	0000                	unimp
    47da:	0101                	addi	sp,sp,0
    47dc:	0358                	addi	a4,sp,388
    47de:	0000                	unimp
    47e0:	01d90003          	lb	zero,29(s2)
    47e4:	0000                	unimp
    47e6:	0101                	addi	sp,sp,0
    47e8:	000d0efb          	0xd0efb
    47ec:	0101                	addi	sp,sp,0
    47ee:	0101                	addi	sp,sp,0
    47f0:	0000                	unimp
    47f2:	0100                	addi	s0,sp,128
    47f4:	0000                	unimp
    47f6:	2e01                	jal	4b06 <_printf_i+0xa>
    47f8:	6372732f          	0x6372732f
    47fc:	726f632f          	0x726f632f
    4800:	6d65                	lui	s10,0x19
    4802:	7261                	lui	tp,0xffff8
    4804:	3a65006b          	0x3a65006b
    4808:	705c                	flw	fa5,36(s0)
    480a:	6f72                	flw	ft10,28(sp)
    480c:	6d617267          	0x6d617267
    4810:	6620                	flw	fs0,72(a2)
    4812:	6c69                	lui	s8,0x1a
    4814:	7365                	lui	t1,0xffff9
    4816:	2820                	fld	fs0,80(s0)
    4818:	3878                	fld	fa4,240(s0)
    481a:	2936                	fld	fs2,328(sp)
    481c:	785c                	flw	fa5,52(s0)
    481e:	6170                	flw	fa2,68(a0)
    4820:	722d6b63          	bltu	s10,sp,4f56 <putchar+0x2>
    4824:	7369                	lui	t1,0xffffa
    4826:	6e2d7663          	bgeu	s10,sp,4f12 <iprintf+0x42>
    482a:	2d656e6f          	jal	t3,5ab00 <_data_lma+0x504e8>
    482e:	6d65                	lui	s10,0x19
    4830:	6562                	flw	fa0,24(sp)
    4832:	2d64                	fld	fs1,216(a0)
    4834:	2d636367          	0x2d636367
    4838:	2e38                	fld	fa4,88(a2)
    483a:	2d302e33          	0x2d302e33
    483e:	2e32                	fld	ft8,264(sp)
    4840:	696c5c33          	0x696c5c33
    4844:	5c62                	lw	s8,56(sp)
    4846:	5c636367          	0x5c636367
    484a:	6972                	flw	fs2,28(sp)
    484c:	2d766373          	csrrsi	t1,0x2d7,12
    4850:	6f6e                	flw	ft10,216(sp)
    4852:	656e                	flw	fa0,216(sp)
    4854:	652d                	lui	a0,0xb
    4856:	626d                	lui	tp,0x1b
    4858:	6465                	lui	s0,0x19
    485a:	385c                	fld	fa5,176(s0)
    485c:	332e                	fld	ft6,232(sp)
    485e:	302e                	fld	ft0,232(sp)
    4860:	695c                	flw	fa5,20(a0)
    4862:	636e                	flw	ft6,216(sp)
    4864:	756c                	flw	fa1,108(a0)
    4866:	6564                	flw	fs1,76(a0)
    4868:	6500                	flw	fs0,8(a0)
    486a:	5c3a                	lw	s8,172(sp)
    486c:	7270                	flw	fa2,100(a2)
    486e:	6172676f          	jal	a4,2b684 <_data_lma+0x2106c>
    4872:	206d                	jal	491c <_printf_float+0x78c>
    4874:	6966                	flw	fs2,88(sp)
    4876:	656c                	flw	fa1,76(a0)
    4878:	78282073          	csrs	0x782,a6
    487c:	3638                	fld	fa4,104(a2)
    487e:	5c29                	li	s8,-22
    4880:	7078                	flw	fa4,100(s0)
    4882:	6361                	lui	t1,0x18
    4884:	69722d6b          	0x69722d6b
    4888:	2d766373          	csrrsi	t1,0x2d7,12
    488c:	6f6e                	flw	ft10,216(sp)
    488e:	656e                	flw	fa0,216(sp)
    4890:	652d                	lui	a0,0xb
    4892:	626d                	lui	tp,0x1b
    4894:	6465                	lui	s0,0x19
    4896:	672d                	lui	a4,0xb
    4898:	382d6363          	bltu	s10,sp,4c1e <_printf_i+0x122>
    489c:	332e                	fld	ft6,232(sp)
    489e:	302e                	fld	ft0,232(sp)
    48a0:	322d                	jal	41ca <_printf_float+0x3a>
    48a2:	332e                	fld	ft6,232(sp)
    48a4:	725c                	flw	fa5,36(a2)
    48a6:	7369                	lui	t1,0xffffa
    48a8:	6e2d7663          	bgeu	s10,sp,4f94 <putchar+0x40>
    48ac:	2d656e6f          	jal	t3,5ab82 <_data_lma+0x5056a>
    48b0:	6d65                	lui	s10,0x19
    48b2:	6562                	flw	fa0,24(sp)
    48b4:	5c64                	lw	s1,124(s0)
    48b6:	6e69                	lui	t3,0x1a
    48b8:	64756c63          	bltu	a0,t2,4f10 <iprintf+0x40>
    48bc:	5c65                	li	s8,-7
    48be:	00737973          	csrrci	s2,0x7,6
    48c2:	3a65                	jal	427a <_printf_float+0xea>
    48c4:	705c                	flw	fa5,36(s0)
    48c6:	6f72                	flw	ft10,28(sp)
    48c8:	6d617267          	0x6d617267
    48cc:	6620                	flw	fs0,72(a2)
    48ce:	6c69                	lui	s8,0x1a
    48d0:	7365                	lui	t1,0xffff9
    48d2:	2820                	fld	fs0,80(s0)
    48d4:	3878                	fld	fa4,240(s0)
    48d6:	2936                	fld	fs2,328(sp)
    48d8:	785c                	flw	fa5,52(s0)
    48da:	6170                	flw	fa2,68(a0)
    48dc:	722d6b63          	bltu	s10,sp,5012 <_putc_r+0x66>
    48e0:	7369                	lui	t1,0xffffa
    48e2:	6e2d7663          	bgeu	s10,sp,4fce <_putc_r+0x22>
    48e6:	2d656e6f          	jal	t3,5abbc <_data_lma+0x505a4>
    48ea:	6d65                	lui	s10,0x19
    48ec:	6562                	flw	fa0,24(sp)
    48ee:	2d64                	fld	fs1,216(a0)
    48f0:	2d636367          	0x2d636367
    48f4:	2e38                	fld	fa4,88(a2)
    48f6:	2d302e33          	0x2d302e33
    48fa:	2e32                	fld	ft8,264(sp)
    48fc:	69725c33          	0x69725c33
    4900:	2d766373          	csrrsi	t1,0x2d7,12
    4904:	6f6e                	flw	ft10,216(sp)
    4906:	656e                	flw	fa0,216(sp)
    4908:	652d                	lui	a0,0xb
    490a:	626d                	lui	tp,0x1b
    490c:	6465                	lui	s0,0x19
    490e:	695c                	flw	fa5,20(a0)
    4910:	636e                	flw	ft6,216(sp)
    4912:	756c                	flw	fa1,108(a0)
    4914:	6564                	flw	fs1,76(a0)
    4916:	2e00                	fld	fs0,24(a2)
    4918:	6372732f          	0x6372732f
    491c:	69616d2f          	0x69616d2f
    4920:	2f6e                	fld	ft10,216(sp)
    4922:	6e69                	lui	t3,0x1a
    4924:	63000063          	beq	zero,a6,4f44 <iprintf+0x74>
    4928:	5f65726f          	jal	tp,5bf1e <_data_lma+0x51906>
    492c:	6f70                	flw	fa2,92(a4)
    492e:	7472                	flw	fs0,60(sp)
    4930:	656d                	lui	a0,0x1b
    4932:	632e                	flw	ft6,200(sp)
    4934:	0100                	addi	s0,sp,128
    4936:	0000                	unimp
    4938:	64647473          	csrrci	s0,0x646,8
    493c:	6665                	lui	a2,0x19
    493e:	682e                	flw	fa6,200(sp)
    4940:	0200                	addi	s0,sp,256
    4942:	0000                	unimp
    4944:	745f 7079 7365      	0x73657079745f
    494a:	682e                	flw	fa6,200(sp)
    494c:	0300                	addi	s0,sp,384
    494e:	0000                	unimp
    4950:	6572                	flw	fa0,28(sp)
    4952:	6e65                	lui	t3,0x19
    4954:	2e74                	fld	fa3,216(a2)
    4956:	0068                	addi	a0,sp,12
    4958:	6c000003          	lb	zero,1728(zero) # 6c0 <main+0x648>
    495c:	2e6b636f          	jal	t1,bac42 <_data_lma+0xb062a>
    4960:	0068                	addi	a0,sp,12
    4962:	74000003          	lb	zero,1856(zero) # 740 <main+0x6c8>
    4966:	7079                	c.lui	zero,0xffffe
    4968:	7365                	lui	t1,0xffff9
    496a:	682e                	flw	fa6,200(sp)
    496c:	0300                	addi	s0,sp,384
    496e:	0000                	unimp
    4970:	6c647473          	csrrci	s0,0x6c6,8
    4974:	6269                	lui	tp,0x1a
    4976:	682e                	flw	fa6,200(sp)
    4978:	0400                	addi	s0,sp,512
    497a:	0000                	unimp
    497c:	6974                	flw	fa3,84(a0)
    497e:	656d                	lui	a0,0x1b
    4980:	682e                	flw	fa6,200(sp)
    4982:	0400                	addi	s0,sp,512
    4984:	0000                	unimp
    4986:	65726f63          	bltu	tp,s7,4fe4 <_putc_r+0x38>
    498a:	705f 726f 6d74      	0x6d74726f705f
    4990:	2e65                	jal	4d48 <_printf_i+0x24c>
    4992:	0068                	addi	a0,sp,12
    4994:	0001                	nop
    4996:	6300                	flw	fs0,0(a4)
    4998:	6d65726f          	jal	tp,5c06e <_data_lma+0x51a56>
    499c:	7261                	lui	tp,0xffff8
    499e:	00682e6b          	0x682e6b
    49a2:	0001                	nop
    49a4:	3c00                	fld	fs0,56(s0)
    49a6:	7562                	flw	fa0,56(sp)
    49a8:	6c69                	lui	s8,0x1a
    49aa:	2d74                	fld	fa3,216(a0)
    49ac:	6e69                	lui	t3,0x1a
    49ae:	003e                	c.slli	zero,0xf
    49b0:	0000                	unimp
    49b2:	7400                	flw	fs0,40(s0)
    49b4:	6d69                	lui	s10,0x1a
    49b6:	7265                	lui	tp,0xffff9
    49b8:	682e                	flw	fa6,200(sp)
    49ba:	0500                	addi	s0,sp,640
    49bc:	0000                	unimp
    49be:	0500                	addi	s0,sp,640
    49c0:	0012                	c.slli	zero,0x4
    49c2:	0205                	addi	tp,tp,1
    49c4:	1cdc                	addi	a5,sp,628
    49c6:	0000                	unimp
    49c8:	05012c03          	lw	s8,80(sp)
    49cc:	0305                	addi	t1,t1,1
    49ce:	0902                	c.slli64	s2
    49d0:	0000                	unimp
    49d2:	0501                	addi	a0,a0,0
    49d4:	0612                	slli	a2,a2,0x4
    49d6:	00097e03          	0x97e03
    49da:	0100                	addi	s0,sp,128
    49dc:	0f05                	addi	t5,t5,1
    49de:	08090203          	lb	tp,128(s2)
    49e2:	0100                	addi	s0,sp,128
    49e4:	0105                	addi	sp,sp,1
    49e6:	08090103          	lb	sp,128(s2)
    49ea:	0100                	addi	s0,sp,128
    49ec:	0d05                	addi	s10,s10,1
    49ee:	04097f03          	0x4097f03
    49f2:	0100                	addi	s0,sp,128
    49f4:	0105                	addi	sp,sp,1
    49f6:	0c090103          	lb	sp,192(s2)
    49fa:	0100                	addi	s0,sp,128
    49fc:	0809                	addi	a6,a6,2
    49fe:	0000                	unimp
    4a00:	0101                	addi	sp,sp,0
    4a02:	1105                	addi	sp,sp,-31
    4a04:	0500                	addi	s0,sp,640
    4a06:	0402                	c.slli64	s0
    4a08:	001d                	c.nop	7
    4a0a:	0300                	addi	s0,sp,384
    4a0c:	05050133          	0x5050133
    4a10:	00090203          	lb	tp,0(s2)
    4a14:	0100                	addi	s0,sp,128
    4a16:	1105                	addi	sp,sp,-31
    4a18:	0306                	slli	t1,t1,0x1
    4a1a:	097e                	slli	s2,s2,0x1f
    4a1c:	0000                	unimp
    4a1e:	0501                	addi	a0,a0,0
    4a20:	0902030f          	0x902030f
    4a24:	0008                	0x8
    4a26:	0501                	addi	a0,a0,0
    4a28:	0301                	addi	t1,t1,0
    4a2a:	0901                	addi	s2,s2,0
    4a2c:	0008                	0x8
    4a2e:	0501                	addi	a0,a0,0
    4a30:	030d                	addi	t1,t1,3
    4a32:	097f                	0x97f
    4a34:	0004                	0x4
    4a36:	0501                	addi	a0,a0,0
    4a38:	0301                	addi	t1,t1,0
    4a3a:	0901                	addi	s2,s2,0
    4a3c:	000c                	0xc
    4a3e:	0901                	addi	s2,s2,0
    4a40:	0008                	0x8
    4a42:	0100                	addi	s0,sp,128
    4a44:	0501                	addi	a0,a0,0
    4a46:	0010                	0x10
    4a48:	0205                	addi	tp,tp,1
    4a4a:	1d2c                	addi	a1,sp,696
    4a4c:	0000                	unimp
    4a4e:	05013b03          	0x5013b03
    4a52:	0305                	addi	t1,t1,1
    4a54:	00000903          	lb	s2,0(zero) # 0 <_start>
    4a58:	0501                	addi	a0,a0,0
    4a5a:	0614                	addi	a3,sp,768
    4a5c:	00090003          	lb	zero,0(s2)
    4a60:	0100                	addi	s0,sp,128
    4a62:	0105                	addi	sp,sp,1
    4a64:	10090103          	lb	sp,256(s2)
    4a68:	0100                	addi	s0,sp,128
    4a6a:	0809                	addi	a6,a6,2
    4a6c:	0000                	unimp
    4a6e:	0101                	addi	sp,sp,0
    4a70:	2005                	jal	4a90 <_printf_common+0x144>
    4a72:	0500                	addi	s0,sp,640
    4a74:	4402                	lw	s0,0(sp)
    4a76:	001d                	c.nop	7
    4a78:	0300                	addi	s0,sp,384
    4a7a:	00c8                	addi	a0,sp,68
    4a7c:	0501                	addi	a0,a0,0
    4a7e:	0305                	addi	t1,t1,1
    4a80:	0902                	c.slli64	s2
    4a82:	0000                	unimp
    4a84:	0501                	addi	a0,a0,0
    4a86:	0620                	addi	s0,sp,776
    4a88:	00097e03          	0x97e03
    4a8c:	0100                	addi	s0,sp,128
    4a8e:	0d05                	addi	s10,s10,1
    4a90:	08090203          	lb	tp,128(s2)
    4a94:	0100                	addi	s0,sp,128
    4a96:	1c05                	addi	s8,s8,-31
    4a98:	08090003          	lb	zero,128(s2)
    4a9c:	0100                	addi	s0,sp,128
    4a9e:	0105                	addi	sp,sp,1
    4aa0:	14090103          	lb	sp,320(s2)
    4aa4:	0100                	addi	s0,sp,128
    4aa6:	0c09                	addi	s8,s8,2
    4aa8:	0000                	unimp
    4aaa:	0101                	addi	sp,sp,0
    4aac:	3a05                	jal	43dc <_printf_float+0x24c>
    4aae:	0500                	addi	s0,sp,640
    4ab0:	7402                	flw	fs0,32(sp)
    4ab2:	001d                	c.nop	7
    4ab4:	0300                	addi	s0,sp,384
    4ab6:	00d8                	addi	a4,sp,68
    4ab8:	0501                	addi	a0,a0,0
    4aba:	0305                	addi	t1,t1,1
    4abc:	0902                	c.slli64	s2
    4abe:	0000                	unimp
    4ac0:	0501                	addi	a0,a0,0
    4ac2:	063a                	slli	a2,a2,0xe
    4ac4:	00097e03          	0x97e03
    4ac8:	0100                	addi	s0,sp,128
    4aca:	0505                	addi	a0,a0,1
    4acc:	0c090203          	lb	tp,192(s2)
    4ad0:	0100                	addi	s0,sp,128
    4ad2:	3a05                	jal	4402 <_printf_float+0x272>
    4ad4:	08097e03          	0x8097e03
    4ad8:	0100                	addi	s0,sp,128
    4ada:	0505                	addi	a0,a0,1
    4adc:	04090203          	lb	tp,64(s2)
    4ae0:	0100                	addi	s0,sp,128
    4ae2:	0306                	slli	t1,t1,0x1
    4ae4:	0901                	addi	s2,s2,0
    4ae6:	0008                	0x8
    4ae8:	0301                	addi	t1,t1,0
    4aea:	0905                	addi	s2,s2,1
    4aec:	0000                	unimp
    4aee:	0301                	addi	t1,t1,0
    4af0:	00000903          	lb	s2,0(zero) # 0 <_start>
    4af4:	0501                	addi	a0,a0,0
    4af6:	0614                	addi	a3,sp,768
    4af8:	00090003          	lb	zero,0(s2)
    4afc:	0100                	addi	s0,sp,128
    4afe:	0105                	addi	sp,sp,1
    4b00:	08090103          	lb	sp,128(s2)
    4b04:	0100                	addi	s0,sp,128
    4b06:	1009                	c.nop	-30
    4b08:	0000                	unimp
    4b0a:	0101                	addi	sp,sp,0
    4b0c:	2105                	jal	4f2c <iprintf+0x5c>
    4b0e:	0500                	addi	s0,sp,640
    4b10:	ac02                	fsd	ft0,24(sp)
    4b12:	001d                	c.nop	7
    4b14:	0300                	addi	s0,sp,384
    4b16:	00e9                	addi	ra,ra,26
    4b18:	0501                	addi	a0,a0,0
    4b1a:	0305                	addi	t1,t1,1
    4b1c:	0901                	addi	s2,s2,0
    4b1e:	0000                	unimp
    4b20:	0501                	addi	a0,a0,0
    4b22:	0614                	addi	a3,sp,768
    4b24:	00090003          	lb	zero,0(s2)
    4b28:	0100                	addi	s0,sp,128
    4b2a:	0105                	addi	sp,sp,1
    4b2c:	04090103          	lb	sp,64(s2)
    4b30:	0100                	addi	s0,sp,128
    4b32:	0409                	addi	s0,s0,2
    4b34:	0000                	unimp
    4b36:	0101                	addi	sp,sp,0
    4b38:	0f6a                	slli	t5,t5,0x1a
    4b3a:	0000                	unimp
    4b3c:	01a70003          	lb	zero,26(a4) # b01a <_data_lma+0xa02>
    4b40:	0000                	unimp
    4b42:	0101                	addi	sp,sp,0
    4b44:	000d0efb          	0xd0efb
    4b48:	0101                	addi	sp,sp,0
    4b4a:	0101                	addi	sp,sp,0
    4b4c:	0000                	unimp
    4b4e:	0100                	addi	s0,sp,128
    4b50:	0000                	unimp
    4b52:	2e01                	jal	4e62 <_printf_i+0x366>
    4b54:	6372732f          	0x6372732f
    4b58:	726f632f          	0x726f632f
    4b5c:	6d65                	lui	s10,0x19
    4b5e:	7261                	lui	tp,0xffff8
    4b60:	3a65006b          	0x3a65006b
    4b64:	705c                	flw	fa5,36(s0)
    4b66:	6f72                	flw	ft10,28(sp)
    4b68:	6d617267          	0x6d617267
    4b6c:	6620                	flw	fs0,72(a2)
    4b6e:	6c69                	lui	s8,0x1a
    4b70:	7365                	lui	t1,0xffff9
    4b72:	2820                	fld	fs0,80(s0)
    4b74:	3878                	fld	fa4,240(s0)
    4b76:	2936                	fld	fs2,328(sp)
    4b78:	785c                	flw	fa5,52(s0)
    4b7a:	6170                	flw	fa2,68(a0)
    4b7c:	722d6b63          	bltu	s10,sp,52b2 <__swbuf_r+0x92>
    4b80:	7369                	lui	t1,0xffffa
    4b82:	6e2d7663          	bgeu	s10,sp,526e <__swbuf_r+0x4e>
    4b86:	2d656e6f          	jal	t3,5ae5c <_data_lma+0x50844>
    4b8a:	6d65                	lui	s10,0x19
    4b8c:	6562                	flw	fa0,24(sp)
    4b8e:	2d64                	fld	fs1,216(a0)
    4b90:	2d636367          	0x2d636367
    4b94:	2e38                	fld	fa4,88(a2)
    4b96:	2d302e33          	0x2d302e33
    4b9a:	2e32                	fld	ft8,264(sp)
    4b9c:	696c5c33          	0x696c5c33
    4ba0:	5c62                	lw	s8,56(sp)
    4ba2:	5c636367          	0x5c636367
    4ba6:	6972                	flw	fs2,28(sp)
    4ba8:	2d766373          	csrrsi	t1,0x2d7,12
    4bac:	6f6e                	flw	ft10,216(sp)
    4bae:	656e                	flw	fa0,216(sp)
    4bb0:	652d                	lui	a0,0xb
    4bb2:	626d                	lui	tp,0x1b
    4bb4:	6465                	lui	s0,0x19
    4bb6:	385c                	fld	fa5,176(s0)
    4bb8:	332e                	fld	ft6,232(sp)
    4bba:	302e                	fld	ft0,232(sp)
    4bbc:	695c                	flw	fa5,20(a0)
    4bbe:	636e                	flw	ft6,216(sp)
    4bc0:	756c                	flw	fa1,108(a0)
    4bc2:	6564                	flw	fs1,76(a0)
    4bc4:	6500                	flw	fs0,8(a0)
    4bc6:	5c3a                	lw	s8,172(sp)
    4bc8:	7270                	flw	fa2,100(a2)
    4bca:	6172676f          	jal	a4,2b9e0 <_data_lma+0x213c8>
    4bce:	206d                	jal	4c78 <_printf_i+0x17c>
    4bd0:	6966                	flw	fs2,88(sp)
    4bd2:	656c                	flw	fa1,76(a0)
    4bd4:	78282073          	csrs	0x782,a6
    4bd8:	3638                	fld	fa4,104(a2)
    4bda:	5c29                	li	s8,-22
    4bdc:	7078                	flw	fa4,100(s0)
    4bde:	6361                	lui	t1,0x18
    4be0:	69722d6b          	0x69722d6b
    4be4:	2d766373          	csrrsi	t1,0x2d7,12
    4be8:	6f6e                	flw	ft10,216(sp)
    4bea:	656e                	flw	fa0,216(sp)
    4bec:	652d                	lui	a0,0xb
    4bee:	626d                	lui	tp,0x1b
    4bf0:	6465                	lui	s0,0x19
    4bf2:	672d                	lui	a4,0xb
    4bf4:	382d6363          	bltu	s10,sp,4f7a <putchar+0x26>
    4bf8:	332e                	fld	ft6,232(sp)
    4bfa:	302e                	fld	ft0,232(sp)
    4bfc:	322d                	jal	4526 <_printf_float+0x396>
    4bfe:	332e                	fld	ft6,232(sp)
    4c00:	725c                	flw	fa5,36(a2)
    4c02:	7369                	lui	t1,0xffffa
    4c04:	6e2d7663          	bgeu	s10,sp,52f0 <__swbuf_r+0xd0>
    4c08:	2d656e6f          	jal	t3,5aede <_data_lma+0x508c6>
    4c0c:	6d65                	lui	s10,0x19
    4c0e:	6562                	flw	fa0,24(sp)
    4c10:	5c64                	lw	s1,124(s0)
    4c12:	6e69                	lui	t3,0x1a
    4c14:	64756c63          	bltu	a0,t2,526c <__swbuf_r+0x4c>
    4c18:	5c65                	li	s8,-7
    4c1a:	00737973          	csrrci	s2,0x7,6
    4c1e:	3a65                	jal	45d6 <_printf_float+0x446>
    4c20:	705c                	flw	fa5,36(s0)
    4c22:	6f72                	flw	ft10,28(sp)
    4c24:	6d617267          	0x6d617267
    4c28:	6620                	flw	fs0,72(a2)
    4c2a:	6c69                	lui	s8,0x1a
    4c2c:	7365                	lui	t1,0xffff9
    4c2e:	2820                	fld	fs0,80(s0)
    4c30:	3878                	fld	fa4,240(s0)
    4c32:	2936                	fld	fs2,328(sp)
    4c34:	785c                	flw	fa5,52(s0)
    4c36:	6170                	flw	fa2,68(a0)
    4c38:	722d6b63          	bltu	s10,sp,536e <__swsetup_r+0x6>
    4c3c:	7369                	lui	t1,0xffffa
    4c3e:	6e2d7663          	bgeu	s10,sp,532a <__swbuf_r+0x10a>
    4c42:	2d656e6f          	jal	t3,5af18 <_data_lma+0x50900>
    4c46:	6d65                	lui	s10,0x19
    4c48:	6562                	flw	fa0,24(sp)
    4c4a:	2d64                	fld	fs1,216(a0)
    4c4c:	2d636367          	0x2d636367
    4c50:	2e38                	fld	fa4,88(a2)
    4c52:	2d302e33          	0x2d302e33
    4c56:	2e32                	fld	ft8,264(sp)
    4c58:	69725c33          	0x69725c33
    4c5c:	2d766373          	csrrsi	t1,0x2d7,12
    4c60:	6f6e                	flw	ft10,216(sp)
    4c62:	656e                	flw	fa0,216(sp)
    4c64:	652d                	lui	a0,0xb
    4c66:	626d                	lui	tp,0x1b
    4c68:	6465                	lui	s0,0x19
    4c6a:	695c                	flw	fa5,20(a0)
    4c6c:	636e                	flw	ft6,216(sp)
    4c6e:	756c                	flw	fa1,108(a0)
    4c70:	6564                	flw	fs1,76(a0)
    4c72:	0000                	unimp
    4c74:	65726f63          	bltu	tp,s7,52d2 <__swbuf_r+0xb2>
    4c78:	735f 6174 6574      	0x65746174735f
    4c7e:	632e                	flw	ft6,200(sp)
    4c80:	0100                	addi	s0,sp,128
    4c82:	0000                	unimp
    4c84:	64647473          	csrrci	s0,0x646,8
    4c88:	6665                	lui	a2,0x19
    4c8a:	682e                	flw	fa6,200(sp)
    4c8c:	0200                	addi	s0,sp,256
    4c8e:	0000                	unimp
    4c90:	745f 7079 7365      	0x73657079745f
    4c96:	682e                	flw	fa6,200(sp)
    4c98:	0300                	addi	s0,sp,384
    4c9a:	0000                	unimp
    4c9c:	6572                	flw	fa0,28(sp)
    4c9e:	6e65                	lui	t3,0x19
    4ca0:	2e74                	fld	fa3,216(a2)
    4ca2:	0068                	addi	a0,sp,12
    4ca4:	6c000003          	lb	zero,1728(zero) # 6c0 <main+0x648>
    4ca8:	2e6b636f          	jal	t1,baf8e <_data_lma+0xb0976>
    4cac:	0068                	addi	a0,sp,12
    4cae:	74000003          	lb	zero,1856(zero) # 740 <main+0x6c8>
    4cb2:	6d69                	lui	s10,0x1a
    4cb4:	2e65                	jal	506c <_putc_r+0xc0>
    4cb6:	0068                	addi	a0,sp,12
    4cb8:	0004                	0x4
    4cba:	6300                	flw	fs0,0(a4)
    4cbc:	5f65726f          	jal	tp,5c2b2 <_data_lma+0x51c9a>
    4cc0:	6f70                	flw	fa2,92(a4)
    4cc2:	7472                	flw	fs0,60(sp)
    4cc4:	656d                	lui	a0,0x1b
    4cc6:	682e                	flw	fa6,200(sp)
    4cc8:	0100                	addi	s0,sp,128
    4cca:	0000                	unimp
    4ccc:	65726f63          	bltu	tp,s7,532a <__swbuf_r+0x10a>
    4cd0:	616d                	addi	sp,sp,240
    4cd2:	6b72                	flw	fs6,28(sp)
    4cd4:	682e                	flw	fa6,200(sp)
    4cd6:	0100                	addi	s0,sp,128
    4cd8:	0000                	unimp
    4cda:	623c                	flw	fa5,64(a2)
    4cdc:	6975                	lui	s2,0x1d
    4cde:	746c                	flw	fa1,108(s0)
    4ce0:	692d                	lui	s2,0xb
    4ce2:	3e6e                	fld	ft8,248(sp)
    4ce4:	0000                	unimp
    4ce6:	0000                	unimp
    4ce8:	0500                	addi	s0,sp,640
    4cea:	0001                	nop
    4cec:	0205                	addi	tp,tp,1
    4cee:	1db4                	addi	a3,sp,760
    4cf0:	0000                	unimp
    4cf2:	01018c03          	lb	s8,16(gp) # 10013b0 <__global_pointer$+0x10>
    4cf6:	0505                	addi	a0,a0,1
    4cf8:	00090103          	lb	sp,0(s2) # b000 <_data_lma+0x9e8>
    4cfc:	0100                	addi	s0,sp,128
    4cfe:	00090103          	lb	sp,0(s2)
    4d02:	0100                	addi	s0,sp,128
    4d04:	00090503          	lb	a0,0(s2)
    4d08:	0100                	addi	s0,sp,128
    4d0a:	0905                	addi	s2,s2,1
    4d0c:	0306                	slli	t1,t1,0x1
    4d0e:	0900                	addi	s0,sp,144
    4d10:	0000                	unimp
    4d12:	0501                	addi	a0,a0,0
    4d14:	0605                	addi	a2,a2,1
    4d16:	04090103          	lb	sp,64(s2)
    4d1a:	0100                	addi	s0,sp,128
    4d1c:	00090103          	lb	sp,0(s2)
    4d20:	0100                	addi	s0,sp,128
    4d22:	0b05                	addi	s6,s6,1
    4d24:	0306                	slli	t1,t1,0x1
    4d26:	0900                	addi	s0,sp,144
    4d28:	0000                	unimp
    4d2a:	0501                	addi	a0,a0,0
    4d2c:	0301                	addi	t1,t1,0
    4d2e:	00040977          	0x40977
    4d32:	0501                	addi	a0,a0,0
    4d34:	0909030b          	0x909030b
    4d38:	0004                	0x4
    4d3a:	0501                	addi	a0,a0,0
    4d3c:	0609                	addi	a2,a2,2
    4d3e:	10090203          	lb	tp,256(s2)
    4d42:	0100                	addi	s0,sp,128
    4d44:	0306                	slli	t1,t1,0x1
    4d46:	0908                	addi	a0,sp,144
    4d48:	0000                	unimp
    4d4a:	0501                	addi	a0,a0,0
    4d4c:	0301                	addi	t1,t1,0
    4d4e:	096d                	addi	s2,s2,27
    4d50:	0008                	0x8
    4d52:	0501                	addi	a0,a0,0
    4d54:	0309                	addi	t1,t1,2
    4d56:	00040913          	mv	s2,s0
    4d5a:	0501                	addi	a0,a0,0
    4d5c:	0316                	slli	t1,t1,0x5
    4d5e:	0905                	addi	s2,s2,1
    4d60:	0004                	0x4
    4d62:	0501                	addi	a0,a0,0
    4d64:	0309                	addi	t1,t1,2
    4d66:	0004097b          	0x4097b
    4d6a:	0501                	addi	a0,a0,0
    4d6c:	0316                	slli	t1,t1,0x5
    4d6e:	00040913          	mv	s2,s0
    4d72:	0301                	addi	t1,t1,0
    4d74:	097c                	addi	a5,sp,156
    4d76:	0004                	0x4
    4d78:	0301                	addi	t1,t1,0
    4d7a:	0004097b          	0x4097b
    4d7e:	0501                	addi	a0,a0,0
    4d80:	0301                	addi	t1,t1,0
    4d82:	00080963          	beqz	a6,4d94 <_printf_i+0x298>
    4d86:	0501                	addi	a0,a0,0
    4d88:	0309                	addi	t1,t1,2
    4d8a:	00080913          	mv	s2,a6
    4d8e:	0501                	addi	a0,a0,0
    4d90:	030c                	addi	a1,sp,384
    4d92:	096e                	slli	s2,s2,0x1b
    4d94:	0008                	0x8
    4d96:	0501                	addi	a0,a0,0
    4d98:	0609                	addi	a2,a2,2
    4d9a:	04091103          	lh	sp,64(s2)
    4d9e:	0100                	addi	s0,sp,128
    4da0:	00090103          	lb	sp,0(s2)
    4da4:	0100                	addi	s0,sp,128
    4da6:	1605                	addi	a2,a2,-31
    4da8:	0306                	slli	t1,t1,0x1
    4daa:	0905                	addi	s2,s2,1
    4dac:	0000                	unimp
    4dae:	0501                	addi	a0,a0,0
    4db0:	0309                	addi	t1,t1,2
    4db2:	0004097b          	0x4097b
    4db6:	0501                	addi	a0,a0,0
    4db8:	0316                	slli	t1,t1,0x5
    4dba:	00040913          	mv	s2,s0
    4dbe:	0301                	addi	t1,t1,0
    4dc0:	0901                	addi	s2,s2,0
    4dc2:	0004                	0x4
    4dc4:	0301                	addi	t1,t1,0
    4dc6:	0004097b          	0x4097b
    4dca:	0301                	addi	t1,t1,0
    4dcc:	0004097b          	0x4097b
    4dd0:	0501                	addi	a0,a0,0
    4dd2:	031e                	slli	t1,t1,0x7
    4dd4:	0972                	slli	s2,s2,0x1c
    4dd6:	0004                	0x4
    4dd8:	0501                	addi	a0,a0,0
    4dda:	0309                	addi	t1,t1,2
    4ddc:	0904                	addi	s1,sp,144
    4dde:	0008                	0x8
    4de0:	0501                	addi	a0,a0,0
    4de2:	0316                	slli	t1,t1,0x5
    4de4:	00100913          	li	s2,1
    4de8:	0501                	addi	a0,a0,0
    4dea:	0309                	addi	t1,t1,2
    4dec:	096d                	addi	s2,s2,27
    4dee:	0004                	0x4
    4df0:	0501                	addi	a0,a0,0
    4df2:	0611                	addi	a2,a2,4
    4df4:	04090a03          	lb	s4,64(s2)
    4df8:	0100                	addi	s0,sp,128
    4dfa:	1605                	addi	a2,a2,-31
    4dfc:	0306                	slli	t1,t1,0x1
    4dfe:	0900                	addi	s0,sp,144
    4e00:	0000                	unimp
    4e02:	0501                	addi	a0,a0,0
    4e04:	031a                	slli	t1,t1,0x6
    4e06:	096c                	addi	a1,sp,156
    4e08:	000c                	0xc
    4e0a:	0501                	addi	a0,a0,0
    4e0c:	0316                	slli	t1,t1,0x5
    4e0e:	091d                	addi	s2,s2,7
    4e10:	0004                	0x4
    4e12:	0501                	addi	a0,a0,0
    4e14:	0611                	addi	a2,a2,4
    4e16:	04090103          	lb	sp,64(s2)
    4e1a:	0100                	addi	s0,sp,128
    4e1c:	00090103          	lb	sp,0(s2)
    4e20:	0100                	addi	s0,sp,128
    4e22:	0b05                	addi	s6,s6,1
    4e24:	0306                	slli	t1,t1,0x1
    4e26:	0961                	addi	s2,s2,24
    4e28:	0004                	0x4
    4e2a:	0501                	addi	a0,a0,0
    4e2c:	0316                	slli	t1,t1,0x5
    4e2e:	091e                	slli	s2,s2,0x7
    4e30:	0004                	0x4
    4e32:	0501                	addi	a0,a0,0
    4e34:	0611                	addi	a2,a2,4
    4e36:	04096703          	0x4096703
    4e3a:	0100                	addi	s0,sp,128
    4e3c:	2705                	jal	555c <quorem+0x68>
    4e3e:	0306                	slli	t1,t1,0x1
    4e40:	0900                	addi	s0,sp,144
    4e42:	0000                	unimp
    4e44:	0501                	addi	a0,a0,0
    4e46:	0322                	slli	t1,t1,0x8
    4e48:	0900                	addi	s0,sp,144
    4e4a:	0004                	0x4
    4e4c:	0501                	addi	a0,a0,0
    4e4e:	0611                	addi	a2,a2,4
    4e50:	08090003          	lb	zero,128(s2)
    4e54:	0100                	addi	s0,sp,128
    4e56:	2705                	jal	5576 <quorem+0x82>
    4e58:	0306                	slli	t1,t1,0x1
    4e5a:	0900                	addi	s0,sp,144
    4e5c:	0000                	unimp
    4e5e:	0501                	addi	a0,a0,0
    4e60:	0322                	slli	t1,t1,0x8
    4e62:	0900                	addi	s0,sp,144
    4e64:	0004                	0x4
    4e66:	0501                	addi	a0,a0,0
    4e68:	0611                	addi	a2,a2,4
    4e6a:	04090003          	lb	zero,64(s2)
    4e6e:	0100                	addi	s0,sp,128
    4e70:	2705                	jal	5590 <quorem+0x9c>
    4e72:	0306                	slli	t1,t1,0x1
    4e74:	0900                	addi	s0,sp,144
    4e76:	0000                	unimp
    4e78:	0501                	addi	a0,a0,0
    4e7a:	0322                	slli	t1,t1,0x8
    4e7c:	0900                	addi	s0,sp,144
    4e7e:	0004                	0x4
    4e80:	0501                	addi	a0,a0,0
    4e82:	0611                	addi	a2,a2,4
    4e84:	04090003          	lb	zero,64(s2)
    4e88:	0100                	addi	s0,sp,128
    4e8a:	2705                	jal	55aa <quorem+0xb6>
    4e8c:	0306                	slli	t1,t1,0x1
    4e8e:	0900                	addi	s0,sp,144
    4e90:	0000                	unimp
    4e92:	0501                	addi	a0,a0,0
    4e94:	0322                	slli	t1,t1,0x8
    4e96:	0900                	addi	s0,sp,144
    4e98:	0004                	0x4
    4e9a:	0501                	addi	a0,a0,0
    4e9c:	030d                	addi	t1,t1,3
    4e9e:	097f                	0x97f
    4ea0:	0004                	0x4
    4ea2:	0501                	addi	a0,a0,0
    4ea4:	0611                	addi	a2,a2,4
    4ea6:	04090103          	lb	sp,64(s2)
    4eaa:	0100                	addi	s0,sp,128
    4eac:	2705                	jal	55cc <quorem+0xd8>
    4eae:	0306                	slli	t1,t1,0x1
    4eb0:	0900                	addi	s0,sp,144
    4eb2:	0000                	unimp
    4eb4:	0501                	addi	a0,a0,0
    4eb6:	0322                	slli	t1,t1,0x8
    4eb8:	0900                	addi	s0,sp,144
    4eba:	0004                	0x4
    4ebc:	0501                	addi	a0,a0,0
    4ebe:	0611                	addi	a2,a2,4
    4ec0:	04090003          	lb	zero,64(s2)
    4ec4:	0100                	addi	s0,sp,128
    4ec6:	2705                	jal	55e6 <quorem+0xf2>
    4ec8:	0306                	slli	t1,t1,0x1
    4eca:	0900                	addi	s0,sp,144
    4ecc:	0000                	unimp
    4ece:	0501                	addi	a0,a0,0
    4ed0:	0322                	slli	t1,t1,0x8
    4ed2:	0900                	addi	s0,sp,144
    4ed4:	0004                	0x4
    4ed6:	0501                	addi	a0,a0,0
    4ed8:	0611                	addi	a2,a2,4
    4eda:	04090003          	lb	zero,64(s2)
    4ede:	0100                	addi	s0,sp,128
    4ee0:	2705                	jal	5600 <quorem+0x10c>
    4ee2:	0306                	slli	t1,t1,0x1
    4ee4:	0900                	addi	s0,sp,144
    4ee6:	0000                	unimp
    4ee8:	0501                	addi	a0,a0,0
    4eea:	0322                	slli	t1,t1,0x8
    4eec:	0900                	addi	s0,sp,144
    4eee:	0004                	0x4
    4ef0:	0501                	addi	a0,a0,0
    4ef2:	030d                	addi	t1,t1,3
    4ef4:	097f                	0x97f
    4ef6:	0004                	0x4
    4ef8:	0501                	addi	a0,a0,0
    4efa:	0011                	c.nop	4
    4efc:	0402                	c.slli64	s0
    4efe:	01030603          	lb	a2,16(t1) # ffffa010 <__freertos_irq_stack_top+0xfefea010>
    4f02:	0409                	addi	s0,s0,2
    4f04:	0100                	addi	s0,sp,128
    4f06:	2705                	jal	5626 <quorem+0x132>
    4f08:	0200                	addi	s0,sp,256
    4f0a:	0304                	addi	s1,sp,384
    4f0c:	0306                	slli	t1,t1,0x1
    4f0e:	0900                	addi	s0,sp,144
    4f10:	0000                	unimp
    4f12:	0501                	addi	a0,a0,0
    4f14:	0022                	c.slli	zero,0x8
    4f16:	0402                	c.slli64	s0
    4f18:	09000303          	lb	t1,144(zero) # 90 <main+0x18>
    4f1c:	0004                	0x4
    4f1e:	0501                	addi	a0,a0,0
    4f20:	060d                	addi	a2,a2,3
    4f22:	04090103          	lb	sp,64(s2)
    4f26:	0100                	addi	s0,sp,128
    4f28:	1e05                	addi	t3,t3,-31
    4f2a:	0306                	slli	t1,t1,0x1
    4f2c:	0900                	addi	s0,sp,144
    4f2e:	0000                	unimp
    4f30:	0501                	addi	a0,a0,0
    4f32:	060d                	addi	a2,a2,3
    4f34:	08090103          	lb	sp,128(s2)
    4f38:	0100                	addi	s0,sp,128
    4f3a:	1e05                	addi	t3,t3,-31
    4f3c:	0306                	slli	t1,t1,0x1
    4f3e:	097f                	0x97f
    4f40:	0000                	unimp
    4f42:	0501                	addi	a0,a0,0
    4f44:	0609                	addi	a2,a2,2
    4f46:	04090303          	lb	t1,64(s2)
    4f4a:	0100                	addi	s0,sp,128
    4f4c:	00090103          	lb	sp,0(s2)
    4f50:	0100                	addi	s0,sp,128
    4f52:	1105                	addi	sp,sp,-31
    4f54:	1c090503          	lb	a0,448(s2)
    4f58:	0100                	addi	s0,sp,128
    4f5a:	1605                	addi	a2,a2,-31
    4f5c:	0306                	slli	t1,t1,0x1
    4f5e:	0900                	addi	s0,sp,144
    4f60:	0000                	unimp
    4f62:	0501                	addi	a0,a0,0
    4f64:	031a                	slli	t1,t1,0x6
    4f66:	0971                	addi	s2,s2,28
    4f68:	0010                	0x10
    4f6a:	0501                	addi	a0,a0,0
    4f6c:	0316                	slli	t1,t1,0x5
    4f6e:	0004090f          	0x4090f
    4f72:	0501                	addi	a0,a0,0
    4f74:	0611                	addi	a2,a2,4
    4f76:	04090103          	lb	sp,64(s2)
    4f7a:	0100                	addi	s0,sp,128
    4f7c:	00090103          	lb	sp,0(s2)
    4f80:	0100                	addi	s0,sp,128
    4f82:	0b05                	addi	s6,s6,1
    4f84:	0306                	slli	t1,t1,0x1
    4f86:	0004096f          	jal	s2,44f86 <_data_lma+0x3a96e>
    4f8a:	0501                	addi	a0,a0,0
    4f8c:	0316                	slli	t1,t1,0x5
    4f8e:	0910                	addi	a2,sp,144
    4f90:	0004                	0x4
    4f92:	0501                	addi	a0,a0,0
    4f94:	0611                	addi	a2,a2,4
    4f96:	08090903          	lb	s2,128(s2)
    4f9a:	0100                	addi	s0,sp,128
    4f9c:	1605                	addi	a2,a2,-31
    4f9e:	0306                	slli	t1,t1,0x1
    4fa0:	0900                	addi	s0,sp,144
    4fa2:	0004                	0x4
    4fa4:	0501                	addi	a0,a0,0
    4fa6:	031a                	slli	t1,t1,0x6
    4fa8:	00080967          	jalr	s2,a6
    4fac:	0501                	addi	a0,a0,0
    4fae:	0316                	slli	t1,t1,0x5
    4fb0:	091d                	addi	s2,s2,7
    4fb2:	0004                	0x4
    4fb4:	0501                	addi	a0,a0,0
    4fb6:	0611                	addi	a2,a2,4
    4fb8:	04090103          	lb	sp,64(s2)
    4fbc:	0100                	addi	s0,sp,128
    4fbe:	00090103          	lb	sp,0(s2)
    4fc2:	0100                	addi	s0,sp,128
    4fc4:	0b05                	addi	s6,s6,1
    4fc6:	0306                	slli	t1,t1,0x1
    4fc8:	0961                	addi	s2,s2,24
    4fca:	0004                	0x4
    4fcc:	0301                	addi	t1,t1,0
    4fce:	0925                	addi	s2,s2,9
    4fd0:	0004                	0x4
    4fd2:	0501                	addi	a0,a0,0
    4fd4:	0301                	addi	t1,t1,0
    4fd6:	0908                	addi	a0,sp,144
    4fd8:	0004                	0x4
    4fda:	0501                	addi	a0,a0,0
    4fdc:	0611                	addi	a2,a2,4
    4fde:	20097003          	0x20097003
    4fe2:	0100                	addi	s0,sp,128
    4fe4:	1605                	addi	a2,a2,-31
    4fe6:	0306                	slli	t1,t1,0x1
    4fe8:	0900                	addi	s0,sp,144
    4fea:	0000                	unimp
    4fec:	0501                	addi	a0,a0,0
    4fee:	0301                	addi	t1,t1,0
    4ff0:	0910                	addi	a2,sp,144
    4ff2:	0008                	0x8
    4ff4:	0501                	addi	a0,a0,0
    4ff6:	030c                	addi	a1,sp,384
    4ff8:	0010094b          	fnmsub.s	fs2,ft0,ft1,ft0,rne
    4ffc:	0901                	addi	s2,s2,0
    4ffe:	0018                	0x18
    5000:	0100                	addi	s0,sp,128
    5002:	0501                	addi	a0,a0,0
    5004:	0001                	nop
    5006:	0205                	addi	tp,tp,1
    5008:	1f70                	addi	a2,sp,956
    500a:	0000                	unimp
    500c:	0101d903          	lhu	s2,16(gp) # 10013b0 <__global_pointer$+0x10>
    5010:	0505                	addi	a0,a0,1
    5012:	00090103          	lb	sp,0(s2)
    5016:	0100                	addi	s0,sp,128
    5018:	1505                	addi	a0,a0,-31
    501a:	0306                	slli	t1,t1,0x1
    501c:	0900                	addi	s0,sp,144
    501e:	0000                	unimp
    5020:	0501                	addi	a0,a0,0
    5022:	0605                	addi	a2,a2,1
    5024:	04090103          	lb	sp,64(s2)
    5028:	0100                	addi	s0,sp,128
    502a:	00090103          	lb	sp,0(s2)
    502e:	0100                	addi	s0,sp,128
    5030:	00090103          	lb	sp,0(s2)
    5034:	0100                	addi	s0,sp,128
    5036:	0c05                	addi	s8,s8,1
    5038:	0306                	slli	t1,t1,0x1
    503a:	0900                	addi	s0,sp,144
    503c:	0000                	unimp
    503e:	0501                	addi	a0,a0,0
    5040:	0305                	addi	t1,t1,1
    5042:	0900                	addi	s0,sp,144
    5044:	0004                	0x4
    5046:	0501                	addi	a0,a0,0
    5048:	0609                	addi	a2,a2,2
    504a:	04090203          	lb	tp,64(s2)
    504e:	0100                	addi	s0,sp,128
    5050:	00090103          	lb	sp,0(s2)
    5054:	0100                	addi	s0,sp,128
    5056:	0c05                	addi	s8,s8,1
    5058:	0306                	slli	t1,t1,0x1
    505a:	0900                	addi	s0,sp,144
    505c:	0000                	unimp
    505e:	0501                	addi	a0,a0,0
    5060:	0609                	addi	a2,a2,2
    5062:	0c090503          	lb	a0,192(s2)
    5066:	0100                	addi	s0,sp,128
    5068:	1105                	addi	sp,sp,-31
    506a:	00090303          	lb	t1,0(s2)
    506e:	0100                	addi	s0,sp,128
    5070:	0505                	addi	a0,a0,1
    5072:	00095f03          	lhu	t5,0(s2)
    5076:	0100                	addi	s0,sp,128
    5078:	00090103          	lb	sp,0(s2)
    507c:	0100                	addi	s0,sp,128
    507e:	1a05                	addi	s4,s4,-31
    5080:	0306                	slli	t1,t1,0x1
    5082:	0900                	addi	s0,sp,144
    5084:	0004                	0x4
    5086:	0501                	addi	a0,a0,0
    5088:	030c                	addi	a1,sp,384
    508a:	0900                	addi	s0,sp,144
    508c:	0004                	0x4
    508e:	0501                	addi	a0,a0,0
    5090:	0611                	addi	a2,a2,4
    5092:	10093103          	0x10093103
    5096:	0100                	addi	s0,sp,128
    5098:	2d05                	jal	56c8 <_dtoa_r+0x8>
    509a:	0306                	slli	t1,t1,0x1
    509c:	0900                	addi	s0,sp,144
    509e:	0000                	unimp
    50a0:	0501                	addi	a0,a0,0
    50a2:	0611                	addi	a2,a2,4
    50a4:	04090103          	lb	sp,64(s2)
    50a8:	0100                	addi	s0,sp,128
    50aa:	0c05                	addi	s8,s8,1
    50ac:	0306                	slli	t1,t1,0x1
    50ae:	00000963          	beqz	zero,50c0 <_puts_r+0x48>
    50b2:	0501                	addi	a0,a0,0
    50b4:	0305                	addi	t1,t1,1
    50b6:	0900                	addi	s0,sp,144
    50b8:	0004                	0x4
    50ba:	0501                	addi	a0,a0,0
    50bc:	0609                	addi	a2,a2,2
    50be:	04090203          	lb	tp,64(s2)
    50c2:	0100                	addi	s0,sp,128
    50c4:	00090103          	lb	sp,0(s2)
    50c8:	0100                	addi	s0,sp,128
    50ca:	0c05                	addi	s8,s8,1
    50cc:	0306                	slli	t1,t1,0x1
    50ce:	0900                	addi	s0,sp,144
    50d0:	0004                	0x4
    50d2:	0501                	addi	a0,a0,0
    50d4:	031a                	slli	t1,t1,0x6
    50d6:	0968                	addi	a0,sp,156
    50d8:	0004                	0x4
    50da:	0501                	addi	a0,a0,0
    50dc:	0314                	addi	a3,sp,384
    50de:	00c5                	addi	ra,ra,17
    50e0:	0409                	addi	s0,s0,2
    50e2:	0100                	addi	s0,sp,128
    50e4:	0c05                	addi	s8,s8,1
    50e6:	097fbb03          	0x97fbb03
    50ea:	0004                	0x4
    50ec:	0301                	addi	t1,t1,0
    50ee:	0918                	addi	a4,sp,144
    50f0:	0004                	0x4
    50f2:	0501                	addi	a0,a0,0
    50f4:	0611                	addi	a2,a2,4
    50f6:	04092d03          	lw	s10,64(s2)
    50fa:	0100                	addi	s0,sp,128
    50fc:	1605                	addi	a2,a2,-31
    50fe:	00090503          	lb	a0,0(s2)
    5102:	0100                	addi	s0,sp,128
    5104:	0505                	addi	a0,a0,1
    5106:	097fb503          	0x97fb503
    510a:	0000                	unimp
    510c:	0301                	addi	t1,t1,0
    510e:	0901                	addi	s2,s2,0
    5110:	0000                	unimp
    5112:	0501                	addi	a0,a0,0
    5114:	060c                	addi	a1,sp,768
    5116:	00090003          	lb	zero,0(s2)
    511a:	0100                	addi	s0,sp,128
    511c:	1405                	addi	s0,s0,-31
    511e:	0900c503          	lbu	a0,144(ra)
    5122:	0004                	0x4
    5124:	0501                	addi	a0,a0,0
    5126:	0609                	addi	a2,a2,2
    5128:	04095203          	lhu	tp,64(s2)
    512c:	0100                	addi	s0,sp,128
    512e:	0c05                	addi	s8,s8,1
    5130:	0306                	slli	t1,t1,0x1
    5132:	0969                	addi	s2,s2,26
    5134:	0000                	unimp
    5136:	0301                	addi	t1,t1,0
    5138:	0915                	addi	s2,s2,5
    513a:	0004                	0x4
    513c:	0501                	addi	a0,a0,0
    513e:	0609                	addi	a2,a2,2
    5140:	04090303          	lb	t1,64(s2)
    5144:	0100                	addi	s0,sp,128
    5146:	0505                	addi	a0,a0,1
    5148:	0306                	slli	t1,t1,0x1
    514a:	097d                	addi	s2,s2,31
    514c:	0008                	0x8
    514e:	0501                	addi	a0,a0,0
    5150:	030c                	addi	a1,sp,384
    5152:	00040903          	lb	s2,0(s0) # 19000 <_data_lma+0xe9e8>
    5156:	0501                	addi	a0,a0,0
    5158:	0611                	addi	a2,a2,4
    515a:	08092d03          	lw	s10,128(s2)
    515e:	0100                	addi	s0,sp,128
    5160:	1605                	addi	a2,a2,-31
    5162:	00090503          	lb	a0,0(s2)
    5166:	0100                	addi	s0,sp,128
    5168:	0505                	addi	a0,a0,1
    516a:	097fb503          	0x97fb503
    516e:	0000                	unimp
    5170:	0301                	addi	t1,t1,0
    5172:	0901                	addi	s2,s2,0
    5174:	0000                	unimp
    5176:	0501                	addi	a0,a0,0
    5178:	061a                	slli	a2,a2,0x6
    517a:	00090003          	lb	zero,0(s2)
    517e:	0100                	addi	s0,sp,128
    5180:	0c05                	addi	s8,s8,1
    5182:	04090003          	lb	zero,64(s2)
    5186:	0100                	addi	s0,sp,128
    5188:	1405                	addi	s0,s0,-31
    518a:	0900c503          	lbu	a0,144(ra)
    518e:	0004                	0x4
    5190:	0501                	addi	a0,a0,0
    5192:	0615                	addi	a2,a2,5
    5194:	04090203          	lb	tp,64(s2)
    5198:	0100                	addi	s0,sp,128
    519a:	00090103          	lb	sp,0(s2)
    519e:	0100                	addi	s0,sp,128
    51a0:	2f05                	jal	58d0 <_dtoa_r+0x210>
    51a2:	0306                	slli	t1,t1,0x1
    51a4:	0900                	addi	s0,sp,144
    51a6:	0000                	unimp
    51a8:	0501                	addi	a0,a0,0
    51aa:	030c                	addi	a1,sp,384
    51ac:	094d                	addi	s2,s2,19
    51ae:	000c                	0xc
    51b0:	0501                	addi	a0,a0,0
    51b2:	0305                	addi	t1,t1,1
    51b4:	0900                	addi	s0,sp,144
    51b6:	0004                	0x4
    51b8:	0501                	addi	a0,a0,0
    51ba:	0609                	addi	a2,a2,2
    51bc:	04090203          	lb	tp,64(s2)
    51c0:	0100                	addi	s0,sp,128
    51c2:	00090103          	lb	sp,0(s2)
    51c6:	0100                	addi	s0,sp,128
    51c8:	0c05                	addi	s8,s8,1
    51ca:	0306                	slli	t1,t1,0x1
    51cc:	0900                	addi	s0,sp,144
    51ce:	0000                	unimp
    51d0:	0501                	addi	a0,a0,0
    51d2:	0314                	addi	a3,sp,384
    51d4:	0939                	addi	s2,s2,14
    51d6:	000c                	0xc
    51d8:	0501                	addi	a0,a0,0
    51da:	030c                	addi	a1,sp,384
    51dc:	04097faf          	0x4097faf
    51e0:	0100                	addi	s0,sp,128
    51e2:	04091803          	lh	a6,64(s2)
    51e6:	0100                	addi	s0,sp,128
    51e8:	1105                	addi	sp,sp,-31
    51ea:	0306                	slli	t1,t1,0x1
    51ec:	0939                	addi	s2,s2,14
    51ee:	0004                	0x4
    51f0:	0501                	addi	a0,a0,0
    51f2:	0316                	slli	t1,t1,0x5
    51f4:	0905                	addi	s2,s2,1
    51f6:	0000                	unimp
    51f8:	0501                	addi	a0,a0,0
    51fa:	0305                	addi	t1,t1,1
    51fc:	7fa9                	lui	t6,0xfffea
    51fe:	0009                	c.nop	2
    5200:	0100                	addi	s0,sp,128
    5202:	00090103          	lb	sp,0(s2)
    5206:	0100                	addi	s0,sp,128
    5208:	1a05                	addi	s4,s4,-31
    520a:	0306                	slli	t1,t1,0x1
    520c:	0900                	addi	s0,sp,144
    520e:	0000                	unimp
    5210:	0501                	addi	a0,a0,0
    5212:	0314                	addi	a3,sp,384
    5214:	00d1                	addi	ra,ra,20
    5216:	0409                	addi	s0,s0,2
    5218:	0100                	addi	s0,sp,128
    521a:	0c05                	addi	s8,s8,1
    521c:	097faf03          	lw	t5,151(t6) # fffea097 <__freertos_irq_stack_top+0xfefda097>
    5220:	0004                	0x4
    5222:	0501                	addi	a0,a0,0
    5224:	0314                	addi	a3,sp,384
    5226:	00d1                	addi	ra,ra,20
    5228:	0409                	addi	s0,s0,2
    522a:	0100                	addi	s0,sp,128
    522c:	0905                	addi	s2,s2,1
    522e:	0306                	slli	t1,t1,0x1
    5230:	0946                	slli	s2,s2,0x11
    5232:	0004                	0x4
    5234:	0501                	addi	a0,a0,0
    5236:	060c                	addi	a1,sp,768
    5238:	00096903          	0x96903
    523c:	0100                	addi	s0,sp,128
    523e:	0505                	addi	a0,a0,1
    5240:	0306                	slli	t1,t1,0x1
    5242:	0901                	addi	s2,s2,0
    5244:	0004                	0x4
    5246:	0501                	addi	a0,a0,0
    5248:	0315                	addi	t1,t1,5
    524a:	000900d7          	0x900d7
    524e:	0100                	addi	s0,sp,128
    5250:	00090103          	lb	sp,0(s2)
    5254:	0100                	addi	s0,sp,128
    5256:	3105                	jal	4e76 <_printf_i+0x37a>
    5258:	0306                	slli	t1,t1,0x1
    525a:	0900                	addi	s0,sp,144
    525c:	0000                	unimp
    525e:	0501                	addi	a0,a0,0
    5260:	097f031b          	0x97f031b
    5264:	0008                	0x8
    5266:	0501                	addi	a0,a0,0
    5268:	0331                	addi	t1,t1,12
    526a:	0901                	addi	s2,s2,0
    526c:	0004                	0x4
    526e:	0501                	addi	a0,a0,0
    5270:	0605                	addi	a2,a2,1
    5272:	08092603          	lw	a2,128(s2)
    5276:	0100                	addi	s0,sp,128
    5278:	0c05                	addi	s8,s8,1
    527a:	0306                	slli	t1,t1,0x1
    527c:	0900                	addi	s0,sp,144
    527e:	0000                	unimp
    5280:	0501                	addi	a0,a0,0
    5282:	0605                	addi	a2,a2,1
    5284:	04090103          	lb	sp,64(s2)
    5288:	0100                	addi	s0,sp,128
    528a:	0105                	addi	sp,sp,1
    528c:	0306                	slli	t1,t1,0x1
    528e:	0901                	addi	s2,s2,0
    5290:	0000                	unimp
    5292:	0501                	addi	a0,a0,0
    5294:	0605                	addi	a2,a2,1
    5296:	097f8003          	lb	zero,151(t6)
    529a:	0008                	0x8
    529c:	0501                	addi	a0,a0,0
    529e:	0316                	slli	t1,t1,0x5
    52a0:	00000923          	sb	zero,18(zero) # 12 <_start+0x12>
    52a4:	0501                	addi	a0,a0,0
    52a6:	0619                	addi	a2,a2,6
    52a8:	00090003          	lb	zero,0(s2)
    52ac:	0100                	addi	s0,sp,128
    52ae:	2d05                	jal	58de <_dtoa_r+0x21e>
    52b0:	0200                	addi	s0,sp,256
    52b2:	0104                	addi	s1,sp,128
    52b4:	08090003          	lb	zero,128(s2)
    52b8:	0100                	addi	s0,sp,128
    52ba:	1605                	addi	a2,a2,-31
    52bc:	0306                	slli	t1,t1,0x1
    52be:	0904                	addi	s1,sp,144
    52c0:	0008                	0x8
    52c2:	0501                	addi	a0,a0,0
    52c4:	0619                	addi	a2,a2,6
    52c6:	00090003          	lb	zero,0(s2)
    52ca:	0100                	addi	s0,sp,128
    52cc:	1505                	addi	a0,a0,-31
    52ce:	0306                	slli	t1,t1,0x1
    52d0:	0906                	slli	s2,s2,0x1
    52d2:	0008                	0x8
    52d4:	0301                	addi	t1,t1,0
    52d6:	0901                	addi	s2,s2,0
    52d8:	0000                	unimp
    52da:	0501                	addi	a0,a0,0
    52dc:	00030633          	add	a2,t1,zero
    52e0:	0009                	c.nop	2
    52e2:	0100                	addi	s0,sp,128
    52e4:	2d05                	jal	5914 <_dtoa_r+0x254>
    52e6:	04090203          	lb	tp,64(s2)
    52ea:	0100                	addi	s0,sp,128
    52ec:	1b05                	addi	s6,s6,-31
    52ee:	04097d03          	0x4097d03
    52f2:	0100                	addi	s0,sp,128
    52f4:	3305                	jal	5014 <_putc_r+0x68>
    52f6:	04090103          	lb	sp,64(s2)
    52fa:	0100                	addi	s0,sp,128
    52fc:	1105                	addi	sp,sp,-31
    52fe:	0306                	slli	t1,t1,0x1
    5300:	0902                	c.slli64	s2
    5302:	0008                	0x8
    5304:	0301                	addi	t1,t1,0
    5306:	0901                	addi	s2,s2,0
    5308:	0000                	unimp
    530a:	0501                	addi	a0,a0,0
    530c:	0305                	addi	t1,t1,1
    530e:	00cd                	addi	ra,ra,19
    5310:	0009                	c.nop	2
    5312:	0100                	addi	s0,sp,128
    5314:	0c05                	addi	s8,s8,1
    5316:	0306                	slli	t1,t1,0x1
    5318:	0900                	addi	s0,sp,144
    531a:	0000                	unimp
    531c:	0501                	addi	a0,a0,0
    531e:	0605                	addi	a2,a2,1
    5320:	04090103          	lb	sp,64(s2)
    5324:	0100                	addi	s0,sp,128
    5326:	0105                	addi	sp,sp,1
    5328:	0306                	slli	t1,t1,0x1
    532a:	0901                	addi	s2,s2,0
    532c:	0000                	unimp
    532e:	0501                	addi	a0,a0,0
    5330:	0605                	addi	a2,a2,1
    5332:	097f8003          	lb	zero,151(t6)
    5336:	0008                	0x8
    5338:	0501                	addi	a0,a0,0
    533a:	0315                	addi	t1,t1,5
    533c:	000900cb          	fnmsub.s	ft1,fs2,ft0,ft0,rne
    5340:	0100                	addi	s0,sp,128
    5342:	00090103          	lb	sp,0(s2)
    5346:	0100                	addi	s0,sp,128
    5348:	2f05                	jal	5a78 <_dtoa_r+0x3b8>
    534a:	0306                	slli	t1,t1,0x1
    534c:	0900                	addi	s0,sp,144
    534e:	0000                	unimp
    5350:	0501                	addi	a0,a0,0
    5352:	097f031b          	0x97f031b
    5356:	0008                	0x8
    5358:	0501                	addi	a0,a0,0
    535a:	0901032f          	0x901032f
    535e:	0004                	0x4
    5360:	0501                	addi	a0,a0,0
    5362:	0605                	addi	a2,a2,1
    5364:	08093203          	0x8093203
    5368:	0100                	addi	s0,sp,128
    536a:	0c05                	addi	s8,s8,1
    536c:	0306                	slli	t1,t1,0x1
    536e:	0900                	addi	s0,sp,144
    5370:	0000                	unimp
    5372:	0501                	addi	a0,a0,0
    5374:	0605                	addi	a2,a2,1
    5376:	04090103          	lb	sp,64(s2)
    537a:	0100                	addi	s0,sp,128
    537c:	0105                	addi	sp,sp,1
    537e:	0306                	slli	t1,t1,0x1
    5380:	0901                	addi	s2,s2,0
    5382:	0000                	unimp
    5384:	0501                	addi	a0,a0,0
    5386:	0611                	addi	a2,a2,4
    5388:	097fb003          	0x97fb003
    538c:	0008                	0x8
    538e:	0501                	addi	a0,a0,0
    5390:	062d                	addi	a2,a2,11
    5392:	00090003          	lb	zero,0(s2)
    5396:	0100                	addi	s0,sp,128
    5398:	1105                	addi	sp,sp,-31
    539a:	0306                	slli	t1,t1,0x1
    539c:	0901                	addi	s2,s2,0
    539e:	0004                	0x4
    53a0:	0501                	addi	a0,a0,0
    53a2:	060c                	addi	a1,sp,768
    53a4:	00096303          	0x96303
    53a8:	0100                	addi	s0,sp,128
    53aa:	0505                	addi	a0,a0,1
    53ac:	04090003          	lb	zero,64(s2)
    53b0:	0100                	addi	s0,sp,128
    53b2:	0905                	addi	s2,s2,1
    53b4:	0306                	slli	t1,t1,0x1
    53b6:	0902                	c.slli64	s2
    53b8:	0004                	0x4
    53ba:	0301                	addi	t1,t1,0
    53bc:	0901                	addi	s2,s2,0
    53be:	0000                	unimp
    53c0:	0501                	addi	a0,a0,0
    53c2:	060c                	addi	a1,sp,768
    53c4:	04090003          	lb	zero,64(s2)
    53c8:	0100                	addi	s0,sp,128
    53ca:	1105                	addi	sp,sp,-31
    53cc:	0306                	slli	t1,t1,0x1
    53ce:	091c                	addi	a5,sp,144
    53d0:	0004                	0x4
    53d2:	0501                	addi	a0,a0,0
    53d4:	0305                	addi	t1,t1,1
    53d6:	0000094b          	fnmsub.s	fs2,ft0,ft0,ft0,rne
    53da:	0301                	addi	t1,t1,0
    53dc:	0901                	addi	s2,s2,0
    53de:	0000                	unimp
    53e0:	0501                	addi	a0,a0,0
    53e2:	061a                	slli	a2,a2,0x6
    53e4:	04090003          	lb	zero,64(s2)
    53e8:	0100                	addi	s0,sp,128
    53ea:	0c05                	addi	s8,s8,1
    53ec:	04090003          	lb	zero,64(s2)
    53f0:	0100                	addi	s0,sp,128
    53f2:	0505                	addi	a0,a0,1
    53f4:	0306                	slli	t1,t1,0x1
    53f6:	0901                	addi	s2,s2,0
    53f8:	0010                	0x10
    53fa:	0501                	addi	a0,a0,0
    53fc:	0316                	slli	t1,t1,0x5
    53fe:	0938                	addi	a4,sp,152
    5400:	0000                	unimp
    5402:	0501                	addi	a0,a0,0
    5404:	0619                	addi	a2,a2,6
    5406:	00090003          	lb	zero,0(s2)
    540a:	0100                	addi	s0,sp,128
    540c:	1505                	addi	a0,a0,-31
    540e:	0306                	slli	t1,t1,0x1
    5410:	00080907          	0x80907
    5414:	0301                	addi	t1,t1,0
    5416:	0901                	addi	s2,s2,0
    5418:	0000                	unimp
    541a:	0501                	addi	a0,a0,0
    541c:	062e                	slli	a2,a2,0xb
    541e:	00090003          	lb	zero,0(s2)
    5422:	0100                	addi	s0,sp,128
    5424:	1b05                	addi	s6,s6,-31
    5426:	04097f03          	0x4097f03
    542a:	0100                	addi	s0,sp,128
    542c:	0505                	addi	a0,a0,1
    542e:	0306                	slli	t1,t1,0x1
    5430:	0004093f 060c0501 	0x60c05010004093f
    5438:	00090003          	lb	zero,0(s2)
    543c:	0100                	addi	s0,sp,128
    543e:	0505                	addi	a0,a0,1
    5440:	0306                	slli	t1,t1,0x1
    5442:	0901                	addi	s2,s2,0
    5444:	0004                	0x4
    5446:	0501                	addi	a0,a0,0
    5448:	0601                	addi	a2,a2,0
    544a:	00090103          	lb	sp,0(s2)
    544e:	0100                	addi	s0,sp,128
    5450:	0505                	addi	a0,a0,1
    5452:	0306                	slli	t1,t1,0x1
    5454:	7f80                	flw	fs0,56(a5)
    5456:	0809                	addi	a6,a6,2
    5458:	0100                	addi	s0,sp,128
    545a:	1505                	addi	a0,a0,-31
    545c:	00093503          	0x93503
    5460:	0100                	addi	s0,sp,128
    5462:	00090103          	lb	sp,0(s2)
    5466:	0100                	addi	s0,sp,128
    5468:	2e05                	jal	5798 <_dtoa_r+0xd8>
    546a:	0306                	slli	t1,t1,0x1
    546c:	0900                	addi	s0,sp,144
    546e:	0000                	unimp
    5470:	0501                	addi	a0,a0,0
    5472:	030c                	addi	a1,sp,384
    5474:	095e                	slli	s2,s2,0x17
    5476:	0004                	0x4
    5478:	0501                	addi	a0,a0,0
    547a:	0305                	addi	t1,t1,1
    547c:	0900                	addi	s0,sp,144
    547e:	0004                	0x4
    5480:	0501                	addi	a0,a0,0
    5482:	0609                	addi	a2,a2,2
    5484:	04090203          	lb	tp,64(s2)
    5488:	0100                	addi	s0,sp,128
    548a:	00090103          	lb	sp,0(s2)
    548e:	0100                	addi	s0,sp,128
    5490:	0c05                	addi	s8,s8,1
    5492:	0306                	slli	t1,t1,0x1
    5494:	0900                	addi	s0,sp,144
    5496:	0000                	unimp
    5498:	0501                	addi	a0,a0,0
    549a:	0305                	addi	t1,t1,1
    549c:	097d                	addi	s2,s2,31
    549e:	000c                	0xc
    54a0:	0501                	addi	a0,a0,0
    54a2:	0615                	addi	a2,a2,5
    54a4:	0c093e03          	0xc093e03
    54a8:	0100                	addi	s0,sp,128
    54aa:	00090103          	lb	sp,0(s2)
    54ae:	0100                	addi	s0,sp,128
    54b0:	3105                	jal	50d0 <_puts_r+0x58>
    54b2:	0306                	slli	t1,t1,0x1
    54b4:	0900                	addi	s0,sp,144
    54b6:	0000                	unimp
    54b8:	0501                	addi	a0,a0,0
    54ba:	030c                	addi	a1,sp,384
    54bc:	0941                	addi	s2,s2,16
    54be:	000c                	0xc
    54c0:	0501                	addi	a0,a0,0
    54c2:	0305                	addi	t1,t1,1
    54c4:	0900                	addi	s0,sp,144
    54c6:	0004                	0x4
    54c8:	0501                	addi	a0,a0,0
    54ca:	0609                	addi	a2,a2,2
    54cc:	04090203          	lb	tp,64(s2)
    54d0:	0100                	addi	s0,sp,128
    54d2:	00090103          	lb	sp,0(s2)
    54d6:	0100                	addi	s0,sp,128
    54d8:	0c05                	addi	s8,s8,1
    54da:	0306                	slli	t1,t1,0x1
    54dc:	0900                	addi	s0,sp,144
    54de:	0000                	unimp
    54e0:	0501                	addi	a0,a0,0
    54e2:	0611                	addi	a2,a2,4
    54e4:	0900c503          	lbu	a0,144(ra)
    54e8:	000c                	0xc
    54ea:	0501                	addi	a0,a0,0
    54ec:	0614                	addi	a3,sp,768
    54ee:	04090003          	lb	zero,64(s2)
    54f2:	0100                	addi	s0,sp,128
    54f4:	2e05                	jal	5824 <_dtoa_r+0x164>
    54f6:	0c090303          	lb	t1,192(s2)
    54fa:	0100                	addi	s0,sp,128
    54fc:	1405                	addi	s0,s0,-31
    54fe:	04097d03          	0x4097d03
    5502:	0100                	addi	s0,sp,128
    5504:	0505                	addi	a0,a0,1
    5506:	0306                	slli	t1,t1,0x1
    5508:	7fa4                	flw	fs1,120(a5)
    550a:	0409                	addi	s0,s0,2
    550c:	0100                	addi	s0,sp,128
    550e:	1505                	addi	a0,a0,-31
    5510:	0900ef03          	0x900ef03
    5514:	0000                	unimp
    5516:	0301                	addi	t1,t1,0
    5518:	0901                	addi	s2,s2,0
    551a:	0000                	unimp
    551c:	0501                	addi	a0,a0,0
    551e:	7f03061b          	0x7f03061b
    5522:	0009                	c.nop	2
    5524:	0100                	addi	s0,sp,128
    5526:	0505                	addi	a0,a0,1
    5528:	0306                	slli	t1,t1,0x1
    552a:	0004090f          	0x4090f
    552e:	0501                	addi	a0,a0,0
    5530:	060c                	addi	a1,sp,768
    5532:	00090003          	lb	zero,0(s2)
    5536:	0100                	addi	s0,sp,128
    5538:	0505                	addi	a0,a0,1
    553a:	0306                	slli	t1,t1,0x1
    553c:	0901                	addi	s2,s2,0
    553e:	0004                	0x4
    5540:	0501                	addi	a0,a0,0
    5542:	0601                	addi	a2,a2,0
    5544:	00090103          	lb	sp,0(s2)
    5548:	0100                	addi	s0,sp,128
    554a:	1505                	addi	a0,a0,-31
    554c:	0306                	slli	t1,t1,0x1
    554e:	095e                	slli	s2,s2,0x17
    5550:	0008                	0x8
    5552:	0301                	addi	t1,t1,0
    5554:	0901                	addi	s2,s2,0
    5556:	0000                	unimp
    5558:	0501                	addi	a0,a0,0
    555a:	060c                	addi	a1,sp,768
    555c:	097fb503          	0x97fb503
    5560:	0000                	unimp
    5562:	0501                	addi	a0,a0,0
    5564:	0305                	addi	t1,t1,1
    5566:	0900                	addi	s0,sp,144
    5568:	0004                	0x4
    556a:	0501                	addi	a0,a0,0
    556c:	0609                	addi	a2,a2,2
    556e:	04090203          	lb	tp,64(s2)
    5572:	0100                	addi	s0,sp,128
    5574:	00090103          	lb	sp,0(s2)
    5578:	0100                	addi	s0,sp,128
    557a:	0c05                	addi	s8,s8,1
    557c:	0306                	slli	t1,t1,0x1
    557e:	0900                	addi	s0,sp,144
    5580:	0004                	0x4
    5582:	0501                	addi	a0,a0,0
    5584:	0611                	addi	a2,a2,4
    5586:	0900d103          	lhu	sp,144(ra)
    558a:	0004                	0x4
    558c:	0501                	addi	a0,a0,0
    558e:	0305                	addi	t1,t1,1
    5590:	7f96                	flw	ft11,100(sp)
    5592:	0009                	c.nop	2
    5594:	0100                	addi	s0,sp,128
    5596:	00090103          	lb	sp,0(s2)
    559a:	0100                	addi	s0,sp,128
    559c:	1a05                	addi	s4,s4,-31
    559e:	0306                	slli	t1,t1,0x1
    55a0:	0900                	addi	s0,sp,144
    55a2:	0004                	0x4
    55a4:	0501                	addi	a0,a0,0
    55a6:	030c                	addi	a1,sp,384
    55a8:	0900                	addi	s0,sp,144
    55aa:	0004                	0x4
    55ac:	0501                	addi	a0,a0,0
    55ae:	0334                	addi	a3,sp,392
    55b0:	00ec                	addi	a1,sp,76
    55b2:	0c09                	addi	s8,s8,2
    55b4:	0100                	addi	s0,sp,128
    55b6:	0c05                	addi	s8,s8,1
    55b8:	097f9403          	lh	s0,151(t6)
    55bc:	0004                	0x4
    55be:	0501                	addi	a0,a0,0
    55c0:	0605                	addi	a2,a2,1
    55c2:	04090103          	lb	sp,64(s2)
    55c6:	0100                	addi	s0,sp,128
    55c8:	1505                	addi	a0,a0,-31
    55ca:	0900ea03          	0x900ea03
    55ce:	0000                	unimp
    55d0:	0301                	addi	t1,t1,0
    55d2:	0901                	addi	s2,s2,0
    55d4:	0000                	unimp
    55d6:	0501                	addi	a0,a0,0
    55d8:	060c                	addi	a1,sp,768
    55da:	097fa903          	lw	s2,151(t6)
    55de:	0000                	unimp
    55e0:	0501                	addi	a0,a0,0
    55e2:	0305                	addi	t1,t1,1
    55e4:	0900                	addi	s0,sp,144
    55e6:	0004                	0x4
    55e8:	0501                	addi	a0,a0,0
    55ea:	0609                	addi	a2,a2,2
    55ec:	04090203          	lb	tp,64(s2)
    55f0:	0100                	addi	s0,sp,128
    55f2:	00090103          	lb	sp,0(s2)
    55f6:	0100                	addi	s0,sp,128
    55f8:	0c05                	addi	s8,s8,1
    55fa:	0306                	slli	t1,t1,0x1
    55fc:	0900                	addi	s0,sp,144
    55fe:	0004                	0x4
    5600:	0301                	addi	t1,t1,0
    5602:	0968                	addi	a0,sp,156
    5604:	0004                	0x4
    5606:	0301                	addi	t1,t1,0
    5608:	0918                	addi	a4,sp,144
    560a:	0004                	0x4
    560c:	0501                	addi	a0,a0,0
    560e:	0611                	addi	a2,a2,4
    5610:	0900dd03          	lhu	s10,144(ra)
    5614:	0004                	0x4
    5616:	0501                	addi	a0,a0,0
    5618:	0305                	addi	t1,t1,1
    561a:	7f8a                	flw	ft11,160(sp)
    561c:	0009                	c.nop	2
    561e:	0100                	addi	s0,sp,128
    5620:	00090103          	lb	sp,0(s2)
    5624:	0100                	addi	s0,sp,128
    5626:	0905                	addi	s2,s2,1
    5628:	00091703          	lh	a4,0(s2)
    562c:	0100                	addi	s0,sp,128
    562e:	1a05                	addi	s4,s4,-31
    5630:	0306                	slli	t1,t1,0x1
    5632:	0969                	addi	s2,s2,26
    5634:	0000                	unimp
    5636:	0501                	addi	a0,a0,0
    5638:	030c                	addi	a1,sp,384
    563a:	0900                	addi	s0,sp,144
    563c:	0004                	0x4
    563e:	0501                	addi	a0,a0,0
    5640:	0605                	addi	a2,a2,1
    5642:	08090103          	lb	sp,128(s2)
    5646:	0100                	addi	s0,sp,128
    5648:	1505                	addi	a0,a0,-31
    564a:	0900f603          	0x900f603
    564e:	0000                	unimp
    5650:	0301                	addi	t1,t1,0
    5652:	0901                	addi	s2,s2,0
    5654:	0000                	unimp
    5656:	0501                	addi	a0,a0,0
    5658:	00030633          	add	a2,t1,zero
    565c:	0009                	c.nop	2
    565e:	0100                	addi	s0,sp,128
    5660:	1b05                	addi	s6,s6,-31
    5662:	08097f03          	0x8097f03
    5666:	0100                	addi	s0,sp,128
    5668:	3305                	jal	5388 <__swsetup_r+0x20>
    566a:	04090103          	lb	sp,64(s2)
    566e:	0100                	addi	s0,sp,128
    5670:	0c05                	addi	s8,s8,1
    5672:	097f9d03          	lh	s10,151(t6)
    5676:	000c                	0xc
    5678:	0501                	addi	a0,a0,0
    567a:	0609                	addi	a2,a2,2
    567c:	04090303          	lb	t1,64(s2)
    5680:	0100                	addi	s0,sp,128
    5682:	0505                	addi	a0,a0,1
    5684:	0306                	slli	t1,t1,0x1
    5686:	097d                	addi	s2,s2,31
    5688:	0008                	0x8
    568a:	0501                	addi	a0,a0,0
    568c:	030c                	addi	a1,sp,384
    568e:	00040903          	lb	s2,0(s0)
    5692:	0301                	addi	t1,t1,0
    5694:	097d                	addi	s2,s2,31
    5696:	000c                	0xc
    5698:	0501                	addi	a0,a0,0
    569a:	0609                	addi	a2,a2,2
    569c:	04090303          	lb	t1,64(s2)
    56a0:	0100                	addi	s0,sp,128
    56a2:	0505                	addi	a0,a0,1
    56a4:	0306                	slli	t1,t1,0x1
    56a6:	097d                	addi	s2,s2,31
    56a8:	0008                	0x8
    56aa:	0501                	addi	a0,a0,0
    56ac:	030c                	addi	a1,sp,384
    56ae:	00040903          	lb	s2,0(s0)
    56b2:	0501                	addi	a0,a0,0
    56b4:	0611                	addi	a2,a2,4
    56b6:	0c091903          	lh	s2,192(s2)
    56ba:	0100                	addi	s0,sp,128
    56bc:	2d05                	jal	5cec <_dtoa_r+0x62c>
    56be:	0306                	slli	t1,t1,0x1
    56c0:	0900                	addi	s0,sp,144
    56c2:	0000                	unimp
    56c4:	0501                	addi	a0,a0,0
    56c6:	0611                	addi	a2,a2,4
    56c8:	04090103          	lb	sp,64(s2)
    56cc:	0100                	addi	s0,sp,128
    56ce:	0c05                	addi	s8,s8,1
    56d0:	0306                	slli	t1,t1,0x1
    56d2:	00000963          	beqz	zero,56e4 <_dtoa_r+0x24>
    56d6:	0501                	addi	a0,a0,0
    56d8:	0305                	addi	t1,t1,1
    56da:	0900                	addi	s0,sp,144
    56dc:	0004                	0x4
    56de:	0501                	addi	a0,a0,0
    56e0:	0609                	addi	a2,a2,2
    56e2:	04090203          	lb	tp,64(s2)
    56e6:	0100                	addi	s0,sp,128
    56e8:	00090103          	lb	sp,0(s2)
    56ec:	0100                	addi	s0,sp,128
    56ee:	0c05                	addi	s8,s8,1
    56f0:	0306                	slli	t1,t1,0x1
    56f2:	0900                	addi	s0,sp,144
    56f4:	0004                	0x4
    56f6:	0501                	addi	a0,a0,0
    56f8:	0615                	addi	a2,a2,5
    56fa:	0c092303          	lw	t1,192(s2)
    56fe:	0100                	addi	s0,sp,128
    5700:	00090103          	lb	sp,0(s2)
    5704:	0100                	addi	s0,sp,128
    5706:	2e05                	jal	5a36 <_dtoa_r+0x376>
    5708:	0306                	slli	t1,t1,0x1
    570a:	0900                	addi	s0,sp,144
    570c:	0000                	unimp
    570e:	0501                	addi	a0,a0,0
    5710:	030c                	addi	a1,sp,384
    5712:	0959                	addi	s2,s2,22
    5714:	0004                	0x4
    5716:	0501                	addi	a0,a0,0
    5718:	0305                	addi	t1,t1,1
    571a:	0900                	addi	s0,sp,144
    571c:	0004                	0x4
    571e:	0501                	addi	a0,a0,0
    5720:	0609                	addi	a2,a2,2
    5722:	04090203          	lb	tp,64(s2)
    5726:	0100                	addi	s0,sp,128
    5728:	00090103          	lb	sp,0(s2)
    572c:	0100                	addi	s0,sp,128
    572e:	0c05                	addi	s8,s8,1
    5730:	0306                	slli	t1,t1,0x1
    5732:	0900                	addi	s0,sp,144
    5734:	0000                	unimp
    5736:	0501                	addi	a0,a0,0
    5738:	0305                	addi	t1,t1,1
    573a:	097d                	addi	s2,s2,31
    573c:	000c                	0xc
    573e:	0501                	addi	a0,a0,0
    5740:	0932031b          	0x932031b
    5744:	0004                	0x4
    5746:	0501                	addi	a0,a0,0
    5748:	030c                	addi	a1,sp,384
    574a:	0951                	addi	s2,s2,20
    574c:	0008                	0x8
    574e:	0501                	addi	a0,a0,0
    5750:	060d                	addi	a2,a2,3
    5752:	04090203          	lb	tp,64(s2)
    5756:	0100                	addi	s0,sp,128
    5758:	00090103          	lb	sp,0(s2)
    575c:	0100                	addi	s0,sp,128
    575e:	0505                	addi	a0,a0,1
    5760:	0306                	slli	t1,t1,0x1
    5762:	097a                	slli	s2,s2,0x1e
    5764:	0004                	0x4
    5766:	0501                	addi	a0,a0,0
    5768:	00ca031b          	0xca031b
    576c:	0c09                	addi	s8,s8,2
    576e:	0100                	addi	s0,sp,128
    5770:	0505                	addi	a0,a0,1
    5772:	097fb603          	0x97fb603
    5776:	0008                	0x8
    5778:	0501                	addi	a0,a0,0
    577a:	093e031b          	0x93e031b
    577e:	0004                	0x4
    5780:	0501                	addi	a0,a0,0
    5782:	0305                	addi	t1,t1,1
    5784:	0942                	slli	s2,s2,0x10
    5786:	0008                	0x8
    5788:	0501                	addi	a0,a0,0
    578a:	0315                	addi	t1,t1,5
    578c:	097f                	0x97f
    578e:	0004                	0x4
    5790:	0501                	addi	a0,a0,0
    5792:	0912031b          	0x912031b
    5796:	0008                	0x8
    5798:	0501                	addi	a0,a0,0
    579a:	030c                	addi	a1,sp,384
    579c:	0972                	slli	s2,s2,0x1c
    579e:	0008                	0x8
    57a0:	0501                	addi	a0,a0,0
    57a2:	0305                	addi	t1,t1,1
    57a4:	097d                	addi	s2,s2,31
    57a6:	000c                	0xc
    57a8:	0501                	addi	a0,a0,0
    57aa:	0932031b          	0x932031b
    57ae:	0004                	0x4
    57b0:	0501                	addi	a0,a0,0
    57b2:	030c                	addi	a1,sp,384
    57b4:	0951                	addi	s2,s2,20
    57b6:	0008                	0x8
    57b8:	0901                	addi	s2,s2,0
    57ba:	000c                	0xc
    57bc:	0100                	addi	s0,sp,128
    57be:	0501                	addi	a0,a0,0
    57c0:	0001                	nop
    57c2:	0205                	addi	tp,tp,1
    57c4:	22a0                	fld	fs0,64(a3)
    57c6:	0000                	unimp
    57c8:	05013303          	0x5013303
    57cc:	0305                	addi	t1,t1,1
    57ce:	0901                	addi	s2,s2,0
    57d0:	0000                	unimp
    57d2:	0301                	addi	t1,t1,0
    57d4:	0901                	addi	s2,s2,0
    57d6:	0000                	unimp
    57d8:	0301                	addi	t1,t1,0
    57da:	0901                	addi	s2,s2,0
    57dc:	0000                	unimp
    57de:	0501                	addi	a0,a0,0
    57e0:	0601                	addi	a2,a2,0
    57e2:	00097d03          	0x97d03
    57e6:	0100                	addi	s0,sp,128
    57e8:	28090003          	lb	zero,640(s2)
    57ec:	0100                	addi	s0,sp,128
    57ee:	0c05                	addi	s8,s8,1
    57f0:	04090e03          	lb	t3,64(s2)
    57f4:	0100                	addi	s0,sp,128
    57f6:	0c097503          	0xc097503
    57fa:	0100                	addi	s0,sp,128
    57fc:	0505                	addi	a0,a0,1
    57fe:	0306                	slli	t1,t1,0x1
    5800:	0901                	addi	s2,s2,0
    5802:	0004                	0x4
    5804:	0301                	addi	t1,t1,0
    5806:	0905                	addi	s2,s2,1
    5808:	0000                	unimp
    580a:	0501                	addi	a0,a0,0
    580c:	0601                	addi	a2,a2,0
    580e:	3c097703          	0x3c097703
    5812:	0100                	addi	s0,sp,128
    5814:	0b05                	addi	s6,s6,1
    5816:	14090e03          	lb	t3,320(s2)
    581a:	0100                	addi	s0,sp,128
    581c:	0905                	addi	s2,s2,1
    581e:	0306                	slli	t1,t1,0x1
    5820:	0902                	c.slli64	s2
    5822:	0008                	0x8
    5824:	0501                	addi	a0,a0,0
    5826:	0622                	slli	a2,a2,0x8
    5828:	00090003          	lb	zero,0(s2)
    582c:	0100                	addi	s0,sp,128
    582e:	0905                	addi	s2,s2,1
    5830:	0306                	slli	t1,t1,0x1
    5832:	0901                	addi	s2,s2,0
    5834:	0010                	0x10
    5836:	0501                	addi	a0,a0,0
    5838:	061d                	addi	a2,a2,7
    583a:	00090003          	lb	zero,0(s2)
    583e:	0100                	addi	s0,sp,128
    5840:	0b05                	addi	s6,s6,1
    5842:	0c097d03          	0xc097d03
    5846:	0100                	addi	s0,sp,128
    5848:	1d05                	addi	s10,s10,-31
    584a:	04090303          	lb	t1,64(s2)
    584e:	0100                	addi	s0,sp,128
    5850:	0b05                	addi	s6,s6,1
    5852:	04097d03          	0x4097d03
    5856:	0100                	addi	s0,sp,128
    5858:	1d05                	addi	s10,s10,-31
    585a:	04090303          	lb	t1,64(s2)
    585e:	0100                	addi	s0,sp,128
    5860:	0b05                	addi	s6,s6,1
    5862:	08097d03          	0x8097d03
    5866:	0100                	addi	s0,sp,128
    5868:	0705                	addi	a4,a4,1
    586a:	04090b03          	lb	s6,64(s2)
    586e:	0100                	addi	s0,sp,128
    5870:	1a05                	addi	s4,s4,-31
    5872:	04090103          	lb	sp,64(s2)
    5876:	0100                	addi	s0,sp,128
    5878:	0505                	addi	a0,a0,1
    587a:	0306                	slli	t1,t1,0x1
    587c:	097f                	0x97f
    587e:	0008                	0x8
    5880:	0301                	addi	t1,t1,0
    5882:	0901                	addi	s2,s2,0
    5884:	0000                	unimp
    5886:	0501                	addi	a0,a0,0
    5888:	0003060b          	0x3060b
    588c:	0009                	c.nop	2
    588e:	0100                	addi	s0,sp,128
    5890:	0c05                	addi	s8,s8,1
    5892:	04090203          	lb	tp,64(s2)
    5896:	0100                	addi	s0,sp,128
    5898:	0905                	addi	s2,s2,1
    589a:	0306                	slli	t1,t1,0x1
    589c:	0900                	addi	s0,sp,144
    589e:	0004                	0x4
    58a0:	0501                	addi	a0,a0,0
    58a2:	030d                	addi	t1,t1,3
    58a4:	0901                	addi	s2,s2,0
    58a6:	0000                	unimp
    58a8:	0501                	addi	a0,a0,0
    58aa:	0601                	addi	a2,a2,0
    58ac:	00096303          	0x96303
    58b0:	0100                	addi	s0,sp,128
    58b2:	1005                	c.nop	-31
    58b4:	04091d03          	lh	s10,64(s2)
    58b8:	0100                	addi	s0,sp,128
    58ba:	0c05                	addi	s8,s8,1
    58bc:	04097f03          	0x4097f03
    58c0:	0100                	addi	s0,sp,128
    58c2:	1005                	c.nop	-31
    58c4:	04090103          	lb	sp,64(s2)
    58c8:	0100                	addi	s0,sp,128
    58ca:	0905                	addi	s2,s2,1
    58cc:	0306                	slli	t1,t1,0x1
    58ce:	0901                	addi	s2,s2,0
    58d0:	0004                	0x4
    58d2:	0501                	addi	a0,a0,0
    58d4:	0003060b          	0x3060b
    58d8:	0009                	c.nop	2
    58da:	0100                	addi	s0,sp,128
    58dc:	0c097c03          	0xc097c03
    58e0:	0100                	addi	s0,sp,128
    58e2:	0905                	addi	s2,s2,1
    58e4:	0306                	slli	t1,t1,0x1
    58e6:	0902                	c.slli64	s2
    58e8:	0008                	0x8
    58ea:	0501                	addi	a0,a0,0
    58ec:	030d                	addi	t1,t1,3
    58ee:	0901                	addi	s2,s2,0
    58f0:	0000                	unimp
    58f2:	0501                	addi	a0,a0,0
    58f4:	0610                	addi	a2,sp,768
    58f6:	00090003          	lb	zero,0(s2)
    58fa:	0100                	addi	s0,sp,128
    58fc:	0c05                	addi	s8,s8,1
    58fe:	04097f03          	0x4097f03
    5902:	0100                	addi	s0,sp,128
    5904:	0905                	addi	s2,s2,1
    5906:	0306                	slli	t1,t1,0x1
    5908:	0902                	c.slli64	s2
    590a:	0004                	0x4
    590c:	0501                	addi	a0,a0,0
    590e:	0003060b          	0x3060b
    5912:	0009                	c.nop	2
    5914:	0100                	addi	s0,sp,128
    5916:	08097c03          	0x8097c03
    591a:	0100                	addi	s0,sp,128
    591c:	0505                	addi	a0,a0,1
    591e:	0306                	slli	t1,t1,0x1
    5920:	0906                	slli	s2,s2,0x1
    5922:	0004                	0x4
    5924:	0501                	addi	a0,a0,0
    5926:	0203060b          	0x203060b
    592a:	0009                	c.nop	2
    592c:	0100                	addi	s0,sp,128
    592e:	0705                	addi	a4,a4,1
    5930:	04097e03          	0x4097e03
    5934:	0100                	addi	s0,sp,128
    5936:	0505                	addi	a0,a0,1
    5938:	0306                	slli	t1,t1,0x1
    593a:	0902                	c.slli64	s2
    593c:	0004                	0x4
    593e:	0501                	addi	a0,a0,0
    5940:	0003060b          	0x3060b
    5944:	0409                	addi	s0,s0,2
    5946:	0100                	addi	s0,sp,128
    5948:	0905                	addi	s2,s2,1
    594a:	0306                	slli	t1,t1,0x1
    594c:	0902                	c.slli64	s2
    594e:	0004                	0x4
    5950:	0501                	addi	a0,a0,0
    5952:	0622                	slli	a2,a2,0x8
    5954:	00090003          	lb	zero,0(s2)
    5958:	0100                	addi	s0,sp,128
    595a:	0905                	addi	s2,s2,1
    595c:	0306                	slli	t1,t1,0x1
    595e:	0901                	addi	s2,s2,0
    5960:	0010                	0x10
    5962:	0501                	addi	a0,a0,0
    5964:	061d                	addi	a2,a2,7
    5966:	00090003          	lb	zero,0(s2)
    596a:	0100                	addi	s0,sp,128
    596c:	0b05                	addi	s6,s6,1
    596e:	0c097d03          	0xc097d03
    5972:	0100                	addi	s0,sp,128
    5974:	1d05                	addi	s10,s10,-31
    5976:	04090303          	lb	t1,64(s2)
    597a:	0100                	addi	s0,sp,128
    597c:	0b05                	addi	s6,s6,1
    597e:	04097d03          	0x4097d03
    5982:	0100                	addi	s0,sp,128
    5984:	1d05                	addi	s10,s10,-31
    5986:	04090303          	lb	t1,64(s2)
    598a:	0100                	addi	s0,sp,128
    598c:	0b05                	addi	s6,s6,1
    598e:	08097d03          	0x8097d03
    5992:	0100                	addi	s0,sp,128
    5994:	0505                	addi	a0,a0,1
    5996:	0306                	slli	t1,t1,0x1
    5998:	0004090b          	0x4090b
    599c:	0501                	addi	a0,a0,0
    599e:	00030607          	0x30607
    59a2:	0009                	c.nop	2
    59a4:	0100                	addi	s0,sp,128
    59a6:	0505                	addi	a0,a0,1
    59a8:	0306                	slli	t1,t1,0x1
    59aa:	0901                	addi	s2,s2,0
    59ac:	0004                	0x4
    59ae:	0501                	addi	a0,a0,0
    59b0:	0003060b          	0x3060b
    59b4:	0009                	c.nop	2
    59b6:	0100                	addi	s0,sp,128
    59b8:	0c05                	addi	s8,s8,1
    59ba:	04090203          	lb	tp,64(s2)
    59be:	0100                	addi	s0,sp,128
    59c0:	0905                	addi	s2,s2,1
    59c2:	0306                	slli	t1,t1,0x1
    59c4:	0900                	addi	s0,sp,144
    59c6:	0004                	0x4
    59c8:	0501                	addi	a0,a0,0
    59ca:	030d                	addi	t1,t1,3
    59cc:	0901                	addi	s2,s2,0
    59ce:	0000                	unimp
    59d0:	0601                	addi	a2,a2,0
    59d2:	00097f03          	0x97f03
    59d6:	0100                	addi	s0,sp,128
    59d8:	1005                	c.nop	-31
    59da:	04090103          	lb	sp,64(s2)
    59de:	0100                	addi	s0,sp,128
    59e0:	0c05                	addi	s8,s8,1
    59e2:	04097f03          	0x4097f03
    59e6:	0100                	addi	s0,sp,128
    59e8:	1005                	c.nop	-31
    59ea:	04090103          	lb	sp,64(s2)
    59ee:	0100                	addi	s0,sp,128
    59f0:	0905                	addi	s2,s2,1
    59f2:	0306                	slli	t1,t1,0x1
    59f4:	0901                	addi	s2,s2,0
    59f6:	0004                	0x4
    59f8:	0501                	addi	a0,a0,0
    59fa:	0003060b          	0x3060b
    59fe:	0009                	c.nop	2
    5a00:	0100                	addi	s0,sp,128
    5a02:	0c097c03          	0xc097c03
    5a06:	0100                	addi	s0,sp,128
    5a08:	0905                	addi	s2,s2,1
    5a0a:	0200                	addi	s0,sp,256
    5a0c:	0304                	addi	s1,sp,384
    5a0e:	0306                	slli	t1,t1,0x1
    5a10:	0909                	addi	s2,s2,2
    5a12:	000c                	0xc
    5a14:	0501                	addi	a0,a0,0
    5a16:	0402000f          	0x402000f
    5a1a:	00030603          	lb	a2,0(t1)
    5a1e:	0009                	c.nop	2
    5a20:	0100                	addi	s0,sp,128
    5a22:	0905                	addi	s2,s2,1
    5a24:	0200                	addi	s0,sp,256
    5a26:	0304                	addi	s1,sp,384
    5a28:	0306                	slli	t1,t1,0x1
    5a2a:	0901                	addi	s2,s2,0
    5a2c:	0014                	0x14
    5a2e:	0501                	addi	a0,a0,0
    5a30:	0402000f          	0x402000f
    5a34:	00030603          	lb	a2,0(t1)
    5a38:	0009                	c.nop	2
    5a3a:	0100                	addi	s0,sp,128
    5a3c:	0505                	addi	a0,a0,1
    5a3e:	0200                	addi	s0,sp,256
    5a40:	0304                	addi	s1,sp,384
    5a42:	18097d03          	0x18097d03
    5a46:	0100                	addi	s0,sp,128
    5a48:	0105                	addi	sp,sp,1
    5a4a:	04090603          	lb	a2,64(s2)
    5a4e:	0100                	addi	s0,sp,128
    5a50:	0905                	addi	s2,s2,1
    5a52:	0306                	slli	t1,t1,0x1
    5a54:	002c0977          	0x2c0977
    5a58:	0501                	addi	a0,a0,0
    5a5a:	0003060b          	0x3060b
    5a5e:	0009                	c.nop	2
    5a60:	0100                	addi	s0,sp,128
    5a62:	08097c03          	0x8097c03
    5a66:	0100                	addi	s0,sp,128
    5a68:	0505                	addi	a0,a0,1
    5a6a:	0306                	slli	t1,t1,0x1
    5a6c:	0008096b          	0x8096b
    5a70:	0301                	addi	t1,t1,0
    5a72:	0901                	addi	s2,s2,0
    5a74:	0000                	unimp
    5a76:	0501                	addi	a0,a0,0
    5a78:	061a                	slli	a2,a2,0x6
    5a7a:	00090003          	lb	zero,0(s2)
    5a7e:	0100                	addi	s0,sp,128
    5a80:	0b05                	addi	s6,s6,1
    5a82:	04090003          	lb	zero,64(s2)
    5a86:	0100                	addi	s0,sp,128
    5a88:	0505                	addi	a0,a0,1
    5a8a:	0306                	slli	t1,t1,0x1
    5a8c:	0906                	slli	s2,s2,0x1
    5a8e:	0008                	0x8
    5a90:	0301                	addi	t1,t1,0
    5a92:	0902                	c.slli64	s2
    5a94:	0000                	unimp
    5a96:	0501                	addi	a0,a0,0
    5a98:	0003060b          	0x3060b
    5a9c:	0009                	c.nop	2
    5a9e:	0100                	addi	s0,sp,128
    5aa0:	0809                	addi	a6,a6,2
    5aa2:	0000                	unimp
    5aa4:	0101                	addi	sp,sp,0
    5aa6:	20ed                	jal	5b90 <_dtoa_r+0x4d0>
    5aa8:	0000                	unimp
    5aaa:	018a0003          	lb	zero,24(s4)
    5aae:	0000                	unimp
    5ab0:	0101                	addi	sp,sp,0
    5ab2:	000d0efb          	0xd0efb
    5ab6:	0101                	addi	sp,sp,0
    5ab8:	0101                	addi	sp,sp,0
    5aba:	0000                	unimp
    5abc:	0100                	addi	s0,sp,128
    5abe:	0000                	unimp
    5ac0:	2e01                	jal	5dd0 <_dtoa_r+0x710>
    5ac2:	6372732f          	0x6372732f
    5ac6:	726f632f          	0x726f632f
    5aca:	6d65                	lui	s10,0x19
    5acc:	7261                	lui	tp,0xffff8
    5ace:	3a65006b          	0x3a65006b
    5ad2:	705c                	flw	fa5,36(s0)
    5ad4:	6f72                	flw	ft10,28(sp)
    5ad6:	6d617267          	0x6d617267
    5ada:	6620                	flw	fs0,72(a2)
    5adc:	6c69                	lui	s8,0x1a
    5ade:	7365                	lui	t1,0xffff9
    5ae0:	2820                	fld	fs0,80(s0)
    5ae2:	3878                	fld	fa4,240(s0)
    5ae4:	2936                	fld	fs2,328(sp)
    5ae6:	785c                	flw	fa5,52(s0)
    5ae8:	6170                	flw	fa2,68(a0)
    5aea:	722d6b63          	bltu	s10,sp,6220 <_dtoa_r+0xb60>
    5aee:	7369                	lui	t1,0xffffa
    5af0:	6e2d7663          	bgeu	s10,sp,61dc <_dtoa_r+0xb1c>
    5af4:	2d656e6f          	jal	t3,5bdca <_data_lma+0x517b2>
    5af8:	6d65                	lui	s10,0x19
    5afa:	6562                	flw	fa0,24(sp)
    5afc:	2d64                	fld	fs1,216(a0)
    5afe:	2d636367          	0x2d636367
    5b02:	2e38                	fld	fa4,88(a2)
    5b04:	2d302e33          	0x2d302e33
    5b08:	2e32                	fld	ft8,264(sp)
    5b0a:	696c5c33          	0x696c5c33
    5b0e:	5c62                	lw	s8,56(sp)
    5b10:	5c636367          	0x5c636367
    5b14:	6972                	flw	fs2,28(sp)
    5b16:	2d766373          	csrrsi	t1,0x2d7,12
    5b1a:	6f6e                	flw	ft10,216(sp)
    5b1c:	656e                	flw	fa0,216(sp)
    5b1e:	652d                	lui	a0,0xb
    5b20:	626d                	lui	tp,0x1b
    5b22:	6465                	lui	s0,0x19
    5b24:	385c                	fld	fa5,176(s0)
    5b26:	332e                	fld	ft6,232(sp)
    5b28:	302e                	fld	ft0,232(sp)
    5b2a:	695c                	flw	fa5,20(a0)
    5b2c:	636e                	flw	ft6,216(sp)
    5b2e:	756c                	flw	fa1,108(a0)
    5b30:	6564                	flw	fs1,76(a0)
    5b32:	6500                	flw	fs0,8(a0)
    5b34:	5c3a                	lw	s8,172(sp)
    5b36:	7270                	flw	fa2,100(a2)
    5b38:	6172676f          	jal	a4,2c94e <_data_lma+0x22336>
    5b3c:	206d                	jal	5be6 <_dtoa_r+0x526>
    5b3e:	6966                	flw	fs2,88(sp)
    5b40:	656c                	flw	fa1,76(a0)
    5b42:	78282073          	csrs	0x782,a6
    5b46:	3638                	fld	fa4,104(a2)
    5b48:	5c29                	li	s8,-22
    5b4a:	7078                	flw	fa4,100(s0)
    5b4c:	6361                	lui	t1,0x18
    5b4e:	69722d6b          	0x69722d6b
    5b52:	2d766373          	csrrsi	t1,0x2d7,12
    5b56:	6f6e                	flw	ft10,216(sp)
    5b58:	656e                	flw	fa0,216(sp)
    5b5a:	652d                	lui	a0,0xb
    5b5c:	626d                	lui	tp,0x1b
    5b5e:	6465                	lui	s0,0x19
    5b60:	672d                	lui	a4,0xb
    5b62:	382d6363          	bltu	s10,sp,5ee8 <_dtoa_r+0x828>
    5b66:	332e                	fld	ft6,232(sp)
    5b68:	302e                	fld	ft0,232(sp)
    5b6a:	322d                	jal	5494 <__swsetup_r+0x12c>
    5b6c:	332e                	fld	ft6,232(sp)
    5b6e:	725c                	flw	fa5,36(a2)
    5b70:	7369                	lui	t1,0xffffa
    5b72:	6e2d7663          	bgeu	s10,sp,625e <_dtoa_r+0xb9e>
    5b76:	2d656e6f          	jal	t3,5be4c <_data_lma+0x51834>
    5b7a:	6d65                	lui	s10,0x19
    5b7c:	6562                	flw	fa0,24(sp)
    5b7e:	5c64                	lw	s1,124(s0)
    5b80:	6e69                	lui	t3,0x1a
    5b82:	64756c63          	bltu	a0,t2,61da <_dtoa_r+0xb1a>
    5b86:	5c65                	li	s8,-7
    5b88:	00737973          	csrrci	s2,0x7,6
    5b8c:	3a65                	jal	5544 <quorem+0x50>
    5b8e:	705c                	flw	fa5,36(s0)
    5b90:	6f72                	flw	ft10,28(sp)
    5b92:	6d617267          	0x6d617267
    5b96:	6620                	flw	fs0,72(a2)
    5b98:	6c69                	lui	s8,0x1a
    5b9a:	7365                	lui	t1,0xffff9
    5b9c:	2820                	fld	fs0,80(s0)
    5b9e:	3878                	fld	fa4,240(s0)
    5ba0:	2936                	fld	fs2,328(sp)
    5ba2:	785c                	flw	fa5,52(s0)
    5ba4:	6170                	flw	fa2,68(a0)
    5ba6:	722d6b63          	bltu	s10,sp,62dc <_dtoa_r+0xc1c>
    5baa:	7369                	lui	t1,0xffffa
    5bac:	6e2d7663          	bgeu	s10,sp,6298 <_dtoa_r+0xbd8>
    5bb0:	2d656e6f          	jal	t3,5be86 <_data_lma+0x5186e>
    5bb4:	6d65                	lui	s10,0x19
    5bb6:	6562                	flw	fa0,24(sp)
    5bb8:	2d64                	fld	fs1,216(a0)
    5bba:	2d636367          	0x2d636367
    5bbe:	2e38                	fld	fa4,88(a2)
    5bc0:	2d302e33          	0x2d302e33
    5bc4:	2e32                	fld	ft8,264(sp)
    5bc6:	69725c33          	0x69725c33
    5bca:	2d766373          	csrrsi	t1,0x2d7,12
    5bce:	6f6e                	flw	ft10,216(sp)
    5bd0:	656e                	flw	fa0,216(sp)
    5bd2:	652d                	lui	a0,0xb
    5bd4:	626d                	lui	tp,0x1b
    5bd6:	6465                	lui	s0,0x19
    5bd8:	695c                	flw	fa5,20(a0)
    5bda:	636e                	flw	ft6,216(sp)
    5bdc:	756c                	flw	fa1,108(a0)
    5bde:	6564                	flw	fs1,76(a0)
    5be0:	0000                	unimp
    5be2:	65726f63          	bltu	tp,s7,6240 <_dtoa_r+0xb80>
    5be6:	755f 6974 2e6c      	0x2e6c6974755f
    5bec:	00010063          	beqz	sp,5bec <_dtoa_r+0x52c>
    5bf0:	7300                	flw	fs0,32(a4)
    5bf2:	6474                	flw	fa3,76(s0)
    5bf4:	6564                	flw	fs1,76(a0)
    5bf6:	2e66                	fld	ft8,88(sp)
    5bf8:	0068                	addi	a0,sp,12
    5bfa:	0002                	c.slli64	zero
    5bfc:	5f00                	lw	s0,56(a4)
    5bfe:	7974                	flw	fa3,116(a0)
    5c00:	6570                	flw	fa2,76(a0)
    5c02:	00682e73          	csrrs	t3,0x6,a6
    5c06:	72000003          	lb	zero,1824(zero) # 720 <main+0x6a8>
    5c0a:	6565                	lui	a0,0x19
    5c0c:	746e                	flw	fs0,248(sp)
    5c0e:	682e                	flw	fa6,200(sp)
    5c10:	0300                	addi	s0,sp,384
    5c12:	0000                	unimp
    5c14:	6f6c                	flw	fa1,92(a4)
    5c16:	682e6b63          	bltu	t3,sp,62ac <_dtoa_r+0xbec>
    5c1a:	0300                	addi	s0,sp,384
    5c1c:	0000                	unimp
    5c1e:	6974                	flw	fa3,84(a0)
    5c20:	656d                	lui	a0,0x1b
    5c22:	682e                	flw	fa6,200(sp)
    5c24:	0400                	addi	s0,sp,512
    5c26:	0000                	unimp
    5c28:	65726f63          	bltu	tp,s7,6286 <_dtoa_r+0xbc6>
    5c2c:	705f 726f 6d74      	0x6d74726f705f
    5c32:	2e65                	jal	5fea <_dtoa_r+0x92a>
    5c34:	0068                	addi	a0,sp,12
    5c36:	0001                	nop
    5c38:	0000                	unimp
    5c3a:	0105                	addi	sp,sp,1
    5c3c:	0500                	addi	s0,sp,640
    5c3e:	ac02                	fsd	ft0,24(sp)
    5c40:	0024                	addi	s1,sp,8
    5c42:	0300                	addi	s0,sp,384
    5c44:	0505012b          	0x505012b
    5c48:	00090103          	lb	sp,0(s2)
    5c4c:	0100                	addi	s0,sp,128
    5c4e:	00090103          	lb	sp,0(s2)
    5c52:	0100                	addi	s0,sp,128
    5c54:	0d05                	addi	s10,s10,1
    5c56:	20090f03          	lb	t5,512(s2)
    5c5a:	0100                	addi	s0,sp,128
    5c5c:	1405                	addi	s0,s0,-31
    5c5e:	0306                	slli	t1,t1,0x1
    5c60:	0900                	addi	s0,sp,144
    5c62:	0000                	unimp
    5c64:	0501                	addi	a0,a0,0
    5c66:	060d                	addi	a2,a2,3
    5c68:	08090103          	lb	sp,128(s2)
    5c6c:	0100                	addi	s0,sp,128
    5c6e:	04097303          	0x4097303
    5c72:	0100                	addi	s0,sp,128
    5c74:	1405                	addi	s0,s0,-31
    5c76:	0306                	slli	t1,t1,0x1
    5c78:	0900                	addi	s0,sp,144
    5c7a:	0000                	unimp
    5c7c:	0501                	addi	a0,a0,0
    5c7e:	060d                	addi	a2,a2,3
    5c80:	08090103          	lb	sp,128(s2)
    5c84:	0100                	addi	s0,sp,128
    5c86:	04090203          	lb	tp,64(s2)
    5c8a:	0100                	addi	s0,sp,128
    5c8c:	1405                	addi	s0,s0,-31
    5c8e:	0306                	slli	t1,t1,0x1
    5c90:	0900                	addi	s0,sp,144
    5c92:	0000                	unimp
    5c94:	0501                	addi	a0,a0,0
    5c96:	060d                	addi	a2,a2,3
    5c98:	08090103          	lb	sp,128(s2)
    5c9c:	0100                	addi	s0,sp,128
    5c9e:	04090203          	lb	tp,64(s2)
    5ca2:	0100                	addi	s0,sp,128
    5ca4:	1405                	addi	s0,s0,-31
    5ca6:	0306                	slli	t1,t1,0x1
    5ca8:	0900                	addi	s0,sp,144
    5caa:	0000                	unimp
    5cac:	0501                	addi	a0,a0,0
    5cae:	060d                	addi	a2,a2,3
    5cb0:	08090103          	lb	sp,128(s2)
    5cb4:	0100                	addi	s0,sp,128
    5cb6:	04090203          	lb	tp,64(s2)
    5cba:	0100                	addi	s0,sp,128
    5cbc:	1405                	addi	s0,s0,-31
    5cbe:	0306                	slli	t1,t1,0x1
    5cc0:	0900                	addi	s0,sp,144
    5cc2:	0000                	unimp
    5cc4:	0501                	addi	a0,a0,0
    5cc6:	060d                	addi	a2,a2,3
    5cc8:	08090103          	lb	sp,128(s2)
    5ccc:	0100                	addi	s0,sp,128
    5cce:	1405                	addi	s0,s0,-31
    5cd0:	0306                	slli	t1,t1,0x1
    5cd2:	0905                	addi	s2,s2,1
    5cd4:	0004                	0x4
    5cd6:	0501                	addi	a0,a0,0
    5cd8:	0605                	addi	a2,a2,1
    5cda:	04090303          	lb	t1,64(s2)
    5cde:	0100                	addi	s0,sp,128
    5ce0:	0105                	addi	sp,sp,1
    5ce2:	0306                	slli	t1,t1,0x1
    5ce4:	0901                	addi	s2,s2,0
    5ce6:	0000                	unimp
    5ce8:	0901                	addi	s2,s2,0
    5cea:	0004                	0x4
    5cec:	0100                	addi	s0,sp,128
    5cee:	0501                	addi	a0,a0,0
    5cf0:	0001                	nop
    5cf2:	0205                	addi	tp,tp,1
    5cf4:	0000                	unimp
    5cf6:	0000                	unimp
    5cf8:	0101a503          	lw	a0,16(gp) # 10013b0 <__global_pointer$+0x10>
    5cfc:	0505                	addi	a0,a0,1
    5cfe:	00090103          	lb	sp,0(s2)
    5d02:	0100                	addi	s0,sp,128
    5d04:	00090203          	lb	tp,0(s2)
    5d08:	0100                	addi	s0,sp,128
    5d0a:	0905                	addi	s2,s2,1
    5d0c:	00090203          	lb	tp,0(s2)
    5d10:	0100                	addi	s0,sp,128
    5d12:	00090103          	lb	sp,0(s2)
    5d16:	0100                	addi	s0,sp,128
    5d18:	2205                	jal	5e38 <_dtoa_r+0x778>
    5d1a:	0306                	slli	t1,t1,0x1
    5d1c:	097f                	0x97f
    5d1e:	0000                	unimp
    5d20:	0501                	addi	a0,a0,0
    5d22:	030c                	addi	a1,sp,384
    5d24:	00000903          	lb	s2,0(zero) # 0 <_start>
    5d28:	0501                	addi	a0,a0,0
    5d2a:	030e                	slli	t1,t1,0x3
    5d2c:	097e                	slli	s2,s2,0x1f
    5d2e:	0000                	unimp
    5d30:	0501                	addi	a0,a0,0
    5d32:	0609                	addi	a2,a2,2
    5d34:	00090203          	lb	tp,0(s2)
    5d38:	0100                	addi	s0,sp,128
    5d3a:	0c05                	addi	s8,s8,1
    5d3c:	0306                	slli	t1,t1,0x1
    5d3e:	0900                	addi	s0,sp,144
    5d40:	0000                	unimp
    5d42:	0501                	addi	a0,a0,0
    5d44:	060d                	addi	a2,a2,3
    5d46:	00090203          	lb	tp,0(s2)
    5d4a:	0100                	addi	s0,sp,128
    5d4c:	00090103          	lb	sp,0(s2)
    5d50:	0100                	addi	s0,sp,128
    5d52:	0905                	addi	s2,s2,1
    5d54:	00090403          	lb	s0,0(s2)
    5d58:	0100                	addi	s0,sp,128
    5d5a:	00090103          	lb	sp,0(s2)
    5d5e:	0100                	addi	s0,sp,128
    5d60:	0d05                	addi	s10,s10,1
    5d62:	00090103          	lb	sp,0(s2)
    5d66:	0100                	addi	s0,sp,128
    5d68:	1105                	addi	sp,sp,-31
    5d6a:	0306                	slli	t1,t1,0x1
    5d6c:	0900                	addi	s0,sp,144
    5d6e:	0000                	unimp
    5d70:	0501                	addi	a0,a0,0
    5d72:	0609                	addi	a2,a2,2
    5d74:	00097403          	0x97403
    5d78:	0100                	addi	s0,sp,128
    5d7a:	00090103          	lb	sp,0(s2)
    5d7e:	0100                	addi	s0,sp,128
    5d80:	2205                	jal	5ea0 <_dtoa_r+0x7e0>
    5d82:	0306                	slli	t1,t1,0x1
    5d84:	097f                	0x97f
    5d86:	0000                	unimp
    5d88:	0501                	addi	a0,a0,0
    5d8a:	030c                	addi	a1,sp,384
    5d8c:	00000903          	lb	s2,0(zero) # 0 <_start>
    5d90:	0501                	addi	a0,a0,0
    5d92:	030e                	slli	t1,t1,0x3
    5d94:	097e                	slli	s2,s2,0x1f
    5d96:	0000                	unimp
    5d98:	0501                	addi	a0,a0,0
    5d9a:	0609                	addi	a2,a2,2
    5d9c:	00090203          	lb	tp,0(s2)
    5da0:	0100                	addi	s0,sp,128
    5da2:	0c05                	addi	s8,s8,1
    5da4:	0306                	slli	t1,t1,0x1
    5da6:	0900                	addi	s0,sp,144
    5da8:	0000                	unimp
    5daa:	0501                	addi	a0,a0,0
    5dac:	060d                	addi	a2,a2,3
    5dae:	00090203          	lb	tp,0(s2)
    5db2:	0100                	addi	s0,sp,128
    5db4:	00090103          	lb	sp,0(s2)
    5db8:	0100                	addi	s0,sp,128
    5dba:	0905                	addi	s2,s2,1
    5dbc:	00090403          	lb	s0,0(s2)
    5dc0:	0100                	addi	s0,sp,128
    5dc2:	00090103          	lb	sp,0(s2)
    5dc6:	0100                	addi	s0,sp,128
    5dc8:	0d05                	addi	s10,s10,1
    5dca:	00090103          	lb	sp,0(s2)
    5dce:	0100                	addi	s0,sp,128
    5dd0:	1105                	addi	sp,sp,-31
    5dd2:	0306                	slli	t1,t1,0x1
    5dd4:	0900                	addi	s0,sp,144
    5dd6:	0000                	unimp
    5dd8:	0501                	addi	a0,a0,0
    5dda:	0609                	addi	a2,a2,2
    5ddc:	00097403          	0x97403
    5de0:	0100                	addi	s0,sp,128
    5de2:	00090103          	lb	sp,0(s2)
    5de6:	0100                	addi	s0,sp,128
    5de8:	2205                	jal	5f08 <_dtoa_r+0x848>
    5dea:	0306                	slli	t1,t1,0x1
    5dec:	097f                	0x97f
    5dee:	0000                	unimp
    5df0:	0501                	addi	a0,a0,0
    5df2:	030c                	addi	a1,sp,384
    5df4:	00000903          	lb	s2,0(zero) # 0 <_start>
    5df8:	0501                	addi	a0,a0,0
    5dfa:	030e                	slli	t1,t1,0x3
    5dfc:	097e                	slli	s2,s2,0x1f
    5dfe:	0000                	unimp
    5e00:	0501                	addi	a0,a0,0
    5e02:	0609                	addi	a2,a2,2
    5e04:	00090203          	lb	tp,0(s2)
    5e08:	0100                	addi	s0,sp,128
    5e0a:	0c05                	addi	s8,s8,1
    5e0c:	0306                	slli	t1,t1,0x1
    5e0e:	0900                	addi	s0,sp,144
    5e10:	0000                	unimp
    5e12:	0501                	addi	a0,a0,0
    5e14:	060d                	addi	a2,a2,3
    5e16:	00090203          	lb	tp,0(s2)
    5e1a:	0100                	addi	s0,sp,128
    5e1c:	00090103          	lb	sp,0(s2)
    5e20:	0100                	addi	s0,sp,128
    5e22:	0905                	addi	s2,s2,1
    5e24:	00090403          	lb	s0,0(s2)
    5e28:	0100                	addi	s0,sp,128
    5e2a:	00090103          	lb	sp,0(s2)
    5e2e:	0100                	addi	s0,sp,128
    5e30:	0d05                	addi	s10,s10,1
    5e32:	00090103          	lb	sp,0(s2)
    5e36:	0100                	addi	s0,sp,128
    5e38:	1105                	addi	sp,sp,-31
    5e3a:	0306                	slli	t1,t1,0x1
    5e3c:	0900                	addi	s0,sp,144
    5e3e:	0000                	unimp
    5e40:	0501                	addi	a0,a0,0
    5e42:	0609                	addi	a2,a2,2
    5e44:	00097403          	0x97403
    5e48:	0100                	addi	s0,sp,128
    5e4a:	00090103          	lb	sp,0(s2)
    5e4e:	0100                	addi	s0,sp,128
    5e50:	2205                	jal	5f70 <_dtoa_r+0x8b0>
    5e52:	0306                	slli	t1,t1,0x1
    5e54:	097f                	0x97f
    5e56:	0000                	unimp
    5e58:	0501                	addi	a0,a0,0
    5e5a:	030c                	addi	a1,sp,384
    5e5c:	00000903          	lb	s2,0(zero) # 0 <_start>
    5e60:	0501                	addi	a0,a0,0
    5e62:	030e                	slli	t1,t1,0x3
    5e64:	097e                	slli	s2,s2,0x1f
    5e66:	0000                	unimp
    5e68:	0501                	addi	a0,a0,0
    5e6a:	0609                	addi	a2,a2,2
    5e6c:	00090203          	lb	tp,0(s2)
    5e70:	0100                	addi	s0,sp,128
    5e72:	0c05                	addi	s8,s8,1
    5e74:	0306                	slli	t1,t1,0x1
    5e76:	0900                	addi	s0,sp,144
    5e78:	0000                	unimp
    5e7a:	0501                	addi	a0,a0,0
    5e7c:	060d                	addi	a2,a2,3
    5e7e:	00090203          	lb	tp,0(s2)
    5e82:	0100                	addi	s0,sp,128
    5e84:	00090103          	lb	sp,0(s2)
    5e88:	0100                	addi	s0,sp,128
    5e8a:	0905                	addi	s2,s2,1
    5e8c:	00090403          	lb	s0,0(s2)
    5e90:	0100                	addi	s0,sp,128
    5e92:	00090103          	lb	sp,0(s2)
    5e96:	0100                	addi	s0,sp,128
    5e98:	0d05                	addi	s10,s10,1
    5e9a:	00090103          	lb	sp,0(s2)
    5e9e:	0100                	addi	s0,sp,128
    5ea0:	1105                	addi	sp,sp,-31
    5ea2:	0306                	slli	t1,t1,0x1
    5ea4:	0900                	addi	s0,sp,144
    5ea6:	0000                	unimp
    5ea8:	0501                	addi	a0,a0,0
    5eaa:	0609                	addi	a2,a2,2
    5eac:	00097403          	0x97403
    5eb0:	0100                	addi	s0,sp,128
    5eb2:	00090103          	lb	sp,0(s2)
    5eb6:	0100                	addi	s0,sp,128
    5eb8:	2205                	jal	5fd8 <_dtoa_r+0x918>
    5eba:	0306                	slli	t1,t1,0x1
    5ebc:	097f                	0x97f
    5ebe:	0000                	unimp
    5ec0:	0501                	addi	a0,a0,0
    5ec2:	030c                	addi	a1,sp,384
    5ec4:	00000903          	lb	s2,0(zero) # 0 <_start>
    5ec8:	0501                	addi	a0,a0,0
    5eca:	030e                	slli	t1,t1,0x3
    5ecc:	097e                	slli	s2,s2,0x1f
    5ece:	0000                	unimp
    5ed0:	0501                	addi	a0,a0,0
    5ed2:	0609                	addi	a2,a2,2
    5ed4:	00090203          	lb	tp,0(s2)
    5ed8:	0100                	addi	s0,sp,128
    5eda:	0c05                	addi	s8,s8,1
    5edc:	0306                	slli	t1,t1,0x1
    5ede:	0900                	addi	s0,sp,144
    5ee0:	0000                	unimp
    5ee2:	0501                	addi	a0,a0,0
    5ee4:	060d                	addi	a2,a2,3
    5ee6:	00090203          	lb	tp,0(s2)
    5eea:	0100                	addi	s0,sp,128
    5eec:	00090103          	lb	sp,0(s2)
    5ef0:	0100                	addi	s0,sp,128
    5ef2:	0905                	addi	s2,s2,1
    5ef4:	00090403          	lb	s0,0(s2)
    5ef8:	0100                	addi	s0,sp,128
    5efa:	00090103          	lb	sp,0(s2)
    5efe:	0100                	addi	s0,sp,128
    5f00:	0d05                	addi	s10,s10,1
    5f02:	00090103          	lb	sp,0(s2)
    5f06:	0100                	addi	s0,sp,128
    5f08:	1105                	addi	sp,sp,-31
    5f0a:	0306                	slli	t1,t1,0x1
    5f0c:	0900                	addi	s0,sp,144
    5f0e:	0000                	unimp
    5f10:	0501                	addi	a0,a0,0
    5f12:	0609                	addi	a2,a2,2
    5f14:	00097403          	0x97403
    5f18:	0100                	addi	s0,sp,128
    5f1a:	00090103          	lb	sp,0(s2)
    5f1e:	0100                	addi	s0,sp,128
    5f20:	2205                	jal	6040 <_dtoa_r+0x980>
    5f22:	0306                	slli	t1,t1,0x1
    5f24:	097f                	0x97f
    5f26:	0000                	unimp
    5f28:	0501                	addi	a0,a0,0
    5f2a:	030c                	addi	a1,sp,384
    5f2c:	00000903          	lb	s2,0(zero) # 0 <_start>
    5f30:	0501                	addi	a0,a0,0
    5f32:	030e                	slli	t1,t1,0x3
    5f34:	097e                	slli	s2,s2,0x1f
    5f36:	0000                	unimp
    5f38:	0501                	addi	a0,a0,0
    5f3a:	0609                	addi	a2,a2,2
    5f3c:	00090203          	lb	tp,0(s2)
    5f40:	0100                	addi	s0,sp,128
    5f42:	0c05                	addi	s8,s8,1
    5f44:	0306                	slli	t1,t1,0x1
    5f46:	0900                	addi	s0,sp,144
    5f48:	0000                	unimp
    5f4a:	0501                	addi	a0,a0,0
    5f4c:	060d                	addi	a2,a2,3
    5f4e:	00090203          	lb	tp,0(s2)
    5f52:	0100                	addi	s0,sp,128
    5f54:	00090103          	lb	sp,0(s2)
    5f58:	0100                	addi	s0,sp,128
    5f5a:	0905                	addi	s2,s2,1
    5f5c:	00090403          	lb	s0,0(s2)
    5f60:	0100                	addi	s0,sp,128
    5f62:	00090103          	lb	sp,0(s2)
    5f66:	0100                	addi	s0,sp,128
    5f68:	0d05                	addi	s10,s10,1
    5f6a:	00090103          	lb	sp,0(s2)
    5f6e:	0100                	addi	s0,sp,128
    5f70:	1105                	addi	sp,sp,-31
    5f72:	0306                	slli	t1,t1,0x1
    5f74:	0900                	addi	s0,sp,144
    5f76:	0000                	unimp
    5f78:	0501                	addi	a0,a0,0
    5f7a:	0609                	addi	a2,a2,2
    5f7c:	00097403          	0x97403
    5f80:	0100                	addi	s0,sp,128
    5f82:	00090103          	lb	sp,0(s2)
    5f86:	0100                	addi	s0,sp,128
    5f88:	2205                	jal	60a8 <_dtoa_r+0x9e8>
    5f8a:	0306                	slli	t1,t1,0x1
    5f8c:	097f                	0x97f
    5f8e:	0000                	unimp
    5f90:	0501                	addi	a0,a0,0
    5f92:	030c                	addi	a1,sp,384
    5f94:	00000903          	lb	s2,0(zero) # 0 <_start>
    5f98:	0501                	addi	a0,a0,0
    5f9a:	030e                	slli	t1,t1,0x3
    5f9c:	097e                	slli	s2,s2,0x1f
    5f9e:	0000                	unimp
    5fa0:	0501                	addi	a0,a0,0
    5fa2:	0609                	addi	a2,a2,2
    5fa4:	00090203          	lb	tp,0(s2)
    5fa8:	0100                	addi	s0,sp,128
    5faa:	0c05                	addi	s8,s8,1
    5fac:	0306                	slli	t1,t1,0x1
    5fae:	0900                	addi	s0,sp,144
    5fb0:	0000                	unimp
    5fb2:	0501                	addi	a0,a0,0
    5fb4:	060d                	addi	a2,a2,3
    5fb6:	00090203          	lb	tp,0(s2)
    5fba:	0100                	addi	s0,sp,128
    5fbc:	00090103          	lb	sp,0(s2)
    5fc0:	0100                	addi	s0,sp,128
    5fc2:	0905                	addi	s2,s2,1
    5fc4:	00090403          	lb	s0,0(s2)
    5fc8:	0100                	addi	s0,sp,128
    5fca:	00090103          	lb	sp,0(s2)
    5fce:	0100                	addi	s0,sp,128
    5fd0:	0d05                	addi	s10,s10,1
    5fd2:	00090103          	lb	sp,0(s2)
    5fd6:	0100                	addi	s0,sp,128
    5fd8:	1105                	addi	sp,sp,-31
    5fda:	0306                	slli	t1,t1,0x1
    5fdc:	0900                	addi	s0,sp,144
    5fde:	0000                	unimp
    5fe0:	0501                	addi	a0,a0,0
    5fe2:	0609                	addi	a2,a2,2
    5fe4:	00097403          	0x97403
    5fe8:	0100                	addi	s0,sp,128
    5fea:	00090103          	lb	sp,0(s2)
    5fee:	0100                	addi	s0,sp,128
    5ff0:	00090203          	lb	tp,0(s2)
    5ff4:	0100                	addi	s0,sp,128
    5ff6:	0c05                	addi	s8,s8,1
    5ff8:	0306                	slli	t1,t1,0x1
    5ffa:	0900                	addi	s0,sp,144
    5ffc:	0000                	unimp
    5ffe:	0501                	addi	a0,a0,0
    6000:	060d                	addi	a2,a2,3
    6002:	00090203          	lb	tp,0(s2)
    6006:	0100                	addi	s0,sp,128
    6008:	00090103          	lb	sp,0(s2)
    600c:	0100                	addi	s0,sp,128
    600e:	0905                	addi	s2,s2,1
    6010:	00090403          	lb	s0,0(s2)
    6014:	0100                	addi	s0,sp,128
    6016:	00090103          	lb	sp,0(s2)
    601a:	0100                	addi	s0,sp,128
    601c:	0d05                	addi	s10,s10,1
    601e:	00090103          	lb	sp,0(s2)
    6022:	0100                	addi	s0,sp,128
    6024:	1105                	addi	sp,sp,-31
    6026:	0306                	slli	t1,t1,0x1
    6028:	0900                	addi	s0,sp,144
    602a:	0000                	unimp
    602c:	0501                	addi	a0,a0,0
    602e:	0605                	addi	a2,a2,1
    6030:	00090403          	lb	s0,0(s2)
    6034:	0100                	addi	s0,sp,128
    6036:	0105                	addi	sp,sp,1
    6038:	0306                	slli	t1,t1,0x1
    603a:	0901                	addi	s2,s2,0
    603c:	0000                	unimp
    603e:	0901                	addi	s2,s2,0
    6040:	0000                	unimp
    6042:	0100                	addi	s0,sp,128
    6044:	0501                	addi	a0,a0,0
    6046:	0001                	nop
    6048:	0205                	addi	tp,tp,1
    604a:	2510                	fld	fa2,8(a0)
    604c:	0000                	unimp
    604e:	0101be03          	0x101be03
    6052:	0505                	addi	a0,a0,1
    6054:	00090103          	lb	sp,0(s2)
    6058:	0100                	addi	s0,sp,128
    605a:	2205                	jal	617a <_dtoa_r+0xaba>
    605c:	0306                	slli	t1,t1,0x1
    605e:	0000096b          	0x96b
    6062:	0501                	addi	a0,a0,0
    6064:	0915030b          	0x915030b
    6068:	0004                	0x4
    606a:	0501                	addi	a0,a0,0
    606c:	0605                	addi	a2,a2,1
    606e:	04096703          	0x4096703
    6072:	0100                	addi	s0,sp,128
    6074:	00090203          	lb	tp,0(s2)
    6078:	0100                	addi	s0,sp,128
    607a:	0905                	addi	s2,s2,1
    607c:	00090203          	lb	tp,0(s2)
    6080:	0100                	addi	s0,sp,128
    6082:	00090103          	lb	sp,0(s2)
    6086:	0100                	addi	s0,sp,128
    6088:	0c05                	addi	s8,s8,1
    608a:	0306                	slli	t1,t1,0x1
    608c:	0902                	c.slli64	s2
    608e:	0000                	unimp
    6090:	0501                	addi	a0,a0,0
    6092:	030e                	slli	t1,t1,0x3
    6094:	097e                	slli	s2,s2,0x1f
    6096:	0004                	0x4
    6098:	0501                	addi	a0,a0,0
    609a:	0609                	addi	a2,a2,2
    609c:	04090203          	lb	tp,64(s2)
    60a0:	0100                	addi	s0,sp,128
    60a2:	0c05                	addi	s8,s8,1
    60a4:	0306                	slli	t1,t1,0x1
    60a6:	0900                	addi	s0,sp,144
    60a8:	0004                	0x4
    60aa:	0501                	addi	a0,a0,0
    60ac:	060d                	addi	a2,a2,3
    60ae:	04090203          	lb	tp,64(s2)
    60b2:	0100                	addi	s0,sp,128
    60b4:	00090103          	lb	sp,0(s2)
    60b8:	0100                	addi	s0,sp,128
    60ba:	0905                	addi	s2,s2,1
    60bc:	00090403          	lb	s0,0(s2)
    60c0:	0100                	addi	s0,sp,128
    60c2:	00090103          	lb	sp,0(s2)
    60c6:	0100                	addi	s0,sp,128
    60c8:	0d05                	addi	s10,s10,1
    60ca:	00090103          	lb	sp,0(s2)
    60ce:	0100                	addi	s0,sp,128
    60d0:	1105                	addi	sp,sp,-31
    60d2:	0306                	slli	t1,t1,0x1
    60d4:	0900                	addi	s0,sp,144
    60d6:	0000                	unimp
    60d8:	0501                	addi	a0,a0,0
    60da:	0609                	addi	a2,a2,2
    60dc:	14097403          	0x14097403
    60e0:	0100                	addi	s0,sp,128
    60e2:	00090103          	lb	sp,0(s2)
    60e6:	0100                	addi	s0,sp,128
    60e8:	2205                	jal	6208 <_dtoa_r+0xb48>
    60ea:	0306                	slli	t1,t1,0x1
    60ec:	097f                	0x97f
    60ee:	0000                	unimp
    60f0:	0501                	addi	a0,a0,0
    60f2:	030c                	addi	a1,sp,384
    60f4:	00040903          	lb	s2,0(s0) # 19000 <_data_lma+0xe9e8>
    60f8:	0501                	addi	a0,a0,0
    60fa:	030e                	slli	t1,t1,0x3
    60fc:	097e                	slli	s2,s2,0x1f
    60fe:	0008                	0x8
    6100:	0501                	addi	a0,a0,0
    6102:	0609                	addi	a2,a2,2
    6104:	04090203          	lb	tp,64(s2)
    6108:	0100                	addi	s0,sp,128
    610a:	0c05                	addi	s8,s8,1
    610c:	0306                	slli	t1,t1,0x1
    610e:	0900                	addi	s0,sp,144
    6110:	0000                	unimp
    6112:	0501                	addi	a0,a0,0
    6114:	060d                	addi	a2,a2,3
    6116:	04090203          	lb	tp,64(s2)
    611a:	0100                	addi	s0,sp,128
    611c:	00090103          	lb	sp,0(s2)
    6120:	0100                	addi	s0,sp,128
    6122:	0905                	addi	s2,s2,1
    6124:	00090403          	lb	s0,0(s2)
    6128:	0100                	addi	s0,sp,128
    612a:	00090103          	lb	sp,0(s2)
    612e:	0100                	addi	s0,sp,128
    6130:	0d05                	addi	s10,s10,1
    6132:	00090103          	lb	sp,0(s2)
    6136:	0100                	addi	s0,sp,128
    6138:	1105                	addi	sp,sp,-31
    613a:	0306                	slli	t1,t1,0x1
    613c:	0900                	addi	s0,sp,144
    613e:	0000                	unimp
    6140:	0501                	addi	a0,a0,0
    6142:	0609                	addi	a2,a2,2
    6144:	14097403          	0x14097403
    6148:	0100                	addi	s0,sp,128
    614a:	00090103          	lb	sp,0(s2)
    614e:	0100                	addi	s0,sp,128
    6150:	2205                	jal	6270 <_dtoa_r+0xbb0>
    6152:	0306                	slli	t1,t1,0x1
    6154:	097f                	0x97f
    6156:	0000                	unimp
    6158:	0501                	addi	a0,a0,0
    615a:	030c                	addi	a1,sp,384
    615c:	00040903          	lb	s2,0(s0)
    6160:	0501                	addi	a0,a0,0
    6162:	030e                	slli	t1,t1,0x3
    6164:	097e                	slli	s2,s2,0x1f
    6166:	0004                	0x4
    6168:	0501                	addi	a0,a0,0
    616a:	0609                	addi	a2,a2,2
    616c:	04090203          	lb	tp,64(s2)
    6170:	0100                	addi	s0,sp,128
    6172:	0c05                	addi	s8,s8,1
    6174:	0306                	slli	t1,t1,0x1
    6176:	0900                	addi	s0,sp,144
    6178:	0004                	0x4
    617a:	0501                	addi	a0,a0,0
    617c:	060d                	addi	a2,a2,3
    617e:	04090203          	lb	tp,64(s2)
    6182:	0100                	addi	s0,sp,128
    6184:	00090103          	lb	sp,0(s2)
    6188:	0100                	addi	s0,sp,128
    618a:	0905                	addi	s2,s2,1
    618c:	00090403          	lb	s0,0(s2)
    6190:	0100                	addi	s0,sp,128
    6192:	00090103          	lb	sp,0(s2)
    6196:	0100                	addi	s0,sp,128
    6198:	0d05                	addi	s10,s10,1
    619a:	00090103          	lb	sp,0(s2)
    619e:	0100                	addi	s0,sp,128
    61a0:	1105                	addi	sp,sp,-31
    61a2:	0306                	slli	t1,t1,0x1
    61a4:	0900                	addi	s0,sp,144
    61a6:	0000                	unimp
    61a8:	0501                	addi	a0,a0,0
    61aa:	0609                	addi	a2,a2,2
    61ac:	14097403          	0x14097403
    61b0:	0100                	addi	s0,sp,128
    61b2:	00090103          	lb	sp,0(s2)
    61b6:	0100                	addi	s0,sp,128
    61b8:	2205                	jal	62d8 <_dtoa_r+0xc18>
    61ba:	0306                	slli	t1,t1,0x1
    61bc:	097f                	0x97f
    61be:	0000                	unimp
    61c0:	0501                	addi	a0,a0,0
    61c2:	030c                	addi	a1,sp,384
    61c4:	00040903          	lb	s2,0(s0)
    61c8:	0501                	addi	a0,a0,0
    61ca:	030e                	slli	t1,t1,0x3
    61cc:	097e                	slli	s2,s2,0x1f
    61ce:	0004                	0x4
    61d0:	0501                	addi	a0,a0,0
    61d2:	0609                	addi	a2,a2,2
    61d4:	04090203          	lb	tp,64(s2)
    61d8:	0100                	addi	s0,sp,128
    61da:	0c05                	addi	s8,s8,1
    61dc:	0306                	slli	t1,t1,0x1
    61de:	0900                	addi	s0,sp,144
    61e0:	0004                	0x4
    61e2:	0501                	addi	a0,a0,0
    61e4:	060d                	addi	a2,a2,3
    61e6:	04090203          	lb	tp,64(s2)
    61ea:	0100                	addi	s0,sp,128
    61ec:	00090103          	lb	sp,0(s2)
    61f0:	0100                	addi	s0,sp,128
    61f2:	0905                	addi	s2,s2,1
    61f4:	00090403          	lb	s0,0(s2)
    61f8:	0100                	addi	s0,sp,128
    61fa:	00090103          	lb	sp,0(s2)
    61fe:	0100                	addi	s0,sp,128
    6200:	0d05                	addi	s10,s10,1
    6202:	00090103          	lb	sp,0(s2)
    6206:	0100                	addi	s0,sp,128
    6208:	1105                	addi	sp,sp,-31
    620a:	0306                	slli	t1,t1,0x1
    620c:	0900                	addi	s0,sp,144
    620e:	0000                	unimp
    6210:	0501                	addi	a0,a0,0
    6212:	0609                	addi	a2,a2,2
    6214:	14097403          	0x14097403
    6218:	0100                	addi	s0,sp,128
    621a:	00090103          	lb	sp,0(s2)
    621e:	0100                	addi	s0,sp,128
    6220:	2205                	jal	6340 <_dtoa_r+0xc80>
    6222:	0306                	slli	t1,t1,0x1
    6224:	097f                	0x97f
    6226:	0000                	unimp
    6228:	0501                	addi	a0,a0,0
    622a:	030c                	addi	a1,sp,384
    622c:	00040903          	lb	s2,0(s0)
    6230:	0501                	addi	a0,a0,0
    6232:	030e                	slli	t1,t1,0x3
    6234:	097e                	slli	s2,s2,0x1f
    6236:	0004                	0x4
    6238:	0501                	addi	a0,a0,0
    623a:	0609                	addi	a2,a2,2
    623c:	04090203          	lb	tp,64(s2)
    6240:	0100                	addi	s0,sp,128
    6242:	0c05                	addi	s8,s8,1
    6244:	0306                	slli	t1,t1,0x1
    6246:	0900                	addi	s0,sp,144
    6248:	0004                	0x4
    624a:	0501                	addi	a0,a0,0
    624c:	060d                	addi	a2,a2,3
    624e:	04090203          	lb	tp,64(s2)
    6252:	0100                	addi	s0,sp,128
    6254:	00090103          	lb	sp,0(s2)
    6258:	0100                	addi	s0,sp,128
    625a:	0905                	addi	s2,s2,1
    625c:	00090403          	lb	s0,0(s2)
    6260:	0100                	addi	s0,sp,128
    6262:	00090103          	lb	sp,0(s2)
    6266:	0100                	addi	s0,sp,128
    6268:	0d05                	addi	s10,s10,1
    626a:	00090103          	lb	sp,0(s2)
    626e:	0100                	addi	s0,sp,128
    6270:	1105                	addi	sp,sp,-31
    6272:	0306                	slli	t1,t1,0x1
    6274:	0900                	addi	s0,sp,144
    6276:	0000                	unimp
    6278:	0501                	addi	a0,a0,0
    627a:	0609                	addi	a2,a2,2
    627c:	14097403          	0x14097403
    6280:	0100                	addi	s0,sp,128
    6282:	00090103          	lb	sp,0(s2)
    6286:	0100                	addi	s0,sp,128
    6288:	2205                	jal	63a8 <_dtoa_r+0xce8>
    628a:	0306                	slli	t1,t1,0x1
    628c:	097f                	0x97f
    628e:	0000                	unimp
    6290:	0501                	addi	a0,a0,0
    6292:	030c                	addi	a1,sp,384
    6294:	00040903          	lb	s2,0(s0)
    6298:	0501                	addi	a0,a0,0
    629a:	030e                	slli	t1,t1,0x3
    629c:	097e                	slli	s2,s2,0x1f
    629e:	0004                	0x4
    62a0:	0501                	addi	a0,a0,0
    62a2:	0609                	addi	a2,a2,2
    62a4:	04090203          	lb	tp,64(s2)
    62a8:	0100                	addi	s0,sp,128
    62aa:	0c05                	addi	s8,s8,1
    62ac:	0306                	slli	t1,t1,0x1
    62ae:	0900                	addi	s0,sp,144
    62b0:	0004                	0x4
    62b2:	0501                	addi	a0,a0,0
    62b4:	060d                	addi	a2,a2,3
    62b6:	04090203          	lb	tp,64(s2)
    62ba:	0100                	addi	s0,sp,128
    62bc:	00090103          	lb	sp,0(s2)
    62c0:	0100                	addi	s0,sp,128
    62c2:	0905                	addi	s2,s2,1
    62c4:	00090403          	lb	s0,0(s2)
    62c8:	0100                	addi	s0,sp,128
    62ca:	00090103          	lb	sp,0(s2)
    62ce:	0100                	addi	s0,sp,128
    62d0:	0d05                	addi	s10,s10,1
    62d2:	00090103          	lb	sp,0(s2)
    62d6:	0100                	addi	s0,sp,128
    62d8:	1105                	addi	sp,sp,-31
    62da:	0306                	slli	t1,t1,0x1
    62dc:	0900                	addi	s0,sp,144
    62de:	0000                	unimp
    62e0:	0501                	addi	a0,a0,0
    62e2:	0609                	addi	a2,a2,2
    62e4:	14097403          	0x14097403
    62e8:	0100                	addi	s0,sp,128
    62ea:	00090103          	lb	sp,0(s2)
    62ee:	0100                	addi	s0,sp,128
    62f0:	2205                	jal	6410 <_dtoa_r+0xd50>
    62f2:	0306                	slli	t1,t1,0x1
    62f4:	097f                	0x97f
    62f6:	0000                	unimp
    62f8:	0501                	addi	a0,a0,0
    62fa:	030c                	addi	a1,sp,384
    62fc:	00040903          	lb	s2,0(s0)
    6300:	0501                	addi	a0,a0,0
    6302:	030e                	slli	t1,t1,0x3
    6304:	097e                	slli	s2,s2,0x1f
    6306:	0004                	0x4
    6308:	0501                	addi	a0,a0,0
    630a:	0609                	addi	a2,a2,2
    630c:	04090203          	lb	tp,64(s2)
    6310:	0100                	addi	s0,sp,128
    6312:	0c05                	addi	s8,s8,1
    6314:	0306                	slli	t1,t1,0x1
    6316:	0900                	addi	s0,sp,144
    6318:	0004                	0x4
    631a:	0501                	addi	a0,a0,0
    631c:	060d                	addi	a2,a2,3
    631e:	04090203          	lb	tp,64(s2)
    6322:	0100                	addi	s0,sp,128
    6324:	00090103          	lb	sp,0(s2)
    6328:	0100                	addi	s0,sp,128
    632a:	0905                	addi	s2,s2,1
    632c:	00090403          	lb	s0,0(s2)
    6330:	0100                	addi	s0,sp,128
    6332:	00090103          	lb	sp,0(s2)
    6336:	0100                	addi	s0,sp,128
    6338:	0d05                	addi	s10,s10,1
    633a:	00090103          	lb	sp,0(s2)
    633e:	0100                	addi	s0,sp,128
    6340:	1105                	addi	sp,sp,-31
    6342:	0306                	slli	t1,t1,0x1
    6344:	0900                	addi	s0,sp,144
    6346:	0000                	unimp
    6348:	0501                	addi	a0,a0,0
    634a:	0609                	addi	a2,a2,2
    634c:	14097403          	0x14097403
    6350:	0100                	addi	s0,sp,128
    6352:	00090103          	lb	sp,0(s2)
    6356:	0100                	addi	s0,sp,128
    6358:	00090203          	lb	tp,0(s2)
    635c:	0100                	addi	s0,sp,128
    635e:	0c05                	addi	s8,s8,1
    6360:	0306                	slli	t1,t1,0x1
    6362:	0900                	addi	s0,sp,144
    6364:	0000                	unimp
    6366:	0501                	addi	a0,a0,0
    6368:	060d                	addi	a2,a2,3
    636a:	0c090203          	lb	tp,192(s2)
    636e:	0100                	addi	s0,sp,128
    6370:	00090103          	lb	sp,0(s2)
    6374:	0100                	addi	s0,sp,128
    6376:	0905                	addi	s2,s2,1
    6378:	00090403          	lb	s0,0(s2)
    637c:	0100                	addi	s0,sp,128
    637e:	00090103          	lb	sp,0(s2)
    6382:	0100                	addi	s0,sp,128
    6384:	0d05                	addi	s10,s10,1
    6386:	00090103          	lb	sp,0(s2)
    638a:	0100                	addi	s0,sp,128
    638c:	1105                	addi	sp,sp,-31
    638e:	0306                	slli	t1,t1,0x1
    6390:	0900                	addi	s0,sp,144
    6392:	0000                	unimp
    6394:	0501                	addi	a0,a0,0
    6396:	0605                	addi	a2,a2,1
    6398:	14090403          	lb	s0,320(s2)
    639c:	0100                	addi	s0,sp,128
    639e:	00090603          	lb	a2,0(s2)
    63a2:	0100                	addi	s0,sp,128
    63a4:	0b05                	addi	s6,s6,1
    63a6:	0306                	slli	t1,t1,0x1
    63a8:	0900                	addi	s0,sp,144
    63aa:	0000                	unimp
    63ac:	0501                	addi	a0,a0,0
    63ae:	0322                	slli	t1,t1,0x8
    63b0:	096a                	slli	s2,s2,0x1a
    63b2:	0004                	0x4
    63b4:	0501                	addi	a0,a0,0
    63b6:	0916030b          	0x916030b
    63ba:	0004                	0x4
    63bc:	0501                	addi	a0,a0,0
    63be:	0609                	addi	a2,a2,2
    63c0:	04096a03          	0x4096a03
    63c4:	0100                	addi	s0,sp,128
    63c6:	00090103          	lb	sp,0(s2)
    63ca:	0100                	addi	s0,sp,128
    63cc:	0c05                	addi	s8,s8,1
    63ce:	0306                	slli	t1,t1,0x1
    63d0:	0902                	c.slli64	s2
    63d2:	0000                	unimp
    63d4:	0501                	addi	a0,a0,0
    63d6:	030e                	slli	t1,t1,0x3
    63d8:	097e                	slli	s2,s2,0x1f
    63da:	0004                	0x4
    63dc:	0501                	addi	a0,a0,0
    63de:	0609                	addi	a2,a2,2
    63e0:	04090203          	lb	tp,64(s2)
    63e4:	0100                	addi	s0,sp,128
    63e6:	0c05                	addi	s8,s8,1
    63e8:	0306                	slli	t1,t1,0x1
    63ea:	0900                	addi	s0,sp,144
    63ec:	0004                	0x4
    63ee:	0501                	addi	a0,a0,0
    63f0:	060d                	addi	a2,a2,3
    63f2:	04090203          	lb	tp,64(s2)
    63f6:	0100                	addi	s0,sp,128
    63f8:	00090103          	lb	sp,0(s2)
    63fc:	0100                	addi	s0,sp,128
    63fe:	0905                	addi	s2,s2,1
    6400:	00090403          	lb	s0,0(s2)
    6404:	0100                	addi	s0,sp,128
    6406:	00090103          	lb	sp,0(s2)
    640a:	0100                	addi	s0,sp,128
    640c:	0d05                	addi	s10,s10,1
    640e:	00090103          	lb	sp,0(s2)
    6412:	0100                	addi	s0,sp,128
    6414:	1105                	addi	sp,sp,-31
    6416:	0306                	slli	t1,t1,0x1
    6418:	0900                	addi	s0,sp,144
    641a:	0000                	unimp
    641c:	0501                	addi	a0,a0,0
    641e:	0609                	addi	a2,a2,2
    6420:	14097403          	0x14097403
    6424:	0100                	addi	s0,sp,128
    6426:	00090103          	lb	sp,0(s2)
    642a:	0100                	addi	s0,sp,128
    642c:	2205                	jal	654c <_dtoa_r+0xe8c>
    642e:	0306                	slli	t1,t1,0x1
    6430:	097f                	0x97f
    6432:	0000                	unimp
    6434:	0501                	addi	a0,a0,0
    6436:	030c                	addi	a1,sp,384
    6438:	00040903          	lb	s2,0(s0)
    643c:	0501                	addi	a0,a0,0
    643e:	030e                	slli	t1,t1,0x3
    6440:	097e                	slli	s2,s2,0x1f
    6442:	0004                	0x4
    6444:	0501                	addi	a0,a0,0
    6446:	0609                	addi	a2,a2,2
    6448:	04090203          	lb	tp,64(s2)
    644c:	0100                	addi	s0,sp,128
    644e:	0c05                	addi	s8,s8,1
    6450:	0306                	slli	t1,t1,0x1
    6452:	0900                	addi	s0,sp,144
    6454:	0004                	0x4
    6456:	0501                	addi	a0,a0,0
    6458:	060d                	addi	a2,a2,3
    645a:	04090203          	lb	tp,64(s2)
    645e:	0100                	addi	s0,sp,128
    6460:	00090103          	lb	sp,0(s2)
    6464:	0100                	addi	s0,sp,128
    6466:	0905                	addi	s2,s2,1
    6468:	00090403          	lb	s0,0(s2)
    646c:	0100                	addi	s0,sp,128
    646e:	00090103          	lb	sp,0(s2)
    6472:	0100                	addi	s0,sp,128
    6474:	0d05                	addi	s10,s10,1
    6476:	00090103          	lb	sp,0(s2)
    647a:	0100                	addi	s0,sp,128
    647c:	1105                	addi	sp,sp,-31
    647e:	0306                	slli	t1,t1,0x1
    6480:	0900                	addi	s0,sp,144
    6482:	0000                	unimp
    6484:	0501                	addi	a0,a0,0
    6486:	0609                	addi	a2,a2,2
    6488:	14097403          	0x14097403
    648c:	0100                	addi	s0,sp,128
    648e:	00090103          	lb	sp,0(s2)
    6492:	0100                	addi	s0,sp,128
    6494:	2205                	jal	65b4 <_dtoa_r+0xef4>
    6496:	0306                	slli	t1,t1,0x1
    6498:	097f                	0x97f
    649a:	0000                	unimp
    649c:	0501                	addi	a0,a0,0
    649e:	030c                	addi	a1,sp,384
    64a0:	00040903          	lb	s2,0(s0)
    64a4:	0501                	addi	a0,a0,0
    64a6:	030e                	slli	t1,t1,0x3
    64a8:	097e                	slli	s2,s2,0x1f
    64aa:	0004                	0x4
    64ac:	0501                	addi	a0,a0,0
    64ae:	0609                	addi	a2,a2,2
    64b0:	04090203          	lb	tp,64(s2)
    64b4:	0100                	addi	s0,sp,128
    64b6:	0c05                	addi	s8,s8,1
    64b8:	0306                	slli	t1,t1,0x1
    64ba:	0900                	addi	s0,sp,144
    64bc:	0004                	0x4
    64be:	0501                	addi	a0,a0,0
    64c0:	060d                	addi	a2,a2,3
    64c2:	04090203          	lb	tp,64(s2)
    64c6:	0100                	addi	s0,sp,128
    64c8:	00090103          	lb	sp,0(s2)
    64cc:	0100                	addi	s0,sp,128
    64ce:	0905                	addi	s2,s2,1
    64d0:	00090403          	lb	s0,0(s2)
    64d4:	0100                	addi	s0,sp,128
    64d6:	00090103          	lb	sp,0(s2)
    64da:	0100                	addi	s0,sp,128
    64dc:	0d05                	addi	s10,s10,1
    64de:	00090103          	lb	sp,0(s2)
    64e2:	0100                	addi	s0,sp,128
    64e4:	1105                	addi	sp,sp,-31
    64e6:	0306                	slli	t1,t1,0x1
    64e8:	0900                	addi	s0,sp,144
    64ea:	0000                	unimp
    64ec:	0501                	addi	a0,a0,0
    64ee:	0609                	addi	a2,a2,2
    64f0:	14097403          	0x14097403
    64f4:	0100                	addi	s0,sp,128
    64f6:	00090103          	lb	sp,0(s2)
    64fa:	0100                	addi	s0,sp,128
    64fc:	2205                	jal	661c <_dtoa_r+0xf5c>
    64fe:	0306                	slli	t1,t1,0x1
    6500:	097f                	0x97f
    6502:	0000                	unimp
    6504:	0501                	addi	a0,a0,0
    6506:	030c                	addi	a1,sp,384
    6508:	00040903          	lb	s2,0(s0)
    650c:	0501                	addi	a0,a0,0
    650e:	030e                	slli	t1,t1,0x3
    6510:	097e                	slli	s2,s2,0x1f
    6512:	0004                	0x4
    6514:	0501                	addi	a0,a0,0
    6516:	0609                	addi	a2,a2,2
    6518:	04090203          	lb	tp,64(s2)
    651c:	0100                	addi	s0,sp,128
    651e:	0c05                	addi	s8,s8,1
    6520:	0306                	slli	t1,t1,0x1
    6522:	0900                	addi	s0,sp,144
    6524:	0004                	0x4
    6526:	0501                	addi	a0,a0,0
    6528:	060d                	addi	a2,a2,3
    652a:	04090203          	lb	tp,64(s2)
    652e:	0100                	addi	s0,sp,128
    6530:	00090103          	lb	sp,0(s2)
    6534:	0100                	addi	s0,sp,128
    6536:	0905                	addi	s2,s2,1
    6538:	00090403          	lb	s0,0(s2)
    653c:	0100                	addi	s0,sp,128
    653e:	00090103          	lb	sp,0(s2)
    6542:	0100                	addi	s0,sp,128
    6544:	0d05                	addi	s10,s10,1
    6546:	00090103          	lb	sp,0(s2)
    654a:	0100                	addi	s0,sp,128
    654c:	1105                	addi	sp,sp,-31
    654e:	0306                	slli	t1,t1,0x1
    6550:	0900                	addi	s0,sp,144
    6552:	0000                	unimp
    6554:	0501                	addi	a0,a0,0
    6556:	0609                	addi	a2,a2,2
    6558:	14097403          	0x14097403
    655c:	0100                	addi	s0,sp,128
    655e:	00090103          	lb	sp,0(s2)
    6562:	0100                	addi	s0,sp,128
    6564:	2205                	jal	6684 <_dtoa_r+0xfc4>
    6566:	0306                	slli	t1,t1,0x1
    6568:	097f                	0x97f
    656a:	0000                	unimp
    656c:	0501                	addi	a0,a0,0
    656e:	030c                	addi	a1,sp,384
    6570:	00040903          	lb	s2,0(s0)
    6574:	0501                	addi	a0,a0,0
    6576:	030e                	slli	t1,t1,0x3
    6578:	097e                	slli	s2,s2,0x1f
    657a:	0004                	0x4
    657c:	0501                	addi	a0,a0,0
    657e:	0609                	addi	a2,a2,2
    6580:	04090203          	lb	tp,64(s2)
    6584:	0100                	addi	s0,sp,128
    6586:	0c05                	addi	s8,s8,1
    6588:	0306                	slli	t1,t1,0x1
    658a:	0900                	addi	s0,sp,144
    658c:	0004                	0x4
    658e:	0501                	addi	a0,a0,0
    6590:	060d                	addi	a2,a2,3
    6592:	04090203          	lb	tp,64(s2)
    6596:	0100                	addi	s0,sp,128
    6598:	00090103          	lb	sp,0(s2)
    659c:	0100                	addi	s0,sp,128
    659e:	0905                	addi	s2,s2,1
    65a0:	00090403          	lb	s0,0(s2)
    65a4:	0100                	addi	s0,sp,128
    65a6:	00090103          	lb	sp,0(s2)
    65aa:	0100                	addi	s0,sp,128
    65ac:	0d05                	addi	s10,s10,1
    65ae:	00090103          	lb	sp,0(s2)
    65b2:	0100                	addi	s0,sp,128
    65b4:	1105                	addi	sp,sp,-31
    65b6:	0306                	slli	t1,t1,0x1
    65b8:	0900                	addi	s0,sp,144
    65ba:	0000                	unimp
    65bc:	0501                	addi	a0,a0,0
    65be:	0609                	addi	a2,a2,2
    65c0:	14097403          	0x14097403
    65c4:	0100                	addi	s0,sp,128
    65c6:	00090103          	lb	sp,0(s2)
    65ca:	0100                	addi	s0,sp,128
    65cc:	2205                	jal	66ec <_dtoa_r+0x102c>
    65ce:	0306                	slli	t1,t1,0x1
    65d0:	097f                	0x97f
    65d2:	0000                	unimp
    65d4:	0501                	addi	a0,a0,0
    65d6:	030c                	addi	a1,sp,384
    65d8:	00040903          	lb	s2,0(s0)
    65dc:	0501                	addi	a0,a0,0
    65de:	030e                	slli	t1,t1,0x3
    65e0:	097e                	slli	s2,s2,0x1f
    65e2:	0004                	0x4
    65e4:	0501                	addi	a0,a0,0
    65e6:	0609                	addi	a2,a2,2
    65e8:	04090203          	lb	tp,64(s2)
    65ec:	0100                	addi	s0,sp,128
    65ee:	0c05                	addi	s8,s8,1
    65f0:	0306                	slli	t1,t1,0x1
    65f2:	0900                	addi	s0,sp,144
    65f4:	0004                	0x4
    65f6:	0501                	addi	a0,a0,0
    65f8:	060d                	addi	a2,a2,3
    65fa:	04090203          	lb	tp,64(s2)
    65fe:	0100                	addi	s0,sp,128
    6600:	00090103          	lb	sp,0(s2)
    6604:	0100                	addi	s0,sp,128
    6606:	0905                	addi	s2,s2,1
    6608:	00090403          	lb	s0,0(s2)
    660c:	0100                	addi	s0,sp,128
    660e:	00090103          	lb	sp,0(s2)
    6612:	0100                	addi	s0,sp,128
    6614:	0d05                	addi	s10,s10,1
    6616:	00090103          	lb	sp,0(s2)
    661a:	0100                	addi	s0,sp,128
    661c:	1105                	addi	sp,sp,-31
    661e:	0306                	slli	t1,t1,0x1
    6620:	0900                	addi	s0,sp,144
    6622:	0000                	unimp
    6624:	0501                	addi	a0,a0,0
    6626:	0609                	addi	a2,a2,2
    6628:	14097403          	0x14097403
    662c:	0100                	addi	s0,sp,128
    662e:	00090103          	lb	sp,0(s2)
    6632:	0100                	addi	s0,sp,128
    6634:	2205                	jal	6754 <_dtoa_r+0x1094>
    6636:	0306                	slli	t1,t1,0x1
    6638:	097f                	0x97f
    663a:	0000                	unimp
    663c:	0501                	addi	a0,a0,0
    663e:	030c                	addi	a1,sp,384
    6640:	00040903          	lb	s2,0(s0)
    6644:	0501                	addi	a0,a0,0
    6646:	030e                	slli	t1,t1,0x3
    6648:	097e                	slli	s2,s2,0x1f
    664a:	0004                	0x4
    664c:	0501                	addi	a0,a0,0
    664e:	0609                	addi	a2,a2,2
    6650:	04090203          	lb	tp,64(s2)
    6654:	0100                	addi	s0,sp,128
    6656:	0c05                	addi	s8,s8,1
    6658:	0306                	slli	t1,t1,0x1
    665a:	0900                	addi	s0,sp,144
    665c:	0004                	0x4
    665e:	0501                	addi	a0,a0,0
    6660:	060d                	addi	a2,a2,3
    6662:	04090203          	lb	tp,64(s2)
    6666:	0100                	addi	s0,sp,128
    6668:	00090103          	lb	sp,0(s2)
    666c:	0100                	addi	s0,sp,128
    666e:	0905                	addi	s2,s2,1
    6670:	00090403          	lb	s0,0(s2)
    6674:	0100                	addi	s0,sp,128
    6676:	00090103          	lb	sp,0(s2)
    667a:	0100                	addi	s0,sp,128
    667c:	0d05                	addi	s10,s10,1
    667e:	00090103          	lb	sp,0(s2)
    6682:	0100                	addi	s0,sp,128
    6684:	1105                	addi	sp,sp,-31
    6686:	0306                	slli	t1,t1,0x1
    6688:	0900                	addi	s0,sp,144
    668a:	0000                	unimp
    668c:	0501                	addi	a0,a0,0
    668e:	0609                	addi	a2,a2,2
    6690:	14097403          	0x14097403
    6694:	0100                	addi	s0,sp,128
    6696:	00090103          	lb	sp,0(s2)
    669a:	0100                	addi	s0,sp,128
    669c:	00090203          	lb	tp,0(s2)
    66a0:	0100                	addi	s0,sp,128
    66a2:	0c05                	addi	s8,s8,1
    66a4:	0306                	slli	t1,t1,0x1
    66a6:	0900                	addi	s0,sp,144
    66a8:	0000                	unimp
    66aa:	0501                	addi	a0,a0,0
    66ac:	060d                	addi	a2,a2,3
    66ae:	0c090203          	lb	tp,192(s2)
    66b2:	0100                	addi	s0,sp,128
    66b4:	00090103          	lb	sp,0(s2)
    66b8:	0100                	addi	s0,sp,128
    66ba:	0905                	addi	s2,s2,1
    66bc:	00090403          	lb	s0,0(s2)
    66c0:	0100                	addi	s0,sp,128
    66c2:	00090103          	lb	sp,0(s2)
    66c6:	0100                	addi	s0,sp,128
    66c8:	0d05                	addi	s10,s10,1
    66ca:	00090103          	lb	sp,0(s2)
    66ce:	0100                	addi	s0,sp,128
    66d0:	1105                	addi	sp,sp,-31
    66d2:	0306                	slli	t1,t1,0x1
    66d4:	0900                	addi	s0,sp,144
    66d6:	0000                	unimp
    66d8:	0501                	addi	a0,a0,0
    66da:	0605                	addi	a2,a2,1
    66dc:	14090403          	lb	s0,320(s2)
    66e0:	0100                	addi	s0,sp,128
    66e2:	00090703          	lb	a4,0(s2)
    66e6:	0100                	addi	s0,sp,128
    66e8:	0105                	addi	sp,sp,1
    66ea:	0306                	slli	t1,t1,0x1
    66ec:	0901                	addi	s2,s2,0
    66ee:	0000                	unimp
    66f0:	0901                	addi	s2,s2,0
    66f2:	0004                	0x4
    66f4:	0100                	addi	s0,sp,128
    66f6:	0501                	addi	a0,a0,0
    66f8:	0001                	nop
    66fa:	0205                	addi	tp,tp,1
    66fc:	2790                	fld	fa2,8(a5)
    66fe:	0000                	unimp
    6700:	0101c503          	lbu	a0,16(gp) # 10013b0 <__global_pointer$+0x10>
    6704:	0505                	addi	a0,a0,1
    6706:	00090103          	lb	sp,0(s2)
    670a:	0100                	addi	s0,sp,128
    670c:	00090703          	lb	a4,0(s2)
    6710:	0100                	addi	s0,sp,128
    6712:	2205                	jal	6832 <_dtoa_r+0x1172>
    6714:	0306                	slli	t1,t1,0x1
    6716:	095d                	addi	s2,s2,23
    6718:	0000                	unimp
    671a:	0501                	addi	a0,a0,0
    671c:	0915030b          	0x915030b
    6720:	0004                	0x4
    6722:	0501                	addi	a0,a0,0
    6724:	030c                	addi	a1,sp,384
    6726:	090e                	slli	s2,s2,0x3
    6728:	0004                	0x4
    672a:	0301                	addi	t1,t1,0
    672c:	0960                	addi	s0,sp,156
    672e:	0004                	0x4
    6730:	0301                	addi	t1,t1,0
    6732:	0920                	addi	s0,sp,152
    6734:	0004                	0x4
    6736:	0501                	addi	a0,a0,0
    6738:	0605                	addi	a2,a2,1
    673a:	04097203          	0x4097203
    673e:	0100                	addi	s0,sp,128
    6740:	00096703          	0x96703
    6744:	0100                	addi	s0,sp,128
    6746:	00090203          	lb	tp,0(s2)
    674a:	0100                	addi	s0,sp,128
    674c:	0905                	addi	s2,s2,1
    674e:	00090203          	lb	tp,0(s2)
    6752:	0100                	addi	s0,sp,128
    6754:	00090103          	lb	sp,0(s2)
    6758:	0100                	addi	s0,sp,128
    675a:	0e05                	addi	t3,t3,1
    675c:	0306                	slli	t1,t1,0x1
    675e:	0900                	addi	s0,sp,144
    6760:	0000                	unimp
    6762:	0501                	addi	a0,a0,0
    6764:	0609                	addi	a2,a2,2
    6766:	04090203          	lb	tp,64(s2)
    676a:	0100                	addi	s0,sp,128
    676c:	0c05                	addi	s8,s8,1
    676e:	0306                	slli	t1,t1,0x1
    6770:	0900                	addi	s0,sp,144
    6772:	0004                	0x4
    6774:	0501                	addi	a0,a0,0
    6776:	060d                	addi	a2,a2,3
    6778:	04090203          	lb	tp,64(s2)
    677c:	0100                	addi	s0,sp,128
    677e:	00090103          	lb	sp,0(s2)
    6782:	0100                	addi	s0,sp,128
    6784:	0905                	addi	s2,s2,1
    6786:	00090403          	lb	s0,0(s2)
    678a:	0100                	addi	s0,sp,128
    678c:	00090103          	lb	sp,0(s2)
    6790:	0100                	addi	s0,sp,128
    6792:	0d05                	addi	s10,s10,1
    6794:	00090103          	lb	sp,0(s2)
    6798:	0100                	addi	s0,sp,128
    679a:	1105                	addi	sp,sp,-31
    679c:	0306                	slli	t1,t1,0x1
    679e:	0900                	addi	s0,sp,144
    67a0:	0000                	unimp
    67a2:	0501                	addi	a0,a0,0
    67a4:	0609                	addi	a2,a2,2
    67a6:	14097403          	0x14097403
    67aa:	0100                	addi	s0,sp,128
    67ac:	00090103          	lb	sp,0(s2)
    67b0:	0100                	addi	s0,sp,128
    67b2:	2205                	jal	68d2 <_dtoa_r+0x1212>
    67b4:	0306                	slli	t1,t1,0x1
    67b6:	097f                	0x97f
    67b8:	0000                	unimp
    67ba:	0501                	addi	a0,a0,0
    67bc:	030c                	addi	a1,sp,384
    67be:	00040903          	lb	s2,0(s0)
    67c2:	0501                	addi	a0,a0,0
    67c4:	030e                	slli	t1,t1,0x3
    67c6:	097e                	slli	s2,s2,0x1f
    67c8:	0008                	0x8
    67ca:	0501                	addi	a0,a0,0
    67cc:	0609                	addi	a2,a2,2
    67ce:	04090203          	lb	tp,64(s2)
    67d2:	0100                	addi	s0,sp,128
    67d4:	0c05                	addi	s8,s8,1
    67d6:	0306                	slli	t1,t1,0x1
    67d8:	0900                	addi	s0,sp,144
    67da:	0000                	unimp
    67dc:	0501                	addi	a0,a0,0
    67de:	060d                	addi	a2,a2,3
    67e0:	04090203          	lb	tp,64(s2)
    67e4:	0100                	addi	s0,sp,128
    67e6:	00090103          	lb	sp,0(s2)
    67ea:	0100                	addi	s0,sp,128
    67ec:	0905                	addi	s2,s2,1
    67ee:	00090403          	lb	s0,0(s2)
    67f2:	0100                	addi	s0,sp,128
    67f4:	00090103          	lb	sp,0(s2)
    67f8:	0100                	addi	s0,sp,128
    67fa:	0d05                	addi	s10,s10,1
    67fc:	00090103          	lb	sp,0(s2)
    6800:	0100                	addi	s0,sp,128
    6802:	1105                	addi	sp,sp,-31
    6804:	0306                	slli	t1,t1,0x1
    6806:	0900                	addi	s0,sp,144
    6808:	0000                	unimp
    680a:	0501                	addi	a0,a0,0
    680c:	0609                	addi	a2,a2,2
    680e:	14097403          	0x14097403
    6812:	0100                	addi	s0,sp,128
    6814:	00090103          	lb	sp,0(s2)
    6818:	0100                	addi	s0,sp,128
    681a:	2205                	jal	693a <_dtoa_r+0x127a>
    681c:	0306                	slli	t1,t1,0x1
    681e:	097f                	0x97f
    6820:	0000                	unimp
    6822:	0501                	addi	a0,a0,0
    6824:	030c                	addi	a1,sp,384
    6826:	00040903          	lb	s2,0(s0)
    682a:	0501                	addi	a0,a0,0
    682c:	030e                	slli	t1,t1,0x3
    682e:	097e                	slli	s2,s2,0x1f
    6830:	0004                	0x4
    6832:	0501                	addi	a0,a0,0
    6834:	0609                	addi	a2,a2,2
    6836:	04090203          	lb	tp,64(s2)
    683a:	0100                	addi	s0,sp,128
    683c:	0c05                	addi	s8,s8,1
    683e:	0306                	slli	t1,t1,0x1
    6840:	0900                	addi	s0,sp,144
    6842:	0004                	0x4
    6844:	0501                	addi	a0,a0,0
    6846:	060d                	addi	a2,a2,3
    6848:	04090203          	lb	tp,64(s2)
    684c:	0100                	addi	s0,sp,128
    684e:	00090103          	lb	sp,0(s2)
    6852:	0100                	addi	s0,sp,128
    6854:	0905                	addi	s2,s2,1
    6856:	00090403          	lb	s0,0(s2)
    685a:	0100                	addi	s0,sp,128
    685c:	00090103          	lb	sp,0(s2)
    6860:	0100                	addi	s0,sp,128
    6862:	0d05                	addi	s10,s10,1
    6864:	00090103          	lb	sp,0(s2)
    6868:	0100                	addi	s0,sp,128
    686a:	1105                	addi	sp,sp,-31
    686c:	0306                	slli	t1,t1,0x1
    686e:	0900                	addi	s0,sp,144
    6870:	0000                	unimp
    6872:	0501                	addi	a0,a0,0
    6874:	0609                	addi	a2,a2,2
    6876:	14097403          	0x14097403
    687a:	0100                	addi	s0,sp,128
    687c:	00090103          	lb	sp,0(s2)
    6880:	0100                	addi	s0,sp,128
    6882:	2205                	jal	69a2 <_dtoa_r+0x12e2>
    6884:	0306                	slli	t1,t1,0x1
    6886:	097f                	0x97f
    6888:	0000                	unimp
    688a:	0501                	addi	a0,a0,0
    688c:	030c                	addi	a1,sp,384
    688e:	00040903          	lb	s2,0(s0)
    6892:	0501                	addi	a0,a0,0
    6894:	030e                	slli	t1,t1,0x3
    6896:	097e                	slli	s2,s2,0x1f
    6898:	0004                	0x4
    689a:	0501                	addi	a0,a0,0
    689c:	0609                	addi	a2,a2,2
    689e:	04090203          	lb	tp,64(s2)
    68a2:	0100                	addi	s0,sp,128
    68a4:	0c05                	addi	s8,s8,1
    68a6:	0306                	slli	t1,t1,0x1
    68a8:	0900                	addi	s0,sp,144
    68aa:	0004                	0x4
    68ac:	0501                	addi	a0,a0,0
    68ae:	060d                	addi	a2,a2,3
    68b0:	04090203          	lb	tp,64(s2)
    68b4:	0100                	addi	s0,sp,128
    68b6:	00090103          	lb	sp,0(s2)
    68ba:	0100                	addi	s0,sp,128
    68bc:	0905                	addi	s2,s2,1
    68be:	00090403          	lb	s0,0(s2)
    68c2:	0100                	addi	s0,sp,128
    68c4:	00090103          	lb	sp,0(s2)
    68c8:	0100                	addi	s0,sp,128
    68ca:	0d05                	addi	s10,s10,1
    68cc:	00090103          	lb	sp,0(s2)
    68d0:	0100                	addi	s0,sp,128
    68d2:	1105                	addi	sp,sp,-31
    68d4:	0306                	slli	t1,t1,0x1
    68d6:	0900                	addi	s0,sp,144
    68d8:	0000                	unimp
    68da:	0501                	addi	a0,a0,0
    68dc:	0609                	addi	a2,a2,2
    68de:	14097403          	0x14097403
    68e2:	0100                	addi	s0,sp,128
    68e4:	00090103          	lb	sp,0(s2)
    68e8:	0100                	addi	s0,sp,128
    68ea:	2205                	jal	6a0a <_dtoa_r+0x134a>
    68ec:	0306                	slli	t1,t1,0x1
    68ee:	097f                	0x97f
    68f0:	0000                	unimp
    68f2:	0501                	addi	a0,a0,0
    68f4:	030c                	addi	a1,sp,384
    68f6:	00040903          	lb	s2,0(s0)
    68fa:	0501                	addi	a0,a0,0
    68fc:	030e                	slli	t1,t1,0x3
    68fe:	097e                	slli	s2,s2,0x1f
    6900:	0004                	0x4
    6902:	0501                	addi	a0,a0,0
    6904:	0609                	addi	a2,a2,2
    6906:	04090203          	lb	tp,64(s2)
    690a:	0100                	addi	s0,sp,128
    690c:	0c05                	addi	s8,s8,1
    690e:	0306                	slli	t1,t1,0x1
    6910:	0900                	addi	s0,sp,144
    6912:	0004                	0x4
    6914:	0501                	addi	a0,a0,0
    6916:	060d                	addi	a2,a2,3
    6918:	04090203          	lb	tp,64(s2)
    691c:	0100                	addi	s0,sp,128
    691e:	00090103          	lb	sp,0(s2)
    6922:	0100                	addi	s0,sp,128
    6924:	0905                	addi	s2,s2,1
    6926:	00090403          	lb	s0,0(s2)
    692a:	0100                	addi	s0,sp,128
    692c:	00090103          	lb	sp,0(s2)
    6930:	0100                	addi	s0,sp,128
    6932:	0d05                	addi	s10,s10,1
    6934:	00090103          	lb	sp,0(s2)
    6938:	0100                	addi	s0,sp,128
    693a:	1105                	addi	sp,sp,-31
    693c:	0306                	slli	t1,t1,0x1
    693e:	0900                	addi	s0,sp,144
    6940:	0000                	unimp
    6942:	0501                	addi	a0,a0,0
    6944:	0609                	addi	a2,a2,2
    6946:	14097403          	0x14097403
    694a:	0100                	addi	s0,sp,128
    694c:	00090103          	lb	sp,0(s2)
    6950:	0100                	addi	s0,sp,128
    6952:	2205                	jal	6a72 <__sflush_r+0x62>
    6954:	0306                	slli	t1,t1,0x1
    6956:	097f                	0x97f
    6958:	0000                	unimp
    695a:	0501                	addi	a0,a0,0
    695c:	030c                	addi	a1,sp,384
    695e:	00040903          	lb	s2,0(s0)
    6962:	0501                	addi	a0,a0,0
    6964:	030e                	slli	t1,t1,0x3
    6966:	097e                	slli	s2,s2,0x1f
    6968:	0004                	0x4
    696a:	0501                	addi	a0,a0,0
    696c:	0609                	addi	a2,a2,2
    696e:	04090203          	lb	tp,64(s2)
    6972:	0100                	addi	s0,sp,128
    6974:	0c05                	addi	s8,s8,1
    6976:	0306                	slli	t1,t1,0x1
    6978:	0900                	addi	s0,sp,144
    697a:	0004                	0x4
    697c:	0501                	addi	a0,a0,0
    697e:	060d                	addi	a2,a2,3
    6980:	04090203          	lb	tp,64(s2)
    6984:	0100                	addi	s0,sp,128
    6986:	00090103          	lb	sp,0(s2)
    698a:	0100                	addi	s0,sp,128
    698c:	0905                	addi	s2,s2,1
    698e:	00090403          	lb	s0,0(s2)
    6992:	0100                	addi	s0,sp,128
    6994:	00090103          	lb	sp,0(s2)
    6998:	0100                	addi	s0,sp,128
    699a:	0d05                	addi	s10,s10,1
    699c:	00090103          	lb	sp,0(s2)
    69a0:	0100                	addi	s0,sp,128
    69a2:	1105                	addi	sp,sp,-31
    69a4:	0306                	slli	t1,t1,0x1
    69a6:	0900                	addi	s0,sp,144
    69a8:	0000                	unimp
    69aa:	0501                	addi	a0,a0,0
    69ac:	0609                	addi	a2,a2,2
    69ae:	14097403          	0x14097403
    69b2:	0100                	addi	s0,sp,128
    69b4:	00090103          	lb	sp,0(s2)
    69b8:	0100                	addi	s0,sp,128
    69ba:	2205                	jal	6ada <__sflush_r+0xca>
    69bc:	0306                	slli	t1,t1,0x1
    69be:	097f                	0x97f
    69c0:	0000                	unimp
    69c2:	0501                	addi	a0,a0,0
    69c4:	030c                	addi	a1,sp,384
    69c6:	00040903          	lb	s2,0(s0)
    69ca:	0501                	addi	a0,a0,0
    69cc:	030e                	slli	t1,t1,0x3
    69ce:	097e                	slli	s2,s2,0x1f
    69d0:	0004                	0x4
    69d2:	0501                	addi	a0,a0,0
    69d4:	0609                	addi	a2,a2,2
    69d6:	04090203          	lb	tp,64(s2)
    69da:	0100                	addi	s0,sp,128
    69dc:	0c05                	addi	s8,s8,1
    69de:	0306                	slli	t1,t1,0x1
    69e0:	0900                	addi	s0,sp,144
    69e2:	0004                	0x4
    69e4:	0501                	addi	a0,a0,0
    69e6:	060d                	addi	a2,a2,3
    69e8:	04090203          	lb	tp,64(s2)
    69ec:	0100                	addi	s0,sp,128
    69ee:	00090103          	lb	sp,0(s2)
    69f2:	0100                	addi	s0,sp,128
    69f4:	0905                	addi	s2,s2,1
    69f6:	00090403          	lb	s0,0(s2)
    69fa:	0100                	addi	s0,sp,128
    69fc:	00090103          	lb	sp,0(s2)
    6a00:	0100                	addi	s0,sp,128
    6a02:	0d05                	addi	s10,s10,1
    6a04:	00090103          	lb	sp,0(s2)
    6a08:	0100                	addi	s0,sp,128
    6a0a:	1105                	addi	sp,sp,-31
    6a0c:	0306                	slli	t1,t1,0x1
    6a0e:	0900                	addi	s0,sp,144
    6a10:	0000                	unimp
    6a12:	0501                	addi	a0,a0,0
    6a14:	0609                	addi	a2,a2,2
    6a16:	14097403          	0x14097403
    6a1a:	0100                	addi	s0,sp,128
    6a1c:	00090103          	lb	sp,0(s2)
    6a20:	0100                	addi	s0,sp,128
    6a22:	00090203          	lb	tp,0(s2)
    6a26:	0100                	addi	s0,sp,128
    6a28:	0c05                	addi	s8,s8,1
    6a2a:	0306                	slli	t1,t1,0x1
    6a2c:	0900                	addi	s0,sp,144
    6a2e:	0000                	unimp
    6a30:	0501                	addi	a0,a0,0
    6a32:	060d                	addi	a2,a2,3
    6a34:	0c090203          	lb	tp,192(s2)
    6a38:	0100                	addi	s0,sp,128
    6a3a:	00090103          	lb	sp,0(s2)
    6a3e:	0100                	addi	s0,sp,128
    6a40:	0905                	addi	s2,s2,1
    6a42:	00090403          	lb	s0,0(s2)
    6a46:	0100                	addi	s0,sp,128
    6a48:	00090103          	lb	sp,0(s2)
    6a4c:	0100                	addi	s0,sp,128
    6a4e:	0d05                	addi	s10,s10,1
    6a50:	00090103          	lb	sp,0(s2)
    6a54:	0100                	addi	s0,sp,128
    6a56:	1105                	addi	sp,sp,-31
    6a58:	0306                	slli	t1,t1,0x1
    6a5a:	0900                	addi	s0,sp,144
    6a5c:	0000                	unimp
    6a5e:	0501                	addi	a0,a0,0
    6a60:	0605                	addi	a2,a2,1
    6a62:	14090403          	lb	s0,320(s2)
    6a66:	0100                	addi	s0,sp,128
    6a68:	00090603          	lb	a2,0(s2)
    6a6c:	0100                	addi	s0,sp,128
    6a6e:	0b05                	addi	s6,s6,1
    6a70:	0306                	slli	t1,t1,0x1
    6a72:	0900                	addi	s0,sp,144
    6a74:	0000                	unimp
    6a76:	0501                	addi	a0,a0,0
    6a78:	0322                	slli	t1,t1,0x8
    6a7a:	096a                	slli	s2,s2,0x1a
    6a7c:	0004                	0x4
    6a7e:	0501                	addi	a0,a0,0
    6a80:	030c                	addi	a1,sp,384
    6a82:	00040903          	lb	s2,0(s0)
    6a86:	0501                	addi	a0,a0,0
    6a88:	0913030b          	0x913030b
    6a8c:	0004                	0x4
    6a8e:	0501                	addi	a0,a0,0
    6a90:	0609                	addi	a2,a2,2
    6a92:	04096a03          	0x4096a03
    6a96:	0100                	addi	s0,sp,128
    6a98:	00090103          	lb	sp,0(s2)
    6a9c:	0100                	addi	s0,sp,128
    6a9e:	0e05                	addi	t3,t3,1
    6aa0:	0306                	slli	t1,t1,0x1
    6aa2:	0900                	addi	s0,sp,144
    6aa4:	0000                	unimp
    6aa6:	0501                	addi	a0,a0,0
    6aa8:	0609                	addi	a2,a2,2
    6aaa:	04090203          	lb	tp,64(s2)
    6aae:	0100                	addi	s0,sp,128
    6ab0:	0c05                	addi	s8,s8,1
    6ab2:	0306                	slli	t1,t1,0x1
    6ab4:	0900                	addi	s0,sp,144
    6ab6:	0004                	0x4
    6ab8:	0501                	addi	a0,a0,0
    6aba:	060d                	addi	a2,a2,3
    6abc:	04090203          	lb	tp,64(s2)
    6ac0:	0100                	addi	s0,sp,128
    6ac2:	00090103          	lb	sp,0(s2)
    6ac6:	0100                	addi	s0,sp,128
    6ac8:	0905                	addi	s2,s2,1
    6aca:	00090403          	lb	s0,0(s2)
    6ace:	0100                	addi	s0,sp,128
    6ad0:	00090103          	lb	sp,0(s2)
    6ad4:	0100                	addi	s0,sp,128
    6ad6:	0d05                	addi	s10,s10,1
    6ad8:	00090103          	lb	sp,0(s2)
    6adc:	0100                	addi	s0,sp,128
    6ade:	1105                	addi	sp,sp,-31
    6ae0:	0306                	slli	t1,t1,0x1
    6ae2:	0900                	addi	s0,sp,144
    6ae4:	0000                	unimp
    6ae6:	0501                	addi	a0,a0,0
    6ae8:	0609                	addi	a2,a2,2
    6aea:	14097403          	0x14097403
    6aee:	0100                	addi	s0,sp,128
    6af0:	00090103          	lb	sp,0(s2)
    6af4:	0100                	addi	s0,sp,128
    6af6:	2205                	jal	6c16 <_fflush_r+0x16>
    6af8:	0306                	slli	t1,t1,0x1
    6afa:	097f                	0x97f
    6afc:	0000                	unimp
    6afe:	0501                	addi	a0,a0,0
    6b00:	030c                	addi	a1,sp,384
    6b02:	00040903          	lb	s2,0(s0)
    6b06:	0501                	addi	a0,a0,0
    6b08:	030e                	slli	t1,t1,0x3
    6b0a:	097e                	slli	s2,s2,0x1f
    6b0c:	0004                	0x4
    6b0e:	0501                	addi	a0,a0,0
    6b10:	0609                	addi	a2,a2,2
    6b12:	04090203          	lb	tp,64(s2)
    6b16:	0100                	addi	s0,sp,128
    6b18:	0c05                	addi	s8,s8,1
    6b1a:	0306                	slli	t1,t1,0x1
    6b1c:	0900                	addi	s0,sp,144
    6b1e:	0004                	0x4
    6b20:	0501                	addi	a0,a0,0
    6b22:	060d                	addi	a2,a2,3
    6b24:	04090203          	lb	tp,64(s2)
    6b28:	0100                	addi	s0,sp,128
    6b2a:	00090103          	lb	sp,0(s2)
    6b2e:	0100                	addi	s0,sp,128
    6b30:	0905                	addi	s2,s2,1
    6b32:	00090403          	lb	s0,0(s2)
    6b36:	0100                	addi	s0,sp,128
    6b38:	00090103          	lb	sp,0(s2)
    6b3c:	0100                	addi	s0,sp,128
    6b3e:	0d05                	addi	s10,s10,1
    6b40:	00090103          	lb	sp,0(s2)
    6b44:	0100                	addi	s0,sp,128
    6b46:	1105                	addi	sp,sp,-31
    6b48:	0306                	slli	t1,t1,0x1
    6b4a:	0900                	addi	s0,sp,144
    6b4c:	0000                	unimp
    6b4e:	0501                	addi	a0,a0,0
    6b50:	0609                	addi	a2,a2,2
    6b52:	14097403          	0x14097403
    6b56:	0100                	addi	s0,sp,128
    6b58:	00090103          	lb	sp,0(s2)
    6b5c:	0100                	addi	s0,sp,128
    6b5e:	2205                	jal	6c7e <_fflush_r+0x7e>
    6b60:	0306                	slli	t1,t1,0x1
    6b62:	097f                	0x97f
    6b64:	0000                	unimp
    6b66:	0501                	addi	a0,a0,0
    6b68:	030c                	addi	a1,sp,384
    6b6a:	00040903          	lb	s2,0(s0)
    6b6e:	0501                	addi	a0,a0,0
    6b70:	030e                	slli	t1,t1,0x3
    6b72:	097e                	slli	s2,s2,0x1f
    6b74:	0004                	0x4
    6b76:	0501                	addi	a0,a0,0
    6b78:	0609                	addi	a2,a2,2
    6b7a:	04090203          	lb	tp,64(s2)
    6b7e:	0100                	addi	s0,sp,128
    6b80:	0c05                	addi	s8,s8,1
    6b82:	0306                	slli	t1,t1,0x1
    6b84:	0900                	addi	s0,sp,144
    6b86:	0004                	0x4
    6b88:	0501                	addi	a0,a0,0
    6b8a:	060d                	addi	a2,a2,3
    6b8c:	04090203          	lb	tp,64(s2)
    6b90:	0100                	addi	s0,sp,128
    6b92:	00090103          	lb	sp,0(s2)
    6b96:	0100                	addi	s0,sp,128
    6b98:	0905                	addi	s2,s2,1
    6b9a:	00090403          	lb	s0,0(s2)
    6b9e:	0100                	addi	s0,sp,128
    6ba0:	00090103          	lb	sp,0(s2)
    6ba4:	0100                	addi	s0,sp,128
    6ba6:	0d05                	addi	s10,s10,1
    6ba8:	00090103          	lb	sp,0(s2)
    6bac:	0100                	addi	s0,sp,128
    6bae:	1105                	addi	sp,sp,-31
    6bb0:	0306                	slli	t1,t1,0x1
    6bb2:	0900                	addi	s0,sp,144
    6bb4:	0000                	unimp
    6bb6:	0501                	addi	a0,a0,0
    6bb8:	0609                	addi	a2,a2,2
    6bba:	14097403          	0x14097403
    6bbe:	0100                	addi	s0,sp,128
    6bc0:	00090103          	lb	sp,0(s2)
    6bc4:	0100                	addi	s0,sp,128
    6bc6:	2205                	jal	6ce6 <std+0x3e>
    6bc8:	0306                	slli	t1,t1,0x1
    6bca:	097f                	0x97f
    6bcc:	0000                	unimp
    6bce:	0501                	addi	a0,a0,0
    6bd0:	030c                	addi	a1,sp,384
    6bd2:	00040903          	lb	s2,0(s0)
    6bd6:	0501                	addi	a0,a0,0
    6bd8:	030e                	slli	t1,t1,0x3
    6bda:	097e                	slli	s2,s2,0x1f
    6bdc:	0004                	0x4
    6bde:	0501                	addi	a0,a0,0
    6be0:	0609                	addi	a2,a2,2
    6be2:	04090203          	lb	tp,64(s2)
    6be6:	0100                	addi	s0,sp,128
    6be8:	0c05                	addi	s8,s8,1
    6bea:	0306                	slli	t1,t1,0x1
    6bec:	0900                	addi	s0,sp,144
    6bee:	0004                	0x4
    6bf0:	0501                	addi	a0,a0,0
    6bf2:	060d                	addi	a2,a2,3
    6bf4:	04090203          	lb	tp,64(s2)
    6bf8:	0100                	addi	s0,sp,128
    6bfa:	00090103          	lb	sp,0(s2)
    6bfe:	0100                	addi	s0,sp,128
    6c00:	0905                	addi	s2,s2,1
    6c02:	00090403          	lb	s0,0(s2)
    6c06:	0100                	addi	s0,sp,128
    6c08:	00090103          	lb	sp,0(s2)
    6c0c:	0100                	addi	s0,sp,128
    6c0e:	0d05                	addi	s10,s10,1
    6c10:	00090103          	lb	sp,0(s2)
    6c14:	0100                	addi	s0,sp,128
    6c16:	1105                	addi	sp,sp,-31
    6c18:	0306                	slli	t1,t1,0x1
    6c1a:	0900                	addi	s0,sp,144
    6c1c:	0000                	unimp
    6c1e:	0501                	addi	a0,a0,0
    6c20:	0609                	addi	a2,a2,2
    6c22:	14097403          	0x14097403
    6c26:	0100                	addi	s0,sp,128
    6c28:	00090103          	lb	sp,0(s2)
    6c2c:	0100                	addi	s0,sp,128
    6c2e:	2205                	jal	6d4e <__sfmoreglue+0xa>
    6c30:	0306                	slli	t1,t1,0x1
    6c32:	097f                	0x97f
    6c34:	0000                	unimp
    6c36:	0501                	addi	a0,a0,0
    6c38:	030c                	addi	a1,sp,384
    6c3a:	00040903          	lb	s2,0(s0)
    6c3e:	0501                	addi	a0,a0,0
    6c40:	030e                	slli	t1,t1,0x3
    6c42:	097e                	slli	s2,s2,0x1f
    6c44:	0004                	0x4
    6c46:	0501                	addi	a0,a0,0
    6c48:	0609                	addi	a2,a2,2
    6c4a:	04090203          	lb	tp,64(s2)
    6c4e:	0100                	addi	s0,sp,128
    6c50:	0c05                	addi	s8,s8,1
    6c52:	0306                	slli	t1,t1,0x1
    6c54:	0900                	addi	s0,sp,144
    6c56:	0004                	0x4
    6c58:	0501                	addi	a0,a0,0
    6c5a:	060d                	addi	a2,a2,3
    6c5c:	04090203          	lb	tp,64(s2)
    6c60:	0100                	addi	s0,sp,128
    6c62:	00090103          	lb	sp,0(s2)
    6c66:	0100                	addi	s0,sp,128
    6c68:	0905                	addi	s2,s2,1
    6c6a:	00090403          	lb	s0,0(s2)
    6c6e:	0100                	addi	s0,sp,128
    6c70:	00090103          	lb	sp,0(s2)
    6c74:	0100                	addi	s0,sp,128
    6c76:	0d05                	addi	s10,s10,1
    6c78:	00090103          	lb	sp,0(s2)
    6c7c:	0100                	addi	s0,sp,128
    6c7e:	1105                	addi	sp,sp,-31
    6c80:	0306                	slli	t1,t1,0x1
    6c82:	0900                	addi	s0,sp,144
    6c84:	0000                	unimp
    6c86:	0501                	addi	a0,a0,0
    6c88:	0609                	addi	a2,a2,2
    6c8a:	14097403          	0x14097403
    6c8e:	0100                	addi	s0,sp,128
    6c90:	00090103          	lb	sp,0(s2)
    6c94:	0100                	addi	s0,sp,128
    6c96:	2205                	jal	6db6 <__sfmoreglue+0x72>
    6c98:	0306                	slli	t1,t1,0x1
    6c9a:	097f                	0x97f
    6c9c:	0000                	unimp
    6c9e:	0501                	addi	a0,a0,0
    6ca0:	030c                	addi	a1,sp,384
    6ca2:	00040903          	lb	s2,0(s0)
    6ca6:	0501                	addi	a0,a0,0
    6ca8:	030e                	slli	t1,t1,0x3
    6caa:	097e                	slli	s2,s2,0x1f
    6cac:	0004                	0x4
    6cae:	0501                	addi	a0,a0,0
    6cb0:	0609                	addi	a2,a2,2
    6cb2:	04090203          	lb	tp,64(s2)
    6cb6:	0100                	addi	s0,sp,128
    6cb8:	0c05                	addi	s8,s8,1
    6cba:	0306                	slli	t1,t1,0x1
    6cbc:	0900                	addi	s0,sp,144
    6cbe:	0004                	0x4
    6cc0:	0501                	addi	a0,a0,0
    6cc2:	060d                	addi	a2,a2,3
    6cc4:	04090203          	lb	tp,64(s2)
    6cc8:	0100                	addi	s0,sp,128
    6cca:	00090103          	lb	sp,0(s2)
    6cce:	0100                	addi	s0,sp,128
    6cd0:	0905                	addi	s2,s2,1
    6cd2:	00090403          	lb	s0,0(s2)
    6cd6:	0100                	addi	s0,sp,128
    6cd8:	00090103          	lb	sp,0(s2)
    6cdc:	0100                	addi	s0,sp,128
    6cde:	0d05                	addi	s10,s10,1
    6ce0:	00090103          	lb	sp,0(s2)
    6ce4:	0100                	addi	s0,sp,128
    6ce6:	1105                	addi	sp,sp,-31
    6ce8:	0306                	slli	t1,t1,0x1
    6cea:	0900                	addi	s0,sp,144
    6cec:	0000                	unimp
    6cee:	0501                	addi	a0,a0,0
    6cf0:	0609                	addi	a2,a2,2
    6cf2:	14097403          	0x14097403
    6cf6:	0100                	addi	s0,sp,128
    6cf8:	00090103          	lb	sp,0(s2)
    6cfc:	0100                	addi	s0,sp,128
    6cfe:	2205                	jal	6e1e <__sinit+0x66>
    6d00:	0306                	slli	t1,t1,0x1
    6d02:	097f                	0x97f
    6d04:	0000                	unimp
    6d06:	0501                	addi	a0,a0,0
    6d08:	030c                	addi	a1,sp,384
    6d0a:	00040903          	lb	s2,0(s0)
    6d0e:	0501                	addi	a0,a0,0
    6d10:	030e                	slli	t1,t1,0x3
    6d12:	097e                	slli	s2,s2,0x1f
    6d14:	0004                	0x4
    6d16:	0501                	addi	a0,a0,0
    6d18:	0609                	addi	a2,a2,2
    6d1a:	04090203          	lb	tp,64(s2)
    6d1e:	0100                	addi	s0,sp,128
    6d20:	0c05                	addi	s8,s8,1
    6d22:	0306                	slli	t1,t1,0x1
    6d24:	0900                	addi	s0,sp,144
    6d26:	0004                	0x4
    6d28:	0501                	addi	a0,a0,0
    6d2a:	060d                	addi	a2,a2,3
    6d2c:	04090203          	lb	tp,64(s2)
    6d30:	0100                	addi	s0,sp,128
    6d32:	00090103          	lb	sp,0(s2)
    6d36:	0100                	addi	s0,sp,128
    6d38:	0905                	addi	s2,s2,1
    6d3a:	00090403          	lb	s0,0(s2)
    6d3e:	0100                	addi	s0,sp,128
    6d40:	00090103          	lb	sp,0(s2)
    6d44:	0100                	addi	s0,sp,128
    6d46:	0d05                	addi	s10,s10,1
    6d48:	00090103          	lb	sp,0(s2)
    6d4c:	0100                	addi	s0,sp,128
    6d4e:	1105                	addi	sp,sp,-31
    6d50:	0306                	slli	t1,t1,0x1
    6d52:	0900                	addi	s0,sp,144
    6d54:	0000                	unimp
    6d56:	0501                	addi	a0,a0,0
    6d58:	0609                	addi	a2,a2,2
    6d5a:	14097403          	0x14097403
    6d5e:	0100                	addi	s0,sp,128
    6d60:	00090103          	lb	sp,0(s2)
    6d64:	0100                	addi	s0,sp,128
    6d66:	00090203          	lb	tp,0(s2)
    6d6a:	0100                	addi	s0,sp,128
    6d6c:	0c05                	addi	s8,s8,1
    6d6e:	0306                	slli	t1,t1,0x1
    6d70:	0900                	addi	s0,sp,144
    6d72:	0000                	unimp
    6d74:	0501                	addi	a0,a0,0
    6d76:	060d                	addi	a2,a2,3
    6d78:	0c090203          	lb	tp,192(s2)
    6d7c:	0100                	addi	s0,sp,128
    6d7e:	00090103          	lb	sp,0(s2)
    6d82:	0100                	addi	s0,sp,128
    6d84:	0905                	addi	s2,s2,1
    6d86:	00090403          	lb	s0,0(s2)
    6d8a:	0100                	addi	s0,sp,128
    6d8c:	00090103          	lb	sp,0(s2)
    6d90:	0100                	addi	s0,sp,128
    6d92:	0d05                	addi	s10,s10,1
    6d94:	00090103          	lb	sp,0(s2)
    6d98:	0100                	addi	s0,sp,128
    6d9a:	1105                	addi	sp,sp,-31
    6d9c:	0306                	slli	t1,t1,0x1
    6d9e:	0900                	addi	s0,sp,144
    6da0:	0000                	unimp
    6da2:	0501                	addi	a0,a0,0
    6da4:	0605                	addi	a2,a2,1
    6da6:	14090403          	lb	s0,320(s2)
    6daa:	0100                	addi	s0,sp,128
    6dac:	00090703          	lb	a4,0(s2)
    6db0:	0100                	addi	s0,sp,128
    6db2:	00090603          	lb	a2,0(s2)
    6db6:	0100                	addi	s0,sp,128
    6db8:	2105                	jal	71d8 <malloc+0xc>
    6dba:	0306                	slli	t1,t1,0x1
    6dbc:	0900                	addi	s0,sp,144
    6dbe:	0000                	unimp
    6dc0:	0501                	addi	a0,a0,0
    6dc2:	0605                	addi	a2,a2,1
    6dc4:	04090603          	lb	a2,64(s2)
    6dc8:	0100                	addi	s0,sp,128
    6dca:	2205                	jal	6eea <__sfp+0x66>
    6dcc:	0306                	slli	t1,t1,0x1
    6dce:	095d                	addi	s2,s2,23
    6dd0:	0000                	unimp
    6dd2:	0501                	addi	a0,a0,0
    6dd4:	0915030b          	0x915030b
    6dd8:	0004                	0x4
    6dda:	0501                	addi	a0,a0,0
    6ddc:	030c                	addi	a1,sp,384
    6dde:	090e                	slli	s2,s2,0x3
    6de0:	0004                	0x4
    6de2:	0301                	addi	t1,t1,0
    6de4:	0960                	addi	s0,sp,156
    6de6:	0004                	0x4
    6de8:	0301                	addi	t1,t1,0
    6dea:	0920                	addi	s0,sp,152
    6dec:	0004                	0x4
    6dee:	0501                	addi	a0,a0,0
    6df0:	0605                	addi	a2,a2,1
    6df2:	04097203          	0x4097203
    6df6:	0100                	addi	s0,sp,128
    6df8:	00096703          	0x96703
    6dfc:	0100                	addi	s0,sp,128
    6dfe:	00090203          	lb	tp,0(s2)
    6e02:	0100                	addi	s0,sp,128
    6e04:	0905                	addi	s2,s2,1
    6e06:	00090203          	lb	tp,0(s2)
    6e0a:	0100                	addi	s0,sp,128
    6e0c:	00090103          	lb	sp,0(s2)
    6e10:	0100                	addi	s0,sp,128
    6e12:	0e05                	addi	t3,t3,1
    6e14:	0306                	slli	t1,t1,0x1
    6e16:	0900                	addi	s0,sp,144
    6e18:	0000                	unimp
    6e1a:	0501                	addi	a0,a0,0
    6e1c:	0609                	addi	a2,a2,2
    6e1e:	04090203          	lb	tp,64(s2)
    6e22:	0100                	addi	s0,sp,128
    6e24:	0c05                	addi	s8,s8,1
    6e26:	0306                	slli	t1,t1,0x1
    6e28:	0900                	addi	s0,sp,144
    6e2a:	0004                	0x4
    6e2c:	0501                	addi	a0,a0,0
    6e2e:	060d                	addi	a2,a2,3
    6e30:	04090203          	lb	tp,64(s2)
    6e34:	0100                	addi	s0,sp,128
    6e36:	00090103          	lb	sp,0(s2)
    6e3a:	0100                	addi	s0,sp,128
    6e3c:	0905                	addi	s2,s2,1
    6e3e:	00090403          	lb	s0,0(s2)
    6e42:	0100                	addi	s0,sp,128
    6e44:	00090103          	lb	sp,0(s2)
    6e48:	0100                	addi	s0,sp,128
    6e4a:	0d05                	addi	s10,s10,1
    6e4c:	00090103          	lb	sp,0(s2)
    6e50:	0100                	addi	s0,sp,128
    6e52:	1105                	addi	sp,sp,-31
    6e54:	0306                	slli	t1,t1,0x1
    6e56:	0900                	addi	s0,sp,144
    6e58:	0000                	unimp
    6e5a:	0501                	addi	a0,a0,0
    6e5c:	0609                	addi	a2,a2,2
    6e5e:	14097403          	0x14097403
    6e62:	0100                	addi	s0,sp,128
    6e64:	00090103          	lb	sp,0(s2)
    6e68:	0100                	addi	s0,sp,128
    6e6a:	2205                	jal	6f8a <_fwalk_reent+0xa>
    6e6c:	0306                	slli	t1,t1,0x1
    6e6e:	097f                	0x97f
    6e70:	0000                	unimp
    6e72:	0501                	addi	a0,a0,0
    6e74:	030c                	addi	a1,sp,384
    6e76:	00040903          	lb	s2,0(s0)
    6e7a:	0501                	addi	a0,a0,0
    6e7c:	030e                	slli	t1,t1,0x3
    6e7e:	097e                	slli	s2,s2,0x1f
    6e80:	0004                	0x4
    6e82:	0501                	addi	a0,a0,0
    6e84:	0609                	addi	a2,a2,2
    6e86:	04090203          	lb	tp,64(s2)
    6e8a:	0100                	addi	s0,sp,128
    6e8c:	0c05                	addi	s8,s8,1
    6e8e:	0306                	slli	t1,t1,0x1
    6e90:	0900                	addi	s0,sp,144
    6e92:	0004                	0x4
    6e94:	0501                	addi	a0,a0,0
    6e96:	060d                	addi	a2,a2,3
    6e98:	04090203          	lb	tp,64(s2)
    6e9c:	0100                	addi	s0,sp,128
    6e9e:	00090103          	lb	sp,0(s2)
    6ea2:	0100                	addi	s0,sp,128
    6ea4:	0905                	addi	s2,s2,1
    6ea6:	00090403          	lb	s0,0(s2)
    6eaa:	0100                	addi	s0,sp,128
    6eac:	00090103          	lb	sp,0(s2)
    6eb0:	0100                	addi	s0,sp,128
    6eb2:	0d05                	addi	s10,s10,1
    6eb4:	00090103          	lb	sp,0(s2)
    6eb8:	0100                	addi	s0,sp,128
    6eba:	1105                	addi	sp,sp,-31
    6ebc:	0306                	slli	t1,t1,0x1
    6ebe:	0900                	addi	s0,sp,144
    6ec0:	0000                	unimp
    6ec2:	0501                	addi	a0,a0,0
    6ec4:	0609                	addi	a2,a2,2
    6ec6:	14097403          	0x14097403
    6eca:	0100                	addi	s0,sp,128
    6ecc:	00090103          	lb	sp,0(s2)
    6ed0:	0100                	addi	s0,sp,128
    6ed2:	2205                	jal	6ff2 <_fwalk_reent+0x72>
    6ed4:	0306                	slli	t1,t1,0x1
    6ed6:	097f                	0x97f
    6ed8:	0000                	unimp
    6eda:	0501                	addi	a0,a0,0
    6edc:	030c                	addi	a1,sp,384
    6ede:	00040903          	lb	s2,0(s0)
    6ee2:	0501                	addi	a0,a0,0
    6ee4:	030e                	slli	t1,t1,0x3
    6ee6:	097e                	slli	s2,s2,0x1f
    6ee8:	0004                	0x4
    6eea:	0501                	addi	a0,a0,0
    6eec:	0609                	addi	a2,a2,2
    6eee:	04090203          	lb	tp,64(s2)
    6ef2:	0100                	addi	s0,sp,128
    6ef4:	0c05                	addi	s8,s8,1
    6ef6:	0306                	slli	t1,t1,0x1
    6ef8:	0900                	addi	s0,sp,144
    6efa:	0004                	0x4
    6efc:	0501                	addi	a0,a0,0
    6efe:	060d                	addi	a2,a2,3
    6f00:	04090203          	lb	tp,64(s2)
    6f04:	0100                	addi	s0,sp,128
    6f06:	00090103          	lb	sp,0(s2)
    6f0a:	0100                	addi	s0,sp,128
    6f0c:	0905                	addi	s2,s2,1
    6f0e:	00090403          	lb	s0,0(s2)
    6f12:	0100                	addi	s0,sp,128
    6f14:	00090103          	lb	sp,0(s2)
    6f18:	0100                	addi	s0,sp,128
    6f1a:	0d05                	addi	s10,s10,1
    6f1c:	00090103          	lb	sp,0(s2)
    6f20:	0100                	addi	s0,sp,128
    6f22:	1105                	addi	sp,sp,-31
    6f24:	0306                	slli	t1,t1,0x1
    6f26:	0900                	addi	s0,sp,144
    6f28:	0000                	unimp
    6f2a:	0501                	addi	a0,a0,0
    6f2c:	0609                	addi	a2,a2,2
    6f2e:	14097403          	0x14097403
    6f32:	0100                	addi	s0,sp,128
    6f34:	00090103          	lb	sp,0(s2)
    6f38:	0100                	addi	s0,sp,128
    6f3a:	2205                	jal	705a <__swhatbuf_r+0x1a>
    6f3c:	0306                	slli	t1,t1,0x1
    6f3e:	097f                	0x97f
    6f40:	0000                	unimp
    6f42:	0501                	addi	a0,a0,0
    6f44:	030c                	addi	a1,sp,384
    6f46:	00040903          	lb	s2,0(s0)
    6f4a:	0501                	addi	a0,a0,0
    6f4c:	030e                	slli	t1,t1,0x3
    6f4e:	097e                	slli	s2,s2,0x1f
    6f50:	0004                	0x4
    6f52:	0501                	addi	a0,a0,0
    6f54:	0609                	addi	a2,a2,2
    6f56:	04090203          	lb	tp,64(s2)
    6f5a:	0100                	addi	s0,sp,128
    6f5c:	0c05                	addi	s8,s8,1
    6f5e:	0306                	slli	t1,t1,0x1
    6f60:	0900                	addi	s0,sp,144
    6f62:	0004                	0x4
    6f64:	0501                	addi	a0,a0,0
    6f66:	060d                	addi	a2,a2,3
    6f68:	04090203          	lb	tp,64(s2)
    6f6c:	0100                	addi	s0,sp,128
    6f6e:	00090103          	lb	sp,0(s2)
    6f72:	0100                	addi	s0,sp,128
    6f74:	0905                	addi	s2,s2,1
    6f76:	00090403          	lb	s0,0(s2)
    6f7a:	0100                	addi	s0,sp,128
    6f7c:	00090103          	lb	sp,0(s2)
    6f80:	0100                	addi	s0,sp,128
    6f82:	0d05                	addi	s10,s10,1
    6f84:	00090103          	lb	sp,0(s2)
    6f88:	0100                	addi	s0,sp,128
    6f8a:	1105                	addi	sp,sp,-31
    6f8c:	0306                	slli	t1,t1,0x1
    6f8e:	0900                	addi	s0,sp,144
    6f90:	0000                	unimp
    6f92:	0501                	addi	a0,a0,0
    6f94:	0609                	addi	a2,a2,2
    6f96:	14097403          	0x14097403
    6f9a:	0100                	addi	s0,sp,128
    6f9c:	00090103          	lb	sp,0(s2)
    6fa0:	0100                	addi	s0,sp,128
    6fa2:	2205                	jal	70c2 <__swhatbuf_r+0x82>
    6fa4:	0306                	slli	t1,t1,0x1
    6fa6:	097f                	0x97f
    6fa8:	0000                	unimp
    6faa:	0501                	addi	a0,a0,0
    6fac:	030c                	addi	a1,sp,384
    6fae:	00040903          	lb	s2,0(s0)
    6fb2:	0501                	addi	a0,a0,0
    6fb4:	030e                	slli	t1,t1,0x3
    6fb6:	097e                	slli	s2,s2,0x1f
    6fb8:	0004                	0x4
    6fba:	0501                	addi	a0,a0,0
    6fbc:	0609                	addi	a2,a2,2
    6fbe:	04090203          	lb	tp,64(s2)
    6fc2:	0100                	addi	s0,sp,128
    6fc4:	0c05                	addi	s8,s8,1
    6fc6:	0306                	slli	t1,t1,0x1
    6fc8:	0900                	addi	s0,sp,144
    6fca:	0004                	0x4
    6fcc:	0501                	addi	a0,a0,0
    6fce:	060d                	addi	a2,a2,3
    6fd0:	04090203          	lb	tp,64(s2)
    6fd4:	0100                	addi	s0,sp,128
    6fd6:	00090103          	lb	sp,0(s2)
    6fda:	0100                	addi	s0,sp,128
    6fdc:	0905                	addi	s2,s2,1
    6fde:	00090403          	lb	s0,0(s2)
    6fe2:	0100                	addi	s0,sp,128
    6fe4:	00090103          	lb	sp,0(s2)
    6fe8:	0100                	addi	s0,sp,128
    6fea:	0d05                	addi	s10,s10,1
    6fec:	00090103          	lb	sp,0(s2)
    6ff0:	0100                	addi	s0,sp,128
    6ff2:	1105                	addi	sp,sp,-31
    6ff4:	0306                	slli	t1,t1,0x1
    6ff6:	0900                	addi	s0,sp,144
    6ff8:	0000                	unimp
    6ffa:	0501                	addi	a0,a0,0
    6ffc:	0609                	addi	a2,a2,2
    6ffe:	14097403          	0x14097403
    7002:	0100                	addi	s0,sp,128
    7004:	00090103          	lb	sp,0(s2)
    7008:	0100                	addi	s0,sp,128
    700a:	2205                	jal	712a <__smakebuf_r+0x5a>
    700c:	0306                	slli	t1,t1,0x1
    700e:	097f                	0x97f
    7010:	0000                	unimp
    7012:	0501                	addi	a0,a0,0
    7014:	030c                	addi	a1,sp,384
    7016:	00040903          	lb	s2,0(s0)
    701a:	0501                	addi	a0,a0,0
    701c:	030e                	slli	t1,t1,0x3
    701e:	097e                	slli	s2,s2,0x1f
    7020:	0004                	0x4
    7022:	0501                	addi	a0,a0,0
    7024:	0609                	addi	a2,a2,2
    7026:	04090203          	lb	tp,64(s2)
    702a:	0100                	addi	s0,sp,128
    702c:	0c05                	addi	s8,s8,1
    702e:	0306                	slli	t1,t1,0x1
    7030:	0900                	addi	s0,sp,144
    7032:	0004                	0x4
    7034:	0501                	addi	a0,a0,0
    7036:	060d                	addi	a2,a2,3
    7038:	04090203          	lb	tp,64(s2)
    703c:	0100                	addi	s0,sp,128
    703e:	00090103          	lb	sp,0(s2)
    7042:	0100                	addi	s0,sp,128
    7044:	0905                	addi	s2,s2,1
    7046:	00090403          	lb	s0,0(s2)
    704a:	0100                	addi	s0,sp,128
    704c:	00090103          	lb	sp,0(s2)
    7050:	0100                	addi	s0,sp,128
    7052:	0d05                	addi	s10,s10,1
    7054:	00090103          	lb	sp,0(s2)
    7058:	0100                	addi	s0,sp,128
    705a:	1105                	addi	sp,sp,-31
    705c:	0306                	slli	t1,t1,0x1
    705e:	0900                	addi	s0,sp,144
    7060:	0000                	unimp
    7062:	0501                	addi	a0,a0,0
    7064:	0609                	addi	a2,a2,2
    7066:	14097403          	0x14097403
    706a:	0100                	addi	s0,sp,128
    706c:	00090103          	lb	sp,0(s2)
    7070:	0100                	addi	s0,sp,128
    7072:	2205                	jal	7192 <__smakebuf_r+0xc2>
    7074:	0306                	slli	t1,t1,0x1
    7076:	097f                	0x97f
    7078:	0000                	unimp
    707a:	0501                	addi	a0,a0,0
    707c:	030c                	addi	a1,sp,384
    707e:	00040903          	lb	s2,0(s0)
    7082:	0501                	addi	a0,a0,0
    7084:	030e                	slli	t1,t1,0x3
    7086:	097e                	slli	s2,s2,0x1f
    7088:	0004                	0x4
    708a:	0501                	addi	a0,a0,0
    708c:	0609                	addi	a2,a2,2
    708e:	04090203          	lb	tp,64(s2)
    7092:	0100                	addi	s0,sp,128
    7094:	0c05                	addi	s8,s8,1
    7096:	0306                	slli	t1,t1,0x1
    7098:	0900                	addi	s0,sp,144
    709a:	0004                	0x4
    709c:	0501                	addi	a0,a0,0
    709e:	060d                	addi	a2,a2,3
    70a0:	04090203          	lb	tp,64(s2)
    70a4:	0100                	addi	s0,sp,128
    70a6:	00090103          	lb	sp,0(s2)
    70aa:	0100                	addi	s0,sp,128
    70ac:	0905                	addi	s2,s2,1
    70ae:	00090403          	lb	s0,0(s2)
    70b2:	0100                	addi	s0,sp,128
    70b4:	00090103          	lb	sp,0(s2)
    70b8:	0100                	addi	s0,sp,128
    70ba:	0d05                	addi	s10,s10,1
    70bc:	00090103          	lb	sp,0(s2)
    70c0:	0100                	addi	s0,sp,128
    70c2:	1105                	addi	sp,sp,-31
    70c4:	0306                	slli	t1,t1,0x1
    70c6:	0900                	addi	s0,sp,144
    70c8:	0000                	unimp
    70ca:	0501                	addi	a0,a0,0
    70cc:	0609                	addi	a2,a2,2
    70ce:	14097403          	0x14097403
    70d2:	0100                	addi	s0,sp,128
    70d4:	00090103          	lb	sp,0(s2)
    70d8:	0100                	addi	s0,sp,128
    70da:	00090203          	lb	tp,0(s2)
    70de:	0100                	addi	s0,sp,128
    70e0:	0c05                	addi	s8,s8,1
    70e2:	0306                	slli	t1,t1,0x1
    70e4:	0900                	addi	s0,sp,144
    70e6:	0000                	unimp
    70e8:	0501                	addi	a0,a0,0
    70ea:	060d                	addi	a2,a2,3
    70ec:	0c090203          	lb	tp,192(s2)
    70f0:	0100                	addi	s0,sp,128
    70f2:	00090103          	lb	sp,0(s2)
    70f6:	0100                	addi	s0,sp,128
    70f8:	0905                	addi	s2,s2,1
    70fa:	00090403          	lb	s0,0(s2)
    70fe:	0100                	addi	s0,sp,128
    7100:	00090103          	lb	sp,0(s2)
    7104:	0100                	addi	s0,sp,128
    7106:	0d05                	addi	s10,s10,1
    7108:	00090103          	lb	sp,0(s2)
    710c:	0100                	addi	s0,sp,128
    710e:	1105                	addi	sp,sp,-31
    7110:	0306                	slli	t1,t1,0x1
    7112:	0900                	addi	s0,sp,144
    7114:	0000                	unimp
    7116:	0501                	addi	a0,a0,0
    7118:	0605                	addi	a2,a2,1
    711a:	14090403          	lb	s0,320(s2)
    711e:	0100                	addi	s0,sp,128
    7120:	00090603          	lb	a2,0(s2)
    7124:	0100                	addi	s0,sp,128
    7126:	0b05                	addi	s6,s6,1
    7128:	0306                	slli	t1,t1,0x1
    712a:	0900                	addi	s0,sp,144
    712c:	0000                	unimp
    712e:	0501                	addi	a0,a0,0
    7130:	0322                	slli	t1,t1,0x8
    7132:	096a                	slli	s2,s2,0x1a
    7134:	0004                	0x4
    7136:	0501                	addi	a0,a0,0
    7138:	030c                	addi	a1,sp,384
    713a:	00040903          	lb	s2,0(s0)
    713e:	0501                	addi	a0,a0,0
    7140:	0913030b          	0x913030b
    7144:	0004                	0x4
    7146:	0501                	addi	a0,a0,0
    7148:	0609                	addi	a2,a2,2
    714a:	04096a03          	0x4096a03
    714e:	0100                	addi	s0,sp,128
    7150:	00090103          	lb	sp,0(s2)
    7154:	0100                	addi	s0,sp,128
    7156:	0e05                	addi	t3,t3,1
    7158:	0306                	slli	t1,t1,0x1
    715a:	0900                	addi	s0,sp,144
    715c:	0000                	unimp
    715e:	0501                	addi	a0,a0,0
    7160:	0609                	addi	a2,a2,2
    7162:	04090203          	lb	tp,64(s2)
    7166:	0100                	addi	s0,sp,128
    7168:	0c05                	addi	s8,s8,1
    716a:	0306                	slli	t1,t1,0x1
    716c:	0900                	addi	s0,sp,144
    716e:	0004                	0x4
    7170:	0501                	addi	a0,a0,0
    7172:	060d                	addi	a2,a2,3
    7174:	04090203          	lb	tp,64(s2)
    7178:	0100                	addi	s0,sp,128
    717a:	00090103          	lb	sp,0(s2)
    717e:	0100                	addi	s0,sp,128
    7180:	0905                	addi	s2,s2,1
    7182:	00090403          	lb	s0,0(s2)
    7186:	0100                	addi	s0,sp,128
    7188:	00090103          	lb	sp,0(s2)
    718c:	0100                	addi	s0,sp,128
    718e:	0d05                	addi	s10,s10,1
    7190:	00090103          	lb	sp,0(s2)
    7194:	0100                	addi	s0,sp,128
    7196:	1105                	addi	sp,sp,-31
    7198:	0306                	slli	t1,t1,0x1
    719a:	0900                	addi	s0,sp,144
    719c:	0000                	unimp
    719e:	0501                	addi	a0,a0,0
    71a0:	0609                	addi	a2,a2,2
    71a2:	14097403          	0x14097403
    71a6:	0100                	addi	s0,sp,128
    71a8:	00090103          	lb	sp,0(s2)
    71ac:	0100                	addi	s0,sp,128
    71ae:	2205                	jal	72ce <_Balloc+0x46>
    71b0:	0306                	slli	t1,t1,0x1
    71b2:	097f                	0x97f
    71b4:	0000                	unimp
    71b6:	0501                	addi	a0,a0,0
    71b8:	030c                	addi	a1,sp,384
    71ba:	00040903          	lb	s2,0(s0)
    71be:	0501                	addi	a0,a0,0
    71c0:	030e                	slli	t1,t1,0x3
    71c2:	097e                	slli	s2,s2,0x1f
    71c4:	0004                	0x4
    71c6:	0501                	addi	a0,a0,0
    71c8:	0609                	addi	a2,a2,2
    71ca:	04090203          	lb	tp,64(s2)
    71ce:	0100                	addi	s0,sp,128
    71d0:	0c05                	addi	s8,s8,1
    71d2:	0306                	slli	t1,t1,0x1
    71d4:	0900                	addi	s0,sp,144
    71d6:	0004                	0x4
    71d8:	0501                	addi	a0,a0,0
    71da:	060d                	addi	a2,a2,3
    71dc:	04090203          	lb	tp,64(s2)
    71e0:	0100                	addi	s0,sp,128
    71e2:	00090103          	lb	sp,0(s2)
    71e6:	0100                	addi	s0,sp,128
    71e8:	0905                	addi	s2,s2,1
    71ea:	00090403          	lb	s0,0(s2)
    71ee:	0100                	addi	s0,sp,128
    71f0:	00090103          	lb	sp,0(s2)
    71f4:	0100                	addi	s0,sp,128
    71f6:	0d05                	addi	s10,s10,1
    71f8:	00090103          	lb	sp,0(s2)
    71fc:	0100                	addi	s0,sp,128
    71fe:	1105                	addi	sp,sp,-31
    7200:	0306                	slli	t1,t1,0x1
    7202:	0900                	addi	s0,sp,144
    7204:	0000                	unimp
    7206:	0501                	addi	a0,a0,0
    7208:	0609                	addi	a2,a2,2
    720a:	14097403          	0x14097403
    720e:	0100                	addi	s0,sp,128
    7210:	00090103          	lb	sp,0(s2)
    7214:	0100                	addi	s0,sp,128
    7216:	2205                	jal	7336 <_Balloc+0xae>
    7218:	0306                	slli	t1,t1,0x1
    721a:	097f                	0x97f
    721c:	0000                	unimp
    721e:	0501                	addi	a0,a0,0
    7220:	030c                	addi	a1,sp,384
    7222:	00040903          	lb	s2,0(s0)
    7226:	0501                	addi	a0,a0,0
    7228:	030e                	slli	t1,t1,0x3
    722a:	097e                	slli	s2,s2,0x1f
    722c:	0004                	0x4
    722e:	0501                	addi	a0,a0,0
    7230:	0609                	addi	a2,a2,2
    7232:	04090203          	lb	tp,64(s2)
    7236:	0100                	addi	s0,sp,128
    7238:	0c05                	addi	s8,s8,1
    723a:	0306                	slli	t1,t1,0x1
    723c:	0900                	addi	s0,sp,144
    723e:	0004                	0x4
    7240:	0501                	addi	a0,a0,0
    7242:	060d                	addi	a2,a2,3
    7244:	04090203          	lb	tp,64(s2)
    7248:	0100                	addi	s0,sp,128
    724a:	00090103          	lb	sp,0(s2)
    724e:	0100                	addi	s0,sp,128
    7250:	0905                	addi	s2,s2,1
    7252:	00090403          	lb	s0,0(s2)
    7256:	0100                	addi	s0,sp,128
    7258:	00090103          	lb	sp,0(s2)
    725c:	0100                	addi	s0,sp,128
    725e:	0d05                	addi	s10,s10,1
    7260:	00090103          	lb	sp,0(s2)
    7264:	0100                	addi	s0,sp,128
    7266:	1105                	addi	sp,sp,-31
    7268:	0306                	slli	t1,t1,0x1
    726a:	0900                	addi	s0,sp,144
    726c:	0000                	unimp
    726e:	0501                	addi	a0,a0,0
    7270:	0609                	addi	a2,a2,2
    7272:	14097403          	0x14097403
    7276:	0100                	addi	s0,sp,128
    7278:	00090103          	lb	sp,0(s2)
    727c:	0100                	addi	s0,sp,128
    727e:	2205                	jal	739e <_Bfree+0x2a>
    7280:	0306                	slli	t1,t1,0x1
    7282:	097f                	0x97f
    7284:	0000                	unimp
    7286:	0501                	addi	a0,a0,0
    7288:	030c                	addi	a1,sp,384
    728a:	00040903          	lb	s2,0(s0)
    728e:	0501                	addi	a0,a0,0
    7290:	030e                	slli	t1,t1,0x3
    7292:	097e                	slli	s2,s2,0x1f
    7294:	0004                	0x4
    7296:	0501                	addi	a0,a0,0
    7298:	0609                	addi	a2,a2,2
    729a:	04090203          	lb	tp,64(s2)
    729e:	0100                	addi	s0,sp,128
    72a0:	0c05                	addi	s8,s8,1
    72a2:	0306                	slli	t1,t1,0x1
    72a4:	0900                	addi	s0,sp,144
    72a6:	0004                	0x4
    72a8:	0501                	addi	a0,a0,0
    72aa:	060d                	addi	a2,a2,3
    72ac:	04090203          	lb	tp,64(s2)
    72b0:	0100                	addi	s0,sp,128
    72b2:	00090103          	lb	sp,0(s2)
    72b6:	0100                	addi	s0,sp,128
    72b8:	0905                	addi	s2,s2,1
    72ba:	00090403          	lb	s0,0(s2)
    72be:	0100                	addi	s0,sp,128
    72c0:	00090103          	lb	sp,0(s2)
    72c4:	0100                	addi	s0,sp,128
    72c6:	0d05                	addi	s10,s10,1
    72c8:	00090103          	lb	sp,0(s2)
    72cc:	0100                	addi	s0,sp,128
    72ce:	1105                	addi	sp,sp,-31
    72d0:	0306                	slli	t1,t1,0x1
    72d2:	0900                	addi	s0,sp,144
    72d4:	0000                	unimp
    72d6:	0501                	addi	a0,a0,0
    72d8:	0609                	addi	a2,a2,2
    72da:	14097403          	0x14097403
    72de:	0100                	addi	s0,sp,128
    72e0:	00090103          	lb	sp,0(s2)
    72e4:	0100                	addi	s0,sp,128
    72e6:	2205                	jal	7406 <__multadd+0x1e>
    72e8:	0306                	slli	t1,t1,0x1
    72ea:	097f                	0x97f
    72ec:	0000                	unimp
    72ee:	0501                	addi	a0,a0,0
    72f0:	030c                	addi	a1,sp,384
    72f2:	00040903          	lb	s2,0(s0)
    72f6:	0501                	addi	a0,a0,0
    72f8:	030e                	slli	t1,t1,0x3
    72fa:	097e                	slli	s2,s2,0x1f
    72fc:	0004                	0x4
    72fe:	0501                	addi	a0,a0,0
    7300:	0609                	addi	a2,a2,2
    7302:	04090203          	lb	tp,64(s2)
    7306:	0100                	addi	s0,sp,128
    7308:	0c05                	addi	s8,s8,1
    730a:	0306                	slli	t1,t1,0x1
    730c:	0900                	addi	s0,sp,144
    730e:	0004                	0x4
    7310:	0501                	addi	a0,a0,0
    7312:	060d                	addi	a2,a2,3
    7314:	04090203          	lb	tp,64(s2)
    7318:	0100                	addi	s0,sp,128
    731a:	00090103          	lb	sp,0(s2)
    731e:	0100                	addi	s0,sp,128
    7320:	0905                	addi	s2,s2,1
    7322:	00090403          	lb	s0,0(s2)
    7326:	0100                	addi	s0,sp,128
    7328:	00090103          	lb	sp,0(s2)
    732c:	0100                	addi	s0,sp,128
    732e:	0d05                	addi	s10,s10,1
    7330:	00090103          	lb	sp,0(s2)
    7334:	0100                	addi	s0,sp,128
    7336:	1105                	addi	sp,sp,-31
    7338:	0306                	slli	t1,t1,0x1
    733a:	0900                	addi	s0,sp,144
    733c:	0000                	unimp
    733e:	0501                	addi	a0,a0,0
    7340:	0609                	addi	a2,a2,2
    7342:	14097403          	0x14097403
    7346:	0100                	addi	s0,sp,128
    7348:	00090103          	lb	sp,0(s2)
    734c:	0100                	addi	s0,sp,128
    734e:	2205                	jal	746e <__multadd+0x86>
    7350:	0306                	slli	t1,t1,0x1
    7352:	097f                	0x97f
    7354:	0000                	unimp
    7356:	0501                	addi	a0,a0,0
    7358:	030c                	addi	a1,sp,384
    735a:	00040903          	lb	s2,0(s0)
    735e:	0501                	addi	a0,a0,0
    7360:	030e                	slli	t1,t1,0x3
    7362:	097e                	slli	s2,s2,0x1f
    7364:	0004                	0x4
    7366:	0501                	addi	a0,a0,0
    7368:	0609                	addi	a2,a2,2
    736a:	04090203          	lb	tp,64(s2)
    736e:	0100                	addi	s0,sp,128
    7370:	0c05                	addi	s8,s8,1
    7372:	0306                	slli	t1,t1,0x1
    7374:	0900                	addi	s0,sp,144
    7376:	0004                	0x4
    7378:	0501                	addi	a0,a0,0
    737a:	060d                	addi	a2,a2,3
    737c:	04090203          	lb	tp,64(s2)
    7380:	0100                	addi	s0,sp,128
    7382:	00090103          	lb	sp,0(s2)
    7386:	0100                	addi	s0,sp,128
    7388:	0905                	addi	s2,s2,1
    738a:	00090403          	lb	s0,0(s2)
    738e:	0100                	addi	s0,sp,128
    7390:	00090103          	lb	sp,0(s2)
    7394:	0100                	addi	s0,sp,128
    7396:	0d05                	addi	s10,s10,1
    7398:	00090103          	lb	sp,0(s2)
    739c:	0100                	addi	s0,sp,128
    739e:	1105                	addi	sp,sp,-31
    73a0:	0306                	slli	t1,t1,0x1
    73a2:	0900                	addi	s0,sp,144
    73a4:	0000                	unimp
    73a6:	0501                	addi	a0,a0,0
    73a8:	0609                	addi	a2,a2,2
    73aa:	14097403          	0x14097403
    73ae:	0100                	addi	s0,sp,128
    73b0:	00090103          	lb	sp,0(s2)
    73b4:	0100                	addi	s0,sp,128
    73b6:	2205                	jal	74d6 <__multadd+0xee>
    73b8:	0306                	slli	t1,t1,0x1
    73ba:	097f                	0x97f
    73bc:	0000                	unimp
    73be:	0501                	addi	a0,a0,0
    73c0:	030c                	addi	a1,sp,384
    73c2:	00040903          	lb	s2,0(s0)
    73c6:	0501                	addi	a0,a0,0
    73c8:	030e                	slli	t1,t1,0x3
    73ca:	097e                	slli	s2,s2,0x1f
    73cc:	0004                	0x4
    73ce:	0501                	addi	a0,a0,0
    73d0:	0609                	addi	a2,a2,2
    73d2:	04090203          	lb	tp,64(s2)
    73d6:	0100                	addi	s0,sp,128
    73d8:	0c05                	addi	s8,s8,1
    73da:	0306                	slli	t1,t1,0x1
    73dc:	0900                	addi	s0,sp,144
    73de:	0004                	0x4
    73e0:	0501                	addi	a0,a0,0
    73e2:	060d                	addi	a2,a2,3
    73e4:	04090203          	lb	tp,64(s2)
    73e8:	0100                	addi	s0,sp,128
    73ea:	00090103          	lb	sp,0(s2)
    73ee:	0100                	addi	s0,sp,128
    73f0:	0905                	addi	s2,s2,1
    73f2:	00090403          	lb	s0,0(s2)
    73f6:	0100                	addi	s0,sp,128
    73f8:	00090103          	lb	sp,0(s2)
    73fc:	0100                	addi	s0,sp,128
    73fe:	0d05                	addi	s10,s10,1
    7400:	00090103          	lb	sp,0(s2)
    7404:	0100                	addi	s0,sp,128
    7406:	1105                	addi	sp,sp,-31
    7408:	0306                	slli	t1,t1,0x1
    740a:	0900                	addi	s0,sp,144
    740c:	0000                	unimp
    740e:	0501                	addi	a0,a0,0
    7410:	0609                	addi	a2,a2,2
    7412:	14097403          	0x14097403
    7416:	0100                	addi	s0,sp,128
    7418:	00090103          	lb	sp,0(s2)
    741c:	0100                	addi	s0,sp,128
    741e:	00090203          	lb	tp,0(s2)
    7422:	0100                	addi	s0,sp,128
    7424:	0c05                	addi	s8,s8,1
    7426:	0306                	slli	t1,t1,0x1
    7428:	0900                	addi	s0,sp,144
    742a:	0000                	unimp
    742c:	0501                	addi	a0,a0,0
    742e:	060d                	addi	a2,a2,3
    7430:	0c090203          	lb	tp,192(s2)
    7434:	0100                	addi	s0,sp,128
    7436:	00090103          	lb	sp,0(s2)
    743a:	0100                	addi	s0,sp,128
    743c:	0905                	addi	s2,s2,1
    743e:	00090403          	lb	s0,0(s2)
    7442:	0100                	addi	s0,sp,128
    7444:	00090103          	lb	sp,0(s2)
    7448:	0100                	addi	s0,sp,128
    744a:	0d05                	addi	s10,s10,1
    744c:	00090103          	lb	sp,0(s2)
    7450:	0100                	addi	s0,sp,128
    7452:	1105                	addi	sp,sp,-31
    7454:	0306                	slli	t1,t1,0x1
    7456:	0900                	addi	s0,sp,144
    7458:	0000                	unimp
    745a:	0501                	addi	a0,a0,0
    745c:	0605                	addi	a2,a2,1
    745e:	14090403          	lb	s0,320(s2)
    7462:	0100                	addi	s0,sp,128
    7464:	00090703          	lb	a4,0(s2)
    7468:	0100                	addi	s0,sp,128
    746a:	00090703          	lb	a4,0(s2)
    746e:	0100                	addi	s0,sp,128
    7470:	0105                	addi	sp,sp,1
    7472:	0306                	slli	t1,t1,0x1
    7474:	0901                	addi	s2,s2,0
    7476:	0000                	unimp
    7478:	0901                	addi	s2,s2,0
    747a:	0004                	0x4
    747c:	0100                	addi	s0,sp,128
    747e:	0501                	addi	a0,a0,0
    7480:	0001                	nop
    7482:	0205                	addi	tp,tp,1
    7484:	2ca0                	fld	fs0,88(s1)
    7486:	0000                	unimp
    7488:	0101cc03          	lbu	s8,16(gp) # 10013b0 <__global_pointer$+0x10>
    748c:	0505                	addi	a0,a0,1
    748e:	00090103          	lb	sp,0(s2)
    7492:	0100                	addi	s0,sp,128
    7494:	2205                	jal	75b4 <__lo0bits+0x54>
    7496:	0306                	slli	t1,t1,0x1
    7498:	095d                	addi	s2,s2,23
    749a:	0000                	unimp
    749c:	0501                	addi	a0,a0,0
    749e:	0915030b          	0x915030b
    74a2:	0004                	0x4
    74a4:	0501                	addi	a0,a0,0
    74a6:	030c                	addi	a1,sp,384
    74a8:	090e                	slli	s2,s2,0x3
    74aa:	0004                	0x4
    74ac:	0301                	addi	t1,t1,0
    74ae:	0960                	addi	s0,sp,156
    74b0:	0004                	0x4
    74b2:	0301                	addi	t1,t1,0
    74b4:	0920                	addi	s0,sp,152
    74b6:	0004                	0x4
    74b8:	0501                	addi	a0,a0,0
    74ba:	0605                	addi	a2,a2,1
    74bc:	04097203          	0x4097203
    74c0:	0100                	addi	s0,sp,128
    74c2:	00096703          	0x96703
    74c6:	0100                	addi	s0,sp,128
    74c8:	00090203          	lb	tp,0(s2)
    74cc:	0100                	addi	s0,sp,128
    74ce:	0905                	addi	s2,s2,1
    74d0:	00090203          	lb	tp,0(s2)
    74d4:	0100                	addi	s0,sp,128
    74d6:	00090103          	lb	sp,0(s2)
    74da:	0100                	addi	s0,sp,128
    74dc:	0e05                	addi	t3,t3,1
    74de:	0306                	slli	t1,t1,0x1
    74e0:	0900                	addi	s0,sp,144
    74e2:	0000                	unimp
    74e4:	0501                	addi	a0,a0,0
    74e6:	0609                	addi	a2,a2,2
    74e8:	04090203          	lb	tp,64(s2)
    74ec:	0100                	addi	s0,sp,128
    74ee:	0c05                	addi	s8,s8,1
    74f0:	0306                	slli	t1,t1,0x1
    74f2:	0900                	addi	s0,sp,144
    74f4:	0004                	0x4
    74f6:	0501                	addi	a0,a0,0
    74f8:	060d                	addi	a2,a2,3
    74fa:	04090203          	lb	tp,64(s2)
    74fe:	0100                	addi	s0,sp,128
    7500:	00090103          	lb	sp,0(s2)
    7504:	0100                	addi	s0,sp,128
    7506:	0905                	addi	s2,s2,1
    7508:	00090403          	lb	s0,0(s2)
    750c:	0100                	addi	s0,sp,128
    750e:	00090103          	lb	sp,0(s2)
    7512:	0100                	addi	s0,sp,128
    7514:	0d05                	addi	s10,s10,1
    7516:	00090103          	lb	sp,0(s2)
    751a:	0100                	addi	s0,sp,128
    751c:	1105                	addi	sp,sp,-31
    751e:	0306                	slli	t1,t1,0x1
    7520:	0900                	addi	s0,sp,144
    7522:	0000                	unimp
    7524:	0501                	addi	a0,a0,0
    7526:	0609                	addi	a2,a2,2
    7528:	14097403          	0x14097403
    752c:	0100                	addi	s0,sp,128
    752e:	00090103          	lb	sp,0(s2)
    7532:	0100                	addi	s0,sp,128
    7534:	2205                	jal	7654 <__multiply+0xc>
    7536:	0306                	slli	t1,t1,0x1
    7538:	097f                	0x97f
    753a:	0000                	unimp
    753c:	0501                	addi	a0,a0,0
    753e:	030c                	addi	a1,sp,384
    7540:	00040903          	lb	s2,0(s0)
    7544:	0501                	addi	a0,a0,0
    7546:	030e                	slli	t1,t1,0x3
    7548:	097e                	slli	s2,s2,0x1f
    754a:	0008                	0x8
    754c:	0501                	addi	a0,a0,0
    754e:	0609                	addi	a2,a2,2
    7550:	04090203          	lb	tp,64(s2)
    7554:	0100                	addi	s0,sp,128
    7556:	0c05                	addi	s8,s8,1
    7558:	0306                	slli	t1,t1,0x1
    755a:	0900                	addi	s0,sp,144
    755c:	0000                	unimp
    755e:	0501                	addi	a0,a0,0
    7560:	060d                	addi	a2,a2,3
    7562:	04090203          	lb	tp,64(s2)
    7566:	0100                	addi	s0,sp,128
    7568:	00090103          	lb	sp,0(s2)
    756c:	0100                	addi	s0,sp,128
    756e:	0905                	addi	s2,s2,1
    7570:	00090403          	lb	s0,0(s2)
    7574:	0100                	addi	s0,sp,128
    7576:	00090103          	lb	sp,0(s2)
    757a:	0100                	addi	s0,sp,128
    757c:	0d05                	addi	s10,s10,1
    757e:	00090103          	lb	sp,0(s2)
    7582:	0100                	addi	s0,sp,128
    7584:	1105                	addi	sp,sp,-31
    7586:	0306                	slli	t1,t1,0x1
    7588:	0900                	addi	s0,sp,144
    758a:	0000                	unimp
    758c:	0501                	addi	a0,a0,0
    758e:	0609                	addi	a2,a2,2
    7590:	14097403          	0x14097403
    7594:	0100                	addi	s0,sp,128
    7596:	00090103          	lb	sp,0(s2)
    759a:	0100                	addi	s0,sp,128
    759c:	2205                	jal	76bc <__multiply+0x74>
    759e:	0306                	slli	t1,t1,0x1
    75a0:	097f                	0x97f
    75a2:	0000                	unimp
    75a4:	0501                	addi	a0,a0,0
    75a6:	030c                	addi	a1,sp,384
    75a8:	00040903          	lb	s2,0(s0)
    75ac:	0501                	addi	a0,a0,0
    75ae:	030e                	slli	t1,t1,0x3
    75b0:	097e                	slli	s2,s2,0x1f
    75b2:	0004                	0x4
    75b4:	0501                	addi	a0,a0,0
    75b6:	0609                	addi	a2,a2,2
    75b8:	04090203          	lb	tp,64(s2)
    75bc:	0100                	addi	s0,sp,128
    75be:	0c05                	addi	s8,s8,1
    75c0:	0306                	slli	t1,t1,0x1
    75c2:	0900                	addi	s0,sp,144
    75c4:	0004                	0x4
    75c6:	0501                	addi	a0,a0,0
    75c8:	060d                	addi	a2,a2,3
    75ca:	04090203          	lb	tp,64(s2)
    75ce:	0100                	addi	s0,sp,128
    75d0:	00090103          	lb	sp,0(s2)
    75d4:	0100                	addi	s0,sp,128
    75d6:	0905                	addi	s2,s2,1
    75d8:	00090403          	lb	s0,0(s2)
    75dc:	0100                	addi	s0,sp,128
    75de:	00090103          	lb	sp,0(s2)
    75e2:	0100                	addi	s0,sp,128
    75e4:	0d05                	addi	s10,s10,1
    75e6:	00090103          	lb	sp,0(s2)
    75ea:	0100                	addi	s0,sp,128
    75ec:	1105                	addi	sp,sp,-31
    75ee:	0306                	slli	t1,t1,0x1
    75f0:	0900                	addi	s0,sp,144
    75f2:	0000                	unimp
    75f4:	0501                	addi	a0,a0,0
    75f6:	0609                	addi	a2,a2,2
    75f8:	14097403          	0x14097403
    75fc:	0100                	addi	s0,sp,128
    75fe:	00090103          	lb	sp,0(s2)
    7602:	0100                	addi	s0,sp,128
    7604:	2205                	jal	7724 <__multiply+0xdc>
    7606:	0306                	slli	t1,t1,0x1
    7608:	097f                	0x97f
    760a:	0000                	unimp
    760c:	0501                	addi	a0,a0,0
    760e:	030c                	addi	a1,sp,384
    7610:	00040903          	lb	s2,0(s0)
    7614:	0501                	addi	a0,a0,0
    7616:	030e                	slli	t1,t1,0x3
    7618:	097e                	slli	s2,s2,0x1f
    761a:	0004                	0x4
    761c:	0501                	addi	a0,a0,0
    761e:	0609                	addi	a2,a2,2
    7620:	04090203          	lb	tp,64(s2)
    7624:	0100                	addi	s0,sp,128
    7626:	0c05                	addi	s8,s8,1
    7628:	0306                	slli	t1,t1,0x1
    762a:	0900                	addi	s0,sp,144
    762c:	0004                	0x4
    762e:	0501                	addi	a0,a0,0
    7630:	060d                	addi	a2,a2,3
    7632:	04090203          	lb	tp,64(s2)
    7636:	0100                	addi	s0,sp,128
    7638:	00090103          	lb	sp,0(s2)
    763c:	0100                	addi	s0,sp,128
    763e:	0905                	addi	s2,s2,1
    7640:	00090403          	lb	s0,0(s2)
    7644:	0100                	addi	s0,sp,128
    7646:	00090103          	lb	sp,0(s2)
    764a:	0100                	addi	s0,sp,128
    764c:	0d05                	addi	s10,s10,1
    764e:	00090103          	lb	sp,0(s2)
    7652:	0100                	addi	s0,sp,128
    7654:	1105                	addi	sp,sp,-31
    7656:	0306                	slli	t1,t1,0x1
    7658:	0900                	addi	s0,sp,144
    765a:	0000                	unimp
    765c:	0501                	addi	a0,a0,0
    765e:	0609                	addi	a2,a2,2
    7660:	14097403          	0x14097403
    7664:	0100                	addi	s0,sp,128
    7666:	00090103          	lb	sp,0(s2)
    766a:	0100                	addi	s0,sp,128
    766c:	2205                	jal	778c <__multiply+0x144>
    766e:	0306                	slli	t1,t1,0x1
    7670:	097f                	0x97f
    7672:	0000                	unimp
    7674:	0501                	addi	a0,a0,0
    7676:	030c                	addi	a1,sp,384
    7678:	00040903          	lb	s2,0(s0)
    767c:	0501                	addi	a0,a0,0
    767e:	030e                	slli	t1,t1,0x3
    7680:	097e                	slli	s2,s2,0x1f
    7682:	0004                	0x4
    7684:	0501                	addi	a0,a0,0
    7686:	0609                	addi	a2,a2,2
    7688:	04090203          	lb	tp,64(s2)
    768c:	0100                	addi	s0,sp,128
    768e:	0c05                	addi	s8,s8,1
    7690:	0306                	slli	t1,t1,0x1
    7692:	0900                	addi	s0,sp,144
    7694:	0004                	0x4
    7696:	0501                	addi	a0,a0,0
    7698:	060d                	addi	a2,a2,3
    769a:	04090203          	lb	tp,64(s2)
    769e:	0100                	addi	s0,sp,128
    76a0:	00090103          	lb	sp,0(s2)
    76a4:	0100                	addi	s0,sp,128
    76a6:	0905                	addi	s2,s2,1
    76a8:	00090403          	lb	s0,0(s2)
    76ac:	0100                	addi	s0,sp,128
    76ae:	00090103          	lb	sp,0(s2)
    76b2:	0100                	addi	s0,sp,128
    76b4:	0d05                	addi	s10,s10,1
    76b6:	00090103          	lb	sp,0(s2)
    76ba:	0100                	addi	s0,sp,128
    76bc:	1105                	addi	sp,sp,-31
    76be:	0306                	slli	t1,t1,0x1
    76c0:	0900                	addi	s0,sp,144
    76c2:	0000                	unimp
    76c4:	0501                	addi	a0,a0,0
    76c6:	0609                	addi	a2,a2,2
    76c8:	14097403          	0x14097403
    76cc:	0100                	addi	s0,sp,128
    76ce:	00090103          	lb	sp,0(s2)
    76d2:	0100                	addi	s0,sp,128
    76d4:	2205                	jal	77f4 <__multiply+0x1ac>
    76d6:	0306                	slli	t1,t1,0x1
    76d8:	097f                	0x97f
    76da:	0000                	unimp
    76dc:	0501                	addi	a0,a0,0
    76de:	030c                	addi	a1,sp,384
    76e0:	00040903          	lb	s2,0(s0)
    76e4:	0501                	addi	a0,a0,0
    76e6:	030e                	slli	t1,t1,0x3
    76e8:	097e                	slli	s2,s2,0x1f
    76ea:	0004                	0x4
    76ec:	0501                	addi	a0,a0,0
    76ee:	0609                	addi	a2,a2,2
    76f0:	04090203          	lb	tp,64(s2)
    76f4:	0100                	addi	s0,sp,128
    76f6:	0c05                	addi	s8,s8,1
    76f8:	0306                	slli	t1,t1,0x1
    76fa:	0900                	addi	s0,sp,144
    76fc:	0004                	0x4
    76fe:	0501                	addi	a0,a0,0
    7700:	060d                	addi	a2,a2,3
    7702:	04090203          	lb	tp,64(s2)
    7706:	0100                	addi	s0,sp,128
    7708:	00090103          	lb	sp,0(s2)
    770c:	0100                	addi	s0,sp,128
    770e:	0905                	addi	s2,s2,1
    7710:	00090403          	lb	s0,0(s2)
    7714:	0100                	addi	s0,sp,128
    7716:	00090103          	lb	sp,0(s2)
    771a:	0100                	addi	s0,sp,128
    771c:	0d05                	addi	s10,s10,1
    771e:	00090103          	lb	sp,0(s2)
    7722:	0100                	addi	s0,sp,128
    7724:	1105                	addi	sp,sp,-31
    7726:	0306                	slli	t1,t1,0x1
    7728:	0900                	addi	s0,sp,144
    772a:	0000                	unimp
    772c:	0501                	addi	a0,a0,0
    772e:	0609                	addi	a2,a2,2
    7730:	14097403          	0x14097403
    7734:	0100                	addi	s0,sp,128
    7736:	00090103          	lb	sp,0(s2)
    773a:	0100                	addi	s0,sp,128
    773c:	2205                	jal	785c <__pow5mult+0x50>
    773e:	0306                	slli	t1,t1,0x1
    7740:	097f                	0x97f
    7742:	0000                	unimp
    7744:	0501                	addi	a0,a0,0
    7746:	030c                	addi	a1,sp,384
    7748:	00040903          	lb	s2,0(s0)
    774c:	0501                	addi	a0,a0,0
    774e:	030e                	slli	t1,t1,0x3
    7750:	097e                	slli	s2,s2,0x1f
    7752:	0004                	0x4
    7754:	0501                	addi	a0,a0,0
    7756:	0609                	addi	a2,a2,2
    7758:	04090203          	lb	tp,64(s2)
    775c:	0100                	addi	s0,sp,128
    775e:	0c05                	addi	s8,s8,1
    7760:	0306                	slli	t1,t1,0x1
    7762:	0900                	addi	s0,sp,144
    7764:	0004                	0x4
    7766:	0501                	addi	a0,a0,0
    7768:	060d                	addi	a2,a2,3
    776a:	04090203          	lb	tp,64(s2)
    776e:	0100                	addi	s0,sp,128
    7770:	00090103          	lb	sp,0(s2)
    7774:	0100                	addi	s0,sp,128
    7776:	0905                	addi	s2,s2,1
    7778:	00090403          	lb	s0,0(s2)
    777c:	0100                	addi	s0,sp,128
    777e:	00090103          	lb	sp,0(s2)
    7782:	0100                	addi	s0,sp,128
    7784:	0d05                	addi	s10,s10,1
    7786:	00090103          	lb	sp,0(s2)
    778a:	0100                	addi	s0,sp,128
    778c:	1105                	addi	sp,sp,-31
    778e:	0306                	slli	t1,t1,0x1
    7790:	0900                	addi	s0,sp,144
    7792:	0000                	unimp
    7794:	0501                	addi	a0,a0,0
    7796:	0609                	addi	a2,a2,2
    7798:	14097403          	0x14097403
    779c:	0100                	addi	s0,sp,128
    779e:	00090103          	lb	sp,0(s2)
    77a2:	0100                	addi	s0,sp,128
    77a4:	00090203          	lb	tp,0(s2)
    77a8:	0100                	addi	s0,sp,128
    77aa:	0c05                	addi	s8,s8,1
    77ac:	0306                	slli	t1,t1,0x1
    77ae:	0900                	addi	s0,sp,144
    77b0:	0000                	unimp
    77b2:	0501                	addi	a0,a0,0
    77b4:	060d                	addi	a2,a2,3
    77b6:	0c090203          	lb	tp,192(s2)
    77ba:	0100                	addi	s0,sp,128
    77bc:	00090103          	lb	sp,0(s2)
    77c0:	0100                	addi	s0,sp,128
    77c2:	0905                	addi	s2,s2,1
    77c4:	00090403          	lb	s0,0(s2)
    77c8:	0100                	addi	s0,sp,128
    77ca:	00090103          	lb	sp,0(s2)
    77ce:	0100                	addi	s0,sp,128
    77d0:	0d05                	addi	s10,s10,1
    77d2:	00090103          	lb	sp,0(s2)
    77d6:	0100                	addi	s0,sp,128
    77d8:	1105                	addi	sp,sp,-31
    77da:	0306                	slli	t1,t1,0x1
    77dc:	0900                	addi	s0,sp,144
    77de:	0000                	unimp
    77e0:	0501                	addi	a0,a0,0
    77e2:	0605                	addi	a2,a2,1
    77e4:	14090403          	lb	s0,320(s2)
    77e8:	0100                	addi	s0,sp,128
    77ea:	00090603          	lb	a2,0(s2)
    77ee:	0100                	addi	s0,sp,128
    77f0:	0b05                	addi	s6,s6,1
    77f2:	0306                	slli	t1,t1,0x1
    77f4:	0900                	addi	s0,sp,144
    77f6:	0000                	unimp
    77f8:	0501                	addi	a0,a0,0
    77fa:	0322                	slli	t1,t1,0x8
    77fc:	096a                	slli	s2,s2,0x1a
    77fe:	0004                	0x4
    7800:	0501                	addi	a0,a0,0
    7802:	030c                	addi	a1,sp,384
    7804:	00040903          	lb	s2,0(s0)
    7808:	0501                	addi	a0,a0,0
    780a:	0913030b          	0x913030b
    780e:	0004                	0x4
    7810:	0501                	addi	a0,a0,0
    7812:	0609                	addi	a2,a2,2
    7814:	04096a03          	0x4096a03
    7818:	0100                	addi	s0,sp,128
    781a:	00090103          	lb	sp,0(s2)
    781e:	0100                	addi	s0,sp,128
    7820:	0e05                	addi	t3,t3,1
    7822:	0306                	slli	t1,t1,0x1
    7824:	0900                	addi	s0,sp,144
    7826:	0000                	unimp
    7828:	0501                	addi	a0,a0,0
    782a:	0609                	addi	a2,a2,2
    782c:	04090203          	lb	tp,64(s2)
    7830:	0100                	addi	s0,sp,128
    7832:	0c05                	addi	s8,s8,1
    7834:	0306                	slli	t1,t1,0x1
    7836:	0900                	addi	s0,sp,144
    7838:	0004                	0x4
    783a:	0501                	addi	a0,a0,0
    783c:	060d                	addi	a2,a2,3
    783e:	04090203          	lb	tp,64(s2)
    7842:	0100                	addi	s0,sp,128
    7844:	00090103          	lb	sp,0(s2)
    7848:	0100                	addi	s0,sp,128
    784a:	0905                	addi	s2,s2,1
    784c:	00090403          	lb	s0,0(s2)
    7850:	0100                	addi	s0,sp,128
    7852:	00090103          	lb	sp,0(s2)
    7856:	0100                	addi	s0,sp,128
    7858:	0d05                	addi	s10,s10,1
    785a:	00090103          	lb	sp,0(s2)
    785e:	0100                	addi	s0,sp,128
    7860:	1105                	addi	sp,sp,-31
    7862:	0306                	slli	t1,t1,0x1
    7864:	0900                	addi	s0,sp,144
    7866:	0000                	unimp
    7868:	0501                	addi	a0,a0,0
    786a:	0609                	addi	a2,a2,2
    786c:	14097403          	0x14097403
    7870:	0100                	addi	s0,sp,128
    7872:	00090103          	lb	sp,0(s2)
    7876:	0100                	addi	s0,sp,128
    7878:	2205                	jal	7998 <__lshift+0x50>
    787a:	0306                	slli	t1,t1,0x1
    787c:	097f                	0x97f
    787e:	0000                	unimp
    7880:	0501                	addi	a0,a0,0
    7882:	030c                	addi	a1,sp,384
    7884:	00040903          	lb	s2,0(s0)
    7888:	0501                	addi	a0,a0,0
    788a:	030e                	slli	t1,t1,0x3
    788c:	097e                	slli	s2,s2,0x1f
    788e:	0004                	0x4
    7890:	0501                	addi	a0,a0,0
    7892:	0609                	addi	a2,a2,2
    7894:	04090203          	lb	tp,64(s2)
    7898:	0100                	addi	s0,sp,128
    789a:	0c05                	addi	s8,s8,1
    789c:	0306                	slli	t1,t1,0x1
    789e:	0900                	addi	s0,sp,144
    78a0:	0004                	0x4
    78a2:	0501                	addi	a0,a0,0
    78a4:	060d                	addi	a2,a2,3
    78a6:	04090203          	lb	tp,64(s2)
    78aa:	0100                	addi	s0,sp,128
    78ac:	00090103          	lb	sp,0(s2)
    78b0:	0100                	addi	s0,sp,128
    78b2:	0905                	addi	s2,s2,1
    78b4:	00090403          	lb	s0,0(s2)
    78b8:	0100                	addi	s0,sp,128
    78ba:	00090103          	lb	sp,0(s2)
    78be:	0100                	addi	s0,sp,128
    78c0:	0d05                	addi	s10,s10,1
    78c2:	00090103          	lb	sp,0(s2)
    78c6:	0100                	addi	s0,sp,128
    78c8:	1105                	addi	sp,sp,-31
    78ca:	0306                	slli	t1,t1,0x1
    78cc:	0900                	addi	s0,sp,144
    78ce:	0000                	unimp
    78d0:	0501                	addi	a0,a0,0
    78d2:	0609                	addi	a2,a2,2
    78d4:	14097403          	0x14097403
    78d8:	0100                	addi	s0,sp,128
    78da:	00090103          	lb	sp,0(s2)
    78de:	0100                	addi	s0,sp,128
    78e0:	2205                	jal	7a00 <__lshift+0xb8>
    78e2:	0306                	slli	t1,t1,0x1
    78e4:	097f                	0x97f
    78e6:	0000                	unimp
    78e8:	0501                	addi	a0,a0,0
    78ea:	030c                	addi	a1,sp,384
    78ec:	00040903          	lb	s2,0(s0)
    78f0:	0501                	addi	a0,a0,0
    78f2:	030e                	slli	t1,t1,0x3
    78f4:	097e                	slli	s2,s2,0x1f
    78f6:	0004                	0x4
    78f8:	0501                	addi	a0,a0,0
    78fa:	0609                	addi	a2,a2,2
    78fc:	04090203          	lb	tp,64(s2)
    7900:	0100                	addi	s0,sp,128
    7902:	0c05                	addi	s8,s8,1
    7904:	0306                	slli	t1,t1,0x1
    7906:	0900                	addi	s0,sp,144
    7908:	0004                	0x4
    790a:	0501                	addi	a0,a0,0
    790c:	060d                	addi	a2,a2,3
    790e:	04090203          	lb	tp,64(s2)
    7912:	0100                	addi	s0,sp,128
    7914:	00090103          	lb	sp,0(s2)
    7918:	0100                	addi	s0,sp,128
    791a:	0905                	addi	s2,s2,1
    791c:	00090403          	lb	s0,0(s2)
    7920:	0100                	addi	s0,sp,128
    7922:	00090103          	lb	sp,0(s2)
    7926:	0100                	addi	s0,sp,128
    7928:	0d05                	addi	s10,s10,1
    792a:	00090103          	lb	sp,0(s2)
    792e:	0100                	addi	s0,sp,128
    7930:	1105                	addi	sp,sp,-31
    7932:	0306                	slli	t1,t1,0x1
    7934:	0900                	addi	s0,sp,144
    7936:	0000                	unimp
    7938:	0501                	addi	a0,a0,0
    793a:	0609                	addi	a2,a2,2
    793c:	14097403          	0x14097403
    7940:	0100                	addi	s0,sp,128
    7942:	00090103          	lb	sp,0(s2)
    7946:	0100                	addi	s0,sp,128
    7948:	2205                	jal	7a68 <__lshift+0x120>
    794a:	0306                	slli	t1,t1,0x1
    794c:	097f                	0x97f
    794e:	0000                	unimp
    7950:	0501                	addi	a0,a0,0
    7952:	030c                	addi	a1,sp,384
    7954:	00040903          	lb	s2,0(s0)
    7958:	0501                	addi	a0,a0,0
    795a:	030e                	slli	t1,t1,0x3
    795c:	097e                	slli	s2,s2,0x1f
    795e:	0004                	0x4
    7960:	0501                	addi	a0,a0,0
    7962:	0609                	addi	a2,a2,2
    7964:	04090203          	lb	tp,64(s2)
    7968:	0100                	addi	s0,sp,128
    796a:	0c05                	addi	s8,s8,1
    796c:	0306                	slli	t1,t1,0x1
    796e:	0900                	addi	s0,sp,144
    7970:	0004                	0x4
    7972:	0501                	addi	a0,a0,0
    7974:	060d                	addi	a2,a2,3
    7976:	04090203          	lb	tp,64(s2)
    797a:	0100                	addi	s0,sp,128
    797c:	00090103          	lb	sp,0(s2)
    7980:	0100                	addi	s0,sp,128
    7982:	0905                	addi	s2,s2,1
    7984:	00090403          	lb	s0,0(s2)
    7988:	0100                	addi	s0,sp,128
    798a:	00090103          	lb	sp,0(s2)
    798e:	0100                	addi	s0,sp,128
    7990:	0d05                	addi	s10,s10,1
    7992:	00090103          	lb	sp,0(s2)
    7996:	0100                	addi	s0,sp,128
    7998:	1105                	addi	sp,sp,-31
    799a:	0306                	slli	t1,t1,0x1
    799c:	0900                	addi	s0,sp,144
    799e:	0000                	unimp
    79a0:	0501                	addi	a0,a0,0
    79a2:	0609                	addi	a2,a2,2
    79a4:	14097403          	0x14097403
    79a8:	0100                	addi	s0,sp,128
    79aa:	00090103          	lb	sp,0(s2)
    79ae:	0100                	addi	s0,sp,128
    79b0:	2205                	jal	7ad0 <__mcmp+0x44>
    79b2:	0306                	slli	t1,t1,0x1
    79b4:	097f                	0x97f
    79b6:	0000                	unimp
    79b8:	0501                	addi	a0,a0,0
    79ba:	030c                	addi	a1,sp,384
    79bc:	00040903          	lb	s2,0(s0)
    79c0:	0501                	addi	a0,a0,0
    79c2:	030e                	slli	t1,t1,0x3
    79c4:	097e                	slli	s2,s2,0x1f
    79c6:	0004                	0x4
    79c8:	0501                	addi	a0,a0,0
    79ca:	0609                	addi	a2,a2,2
    79cc:	04090203          	lb	tp,64(s2)
    79d0:	0100                	addi	s0,sp,128
    79d2:	0c05                	addi	s8,s8,1
    79d4:	0306                	slli	t1,t1,0x1
    79d6:	0900                	addi	s0,sp,144
    79d8:	0004                	0x4
    79da:	0501                	addi	a0,a0,0
    79dc:	060d                	addi	a2,a2,3
    79de:	04090203          	lb	tp,64(s2)
    79e2:	0100                	addi	s0,sp,128
    79e4:	00090103          	lb	sp,0(s2)
    79e8:	0100                	addi	s0,sp,128
    79ea:	0905                	addi	s2,s2,1
    79ec:	00090403          	lb	s0,0(s2)
    79f0:	0100                	addi	s0,sp,128
    79f2:	00090103          	lb	sp,0(s2)
    79f6:	0100                	addi	s0,sp,128
    79f8:	0d05                	addi	s10,s10,1
    79fa:	00090103          	lb	sp,0(s2)
    79fe:	0100                	addi	s0,sp,128
    7a00:	1105                	addi	sp,sp,-31
    7a02:	0306                	slli	t1,t1,0x1
    7a04:	0900                	addi	s0,sp,144
    7a06:	0000                	unimp
    7a08:	0501                	addi	a0,a0,0
    7a0a:	0609                	addi	a2,a2,2
    7a0c:	14097403          	0x14097403
    7a10:	0100                	addi	s0,sp,128
    7a12:	00090103          	lb	sp,0(s2)
    7a16:	0100                	addi	s0,sp,128
    7a18:	2205                	jal	7b38 <__mdiff+0x58>
    7a1a:	0306                	slli	t1,t1,0x1
    7a1c:	097f                	0x97f
    7a1e:	0000                	unimp
    7a20:	0501                	addi	a0,a0,0
    7a22:	030c                	addi	a1,sp,384
    7a24:	00040903          	lb	s2,0(s0)
    7a28:	0501                	addi	a0,a0,0
    7a2a:	030e                	slli	t1,t1,0x3
    7a2c:	097e                	slli	s2,s2,0x1f
    7a2e:	0004                	0x4
    7a30:	0501                	addi	a0,a0,0
    7a32:	0609                	addi	a2,a2,2
    7a34:	04090203          	lb	tp,64(s2)
    7a38:	0100                	addi	s0,sp,128
    7a3a:	0c05                	addi	s8,s8,1
    7a3c:	0306                	slli	t1,t1,0x1
    7a3e:	0900                	addi	s0,sp,144
    7a40:	0004                	0x4
    7a42:	0501                	addi	a0,a0,0
    7a44:	060d                	addi	a2,a2,3
    7a46:	04090203          	lb	tp,64(s2)
    7a4a:	0100                	addi	s0,sp,128
    7a4c:	00090103          	lb	sp,0(s2)
    7a50:	0100                	addi	s0,sp,128
    7a52:	0905                	addi	s2,s2,1
    7a54:	00090403          	lb	s0,0(s2)
    7a58:	0100                	addi	s0,sp,128
    7a5a:	00090103          	lb	sp,0(s2)
    7a5e:	0100                	addi	s0,sp,128
    7a60:	0d05                	addi	s10,s10,1
    7a62:	00090103          	lb	sp,0(s2)
    7a66:	0100                	addi	s0,sp,128
    7a68:	1105                	addi	sp,sp,-31
    7a6a:	0306                	slli	t1,t1,0x1
    7a6c:	0900                	addi	s0,sp,144
    7a6e:	0000                	unimp
    7a70:	0501                	addi	a0,a0,0
    7a72:	0609                	addi	a2,a2,2
    7a74:	14097403          	0x14097403
    7a78:	0100                	addi	s0,sp,128
    7a7a:	00090103          	lb	sp,0(s2)
    7a7e:	0100                	addi	s0,sp,128
    7a80:	2205                	jal	7ba0 <__mdiff+0xc0>
    7a82:	0306                	slli	t1,t1,0x1
    7a84:	097f                	0x97f
    7a86:	0000                	unimp
    7a88:	0501                	addi	a0,a0,0
    7a8a:	030c                	addi	a1,sp,384
    7a8c:	00040903          	lb	s2,0(s0)
    7a90:	0501                	addi	a0,a0,0
    7a92:	030e                	slli	t1,t1,0x3
    7a94:	097e                	slli	s2,s2,0x1f
    7a96:	0004                	0x4
    7a98:	0501                	addi	a0,a0,0
    7a9a:	0609                	addi	a2,a2,2
    7a9c:	04090203          	lb	tp,64(s2)
    7aa0:	0100                	addi	s0,sp,128
    7aa2:	0c05                	addi	s8,s8,1
    7aa4:	0306                	slli	t1,t1,0x1
    7aa6:	0900                	addi	s0,sp,144
    7aa8:	0004                	0x4
    7aaa:	0501                	addi	a0,a0,0
    7aac:	060d                	addi	a2,a2,3
    7aae:	04090203          	lb	tp,64(s2)
    7ab2:	0100                	addi	s0,sp,128
    7ab4:	00090103          	lb	sp,0(s2)
    7ab8:	0100                	addi	s0,sp,128
    7aba:	0905                	addi	s2,s2,1
    7abc:	00090403          	lb	s0,0(s2)
    7ac0:	0100                	addi	s0,sp,128
    7ac2:	00090103          	lb	sp,0(s2)
    7ac6:	0100                	addi	s0,sp,128
    7ac8:	0d05                	addi	s10,s10,1
    7aca:	00090103          	lb	sp,0(s2)
    7ace:	0100                	addi	s0,sp,128
    7ad0:	1105                	addi	sp,sp,-31
    7ad2:	0306                	slli	t1,t1,0x1
    7ad4:	0900                	addi	s0,sp,144
    7ad6:	0000                	unimp
    7ad8:	0501                	addi	a0,a0,0
    7ada:	0609                	addi	a2,a2,2
    7adc:	14097403          	0x14097403
    7ae0:	0100                	addi	s0,sp,128
    7ae2:	00090103          	lb	sp,0(s2)
    7ae6:	0100                	addi	s0,sp,128
    7ae8:	00090203          	lb	tp,0(s2)
    7aec:	0100                	addi	s0,sp,128
    7aee:	0c05                	addi	s8,s8,1
    7af0:	0306                	slli	t1,t1,0x1
    7af2:	0900                	addi	s0,sp,144
    7af4:	0000                	unimp
    7af6:	0501                	addi	a0,a0,0
    7af8:	060d                	addi	a2,a2,3
    7afa:	0c090203          	lb	tp,192(s2)
    7afe:	0100                	addi	s0,sp,128
    7b00:	00090103          	lb	sp,0(s2)
    7b04:	0100                	addi	s0,sp,128
    7b06:	0905                	addi	s2,s2,1
    7b08:	00090403          	lb	s0,0(s2)
    7b0c:	0100                	addi	s0,sp,128
    7b0e:	00090103          	lb	sp,0(s2)
    7b12:	0100                	addi	s0,sp,128
    7b14:	0d05                	addi	s10,s10,1
    7b16:	00090103          	lb	sp,0(s2)
    7b1a:	0100                	addi	s0,sp,128
    7b1c:	1105                	addi	sp,sp,-31
    7b1e:	0306                	slli	t1,t1,0x1
    7b20:	0900                	addi	s0,sp,144
    7b22:	0000                	unimp
    7b24:	0501                	addi	a0,a0,0
    7b26:	0605                	addi	a2,a2,1
    7b28:	14090403          	lb	s0,320(s2)
    7b2c:	0100                	addi	s0,sp,128
    7b2e:	00090703          	lb	a4,0(s2)
    7b32:	0100                	addi	s0,sp,128
    7b34:	0105                	addi	sp,sp,1
    7b36:	0306                	slli	t1,t1,0x1
    7b38:	090d                	addi	s2,s2,3
    7b3a:	0000                	unimp
    7b3c:	0901                	addi	s2,s2,0
    7b3e:	0004                	0x4
    7b40:	0100                	addi	s0,sp,128
    7b42:	0501                	addi	a0,a0,0
    7b44:	0001                	nop
    7b46:	0205                	addi	tp,tp,1
    7b48:	2f28                	fld	fa0,88(a4)
    7b4a:	0000                	unimp
    7b4c:	0101d203          	lhu	tp,16(gp) # 10013b0 <__global_pointer$+0x10>
    7b50:	0505                	addi	a0,a0,1
    7b52:	00090103          	lb	sp,0(s2)
    7b56:	0100                	addi	s0,sp,128
    7b58:	00090103          	lb	sp,0(s2)
    7b5c:	0100                	addi	s0,sp,128
    7b5e:	00090503          	lb	a0,0(s2)
    7b62:	0100                	addi	s0,sp,128
    7b64:	00090503          	lb	a0,0(s2)
    7b68:	0100                	addi	s0,sp,128
    7b6a:	00090503          	lb	a0,0(s2)
    7b6e:	0100                	addi	s0,sp,128
    7b70:	00090503          	lb	a0,0(s2)
    7b74:	0100                	addi	s0,sp,128
    7b76:	00090503          	lb	a0,0(s2)
    7b7a:	0100                	addi	s0,sp,128
    7b7c:	00090603          	lb	a2,0(s2)
    7b80:	0100                	addi	s0,sp,128
    7b82:	00090403          	lb	s0,0(s2)
    7b86:	0100                	addi	s0,sp,128
    7b88:	0105                	addi	sp,sp,1
    7b8a:	0306                	slli	t1,t1,0x1
    7b8c:	0901                	addi	s2,s2,0
    7b8e:	0000                	unimp
    7b90:	0901                	addi	s2,s2,0
    7b92:	0008                	0x8
    7b94:	0100                	addi	s0,sp,128
    7b96:	6201                	0x6201
    7b98:	0002                	c.slli64	zero
    7b9a:	0300                	addi	s0,sp,384
    7b9c:	ae00                	fsd	fs0,24(a2)
    7b9e:	0001                	nop
    7ba0:	0100                	addi	s0,sp,128
    7ba2:	fb01                	bnez	a4,7ab2 <__mcmp+0x26>
    7ba4:	0d0e                	slli	s10,s10,0x3
    7ba6:	0100                	addi	s0,sp,128
    7ba8:	0101                	addi	sp,sp,0
    7baa:	0001                	nop
    7bac:	0000                	unimp
    7bae:	0001                	nop
    7bb0:	0100                	addi	s0,sp,128
    7bb2:	2f2e                	fld	ft10,200(sp)
    7bb4:	2f637273          	csrrci	tp,0x2f6,6
    7bb8:	616d                	addi	sp,sp,240
    7bba:	6e69                	lui	t3,0x1a
    7bbc:	6372732f          	0x6372732f
    7bc0:	6500                	flw	fs0,8(a0)
    7bc2:	5c3a                	lw	s8,172(sp)
    7bc4:	7270                	flw	fa2,100(a2)
    7bc6:	6172676f          	jal	a4,2e9dc <_data_lma+0x243c4>
    7bca:	206d                	jal	7c74 <__d2b+0x18>
    7bcc:	6966                	flw	fs2,88(sp)
    7bce:	656c                	flw	fa1,76(a0)
    7bd0:	78282073          	csrs	0x782,a6
    7bd4:	3638                	fld	fa4,104(a2)
    7bd6:	5c29                	li	s8,-22
    7bd8:	7078                	flw	fa4,100(s0)
    7bda:	6361                	lui	t1,0x18
    7bdc:	69722d6b          	0x69722d6b
    7be0:	2d766373          	csrrsi	t1,0x2d7,12
    7be4:	6f6e                	flw	ft10,216(sp)
    7be6:	656e                	flw	fa0,216(sp)
    7be8:	652d                	lui	a0,0xb
    7bea:	626d                	lui	tp,0x1b
    7bec:	6465                	lui	s0,0x19
    7bee:	672d                	lui	a4,0xb
    7bf0:	382d6363          	bltu	s10,sp,7f76 <_malloc_r+0x6e>
    7bf4:	332e                	fld	ft6,232(sp)
    7bf6:	302e                	fld	ft0,232(sp)
    7bf8:	322d                	jal	7522 <__hi0bits+0x32>
    7bfa:	332e                	fld	ft6,232(sp)
    7bfc:	725c                	flw	fa5,36(a2)
    7bfe:	7369                	lui	t1,0xffffa
    7c00:	6e2d7663          	bgeu	s10,sp,82ec <_vfiprintf_r+0x1b8>
    7c04:	2d656e6f          	jal	t3,5deda <_data_lma+0x538c2>
    7c08:	6d65                	lui	s10,0x19
    7c0a:	6562                	flw	fa0,24(sp)
    7c0c:	5c64                	lw	s1,124(s0)
    7c0e:	6e69                	lui	t3,0x1a
    7c10:	64756c63          	bltu	a0,t2,8268 <_vfiprintf_r+0x134>
    7c14:	5c65                	li	s8,-7
    7c16:	616d                	addi	sp,sp,240
    7c18:	6e696863          	bltu	s2,t1,8308 <_vfiprintf_r+0x1d4>
    7c1c:	0065                	c.nop	25
    7c1e:	3a65                	jal	75d6 <__lo0bits+0x76>
    7c20:	705c                	flw	fa5,36(s0)
    7c22:	6f72                	flw	ft10,28(sp)
    7c24:	6d617267          	0x6d617267
    7c28:	6620                	flw	fs0,72(a2)
    7c2a:	6c69                	lui	s8,0x1a
    7c2c:	7365                	lui	t1,0xffff9
    7c2e:	2820                	fld	fs0,80(s0)
    7c30:	3878                	fld	fa4,240(s0)
    7c32:	2936                	fld	fs2,328(sp)
    7c34:	785c                	flw	fa5,52(s0)
    7c36:	6170                	flw	fa2,68(a0)
    7c38:	722d6b63          	bltu	s10,sp,836e <_vfiprintf_r+0x23a>
    7c3c:	7369                	lui	t1,0xffffa
    7c3e:	6e2d7663          	bgeu	s10,sp,832a <_vfiprintf_r+0x1f6>
    7c42:	2d656e6f          	jal	t3,5df18 <_data_lma+0x53900>
    7c46:	6d65                	lui	s10,0x19
    7c48:	6562                	flw	fa0,24(sp)
    7c4a:	2d64                	fld	fs1,216(a0)
    7c4c:	2d636367          	0x2d636367
    7c50:	2e38                	fld	fa4,88(a2)
    7c52:	2d302e33          	0x2d302e33
    7c56:	2e32                	fld	ft8,264(sp)
    7c58:	696c5c33          	0x696c5c33
    7c5c:	5c62                	lw	s8,56(sp)
    7c5e:	5c636367          	0x5c636367
    7c62:	6972                	flw	fs2,28(sp)
    7c64:	2d766373          	csrrsi	t1,0x2d7,12
    7c68:	6f6e                	flw	ft10,216(sp)
    7c6a:	656e                	flw	fa0,216(sp)
    7c6c:	652d                	lui	a0,0xb
    7c6e:	626d                	lui	tp,0x1b
    7c70:	6465                	lui	s0,0x19
    7c72:	385c                	fld	fa5,176(s0)
    7c74:	332e                	fld	ft6,232(sp)
    7c76:	302e                	fld	ft0,232(sp)
    7c78:	695c                	flw	fa5,20(a0)
    7c7a:	636e                	flw	ft6,216(sp)
    7c7c:	756c                	flw	fa1,108(a0)
    7c7e:	6564                	flw	fs1,76(a0)
    7c80:	6500                	flw	fs0,8(a0)
    7c82:	5c3a                	lw	s8,172(sp)
    7c84:	7270                	flw	fa2,100(a2)
    7c86:	6172676f          	jal	a4,2ea9c <_data_lma+0x24484>
    7c8a:	206d                	jal	7d34 <__d2b+0xd8>
    7c8c:	6966                	flw	fs2,88(sp)
    7c8e:	656c                	flw	fa1,76(a0)
    7c90:	78282073          	csrs	0x782,a6
    7c94:	3638                	fld	fa4,104(a2)
    7c96:	5c29                	li	s8,-22
    7c98:	7078                	flw	fa4,100(s0)
    7c9a:	6361                	lui	t1,0x18
    7c9c:	69722d6b          	0x69722d6b
    7ca0:	2d766373          	csrrsi	t1,0x2d7,12
    7ca4:	6f6e                	flw	ft10,216(sp)
    7ca6:	656e                	flw	fa0,216(sp)
    7ca8:	652d                	lui	a0,0xb
    7caa:	626d                	lui	tp,0x1b
    7cac:	6465                	lui	s0,0x19
    7cae:	672d                	lui	a4,0xb
    7cb0:	382d6363          	bltu	s10,sp,8036 <_malloc_r+0x12e>
    7cb4:	332e                	fld	ft6,232(sp)
    7cb6:	302e                	fld	ft0,232(sp)
    7cb8:	322d                	jal	75e2 <__lo0bits+0x82>
    7cba:	332e                	fld	ft6,232(sp)
    7cbc:	725c                	flw	fa5,36(a2)
    7cbe:	7369                	lui	t1,0xffffa
    7cc0:	6e2d7663          	bgeu	s10,sp,83ac <_vfiprintf_r+0x278>
    7cc4:	2d656e6f          	jal	t3,5df9a <_data_lma+0x53982>
    7cc8:	6d65                	lui	s10,0x19
    7cca:	6562                	flw	fa0,24(sp)
    7ccc:	5c64                	lw	s1,124(s0)
    7cce:	6e69                	lui	t3,0x1a
    7cd0:	64756c63          	bltu	a0,t2,8328 <_vfiprintf_r+0x1f4>
    7cd4:	5c65                	li	s8,-7
    7cd6:	00737973          	csrrci	s2,0x7,6
    7cda:	2f2e                	fld	ft10,200(sp)
    7cdc:	2f637273          	csrrci	tp,0x2f6,6
    7ce0:	616d                	addi	sp,sp,240
    7ce2:	6e69                	lui	t3,0x1a
    7ce4:	636e692f          	0x636e692f
    7ce8:	0000                	unimp
    7cea:	6974                	flw	fa3,84(a0)
    7cec:	656d                	lui	a0,0x1b
    7cee:	2e72                	fld	ft8,280(sp)
    7cf0:	00010063          	beqz	sp,7cf0 <__d2b+0x94>
    7cf4:	5f00                	lw	s0,56(a4)
    7cf6:	6564                	flw	fs1,76(a0)
    7cf8:	6166                	flw	ft2,88(sp)
    7cfa:	6c75                	lui	s8,0x1d
    7cfc:	5f74                	lw	a3,124(a4)
    7cfe:	7974                	flw	fa3,116(a0)
    7d00:	6570                	flw	fa2,76(a0)
    7d02:	00682e73          	csrrs	t3,0x6,a6
    7d06:	0002                	c.slli64	zero
    7d08:	7300                	flw	fs0,32(a4)
    7d0a:	6474                	flw	fa3,76(s0)
    7d0c:	6564                	flw	fs1,76(a0)
    7d0e:	2e66                	fld	ft8,88(sp)
    7d10:	0068                	addi	a0,sp,12
    7d12:	5f000003          	lb	zero,1520(zero) # 5f0 <main+0x578>
    7d16:	7974                	flw	fa3,116(a0)
    7d18:	6570                	flw	fa2,76(a0)
    7d1a:	00682e73          	csrrs	t3,0x6,a6
    7d1e:	0004                	0x4
    7d20:	7200                	flw	fs0,32(a2)
    7d22:	6565                	lui	a0,0x19
    7d24:	746e                	flw	fs0,248(sp)
    7d26:	682e                	flw	fa6,200(sp)
    7d28:	0400                	addi	s0,sp,512
    7d2a:	0000                	unimp
    7d2c:	6f6c                	flw	fa1,92(a4)
    7d2e:	682e6b63          	bltu	t3,sp,83c4 <_vfiprintf_r+0x290>
    7d32:	0400                	addi	s0,sp,512
    7d34:	0000                	unimp
    7d36:	735f 6474 6e69      	0x6e696474735f
    7d3c:	2e74                	fld	fa3,216(a2)
    7d3e:	0068                	addi	a0,sp,12
    7d40:	0004                	0x4
    7d42:	7400                	flw	fs0,40(s0)
    7d44:	6d69                	lui	s10,0x1a
    7d46:	7265                	lui	tp,0xffff9
    7d48:	682e                	flw	fa6,200(sp)
    7d4a:	0500                	addi	s0,sp,640
    7d4c:	0000                	unimp
    7d4e:	0500                	addi	s0,sp,640
    7d50:	0014                	0x14
    7d52:	0205                	addi	tp,tp,1
    7d54:	0000                	unimp
    7d56:	0000                	unimp
    7d58:	051a                	slli	a0,a0,0x6
    7d5a:	0305                	addi	t1,t1,1
    7d5c:	0901                	addi	s2,s2,0
    7d5e:	0000                	unimp
    7d60:	0501                	addi	a0,a0,0
    7d62:	0003060f          	0x3060f
    7d66:	0009                	c.nop	2
    7d68:	0100                	addi	s0,sp,128
    7d6a:	0505                	addi	a0,a0,1
    7d6c:	0306                	slli	t1,t1,0x1
    7d6e:	0901                	addi	s2,s2,0
    7d70:	0000                	unimp
    7d72:	0501                	addi	a0,a0,0
    7d74:	0003060f          	0x3060f
    7d78:	0009                	c.nop	2
    7d7a:	0100                	addi	s0,sp,128
    7d7c:	0105                	addi	sp,sp,1
    7d7e:	00090103          	lb	sp,0(s2)
    7d82:	0100                	addi	s0,sp,128
    7d84:	0009                	c.nop	2
    7d86:	0000                	unimp
    7d88:	0101                	addi	sp,sp,0
    7d8a:	1805                	addi	a6,a6,-31
    7d8c:	0500                	addi	s0,sp,640
    7d8e:	3002                	fld	ft0,32(sp)
    7d90:	0300002f          	0x300002f
    7d94:	010c                	addi	a1,sp,128
    7d96:	0505                	addi	a0,a0,1
    7d98:	00090103          	lb	sp,0(s2)
    7d9c:	0100                	addi	s0,sp,128
    7d9e:	2705                	jal	84be <_vfiprintf_r+0x38a>
    7da0:	0306                	slli	t1,t1,0x1
    7da2:	0900                	addi	s0,sp,144
    7da4:	0000                	unimp
    7da6:	0501                	addi	a0,a0,0
    7da8:	0348                	addi	a0,sp,388
    7daa:	0900                	addi	s0,sp,144
    7dac:	0008                	0x8
    7dae:	0501                	addi	a0,a0,0
    7db0:	030a                	slli	t1,t1,0x2
    7db2:	0901                	addi	s2,s2,0
    7db4:	0004                	0x4
    7db6:	0501                	addi	a0,a0,0
    7db8:	0318                	addi	a4,sp,384
    7dba:	097e                	slli	s2,s2,0x1f
    7dbc:	0004                	0x4
    7dbe:	0501                	addi	a0,a0,0
    7dc0:	0338                	addi	a4,sp,392
    7dc2:	0901                	addi	s2,s2,0
    7dc4:	0004                	0x4
    7dc6:	0501                	addi	a0,a0,0
    7dc8:	0605                	addi	a2,a2,1
    7dca:	04090103          	lb	sp,64(s2)
    7dce:	0100                	addi	s0,sp,128
    7dd0:	00090103          	lb	sp,0(s2)
    7dd4:	0100                	addi	s0,sp,128
    7dd6:	0a05                	addi	s4,s4,1
    7dd8:	0306                	slli	t1,t1,0x1
    7dda:	097f                	0x97f
    7ddc:	0000                	unimp
    7dde:	0501                	addi	a0,a0,0
    7de0:	0318                	addi	a4,sp,384
    7de2:	097e                	slli	s2,s2,0x1f
    7de4:	000c                	0xc
    7de6:	0501                	addi	a0,a0,0
    7de8:	030a                	slli	t1,t1,0x2
    7dea:	0902                	c.slli64	s2
    7dec:	0004                	0x4
    7dee:	0501                	addi	a0,a0,0
    7df0:	0301                	addi	t1,t1,0
    7df2:	0902                	c.slli64	s2
    7df4:	0008                	0x8
    7df6:	0901                	addi	s2,s2,0
    7df8:	000c                	0xc
    7dfa:	0100                	addi	s0,sp,128
    7dfc:	9c01                	0x9c01
    7dfe:	03000003          	lb	zero,48(zero) # 30 <_start+0x30>
    7e02:	4700                	lw	s0,8(a4)
    7e04:	0000                	unimp
    7e06:	0100                	addi	s0,sp,128
    7e08:	fb01                	bnez	a4,7d18 <__d2b+0xbc>
    7e0a:	0d0e                	slli	s10,s10,0x3
    7e0c:	0100                	addi	s0,sp,128
    7e0e:	0101                	addi	sp,sp,0
    7e10:	0001                	nop
    7e12:	0000                	unimp
    7e14:	0001                	nop
    7e16:	0100                	addi	s0,sp,128
    7e18:	2f2e                	fld	ft10,200(sp)
    7e1a:	2f637273          	csrrci	tp,0x2f6,6
    7e1e:	616d                	addi	sp,sp,240
    7e20:	6e69                	lui	t3,0x1a
    7e22:	6372732f          	0x6372732f
    7e26:	2e00                	fld	fs0,24(a2)
    7e28:	6372732f          	0x6372732f
    7e2c:	69616d2f          	0x69616d2f
    7e30:	2f6e                	fld	ft10,216(sp)
    7e32:	6e69                	lui	t3,0x1a
    7e34:	75000063          	beq	zero,a6,8574 <__sread+0xc>
    7e38:	74726173          	csrrsi	sp,0x747,4
    7e3c:	632e                	flw	ft6,200(sp)
    7e3e:	0100                	addi	s0,sp,128
    7e40:	0000                	unimp
    7e42:	7375                	lui	t1,0xffffd
    7e44:	7261                	lui	tp,0xffff8
    7e46:	2e74                	fld	fa3,216(a2)
    7e48:	0068                	addi	a0,sp,12
    7e4a:	0002                	c.slli64	zero
    7e4c:	0000                	unimp
    7e4e:	1805                	addi	a6,a6,-31
    7e50:	0500                	addi	s0,sp,640
    7e52:	0002                	c.slli64	zero
    7e54:	0000                	unimp
    7e56:	1400                	addi	s0,sp,544
    7e58:	1e05                	addi	t3,t3,-31
    7e5a:	0306                	slli	t1,t1,0x1
    7e5c:	00000903          	lb	s2,0(zero) # 0 <_start>
    7e60:	0501                	addi	a0,a0,0
    7e62:	0605                	addi	a2,a2,1
    7e64:	00097f03          	0x97f03
    7e68:	0100                	addi	s0,sp,128
    7e6a:	0905                	addi	s2,s2,1
    7e6c:	00090103          	lb	sp,0(s2)
    7e70:	0100                	addi	s0,sp,128
    7e72:	1e05                	addi	t3,t3,-31
    7e74:	0306                	slli	t1,t1,0x1
    7e76:	0900                	addi	s0,sp,144
    7e78:	0000                	unimp
    7e7a:	0501                	addi	a0,a0,0
    7e7c:	0609                	addi	a2,a2,2
    7e7e:	00090103          	lb	sp,0(s2)
    7e82:	0100                	addi	s0,sp,128
    7e84:	0d05                	addi	s10,s10,1
    7e86:	0306                	slli	t1,t1,0x1
    7e88:	097f                	0x97f
    7e8a:	0000                	unimp
    7e8c:	0501                	addi	a0,a0,0
    7e8e:	030c                	addi	a1,sp,384
    7e90:	0901                	addi	s2,s2,0
    7e92:	0000                	unimp
    7e94:	0501                	addi	a0,a0,0
    7e96:	060d                	addi	a2,a2,3
    7e98:	00090103          	lb	sp,0(s2)
    7e9c:	0100                	addi	s0,sp,128
    7e9e:	1a05                	addi	s4,s4,-31
    7ea0:	0306                	slli	t1,t1,0x1
    7ea2:	0900                	addi	s0,sp,144
    7ea4:	0000                	unimp
    7ea6:	0501                	addi	a0,a0,0
    7ea8:	060d                	addi	a2,a2,3
    7eaa:	00090103          	lb	sp,0(s2)
    7eae:	0100                	addi	s0,sp,128
    7eb0:	0105                	addi	sp,sp,1
    7eb2:	0306                	slli	t1,t1,0x1
    7eb4:	00000903          	lb	s2,0(zero) # 0 <_start>
    7eb8:	0901                	addi	s2,s2,0
    7eba:	0000                	unimp
    7ebc:	0100                	addi	s0,sp,128
    7ebe:	0501                	addi	a0,a0,0
    7ec0:	0205001b          	0x205001b
    7ec4:	0000                	unimp
    7ec6:	0000                	unimp
    7ec8:	05010c03          	lb	s8,80(sp)
    7ecc:	0305                	addi	t1,t1,1
    7ece:	0901                	addi	s2,s2,0
    7ed0:	0000                	unimp
    7ed2:	0501                	addi	a0,a0,0
    7ed4:	030a                	slli	t1,t1,0x2
    7ed6:	0900                	addi	s0,sp,144
    7ed8:	0000                	unimp
    7eda:	0501                	addi	a0,a0,0
    7edc:	0615                	addi	a2,a2,5
    7ede:	00090003          	lb	zero,0(s2)
    7ee2:	0100                	addi	s0,sp,128
    7ee4:	0505                	addi	a0,a0,1
    7ee6:	00090003          	lb	zero,0(s2)
    7eea:	0100                	addi	s0,sp,128
    7eec:	1e05                	addi	t3,t3,-31
    7eee:	00097803          	0x97803
    7ef2:	0100                	addi	s0,sp,128
    7ef4:	0505                	addi	a0,a0,1
    7ef6:	0306                	slli	t1,t1,0x1
    7ef8:	097f                	0x97f
    7efa:	0000                	unimp
    7efc:	0501                	addi	a0,a0,0
    7efe:	0309                	addi	t1,t1,2
    7f00:	0901                	addi	s2,s2,0
    7f02:	0000                	unimp
    7f04:	0501                	addi	a0,a0,0
    7f06:	061e                	slli	a2,a2,0x7
    7f08:	00090003          	lb	zero,0(s2)
    7f0c:	0100                	addi	s0,sp,128
    7f0e:	0905                	addi	s2,s2,1
    7f10:	0306                	slli	t1,t1,0x1
    7f12:	0901                	addi	s2,s2,0
    7f14:	0000                	unimp
    7f16:	0501                	addi	a0,a0,0
    7f18:	060d                	addi	a2,a2,3
    7f1a:	00097f03          	0x97f03
    7f1e:	0100                	addi	s0,sp,128
    7f20:	0c05                	addi	s8,s8,1
    7f22:	00090103          	lb	sp,0(s2)
    7f26:	0100                	addi	s0,sp,128
    7f28:	0d05                	addi	s10,s10,1
    7f2a:	0306                	slli	t1,t1,0x1
    7f2c:	0901                	addi	s2,s2,0
    7f2e:	0000                	unimp
    7f30:	0501                	addi	a0,a0,0
    7f32:	061a                	slli	a2,a2,0x6
    7f34:	00090003          	lb	zero,0(s2)
    7f38:	0100                	addi	s0,sp,128
    7f3a:	0d05                	addi	s10,s10,1
    7f3c:	0306                	slli	t1,t1,0x1
    7f3e:	0901                	addi	s2,s2,0
    7f40:	0000                	unimp
    7f42:	0501                	addi	a0,a0,0
    7f44:	0615                	addi	a2,a2,5
    7f46:	00090503          	lb	a0,0(s2)
    7f4a:	0100                	addi	s0,sp,128
    7f4c:	0505                	addi	a0,a0,1
    7f4e:	00090003          	lb	zero,0(s2)
    7f52:	0100                	addi	s0,sp,128
    7f54:	0105                	addi	sp,sp,1
    7f56:	00090303          	lb	t1,0(s2)
    7f5a:	0100                	addi	s0,sp,128
    7f5c:	0009                	c.nop	2
    7f5e:	0000                	unimp
    7f60:	0101                	addi	sp,sp,0
    7f62:	1105                	addi	sp,sp,-31
    7f64:	0500                	addi	s0,sp,640
    7f66:	0002                	c.slli64	zero
    7f68:	0000                	unimp
    7f6a:	0300                	addi	s0,sp,384
    7f6c:	0111                	addi	sp,sp,4
    7f6e:	1e05                	addi	t3,t3,-31
    7f70:	0306                	slli	t1,t1,0x1
    7f72:	0902                	c.slli64	s2
    7f74:	0000                	unimp
    7f76:	0501                	addi	a0,a0,0
    7f78:	0605                	addi	a2,a2,1
    7f7a:	00097f03          	0x97f03
    7f7e:	0100                	addi	s0,sp,128
    7f80:	0905                	addi	s2,s2,1
    7f82:	00090103          	lb	sp,0(s2)
    7f86:	0100                	addi	s0,sp,128
    7f88:	1e05                	addi	t3,t3,-31
    7f8a:	0306                	slli	t1,t1,0x1
    7f8c:	0900                	addi	s0,sp,144
    7f8e:	0000                	unimp
    7f90:	0501                	addi	a0,a0,0
    7f92:	0609                	addi	a2,a2,2
    7f94:	00090103          	lb	sp,0(s2)
    7f98:	0100                	addi	s0,sp,128
    7f9a:	1b05                	addi	s6,s6,-31
    7f9c:	0306                	slli	t1,t1,0x1
    7f9e:	0900                	addi	s0,sp,144
    7fa0:	0000                	unimp
    7fa2:	0501                	addi	a0,a0,0
    7fa4:	0609                	addi	a2,a2,2
    7fa6:	00090103          	lb	sp,0(s2)
    7faa:	0100                	addi	s0,sp,128
    7fac:	0d05                	addi	s10,s10,1
    7fae:	0306                	slli	t1,t1,0x1
    7fb0:	097e                	slli	s2,s2,0x1f
    7fb2:	0000                	unimp
    7fb4:	0301                	addi	t1,t1,0
    7fb6:	0901                	addi	s2,s2,0
    7fb8:	0000                	unimp
    7fba:	0501                	addi	a0,a0,0
    7fbc:	09010317          	auipc	t1,0x9010
    7fc0:	0000                	unimp
    7fc2:	0501                	addi	a0,a0,0
    7fc4:	030c                	addi	a1,sp,384
    7fc6:	0900                	addi	s0,sp,144
    7fc8:	0000                	unimp
    7fca:	0501                	addi	a0,a0,0
    7fcc:	060d                	addi	a2,a2,3
    7fce:	00090103          	lb	sp,0(s2)
    7fd2:	0100                	addi	s0,sp,128
    7fd4:	1905                	addi	s2,s2,-31
    7fd6:	0306                	slli	t1,t1,0x1
    7fd8:	0900                	addi	s0,sp,144
    7fda:	0000                	unimp
    7fdc:	0501                	addi	a0,a0,0
    7fde:	0301                	addi	t1,t1,0
    7fe0:	00000903          	lb	s2,0(zero) # 0 <_start>
    7fe4:	0901                	addi	s2,s2,0
    7fe6:	0000                	unimp
    7fe8:	0100                	addi	s0,sp,128
    7fea:	0501                	addi	a0,a0,0
    7fec:	001a                	c.slli	zero,0x6
    7fee:	0205                	addi	tp,tp,1
    7ff0:	0000                	unimp
    7ff2:	0000                	unimp
    7ff4:	05011b03          	lh	s6,80(sp)
    7ff8:	0305                	addi	t1,t1,1
    7ffa:	0901                	addi	s2,s2,0
    7ffc:	0000                	unimp
    7ffe:	0501                	addi	a0,a0,0
    8000:	030a                	slli	t1,t1,0x2
    8002:	0900                	addi	s0,sp,144
    8004:	0000                	unimp
    8006:	0501                	addi	a0,a0,0
    8008:	060e                	slli	a2,a2,0x3
    800a:	00090003          	lb	zero,0(s2)
    800e:	0100                	addi	s0,sp,128
    8010:	1e05                	addi	t3,t3,-31
    8012:	00097703          	0x97703
    8016:	0100                	addi	s0,sp,128
    8018:	0c05                	addi	s8,s8,1
    801a:	00090b03          	lb	s6,0(s2)
    801e:	0100                	addi	s0,sp,128
    8020:	1f05                	addi	t5,t5,-31
    8022:	00090003          	lb	zero,0(s2)
    8026:	0100                	addi	s0,sp,128
    8028:	0905                	addi	s2,s2,1
    802a:	0306                	slli	t1,t1,0x1
    802c:	097f                	0x97f
    802e:	0000                	unimp
    8030:	0501                	addi	a0,a0,0
    8032:	0305                	addi	t1,t1,1
    8034:	0975                	addi	s2,s2,29
    8036:	0000                	unimp
    8038:	0501                	addi	a0,a0,0
    803a:	0309                	addi	t1,t1,2
    803c:	0901                	addi	s2,s2,0
    803e:	0000                	unimp
    8040:	0501                	addi	a0,a0,0
    8042:	061e                	slli	a2,a2,0x7
    8044:	00090003          	lb	zero,0(s2)
    8048:	0100                	addi	s0,sp,128
    804a:	0905                	addi	s2,s2,1
    804c:	0306                	slli	t1,t1,0x1
    804e:	0901                	addi	s2,s2,0
    8050:	0000                	unimp
    8052:	0501                	addi	a0,a0,0
    8054:	0003061b          	0x3061b
    8058:	0009                	c.nop	2
    805a:	0100                	addi	s0,sp,128
    805c:	0905                	addi	s2,s2,1
    805e:	0306                	slli	t1,t1,0x1
    8060:	0901                	addi	s2,s2,0
    8062:	0000                	unimp
    8064:	0501                	addi	a0,a0,0
    8066:	060d                	addi	a2,a2,3
    8068:	00097e03          	0x97e03
    806c:	0100                	addi	s0,sp,128
    806e:	00090103          	lb	sp,0(s2)
    8072:	0100                	addi	s0,sp,128
    8074:	1705                	addi	a4,a4,-31
    8076:	00090103          	lb	sp,0(s2)
    807a:	0100                	addi	s0,sp,128
    807c:	0c05                	addi	s8,s8,1
    807e:	00090003          	lb	zero,0(s2)
    8082:	0100                	addi	s0,sp,128
    8084:	0d05                	addi	s10,s10,1
    8086:	0306                	slli	t1,t1,0x1
    8088:	0901                	addi	s2,s2,0
    808a:	0000                	unimp
    808c:	0501                	addi	a0,a0,0
    808e:	0619                	addi	a2,a2,6
    8090:	00090003          	lb	zero,0(s2)
    8094:	0100                	addi	s0,sp,128
    8096:	1105                	addi	sp,sp,-31
    8098:	00090703          	lb	a4,0(s2)
    809c:	0100                	addi	s0,sp,128
    809e:	1905                	addi	s2,s2,-31
    80a0:	00097903          	0x97903
    80a4:	0100                	addi	s0,sp,128
    80a6:	0905                	addi	s2,s2,1
    80a8:	0306                	slli	t1,t1,0x1
    80aa:	0908                	addi	a0,sp,144
    80ac:	0000                	unimp
    80ae:	0501                	addi	a0,a0,0
    80b0:	0611                	addi	a2,a2,4
    80b2:	00097f03          	0x97f03
    80b6:	0100                	addi	s0,sp,128
    80b8:	0c05                	addi	s8,s8,1
    80ba:	00090103          	lb	sp,0(s2)
    80be:	0100                	addi	s0,sp,128
    80c0:	1f05                	addi	t5,t5,-31
    80c2:	0200                	addi	s0,sp,256
    80c4:	0104                	addi	s1,sp,128
    80c6:	00090003          	lb	zero,0(s2)
    80ca:	0100                	addi	s0,sp,128
    80cc:	0d05                	addi	s10,s10,1
    80ce:	0306                	slli	t1,t1,0x1
    80d0:	0901                	addi	s2,s2,0
    80d2:	0000                	unimp
    80d4:	0501                	addi	a0,a0,0
    80d6:	00030617          	auipc	a2,0x30
    80da:	0009                	c.nop	2
    80dc:	0100                	addi	s0,sp,128
    80de:	0d05                	addi	s10,s10,1
    80e0:	0306                	slli	t1,t1,0x1
    80e2:	0901                	addi	s2,s2,0
    80e4:	0000                	unimp
    80e6:	0501                	addi	a0,a0,0
    80e8:	0601                	addi	a2,a2,0
    80ea:	00090303          	lb	t1,0(s2)
    80ee:	0100                	addi	s0,sp,128
    80f0:	0009                	c.nop	2
    80f2:	0000                	unimp
    80f4:	0101                	addi	sp,sp,0
    80f6:	2d05                	jal	8726 <_write_r+0x46>
    80f8:	0500                	addi	s0,sp,640
    80fa:	6c02                	flw	fs8,0(sp)
    80fc:	0300002f          	0x300002f
    8100:	0125                	addi	sp,sp,9
    8102:	0505                	addi	a0,a0,1
    8104:	00090103          	lb	sp,0(s2)
    8108:	0100                	addi	s0,sp,128
    810a:	0a05                	addi	s4,s4,1
    810c:	00090003          	lb	zero,0(s2)
    8110:	0100                	addi	s0,sp,128
    8112:	0505                	addi	a0,a0,1
    8114:	0306                	slli	t1,t1,0x1
    8116:	0900                	addi	s0,sp,144
    8118:	0000                	unimp
    811a:	0501                	addi	a0,a0,0
    811c:	031e                	slli	t1,t1,0x7
    811e:	095f 0008 0501      	0x5010008095f
    8124:	0009                	c.nop	2
    8126:	0402                	c.slli64	s0
    8128:	22030603          	lb	a2,544(t1) # 90181dc <__freertos_irq_stack_top+0x80081dc>
    812c:	0409                	addi	s0,s0,2
    812e:	0100                	addi	s0,sp,128
    8130:	0505                	addi	a0,a0,1
    8132:	04095d03          	lhu	s10,64(s2)
    8136:	0100                	addi	s0,sp,128
    8138:	0905                	addi	s2,s2,1
    813a:	00090103          	lb	sp,0(s2)
    813e:	0100                	addi	s0,sp,128
    8140:	1e05                	addi	t3,t3,-31
    8142:	0306                	slli	t1,t1,0x1
    8144:	0900                	addi	s0,sp,144
    8146:	0000                	unimp
    8148:	0501                	addi	a0,a0,0
    814a:	0609                	addi	a2,a2,2
    814c:	04090103          	lb	sp,64(s2)
    8150:	0100                	addi	s0,sp,128
    8152:	0d05                	addi	s10,s10,1
    8154:	0306                	slli	t1,t1,0x1
    8156:	097f                	0x97f
    8158:	0000                	unimp
    815a:	0501                	addi	a0,a0,0
    815c:	030c                	addi	a1,sp,384
    815e:	0901                	addi	s2,s2,0
    8160:	0004                	0x4
    8162:	0501                	addi	a0,a0,0
    8164:	060d                	addi	a2,a2,3
    8166:	04090103          	lb	sp,64(s2)
    816a:	0100                	addi	s0,sp,128
    816c:	1a05                	addi	s4,s4,-31
    816e:	0306                	slli	t1,t1,0x1
    8170:	0900                	addi	s0,sp,144
    8172:	0000                	unimp
    8174:	0501                	addi	a0,a0,0
    8176:	060d                	addi	a2,a2,3
    8178:	04090103          	lb	sp,64(s2)
    817c:	0100                	addi	s0,sp,128
    817e:	0505                	addi	a0,a0,1
    8180:	0306                	slli	t1,t1,0x1
    8182:	091e                	slli	s2,s2,0x7
    8184:	0004                	0x4
    8186:	0601                	addi	a2,a2,0
    8188:	04090303          	lb	t1,64(s2)
    818c:	0100                	addi	s0,sp,128
    818e:	0105                	addi	sp,sp,1
    8190:	0306                	slli	t1,t1,0x1
    8192:	0901                	addi	s2,s2,0
    8194:	0000                	unimp
    8196:	0901                	addi	s2,s2,0
    8198:	0008                	0x8
    819a:	0100                	addi	s0,sp,128
    819c:	bd01                	j	7fac <_malloc_r+0xa4>
    819e:	0000                	unimp
    81a0:	0300                	addi	s0,sp,384
    81a2:	2900                	fld	fs0,16(a0)
    81a4:	0000                	unimp
    81a6:	0100                	addi	s0,sp,128
    81a8:	fb01                	bnez	a4,80b8 <__sfputc_r+0x3c>
    81aa:	0d0e                	slli	s10,s10,0x3
    81ac:	0100                	addi	s0,sp,128
    81ae:	0101                	addi	sp,sp,0
    81b0:	0001                	nop
    81b2:	0000                	unimp
    81b4:	0001                	nop
    81b6:	0100                	addi	s0,sp,128
    81b8:	2f2e                	fld	ft10,200(sp)
    81ba:	2f637273          	csrrci	tp,0x2f6,6
    81be:	616d                	addi	sp,sp,240
    81c0:	6e69                	lui	t3,0x1a
    81c2:	0000                	unimp
    81c4:	72617473          	csrrci	s0,0x726,2
    81c8:	2e74                	fld	fa3,216(a2)
    81ca:	00010053          	fadd.s	ft0,ft2,ft0,rne
    81ce:	0000                	unimp
    81d0:	0500                	addi	s0,sp,640
    81d2:	0002                	c.slli64	zero
    81d4:	0000                	unimp
    81d6:	0300                	addi	s0,sp,384
    81d8:	0203010f          	0x203010f
    81dc:	0809                	addi	a6,a6,2
    81de:	0100                	addi	s0,sp,128
    81e0:	08090303          	lb	t1,128(s2)
    81e4:	0100                	addi	s0,sp,128
    81e6:	08090103          	lb	sp,128(s2)
    81ea:	0100                	addi	s0,sp,128
    81ec:	08090103          	lb	sp,128(s2)
    81f0:	0100                	addi	s0,sp,128
    81f2:	08090103          	lb	sp,128(s2)
    81f6:	0100                	addi	s0,sp,128
    81f8:	04090203          	lb	tp,64(s2)
    81fc:	0100                	addi	s0,sp,128
    81fe:	04090103          	lb	sp,64(s2)
    8202:	0100                	addi	s0,sp,128
    8204:	04090103          	lb	sp,64(s2)
    8208:	0100                	addi	s0,sp,128
    820a:	04090103          	lb	sp,64(s2)
    820e:	0100                	addi	s0,sp,128
    8210:	04090103          	lb	sp,64(s2)
    8214:	0100                	addi	s0,sp,128
    8216:	04090103          	lb	sp,64(s2)
    821a:	0100                	addi	s0,sp,128
    821c:	04090403          	lb	s0,64(s2)
    8220:	0100                	addi	s0,sp,128
    8222:	08090103          	lb	sp,128(s2)
    8226:	0100                	addi	s0,sp,128
    8228:	08090103          	lb	sp,128(s2)
    822c:	0100                	addi	s0,sp,128
    822e:	04090203          	lb	tp,64(s2)
    8232:	0100                	addi	s0,sp,128
    8234:	04090103          	lb	sp,64(s2)
    8238:	0100                	addi	s0,sp,128
    823a:	04090103          	lb	sp,64(s2)
    823e:	0100                	addi	s0,sp,128
    8240:	04090403          	lb	s0,64(s2)
    8244:	0100                	addi	s0,sp,128
    8246:	04090503          	lb	a0,64(s2)
    824a:	0100                	addi	s0,sp,128
    824c:	08090403          	lb	s0,128(s2)
    8250:	0100                	addi	s0,sp,128
    8252:	04090403          	lb	s0,64(s2)
    8256:	0100                	addi	s0,sp,128
    8258:	0409                	addi	s0,s0,2
    825a:	0000                	unimp
    825c:	0101                	addi	sp,sp,0

Disassembly of section .debug_str:

00000000 <.debug_str>:
	la gp, __global_pointer$
   0:	7974706f          	j	47f96 <_data_lma+0x3d97e>
   4:	6570                	flw	fa2,76(a0)
   6:	7400                	flw	fs0,40(s0)
	la sp, _sp 
   8:	6968                	flw	fa0,84(a0)
   a:	69665f73          	csrrwi	t5,0x696,12
   e:	646e                	flw	fs0,216(sp)
	la a0, _data_lma 
  10:	7000                	flw	fs0,32(s0)
  12:	657a6973          	csrrsi	s2,0x657,20
  16:	6500                	flw	fs0,8(a0)
	la a1, _data
  18:	5f65                	li	t5,-7
  1a:	3375                	jal	fffffdc6 <__freertos_irq_stack_top+0xfefefdc6>
  1c:	0032                	c.slli	zero,0xc
  1e:	31637263          	bgeu	t1,s6,322 <main+0x2aa>
	la a2, _edata
  22:	0036                	c.slli	zero,0xd
  24:	7266                	flw	ft4,120(sp)
  26:	5f006d6f          	jal	s10,6616 <_dtoa_r+0xf56>
	bgeu a1, a2, 2f
  2a:	655f6e6f          	jal	t3,f6e7e <_data_lma+0xec866>
	lw t0, (a0)
  2e:	6978                	flw	fa4,84(a0)
	sw t0, (a1)
  30:	5f74                	lw	a3,124(a4)
  32:	7261                	lui	tp,0xffff8
	lw t1, (a1)
  34:	5f007367          	0x5f007367
	addi a0, a0, 4
  38:	6164                	flw	fs1,68(a0)
  3a:	6c79                	lui	s8,0x1e
	addi a1, a1, 4
  3c:	6769                	lui	a4,0x1a
  3e:	7468                	flw	fa0,108(s0)
	bltu a1, a2, 1b
  40:	5f00                	lw	s0,56(a4)
  42:	6f746377          	0x6f746377
	la a0, __bss_start
  46:	626d                	lui	tp,0x1b
  48:	735f 6174 6574      	0x65746174735f
	la a1, _end
  4e:	6300                	flw	fs0,0(a4)
  50:	5f65726f          	jal	tp,57646 <_data_lma+0x4d02e>
	bgeu a0, a1, 2f
  54:	696c                	flw	fa1,84(a0)
  56:	695f7473          	csrrci	s0,0x695,30
	sw zero, (a0)
  5a:	696e                	flw	fs2,216(sp)
	addi a0, a0, 4
  5c:	0074                	addi	a3,sp,12
  5e:	725f 3834 5f00      	0x5f003834725f
    li x31,0xa0
  64:	6e676973          	csrrsi	s2,0x6e6,14
    call main
  68:	6c61                	lui	s8,0x18
  6a:	625f 6675 4d00      	0x4d006675625f
    li x31,0xaa
  70:	5441                	li	s0,-16
  72:	4552                	lw	a0,20(sp)
    j loop
  74:	6c5f0053          	0x6c5f0053
{
  78:	6662                	flw	fa2,24(sp)
  7a:	657a6973          	csrrsi	s2,0x657,20
    portable_init(&(results[0].port), &argc, argv);
  7e:	5f00                	lw	s0,56(a4)
{
  80:	6c66                	flw	fs8,88(sp)
  82:	6761                	lui	a4,0x18
  84:	61640073          	0x61640073
  88:	7074                	flw	fa3,100(s0)
  8a:	7461                	lui	s0,0xffff8
  8c:	6500                	flw	fs0,8(a0)
  8e:	5f65                	li	t5,-7
  90:	00363173          	csrrc	sp,fcsr,a2
  94:	414d                	li	sp,19
  96:	5f54                	lw	a3,60(a4)
  98:	4150                	lw	a2,4(a0)
  9a:	4152                	lw	sp,20(sp)
  9c:	534d                	li	t1,-13
  9e:	535f 6600 616c      	0x616c6600535f
  a4:	61640067          	jr	1558(s0) # ffff8616 <__freertos_irq_stack_top+0xfefe8616>
  a8:	6174                	flw	fa3,68(a0)
  aa:	6c62                	flw	fs8,24(sp)
  ac:	006b636f          	jal	t1,b60b2 <_data_lma+0xaba9a>
  b0:	4c5f 434f 5f4b      	0x5f4b434f4c5f
  b6:	4552                	lw	a0,20(sp)
  b8:	53525543          	fmadd.d	fa0,ft4,fs5,fa0,unknown
    portable_init(&(results[0].port), &argc, argv);
  bc:	5649                	li	a2,-14
  be:	5f45                	li	t5,-15
  c0:	0054                	addi	a3,sp,4
  c2:	725f 6165 0064      	0x646165725f
  c8:	6d5f 7262 656c      	0x656c72626d5f
{
  ce:	5f6e                	lw	t5,248(sp)
    portable_init(&(results[0].port), &argc, argv);
  d0:	74617473          	csrrci	s0,0x746,2
  d4:	0065                	c.nop	25
  d6:	5f706d63          	bltu	zero,s7,6d0 <main+0x658>
  da:	6469                	lui	s0,0x1a
  dc:	0078                	addi	a4,sp,12
  de:	6176                	flw	ft2,92(sp)
    results[0].seed1      = get_seed(1);
  e0:	316c                	fld	fa1,224(a0)
  e2:	7600                	flw	fs0,40(a2)
  e4:	6c61                	lui	s8,0x18
  e6:	0032                	c.slli	zero,0xc
  e8:	735f 6474 756f      	0x756f6474735f
  ee:	0074                	addi	a3,sp,12
    results[0].seed2      = get_seed(2);
  f0:	665f 6f70 5f73      	0x5f736f70665f
  f6:	0074                	addi	a3,sp,12
  f8:	65726f63          	bltu	tp,s7,756 <main+0x6de>
  fc:	6c5f 7369 5f74      	0x5f7473696c5f
    results[0].seed3      = get_seed(3);
 102:	6572                	flw	fa0,28(sp)
 104:	6f6d                	lui	t5,0x1b
 106:	6576                	flw	fa0,92(sp)
 108:	5f00                	lw	s0,56(a4)
 10a:	6e66                	flw	ft8,88(sp)
 10c:	6f660073          	0x6f660073
    results[0].iterations = get_seed_32(4);
 110:	6e75                	lui	t3,0x1d
 112:	0064                	addi	s1,sp,12
 114:	635f 6f6f 696b      	0x696b6f6f635f
 11a:	0065                	c.nop	25
 11c:	7469                	lui	s0,0xffffa
 11e:	6d65                	lui	s10,0x19
    results[0].execs = get_seed_32(5);
 120:	6d5f 646f 6669      	0x6669646f6d5f
 126:	6569                	lui	a0,0x1a
 128:	0064                	addi	s1,sp,12
 12a:	425f 6769 6e69      	0x6e696769425f
 130:	0074                	addi	a3,sp,12
 132:	5f5f 6d74 775f      	0x775f6d745f5f
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
 138:	6164                	flw	fs1,68(a0)
 13a:	0079                	c.nop	30
 13c:	65726f63          	bltu	tp,s7,79a <main+0x722>
 140:	6c5f 7369 5f74      	0x5f7473696c5f
 146:	6572                	flw	fa0,28(sp)
 148:	6576                	flw	fa0,92(sp)
 14a:	7372                	flw	ft6,60(sp)
 14c:	0065                	c.nop	25
 14e:	725f 7365 6c75      	0x6c757365725f
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
 154:	0074                	addi	a3,sp,12
 156:	5f5f 6d74 685f      	0x685f6d745f5f
        && (results[0].seed3 == 0))
 15c:	0072756f          	jal	a0,27962 <_data_lma+0x1d34a>
 160:	7371                	lui	t1,0xffffc
 162:	7a69                	lui	s4,0xffffa
 164:	0065                	c.nop	25
 166:	5f5f 6f63 6e75      	0x6e756f635f5f
        results[0].seed1 = 0x3415;
 16c:	0074                	addi	a3,sp,12
 16e:	696c                	flw	fa1,84(a0)
 170:	645f7473          	csrrci	s0,0x645,30
 174:	7461                	lui	s0,0xffff8
 176:	0061                	c.nop	24
        results[0].seed3 = 0x66;
 178:	5f5f 6d74 6d5f      	0x6d5f6d745f5f
 17e:	6e69                	lui	t3,0x1a
        if ((1 << (ee_u32)i) & results[0].execs)
 180:	5f00                	lw	s0,56(a4)
 182:	656e                	flw	fa0,216(sp)
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 184:	7478                	flw	fa4,108(s0)
 186:	0066                	c.slli	zero,0x19
 188:	725f 6e61 3464      	0x34646e61725f
 18e:	0038                	addi	a4,sp,8
 190:	725f 7365 6c75      	0x6c757365725f
 196:	5f74                	lw	a3,124(a4)
        if ((1 << (ee_u32)i) & results[0].execs)
 198:	6f6c006b          	0x6f6c006b
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 19c:	676e                	flw	fa4,216(sp)
 19e:	6c20                	flw	fs0,88(s0)
        if ((1 << (ee_u32)i) & results[0].execs)
 1a0:	20676e6f          	jal	t3,763a6 <_data_lma+0x6bd8e>
            num_algorithms++;
 1a4:	6e75                	lui	t3,0x1d
 1a6:	6e676973          	csrrsi	s2,0x6e6,14
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
 1aa:	6465                	lui	s0,0x19
 1ac:	6920                	flw	fs0,80(a0)
 1ae:	746e                	flw	fs0,248(sp)
    results[i].err         = 0;
 1b0:	5f00                	lw	s0,56(a4)
 1b2:	7361                	lui	t1,0xffff8
        if ((1 << (ee_u32)i) & results[0].execs)
 1b4:	6d697463          	bgeu	s2,s6,87c <main+0x804>
            num_algorithms++;
 1b8:	5f65                	li	t5,-7
 1ba:	7562                	flw	fa0,56(sp)
        if ((1 << (ee_u32)i) & results[0].execs)
 1bc:	0066                	c.slli	zero,0x19
 1be:	5f5f 4673 4c49      	0x4c4946735f5f
            num_algorithms++;
 1c4:	0045                	c.nop	17
 1c6:	775f 7364 4d00      	0x4d007364775f
        results[i].size = results[i].size / num_algorithms;
 1cc:	5441                	li	s0,-16
 1ce:	4144                	lw	s1,4(a0)
 1d0:	0054                	addi	a3,sp,4
 1d2:	65726f63          	bltu	tp,s7,830 <main+0x7b8>
 1d6:	625f 6e65 6863      	0x68636e65625f
 1dc:	6c5f 7369 0074      	0x7473696c5f
        if ((1 << (ee_u32)i) & results[0].execs)
 1e2:	636c6163          	bltu	s8,s6,804 <main+0x78c>
 1e6:	665f 6e75 0063      	0x636e75665f
        if (results[i].execs & ID_LIST)
 1ec:	6f70                	flw	fa2,92(a4)
 1ee:	7472                	flw	fs0,60(sp)
        if (results[i].execs & ID_MATRIX)
 1f0:	6261                	lui	tp,0x18
 1f2:	656c                	flw	fa1,76(a0)
        if (results[i].execs & ID_STATE)
 1f4:	695f 0064 5f5f      	0x5f5f0064695f
 1fa:	4946                	lw	s2,80(sp)
            core_init_state(
 1fc:	454c                	lw	a1,12(a0)
 1fe:	5f00                	lw	s0,56(a4)
 200:	7366666f          	jal	a2,66936 <_data_lma+0x5c31e>
                results[0].size, results[i].seed1, results[i].memblock[3]);
 204:	7465                	lui	s0,0xffff9
 206:	5f00                	lw	s0,56(a4)
            core_init_state(
 208:	6d65                	lui	s10,0x19
 20a:	7265                	lui	tp,0xffff9
 20c:	636e6567          	0x636e6567
 210:	0079                	c.nop	30
 212:	79706f63          	bltu	zero,s7,9b0 <main+0x938>
 216:	695f 666e 006f      	0x6f666e695f
 21c:	65726f63          	bltu	tp,s7,87a <main+0x802>
 220:	625f 6e65 6863      	0x68636e65625f
 226:	735f 6174 6574      	0x65746174735f
    if (results[0].iterations == 0)
 22c:	5f00                	lw	s0,56(a4)
 22e:	745f 5f6d 6573      	0x65735f6d745f
        while (secs_passed < (secs_ret)1)
 234:	5f5f0063          	beq	t5,s5,814 <main+0x79c>
 238:	6d74                	flw	fa3,92(a0)
 23a:	795f 6164 0079      	0x796164795f
        results[0].iterations = 1;
 240:	695f 636e 5f00      	0x5f00636e695f
        crc      = core_bench_list(res, 1);
 246:	6e69                	lui	t3,0x1a
 248:	0064                	addi	s1,sp,12
 24a:	6d5f 7362 7472      	0x747273626d5f
 250:	7363776f          	jal	a4,37986 <_data_lma+0x2d36e>
 254:	735f 6174 6574      	0x65746174735f
 25a:	6800                	flw	fs0,16(s0)
            results[0].iterations *= 10;
 25c:	5c3a                	lw	s8,172(sp)
 25e:	6c41                	lui	s8,0x10
    for (i = 0; i < iterations; i++)
 260:	506c                	lw	a1,100(s0)
 262:	6f72                	flw	ft10,28(sp)
            results[0].iterations *= 10;
 264:	656a                	flw	fa0,152(sp)
 266:	545c7463          	bgeu	s8,t0,7ae <main+0x736>
 26a:	6e61                	lui	t3,0x18
 26c:	6f775c67          	0x6f775c67
 270:	6b72                	flw	fs6,28(sp)
 272:	722d                	lui	tp,0xfffeb
            start_time();
 274:	7469                	lui	s0,0xffffa
 276:	6574                	flw	fa3,76(a0)
 278:	5f72                	lw	t5,60(sp)
 27a:	31636f73          	csrrsi	t5,0x316,6
    ee_u32        iterations = res->iterations;
 27e:	302e                	fld	ft0,232(sp)
    res->crc                 = 0;
 280:	695c                	flw	fa5,20(a0)
 282:	66006173          	csrrsi	sp,0x660,0
 286:	6e69                	lui	t3,0x1a
    for (i = 0; i < iterations; i++)
 288:	5f64                	lw	s1,124(a4)
 28a:	756e                	flw	fa0,248(sp)
        crc      = core_bench_list(res, 1);
 28c:	006d                	c.nop	27
 28e:	745f 6e7a 6d61      	0x6d616e7a745f
 294:	0065                	c.nop	25
 296:	5f5f 6176 756c      	0x756c61765f5f
        res->crc = crcu16(crc, res->crc);
 29c:	0065                	c.nop	25
 29e:	705f 7335 7000      	0x70007335705f
 2a4:	0074726f          	jal	tp,47aaa <_data_lma+0x3d492>
 2a8:	775f 7363 7472      	0x74727363775f
        crc      = core_bench_list(res, -1);
 2ae:	73626d6f          	jal	s10,269e4 <_data_lma+0x1c3cc>
 2b2:	735f 6174 6574      	0x65746174735f
 2b8:	5f00                	lw	s0,56(a4)
 2ba:	626d                	lui	tp,0x1b
        res->crc = crcu16(crc, res->crc);
 2bc:	656c                	flw	fa1,76(a0)
 2be:	5f6e                	lw	t5,248(sp)
 2c0:	74617473          	csrrci	s0,0x746,2
 2c4:	0065                	c.nop	25
 2c6:	5f5f 6d74 6d5f      	0x6d5f6d745f5f
        if (i == 0)
 2cc:	6164                	flw	fs1,68(a0)
 2ce:	0079                	c.nop	30
    for (i = 0; i < iterations; i++)
 2d0:	735f 6769 665f      	0x665f6769735f
 2d6:	6e75                	lui	t3,0x1d
            stop_time();
 2d8:	6d5f0063          	beq	t5,s5,998 <main+0x920>
 2dc:	7262                	flw	ft4,56(sp)
 2de:	6f74                	flw	fa3,92(a4)
            secs_passed = time_in_secs(get_time());
 2e0:	735f6377          	0x735f6377
 2e4:	6174                	flw	fa3,68(a0)
 2e6:	6574                	flw	fa3,76(a0)
 2e8:	5f00                	lw	s0,56(a4)
 2ea:	7461                	lui	s0,0xffff8
 2ec:	7865                	lui	a6,0xffff9
 2ee:	7469                	lui	s0,0xffffa
        while (secs_passed < (secs_ret)1)
 2f0:	0030                	addi	a2,sp,8
 2f2:	6565                	lui	a0,0x19
 2f4:	755f 0038 6f63      	0x6f630038755f
            secs_passed = time_in_secs(get_time());
 2fa:	6572                	flw	fa0,28(sp)
 2fc:	6c5f 7369 5f74      	0x5f7473696c5f
        while (secs_passed < (secs_ret)1)
 302:	6e75                	lui	t3,0x1d
 304:	6f64                	flw	fs1,92(a4)
 306:	725f 6d65 766f      	0x766f6d65725f
        divisor = (ee_u32)secs_passed;
 30c:	0065                	c.nop	25
 30e:	665f 6f6c 6b63      	0x6b636f6c665f
 314:	745f 6300 726f      	0x726f6300745f
 31a:	5f65                	li	t5,-7
        if (divisor == 0) /* some machines cast float to int as 0 since this
 31c:	696c                	flw	fa1,84(a0)
 31e:	665f7473          	csrrci	s0,0x665,30
            divisor = 1;
 322:	6e69                	lui	t3,0x1a
        results[0].iterations *= 1 + 10 / divisor;
 324:	0064                	addi	s1,sp,12
 326:	5f5f 6377 0068      	0x6863775f5f
 32c:	695f 626f 0073      	0x73626f695f
 332:	635f 6f6c 6573      	0x65736f6c635f
 338:	6400                	flw	fs0,8(s0)
 33a:	7974                	flw	fa3,116(a0)
    start_time();
 33c:	6570                	flw	fa2,76(a0)
 33e:	5f00                	lw	s0,56(a4)
 340:	735f 6964 6964      	0x69646964735f
    iterate(&results[0]);
 346:	696e                	flw	fs2,216(sp)
 348:	0074                	addi	a3,sp,12
 34a:	745f 6d69 7a65      	0x7a656d69745f
 350:	00656e6f          	jal	t3,56356 <_data_lma+0x4bd3e>
 354:	6572                	flw	fa0,28(sp)
 356:	7674                	flw	fa3,108(a2)
 358:	6c61                	lui	s8,0x18
 35a:	6d00                	flw	fs0,24(a0)
 35c:	7461                	lui	s0,0xffff8
 35e:	705f 7261 6d61      	0x6d617261705f
    stop_time();
 364:	735f0073          	0x735f0073
 368:	6474                	flw	fa3,76(s0)
 36a:	6e69                	lui	t3,0x1a
    total_time = get_time();
 36c:	5f00                	lw	s0,56(a4)
 36e:	6d6d6167          	0x6d6d6167
 372:	5f61                	li	t5,-8
    seedcrc = crc16(results[0].seed1, seedcrc);
 374:	6e676973          	csrrsi	s2,0x6e6,14
 378:	006d6167          	0x6d6167
 37c:	75637263          	bgeu	t1,s6,ac0 <main+0xa48>
    total_time = get_time();
 380:	3631                	jal	fffffe8c <__freertos_irq_stack_top+0xfefefe8c>
 382:	6c00                	flw	fs0,24(s0)
    seedcrc = crc16(results[0].seed1, seedcrc);
 384:	20676e6f          	jal	t3,7658a <_data_lma+0x6bf72>
 388:	6f6c                	flw	fa1,92(a4)
 38a:	676e                	flw	fa4,216(sp)
 38c:	6920                	flw	fs0,80(a0)
 38e:	746e                	flw	fs0,248(sp)
 390:	6300                	flw	fs0,0(a4)
 392:	5f65726f          	jal	tp,57988 <_data_lma+0x4d370>
 396:	696c                	flw	fa1,84(a0)
    seedcrc = crc16(results[0].seed2, seedcrc);
 398:	6d5f7473          	csrrci	s0,0x6d5,30
 39c:	7265                	lui	tp,0xffff9
 39e:	6f736567          	0x6f736567
 3a2:	7472                	flw	fs0,60(sp)
 3a4:	5f00                	lw	s0,56(a4)
 3a6:	6162                	flw	ft2,24(sp)
 3a8:	5f006573          	csrrsi	a0,0x5f0,0
    seedcrc = crc16(results[0].seed3, seedcrc);
 3ac:	7266                	flw	ft4,120(sp)
 3ae:	6565                	lui	a0,0x19
 3b0:	696c                	flw	fa1,84(a0)
 3b2:	5f007473          	csrrci	s0,0x5f0,0
 3b6:	756d                	lui	a0,0xffffb
 3b8:	746c                	flw	fa1,108(s0)
 3ba:	5f00                	lw	s0,56(a4)
 3bc:	555f 6f4c 676e      	0x676e6f4c555f
    seedcrc = crc16(results[0].size, seedcrc);
 3c2:	6600                	flw	fs0,8(a2)
 3c4:	6e69                	lui	t3,0x1a
 3c6:	6564                	flw	fs1,76(a0)
 3c8:	0072                	c.slli	zero,0x1c
 3ca:	775f 7263 6f74      	0x6f747263775f
    switch (seedcrc)
 3d0:	626d                	lui	tp,0x1b
 3d2:	735f 6174 6574      	0x65746174735f
    seedcrc = crc16(results[0].size, seedcrc);
 3d8:	5f00                	lw	s0,56(a4)
 3da:	6966                	flw	fs2,88(sp)
    switch (seedcrc)
 3dc:	656c                	flw	fa1,76(a0)
 3de:	6300                	flw	fs0,0(a4)
 3e0:	5f65726f          	jal	tp,579d6 <_data_lma+0x4d3be>
 3e4:	6562                	flw	fa0,24(sp)
 3e6:	636e                	flw	ft6,216(sp)
 3e8:	5f68                	lw	a0,124(a4)
 3ea:	616d                	addi	sp,sp,240
 3ec:	7274                	flw	fa3,100(a2)
 3ee:	7869                	lui	a6,0xffffa
 3f0:	5f00                	lw	s0,56(a4)
 3f2:	635f 656c 6e61      	0x6e61656c635f
 3f8:	7075                	c.lui	zero,0xffffd
 3fa:	6c00                	flw	fs0,24(s0)
            ee_printf("2K performance run parameters for coremark.\n");
 3fc:	7369                	lui	t1,0xffffa
 3fe:	5f74                	lw	a3,124(a4)
 400:	6164                	flw	fs1,68(a0)
 402:	6174                	flw	fa3,68(a0)
 404:	735f 5f00 626d      	0x626d5f00735f
 40a:	74617473          	csrrci	s0,0x746,2
 40e:	5f65                	li	t5,-7
 410:	0074                	addi	a3,sp,12
 412:	665f 616e 6772      	0x6772616e665f
            known_id = 3;
 418:	5f5f0073          	0x5f5f0073
            ee_printf("2K performance run parameters for coremark.\n");
 41c:	6d74                	flw	fa3,92(a0)
 41e:	695f 6473 7473      	0x74736473695f
 424:	7000                	flw	fs0,32(s0)
 426:	6164                	flw	fs1,68(a0)
            known_id = 3;
 428:	6174                	flw	fa3,68(a0)
 42a:	5f00                	lw	s0,56(a4)
        for (i = 0; i < default_num_contexts; i++)
 42c:	5f68                	lw	a0,124(a4)
 42e:	7265                	lui	tp,0xffff9
 430:	6e72                	flw	ft8,28(sp)
 432:	5f5f006f          	j	f1226 <_data_lma+0xe6c0e>
 436:	6d74                	flw	fa3,92(a0)
 438:	6d5f 6e6f 6c00      	0x6c006e6f6d5f
 43e:	20676e6f          	jal	t3,76644 <_data_lma+0x6c02c>
            results[i].err = 0;
 442:	6f64                	flw	fs1,92(a4)
 444:	6275                	lui	tp,0x1d
 446:	656c                	flw	fa1,76(a0)
 448:	5f00                	lw	s0,56(a4)
 44a:	74697277          	0x74697277
 44e:	0065                	c.nop	25
 450:	7865                	lui	a6,0xffff9
 452:	6365                	lui	t1,0x19
 454:	45520073          	0x45520073
 458:	544c5553          	0x544c5553
 45c:	00535f53          	fadd.s	ft10,ft6,ft5,unknown
 460:	615f 6574 6978      	0x69786574615f
 466:	0074                	addi	a3,sp,12
 468:	6d5f 7362 6174      	0x617473626d5f
 46e:	6574                	flw	fa3,76(a0)
 470:	7000                	flw	fs0,32(s0)
 472:	7265                	lui	tp,0xffff9
 474:	695f 6574 006d      	0x6d6574695f
            total_errors += results[i].err;
 47a:	726f6873          	csrrsi	a6,0x726,30
        for (i = 0; i < default_num_contexts; i++)
 47e:	2074                	fld	fa3,192(s0)
            total_errors += results[i].err;
 480:	6e69                	lui	t3,0x1a
 482:	0074                	addi	a3,sp,12
        for (i = 0; i < default_num_contexts; i++)
 484:	2f2e                	fld	ft10,200(sp)
 486:	2f637273          	csrrci	tp,0x2f6,6
            total_errors += results[i].err;
 48a:	65726f63          	bltu	tp,s7,ae8 <main+0xa70>
        for (i = 0; i < default_num_contexts; i++)
 48e:	616d                	addi	sp,sp,240
            total_errors += results[i].err;
 490:	6b72                	flw	fs6,28(sp)
 492:	726f632f          	0x726f632f
        for (i = 0; i < default_num_contexts; i++)
 496:	5f65                	li	t5,-7
            total_errors += results[i].err;
 498:	696c                	flw	fa1,84(a0)
 49a:	6a5f7473          	csrrci	s0,0x6a5,30
        for (i = 0; i < default_num_contexts; i++)
 49e:	2e6e696f          	jal	s2,e6784 <_data_lma+0xdc16c>
            results[i].err = 0;
 4a2:	696d0063          	beq	s10,s6,b22 <main+0xaaa>
 4a6:	64657373          	csrrci	t1,0x646,10
 4aa:	6300                	flw	fs0,0(a4)
 4ac:	6372                	flw	ft6,28(sp)
 4ae:	616d                	addi	sp,sp,240
 4b0:	7274                	flw	fa3,100(a2)
 4b2:	7869                	lui	a6,0xffffa
 4b4:	5f00                	lw	s0,56(a4)
 4b6:	735f 0066 735f      	0x735f0066735f
 4bc:	6769                	lui	a4,0x1a
 4be:	006e                	c.slli	zero,0x1b
            if ((results[i].execs & ID_LIST)
 4c0:	64656573          	csrrsi	a0,0x646,10
 4c4:	0031                	c.nop	12
 4c6:	64656573          	csrrsi	a0,0x646,10
                && (results[i].crclist != list_known_crc[known_id]))
 4ca:	0032                	c.slli	zero,0xc
 4cc:	64656573          	csrrsi	a0,0x646,10
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
 4d0:	69660033          	0x69660033
 4d4:	646e                	flw	fs0,216(sp)
 4d6:	7265                	lui	tp,0xffff9
 4d8:	695f 7864 5f00      	0x5f007864695f
 4de:	775f 6863 0062      	0x626863775f
 4e4:	675f 6f6c 6162      	0x61626f6c675f
                results[i].err++;
 4ea:	5f6c                	lw	a1,124(a4)
 4ec:	6d69                	lui	s10,0x1a
 4ee:	7570                	flw	fa2,108(a0)
 4f0:	6572                	flw	fa0,28(sp)
 4f2:	705f 7274 5f00      	0x5f007274705f
            if ((results[i].execs & ID_MATRIX)
 4f8:	745f 5f6d 6579      	0x65795f6d745f
 4fe:	7261                	lui	tp,0xffff8
 500:	6900                	flw	fs0,16(a0)
 502:	736e                	flw	ft6,248(sp)
 504:	7265                	lui	tp,0xffff9
 506:	5f74                	lw	a3,124(a4)
 508:	6f70                	flw	fa2,92(a4)
 50a:	6e69                	lui	t3,0x1a
 50c:	0074                	addi	a3,sp,12
 50e:	6c5f 636f 6c61      	0x6c61636f6c5f
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
 514:	6974                	flw	fa3,84(a0)
 516:	656d                	lui	a0,0x1b
 518:	625f 6675 5f00      	0x5f006675625f
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
 51e:	6e75                	lui	t3,0x1d
 520:	7375                	lui	t1,0xffffd
 522:	6465                	lui	s0,0x19
 524:	6c00                	flw	fs0,24(s0)
 526:	7369                	lui	t1,0xffffa
 528:	5f74                	lw	a3,124(a4)
 52a:	00706d63          	bltu	zero,t2,544 <main+0x4cc>
 52e:	5f706d63          	bltu	zero,s7,b28 <main+0xab0>
 532:	706d6f63          	bltu	s10,t1,c50 <main+0xbd8>
                results[i].err++;
 536:	656c                	flw	fa1,76(a0)
 538:	0078                	addi	a4,sp,12
 53a:	635f 7476 656c      	0x656c7476635f
 540:	006e                	c.slli	zero,0x1b
 542:	6d5f 7861 6477      	0x647778616d5f
            if ((results[i].execs & ID_STATE)
 548:	6c5f0073          	0x6c5f0073
                && (results[i].crcstate != state_known_crc[known_id]))
 54c:	3436                	fld	fs0,360(sp)
 54e:	5f61                	li	t5,-8
 550:	7562                	flw	fa0,56(sp)
 552:	0066                	c.slli	zero,0x19
 554:	656e                	flw	fa0,216(sp)
 556:	65746977          	0x65746977
 55a:	006d                	c.nop	27
 55c:	6572                	flw	fa0,28(sp)
 55e:	6f6d                	lui	t5,0x1b
 560:	6576                	flw	fa0,92(sp)
 562:	0072                	c.slli	zero,0x1c
 564:	625f 6b6c 6973      	0x69736b6c625f
 56a:	657a                	flw	fa0,156(sp)
 56c:	5f00                	lw	s0,56(a4)
 56e:	745f 006d 6c5f      	0x6c5f006d745f
        && (results[0].seed3 == 0))
 574:	006b636f          	jal	t1,b657a <_data_lma+0xabf62>
 578:	6e5f 6f69 7362      	0x73626f696e5f
        results[0].seed3 = 0x66;
 57e:	7700                	flw	fs0,40(a4)
 580:	6e69                	lui	t3,0x1a
 582:	5f74                	lw	a3,124(a4)
 584:	0074                	addi	a3,sp,12
 586:	656d                	lui	a0,0x1b
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
 588:	626d                	lui	tp,0x1b
 58a:	6f6c                	flw	fa1,92(a4)
            results[i].list = core_list_init(
 58c:	655f6b63          	bltu	t5,s5,be2 <main+0xb6a>
 590:	646e                	flw	fs0,216(sp)
 592:	6300                	flw	fs0,0(a4)
 594:	6372                	flw	ft6,28(sp)
 596:	696c                	flw	fa1,84(a0)
 598:	64007473          	csrrci	s0,0x640,0
 59c:	7461                	lui	s0,0xffff8
 59e:	6261                	lui	tp,0x18
 5a0:	6f6c                	flw	fa1,92(a4)
 5a2:	655f6b63          	bltu	t5,s5,bf8 <main+0xb80>
 5a6:	646e                	flw	fs0,216(sp)
 5a8:	5f00                	lw	s0,56(a4)
 5aa:	7364                	flw	fs1,100(a4)
 5ac:	61685f6f          	jal	t5,85bc2 <_data_lma+0x7b5aa>
 5b0:	646e                	flw	fs0,216(sp)
 5b2:	656c                	flw	fa1,76(a0)
 5b4:	6900                	flw	fs0,16(a0)
 5b6:	736e                	flw	ft6,248(sp)
 5b8:	7a69                	lui	s4,0xffffa
 5ba:	0065                	c.nop	25
 5bc:	635f 7476 7562      	0x75627476635f
        if (results[i].execs & ID_MATRIX)
 5c2:	0066                	c.slli	zero,0x19
                                 | (((ee_s32)results[i].seed2) << 16),
 5c4:	6e75                	lui	t3,0x1d
 5c6:	6e676973          	csrrsi	s2,0x6e6,14
 5ca:	6465                	lui	s0,0x19
 5cc:	6320                	flw	fs0,64(a4)
 5ce:	6168                	flw	fa0,68(a0)
            core_init_matrix(results[0].size,
 5d0:	0072                	c.slli	zero,0x1c
 5d2:	696c                	flw	fa1,84(a0)
                                 | (((ee_s32)results[i].seed2) << 16),
 5d4:	685f7473          	csrrci	s0,0x685,30
 5d8:	6165                	addi	sp,sp,112
 5da:	5f64                	lw	s1,124(a4)
                             (ee_s32)results[i].seed1
 5dc:	6f630073          	0x6f630073
                                 | (((ee_s32)results[i].seed2) << 16),
 5e0:	6572                	flw	fa0,28(sp)
 5e2:	6c5f 7369 5f74      	0x5f7473696c5f
                             (ee_s32)results[i].seed1
 5e8:	6e69                	lui	t3,0x1a
 5ea:	74726573          	csrrsi	a0,0x747,4
            core_init_matrix(results[0].size,
 5ee:	6e5f 7765 5f00      	0x5f0077656e5f
 5f4:	64746567          	0x64746567
 5f8:	7461                	lui	s0,0xffff8
 5fa:	5f65                	li	t5,-7
 5fc:	7265                	lui	tp,0xffff9
 5fe:	0072                	c.slli	zero,0x1c
 600:	6174                	flw	fa3,68(a0)
 602:	6c69                	lui	s8,0x1a
 604:	6300                	flw	fs0,0(a4)
 606:	5f65726f          	jal	tp,57bfc <_data_lma+0x4d5e4>
 60a:	6572                	flw	fa0,28(sp)
    switch (seedcrc)
 60c:	746c7573          	csrrci	a0,0x746,24
 610:	615f0073          	0x615f0073
 614:	6464                	flw	fs1,76(s0)
 616:	6400                	flw	fs0,8(s0)
 618:	6665                	lui	a2,0x19
 61a:	7561                	lui	a0,0xffff8
 61c:	746c                	flw	fa1,108(s0)
 61e:	6e5f 6d75 635f      	0x635f6d756e5f
            ee_printf("Profile generation run parameters for coremark.\n");
 624:	65746e6f          	jal	t3,4747a <_data_lma+0x3ce62>
 628:	7478                	flw	fa4,108(s0)
 62a:	696c0073          	0x696c0073
 62e:	685f7473          	csrrci	s0,0x685,30
 632:	6165                	addi	sp,sp,112
 634:	0064                	addi	s1,sp,12
 636:	5f5f 6273 6675      	0x667562735f5f
 63c:	6900                	flw	fs0,16(a0)
 63e:	6574                	flw	fa3,76(a0)
            known_id = 2;
 640:	6172                	flw	ft2,28(sp)
 642:	6974                	flw	fa3,84(a0)
            ee_printf("Profile generation run parameters for coremark.\n");
 644:	00736e6f          	jal	t3,36e4a <_data_lma+0x2c832>
 648:	675f 756c 0065      	0x65756c675f
 64e:	65726f63          	bltu	tp,s7,cac <core_bench_list+0x4c>
            known_id = 2;
 652:	705f 726f 6174      	0x6174726f705f
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
 658:	6c62                	flw	fs8,24(sp)
 65a:	0065                	c.nop	25
 65c:	6565                	lui	a0,0x19
 65e:	755f 3631 5f00      	0x5f003631755f
 664:	735f 6c67 6575      	0x65756c67735f
 66a:	5f00                	lw	s0,56(a4)
 66c:	74727473          	csrrci	s0,0x747,4
                results[i].err++;
 670:	6c5f6b6f          	jal	s6,f7534 <_data_lma+0xecf1c>
 674:	7361                	lui	t1,0xffff8
 676:	0074                	addi	a3,sp,12
 678:	6d5f 7462 776f      	0x776f74626d5f
 67e:	74735f63          	bge	t1,t2,ddc <core_bench_list+0x17c>
 682:	7461                	lui	s0,0xffff8
 684:	0065                	c.nop	25
 686:	20554e47          	fmsub.s	ft8,fa0,ft5,ft4,rmm
    switch (seedcrc)
 68a:	20313143          	fmadd.s	ft2,ft2,ft3,ft4,rup
    ee_s16       known_id = -1, total_errors = 0;
 68e:	2e38                	fld	fa4,88(a2)
    switch (seedcrc)
 690:	20302e33          	0x20302e33
    ee_s16       known_id = -1, total_errors = 0;
 694:	6d2d                	lui	s10,0xb
 696:	646f6d63          	bltu	t5,t1,cf0 <core_bench_list+0x90>
 69a:	6c65                	lui	s8,0x19
    total_errors += check_data_types();
 69c:	6d3d                	lui	s10,0xf
 69e:	6465                	lui	s0,0x19
 6a0:	6f6c                	flw	fa1,92(a4)
 6a2:	6d2d2077          	0x6d2d2077
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
 6a6:	6261                	lui	tp,0x18
    total_errors += check_data_types();
 6a8:	3d69                	jal	542 <main+0x4ca>
 6aa:	6c69                	lui	s8,0x1a
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
 6ac:	3370                	fld	fa2,224(a4)
 6ae:	2032                	fld	ft0,264(sp)
 6b0:	6d2d                	lui	s10,0xb
 6b2:	7261                	lui	tp,0xffff8
 6b4:	723d6863          	bltu	s10,gp,de4 <core_bench_list+0x184>
 6b8:	3376                	fld	ft6,376(sp)
 6ba:	6932                	flw	fs2,12(sp)
    ee_printf("Total ticks      : %d\n", (int)total_time);
 6bc:	206d                	jal	766 <main+0x6ee>
 6be:	672d                	lui	a4,0xb
 6c0:	2d20                	fld	fs0,88(a0)
 6c2:	2d20334f          	0x2d20334f
 6c6:	3d647473          	csrrci	s0,0x3d6,8
 6ca:	31756e67          	0x31756e67
 6ce:	2031                	jal	6da <main+0x662>
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
 6d0:	662d                	lui	a2,0xb
 6d2:	7566                	flw	fa0,120(sp)
 6d4:	636e                	flw	ft6,216(sp)
 6d6:	6974                	flw	fa3,84(a0)
 6d8:	732d6e6f          	jal	t3,d6e0a <_data_lma+0xcc7f2>
 6dc:	6365                	lui	t1,0x19
 6de:	6974                	flw	fa3,84(a0)
 6e0:	20736e6f          	jal	t3,370e6 <_data_lma+0x2cace>
 6e4:	662d                	lui	a2,0xb
 6e6:	6164                	flw	fs1,68(a0)
 6e8:	6174                	flw	fa3,68(a0)
 6ea:	732d                	lui	t1,0xfffeb
 6ec:	6365                	lui	t1,0x19
 6ee:	6974                	flw	fa3,84(a0)
 6f0:	00736e6f          	jal	t3,36ef6 <_data_lma+0x2c8de>
    if (time_in_secs(total_time) > 0)
 6f4:	6c5f 636f 6c61      	0x6c61636f6c5f
 6fa:	0065                	c.nop	25
 6fc:	735f 6973 657a      	0x657a6973735f
    total_errors += check_data_types();
 702:	745f 5f00 6572      	0x65725f00745f
    if (time_in_secs(total_time) > 0)
 708:	6e65                	lui	t3,0x19
 70a:	0074                	addi	a3,sp,12
    total_errors += check_data_types();
 70c:	726f6873          	csrrsi	a6,0x726,30
    if (time_in_secs(total_time) > 0)
 710:	2074                	fld	fa3,192(s0)
 712:	6e75                	lui	t3,0x1d
 714:	6e676973          	csrrsi	s2,0x6e6,14
 718:	6465                	lui	s0,0x19
 71a:	6920                	flw	fs0,80(a0)
                  default_num_contexts * results[0].iterations
 71c:	746e                	flw	fs0,248(sp)
 71e:	6400                	flw	fs0,8(s0)
        ee_printf("Iterations/Sec   : %lf\n",
 720:	7461                	lui	s0,0xffff8
 722:	3161                	jal	3aa <main+0x332>
 724:	0036                	c.slli	zero,0xd
 726:	665f 746e 7079      	0x7079746e665f
 72c:	7365                	lui	t1,0xffff9
 72e:	5f00                	lw	s0,56(a4)
 730:	657a6973          	csrrsi	s2,0x657,20
                      / time_in_secs(total_time));
 734:	5f00                	lw	s0,56(a4)
 736:	5f66666f          	jal	a2,66d2c <_data_lma+0x5c714>
        ee_printf("Iterations/Sec   : %lf\n",
 73a:	0074                	addi	a3,sp,12
                      / time_in_secs(total_time));
 73c:	6e5f 7562 0066      	0x6675626e5f
 742:	755f 756e 6573      	0x6573756e755f
        ee_printf("Iterations/Sec   : %lf\n",
 748:	5f64                	lw	s1,124(a4)
 74a:	6172                	flw	ft2,28(sp)
 74c:	646e                	flw	fs0,216(sp)
 74e:	6500                	flw	fs0,8(a0)
 750:	5f65                	li	t5,-7
 752:	00323373          	csrrc	t1,fcsr,tp
 756:	7469                	lui	s0,0xffffa
 758:	6d65                	lui	s10,0x19
 75a:	725f 6d65 766f      	0x766f6d65725f
 760:	6465                	lui	s0,0x19
 762:	5f00                	lw	s0,56(a4)
 764:	6e75                	lui	t3,0x1d
 766:	63657073          	csrci	0x636,10
 76a:	6669                	lui	a2,0x1a
 76c:	6569                	lui	a0,0x1a
 76e:	5f64                	lw	s1,124(a4)
 770:	6f6c                	flw	fa1,92(a4)
 772:	656c6163          	bltu	s8,s6,db4 <core_bench_list+0x154>
    if (time_in_secs(total_time) < 10)
 776:	695f 666e 006f      	0x6f666e695f
 77c:	665f 616c 7367      	0x7367616c665f
 782:	0032                	c.slli	zero,0xc
 784:	695f 5f73 7863      	0x78635f73695f
 78a:	0061                	c.nop	24
 78c:	6d6e                	flw	fs10,216(sp)
 78e:	7265                	lui	tp,0xffff9
 790:	00736567          	0x736567
 794:	735f 6565 0064      	0x646565735f
    ee_printf("Iterations       : %lu\n",
 79a:	725f 6e61 5f64      	0x5f646e61725f
 7a0:	656e                	flw	fa0,216(sp)
 7a2:	7478                	flw	fa4,108(s0)
 7a4:	5f00                	lw	s0,56(a4)
 7a6:	6c5f 636f 6c61      	0x6c61636f6c5f
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
 7ac:	5f65                	li	t5,-7
 7ae:	0074                	addi	a3,sp,12
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
 7b0:	735f 6565 006b      	0x6b6565735f
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
 7b6:	73637263          	bgeu	t1,s6,eda <core_bench_list+0x27a>
        total_errors++;
 7ba:	6174                	flw	fa3,68(a0)
 7bc:	6574                	flw	fa3,76(a0)
 7be:	4300                	lw	s0,0(a4)
    ee_printf("Iterations       : %lu\n",
 7c0:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
 7c4:	4f50                	lw	a2,28(a4)
 7c6:	5452                	lw	s0,52(sp)
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
 7c8:	4241                	li	tp,16
 7ca:	454c                	lw	a1,12(a0)
 7cc:	535f 5f00 7473      	0x74735f00535f
 7d2:	6564                	flw	fs1,76(a0)
 7d4:	7272                	flw	ft4,60(sp)
 7d6:	5f00                	lw	s0,56(a4)
 7d8:	6d6e                	flw	fs10,216(sp)
 7da:	6c61                	lui	s8,0x18
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
 7dc:	6f6c                	flw	fa1,92(a4)
 7de:	755f0063          	beq	t5,s5,f1e <core_bench_list+0x2be>
 7e2:	7562                	flw	fa0,56(sp)
 7e4:	0066                	c.slli	zero,0x19
 7e6:	7469                	lui	s0,0xffffa
 7e8:	7265                	lui	tp,0xffff9
 7ea:	7461                	lui	s0,0xffff8
 7ec:	0065                	c.nop	25
 7ee:	696c                	flw	fa1,84(a0)
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
 7f0:	6b5f7473          	csrrci	s0,0x6b5,30
 7f4:	6f6e                	flw	ft10,216(sp)
 7f6:	635f6e77          	0x635f6e77
 7fa:	6372                	flw	ft6,28(sp)
 7fc:	4300                	lw	s0,0(a4)
 7fe:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
 802:	4954                	lw	a3,20(a0)
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
 804:	00534b43          	fmadd.s	fs6,ft6,ft5,ft0,rmm
 808:	6974                	flw	fa3,84(a0)
 80a:	656d                	lui	a0,0x1b
 80c:	695f 5f6e 6573      	0x65735f6e695f
 812:	73007363          	bgeu	zero,a6,f38 <core_bench_list+0x2d8>
 816:	6365                	lui	t1,0x19
    if (results[0].execs & ID_LIST)
 818:	65725f73          	csrrwi	t5,0x657,4
 81c:	0074                	addi	a3,sp,12
 81e:	7270                	flw	fa2,100(a2)
 820:	7365                	lui	t1,0xffff9
 822:	6e00                	flw	fs0,24(a2)
        for (i = 0; i < default_num_contexts; i++)
 824:	6d75                	lui	s10,0x1d
 826:	615f 676c 726f      	0x726f676c615f
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
 82c:	7469                	lui	s0,0xffffa
 82e:	6d68                	flw	fa0,92(a0)
 830:	65670073          	0x65670073
 834:	5f74                	lw	a3,124(a4)
 836:	6974                	flw	fa3,84(a0)
 838:	656d                	lui	a0,0x1b
 83a:	7000                	flw	fs0,32(s0)
 83c:	6174726f          	jal	tp,48652 <_data_lma+0x3e03a>
        for (i = 0; i < default_num_contexts; i++)
 840:	6c62                	flw	fs8,24(sp)
 842:	5f65                	li	t5,-7
 844:	6e69                	lui	t3,0x1a
 846:	7469                	lui	s0,0xffffa
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
 848:	6300                	flw	fs0,0(a4)
 84a:	5f65726f          	jal	tp,57e40 <_data_lma+0x4d828>
 84e:	6e69                	lui	t3,0x1a
 850:	7469                	lui	s0,0xffffa
 852:	735f 6174 6574      	0x65746174735f
 858:	6400                	flw	fs0,8(s0)
 85a:	7669                	lui	a2,0xffffa
 85c:	7369                	lui	t1,0xffffa
 85e:	6300726f          	jal	tp,7e8e <_free_r+0x9a>
 862:	6f6c                	flw	fa1,92(a4)
 864:	745f6b63          	bltu	t5,t0,fba <core_bench_list+0x35a>
 868:	5f00                	lw	s0,56(a4)
 86a:	625f 6975 746c      	0x746c6975625f
 870:	6e69                	lui	t3,0x1a
 872:	705f 7475 0073      	0x737475705f
 878:	776f6e6b          	0x776f6e6b
        for (i = 0; i < default_num_contexts; i++)
 87c:	5f6e                	lw	t5,248(sp)
 87e:	6469                	lui	s0,0x1a
 880:	7000                	flw	fs0,32(s0)
 882:	6972                	flw	fs2,28(sp)
 884:	746e                	flw	fs0,248(sp)
 886:	0066                	c.slli	zero,0x19
 888:	63656863          	bltu	a0,s6,eb8 <core_bench_list+0x258>
 88c:	61645f6b          	0x61645f6b
 890:	6174                	flw	fa3,68(a0)
 892:	745f 7079 7365      	0x73657079745f
    if (results[0].execs & ID_MATRIX)
 898:	6700                	flw	fs0,8(a4)
 89a:	7465                	lui	s0,0xffff9
        for (i = 0; i < default_num_contexts; i++)
 89c:	735f 6565 5f64      	0x5f646565735f
 8a2:	2e003233          	0x2e003233
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
 8a6:	6372732f          	0x6372732f
 8aa:	726f632f          	0x726f632f
 8ae:	6d65                	lui	s10,0x19
 8b0:	7261                	lui	tp,0xffff8
 8b2:	6f632f6b          	0x6f632f6b
 8b6:	6572                	flw	fa0,28(sp)
        for (i = 0; i < default_num_contexts; i++)
 8b8:	6d5f 6961 2e6e      	0x2e6e69616d5f
 8be:	74730063          	beq	t1,t2,ffe <core_bench_list+0x39e>
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
 8c2:	7261                	lui	tp,0xffff8
 8c4:	5f74                	lw	a3,124(a4)
 8c6:	6974                	flw	fa3,84(a0)
 8c8:	656d                	lui	a0,0x1b
 8ca:	5f00                	lw	s0,56(a4)
 8cc:	625f 6975 746c      	0x746c6975625f
 8d2:	6e69                	lui	t3,0x1a
 8d4:	705f 7475 6863      	0x68637475705f
 8da:	7261                	lui	tp,0xffff8
 8dc:	7300                	flw	fs0,32(a4)
 8de:	6f74                	flw	fa3,92(a4)
 8e0:	5f70                	lw	a2,124(a4)
 8e2:	6974                	flw	fa3,84(a0)
 8e4:	656d                	lui	a0,0x1b
 8e6:	6100                	flw	fs0,0(a0)
 8e8:	6772                	flw	fa4,28(sp)
 8ea:	72610063          	beq	sp,t1,100a <__stack_size+0xa>
 8ee:	6d007667          	0x6d007667
 8f2:	6961                	lui	s2,0x18
        for (i = 0; i < default_num_contexts; i++)
 8f4:	006e                	c.slli	zero,0x1b
 8f6:	73636573          	csrrsi	a0,0x736,6
 8fa:	705f 7361 6573      	0x65737361705f
 900:	0064                	addi	s1,sp,12
 902:	64656573          	csrrsi	a0,0x646,10
 906:	00637263          	bgeu	t1,t1,90a <main+0x892>
 90a:	74617473          	csrrci	s0,0x746,2
    if (results[0].execs & ID_STATE)
 90e:	5f65                	li	t5,-7
 910:	776f6e6b          	0x776f6e6b
        for (i = 0; i < default_num_contexts; i++)
 914:	5f6e                	lw	t5,248(sp)
 916:	00637263          	bgeu	t1,t1,91a <main+0x8a2>
 91a:	65726f63          	bltu	tp,s7,f78 <core_bench_list+0x318>
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
 91e:	695f 696e 5f74      	0x5f74696e695f
 924:	616d                	addi	sp,sp,240
 926:	7274                	flw	fa3,100(a2)
 928:	7869                	lui	a6,0xffffa
 92a:	7300                	flw	fs0,32(a4)
 92c:	6174                	flw	fa3,68(a0)
 92e:	6d5f6b63          	bltu	t5,s5,1004 <__stack_size+0x4>
        for (i = 0; i < default_num_contexts; i++)
 932:	6d65                	lui	s10,0x19
 934:	6c62                	flw	fs8,24(sp)
 936:	006b636f          	jal	t1,b693c <_data_lma+0xac324>
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
 93a:	6f70                	flw	fa2,92(a4)
 93c:	7472                	flw	fs0,60(sp)
 93e:	6261                	lui	tp,0x18
 940:	656c                	flw	fa1,76(a0)
 942:	665f 6e69 0069      	0x696e69665f
 948:	6f74                	flw	fa3,92(a4)
 94a:	6174                	flw	fa3,68(a0)
 94c:	5f6c                	lw	a1,124(a4)
 94e:	6974                	flw	fa3,84(a0)
 950:	656d                	lui	a0,0x1b
 952:	7400                	flw	fs0,40(s0)
 954:	6c61746f          	jal	s0,1801a <_data_lma+0xda02>
 958:	655f 7272 726f      	0x726f7272655f
 95e:	656d0073          	0x656d0073
 962:	5f6d                	li	t5,-5
 964:	616e                	flw	ft2,216(sp)
 966:	656d                	lui	a0,0x1b
 968:	6d00                	flw	fs0,24(a0)
 96a:	7461                	lui	s0,0xffff8
        for (i = 0; i < default_num_contexts; i++)
 96c:	6972                	flw	fs2,28(sp)
 96e:	5f78                	lw	a4,124(a4)
 970:	776f6e6b          	0x776f6e6b
 974:	5f6e                	lw	t5,248(sp)
 976:	00637263          	bgeu	t1,t1,97a <main+0x902>
 97a:	7270                	flw	fa2,100(a2)
 97c:	7665                	lui	a2,0xffff9
 97e:	2e00                	fld	fs0,24(a2)
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
 980:	6372732f          	0x6372732f
    for (i = 0; i < default_num_contexts; i++)
 984:	726f632f          	0x726f632f
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
 988:	6d65                	lui	s10,0x19
 98a:	7261                	lui	tp,0xffff8
 98c:	6f632f6b          	0x6f632f6b
 990:	6572                	flw	fa0,28(sp)
 992:	6d5f 7461 6972      	0x697274616d5f
    for (i = 0; i < default_num_contexts; i++)
 998:	2e78                	fld	fa4,216(a2)
 99a:	6c630063          	beq	t1,t1,105a <__stack_size+0x5a>
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
 99e:	7069                	c.lui	zero,0xffffa
 9a0:	6176                	flw	ft2,92(sp)
 9a2:	006c                	addi	a1,sp,12
    for (i = 0; i < default_num_contexts; i++)
 9a4:	616d                	addi	sp,sp,240
 9a6:	7274                	flw	fa3,100(a2)
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
 9a8:	7869                	lui	a6,0xffffa
 9aa:	615f 6464 635f      	0x635f6464615f
 9b0:	74736e6f          	jal	t3,378f6 <_data_lma+0x2d2de>
 9b4:	6d00                	flw	fs0,24(a0)
 9b6:	7461                	lui	s0,0xffff8
 9b8:	6972                	flw	fs2,28(sp)
 9ba:	5f78                	lw	a4,124(a4)
 9bc:	6574                	flw	fa3,76(a0)
 9be:	6d007473          	csrrci	s0,0x6d0,0
 9c2:	7461                	lui	s0,0xffff8
 9c4:	6972                	flw	fs2,28(sp)
 9c6:	5f78                	lw	a4,124(a4)
 9c8:	756d                	lui	a0,0xffffb
 9ca:	5f6c                	lw	a1,124(a4)
 9cc:	736e6f63          	bltu	t3,s6,110a <__stack_size+0x10a>
    for (i = 0; i < default_num_contexts; i++)
 9d0:	0074                	addi	a3,sp,12
 9d2:	616d                	addi	sp,sp,240
 9d4:	7274                	flw	fa3,100(a2)
 9d6:	7869                	lui	a6,0xffffa
 9d8:	6d5f 6c75 6d5f      	0x6d5f6c756d5f
 9de:	7461                	lui	s0,0xffff8
 9e0:	6972                	flw	fs2,28(sp)
 9e2:	5f78                	lw	a4,124(a4)
    if (total_errors == 0)
 9e4:	6962                	flw	fs2,24(sp)
 9e6:	6574                	flw	fa3,76(a0)
    if (total_errors > 0)
 9e8:	7478                	flw	fa4,108(s0)
 9ea:	6172                	flw	ft2,28(sp)
        ee_printf("Errors detected\n");
 9ec:	65007463          	bgeu	zero,a6,1034 <__stack_size+0x34>
 9f0:	5f65                	li	t5,-7
 9f2:	7470                	flw	fa2,108(s0)
 9f4:	5f72                	lw	t5,60(sp)
 9f6:	6e69                	lui	t3,0x1a
 9f8:	0074                	addi	a3,sp,12
 9fa:	6564726f          	jal	tp,48050 <_data_lma+0x3da38>
    portable_fini(&(results[0].port));
 9fe:	0072                	c.slli	zero,0x1c
 a00:	616d                	addi	sp,sp,240
 a02:	7274                	flw	fa3,100(a2)
 a04:	7869                	lui	a6,0xffffa
 a06:	6d5f 6c75 765f      	0x765f6c756d5f
}
 a0c:	6365                	lui	t1,0x19
 a0e:	0074                	addi	a3,sp,12
 a10:	616d                	addi	sp,sp,240
 a12:	7274                	flw	fa3,100(a2)
 a14:	7869                	lui	a6,0xffffa
 a16:	735f 6d75 6d00      	0x6d006d75735f
 a1c:	6d65                	lui	s10,0x19
 a1e:	6c62                	flw	fs8,24(sp)
 a20:	5f5f006b          	0x5f5f006b
 a24:	7562                	flw	fa0,56(sp)
 a26:	6c69                	lui	s8,0x1a
 a28:	6974                	flw	fa3,84(a0)
 a2a:	5f6e                	lw	t5,248(sp)
 a2c:	656d                	lui	a0,0x1b
 a2e:	736d                	lui	t1,0xffffb
 a30:	7465                	lui	s0,0xffff9
 a32:	6d00                	flw	fs0,24(a0)
 a34:	7461                	lui	s0,0xffff8
 a36:	6972                	flw	fs2,28(sp)
 a38:	5f78                	lw	a4,124(a4)
 a3a:	756d                	lui	a0,0xffffb
 a3c:	5f6c                	lw	a1,124(a4)
 a3e:	616d                	addi	sp,sp,240
 a40:	7274                	flw	fa3,100(a2)
 a42:	7869                	lui	a6,0xffffa
 a44:	7300                	flw	fs0,32(a4)
 a46:	6565                	lui	a0,0x19
 a48:	3464                	fld	fs1,232(s0)
 a4a:	765f 6c6f 7461      	0x74616c6f765f
        results[0].execs = ALL_ALGORITHMS_MASK;
 a50:	6c69                	lui	s8,0x1a
 a52:	0065                	c.nop	25
 a54:	72617473          	csrrci	s0,0x726,2
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
 a58:	5f74                	lw	a3,124(a4)
 a5a:	6974                	flw	fa3,84(a0)
 a5c:	656d                	lui	a0,0x1b
 a5e:	765f 6c61 7300      	0x73006c61765f
 a64:	6565                	lui	a0,0x19
 a66:	3164                	fld	fs1,224(a0)
 a68:	765f 6c6f 7461      	0x74616c6f765f
 a6e:	6c69                	lui	s8,0x1a
 a70:	0065                	c.nop	25
 a72:	6974                	flw	fa3,84(a0)
            j++;
 a74:	656d                	lui	a0,0x1b
 a76:	5f72                	lw	t5,60(sp)
        if ((1 << (ee_u32)i) & results[0].execs)
 a78:	6d746567          	0x6d746567
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
 a7c:	65730073          	0x65730073
 a80:	6465                	lui	s0,0x19
 a82:	5f35                	li	t5,-19
 a84:	6f76                	flw	ft10,92(sp)
 a86:	616c                	flw	fa1,68(a0)
            j++;
 a88:	6974                	flw	fa3,84(a0)
 a8a:	656c                	flw	fa1,76(a0)
 a8c:	7300                	flw	fs0,32(a4)
 a8e:	6275                	lui	tp,0x1d
 a90:	6174706f          	j	488a6 <_data_lma+0x3e28e>
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
 a94:	6772                	flw	fa4,28(sp)
 a96:	7400                	flw	fs0,40(s0)
 a98:	6369                	lui	t1,0x1a
 a9a:	7300736b          	0x7300736b
 a9e:	6565                	lui	a0,0x19
 aa0:	3364                	fld	fs1,224(a4)
 aa2:	765f 6c6f 7461      	0x74616c6f765f
 aa8:	6c69                	lui	s8,0x1a
 aaa:	0065                	c.nop	25
 aac:	6974                	flw	fa3,84(a0)
 aae:	656d                	lui	a0,0x1b
        if ((1 << (ee_u32)i) & results[0].execs)
 ab0:	5f72                	lw	t5,60(sp)
 ab2:	0030                	addi	a2,sp,8
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
 ab4:	6974                	flw	fa3,84(a0)
 ab6:	656d                	lui	a0,0x1b
 ab8:	5f72                	lw	t5,60(sp)
 aba:	0031                	c.nop	12
 abc:	64656573          	csrrsi	a0,0x646,10
 ac0:	5f32                	lw	t5,44(sp)
 ac2:	6f76                	flw	ft10,92(sp)
        if (results[i].execs & ID_LIST)
 ac4:	616c                	flw	fa1,68(a0)
 ac6:	6974                	flw	fa3,84(a0)
 ac8:	656c                	flw	fa1,76(a0)
 aca:	2e00                	fld	fs0,24(a2)
        ee_printf(
 acc:	6372732f          	0x6372732f
 ad0:	726f632f          	0x726f632f
 ad4:	6d65                	lui	s10,0x19
 ad6:	7261                	lui	tp,0xffff8
 ad8:	6f632f6b          	0x6f632f6b
 adc:	6572                	flw	fa0,28(sp)
 ade:	705f 726f 6d74      	0x6d74726f705f
    for (i = 0; i < iterations; i++)
 ae4:	2e65                	jal	e9c <core_bench_list+0x23c>
 ae6:	74730063          	beq	t1,t2,1226 <__stack_size+0x226>
 aea:	745f706f          	j	f8a2e <_data_lma+0xee416>
 aee:	6d69                	lui	s10,0x1a
 af0:	5f65                	li	t5,-7
 af2:	6176                	flw	ft2,92(sp)
        ee_printf(
 af4:	006c                	addi	a1,sp,12
 af6:	2f2e                	fld	ft10,200(sp)
 af8:	2f637273          	csrrci	tp,0x2f6,6
 afc:	65726f63          	bltu	tp,s7,115a <__stack_size+0x15a>
 b00:	616d                	addi	sp,sp,240
 b02:	6b72                	flw	fs6,28(sp)
        if (known_id == 3)
 b04:	726f632f          	0x726f632f
 b08:	5f65                	li	t5,-7
 b0a:	74617473          	csrrci	s0,0x746,2
 b0e:	2e65                	jal	ec6 <core_bench_list+0x266>
                      default_num_contexts * results[0].iterations
 b10:	69660063          	beq	a2,s6,1190 <__stack_size+0x190>
            ee_printf("CoreMark 1.0 : %f / %s %s",
 b14:	616e                	flw	ft2,216(sp)
 b16:	5f6c                	lw	a1,124(a4)
 b18:	6e756f63          	bltu	a0,t2,1216 <__stack_size+0x216>
 b1c:	7374                	flw	fa3,100(a4)
 b1e:	4300                	lw	s0,0(a4)
 b20:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
 b24:	73003253          	0x73003253
                          / time_in_secs(total_time),
 b28:	61706963          	bltu	zero,s7,113a <__stack_size+0x13a>
            ee_printf("CoreMark 1.0 : %f / %s %s",
 b2c:	0074                	addi	a3,sp,12
 b2e:	6e69                	lui	t3,0x1a
                          / time_in_secs(total_time),
 b30:	00727473          	csrrci	s0,0x7,4
 b34:	7366                	flw	ft6,120(sp)
 b36:	6174                	flw	fa3,68(a0)
            ee_printf("CoreMark 1.0 : %f / %s %s",
 b38:	6574                	flw	fa3,76(a0)
 b3a:	4300                	lw	s0,0(a4)
 b3c:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
 b40:	4e49                	li	t3,18
 b42:	4156                	lw	sp,84(sp)
 b44:	494c                	lw	a1,20(a0)
 b46:	0044                	addi	s1,sp,4
 b48:	45524f43          	0x45524f43
 b4c:	465f 4f4c 5441      	0x54414f4c465f
 b52:	4300                	lw	s0,0(a4)
 b54:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
 b58:	45494353          	0x45494353
 b5c:	544e                	lw	s0,240(sp)
 b5e:	4649                	li	a2,18
 b60:	4349                	li	t1,18
 b62:	4300                	lw	s0,0(a4)
 b64:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
 b68:	52415453          	0x52415453
 b6c:	0054                	addi	a3,sp,4
 b6e:	45524f43          	0x45524f43
            ee_printf(" / %s", MEM_LOCATION);
 b72:	495f 544e 6500      	0x6500544e495f
 b78:	5f65                	li	t5,-7
 b7a:	7369                	lui	t1,0xffffa
 b7c:	6964                	flw	fs1,84(a0)
 b7e:	00746967          	0x746967
 b82:	7274                	flw	fa3,100(a2)
            ee_printf("\n");
 b84:	6361                	lui	t1,0x18
 b86:	6f635f6b          	0x6f635f6b
 b8a:	6e75                	lui	t3,0x1d
 b8c:	7374                	flw	fa3,100(a4)
 b8e:	4300                	lw	s0,0(a4)
 b90:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
        ee_printf(
 b94:	43003153          	0x43003153
 b98:	5f45524f          	fnmadd.q	ft4,fa0,fs4,fa1,unknown
 b9c:	54415453          	0x54415453
 ba0:	0045                	c.nop	17
 ba2:	6e69                	lui	t3,0x1a
        total_errors++;
 ba4:	7074                	flw	fa3,100(s0)
 ba6:	7461                	lui	s0,0xffff8
 ba8:	6500                	flw	fs0,8(a0)
 baa:	7272                	flw	ft4,60(sp)
    if (results[0].execs & ID_STATE)
 bac:	6170                	flw	fa2,68(a0)
 bae:	0074                	addi	a3,sp,12
 bb0:	70657473          	csrrci	s0,0x706,10
 bb4:	4e00                	lw	s0,24(a2)
 bb6:	5845                	li	a6,-15
            ee_printf("6k validation run parameters for coremark.\n");
 bb8:	5f54                	lw	a3,60(a4)
 bba:	424d5953          	0x424d5953
 bbe:	4e004c4f          	fnmadd.q	fs8,ft0,ft0,fs1,rmm
 bc2:	4d55                	li	s10,21
 bc4:	435f 524f 5f45      	0x5f45524f435f
 bca:	54415453          	0x54415453
 bce:	5345                	li	t1,-15
 bd0:	6300                	flw	fs0,0(a4)
 bd2:	6372                	flw	ft6,28(sp)
 bd4:	3375                	jal	980 <main+0x908>
 bd6:	0032                	c.slli	zero,0xc
            known_id = 1;
 bd8:	65726f63          	bltu	tp,s7,1236 <__stack_size+0x236>
            ee_printf("6k validation run parameters for coremark.\n");
 bdc:	735f 6174 6574      	0x65746174735f
 be2:	745f 6172 736e      	0x736e6172745f
            known_id = 1;
 be8:	7469                	lui	s0,0xffffa
 bea:	6f69                	lui	t5,0x1a
 bec:	006e                	c.slli	zero,0x1b
 bee:	45524f43          	0x45524f43
            ee_printf("6k performance run parameters for coremark.\n");
 bf2:	455f 5058 4e4f      	0x4e4f5058455f
 bf8:	4e45                	li	t3,17
 bfa:	0054                	addi	a3,sp,4
 bfc:	7274                	flw	fa3,100(a2)
 bfe:	6e61                	lui	t3,0x18
 c00:	69746973          	csrrsi	s2,0x697,8
 c04:	635f6e6f          	jal	t3,f7a38 <_data_lma+0xed420>
 c08:	746e756f          	jal	a0,e834e <_data_lma+0xddd36>
 c0c:	7400                	flw	fs0,40(s0)
 c0e:	6c61746f          	jal	s0,182d4 <_data_lma+0xdcbc>
 c12:	6600                	flw	fs0,8(a2)
 c14:	6f6c                	flw	fa1,92(a4)
 c16:	7461                	lui	s0,0xffff8
 c18:	6170                	flw	fa2,68(a0)
 c1a:	0074                	addi	a3,sp,12
            known_id = 0;
 c1c:	75637263          	bgeu	t1,s6,1360 <core_list_init+0x70>
 c20:	0038                	addi	a4,sp,8
 c22:	72726163          	bltu	tp,t2,1344 <core_list_init+0x54>
            ee_printf("2K validation run parameters for coremark.\n");
 c26:	0079                	c.nop	30
 c28:	656e                	flw	fa0,216(sp)
 c2a:	6c617677          	0x6c617677
 c2e:	2e00                	fld	fs0,24(a2)
 c30:	6372732f          	0x6372732f
 c34:	726f632f          	0x726f632f
 c38:	6d65                	lui	s10,0x19
 c3a:	7261                	lui	tp,0xffff8
            known_id = 4;
 c3c:	6f632f6b          	0x6f632f6b
            ee_printf("2K validation run parameters for coremark.\n");
 c40:	6572                	flw	fa0,28(sp)
 c42:	755f 6974 2e6c      	0x2e6c6974755f
 c48:	2f2e0063          	beq	t3,s2,f28 <core_bench_list+0x2c8>
 c4c:	2f637273          	csrrci	tp,0x2f6,6
            known_id = 4;
 c50:	616d                	addi	sp,sp,240
 c52:	6e69                	lui	t3,0x1a
 c54:	6372732f          	0x6372732f
        for (i = 0; i < default_num_contexts; i++)
 c58:	6d69742f          	0x6d69742f
 c5c:	7265                	lui	tp,0xffff9
 c5e:	632e                	flw	ft6,200(sp)
    ee_s16     find_num = res->seed3;
 c60:	5400                	lw	s0,40(s0)
 c62:	4d49                	li	s10,18
{
 c64:	5245                	li	tp,-15
 c66:	445f 4645 5f00      	0x5f004645445f
 c6c:	755f 6e69 3674      	0x36746e69755f
 c72:	5f34                	lw	a3,120(a4)
 c74:	0074                	addi	a3,sp,12
 c76:	6c727463          	bgeu	tp,t2,133e <core_list_init+0x4e>
 c7a:	7400                	flw	fs0,40(s0)
 c7c:	6d69                	lui	s10,0x1a
 c7e:	7265                	lui	tp,0xffff9
 c80:	635f 656c 7261      	0x7261656c635f
 c86:	6700                	flw	fs0,8(a4)
 c88:	7465                	lui	s0,0xffff9
 c8a:	6c5f 6e69 0065      	0x656e696c5f
 c90:	7874                	flw	fa3,116(s0)
 c92:	665f 6e69 7369      	0x73696e69665f
 c98:	0068                	addi	a0,sp,12
 c9a:	2f2e                	fld	ft10,200(sp)
 c9c:	2f637273          	csrrci	tp,0x2f6,6
 ca0:	616d                	addi	sp,sp,240
 ca2:	6e69                	lui	t3,0x1a
    list_head *list     = res->list;
 ca4:	6372732f          	0x6372732f
    for (i = 0; i < find_num; i++)
 ca8:	6173752f          	0x6173752f
    info.idx = finder_idx;
 cac:	7472                	flw	fs0,60(sp)
 cae:	632e                	flw	ft6,200(sp)
    for (i = 0; i < find_num; i++)
 cb0:	7300                	flw	fs0,32(a4)
 cb2:	6e65                	lui	t3,0x19
    ee_u16     found = 0, missed = 0;
 cb4:	5f64                	lw	s1,124(a4)
 cb6:	72616863          	bltu	sp,t1,13e6 <core_list_init+0xf6>
 cba:	6700                	flw	fs0,8(a4)
    ee_u16     retval = 0;
 cbc:	7465                	lui	s0,0xffff9
 cbe:	635f 6168 0072      	0x726168635f
        info.data16 = (i & 0xff);
 cc4:	5355                	li	t1,-11
 cc6:	5241                	li	tp,-16
 cc8:	5f54                	lw	a3,60(a4)
 cca:	4544                	lw	s1,12(a0)
    if (info->idx >= 0)
 ccc:	0046                	c.slli	zero,0x11
 cce:	7962                	flw	fs2,56(sp)
        while (list && (list->info->idx != info->idx))
 cd0:	6574                	flw	fa3,76(a0)
 cd2:	7200                	flw	fs0,32(a2)
 cd4:	5f78                	lw	a4,124(a4)
 cd6:	7265                	lui	tp,0xffff9
 cd8:	0072                	c.slli	zero,0x1c
 cda:	4270                	lw	a2,68(a2)
 cdc:	6675                	lui	a2,0x1d
 cde:	6566                	flw	fa0,88(sp)
 ce0:	0072                	c.slli	zero,0x1c
 ce2:	646e6573          	csrrsi	a0,0x646,28
 ce6:	735f 7274 6e69      	0x6e697274735f
 cec:	75620067          	jr	1878(tp) # 0 <_start>
 cf0:	6666                	flw	fa2,88(sp)
 cf2:	7200                	flw	fs0,32(a2)
 cf4:	5f78                	lw	a4,124(a4)
 cf6:	6966                	flw	fs2,88(sp)
 cf8:	696e                	flw	fs2,216(sp)
 cfa:	2e006873          	csrrsi	a6,0x2e0,0
            list = list->next;
 cfe:	6372732f          	0x6372732f
        while (list && (list->info->idx != info->idx))
 d02:	69616d2f          	0x69616d2f
 d06:	2f6e                	fld	ft10,216(sp)
 d08:	72617473          	csrrci	s0,0x726,2
    while (list)
 d0c:	2e74                	fld	fa3,216(a2)
 d0e:	4e470053          	0x4e470053
 d12:	2055                	jal	db6 <core_bench_list+0x156>
        tmp        = list->next;
 d14:	5341                	li	t1,-16
 d16:	3220                	fld	fs0,96(a2)
        list->next = next;
 d18:	332e                	fld	ft6,232(sp)
 d1a:	0032                	c.slli	zero,0xc

Disassembly of section .comment:

00000000 <.comment>:
	la gp, __global_pointer$
   0:	3a434347          	fmsub.d	ft6,ft6,ft4,ft7,rmm
   4:	2820                	fld	fs0,80(s0)
   6:	5078                	lw	a4,100(s0)
	la sp, _sp 
   8:	6361                	lui	t1,0x18
   a:	4e47206b          	0x4e47206b
   e:	2055                	jal	b2 <main+0x3a>
	la a0, _data_lma 
  10:	4952                	lw	s2,20(sp)
  12:	562d4353          	0x562d4353
  16:	4520                	lw	s0,72(a0)
	la a1, _data
  18:	626d                	lui	tp,0x1b
  1a:	6465                	lui	s0,0x19
  1c:	6564                	flw	fs1,76(a0)
  1e:	2064                	fld	fs1,192(s0)
	la a2, _edata
  20:	2c434347          	0x2c434347
  24:	3320                	fld	fs0,96(a4)
  26:	2d32                	fld	fs10,264(sp)
	bgeu a1, a2, 2f
  28:	6962                	flw	fs2,24(sp)
  2a:	2974                	fld	fa3,208(a0)
	lw t0, (a0)
  2c:	3820                	fld	fs0,112(s0)
  2e:	332e                	fld	ft6,232(sp)
	sw t0, (a1)
  30:	302e                	fld	ft0,232(sp)
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
	la gp, __global_pointer$
       0:	000c                	0xc
       2:	0000                	unimp
       4:	ffff                	0xffff
       6:	ffff                	0xffff
	la sp, _sp 
       8:	0001                	nop
       a:	7c01                	lui	s8,0xfffe0
       c:	0d01                	addi	s10,s10,0
       e:	0002                	c.slli64	zero
	la a0, _data_lma 
      10:	002c                	addi	a1,sp,8
	...
	la a1, _data
      1e:	0000                	unimp
	la a2, _edata
      20:	0e44                	addi	s1,sp,788
      22:	4420                	lw	s0,72(s0)
      24:	0288                	addi	a0,sp,320
      26:	9258                	0x9258
	bgeu a1, a2, 2f
      28:	8104                	0x8104
      2a:	8901                	andi	a0,a0,0
	lw t0, (a0)
      2c:	02059303          	lh	t1,32(a1)
	sw t0, (a1)
      30:	0a00                	addi	s0,sp,272
      32:	44c1                	li	s1,16
	lw t1, (a1)
      34:	48c8                	lw	a0,20(s1)
      36:	44c9                	li	s1,18
	addi a0, a0, 4
      38:	44d2                	lw	s1,20(sp)
      3a:	000e44d3          	fadd.s	fs1,ft8,ft0,rmm
	addi a1, a1, 4
      3e:	0b44                	addi	s1,sp,404
	bltu a1, a2, 1b
      40:	0030                	addi	a2,sp,8
	...
	la a1, _end
      4e:	0000                	unimp
      50:	0e44                	addi	s1,sp,788
      52:	4420                	lw	s0,72(s0)
	bgeu a0, a1, 2f
      54:	0288                	addi	a0,sp,320
      56:	895c                	0x895c
	sw zero, (a0)
      58:	94049203          	lh	tp,-1728(s1)
	addi a0, a0, 4
      5c:	8106                	mv	sp,ra
      5e:	9301                	srli	a4,a4,0x20
	bltu a0, a1, 1b
      60:	0205                	addi	tp,tp,1
      62:	0a00                	addi	s0,sp,272
    li x31,0xa0
      64:	44c1                	li	s1,16
      66:	48c8                	lw	a0,20(s1)
    call main
      68:	44c9                	li	s1,18
      6a:	44d2                	lw	s1,20(sp)
      6c:	44d444d3          	0x44d444d3
    li x31,0xaa
      70:	000e                	c.slli	zero,0x3
      72:	0b44                	addi	s1,sp,404
    j loop
      74:	000c                	0xc
	...
{
      82:	0000                	unimp
      84:	000c                	0xc
	...
      92:	0000                	unimp
      94:	004c                	addi	a1,sp,4
      96:	0000                	unimp
      98:	0000                	unimp
      9a:	0000                	unimp
      9c:	0c60                	addi	s0,sp,540
      9e:	0000                	unimp
      a0:	0690                	addi	a2,sp,832
      a2:	0000                	unimp
      a4:	0e48                	addi	a0,sp,788
      a6:	7460                	flw	fs0,108(s0)
      a8:	0288                	addi	a0,sp,320
      aa:	0a98                	addi	a4,sp,336
      ac:	0181                	addi	gp,gp,0
      ae:	0389                	addi	t2,t2,2
      b0:	0492                	slli	s1,s1,0x4
      b2:	06940593          	addi	a1,s0,105 # 19069 <_data_lma+0xea51>
      b6:	0795                	addi	a5,a5,5
      b8:	0896                	slli	a7,a7,0x5
      ba:	0b990997          	auipc	s3,0xb990
    portable_init(&(results[0].port), &argc, argv);
      be:	0c9a                	slli	s9,s9,0x6
      c0:	68030d9b          	0x68030d9b
      c4:	44c10a03          	lb	s4,1100(sp)
      c8:	44c8                	lw	a0,12(s1)
      ca:	44c9                	li	s1,18
{
      cc:	44d2                	lw	s1,20(sp)
      ce:	44d444d3          	0x44d444d3
    portable_init(&(results[0].port), &argc, argv);
      d2:	44d5                	li	s1,21
      d4:	44d6                	lw	s1,84(sp)
      d6:	44d844d7          	0x44d844d7
      da:	44d9                	li	s1,22
      dc:	44da                	lw	s1,148(sp)
      de:	000e44db          	0xe44db
    results[0].seed1      = get_seed(1);
      e2:	0b44                	addi	s1,sp,404
      e4:	000c                	0xc
      e6:	0000                	unimp
      e8:	0000                	unimp
      ea:	0000                	unimp
      ec:	12f0                	addi	a2,sp,364
      ee:	0000                	unimp
    results[0].seed2      = get_seed(2);
      f0:	026c                	addi	a1,sp,268
      f2:	0000                	unimp
      f4:	000c                	0xc
	...
    results[0].seed3      = get_seed(3);
     102:	0000                	unimp
     104:	000c                	0xc
	...
    results[0].iterations = get_seed_32(4);
     112:	0000                	unimp
     114:	000c                	0xc
	...
    results[0].execs = get_seed_32(5);
     122:	0000                	unimp
     124:	000c                	0xc
	...
     132:	0000                	unimp
    if ((results[0].seed1 == 0) && (results[0].seed2 == 0)
     134:	000c                	0xc
	...
     142:	0000                	unimp
     144:	0044                	addi	s1,sp,4
	...
     152:	0000                	unimp
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     154:	0e40                	addi	s0,sp,788
     156:	7030                	flw	fa2,96(s0)
     158:	0795                	addi	a5,a5,5
     15a:	0896                	slli	a7,a7,0x5
        && (results[0].seed3 == 0))
     15c:	0a980997          	auipc	s3,0xa980
     160:	0c9a                	slli	s9,s9,0x6
     162:	0181                	addi	gp,gp,0
     164:	0288                	addi	a0,sp,320
     166:	0389                	addi	t2,t2,2
        results[0].seed1 = 0x3415;
     168:	0492                	slli	s1,s1,0x4
     16a:	06940593          	addi	a1,s0,105
     16e:	0b99                	addi	s7,s7,6
     170:	0002                	c.slli64	zero
     172:	44c1                	li	s1,16
     174:	48c8                	lw	a0,20(s1)
     176:	44c9                	li	s1,18
        results[0].seed3 = 0x66;
     178:	44d2                	lw	s1,20(sp)
     17a:	44d444d3          	0x44d444d3
     17e:	44d5                	li	s1,21
        if ((1 << (ee_u32)i) & results[0].execs)
     180:	44d6                	lw	s1,84(sp)
     182:	44d844d7          	0x44d844d7
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     186:	44d9                	li	s1,22
     188:	44da                	lw	s1,148(sp)
     18a:	000e                	c.slli	zero,0x3
     18c:	000c                	0xc
     18e:	0000                	unimp
     190:	ffff                	0xffff
     192:	ffff                	0xffff
     194:	0001                	nop
     196:	7c01                	lui	s8,0xfffe0
        if ((1 << (ee_u32)i) & results[0].execs)
     198:	0d01                	addi	s10,s10,0
     19a:	0002                	c.slli64	zero
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     19c:	0028                	addi	a0,sp,8
     19e:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     1a0:	018c                	addi	a1,sp,192
     1a2:	0000                	unimp
            num_algorithms++;
     1a4:	155c                	addi	a5,sp,676
     1a6:	0000                	unimp
    results[i].memblock[0] = stack_memblock + i * TOTAL_DATA_SIZE;
     1a8:	00a8                	addi	a0,sp,72
     1aa:	0000                	unimp
     1ac:	0e44                	addi	s1,sp,788
     1ae:	4410                	lw	a2,8(s0)
    results[i].err         = 0;
     1b0:	0492                	slli	s1,s1,0x4
     1b2:	8850                	0x8850
        if ((1 << (ee_u32)i) & results[0].execs)
     1b4:	8902                	jr	s2
     1b6:	02018103          	lb	sp,32(gp) # 10013c0 <__global_pointer$+0x20>
            num_algorithms++;
     1ba:	0a64                	addi	s1,sp,284
        if ((1 << (ee_u32)i) & results[0].execs)
     1bc:	44c1                	li	s1,16
     1be:	44c8                	lw	a0,12(s1)
            num_algorithms++;
     1c0:	44c9                	li	s1,18
     1c2:	48d2                	lw	a7,20(sp)
     1c4:	000e                	c.slli	zero,0x3
     1c6:	0b44                	addi	s1,sp,404
     1c8:	0058                	addi	a4,sp,4
     1ca:	0000                	unimp
        results[i].size = results[i].size / num_algorithms;
     1cc:	018c                	addi	a1,sp,192
     1ce:	0000                	unimp
     1d0:	0078                	addi	a4,sp,12
     1d2:	0000                	unimp
     1d4:	0be8                	addi	a0,sp,476
     1d6:	0000                	unimp
        if ((1 << (ee_u32)i) & results[0].execs)
     1d8:	0e44                	addi	s1,sp,788
     1da:	0ff0                	addi	a2,sp,988
        results[i].size = results[i].size / num_algorithms;
     1dc:	4002                	0x4002
     1de:	f00e                	fsw	ft3,32(sp)
        if ((1 << (ee_u32)i) & results[0].execs)
     1e0:	8110                	0x8110
     1e2:	8801                	andi	s0,s0,0
     1e4:	8902                	jr	s2
     1e6:	93049203          	lh	tp,-1744(s1)
     1ea:	9405                	srai	s0,s0,0x21
        if (results[i].execs & ID_LIST)
     1ec:	9506                	add	a0,a0,ra
     1ee:	97089607          	0x97089607
        if (results[i].execs & ID_MATRIX)
     1f2:	9809                	andi	s0,s0,-30
        if (results[i].execs & ID_STATE)
     1f4:	990a                	add	s2,s2,sp
     1f6:	9b0c9a0b          	0x9b0c9a0b
     1fa:	030d                	addi	t1,t1,3
            core_init_state(
     1fc:	0950                	addi	a2,sp,148
     1fe:	0e0a                	slli	t3,t3,0x2
     200:	0ff0                	addi	a2,sp,988
     202:	c144                	sw	s1,4(a0)
                results[0].size, results[i].seed1, results[i].memblock[3]);
     204:	c848                	sw	a0,20(s0)
     206:	c944                	sw	s1,20(a0)
            core_init_state(
     208:	d244                	sw	s1,36(a2)
     20a:	d344                	sw	s1,36(a4)
     20c:	d444                	sw	s1,44(s0)
     20e:	d544                	sw	s1,44(a0)
     210:	d644                	sw	s1,44(a2)
     212:	d744                	sw	s1,44(a4)
     214:	d844                	sw	s1,52(s0)
     216:	d944                	sw	s1,52(a0)
     218:	da44                	sw	s1,52(a2)
     21a:	db44                	sw	s1,52(a4)
     21c:	0e44                	addi	s1,sp,788
     21e:	4400                	lw	s0,8(s0)
     220:	0000000b          	0xb
     224:	000c                	0xc
     226:	0000                	unimp
    if (results[0].iterations == 0)
     228:	ffff                	0xffff
     22a:	ffff                	0xffff
     22c:	0001                	nop
     22e:	7c01                	lui	s8,0xfffe0
        while (secs_passed < (secs_ret)1)
     230:	0d01                	addi	s10,s10,0
     232:	0002                	c.slli64	zero
     234:	0050                	addi	a2,sp,4
     236:	0000                	unimp
     238:	0224                	addi	s1,sp,264
     23a:	0000                	unimp
        results[0].iterations = 1;
     23c:	1604                	addi	s1,sp,800
     23e:	0000                	unimp
     240:	0570                	addi	a2,sp,652
     242:	0000                	unimp
        crc      = core_bench_list(res, 1);
     244:	0e44                	addi	s1,sp,788
     246:	4850                	lw	a2,20(s0)
     248:	0896                	slli	a7,a7,0x5
     24a:	0181                	addi	gp,gp,0
     24c:	8870                	0x8870
     24e:	8902                	jr	s2
     250:	93049203          	lh	tp,-1744(s1)
     254:	9405                	srai	s0,s0,0x21
     256:	9506                	add	a0,a0,ra
     258:	98099707          	0x98099707
            results[0].iterations *= 10;
     25c:	990a                	add	s2,s2,sp
     25e:	9b0c9a0b          	0x9b0c9a0b
    for (i = 0; i < iterations; i++)
     262:	030d                	addi	t1,t1,3
            results[0].iterations *= 10;
     264:	04ac                	addi	a1,sp,584
     266:	c10a                	sw	sp,128(sp)
     268:	c844                	sw	s1,20(s0)
     26a:	c948                	sw	a0,20(a0)
     26c:	d244                	sw	s1,36(a2)
     26e:	d344                	sw	s1,36(a4)
     270:	d444                	sw	s1,44(s0)
     272:	d544                	sw	s1,44(a0)
            start_time();
     274:	d644                	sw	s1,44(a2)
     276:	d744                	sw	s1,44(a4)
     278:	d844                	sw	s1,52(s0)
     27a:	d944                	sw	s1,52(a0)
    ee_u32        iterations = res->iterations;
     27c:	da44                	sw	s1,52(a2)
     27e:	db44                	sw	s1,52(a4)
    res->crc                 = 0;
     280:	0e48                	addi	a0,sp,788
     282:	4400                	lw	s0,8(s0)
     284:	0000000b          	0xb
    for (i = 0; i < iterations; i++)
     288:	001c                	0x1c
     28a:	0000                	unimp
        crc      = core_bench_list(res, 1);
     28c:	0224                	addi	s1,sp,264
     28e:	0000                	unimp
     290:	1b74                	addi	a3,sp,444
     292:	0000                	unimp
     294:	0044                	addi	s1,sp,4
     296:	0000                	unimp
     298:	0e44                	addi	s1,sp,788
     29a:	4810                	lw	a2,16(s0)
        res->crc = crcu16(crc, res->crc);
     29c:	0288                	addi	a0,sp,320
     29e:	8158                	0x8158
     2a0:	5001                	c.li	zero,-32
     2a2:	44c8                	lw	a0,12(s1)
     2a4:	44c1                	li	s1,16
     2a6:	000e                	c.slli	zero,0x3
     2a8:	0024                	addi	s1,sp,8
     2aa:	0000                	unimp
        crc      = core_bench_list(res, -1);
     2ac:	0224                	addi	s1,sp,264
     2ae:	0000                	unimp
     2b0:	1bb8                	addi	a4,sp,504
     2b2:	0000                	unimp
     2b4:	0124                	addi	s1,sp,136
     2b6:	0000                	unimp
     2b8:	0e44                	addi	s1,sp,788
     2ba:	4c10                	lw	a2,24(s0)
        res->crc = crcu16(crc, res->crc);
     2bc:	0188                	addi	a0,sp,192
     2be:	0289                	addi	t0,t0,2
     2c0:	0392                	slli	t2,t2,0x4
     2c2:	d802                	sw	zero,48(sp)
     2c4:	c80a                	sw	sp,16(sp)
     2c6:	c95c                	sw	a5,20(a0)
     2c8:	d244                	sw	s1,36(a2)
     2ca:	0e44                	addi	s1,sp,788
        if (i == 0)
     2cc:	4400                	lw	s0,8(s0)
     2ce:	000c000b          	0xc000b
    for (i = 0; i < iterations; i++)
     2d2:	0000                	unimp
     2d4:	0224                	addi	s1,sp,264
	...
            stop_time();
     2de:	0000                	unimp
            secs_passed = time_in_secs(get_time());
     2e0:	000c                	0xc
     2e2:	0000                	unimp
     2e4:	0224                	addi	s1,sp,264
	...
     2ee:	0000                	unimp
        while (secs_passed < (secs_ret)1)
     2f0:	000c                	0xc
     2f2:	0000                	unimp
     2f4:	0224                	addi	s1,sp,264
	...
            secs_passed = time_in_secs(get_time());
     2fe:	0000                	unimp
        while (secs_passed < (secs_ret)1)
     300:	002c                	addi	a1,sp,8
     302:	0000                	unimp
     304:	0224                	addi	s1,sp,264
	...
        divisor = (ee_u32)secs_passed;
     30e:	0000                	unimp
     310:	0e40                	addi	s0,sp,788
     312:	4820                	lw	s0,80(s0)
     314:	884c0593          	addi	a1,s8,-1916 # fffdf884 <__freertos_irq_stack_top+0xfefcf884>
     318:	8902                	jr	s2
     31a:	04925c03          	lhu	s8,73(tp) # 1b049 <_data_lma+0x10a31>
        if (divisor == 0) /* some machines cast float to int as 0 since this
     31e:	0181                	addi	gp,gp,0
            divisor = 1;
     320:	0002                	c.slli64	zero
     322:	44c1                	li	s1,16
        results[0].iterations *= 1 + 10 / divisor;
     324:	44c8                	lw	a0,12(s1)
     326:	44c9                	li	s1,18
     328:	44d2                	lw	s1,20(sp)
     32a:	000e44d3          	fadd.s	fs1,ft8,ft0,rmm
     32e:	0000                	unimp
     330:	003c                	addi	a5,sp,8
     332:	0000                	unimp
     334:	0224                	addi	s1,sp,264
	...
    start_time();
     33e:	0000                	unimp
     340:	0e40                	addi	s0,sp,788
     342:	4430                	lw	a2,72(s0)
    iterate(&results[0]);
     344:	0288                	addi	a0,sp,320
     346:	8964                	0x8964
     348:	93049203          	lh	tp,-1744(s1)
     34c:	9405                	srai	s0,s0,0x21
     34e:	9506                	add	a0,a0,ra
     350:	97089607          	0x97089607
     354:	8109                	srli	a0,a0,0x2
     356:	0201                	addi	tp,tp,0
     358:	c100                	sw	s0,0(a0)
     35a:	c844                	sw	s1,20(s0)
     35c:	c944                	sw	s1,20(a0)
     35e:	d244                	sw	s1,36(a2)
     360:	d344                	sw	s1,36(a4)
     362:	d444                	sw	s1,44(s0)
    stop_time();
     364:	d544                	sw	s1,44(a0)
     366:	d644                	sw	s1,44(a2)
     368:	d744                	sw	s1,44(a4)
     36a:	0e44                	addi	s1,sp,788
    total_time = get_time();
     36c:	0000                	unimp
     36e:	0000                	unimp
     370:	003c                	addi	a5,sp,8
     372:	0000                	unimp
    seedcrc = crc16(results[0].seed1, seedcrc);
     374:	0224                	addi	s1,sp,264
	...
     37e:	0000                	unimp
    total_time = get_time();
     380:	0e40                	addi	s0,sp,788
     382:	4430                	lw	a2,72(s0)
    seedcrc = crc16(results[0].seed1, seedcrc);
     384:	0492                	slli	s1,s1,0x4
     386:	8864                	0x8864
     388:	8902                	jr	s2
     38a:	94059303          	lh	t1,-1728(a1)
     38e:	9506                	add	a0,a0,ra
     390:	97089607          	0x97089607
     394:	8109                	srli	a0,a0,0x2
     396:	0201                	addi	tp,tp,0
    seedcrc = crc16(results[0].seed2, seedcrc);
     398:	c100                	sw	s0,0(a0)
     39a:	c844                	sw	s1,20(s0)
     39c:	c944                	sw	s1,20(a0)
     39e:	d244                	sw	s1,36(a2)
     3a0:	d344                	sw	s1,36(a4)
     3a2:	d444                	sw	s1,44(s0)
     3a4:	d544                	sw	s1,44(a0)
     3a6:	d644                	sw	s1,44(a2)
     3a8:	d744                	sw	s1,44(a4)
     3aa:	0e44                	addi	s1,sp,788
    seedcrc = crc16(results[0].seed3, seedcrc);
     3ac:	0000                	unimp
     3ae:	0000                	unimp
     3b0:	000c                	0xc
     3b2:	0000                	unimp
     3b4:	ffff                	0xffff
     3b6:	ffff                	0xffff
     3b8:	0001                	nop
     3ba:	7c01                	lui	s8,0xfffe0
     3bc:	0d01                	addi	s10,s10,0
     3be:	0002                	c.slli64	zero
    seedcrc = crc16(results[0].size, seedcrc);
     3c0:	0018                	0x18
     3c2:	0000                	unimp
     3c4:	03b0                	addi	a2,sp,456
     3c6:	0000                	unimp
     3c8:	1cdc                	addi	a5,sp,628
     3ca:	0000                	unimp
     3cc:	0028                	addi	a0,sp,8
     3ce:	0000                	unimp
    switch (seedcrc)
     3d0:	0e44                	addi	s1,sp,788
     3d2:	4410                	lw	a2,8(s0)
     3d4:	0181                	addi	gp,gp,0
     3d6:	c14c                	sw	a1,4(a0)
    seedcrc = crc16(results[0].size, seedcrc);
     3d8:	0e50                	addi	a2,sp,788
     3da:	0000                	unimp
    switch (seedcrc)
     3dc:	0018                	0x18
     3de:	0000                	unimp
     3e0:	03b0                	addi	a2,sp,456
     3e2:	0000                	unimp
     3e4:	1d04                	addi	s1,sp,688
     3e6:	0000                	unimp
     3e8:	0028                	addi	a0,sp,8
     3ea:	0000                	unimp
     3ec:	0e44                	addi	s1,sp,788
     3ee:	4410                	lw	a2,8(s0)
     3f0:	0181                	addi	gp,gp,0
     3f2:	c14c                	sw	a1,4(a0)
     3f4:	0e50                	addi	a2,sp,788
     3f6:	0000                	unimp
     3f8:	000c                	0xc
     3fa:	0000                	unimp
            ee_printf("2K performance run parameters for coremark.\n");
     3fc:	03b0                	addi	a2,sp,456
     3fe:	0000                	unimp
     400:	1d2c                	addi	a1,sp,696
     402:	0000                	unimp
     404:	0018                	0x18
     406:	0000                	unimp
     408:	0018                	0x18
     40a:	0000                	unimp
     40c:	03b0                	addi	a2,sp,456
     40e:	0000                	unimp
     410:	1d44                	addi	s1,sp,692
     412:	0000                	unimp
     414:	0030                	addi	a2,sp,8
     416:	0000                	unimp
            known_id = 3;
     418:	0e44                	addi	s1,sp,788
     41a:	4410                	lw	a2,8(s0)
            ee_printf("2K performance run parameters for coremark.\n");
     41c:	0181                	addi	gp,gp,0
     41e:	c160                	sw	s0,68(a0)
     420:	0e44                	addi	s1,sp,788
     422:	0000                	unimp
     424:	001c                	0x1c
     426:	0000                	unimp
            known_id = 3;
     428:	03b0                	addi	a2,sp,456
     42a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     42c:	1d74                	addi	a3,sp,700
     42e:	0000                	unimp
     430:	0038                	addi	a4,sp,8
     432:	0000                	unimp
     434:	0e44                	addi	s1,sp,788
     436:	4410                	lw	a2,8(s0)
     438:	0288                	addi	a0,sp,320
     43a:	8150                	0x8150
     43c:	5401                	li	s0,-32
     43e:	44c1                	li	s1,16
            results[i].err = 0;
     440:	44c8                	lw	a0,12(s1)
     442:	000e                	c.slli	zero,0x3
     444:	000c                	0xc
     446:	0000                	unimp
     448:	03b0                	addi	a2,sp,456
     44a:	0000                	unimp
     44c:	1dac                	addi	a1,sp,760
     44e:	0000                	unimp
     450:	0008                	0x8
     452:	0000                	unimp
     454:	000c                	0xc
     456:	0000                	unimp
     458:	ffff                	0xffff
     45a:	ffff                	0xffff
     45c:	0001                	nop
     45e:	7c01                	lui	s8,0xfffe0
     460:	0d01                	addi	s10,s10,0
     462:	0002                	c.slli64	zero
     464:	0028                	addi	a0,sp,8
     466:	0000                	unimp
     468:	0454                	addi	a3,sp,516
     46a:	0000                	unimp
     46c:	1db4                	addi	a3,sp,760
     46e:	0000                	unimp
     470:	01bc                	addi	a5,sp,200
     472:	0000                	unimp
     474:	0e68                	addi	a0,sp,796
     476:	6410                	flw	fa2,8(s0)
            total_errors += results[i].err;
     478:	0188                	addi	a0,sp,192
     47a:	0289                	addi	t0,t0,2
        for (i = 0; i < default_num_contexts; i++)
     47c:	0a012403          	lw	s0,160(sp)
            total_errors += results[i].err;
     480:	44c8                	lw	a0,12(s1)
     482:	50c9                	li	ra,-14
        for (i = 0; i < default_num_contexts; i++)
     484:	000e                	c.slli	zero,0x3
     486:	0b48                	addi	a0,sp,404
            total_errors += results[i].err;
     488:	c84c                	sw	a1,20(s0)
     48a:	c944                	sw	s1,20(a0)
        for (i = 0; i < default_num_contexts; i++)
     48c:	0e44                	addi	s1,sp,788
     48e:	0000                	unimp
            total_errors += results[i].err;
     490:	000c                	0xc
     492:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     494:	0454                	addi	a3,sp,516
     496:	0000                	unimp
            total_errors += results[i].err;
     498:	1f70                	addi	a2,sp,956
     49a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     49c:	0330                	addi	a2,sp,392
     49e:	0000                	unimp
            results[i].err = 0;
     4a0:	0040                	addi	s0,sp,4
     4a2:	0000                	unimp
     4a4:	0454                	addi	a3,sp,516
     4a6:	0000                	unimp
     4a8:	22a0                	fld	fs0,64(a3)
     4aa:	0000                	unimp
     4ac:	020c                	addi	a1,sp,256
     4ae:	0000                	unimp
     4b0:	0e44                	addi	s1,sp,788
     4b2:	0180                	addi	s0,sp,192
     4b4:	8864                	0x8864
     4b6:	8902                	jr	s2
            if ((results[i].execs & ID_LIST)
     4b8:	93049203          	lh	tp,-1744(s1)
            results[i].err = 0;
     4bc:	9405                	srai	s0,s0,0x21
     4be:	9606                	add	a2,a2,ra
            if ((results[i].execs & ID_LIST)
     4c0:	9708                	0x9708
     4c2:	8109                	srli	a0,a0,0x2
     4c4:	9501                	srai	a0,a0,0x20
     4c6:	01980307          	0x1980307
                && (results[i].crclist != list_known_crc[known_id]))
     4ca:	c10a                	sw	sp,128(sp)
     4cc:	c844                	sw	s1,20(s0)
     4ce:	c944                	sw	s1,20(a0)
                ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",
     4d0:	d244                	sw	s1,36(a2)
     4d2:	d344                	sw	s1,36(a4)
     4d4:	d444                	sw	s1,44(s0)
     4d6:	d544                	sw	s1,44(a0)
     4d8:	d644                	sw	s1,44(a2)
     4da:	d744                	sw	s1,44(a4)
     4dc:	0e44                	addi	s1,sp,788
     4de:	4400                	lw	s0,8(s0)
     4e0:	0000000b          	0xb
     4e4:	000c                	0xc
     4e6:	0000                	unimp
                results[i].err++;
     4e8:	ffff                	0xffff
     4ea:	ffff                	0xffff
     4ec:	0001                	nop
     4ee:	7c01                	lui	s8,0xfffe0
     4f0:	0d01                	addi	s10,s10,0
     4f2:	0002                	c.slli64	zero
            if ((results[i].execs & ID_MATRIX)
     4f4:	000c                	0xc
     4f6:	0000                	unimp
     4f8:	04e4                	addi	s1,sp,588
     4fa:	0000                	unimp
     4fc:	24ac                	fld	fa1,72(s1)
     4fe:	0000                	unimp
     500:	0064                	addi	s1,sp,12
     502:	0000                	unimp
     504:	000c                	0xc
     506:	0000                	unimp
     508:	04e4                	addi	s1,sp,588
	...
     512:	0000                	unimp
                && (results[i].crcmatrix != matrix_known_crc[known_id]))
     514:	000c                	0xc
     516:	0000                	unimp
     518:	04e4                	addi	s1,sp,588
     51a:	0000                	unimp
                ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",
     51c:	2510                	fld	fa2,8(a0)
     51e:	0000                	unimp
     520:	0280                	addi	s0,sp,320
     522:	0000                	unimp
     524:	000c                	0xc
     526:	0000                	unimp
     528:	04e4                	addi	s1,sp,588
     52a:	0000                	unimp
     52c:	2790                	fld	fa2,8(a5)
     52e:	0000                	unimp
     530:	0510                	addi	a2,sp,640
     532:	0000                	unimp
                results[i].err++;
     534:	000c                	0xc
     536:	0000                	unimp
     538:	04e4                	addi	s1,sp,588
     53a:	0000                	unimp
     53c:	2ca0                	fld	fs0,88(s1)
     53e:	0000                	unimp
     540:	0288                	addi	a0,sp,320
     542:	0000                	unimp
            if ((results[i].execs & ID_STATE)
     544:	000c                	0xc
     546:	0000                	unimp
     548:	04e4                	addi	s1,sp,588
     54a:	0000                	unimp
                && (results[i].crcstate != state_known_crc[known_id]))
     54c:	2f28                	fld	fa0,88(a4)
     54e:	0000                	unimp
     550:	0008                	0x8
     552:	0000                	unimp
     554:	000c                	0xc
     556:	0000                	unimp
     558:	ffff                	0xffff
     55a:	ffff                	0xffff
     55c:	0001                	nop
     55e:	7c01                	lui	s8,0xfffe0
     560:	0d01                	addi	s10,s10,0
     562:	0002                	c.slli64	zero
     564:	000c                	0xc
     566:	0000                	unimp
     568:	0554                	addi	a3,sp,644
	...
        && (results[0].seed3 == 0))
     572:	0000                	unimp
     574:	0018                	0x18
     576:	0000                	unimp
     578:	0554                	addi	a3,sp,644
     57a:	0000                	unimp
        results[0].seed3 = 0x66;
     57c:	2f30                	fld	fa2,88(a4)
     57e:	0000                	unimp
     580:	003c                	addi	a5,sp,8
     582:	0000                	unimp
     584:	0e54                	addi	a3,sp,788
     586:	5410                	lw	a2,40(s0)
    if ((results[0].seed1 == 1) && (results[0].seed2 == 0)
     588:	0181                	addi	gp,gp,0
     58a:	c14c                	sw	a1,4(a0)
            results[i].list = core_list_init(
     58c:	0e44                	addi	s1,sp,788
     58e:	0000                	unimp
     590:	000c                	0xc
     592:	0000                	unimp
     594:	ffff                	0xffff
     596:	ffff                	0xffff
     598:	0001                	nop
     59a:	7c01                	lui	s8,0xfffe0
     59c:	0d01                	addi	s10,s10,0
     59e:	0002                	c.slli64	zero
     5a0:	000c                	0xc
     5a2:	0000                	unimp
     5a4:	0590                	addi	a2,sp,704
	...
     5ae:	0000                	unimp
     5b0:	000c                	0xc
     5b2:	0000                	unimp
     5b4:	0590                	addi	a2,sp,704
	...
     5be:	0000                	unimp
        if (results[i].execs & ID_MATRIX)
     5c0:	000c                	0xc
     5c2:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
     5c4:	0590                	addi	a2,sp,704
	...
     5ce:	0000                	unimp
            core_init_matrix(results[0].size,
     5d0:	000c                	0xc
     5d2:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
     5d4:	0590                	addi	a2,sp,704
	...
                             (ee_s32)results[i].seed1
     5de:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
     5e0:	000c                	0xc
     5e2:	0000                	unimp
            core_init_matrix(results[0].size,
     5e4:	0590                	addi	a2,sp,704
     5e6:	0000                	unimp
                             (ee_s32)results[i].seed1
     5e8:	2f6c                	fld	fa1,216(a4)
     5ea:	0000                	unimp
            core_init_matrix(results[0].size,
     5ec:	0030                	addi	a2,sp,8
     5ee:	0000                	unimp
                                 | (((ee_s32)results[i].seed2) << 16),
     5f0:	000c                	0xc
     5f2:	0000                	unimp
            core_init_matrix(results[0].size,
     5f4:	ffff                	0xffff
     5f6:	ffff                	0xffff
     5f8:	0001                	nop
     5fa:	7c01                	lui	s8,0xfffe0
     5fc:	0d01                	addi	s10,s10,0
     5fe:	0002                	c.slli64	zero
     600:	003c                	addi	a5,sp,8
     602:	0000                	unimp
     604:	05f0                	addi	a2,sp,716
     606:	0000                	unimp
     608:	343c                	fld	fa5,104(s0)
     60a:	0000                	unimp
    switch (seedcrc)
     60c:	078c                	addi	a1,sp,960
     60e:	0000                	unimp
     610:	0e44                	addi	s1,sp,788
     612:	5040                	lw	s0,36(s0)
     614:	0288                	addi	a0,sp,320
     616:	0389                	addi	t2,t2,2
     618:	81600593          	li	a1,-2026
     61c:	9201                	srli	a2,a2,0x20
     61e:	9404                	0x9404
     620:	9506                	add	a0,a0,ra
     622:	97089607          	0x97089607
            ee_printf("Profile generation run parameters for coremark.\n");
     626:	0209                	addi	tp,tp,2
     628:	0adc                	addi	a5,sp,340
     62a:	44c1                	li	s1,16
     62c:	58c8                	lw	a0,52(s1)
     62e:	44c9                	li	s1,18
     630:	44d2                	lw	s1,20(sp)
     632:	44d444d3          	0x44d444d3
     636:	44d5                	li	s1,21
     638:	44d6                	lw	s1,84(sp)
     63a:	000e48d7          	0xe48d7
     63e:	0b44                	addi	s1,sp,404
            known_id = 2;
     640:	000c                	0xc
     642:	0000                	unimp
            ee_printf("Profile generation run parameters for coremark.\n");
     644:	ffff                	0xffff
     646:	ffff                	0xffff
     648:	0001                	nop
     64a:	7c01                	lui	s8,0xfffe0
     64c:	0d01                	addi	s10,s10,0
     64e:	0002                	c.slli64	zero
            known_id = 2;
     650:	000c                	0xc
     652:	0000                	unimp
     654:	0640                	addi	s0,sp,772
     656:	0000                	unimp
                ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",
     658:	3bc8                	fld	fa0,176(a5)
     65a:	0000                	unimp
     65c:	00fc                	addi	a5,sp,76
     65e:	0000                	unimp
     660:	000c                	0xc
     662:	0000                	unimp
     664:	ffff                	0xffff
     666:	ffff                	0xffff
     668:	0001                	nop
     66a:	7c01                	lui	s8,0xfffe0
     66c:	0d01                	addi	s10,s10,0
     66e:	0002                	c.slli64	zero
                results[i].err++;
     670:	000c                	0xc
     672:	0000                	unimp
     674:	0660                	addi	s0,sp,780
     676:	0000                	unimp
     678:	3cc4                	fld	fs1,184(s1)
     67a:	0000                	unimp
     67c:	0100                	addi	s0,sp,128
     67e:	0000                	unimp
     680:	000c                	0xc
     682:	0000                	unimp
     684:	ffff                	0xffff
     686:	ffff                	0xffff
    switch (seedcrc)
     688:	0001                	nop
     68a:	7c01                	lui	s8,0xfffe0
    ee_s16       known_id = -1, total_errors = 0;
     68c:	0d01                	addi	s10,s10,0
     68e:	0002                	c.slli64	zero
    switch (seedcrc)
     690:	000c                	0xc
     692:	0000                	unimp
    ee_s16       known_id = -1, total_errors = 0;
     694:	0680                	addi	s0,sp,832
     696:	0000                	unimp
     698:	3dc4                	fld	fs1,184(a1)
     69a:	0000                	unimp
    total_errors += check_data_types();
     69c:	0078                	addi	a4,sp,12
     69e:	0000                	unimp
     6a0:	000c                	0xc
     6a2:	0000                	unimp
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     6a4:	ffff                	0xffff
     6a6:	ffff                	0xffff
    total_errors += check_data_types();
     6a8:	0001                	nop
     6aa:	7c01                	lui	s8,0xfffe0
    ee_printf("CoreMark Size    : %d\n", (int)results[0].size);
     6ac:	0d01                	addi	s10,s10,0
     6ae:	0002                	c.slli64	zero
     6b0:	0020                	addi	s0,sp,8
     6b2:	0000                	unimp
     6b4:	06a0                	addi	s0,sp,840
     6b6:	0000                	unimp
     6b8:	3e3c                	fld	fa5,120(a2)
     6ba:	0000                	unimp
    ee_printf("Total ticks      : %d\n", (int)total_time);
     6bc:	0098                	addi	a4,sp,64
     6be:	0000                	unimp
     6c0:	0e44                	addi	s1,sp,788
     6c2:	4810                	lw	a2,16(s0)
     6c4:	0288                	addi	a0,sp,320
     6c6:	0181                	addi	gp,gp,0
     6c8:	5402                	lw	s0,32(sp)
     6ca:	c10a                	sw	sp,128(sp)
     6cc:	c844                	sw	s1,20(s0)
     6ce:	0e58                	addi	a4,sp,788
    ee_printf("Total time (secs): %lf\n", (double)time_in_secs(total_time));
     6d0:	4400                	lw	s0,8(s0)
     6d2:	000c000b          	0xc000b
     6d6:	0000                	unimp
     6d8:	ffff                	0xffff
     6da:	ffff                	0xffff
     6dc:	0001                	nop
     6de:	7c01                	lui	s8,0xfffe0
     6e0:	0d01                	addi	s10,s10,0
     6e2:	0002                	c.slli64	zero
     6e4:	000c                	0xc
     6e6:	0000                	unimp
     6e8:	06d4                	addi	a3,sp,836
     6ea:	0000                	unimp
     6ec:	3ed4                	fld	fa3,184(a3)
     6ee:	0000                	unimp
     6f0:	0094                	addi	a3,sp,64
     6f2:	0000                	unimp
    if (time_in_secs(total_time) > 0)
     6f4:	000c                	0xc
     6f6:	0000                	unimp
     6f8:	ffff                	0xffff
     6fa:	ffff                	0xffff
     6fc:	0001                	nop
     6fe:	7c01                	lui	s8,0xfffe0
    total_errors += check_data_types();
     700:	0d01                	addi	s10,s10,0
     702:	0002                	c.slli64	zero
    if (time_in_secs(total_time) > 0)
     704:	0038                	addi	a4,sp,8
     706:	0000                	unimp
     708:	06f4                	addi	a3,sp,844
     70a:	0000                	unimp
    total_errors += check_data_types();
     70c:	3f84                	fld	fs1,56(a5)
     70e:	0000                	unimp
    if (time_in_secs(total_time) > 0)
     710:	0164                	addi	s1,sp,140
     712:	0000                	unimp
     714:	0e44                	addi	s1,sp,788
     716:	6030                	flw	fa2,64(s0)
     718:	0288                	addi	a0,sp,320
     71a:	0492                	slli	s1,s1,0x4
                  default_num_contexts * results[0].iterations
     71c:	0694                	addi	a3,sp,832
     71e:	0795                	addi	a5,a5,5
        ee_printf("Iterations/Sec   : %lf\n",
     720:	0896                	slli	a7,a7,0x5
     722:	0181                	addi	gp,gp,0
     724:	0389                	addi	t2,t2,2
     726:	00030593          	mv	a1,t1
     72a:	0a01                	addi	s4,s4,0
     72c:	44c1                	li	s1,16
     72e:	50c8                	lw	a0,36(s1)
     730:	44c9                	li	s1,18
     732:	44d2                	lw	s1,20(sp)
                      / time_in_secs(total_time));
     734:	44d444d3          	0x44d444d3
        ee_printf("Iterations/Sec   : %lf\n",
     738:	44d5                	li	s1,21
     73a:	44d6                	lw	s1,84(sp)
                      / time_in_secs(total_time));
     73c:	000e                	c.slli	zero,0x3
     73e:	0b44                	addi	s1,sp,404
     740:	001c                	0x1c
     742:	0000                	unimp
        ee_printf("Iterations/Sec   : %lf\n",
     744:	06f4                	addi	a3,sp,844
     746:	0000                	unimp
     748:	40e8                	lw	a0,68(s1)
     74a:	0000                	unimp
     74c:	00a8                	addi	a0,sp,72
     74e:	0000                	unimp
     750:	0e68                	addi	a0,sp,796
     752:	0210                	addi	a2,sp,256
     754:	0a40                	addi	s0,sp,276
     756:	000e                	c.slli	zero,0x3
     758:	0b44                	addi	s1,sp,404
     75a:	0e60                	addi	s0,sp,796
     75c:	0000                	unimp
     75e:	0000                	unimp
     760:	0050                	addi	a2,sp,4
     762:	0000                	unimp
     764:	06f4                	addi	a3,sp,844
     766:	0000                	unimp
     768:	4190                	lw	a2,0(a1)
     76a:	0000                	unimp
     76c:	07bc                	addi	a5,sp,968
     76e:	0000                	unimp
     770:	0e44                	addi	s1,sp,788
     772:	0180                	addi	s0,sp,192
    if (time_in_secs(total_time) < 10)
     774:	8150                	0x8150
     776:	8801                	andi	s0,s0,0
     778:	8902                	jr	s2
     77a:	04925003          	lhu	zero,73(tp) # 49 <_start+0x49>
     77e:	06940593          	addi	a1,s0,105
     782:	9664                	0x9664
     784:	9708                	0x9708
     786:	9809                	andi	s0,s0,-30
     788:	950a                	add	a0,a0,sp
     78a:	9a0b9907          	0x9a0b9907
     78e:	9b0c                	0x9b0c
     790:	030d                	addi	t1,t1,3
     792:	0158                	addi	a4,sp,132
     794:	c10a                	sw	sp,128(sp)
     796:	c844                	sw	s1,20(s0)
    ee_printf("Iterations       : %lu\n",
     798:	c944                	sw	s1,20(a0)
     79a:	d244                	sw	s1,36(a2)
     79c:	d344                	sw	s1,36(a4)
     79e:	d444                	sw	s1,44(s0)
     7a0:	d544                	sw	s1,44(a0)
     7a2:	d644                	sw	s1,44(a2)
     7a4:	d744                	sw	s1,44(a4)
     7a6:	d844                	sw	s1,52(s0)
     7a8:	d944                	sw	s1,52(a0)
     7aa:	da44                	sw	s1,52(a2)
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     7ac:	db44                	sw	s1,52(a4)
     7ae:	0e44                	addi	s1,sp,788
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     7b0:	4400                	lw	s0,8(s0)
     7b2:	000c000b          	0xc000b
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     7b6:	0000                	unimp
        total_errors++;
     7b8:	ffff                	0xffff
     7ba:	ffff                	0xffff
     7bc:	0001                	nop
     7be:	7c01                	lui	s8,0xfffe0
    ee_printf("Iterations       : %lu\n",
     7c0:	0d01                	addi	s10,s10,0
     7c2:	0002                	c.slli64	zero
     7c4:	0040                	addi	s0,sp,4
     7c6:	0000                	unimp
    ee_printf("Compiler version : %s\n", COMPILER_VERSION);
     7c8:	07b4                	addi	a3,sp,968
     7ca:	0000                	unimp
     7cc:	494c                	lw	a1,20(a0)
     7ce:	0000                	unimp
     7d0:	01b0                	addi	a2,sp,200
     7d2:	0000                	unimp
     7d4:	0e44                	addi	s1,sp,788
     7d6:	4830                	lw	a2,80(s0)
     7d8:	0795                	addi	a5,a5,5
     7da:	8868                	0x8868
    ee_printf("Compiler flags   : %s\n", COMPILER_FLAGS);
     7dc:	8902                	jr	s2
     7de:	94059303          	lh	t1,-1728(a1)
     7e2:	8106                	mv	sp,ra
     7e4:	9201                	srli	a2,a2,0x20
     7e6:	9604                	0x9604
     7e8:	9708                	0x9708
     7ea:	0309                	addi	t1,t1,2
     7ec:	0108                	addi	a0,sp,128
     7ee:	c10a                	sw	sp,128(sp)
    ee_printf("Memory location  : %s\n", MEM_LOCATION);
     7f0:	c844                	sw	s1,20(s0)
     7f2:	c944                	sw	s1,20(a0)
     7f4:	d244                	sw	s1,36(a2)
     7f6:	d344                	sw	s1,36(a4)
     7f8:	d444                	sw	s1,44(s0)
     7fa:	d544                	sw	s1,44(a0)
     7fc:	d644                	sw	s1,44(a2)
     7fe:	d744                	sw	s1,44(a4)
     800:	0e44                	addi	s1,sp,788
     802:	4400                	lw	s0,8(s0)
    ee_printf("seedcrc          : 0x%04x\n", seedcrc);
     804:	0000000b          	0xb
     808:	0038                	addi	a4,sp,8
     80a:	0000                	unimp
     80c:	07b4                	addi	a3,sp,968
     80e:	0000                	unimp
     810:	4afc                	lw	a5,84(a3)
     812:	0000                	unimp
     814:	03d4                	addi	a3,sp,452
     816:	0000                	unimp
    if (results[0].execs & ID_LIST)
     818:	0e44                	addi	s1,sp,788
     81a:	6030                	flw	fa2,64(s0)
     81c:	0288                	addi	a0,sp,320
     81e:	0389                	addi	t2,t2,2
     820:	0492                	slli	s1,s1,0x4
     822:	01810593          	addi	a1,sp,24
        for (i = 0; i < default_num_contexts; i++)
     826:	0694                	addi	a3,sp,832
     828:	0795                	addi	a5,a5,5
     82a:	0896                	slli	a7,a7,0x5
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     82c:	0a020c03          	lb	s8,160(tp) # a0 <main+0x28>
     830:	44c1                	li	s1,16
     832:	44c8                	lw	a0,12(s1)
     834:	44c9                	li	s1,18
     836:	44d2                	lw	s1,20(sp)
     838:	44d444d3          	0x44d444d3
     83c:	44d5                	li	s1,21
     83e:	44d6                	lw	s1,84(sp)
        for (i = 0; i < default_num_contexts; i++)
     840:	000e                	c.slli	zero,0x3
     842:	0b44                	addi	s1,sp,404
     844:	000c                	0xc
     846:	0000                	unimp
            ee_printf("[%d]crclist       : 0x%04x\n", i, results[i].crclist);
     848:	ffff                	0xffff
     84a:	ffff                	0xffff
     84c:	0001                	nop
     84e:	7c01                	lui	s8,0xfffe0
     850:	0d01                	addi	s10,s10,0
     852:	0002                	c.slli64	zero
     854:	001c                	0x1c
     856:	0000                	unimp
     858:	0844                	addi	s1,sp,20
	...
     862:	0000                	unimp
     864:	0e44                	addi	s1,sp,788
     866:	4850                	lw	a2,20(s0)
     868:	0a88                	addi	a0,sp,336
     86a:	0981                	addi	s3,s3,0
     86c:	0002                	c.slli64	zero
     86e:	44c1                	li	s1,16
     870:	44c8                	lw	a0,12(s1)
     872:	000e                	c.slli	zero,0x3
     874:	0020                	addi	s0,sp,8
     876:	0000                	unimp
     878:	0844                	addi	s1,sp,20
     87a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     87c:	4ed0                	lw	a2,28(a3)
     87e:	0000                	unimp
     880:	0084                	addi	s1,sp,64
     882:	0000                	unimp
     884:	0e44                	addi	s1,sp,788
     886:	6840                	flw	fs0,20(s0)
     888:	0a88                	addi	a0,sp,336
     88a:	894c                	0x894c
     88c:	7c09810b          	0x7c09810b
     890:	44c1                	li	s1,16
     892:	44c8                	lw	a0,12(s1)
    if (results[0].execs & ID_MATRIX)
     894:	44c9                	li	s1,18
     896:	000e                	c.slli	zero,0x3
     898:	000c                	0xc
     89a:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     89c:	ffff                	0xffff
     89e:	ffff                	0xffff
     8a0:	0001                	nop
     8a2:	7c01                	lui	s8,0xfffe0
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     8a4:	0d01                	addi	s10,s10,0
     8a6:	0002                	c.slli64	zero
     8a8:	001c                	0x1c
     8aa:	0000                	unimp
     8ac:	0898                	addi	a4,sp,80
	...
     8b6:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     8b8:	0e44                	addi	s1,sp,788
     8ba:	4820                	lw	s0,80(s0)
     8bc:	0288                	addi	a0,sp,320
     8be:	0181                	addi	gp,gp,0
            ee_printf("[%d]crcmatrix     : 0x%04x\n", i, results[i].crcmatrix);
     8c0:	c840                	sw	s0,20(s0)
     8c2:	c144                	sw	s1,4(a0)
     8c4:	0e44                	addi	s1,sp,788
     8c6:	0000                	unimp
     8c8:	001c                	0x1c
     8ca:	0000                	unimp
     8cc:	0898                	addi	a4,sp,80
     8ce:	0000                	unimp
     8d0:	4f54                	lw	a3,28(a4)
     8d2:	0000                	unimp
     8d4:	0058                	addi	a4,sp,4
     8d6:	0000                	unimp
     8d8:	0e44                	addi	s1,sp,788
     8da:	4c20                	lw	s0,88(s0)
     8dc:	0288                	addi	a0,sp,320
     8de:	8148                	0x8148
     8e0:	7001                	c.lui	zero,0xfffe0
     8e2:	44c8                	lw	a0,12(s1)
     8e4:	44c1                	li	s1,16
     8e6:	000e                	c.slli	zero,0x3
     8e8:	000c                	0xc
     8ea:	0000                	unimp
     8ec:	ffff                	0xffff
     8ee:	ffff                	0xffff
     8f0:	0001                	nop
     8f2:	7c01                	lui	s8,0xfffe0
        for (i = 0; i < default_num_contexts; i++)
     8f4:	0d01                	addi	s10,s10,0
     8f6:	0002                	c.slli64	zero
     8f8:	0028                	addi	a0,sp,8
     8fa:	0000                	unimp
     8fc:	08e8                	addi	a0,sp,92
     8fe:	0000                	unimp
     900:	4fac                	lw	a1,88(a5)
     902:	0000                	unimp
     904:	00cc                	addi	a1,sp,68
     906:	0000                	unimp
     908:	0e44                	addi	s1,sp,788
     90a:	4820                	lw	s0,80(s0)
    if (results[0].execs & ID_STATE)
     90c:	0288                	addi	a0,sp,320
     90e:	0181                	addi	gp,gp,0
     910:	6402                	flw	fs0,0(sp)
     912:	c80a                	sw	sp,16(sp)
        for (i = 0; i < default_num_contexts; i++)
     914:	c144                	sw	s1,4(a0)
     916:	0e44                	addi	s1,sp,788
     918:	4800                	lw	s0,16(s0)
     91a:	c140020b          	0xc140020b
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     91e:	c844                	sw	s1,20(s0)
     920:	0e44                	addi	s1,sp,788
     922:	0000                	unimp
     924:	000c                	0xc
     926:	0000                	unimp
     928:	08e8                	addi	a0,sp,92
	...
        for (i = 0; i < default_num_contexts; i++)
     932:	0000                	unimp
     934:	000c                	0xc
     936:	0000                	unimp
            ee_printf("[%d]crcstate      : 0x%04x\n", i, results[i].crcstate);
     938:	ffff                	0xffff
     93a:	ffff                	0xffff
     93c:	0001                	nop
     93e:	7c01                	lui	s8,0xfffe0
     940:	0d01                	addi	s10,s10,0
     942:	0002                	c.slli64	zero
     944:	0030                	addi	a2,sp,8
     946:	0000                	unimp
     948:	0934                	addi	a3,sp,152
     94a:	0000                	unimp
     94c:	5078                	lw	a4,100(s0)
     94e:	0000                	unimp
     950:	0174                	addi	a3,sp,140
     952:	0000                	unimp
     954:	0e44                	addi	s1,sp,788
     956:	5820                	lw	s0,112(s0)
     958:	0389                	addi	t2,t2,2
     95a:	0492                	slli	s1,s1,0x4
     95c:	0181                	addi	gp,gp,0
     95e:	0288                	addi	a0,sp,320
     960:	06940593          	addi	a1,s0,105
     964:	e002                	fsw	ft0,0(sp)
     966:	c10a                	sw	sp,128(sp)
     968:	c844                	sw	s1,20(s0)
     96a:	c944                	sw	s1,20(a0)
        for (i = 0; i < default_num_contexts; i++)
     96c:	d244                	sw	s1,36(a2)
     96e:	d344                	sw	s1,36(a4)
     970:	d444                	sw	s1,44(s0)
     972:	0e44                	addi	s1,sp,788
     974:	4400                	lw	s0,8(s0)
     976:	000c000b          	0xc000b
     97a:	0000                	unimp
     97c:	0934                	addi	a3,sp,152
     97e:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     980:	51ec                	lw	a1,100(a1)
     982:	0000                	unimp
    for (i = 0; i < default_num_contexts; i++)
     984:	0018                	0x18
     986:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     988:	000c                	0xc
     98a:	0000                	unimp
     98c:	ffff                	0xffff
     98e:	ffff                	0xffff
     990:	0001                	nop
     992:	7c01                	lui	s8,0xfffe0
    for (i = 0; i < default_num_contexts; i++)
     994:	0d01                	addi	s10,s10,0
     996:	0002                	c.slli64	zero
     998:	000c                	0xc
     99a:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     99c:	0988                	addi	a0,sp,208
     99e:	0000                	unimp
     9a0:	5204                	lw	s1,32(a2)
     9a2:	0000                	unimp
    for (i = 0; i < default_num_contexts; i++)
     9a4:	001c                	0x1c
     9a6:	0000                	unimp
        ee_printf("[%d]crcfinal      : 0x%04x\n", i, results[i].crc);
     9a8:	000c                	0xc
     9aa:	0000                	unimp
     9ac:	ffff                	0xffff
     9ae:	ffff                	0xffff
     9b0:	0001                	nop
     9b2:	7c01                	lui	s8,0xfffe0
     9b4:	0d01                	addi	s10,s10,0
     9b6:	0002                	c.slli64	zero
     9b8:	002c                	addi	a1,sp,8
     9ba:	0000                	unimp
     9bc:	09a8                	addi	a0,sp,216
     9be:	0000                	unimp
     9c0:	5220                	lw	s0,96(a2)
     9c2:	0000                	unimp
     9c4:	0148                	addi	a0,sp,132
     9c6:	0000                	unimp
     9c8:	0e44                	addi	s1,sp,788
     9ca:	5420                	lw	s0,104(s0)
     9cc:	0288                	addi	a0,sp,320
     9ce:	0389                	addi	t2,t2,2
    for (i = 0; i < default_num_contexts; i++)
     9d0:	0492                	slli	s1,s1,0x4
     9d2:	0181                	addi	gp,gp,0
     9d4:	d0020593          	addi	a1,tp,-768 # fffffd00 <__freertos_irq_stack_top+0xfefefd00>
     9d8:	c10a                	sw	sp,128(sp)
     9da:	c844                	sw	s1,20(s0)
     9dc:	c948                	sw	a0,20(a0)
     9de:	d244                	sw	s1,36(a2)
     9e0:	d344                	sw	s1,36(a4)
     9e2:	0e44                	addi	s1,sp,788
    if (total_errors == 0)
     9e4:	4400                	lw	s0,8(s0)
     9e6:	000c000b          	0xc000b
    if (total_errors > 0)
     9ea:	0000                	unimp
        ee_printf("Errors detected\n");
     9ec:	09a8                	addi	a0,sp,216
	...
     9f6:	0000                	unimp
     9f8:	000c                	0xc
     9fa:	0000                	unimp
    portable_fini(&(results[0].port));
     9fc:	ffff                	0xffff
     9fe:	ffff                	0xffff
     a00:	0001                	nop
     a02:	7c01                	lui	s8,0xfffe0
     a04:	0d01                	addi	s10,s10,0
     a06:	0002                	c.slli64	zero
}
     a08:	0028                	addi	a0,sp,8
     a0a:	0000                	unimp
     a0c:	09f8                	addi	a4,sp,220
     a0e:	0000                	unimp
     a10:	5368                	lw	a0,100(a4)
     a12:	0000                	unimp
     a14:	018c                	addi	a1,sp,192
     a16:	0000                	unimp
     a18:	0e44                	addi	s1,sp,788
     a1a:	4c10                	lw	a2,24(s0)
     a1c:	0389                	addi	t2,t2,2
     a1e:	8850                	0x8850
     a20:	9202                	jalr	tp
     a22:	8104                	0x8104
     a24:	0201                	addi	tp,tp,0
     a26:	0a64                	addi	s1,sp,284
     a28:	44c1                	li	s1,16
     a2a:	44c8                	lw	a0,12(s1)
     a2c:	44c9                	li	s1,18
     a2e:	44d2                	lw	s1,20(sp)
     a30:	000e                	c.slli	zero,0x3
     a32:	0b44                	addi	s1,sp,404
     a34:	000c                	0xc
     a36:	0000                	unimp
     a38:	ffff                	0xffff
     a3a:	ffff                	0xffff
     a3c:	0001                	nop
     a3e:	7c01                	lui	s8,0xfffe0
     a40:	0d01                	addi	s10,s10,0
     a42:	0002                	c.slli64	zero
     a44:	0038                	addi	a4,sp,8
     a46:	0000                	unimp
     a48:	0a34                	addi	a3,sp,280
     a4a:	0000                	unimp
        results[0].execs = ALL_ALGORITHMS_MASK;
     a4c:	54f4                	lw	a3,108(s1)
     a4e:	0000                	unimp
     a50:	01cc                	addi	a1,sp,196
     a52:	0000                	unimp
     a54:	0e44                	addi	s1,sp,788
     a56:	4820                	lw	s0,80(s0)
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a58:	0288                	addi	a0,sp,320
     a5a:	815c                	0x815c
     a5c:	8901                	andi	a0,a0,0
     a5e:	93049203          	lh	tp,-1744(s1)
     a62:	9405                	srai	s0,s0,0x21
     a64:	9506                	add	a0,a0,ra
     a66:	01440307          	0x1440307
     a6a:	c10a                	sw	sp,128(sp)
     a6c:	c844                	sw	s1,20(s0)
     a6e:	c944                	sw	s1,20(a0)
     a70:	d244                	sw	s1,36(a2)
     a72:	d344                	sw	s1,36(a4)
            j++;
     a74:	d444                	sw	s1,44(s0)
     a76:	d544                	sw	s1,44(a0)
        if ((1 << (ee_u32)i) & results[0].execs)
     a78:	0e44                	addi	s1,sp,788
     a7a:	4400                	lw	s0,8(s0)
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a7c:	0000000b          	0xb
     a80:	0050                	addi	a2,sp,4
     a82:	0000                	unimp
     a84:	0a34                	addi	a3,sp,280
     a86:	0000                	unimp
            j++;
     a88:	56c0                	lw	s0,44(a3)
     a8a:	0000                	unimp
     a8c:	1350                	addi	a2,sp,420
     a8e:	0000                	unimp
     a90:	0e44                	addi	s1,sp,788
     a92:	0190                	addi	a2,sp,192
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     a94:	887c                	0x887c
     a96:	8902                	jr	s2
     a98:	93049203          	lh	tp,-1744(s1)
     a9c:	9405                	srai	s0,s0,0x21
     a9e:	9806                	add	a6,a6,ra
     aa0:	810a                	mv	sp,sp
     aa2:	9501                	srai	a0,a0,0x20
     aa4:	97089607          	0x97089607
     aa8:	9909                	andi	a0,a0,-30
     aaa:	9b0c9a0b          	0x9b0c9a0b
     aae:	030d                	addi	t1,t1,3
        if ((1 << (ee_u32)i) & results[0].execs)
     ab0:	0100                	addi	s0,sp,128
     ab2:	c10a                	sw	sp,128(sp)
                    = (char *)(results[ctx].memblock[0]) + results[0].size * j;
     ab4:	c844                	sw	s1,20(s0)
     ab6:	c948                	sw	a0,20(a0)
     ab8:	d244                	sw	s1,36(a2)
     aba:	d344                	sw	s1,36(a4)
     abc:	d444                	sw	s1,44(s0)
     abe:	d544                	sw	s1,44(a0)
     ac0:	d644                	sw	s1,44(a2)
     ac2:	d744                	sw	s1,44(a4)
        if (results[i].execs & ID_LIST)
     ac4:	d844                	sw	s1,52(s0)
     ac6:	d944                	sw	s1,52(a0)
     ac8:	da44                	sw	s1,52(a2)
     aca:	db44                	sw	s1,52(a4)
        ee_printf(
     acc:	0e44                	addi	s1,sp,788
     ace:	4400                	lw	s0,8(s0)
     ad0:	0000000b          	0xb
     ad4:	000c                	0xc
     ad6:	0000                	unimp
     ad8:	ffff                	0xffff
     ada:	ffff                	0xffff
     adc:	0001                	nop
     ade:	7c01                	lui	s8,0xfffe0
            res->crclist = res->crc;
     ae0:	0d01                	addi	s10,s10,0
     ae2:	0002                	c.slli64	zero
    for (i = 0; i < iterations; i++)
     ae4:	002c                	addi	a1,sp,8
     ae6:	0000                	unimp
     ae8:	0ad4                	addi	a3,sp,340
     aea:	0000                	unimp
     aec:	6a10                	flw	fa2,16(a2)
     aee:	0000                	unimp
     af0:	01f0                	addi	a2,sp,204
     af2:	0000                	unimp
        ee_printf(
     af4:	0e48                	addi	a0,sp,788
     af6:	5420                	lw	s0,104(s0)
     af8:	0288                	addi	a0,sp,320
     afa:	0389                	addi	t2,t2,2
     afc:	0181                	addi	gp,gp,0
     afe:	0492                	slli	s1,s1,0x4
     b00:	48030593          	addi	a1,t1,1152 # 18480 <_data_lma+0xde68>
        if (known_id == 3)
     b04:	0a01                	addi	s4,s4,0
     b06:	44c1                	li	s1,16
     b08:	44c8                	lw	a0,12(s1)
     b0a:	44c9                	li	s1,18
     b0c:	44d2                	lw	s1,20(sp)
     b0e:	000e44d3          	fadd.s	fs1,ft8,ft0,rmm
                      default_num_contexts * results[0].iterations
     b12:	0b44                	addi	s1,sp,404
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b14:	0028                	addi	a0,sp,8
     b16:	0000                	unimp
     b18:	0ad4                	addi	a3,sp,340
     b1a:	0000                	unimp
     b1c:	6c00                	flw	fs0,24(s0)
     b1e:	0000                	unimp
     b20:	00a8                	addi	a0,sp,72
     b22:	0000                	unimp
     b24:	0e4c                	addi	a1,sp,788
     b26:	4820                	lw	s0,80(s0)
                          / time_in_secs(total_time),
     b28:	0288                	addi	a0,sp,320
     b2a:	0181                	addi	gp,gp,0
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b2c:	4002                	0x4002
     b2e:	c80a                	sw	sp,16(sp)
                          / time_in_secs(total_time),
     b30:	c144                	sw	s1,4(a0)
     b32:	0e44                	addi	s1,sp,788
     b34:	4800                	lw	s0,16(s0)
     b36:	44c16c0b          	0x44c16c0b
            ee_printf("CoreMark 1.0 : %f / %s %s",
     b3a:	48c8                	lw	a0,20(s1)
     b3c:	000e                	c.slli	zero,0x3
     b3e:	0000                	unimp
     b40:	000c                	0xc
     b42:	0000                	unimp
     b44:	0ad4                	addi	a3,sp,340
	...
     b4e:	0000                	unimp
     b50:	000c                	0xc
     b52:	0000                	unimp
     b54:	ffff                	0xffff
     b56:	ffff                	0xffff
     b58:	0001                	nop
     b5a:	7c01                	lui	s8,0xfffe0
     b5c:	0d01                	addi	s10,s10,0
     b5e:	0002                	c.slli64	zero
     b60:	000c                	0xc
     b62:	0000                	unimp
     b64:	0b50                	addi	a2,sp,404
	...
     b6e:	0000                	unimp
            ee_printf(" / %s", MEM_LOCATION);
     b70:	001c                	0x1c
     b72:	0000                	unimp
     b74:	0b50                	addi	a2,sp,404
     b76:	0000                	unimp
     b78:	6ca8                	flw	fa0,88(s1)
     b7a:	0000                	unimp
     b7c:	008c                	addi	a1,sp,64
     b7e:	0000                	unimp
     b80:	0e44                	addi	s1,sp,788
     b82:	4810                	lw	a2,16(s0)
            ee_printf("\n");
     b84:	0288                	addi	a0,sp,320
     b86:	0181                	addi	gp,gp,0
     b88:	7402                	flw	fs0,32(sp)
     b8a:	44c1                	li	s1,16
     b8c:	44c8                	lw	a0,12(s1)
     b8e:	000e                	c.slli	zero,0x3
     b90:	000c                	0xc
     b92:	0000                	unimp
        ee_printf(
     b94:	0b50                	addi	a2,sp,404
     b96:	0000                	unimp
     b98:	6d34                	flw	fa3,88(a0)
     b9a:	0000                	unimp
     b9c:	0010                	0x10
     b9e:	0000                	unimp
     ba0:	000c                	0xc
     ba2:	0000                	unimp
        total_errors++;
     ba4:	0b50                	addi	a2,sp,404
	...
    if (results[0].execs & ID_STATE)
     bae:	0000                	unimp
     bb0:	0028                	addi	a0,sp,8
     bb2:	0000                	unimp
     bb4:	0b50                	addi	a2,sp,404
     bb6:	0000                	unimp
            ee_printf("6k validation run parameters for coremark.\n");
     bb8:	6d44                	flw	fs1,28(a0)
     bba:	0000                	unimp
     bbc:	0074                	addi	a3,sp,12
     bbe:	0000                	unimp
     bc0:	0e44                	addi	s1,sp,788
     bc2:	4810                	lw	a2,16(s0)
     bc4:	0389                	addi	t2,t2,2
     bc6:	924c                	0x924c
     bc8:	4c04                	lw	s1,24(s0)
     bca:	0288                	addi	a0,sp,320
     bcc:	0181                	addi	gp,gp,0
     bce:	c17c                	sw	a5,68(a0)
     bd0:	c844                	sw	s1,20(s0)
     bd2:	c944                	sw	s1,20(a0)
     bd4:	d244                	sw	s1,36(a2)
     bd6:	0e44                	addi	s1,sp,788
            known_id = 1;
     bd8:	0000                	unimp
     bda:	0000                	unimp
            ee_printf("6k validation run parameters for coremark.\n");
     bdc:	000c                	0xc
     bde:	0000                	unimp
     be0:	0b50                	addi	a2,sp,404
	...
            known_id = 1;
     bea:	0000                	unimp
     bec:	001c                	0x1c
     bee:	0000                	unimp
            ee_printf("6k performance run parameters for coremark.\n");
     bf0:	0b50                	addi	a2,sp,404
     bf2:	0000                	unimp
     bf4:	6db8                	flw	fa4,88(a1)
     bf6:	0000                	unimp
     bf8:	00cc                	addi	a1,sp,68
     bfa:	0000                	unimp
     bfc:	0e4c                	addi	a1,sp,788
     bfe:	4810                	lw	a2,16(s0)
     c00:	0181                	addi	gp,gp,0
     c02:	0288                	addi	a0,sp,320
     c04:	a802                	fsd	ft0,16(sp)
     c06:	44c1                	li	s1,16
     c08:	44c8                	lw	a0,12(s1)
     c0a:	000e                	c.slli	zero,0x3
     c0c:	0028                	addi	a0,sp,8
     c0e:	0000                	unimp
     c10:	0b50                	addi	a2,sp,404
     c12:	0000                	unimp
     c14:	6e84                	flw	fs1,24(a3)
     c16:	0000                	unimp
     c18:	00fc                	addi	a5,sp,76
     c1a:	0000                	unimp
            known_id = 0;
     c1c:	0e44                	addi	s1,sp,788
     c1e:	4c10                	lw	a2,24(s0)
     c20:	0389                	addi	t2,t2,2
     c22:	9254                	0x9254
            ee_printf("2K validation run parameters for coremark.\n");
     c24:	8104                	0x8104
     c26:	8801                	andi	s0,s0,0
     c28:	0202                	c.slli64	tp
     c2a:	0a94                	addi	a3,sp,336
     c2c:	44c1                	li	s1,16
     c2e:	44c8                	lw	a0,12(s1)
     c30:	44c9                	li	s1,18
     c32:	44d2                	lw	s1,20(sp)
     c34:	000e                	c.slli	zero,0x3
     c36:	0b44                	addi	s1,sp,404
     c38:	000c                	0xc
     c3a:	0000                	unimp
            known_id = 4;
     c3c:	0b50                	addi	a2,sp,404
	...
            ee_printf("2K validation run parameters for coremark.\n");
     c46:	0000                	unimp
     c48:	000c                	0xc
     c4a:	0000                	unimp
     c4c:	0b50                	addi	a2,sp,404
	...
            known_id = 4;
     c56:	0000                	unimp
        for (i = 0; i < default_num_contexts; i++)
     c58:	000c                	0xc
     c5a:	0000                	unimp
     c5c:	0b50                	addi	a2,sp,404
	...
{
     c66:	0000                	unimp
     c68:	000c                	0xc
     c6a:	0000                	unimp
     c6c:	0b50                	addi	a2,sp,404
	...
     c76:	0000                	unimp
     c78:	000c                	0xc
     c7a:	0000                	unimp
     c7c:	0b50                	addi	a2,sp,404
	...
     c86:	0000                	unimp
     c88:	000c                	0xc
     c8a:	0000                	unimp
     c8c:	0b50                	addi	a2,sp,404
	...
     c96:	0000                	unimp
     c98:	000c                	0xc
     c9a:	0000                	unimp
     c9c:	ffff                	0xffff
     c9e:	ffff                	0xffff
     ca0:	0001                	nop
     ca2:	7c01                	lui	s8,0xfffe0
    list_head *list     = res->list;
     ca4:	0d01                	addi	s10,s10,0
     ca6:	0002                	c.slli64	zero
    for (i = 0; i < find_num; i++)
     ca8:	0034                	addi	a3,sp,8
     caa:	0000                	unimp
    info.idx = finder_idx;
     cac:	0c98                	addi	a4,sp,592
	...
    ee_u16     found = 0, missed = 0;
     cb6:	0000                	unimp
     cb8:	0e44                	addi	s1,sp,788
     cba:	5c30                	lw	a2,120(s0)
    ee_u16     retval = 0;
     cbc:	0288                	addi	a0,sp,320
     cbe:	0492                	slli	s1,s1,0x4
    if (info->idx >= 0)
     cc0:	0694                	addi	a3,sp,832
     cc2:	0795                	addi	a5,a5,5
        info.data16 = (i & 0xff);
     cc4:	0181                	addi	gp,gp,0
     cc6:	0389                	addi	t2,t2,2
     cc8:	0a400593          	li	a1,164
    if (info->idx >= 0)
     ccc:	44c1                	li	s1,16
     cce:	48c8                	lw	a0,20(s1)
        while (list && (list->info->idx != info->idx))
     cd0:	44c9                	li	s1,18
     cd2:	44d2                	lw	s1,20(sp)
     cd4:	44d444d3          	0x44d444d3
     cd8:	44d5                	li	s1,21
     cda:	000e                	c.slli	zero,0x3
     cdc:	0b44                	addi	s1,sp,404
     cde:	0000                	unimp
     ce0:	003c                	addi	a5,sp,8
     ce2:	0000                	unimp
     ce4:	0c98                	addi	a4,sp,592
     ce6:	0000                	unimp
     ce8:	6f80                	flw	fs0,24(a5)
     cea:	0000                	unimp
     cec:	00b4                	addi	a3,sp,72
     cee:	0000                	unimp
     cf0:	0e44                	addi	s1,sp,788
     cf2:	6430                	flw	fa2,72(s0)
     cf4:	0288                	addi	a0,sp,320
     cf6:	0492                	slli	s1,s1,0x4
     cf8:	0694                	addi	a3,sp,832
     cfa:	0795                	addi	a5,a5,5
            list = list->next;
     cfc:	0896                	slli	a7,a7,0x5
     cfe:	01810997          	auipc	s3,0x1810
        while (list && (list->info->idx != info->idx))
     d02:	0389                	addi	t2,t2,2
     d04:	0a600593          	li	a1,166
     d08:	44c1                	li	s1,16
     d0a:	48c8                	lw	a0,20(s1)
    while (list)
     d0c:	44c9                	li	s1,18
     d0e:	44d2                	lw	s1,20(sp)
     d10:	44d444d3          	0x44d444d3
        tmp        = list->next;
     d14:	44d5                	li	s1,21
     d16:	44d6                	lw	s1,84(sp)
        list->next = next;
     d18:	000e44d7          	0xe44d7
    while (list)
     d1c:	0b44                	addi	s1,sp,404
     d1e:	0000                	unimp
        if (this_find == NULL)
     d20:	000c                	0xc
     d22:	0000                	unimp
            if (this_find->info->data16 & 0x1) /* use found value */
     d24:	ffff                	0xffff
     d26:	ffff                	0xffff
            found++;
     d28:	0001                	nop
     d2a:	7c01                	lui	s8,0xfffe0
     d2c:	0d01                	addi	s10,s10,0
     d2e:	0002                	c.slli64	zero
            if (this_find->info->data16 & 0x1) /* use found value */
     d30:	000c                	0xc
     d32:	0000                	unimp
            found++;
     d34:	0d20                	addi	s0,sp,664
	...
            if (this_find->info->data16 & 0x1) /* use found value */
     d3e:	0000                	unimp
                retval += (this_find->info->data16 >> 9) & 1;
     d40:	000c                	0xc
     d42:	0000                	unimp
     d44:	0d20                	addi	s0,sp,664
     d46:	0000                	unimp
     d48:	7034                	flw	fa3,96(s0)
     d4a:	0000                	unimp
     d4c:	000c                	0xc
     d4e:	0000                	unimp
     d50:	000c                	0xc
     d52:	0000                	unimp
            if (this_find->next != NULL)
     d54:	0d20                	addi	s0,sp,664
	...
                this_find->next = finder->next;
     d5e:	0000                	unimp
     d60:	000c                	0xc
     d62:	0000                	unimp
                finder->next    = list->next;
     d64:	ffff                	0xffff
     d66:	ffff                	0xffff
     d68:	0001                	nop
     d6a:	7c01                	lui	s8,0xfffe0
                list->next      = finder;
     d6c:	0d01                	addi	s10,s10,0
     d6e:	0002                	c.slli64	zero
        if (info.idx >= 0)
     d70:	0024                	addi	s1,sp,8
     d72:	0000                	unimp
     d74:	0d60                	addi	s0,sp,668
	...
            info.idx++;
     d7e:	0000                	unimp
     d80:	0e40                	addi	s0,sp,788
     d82:	8110                	0x8110
     d84:	8801                	andi	s0,s0,0
     d86:	4002                	0x4002
     d88:	44c1                	li	s1,16
     d8a:	44c8                	lw	a0,12(s1)
     d8c:	000e                	c.slli	zero,0x3
     d8e:	0e48                	addi	a0,sp,788
     d90:	4010                	lw	a2,0(s0)
     d92:	0288                	addi	a0,sp,320
    for (i = 0; i < find_num; i++)
     d94:	0181                	addi	gp,gp,0
     d96:	0000                	unimp
     d98:	000c                	0xc
     d9a:	0000                	unimp
     d9c:	0d60                	addi	s0,sp,668
	...
     da6:	0000                	unimp
     da8:	000c                	0xc
     daa:	0000                	unimp
     dac:	0d60                	addi	s0,sp,668
	...
    remover = core_list_remove(list->next);
     db6:	0000                	unimp
    if (info->idx >= 0)
     db8:	000c                	0xc
     dba:	0000                	unimp
    list_head *ret = item->next;
     dbc:	ffff                	0xffff
     dbe:	ffff                	0xffff
    tmp        = item->info;
     dc0:	0001                	nop
     dc2:	7c01                	lui	s8,0xfffe0
    item->info = ret->info;
     dc4:	0d01                	addi	s10,s10,0
     dc6:	0002                	c.slli64	zero
    item->next = item->next->next;
     dc8:	0024                	addi	s1,sp,8
     dca:	0000                	unimp
    item->info = ret->info;
     dcc:	0db8                	addi	a4,sp,728
     dce:	0000                	unimp
    ret->info  = tmp;
     dd0:	7040                	flw	fs0,36(s0)
     dd2:	0000                	unimp
    item->next = item->next->next;
     dd4:	0090                	addi	a2,sp,64
     dd6:	0000                	unimp
    if (info->idx >= 0)
     dd8:	0e44                	addi	s1,sp,788
     dda:	0180                	addi	s0,sp,192
    ret->next  = NULL;
     ddc:	8944                	0x8944
     dde:	02885003          	lhu	zero,40(a6) # ffffa028 <__freertos_irq_stack_top+0xfefea028>
    if (info->idx >= 0)
     de2:	0181                	addi	gp,gp,0
        while (list && (list->info->idx != info->idx))
     de4:	6402                	flw	fs0,0(sp)
     de6:	44c1                	li	s1,16
     de8:	44c8                	lw	a0,12(s1)
     dea:	48c9                	li	a7,18
     dec:	000e                	c.slli	zero,0x3
     dee:	0000                	unimp
     df0:	0028                	addi	a0,sp,8
     df2:	0000                	unimp
            list = list->next;
     df4:	0db8                	addi	a4,sp,728
     df6:	0000                	unimp
        while (list && (list->info->idx != info->idx))
     df8:	70d0                	flw	fa2,36(s1)
     dfa:	0000                	unimp
        finder = list->next;
     dfc:	00fc                	addi	a5,sp,76
     dfe:	0000                	unimp
    while (finder)
     e00:	0e48                	addi	a0,sp,788
     e02:	5020                	lw	s0,96(s0)
        retval = crc16(list->info->data16, retval);
     e04:	0288                	addi	a0,sp,320
     e06:	0181                	addi	gp,gp,0
     e08:	0389                	addi	t2,t2,2
     e0a:	0492                	slli	s1,s1,0x4
     e0c:	0a64                	addi	s1,sp,284
     e0e:	44c1                	li	s1,16
     e10:	44c8                	lw	a0,12(s1)
     e12:	44c9                	li	s1,18
     e14:	44d2                	lw	s1,20(sp)
     e16:	000e                	c.slli	zero,0x3
        finder = finder->next;
     e18:	0b44                	addi	s1,sp,404
     e1a:	0000                	unimp
        retval = crc16(list->info->data16, retval);
     e1c:	000c                	0xc
     e1e:	0000                	unimp
    while (finder)
     e20:	ffff                	0xffff
     e22:	ffff                	0xffff
     e24:	0001                	nop
     e26:	7c01                	lui	s8,0xfffe0
     e28:	0d01                	addi	s10,s10,0
     e2a:	0002                	c.slli64	zero
    item_removed->info  = item_modified->info;
     e2c:	000c                	0xc
     e2e:	0000                	unimp
    item_removed->next  = item_modified->next;
     e30:	0e1c                	addi	a5,sp,784
     e32:	0000                	unimp
    insize = 1;
     e34:	71cc                	flw	fa1,36(a1)
     e36:	0000                	unimp
    item_removed->info  = item_modified->info;
     e38:	0018                	0x18
     e3a:	0000                	unimp
    item_modified->info = tmp;
     e3c:	000c                	0xc
     e3e:	0000                	unimp
    item_removed->next  = item_modified->next;
     e40:	0e1c                	addi	a5,sp,784
	...
        tail = NULL;
     e4a:	0000                	unimp
        list = NULL;
     e4c:	000c                	0xc
     e4e:	0000                	unimp
        nmerges = 0; /* count number of merges we do in this pass */
     e50:	ffff                	0xffff
     e52:	ffff                	0xffff
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     e54:	0001                	nop
     e56:	7c01                	lui	s8,0xfffe0
            nmerges++; /* there exists a merge to be done */
     e58:	0d01                	addi	s10,s10,0
     e5a:	0002                	c.slli64	zero
     e5c:	000c                	0xc
     e5e:	0000                	unimp
            psize = 0;
     e60:	0e4c                	addi	a1,sp,788
	...
                psize++;
     e6a:	0000                	unimp
                if (!q)
     e6c:	0014                	0x14
     e6e:	0000                	unimp
            for (i = 0; i < insize; i++)
     e70:	0e4c                	addi	a1,sp,788
     e72:	0000                	unimp
     e74:	71e4                	flw	fs1,100(a1)
     e76:	0000                	unimp
                    list = e;
     e78:	005c                	addi	a5,sp,4
     e7a:	0000                	unimp
     e7c:	0e48                	addi	a0,sp,788
     e7e:	6810                	flw	fa2,16(s0)
     e80:	000e                	c.slli	zero,0x3
     e82:	0000                	unimp
            while (psize > 0 || (qsize > 0 && q))
     e84:	000c                	0xc
     e86:	0000                	unimp
                else if (qsize == 0 || !q)
     e88:	ffff                	0xffff
     e8a:	ffff                	0xffff
     e8c:	0001                	nop
     e8e:	7c01                	lui	s8,0xfffe0
                else if (cmp(p->info, q->info, res) <= 0)
     e90:	0d01                	addi	s10,s10,0
     e92:	0002                	c.slli64	zero
     e94:	000c                	0xc
     e96:	0000                	unimp
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     e98:	0e84                	addi	s1,sp,848
     e9a:	0000                	unimp
    return a->idx - b->idx;
     e9c:	7240                	flw	fs0,36(a2)
     e9e:	0000                	unimp
     ea0:	0024                	addi	s1,sp,8
     ea2:	0000                	unimp
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
     ea4:	000c                	0xc
     ea6:	0000                	unimp
     ea8:	ffff                	0xffff
     eaa:	ffff                	0xffff
     eac:	0001                	nop
     eae:	7c01                	lui	s8,0xfffe0
     eb0:	0d01                	addi	s10,s10,0
     eb2:	0002                	c.slli64	zero
     eb4:	0028                	addi	a0,sp,8
     eb6:	0000                	unimp
     eb8:	0ea4                	addi	s1,sp,856
     eba:	0000                	unimp
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     ebc:	7288                	flw	fa0,32(a3)
     ebe:	0000                	unimp
    return a->idx - b->idx;
     ec0:	00ec                	addi	a1,sp,76
     ec2:	0000                	unimp
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
     ec4:	0e48                	addi	a0,sp,788
     ec6:	5010                	lw	a2,32(s0)
     ec8:	0288                	addi	a0,sp,320
     eca:	0492                	slli	s1,s1,0x4
     ecc:	0181                	addi	gp,gp,0
     ece:	0389                	addi	t2,t2,2
     ed0:	ac02                	fsd	ft0,24(sp)
     ed2:	c10a                	sw	sp,128(sp)
     ed4:	c844                	sw	s1,20(s0)
     ed6:	c944                	sw	s1,20(a0)
     ed8:	d244                	sw	s1,36(a2)
     eda:	0e44                	addi	s1,sp,788
                else if (cmp(p->info, q->info, res) <= 0)
     edc:	4400                	lw	s0,8(s0)
     ede:	001c000b          	0x1c000b
                    qsize--;
     ee2:	0000                	unimp
                    q = q->next;
     ee4:	0ea4                	addi	s1,sp,856
     ee6:	0000                	unimp
                    qsize--;
     ee8:	7374                	flw	fa3,100(a4)
     eea:	0000                	unimp
                if (tail)
     eec:	0074                	addi	a3,sp,12
     eee:	0000                	unimp
                    tail->next = e;
     ef0:	0e48                	addi	a0,sp,788
     ef2:	4820                	lw	s0,80(s0)
                    list = e;
     ef4:	0288                	addi	a0,sp,320
     ef6:	0181                	addi	gp,gp,0
            while (psize > 0 || (qsize > 0 && q))
     ef8:	5802                	lw	a6,32(sp)
     efa:	44c1                	li	s1,16
     efc:	44c8                	lw	a0,12(s1)
     efe:	000e                	c.slli	zero,0x3
     f00:	002c                	addi	a1,sp,8
     f02:	0000                	unimp
                    qsize--;
     f04:	0ea4                	addi	s1,sp,856
     f06:	0000                	unimp
     f08:	73e8                	flw	fa0,100(a5)
     f0a:	0000                	unimp
                    q = q->next;
     f0c:	0108                	addi	a0,sp,128
     f0e:	0000                	unimp
                if (tail)
     f10:	0e44                	addi	s1,sp,788
     f12:	4430                	lw	a2,72(s0)
                    list = e;
     f14:	88500593          	li	a1,-1915
     f18:	8902                	jr	s2
     f1a:	01815003          	lhu	zero,24(sp)
     f1e:	0492                	slli	s1,s1,0x4
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f20:	c802                	sw	zero,16(sp)
     f22:	44c1                	li	s1,16
     f24:	44c8                	lw	a0,12(s1)
     f26:	44c9                	li	s1,18
     f28:	44d2                	lw	s1,20(sp)
     f2a:	000e44d3          	fadd.s	fs1,ft8,ft0,rmm
     f2e:	0000                	unimp
            list = list->next;
     f30:	0038                	addi	a4,sp,8
     f32:	0000                	unimp
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f34:	0ea4                	addi	s1,sp,856
	...
    while (finder)
     f3e:	0000                	unimp
     f40:	0e44                	addi	s1,sp,788
     f42:	4830                	lw	a2,80(s0)
                    psize--;
     f44:	0694                	addi	a3,sp,832
     f46:	8854                	0x8854
     f48:	8902                	jr	s2
     f4a:	54059303          	lh	t1,1344(a1)
                    p = p->next;
     f4e:	0181                	addi	gp,gp,0
     f50:	0492                	slli	s1,s1,0x4
     f52:	0795                	addi	a5,a5,5
        while (p)
     f54:	0002                	c.slli64	zero
     f56:	c10a                	sw	sp,128(sp)
        tail->next = NULL;
     f58:	c844                	sw	s1,20(s0)
     f5a:	c944                	sw	s1,20(a0)
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
     f5c:	d244                	sw	s1,36(a2)
     f5e:	d344                	sw	s1,36(a4)
        insize *= 2;
     f60:	d444                	sw	s1,44(s0)
     f62:	d544                	sw	s1,44(a0)
        while (p)
     f64:	0e44                	addi	s1,sp,788
     f66:	4400                	lw	s0,8(s0)
     f68:	0000000b          	0xb
        nmerges = 0; /* count number of merges we do in this pass */
     f6c:	000c                	0xc
     f6e:	0000                	unimp
        tail = NULL;
     f70:	0ea4                	addi	s1,sp,856
     f72:	0000                	unimp
        list = NULL;
     f74:	74f0                	flw	fa2,108(s1)
     f76:	0000                	unimp
     f78:	0070                	addi	a2,sp,12
     f7a:	0000                	unimp
        while (list && ((list->info->data16 & 0xff) != info->data16))
     f7c:	000c                	0xc
     f7e:	0000                	unimp
     f80:	0ea4                	addi	s1,sp,856
     f82:	0000                	unimp
     f84:	7560                	flw	fs0,108(a0)
     f86:	0000                	unimp
     f88:	00b0                	addi	a2,sp,72
     f8a:	0000                	unimp
     f8c:	001c                	0x1c
     f8e:	0000                	unimp
     f90:	0ea4                	addi	s1,sp,856
     f92:	0000                	unimp
     f94:	7610                	flw	fa2,40(a2)
     f96:	0000                	unimp
     f98:	0038                	addi	a4,sp,8
     f9a:	0000                	unimp
     f9c:	0e44                	addi	s1,sp,788
     f9e:	4410                	lw	a2,8(s0)
     fa0:	0288                	addi	a0,sp,320
     fa2:	814c                	0x814c
            list = list->next;
     fa4:	5001                	c.li	zero,-32
     fa6:	44c1                	li	s1,16
        while (list && ((list->info->data16 & 0xff) != info->data16))
     fa8:	4cc8                	lw	a0,28(s1)
     faa:	000e                	c.slli	zero,0x3
     fac:	002c                	addi	a1,sp,8
     fae:	0000                	unimp
            retval += (list->next->info->data16 >> 8) & 1;
     fb0:	0ea4                	addi	s1,sp,856
     fb2:	0000                	unimp
            missed++;
     fb4:	7648                	flw	fa0,44(a2)
     fb6:	0000                	unimp
     fb8:	01c4                	addi	s1,sp,196
     fba:	0000                	unimp
            retval += (list->next->info->data16 >> 8) & 1;
     fbc:	0e4c                	addi	a1,sp,788
     fbe:	5430                	lw	a2,104(s0)
            missed++;
     fc0:	0389                	addi	t2,t2,2
     fc2:	0181                	addi	gp,gp,0
            retval += (list->next->info->data16 >> 8) & 1;
     fc4:	0288                	addi	a0,sp,320
     fc6:	0492                	slli	s1,s1,0x4
     fc8:	8c020593          	addi	a1,tp,-1856 # fffff8c0 <__freertos_irq_stack_top+0xfefef8c0>
     fcc:	c10a                	sw	sp,128(sp)
     fce:	c844                	sw	s1,20(s0)
     fd0:	c944                	sw	s1,20(a0)
     fd2:	d244                	sw	s1,36(a2)
     fd4:	d344                	sw	s1,36(a4)
     fd6:	0e44                	addi	s1,sp,788
    finder = list->next;
     fd8:	4400                	lw	s0,8(s0)
     fda:	0030000b          	0x30000b
    while (finder)
     fde:	0000                	unimp
        retval = crc16(list->info->data16, retval);
     fe0:	0ea4                	addi	s1,sp,856
     fe2:	0000                	unimp
     fe4:	780c                	flw	fa1,48(s0)
     fe6:	0000                	unimp
     fe8:	013c                	addi	a5,sp,136
     fea:	0000                	unimp
     fec:	0e44                	addi	s1,sp,788
     fee:	5820                	lw	s0,112(s0)
     ff0:	0389                	addi	t2,t2,2
     ff2:	0492                	slli	s1,s1,0x4
        finder = finder->next;
     ff4:	01810593          	addi	a1,sp,24
        retval = crc16(list->info->data16, retval);
     ff8:	0288                	addi	a0,sp,320
     ffa:	0694                	addi	a3,sp,832
    while (finder)
     ffc:	c1010003          	lb	zero,-1008(sp)
}
    1000:	c844                	sw	s1,20(s0)
    1002:	c948                	sw	a0,20(a0)
    1004:	d244                	sw	s1,36(a2)
    1006:	d344                	sw	s1,36(a4)
    1008:	d444                	sw	s1,44(s0)
    100a:	0e44                	addi	s1,sp,788
    100c:	0000                	unimp
    100e:	0000                	unimp
    1010:	0038                	addi	a4,sp,8
    1012:	0000                	unimp
    1014:	0ea4                	addi	s1,sp,856
    1016:	0000                	unimp
    1018:	7948                	flw	fa0,52(a0)
    101a:	0000                	unimp
    101c:	0144                	addi	s1,sp,132
    101e:	0000                	unimp
    1020:	0e44                	addi	s1,sp,788
    1022:	4430                	lw	a2,72(s0)
    1024:	0389                	addi	t2,t2,2
    1026:	9348                	0x9348
    1028:	4c05                	li	s8,1
    102a:	0288                	addi	a0,sp,320
    102c:	925c                	0x925c
    102e:	9504                	0x9504
    1030:	94018107          	0x94018107
    1034:	0206                	slli	tp,tp,0x1
    1036:	0ab8                	addi	a4,sp,344
    1038:	44c1                	li	s1,16
    103a:	48c8                	lw	a0,20(s1)
    info.idx = finder_idx;
    103c:	44c9                	li	s1,18
    103e:	44d2                	lw	s1,20(sp)
    1040:	44d444d3          	0x44d444d3
    if (finder_idx > 0)
    1044:	44d5                	li	s1,21
    1046:	000e                	c.slli	zero,0x3
        while (p)
    1048:	0b44                	addi	s1,sp,404
    104a:	0000                	unimp
    104c:	000c                	0xc
    104e:	0000                	unimp
    1050:	0ea4                	addi	s1,sp,856
    1052:	0000                	unimp
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1054:	7a8c                	flw	fa1,48(a3)
    1056:	0000                	unimp
    1058:	0054                	addi	a3,sp,4
    105a:	0000                	unimp
        while (p)
    105c:	002c                	addi	a1,sp,8
    105e:	0000                	unimp
        tail = NULL;
    1060:	0ea4                	addi	s1,sp,856
    1062:	0000                	unimp
        list = NULL;
    1064:	7ae0                	flw	fs0,116(a3)
    1066:	0000                	unimp
        nmerges = 0; /* count number of merges we do in this pass */
    1068:	017c                	addi	a5,sp,140
    106a:	0000                	unimp
        switch (flag)
    106c:	0e44                	addi	s1,sp,788
    106e:	4420                	lw	s0,72(s0)
            nmerges++; /* there exists a merge to be done */
    1070:	0389                	addi	t2,t2,2
    1072:	934c                	0x934c
    1074:	5405                	li	s0,-31
    1076:	0288                	addi	a0,sp,320
            psize = 0;
    1078:	0181                	addi	gp,gp,0
    107a:	0492                	slli	s1,s1,0x4
            nmerges++; /* there exists a merge to be done */
    107c:	0a70                	addi	a2,sp,284
    107e:	44c1                	li	s1,16
    1080:	44c8                	lw	a0,12(s1)
    1082:	44c9                	li	s1,18
                q = q->next;
    1084:	44d2                	lw	s1,20(sp)
    1086:	000e44d3          	fadd.s	fs1,ft8,ft0,rmm
                psize++;
    108a:	0b44                	addi	s1,sp,404
                if (!q)
    108c:	000c                	0xc
    108e:	0000                	unimp
            for (i = 0; i < insize; i++)
    1090:	0ea4                	addi	s1,sp,856
	...
                    list = e;
    109a:	0000                	unimp
            while (psize > 0 || (qsize > 0 && q))
    109c:	0030                	addi	a2,sp,8
    109e:	0000                	unimp
                else if (qsize == 0 || !q)
    10a0:	0ea4                	addi	s1,sp,856
	...
                else if (cmp(p->info, q->info, res) <= 0)
    10aa:	0000                	unimp
    10ac:	0e44                	addi	s1,sp,788
    10ae:	4430                	lw	a2,72(s0)
    ee_s16 data = *pdata;
    10b0:	0389                	addi	t2,t2,2
    10b2:	9348                	0x9348
    if (optype) /* if cached, use cache */
    10b4:	5005                	c.li	zero,-31
    10b6:	0288                	addi	a0,sp,320
        return (data & 0x007f);
    10b8:	9254                	0x9254
    10ba:	8104                	0x8104
    if (optype) /* if cached, use cache */
    10bc:	0201                	addi	tp,tp,0
    10be:	0a00                	addi	s0,sp,272
               & 0xf);       /* bits 3-6 is specific data for the operation */
    10c0:	44c1                	li	s1,16
    10c2:	44c8                	lw	a0,12(s1)
        ee_s16 dtype
    10c4:	44c9                	li	s1,18
    10c6:	44d2                	lw	s1,20(sp)
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    10c8:	000e4cd3          	fadd.s	fs9,ft8,ft0,rmm
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    10cc:	0b44                	addi	s1,sp,404
    10ce:	0000                	unimp
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    10d0:	0034                	addi	a3,sp,8
    10d2:	0000                	unimp
        switch (flag)
    10d4:	0ea4                	addi	s1,sp,856
    10d6:	0000                	unimp
    10d8:	7c5c                	flw	fa5,60(s0)
    10da:	0000                	unimp
    10dc:	014c                	addi	a1,sp,132
    10de:	0000                	unimp
    10e0:	0e44                	addi	s1,sp,788
    10e2:	4430                	lw	a2,72(s0)
    10e4:	0288                	addi	a0,sp,320
    10e6:	8950                	0x8950
    10e8:	54049203          	lh	tp,1344(s1)
        res->crc = crcu16(retval, res->crc);
    10ec:	06940593          	addi	a1,s0,105
    10f0:	0181                	addi	gp,gp,0
    10f2:	9c02                	jalr	s8
    10f4:	c10a                	sw	sp,128(sp)
    10f6:	c844                	sw	s1,20(s0)
        retval &= 0x007f;
    10f8:	c948                	sw	a0,20(a0)
    10fa:	d244                	sw	s1,36(a2)
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    10fc:	d344                	sw	s1,36(a4)
    10fe:	d444                	sw	s1,44(s0)
    1100:	0e44                	addi	s1,sp,788
    1102:	4400                	lw	s0,8(s0)
        res->crc = crcu16(retval, res->crc);
    1104:	0000000b          	0xb
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1108:	0030                	addi	a2,sp,8
    110a:	0000                	unimp
    110c:	0ea4                	addi	s1,sp,856
	...
    if (optype) /* if cached, use cache */
    1116:	0000                	unimp
        return (data & 0x007f);
    1118:	0e44                	addi	s1,sp,788
    111a:	4430                	lw	a2,72(s0)
    if (optype) /* if cached, use cache */
    111c:	0492                	slli	s1,s1,0x4
    111e:	815c                	0x815c
               & 0xf);       /* bits 3-6 is specific data for the operation */
    1120:	8801                	andi	s0,s0,0
    1122:	8902                	jr	s2
        ee_s16 dtype
    1124:	94059303          	lh	t1,-1728(a1)
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1128:	0206                	slli	tp,tp,0x1
    112a:	0a00                	addi	s0,sp,272
        ee_s16 flag = data & 0x7; /* bits 0-2 is type of function to perform */
    112c:	44c1                	li	s1,16
    112e:	44c8                	lw	a0,12(s1)
        dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
    1130:	44c9                	li	s1,18
    1132:	44d2                	lw	s1,20(sp)
        switch (flag)
    1134:	44d444d3          	0x44d444d3
    1138:	000e                	c.slli	zero,0x3
    113a:	0b44                	addi	s1,sp,404
    113c:	0028                	addi	a0,sp,8
    113e:	0000                	unimp
    1140:	0ea4                	addi	s1,sp,856
	...
    114a:	0000                	unimp
        res->crc = crcu16(retval, res->crc);
    114c:	0e44                	addi	s1,sp,788
    114e:	5010                	lw	a2,32(s0)
    1150:	0288                	addi	a0,sp,320
    1152:	0181                	addi	gp,gp,0
    1154:	0392                	slli	t2,t2,0x4
    1156:	0a400493          	li	s1,164
        retval &= 0x007f;
    115a:	44c1                	li	s1,16
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    115c:	44c8                	lw	a0,12(s1)
    115e:	44d2                	lw	s1,20(sp)
    1160:	000e44d3          	fadd.s	fs1,ft8,ft0,rmm
        res->crc = crcu16(retval, res->crc);
    1164:	0b44                	addi	s1,sp,404
    1166:	0000                	unimp
        *pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
    1168:	000c                	0xc
    116a:	0000                	unimp
    116c:	0ea4                	addi	s1,sp,856
	...
                else if (cmp(p->info, q->info, res) <= 0)
    1176:	0000                	unimp
                    qsize--;
    1178:	000c                	0xc
    117a:	0000                	unimp
                    q = q->next;
    117c:	0ea4                	addi	s1,sp,856
	...
                if (tail)
    1186:	0000                	unimp
                    tail->next = e;
    1188:	000c                	0xc
    118a:	0000                	unimp
                    list = e;
    118c:	ffff                	0xffff
    118e:	ffff                	0xffff
            while (psize > 0 || (qsize > 0 && q))
    1190:	0001                	nop
    1192:	7c01                	lui	s8,0xfffe0
    1194:	0d01                	addi	s10,s10,0
    1196:	0002                	c.slli64	zero
    1198:	001c                	0x1c
    119a:	0000                	unimp
                    qsize--;
    119c:	1188                	addi	a0,sp,224
    119e:	0000                	unimp
    11a0:	7da8                	flw	fa0,120(a1)
    11a2:	0000                	unimp
                    q = q->next;
    11a4:	004c                	addi	a1,sp,4
    11a6:	0000                	unimp
                if (tail)
    11a8:	0e48                	addi	a0,sp,788
    11aa:	4820                	lw	s0,80(s0)
                    list = e;
    11ac:	0288                	addi	a0,sp,320
    11ae:	0181                	addi	gp,gp,0
    11b0:	c170                	sw	a2,68(a0)
    11b2:	c844                	sw	s1,20(s0)
    11b4:	0e44                	addi	s1,sp,788
    11b6:	0000                	unimp
                    psize--;
    11b8:	000c                	0xc
    11ba:	0000                	unimp
    11bc:	ffff                	0xffff
    11be:	ffff                	0xffff
                    p = p->next;
    11c0:	0001                	nop
    11c2:	7c01                	lui	s8,0xfffe0
    11c4:	0d01                	addi	s10,s10,0
    11c6:	0002                	c.slli64	zero
    11c8:	002c                	addi	a1,sp,8
    11ca:	0000                	unimp
        while (p)
    11cc:	11b8                	addi	a4,sp,232
    11ce:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    11d0:	7df4                	flw	fa3,124(a1)
    11d2:	0000                	unimp
        tail->next = NULL;
    11d4:	0114                	addi	a3,sp,128
    11d6:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    11d8:	0e4c                	addi	a1,sp,788
    11da:	4c10                	lw	a2,24(s0)
    11dc:	0288                	addi	a0,sp,320
    11de:	0181                	addi	gp,gp,0
        insize *= 2;
    11e0:	0389                	addi	t2,t2,2
    11e2:	0a78                	addi	a4,sp,284
    11e4:	44c8                	lw	a0,12(s1)
    11e6:	48c1                	li	a7,16
    11e8:	44c9                	li	s1,18
    11ea:	000e                	c.slli	zero,0x3
        while (p)
    11ec:	0b48                	addi	a0,sp,404
    11ee:	a802                	fsd	ft0,16(sp)
        tail->next = NULL;
    11f0:	000e                	c.slli	zero,0x3
    11f2:	c8c1                	beqz	s1,1282 <__stack_size+0x282>
    11f4:	00c9                	addi	ra,ra,18
    11f6:	0000                	unimp
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    11f8:	000c                	0xc
    11fa:	0000                	unimp
    11fc:	ffff                	0xffff
    11fe:	ffff                	0xffff
    1200:	0001                	nop
    1202:	7c01                	lui	s8,0xfffe0
    1204:	0d01                	addi	s10,s10,0
    1206:	0002                	c.slli64	zero
                if (res->crcmatrix == 0)
    1208:	002c                	addi	a1,sp,8
    120a:	0000                	unimp
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    120c:	11f8                	addi	a4,sp,236
    120e:	0000                	unimp
    1210:	7f08                	flw	fa0,56(a4)
    1212:	0000                	unimp
                if (res->crcmatrix == 0)
    1214:	0174                	addi	a3,sp,140
    1216:	0000                	unimp
                    res->crcmatrix = retval;
    1218:	0e44                	addi	s1,sp,788
    121a:	4420                	lw	s0,72(s0)
    121c:	0389                	addi	t2,t2,2
    121e:	8158                	0x8158
    1220:	8801                	andi	s0,s0,0
    1222:	9202                	jalr	tp
                retval = core_bench_state(res->size,
    1224:	9304                	0x9304
    1226:	0205                	addi	tp,tp,1
    1228:	0aa0                	addi	s0,sp,344
    122a:	44c1                	li	s1,16
    122c:	44c8                	lw	a0,12(s1)
    122e:	44c9                	li	s1,18
    1230:	44d2                	lw	s1,20(sp)
    1232:	000e44d3          	fadd.s	fs1,ft8,ft0,rmm
    1236:	0b44                	addi	s1,sp,404
    1238:	000c                	0xc
    123a:	0000                	unimp
    123c:	ffff                	0xffff
    123e:	ffff                	0xffff
    1240:	0001                	nop
    1242:	7c01                	lui	s8,0xfffe0
    1244:	0d01                	addi	s10,s10,0
    1246:	0002                	c.slli64	zero
    1248:	000c                	0xc
    124a:	0000                	unimp
    124c:	1238                	addi	a4,sp,296
    124e:	0000                	unimp
                if (res->crcstate == 0)
    1250:	807c                	0x807c
    1252:	0000                	unimp
                retval = core_bench_state(res->size,
    1254:	0040                	addi	s0,sp,4
    1256:	0000                	unimp
    1258:	002c                	addi	a1,sp,8
    125a:	0000                	unimp
                if (res->crcstate == 0)
    125c:	1238                	addi	a4,sp,296
    125e:	0000                	unimp
                    res->crcstate = retval;
    1260:	80bc                	0x80bc
    1262:	0000                	unimp
    1264:	0078                	addi	a4,sp,12
    1266:	0000                	unimp
    1268:	0e44                	addi	s1,sp,788
    126a:	5820                	lw	s0,112(s0)
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    126c:	0288                	addi	a0,sp,320
    126e:	0389                	addi	t2,t2,2
    1270:	0492                	slli	s1,s1,0x4
    1272:	06940593          	addi	a1,s0,105
    1276:	0181                	addi	gp,gp,0
    1278:	4002                	0x4002
    127a:	44c1                	li	s1,16
                if (res->crcmatrix == 0)
    127c:	44c8                	lw	a0,12(s1)
    127e:	44c9                	li	s1,18
                retval = core_bench_matrix(&(res->mat), dtype, res->crc);
    1280:	44d2                	lw	s1,20(sp)
    1282:	44d444d3          	0x44d444d3
    1286:	000e                	c.slli	zero,0x3
                if (res->crcmatrix == 0)
    1288:	0020                	addi	s0,sp,8
    128a:	0000                	unimp
                    res->crcmatrix = retval;
    128c:	1238                	addi	a4,sp,296
	...
    1296:	0000                	unimp
                retval = core_bench_state(res->size,
    1298:	0e48                	addi	a0,sp,788
    129a:	4810                	lw	a2,16(s0)
    129c:	0288                	addi	a0,sp,320
    129e:	0181                	addi	gp,gp,0
    12a0:	0a40                	addi	s0,sp,276
    12a2:	44c1                	li	s1,16
    12a4:	44c8                	lw	a0,12(s1)
    12a6:	000e                	c.slli	zero,0x3
    12a8:	0b44                	addi	s1,sp,404
    12aa:	0000                	unimp
    12ac:	0048                	addi	a0,sp,4
    12ae:	0000                	unimp
    12b0:	1238                	addi	a4,sp,296
    12b2:	0000                	unimp
    12b4:	8134                	0x8134
    12b6:	0000                	unimp
    12b8:	03e4                	addi	s1,sp,460
    12ba:	0000                	unimp
    12bc:	0e44                	addi	s1,sp,788
    12be:	01a0                	addi	s0,sp,200
    12c0:	886c                	0x886c
    12c2:	8902                	jr	s2
                if (res->crcstate == 0)
    12c4:	93049203          	lh	tp,-1744(s1)
                retval = core_bench_state(res->size,
    12c8:	8105                	srli	a0,a0,0x1
    12ca:	9401                	srai	s0,s0,0x20
    12cc:	9506                	add	a0,a0,ra
    12ce:	97089607          	0x97089607
                if (res->crcstate == 0)
    12d2:	9809                	andi	s0,s0,-30
                    res->crcstate = retval;
    12d4:	990a                	add	s2,s2,sp
    12d6:	019c030b          	0x19c030b
    12da:	c10a                	sw	sp,128(sp)
    12dc:	c844                	sw	s1,20(s0)
    12de:	c944                	sw	s1,20(a0)
    12e0:	d244                	sw	s1,36(a2)
    12e2:	d344                	sw	s1,36(a4)
    12e4:	d444                	sw	s1,44(s0)
    12e6:	d544                	sw	s1,44(a0)
            retval += (list->next->info->data16 >> 8) & 1;
    12e8:	d644                	sw	s1,44(a2)
    12ea:	d744                	sw	s1,44(a4)
    12ec:	d844                	sw	s1,52(s0)
    12ee:	d944                	sw	s1,52(a0)
    ee_u32 size     = (blksize / per_item)
    12f0:	0e44                	addi	s1,sp,788
    12f2:	4400                	lw	s0,8(s0)
    12f4:	0000000b          	0xb
    list->info->data16 = (ee_s16)0x8080;
    12f8:	000c                	0xc
    12fa:	0000                	unimp
    list->next         = NULL;
    12fc:	1238                	addi	a4,sp,296
	...
    if ((*memblock + 1) >= memblock_end)
    1306:	0000                	unimp
    memblock++;
    1308:	000c                	0xc
    130a:	0000                	unimp
    ee_u32 size     = (blksize / per_item)
    130c:	ffff                	0xffff
    130e:	ffff                	0xffff
    list_head *memblock_end  = memblock + size;
    1310:	0001                	nop
    1312:	7c01                	lui	s8,0xfffe0
    1314:	0d01                	addi	s10,s10,0
    1316:	0002                	c.slli64	zero
    list->info         = datablock;
    1318:	001c                	0x1c
    131a:	0000                	unimp
    list_data *datablock_end = datablock + size;
    131c:	1308                	addi	a0,sp,416
    131e:	0000                	unimp
    list->info->idx    = 0x0000;
    1320:	8518                	0x8518
    1322:	0000                	unimp
    list->info->data16 = (ee_s16)0x8080;
    1324:	0050                	addi	a2,sp,4
    1326:	0000                	unimp
    list_data *datablock_end = datablock + size;
    1328:	0e44                	addi	s1,sp,788
    132a:	4410                	lw	a2,8(s0)
    datablock++;
    132c:	0288                	addi	a0,sp,320
    132e:	8154                	0x8154
    if ((*memblock + 1) >= memblock_end)
    1330:	6801                	0x6801
    1332:	44c1                	li	s1,16
    if ((*datablock + 1) >= datablock_end)
    1334:	44c8                	lw	a0,12(s1)
    1336:	000e                	c.slli	zero,0x3
    1338:	000c                	0xc
    133a:	0000                	unimp
    newitem->info = *datablock;
    133c:	ffff                	0xffff
    133e:	ffff                	0xffff
    newitem->next      = insert_point->next;
    1340:	0001                	nop
    1342:	7c01                	lui	s8,0xfffe0
    insert_point->next = newitem;
    1344:	0d01                	addi	s10,s10,0
    1346:	0002                	c.slli64	zero
    to->idx    = from->idx;
    1348:	0020                	addi	s0,sp,8
    134a:	0000                	unimp
    to->data16 = from->data16;
    134c:	1338                	addi	a4,sp,424
    134e:	0000                	unimp
    1350:	8568                	0x8568
    1352:	0000                	unimp
    to->idx    = from->idx;
    1354:	0054                	addi	a3,sp,4
    1356:	0000                	unimp
    for (i = 0; i < size; i++)
    1358:	0e44                	addi	s1,sp,788
    135a:	4410                	lw	a2,8(s0)
    135c:	0288                	addi	a0,sp,320
    135e:	814c                	0x814c
    to->idx    = from->idx;
    1360:	5c01                	li	s8,-32
    1362:	c10a                	sw	sp,128(sp)
    1364:	c844                	sw	s1,20(s0)
    1366:	0e44                	addi	s1,sp,788
    for (i = 0; i < size; i++)
    1368:	4400                	lw	s0,8(s0)
    136a:	000c000b          	0xc000b
    to->idx    = from->idx;
    136e:	0000                	unimp
    if ((*memblock + 1) >= memblock_end)
    1370:	1338                	addi	a4,sp,424
	...
    if ((*datablock + 1) >= datablock_end)
    137a:	0000                	unimp
    137c:	0028                	addi	a0,sp,8
    137e:	0000                	unimp
    1380:	1338                	addi	a4,sp,424
    1382:	0000                	unimp
    1384:	85bc                	0x85bc
    1386:	0000                	unimp
        ee_u16 datpat = ((ee_u16)(seed ^ i) & 0xf);
    1388:	008c                	addi	a1,sp,64
    138a:	0000                	unimp
            = (datpat << 3) | (i & 0x7); /* alternate between algorithms */
    138c:	0e48                	addi	a0,sp,788
    138e:	5420                	lw	s0,104(s0)
    1390:	0288                	addi	a0,sp,320
    1392:	0389                	addi	t2,t2,2
    1394:	0492                	slli	s1,s1,0x4
    1396:	01810593          	addi	a1,sp,24
    newitem->next      = insert_point->next;
    139a:	4802                	lw	a6,0(sp)
        ee_u16 dat
    139c:	44c8                	lw	a0,12(s1)
    139e:	4cc1                	li	s9,16
    insert_point->next = newitem;
    13a0:	48d244d3          	0x48d244d3
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    13a4:	44c9                	li	s1,18
    13a6:	000e                	c.slli	zero,0x3
    newitem->info = *datablock;
    13a8:	0020                	addi	s0,sp,8
    13aa:	0000                	unimp
        info.data16 = (dat << 8) | dat;  /* fill the data with actual data and
    13ac:	1338                	addi	a4,sp,424
    13ae:	0000                	unimp
    to->data16 = from->data16;
    13b0:	8648                	0x8648
    13b2:	0000                	unimp
    to->idx    = from->idx;
    13b4:	005c                	addi	a5,sp,4
    13b6:	0000                	unimp
    13b8:	0e44                	addi	s1,sp,788
    13ba:	4410                	lw	a2,8(s0)
    13bc:	0288                	addi	a0,sp,320
    13be:	814c                	0x814c
    13c0:	6801                	0x6801
    13c2:	c10a                	sw	sp,128(sp)
    for (i = 0; i < size; i++)
    13c4:	c844                	sw	s1,20(s0)
    13c6:	0e44                	addi	s1,sp,788
    13c8:	4400                	lw	s0,8(s0)
    13ca:	000c000b          	0xc000b
    while (finder->next != NULL)
    13ce:	0000                	unimp
    13d0:	1338                	addi	a4,sp,424
    13d2:	0000                	unimp
        if (i < size / 5) /* first 20% of the list in order */
    13d4:	86a4                	0x86a4
    13d6:	0000                	unimp
    13d8:	000c                	0xc
    13da:	0000                	unimp
                                & (((i & 0x07) << 8)
    13dc:	000c                	0xc
    13de:	0000                	unimp
        if (i < size / 5) /* first 20% of the list in order */
    13e0:	ffff                	0xffff
    13e2:	ffff                	0xffff
                                & (((i & 0x07) << 8)
    13e4:	0001                	nop
    13e6:	7c01                	lui	s8,0xfffe0
        if (i < size / 5) /* first 20% of the list in order */
    13e8:	0d01                	addi	s10,s10,0
    13ea:	0002                	c.slli64	zero
    13ec:	000c                	0xc
    13ee:	0000                	unimp
        finder = finder->next;
    13f0:	13dc                	addi	a5,sp,484
	...
    13fa:	0000                	unimp
    while (finder->next != NULL)
    13fc:	000c                	0xc
    13fe:	0000                	unimp
    1400:	13dc                	addi	a5,sp,484
    1402:	0000                	unimp
    insize = 1;
    1404:	86b0                	0x86b0
    1406:	0000                	unimp
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    1408:	0030                	addi	a2,sp,8
    140a:	0000                	unimp
    insize = 1;
    140c:	000c                	0xc
    140e:	0000                	unimp
        tail = NULL;
    1410:	ffff                	0xffff
    1412:	ffff                	0xffff
        list = NULL;
    1414:	0001                	nop
    1416:	7c01                	lui	s8,0xfffe0
        nmerges = 0; /* count number of merges we do in this pass */
    1418:	0d01                	addi	s10,s10,0
    141a:	0002                	c.slli64	zero
            nmerges++; /* there exists a merge to be done */
    141c:	001c                	0x1c
    141e:	0000                	unimp
    1420:	140c                	addi	a1,sp,544
    1422:	0000                	unimp
            psize = 0;
    1424:	86e0                	0x86e0
    1426:	0000                	unimp
                q = q->next;
    1428:	0058                	addi	a4,sp,4
    142a:	0000                	unimp
                psize++;
    142c:	0e44                	addi	s1,sp,788
    142e:	4410                	lw	a2,8(s0)
                if (!q)
    1430:	0288                	addi	a0,sp,320
    1432:	815c                	0x815c
            for (i = 0; i < insize; i++)
    1434:	6801                	0x6801
    1436:	44c1                	li	s1,16
                    list = e;
    1438:	44c8                	lw	a0,12(s1)
    143a:	000e                	c.slli	zero,0x3
    143c:	000c                	0xc
    143e:	0000                	unimp
    1440:	ffff                	0xffff
    1442:	ffff                	0xffff
            while (psize > 0 || (qsize > 0 && q))
    1444:	0001                	nop
    1446:	7c01                	lui	s8,0xfffe0
                else if (qsize == 0 || !q)
    1448:	0d01                	addi	s10,s10,0
    144a:	0002                	c.slli64	zero
    144c:	001c                	0x1c
    144e:	0000                	unimp
                else if (cmp(p->info, q->info, res) <= 0)
    1450:	143c                	addi	a5,sp,552
    1452:	0000                	unimp
    1454:	8738                	0x8738
    1456:	0000                	unimp
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1458:	0050                	addi	a2,sp,4
    145a:	0000                	unimp
    return a->idx - b->idx;
    145c:	0e44                	addi	s1,sp,788
    145e:	4410                	lw	a2,8(s0)
    1460:	0288                	addi	a0,sp,320
    1462:	8154                	0x8154
        a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16 >> 8));
    1464:	6801                	0x6801
    1466:	44c1                	li	s1,16
    1468:	44c8                	lw	a0,12(s1)
    146a:	000e                	c.slli	zero,0x3
    146c:	000c                	0xc
    146e:	0000                	unimp
    1470:	ffff                	0xffff
    1472:	ffff                	0xffff
    1474:	0001                	nop
    1476:	7c01                	lui	s8,0xfffe0
    1478:	0d01                	addi	s10,s10,0
    147a:	0002                	c.slli64	zero
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    147c:	001c                	0x1c
    147e:	0000                	unimp
    return a->idx - b->idx;
    1480:	146c                	addi	a1,sp,556
    1482:	0000                	unimp
        b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16 >> 8));
    1484:	8788                	0x8788
    1486:	0000                	unimp
    1488:	0054                	addi	a3,sp,4
    148a:	0000                	unimp
    148c:	0e44                	addi	s1,sp,788
    148e:	4410                	lw	a2,8(s0)
    1490:	0288                	addi	a0,sp,320
    1492:	8158                	0x8158
    1494:	6801                	0x6801
    1496:	44c1                	li	s1,16
    1498:	44c8                	lw	a0,12(s1)
    149a:	000e                	c.slli	zero,0x3
                else if (cmp(p->info, q->info, res) <= 0)
    149c:	000c                	0xc
    149e:	0000                	unimp
                    qsize--;
    14a0:	ffff                	0xffff
    14a2:	ffff                	0xffff
                    q = q->next;
    14a4:	0001                	nop
    14a6:	7c01                	lui	s8,0xfffe0
                    qsize--;
    14a8:	0d01                	addi	s10,s10,0
    14aa:	0002                	c.slli64	zero
                if (tail)
    14ac:	001c                	0x1c
    14ae:	0000                	unimp
                    tail->next = e;
    14b0:	149c                	addi	a5,sp,608
    14b2:	0000                	unimp
                    list = e;
    14b4:	87dc                	0x87dc
    14b6:	0000                	unimp
            while (psize > 0 || (qsize > 0 && q))
    14b8:	0050                	addi	a2,sp,4
    14ba:	0000                	unimp
    14bc:	0e44                	addi	s1,sp,788
    14be:	4410                	lw	a2,8(s0)
    14c0:	0288                	addi	a0,sp,320
    14c2:	8154                	0x8154
                    qsize--;
    14c4:	6801                	0x6801
    14c6:	44c1                	li	s1,16
    14c8:	44c8                	lw	a0,12(s1)
    14ca:	000e                	c.slli	zero,0x3
                    q = q->next;
    14cc:	000c                	0xc
    14ce:	0000                	unimp
                if (tail)
    14d0:	ffff                	0xffff
    14d2:	ffff                	0xffff
                    list = e;
    14d4:	0001                	nop
    14d6:	7c01                	lui	s8,0xfffe0
    14d8:	0d01                	addi	s10,s10,0
    14da:	0002                	c.slli64	zero
    14dc:	001c                	0x1c
    14de:	0000                	unimp
                    psize--;
    14e0:	14cc                	addi	a1,sp,612
    14e2:	0000                	unimp
    14e4:	882c                	0x882c
    14e6:	0000                	unimp
                    p = p->next;
    14e8:	0058                	addi	a4,sp,4
    14ea:	0000                	unimp
    14ec:	0e44                	addi	s1,sp,788
    14ee:	4410                	lw	a2,8(s0)
        while (p)
    14f0:	0288                	addi	a0,sp,320
    14f2:	815c                	0x815c
        tail->next = NULL;
    14f4:	6801                	0x6801
    14f6:	44c1                	li	s1,16
        if (nmerges <= 1) /* allow for nmerges==0, the empty list case */
    14f8:	44c8                	lw	a0,12(s1)
    14fa:	000e                	c.slli	zero,0x3
        insize *= 2;
    14fc:	000c                	0xc
    14fe:	0000                	unimp
        while (p)
    1500:	ffff                	0xffff
    1502:	ffff                	0xffff
        tail->next = NULL;
    1504:	0001                	nop
    1506:	7c01                	lui	s8,0xfffe0
    1508:	0d01                	addi	s10,s10,0
    150a:	0002                	c.slli64	zero
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    150c:	000c                	0xc
    150e:	0000                	unimp
    1510:	14fc                	addi	a5,sp,620
    1512:	0000                	unimp
                                & (((i & 0x07) << 8)
    1514:	8884                	0x8884
    1516:	0000                	unimp
        finder = finder->next;
    1518:	0004                	0x4
    151a:	0000                	unimp
                                & (((i & 0x07) << 8)
    151c:	000c                	0xc
    151e:	0000                	unimp
            ee_u16 pat = (ee_u16)(i++ ^ seed); /* get a pseudo random number */
    1520:	14fc                	addi	a5,sp,620
    1522:	0000                	unimp
                                & (((i & 0x07) << 8)
    1524:	8888                	0x8888
    1526:	0000                	unimp
                                   | pat); /* make sure the mixed items end up
    1528:	0004                	0x4
    152a:	0000                	unimp
    while (finder->next != NULL)
    152c:	000c                	0xc
    152e:	0000                	unimp
                                & (((i & 0x07) << 8)
    1530:	ffff                	0xffff
    1532:	ffff                	0xffff
            finder->info->idx = 0x3fff
    1534:	0001                	nop
    1536:	7c01                	lui	s8,0xfffe0
        finder = finder->next;
    1538:	0d01                	addi	s10,s10,0
    153a:	0002                	c.slli64	zero
    while (finder->next != NULL)
    153c:	001c                	0x1c
    153e:	0000                	unimp
    1540:	152c                	addi	a1,sp,680
    1542:	0000                	unimp
}
    1544:	888c                	0x888c
    1546:	0000                	unimp
    1548:	0058                	addi	a4,sp,4
    154a:	0000                	unimp
    memblock++;
    154c:	0e44                	addi	s1,sp,788
    154e:	4410                	lw	a2,8(s0)
    datablock++;
    1550:	0288                	addi	a0,sp,320
    1552:	815c                	0x815c
    if ((*datablock + 1) >= datablock_end)
    1554:	6801                	0x6801
    1556:	44c1                	li	s1,16
    1558:	44c8                	lw	a0,12(s1)
    155a:	000e                	c.slli	zero,0x3
{
    155c:	000c                	0xc
    155e:	0000                	unimp
    1560:	ffff                	0xffff
    1562:	ffff                	0xffff
    ee_u32        iterations = res->iterations;
    1564:	0001                	nop
    1566:	7c01                	lui	s8,0xfffe0
{
    1568:	0d01                	addi	s10,s10,0
    156a:	0002                	c.slli64	zero
    156c:	0020                	addi	s0,sp,8
    156e:	0000                	unimp
    1570:	155c                	addi	a5,sp,676
	...
    res->crc                 = 0;
    157a:	0000                	unimp
{
    157c:	0e44                	addi	s1,sp,788
    157e:	4410                	lw	a2,8(s0)
    for (i = 0; i < iterations; i++)
    1580:	0288                	addi	a0,sp,320
    1582:	8950                	0x8950
    1584:	40018103          	lb	sp,1024(gp) # 10017a0 <__global_pointer$+0x400>
        crc      = core_bench_list(res, 1);
    1588:	44c8                	lw	a0,12(s1)
    158a:	48c1                	li	a7,16
    158c:	44c9                	li	s1,18
    158e:	000e                	c.slli	zero,0x3
    1590:	003c                	addi	a5,sp,8
    1592:	0000                	unimp
    1594:	155c                	addi	a5,sp,676
	...
        res->crc = crcu16(crc, res->crc);
    159e:	0000                	unimp
    15a0:	0e40                	addi	s0,sp,788
    15a2:	5420                	lw	s0,104(s0)
    15a4:	0288                	addi	a0,sp,320
    15a6:	0181                	addi	gp,gp,0
        crc      = core_bench_list(res, -1);
    15a8:	0389                	addi	t2,t2,2
    15aa:	0492                	slli	s1,s1,0x4
    15ac:	00020593          	mv	a1,tp
    15b0:	c80a                	sw	sp,16(sp)
    15b2:	c144                	sw	s1,4(a0)
    15b4:	c944                	sw	s1,20(a0)
    15b6:	d244                	sw	s1,36(a2)
        res->crc = crcu16(crc, res->crc);
    15b8:	d344                	sw	s1,36(a4)
    15ba:	0e44                	addi	s1,sp,788
    15bc:	4000                	lw	s0,0(s0)
    15be:	c100020b          	0xc100020b
    15c2:	c844                	sw	s1,20(s0)
    15c4:	c944                	sw	s1,20(a0)
    15c6:	d244                	sw	s1,36(a2)
        if (i == 0)
    15c8:	d344                	sw	s1,36(a4)
    15ca:	0e44                	addi	s1,sp,788
    for (i = 0; i < iterations; i++)
    15cc:	0000                	unimp
    15ce:	0000                	unimp
    15d0:	000c                	0xc
    15d2:	0000                	unimp
}
    15d4:	ffff                	0xffff
    15d6:	ffff                	0xffff
    15d8:	0001                	nop
    15da:	7c01                	lui	s8,0xfffe0
    15dc:	0d01                	addi	s10,s10,0
    15de:	0002                	c.slli64	zero
    15e0:	0030                	addi	a2,sp,8
    15e2:	0000                	unimp
    15e4:	15d0                	addi	a2,sp,740
    15e6:	0000                	unimp
    15e8:	88e4                	0x88e4
    15ea:	0000                	unimp
    15ec:	088c                	addi	a1,sp,80
    15ee:	0000                	unimp
            res->crclist = res->crc;
    15f0:	0e48                	addi	a0,sp,788
    15f2:	5020                	lw	s0,96(s0)
    for (i = 0; i < iterations; i++)
    15f4:	0389                	addi	t2,t2,2
    15f6:	9370                	0x9370
    15f8:	8105                	srli	a0,a0,0x1
    15fa:	8801                	andi	s0,s0,0
    15fc:	9202                	jalr	tp
    15fe:	0304                	addi	s1,sp,384
    1600:	0164                	addi	s1,sp,140
    1602:	c10a                	sw	sp,128(sp)
{
    1604:	c844                	sw	s1,20(s0)
    1606:	c954                	sw	a3,20(a0)
    1608:	d244                	sw	s1,36(a2)
    160a:	d344                	sw	s1,36(a4)
    160c:	0e4c                	addi	a1,sp,788
    160e:	4400                	lw	s0,8(s0)
    MATDAT clipval = matrix_big(val);
    1610:	0000000b          	0xb
{
    1614:	000c                	0xc
    1616:	0000                	unimp
    1618:	ffff                	0xffff
    161a:	ffff                	0xffff
    161c:	0001                	nop
    161e:	7c01                	lui	s8,0xfffe0
    1620:	0d01                	addi	s10,s10,0
    1622:	0002                	c.slli64	zero
    1624:	000c                	0xc
    1626:	0000                	unimp
    1628:	1614                	addi	a3,sp,800
    162a:	0000                	unimp
    162c:	9170                	0x9170
    162e:	0000                	unimp
    1630:	008c                	addi	a1,sp,64
    1632:	0000                	unimp
    1634:	000c                	0xc
    1636:	0000                	unimp
    1638:	ffff                	0xffff
    163a:	ffff                	0xffff
    163c:	0001                	nop
    163e:	7c01                	lui	s8,0xfffe0
    1640:	0d01                	addi	s10,s10,0
    1642:	0002                	c.slli64	zero
    MATDAT clipval = matrix_big(val);
    1644:	0040                	addi	s0,sp,4
    1646:	0000                	unimp
    for (i = 0; i < N; i++)
    1648:	1634                	addi	a3,sp,808
    164a:	0000                	unimp
    164c:	91fc                	0x91fc
    164e:	0000                	unimp
    1650:	0664                	addi	s1,sp,780
    1652:	0000                	unimp
    1654:	0e44                	addi	s1,sp,788
    1656:	5040                	lw	s0,36(s0)
    1658:	0288                	addi	a0,sp,320
    165a:	0492                	slli	s1,s1,0x4
    165c:	0694                	addi	a3,sp,832
    165e:	815c                	0x815c
    1660:	8901                	andi	a0,a0,0
    1662:	95059303          	lh	t1,-1712(a1)
    1666:	97089607          	0x97089607
    166a:	0309                	addi	t1,t1,2
    166c:	0100                	addi	s0,sp,128
    166e:	c10a                	sw	sp,128(sp)
    1670:	c844                	sw	s1,20(s0)
    1672:	d248                	sw	a0,36(a2)
    1674:	c944                	sw	s1,20(a0)
    1676:	d344                	sw	s1,36(a4)
    1678:	d444                	sw	s1,44(s0)
    167a:	d544                	sw	s1,44(a0)
    167c:	d644                	sw	s1,44(a2)
    167e:	d744                	sw	s1,44(a4)
    1680:	0e44                	addi	s1,sp,788
    1682:	4400                	lw	s0,8(s0)
{
    1684:	0000000b          	0xb
            A[i * N + j] += val;
    1688:	000c                	0xc
    168a:	0000                	unimp
    168c:	ffff                	0xffff
    168e:	ffff                	0xffff
    1690:	0001                	nop
    1692:	7c01                	lui	s8,0xfffe0
    1694:	0d01                	addi	s10,s10,0
    1696:	0002                	c.slli64	zero
        for (j = 0; j < N; j++)
    1698:	0030                	addi	a2,sp,8
    169a:	0000                	unimp
    for (i = 0; i < N; i++)
    169c:	1688                	addi	a0,sp,864
    169e:	0000                	unimp
    16a0:	9860                	0x9860
    16a2:	0000                	unimp
    16a4:	0884                	addi	s1,sp,80
    16a6:	0000                	unimp
    16a8:	0e4c                	addi	a1,sp,788
    16aa:	5c20                	lw	s0,120(s0)
    16ac:	0288                	addi	a0,sp,320
    16ae:	0389                	addi	t2,t2,2
    16b0:	8158                	0x8158
    16b2:	9201                	srli	a2,a2,0x20
    16b4:	9304                	0x9304
    16b6:	0305                	addi	t1,t1,1
    16b8:	0184                	addi	s1,sp,192
    16ba:	c10a                	sw	sp,128(sp)
    16bc:	c844                	sw	s1,20(s0)
    16be:	c944                	sw	s1,20(a0)
    for (i = 0; i < N; i++)
    16c0:	d244                	sw	s1,36(a2)
    16c2:	d344                	sw	s1,36(a4)
    16c4:	0e4c                	addi	a1,sp,788
    16c6:	4400                	lw	s0,8(s0)
    16c8:	0000000b          	0xb
    for (i = 0; i < N; i++)
    16cc:	000c                	0xc
    16ce:	0000                	unimp
    16d0:	ffff                	0xffff
    16d2:	ffff                	0xffff
            C[i * N + j] = (MATRES)A[i * N + j] * (MATRES)val;
    16d4:	0001                	nop
    16d6:	7c01                	lui	s8,0xfffe0
    16d8:	0d01                	addi	s10,s10,0
    16da:	0002                	c.slli64	zero
    16dc:	000c                	0xc
    16de:	0000                	unimp
    16e0:	16cc                	addi	a1,sp,868
    16e2:	0000                	unimp
    16e4:	a0e4                	fsd	fs1,192(s1)
    16e6:	0000                	unimp
        for (j = 0; j < N; j++)
    16e8:	0054                	addi	a3,sp,4
    16ea:	0000                	unimp
    for (i = 0; i < N; i++)
    16ec:	000c                	0xc
    16ee:	0000                	unimp
    16f0:	ffff                	0xffff
    16f2:	ffff                	0xffff
    16f4:	0001                	nop
    16f6:	7c01                	lui	s8,0xfffe0
    16f8:	0d01                	addi	s10,s10,0
    16fa:	0002                	c.slli64	zero
    16fc:	000c                	0xc
    16fe:	0000                	unimp
    1700:	16ec                	addi	a1,sp,876
    1702:	0000                	unimp
    1704:	a138                	fsd	fa4,64(a0)
    1706:	0000                	unimp
    1708:	0084                	addi	s1,sp,64
    170a:	0000                	unimp
    ee_s16 ret = 0;
    170c:	000c                	0xc
    170e:	0000                	unimp
    MATRES tmp = 0, prev = 0, cur = 0;
    1710:	ffff                	0xffff
    1712:	ffff                	0xffff
    1714:	0001                	nop
    1716:	7c01                	lui	s8,0xfffe0
    for (i = 0; i < N; i++)
    1718:	0d01                	addi	s10,s10,0
    171a:	0002                	c.slli64	zero
    171c:	0024                	addi	s1,sp,8
    171e:	0000                	unimp
    1720:	170c                	addi	a1,sp,928
    1722:	0000                	unimp
    1724:	a1bc                	fsd	fa5,64(a1)
    1726:	0000                	unimp
    1728:	00c4                	addi	s1,sp,68
    172a:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    172c:	0e44                	addi	s1,sp,788
    172e:	4c10                	lw	a2,24(s0)
    1730:	0181                	addi	gp,gp,0
    1732:	0288                	addi	a0,sp,320
    1734:	0389                	addi	t2,t2,2
    1736:	8402                	jr	s0
            cur = C[i * N + j];
    1738:	c10a                	sw	sp,128(sp)
    173a:	c844                	sw	s1,20(s0)
        for (j = 0; j < N; j++)
    173c:	c94c                	sw	a1,20(a0)
    173e:	0e44                	addi	s1,sp,788
            cur = C[i * N + j];
    1740:	4400                	lw	s0,8(s0)
    1742:	000c000b          	0xc000b
            tmp += cur;
    1746:	0000                	unimp
    1748:	ffff                	0xffff
    174a:	ffff                	0xffff
                ret += (cur > prev) ? 1 : 0;
    174c:	0001                	nop
    174e:	7c01                	lui	s8,0xfffe0
            tmp += cur;
    1750:	0d01                	addi	s10,s10,0
    1752:	0002                	c.slli64	zero
                ret += 10;
    1754:	0018                	0x18
    1756:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    1758:	1744                	addi	s1,sp,932
    175a:	0000                	unimp
            if (tmp > clipval)
    175c:	a280                	fsd	fs0,0(a3)
    175e:	0000                	unimp
                ret += 10;
    1760:	02f0                	addi	a2,sp,332
    1762:	0000                	unimp
    1764:	0e78                	addi	a4,sp,796
    1766:	0210                	addi	a2,sp,256
    1768:	0a80                	addi	s0,sp,336
    176a:	000e                	c.slli	zero,0x3
                tmp = 0;
    176c:	0b44                	addi	s1,sp,404
    176e:	0000                	unimp
            cur = C[i * N + j];
    1770:	000c                	0xc
    1772:	0000                	unimp
        for (j = 0; j < N; j++)
    1774:	ffff                	0xffff
    1776:	ffff                	0xffff
    for (i = 0; i < N; i++)
    1778:	0001                	nop
    177a:	7c01                	lui	s8,0xfffe0
    177c:	0d01                	addi	s10,s10,0
    177e:	0002                	c.slli64	zero
    1780:	000c                	0xc
    1782:	0000                	unimp
    1784:	1770                	addi	a2,sp,940
    1786:	0000                	unimp
    1788:	a570                	fsd	fa2,200(a0)
    178a:	0000                	unimp
    crc = crc16(matrix_sum(N, C, clipval), crc);
    178c:	0014                	0x14
    178e:	0000                	unimp
    1790:	000c                	0xc
    1792:	0000                	unimp
    1794:	ffff                	0xffff
    1796:	ffff                	0xffff
    1798:	0001                	nop
    179a:	7c01                	lui	s8,0xfffe0
    for (i = 0; i < N; i++)
    179c:	0d01                	addi	s10,s10,0
    179e:	0002                	c.slli64	zero
    17a0:	000c                	0xc
    17a2:	0000                	unimp
    17a4:	1790                	addi	a2,sp,992
    17a6:	0000                	unimp
    17a8:	a584                	fsd	fs1,8(a1)
    17aa:	0000                	unimp
    17ac:	0014                	0x14
    17ae:	0000                	unimp
    crc = crc16(matrix_sum(N, C, clipval), crc);
    17b0:	000c                	0xc
    17b2:	0000                	unimp
    17b4:	ffff                	0xffff
    17b6:	ffff                	0xffff
    17b8:	0001                	nop
    17ba:	7c01                	lui	s8,0xfffe0
    17bc:	0d01                	addi	s10,s10,0
    17be:	0002                	c.slli64	zero
    17c0:	000c                	0xc
    17c2:	0000                	unimp
    17c4:	17b0                	addi	a2,sp,1000
    17c6:	0000                	unimp
            C[i] += (MATRES)A[i * N + j] * (MATRES)B[j];
    17c8:	a598                	fsd	fa4,8(a1)
    17ca:	0000                	unimp
    17cc:	0014                	0x14
    17ce:	0000                	unimp
    17d0:	000c                	0xc
    17d2:	0000                	unimp
    17d4:	ffff                	0xffff
    17d6:	ffff                	0xffff
    17d8:	0001                	nop
    17da:	7c01                	lui	s8,0xfffe0
    17dc:	0d01                	addi	s10,s10,0
    17de:	0002                	c.slli64	zero
        for (j = 0; j < N; j++)
    17e0:	000c                	0xc
    17e2:	0000                	unimp
    17e4:	17d0                	addi	a2,sp,996
    17e6:	0000                	unimp
    17e8:	a5ac                	fsd	fa1,72(a1)
    17ea:	0000                	unimp
    17ec:	0014                	0x14
    17ee:	0000                	unimp
    for (i = 0; i < N; i++)
    17f0:	000c                	0xc
    17f2:	0000                	unimp
    17f4:	ffff                	0xffff
    17f6:	ffff                	0xffff
    ee_s16 ret = 0;
    17f8:	0001                	nop
    17fa:	7c01                	lui	s8,0xfffe0
    MATRES tmp = 0, prev = 0, cur = 0;
    17fc:	0d01                	addi	s10,s10,0
    17fe:	0002                	c.slli64	zero
    1800:	000c                	0xc
    1802:	0000                	unimp
    for (i = 0; i < N; i++)
    1804:	17f0                	addi	a2,sp,1004
    1806:	0000                	unimp
    1808:	a5c0                	fsd	fs0,136(a1)
    180a:	0000                	unimp
        for (j = 0; j < N; j++)
    180c:	0014                	0x14
    180e:	0000                	unimp
    1810:	000c                	0xc
    1812:	0000                	unimp
                ret += (cur > prev) ? 1 : 0;
    1814:	ffff                	0xffff
    1816:	ffff                	0xffff
        for (j = 0; j < N; j++)
    1818:	0001                	nop
    181a:	7c01                	lui	s8,0xfffe0
                ret += (cur > prev) ? 1 : 0;
    181c:	0d01                	addi	s10,s10,0
    181e:	0002                	c.slli64	zero
            prev = cur;
    1820:	000c                	0xc
    1822:	0000                	unimp
            cur = C[i * N + j];
    1824:	1810                	addi	a2,sp,48
    1826:	0000                	unimp
        for (j = 0; j < N; j++)
    1828:	a5d4                	fsd	fa3,136(a1)
    182a:	0000                	unimp
            cur = C[i * N + j];
    182c:	0040                	addi	s0,sp,4
	...

Disassembly of section .stab:

00000000 <.stab>:
	la gp, __global_pointer$
   0:	0001                	nop
   2:	0000                	unimp
   4:	0000                	unimp
   6:	000a                	c.slli	zero,0x2
	la sp, _sp 
   8:	00000117          	auipc	sp,0x0
   c:	0009                	c.nop	2
   e:	0000                	unimp
	la a0, _data_lma 
  10:	001e                	c.slli	zero,0x7
  12:	0000                	unimp
  14:	0000                	unimp
  16:	0000                	unimp
	la a1, _data
  18:	0038                	addi	a4,sp,8
  1a:	0000                	unimp
  1c:	0001                	nop
  1e:	0000                	unimp
	la a2, _edata
  20:	0000                	unimp
  22:	0000                	unimp
  24:	0000003f 0000001e 	0x1e0000003f
	lw t0, (a0)
  2c:	0000                	unimp
  2e:	0000                	unimp
	sw t0, (a1)
  30:	006e                	c.slli	zero,0x1b
  32:	0000                	unimp
	lw t1, (a1)
  34:	0001                	nop
  36:	0000                	unimp
	addi a0, a0, 4
  38:	0000                	unimp
  3a:	0000                	unimp
	addi a1, a1, 4
  3c:	0075                	c.nop	29
  3e:	0000                	unimp
	bltu a1, a2, 1b
  40:	001e                	c.slli	zero,0x7
  42:	0000                	unimp
	la a0, __bss_start
  44:	0000                	unimp
  46:	0000                	unimp
  48:	00a5                	addi	ra,ra,9
  4a:	0000                	unimp
	la a1, _end
  4c:	0001                	nop
  4e:	0000                	unimp
  50:	0000                	unimp
  52:	0000                	unimp
	bgeu a0, a1, 2f
  54:	00ad                	addi	ra,ra,11
  56:	0000                	unimp
	sw zero, (a0)
  58:	001e                	c.slli	zero,0x7
  5a:	0000                	unimp
	addi a0, a0, 4
  5c:	0000                	unimp
  5e:	0000                	unimp
	bltu a0, a1, 1b
  60:	00dc                	addi	a5,sp,68
  62:	0000                	unimp
    li x31,0xa0
  64:	0001                	nop
  66:	0000                	unimp
    call main
  68:	0000                	unimp
  6a:	0000                	unimp
  6c:	000000e3          	beqz	zero,86c <main+0x7f4>
    li x31,0xaa
  70:	001e                	c.slli	zero,0x7
  72:	0000                	unimp
    j loop
  74:	0000                	unimp
  76:	0000                	unimp
{
  78:	0111                	addi	sp,sp,4
  7a:	0000                	unimp
    portable_init(&(results[0].port), &argc, argv);
  7c:	0001                	nop
  7e:	0000                	unimp
{
  80:	0000                	unimp
	...

Disassembly of section .stabstr:

00000000 <.stabstr>:
	la gp, __global_pointer$
   0:	6300                	flw	fs0,0(a4)
   2:	6f6c                	flw	fa1,92(a4)
   4:	632e6573          	csrrsi	a0,0x632,28
	la sp, _sp 
   8:	5f00                	lw	s0,56(a4)
   a:	736f6c63          	bltu	t5,s6,742 <main+0x6ca>
   e:	2065                	jal	b6 <main+0x3e>
	la a0, _data_lma 
  10:	7369                	lui	t1,0xffffa
  12:	6e20                	flw	fs0,88(a2)
  14:	6920746f          	jal	s0,76a6 <__multiply+0x5e>
	la a1, _data
  18:	706d                	c.lui	zero,0xffffb
  1a:	656c                	flw	fa1,76(a0)
  1c:	656d                	lui	a0,0x1b
  1e:	746e                	flw	fs0,248(sp)
	la a2, _edata
  20:	6465                	lui	s0,0x19
  22:	6120                	flw	fs0,64(a0)
  24:	646e                	flw	fs0,216(sp)
  26:	7720                	flw	fs0,104(a4)
	bgeu a1, a2, 2f
  28:	6c69                	lui	s8,0x1a
  2a:	206c                	fld	fa1,192(s0)
	lw t0, (a0)
  2c:	6c61                	lui	s8,0x18
  2e:	73796177          	0x73796177
	sw t0, (a1)
  32:	6620                	flw	fs0,72(a2)
	lw t1, (a1)
  34:	6961                	lui	s2,0x18
  36:	006c                	addi	a1,sp,12
	addi a0, a0, 4
  38:	635f 6f6c 6573      	0x65736f6c635f
	addi a1, a1, 4
  3e:	5f00                	lw	s0,56(a4)
	bltu a1, a2, 1b
  40:	7366                	flw	ft6,120(sp)
  42:	6174                	flw	fa3,68(a0)
	la a0, __bss_start
  44:	2074                	fld	fa3,192(s0)
  46:	7369                	lui	t1,0xffffa
  48:	6e20                	flw	fs0,88(a2)
  4a:	6920746f          	jal	s0,76dc <__multiply+0x94>
	la a1, _end
  4e:	706d                	c.lui	zero,0xffffb
  50:	656c                	flw	fa1,76(a0)
  52:	656d                	lui	a0,0x1b
	bgeu a0, a1, 2f
  54:	746e                	flw	fs0,248(sp)
  56:	6465                	lui	s0,0x19
	sw zero, (a0)
  58:	6120                	flw	fs0,64(a0)
  5a:	646e                	flw	fs0,216(sp)
	addi a0, a0, 4
  5c:	7720                	flw	fs0,104(a4)
  5e:	6c69                	lui	s8,0x1a
	bltu a0, a1, 1b
  60:	206c                	fld	fa1,192(s0)
  62:	6c61                	lui	s8,0x18
    li x31,0xa0
  64:	73796177          	0x73796177
    call main
  68:	6620                	flw	fs0,72(a2)
  6a:	6961                	lui	s2,0x18
  6c:	006c                	addi	a1,sp,12
  6e:	665f 7473 7461      	0x74617473665f
    j loop
  74:	5f00                	lw	s0,56(a4)
  76:	7369                	lui	t1,0xffffa
  78:	7461                	lui	s0,0xffff8
  7a:	7974                	flw	fa3,116(a0)
    portable_init(&(results[0].port), &argc, argv);
  7c:	6920                	flw	fs0,80(a0)
  7e:	6f6e2073          	csrs	0x6f6,t3
{
  82:	2074                	fld	fa3,192(s0)
  84:	6d69                	lui	s10,0x1a
  86:	6c70                	flw	fa2,92(s0)
  88:	6d65                	lui	s10,0x19
  8a:	6e65                	lui	t3,0x19
  8c:	6574                	flw	fa3,76(a0)
  8e:	2064                	fld	fs1,192(s0)
  90:	6e61                	lui	t3,0x18
  92:	2064                	fld	fs1,192(s0)
  94:	6c6c6977          	0x6c6c6977
  98:	6120                	flw	fs0,64(a0)
  9a:	776c                	flw	fa1,108(a4)
  9c:	7961                	lui	s2,0xffff8
  9e:	61662073          	csrs	0x616,a2
  a2:	6c69                	lui	s8,0x1a
  a4:	5f00                	lw	s0,56(a4)
  a6:	7369                	lui	t1,0xffffa
  a8:	7461                	lui	s0,0xffff8
  aa:	7974                	flw	fa3,116(a0)
  ac:	5f00                	lw	s0,56(a4)
  ae:	736c                	flw	fa1,100(a4)
  b0:	6565                	lui	a0,0x19
  b2:	7369206b          	0x7369206b
  b6:	6e20                	flw	fs0,88(a2)
  b8:	6920746f          	jal	s0,774a <__multiply+0x102>
    portable_init(&(results[0].port), &argc, argv);
  bc:	706d                	c.lui	zero,0xffffb
  be:	656c                	flw	fa1,76(a0)
  c0:	656d                	lui	a0,0x1b
  c2:	746e                	flw	fs0,248(sp)
  c4:	6465                	lui	s0,0x19
  c6:	6120                	flw	fs0,64(a0)
  c8:	646e                	flw	fs0,216(sp)
  ca:	7720                	flw	fs0,104(a4)
{
  cc:	6c69                	lui	s8,0x1a
  ce:	206c                	fld	fa1,192(s0)
    portable_init(&(results[0].port), &argc, argv);
  d0:	6c61                	lui	s8,0x18
  d2:	73796177          	0x73796177
  d6:	6620                	flw	fs0,72(a2)
  d8:	6961                	lui	s2,0x18
  da:	006c                	addi	a1,sp,12
  dc:	6c5f 6573 6b65      	0x6b6565736c5f
    results[0].seed1      = get_seed(1);
  e2:	5f00                	lw	s0,56(a4)
  e4:	6572                	flw	fa0,28(sp)
  e6:	6461                	lui	s0,0x18
  e8:	6920                	flw	fs0,80(a0)
  ea:	6f6e2073          	csrs	0x6f6,t3
  ee:	2074                	fld	fa3,192(s0)
    results[0].seed2      = get_seed(2);
  f0:	6d69                	lui	s10,0x1a
  f2:	6c70                	flw	fa2,92(s0)
  f4:	6d65                	lui	s10,0x19
  f6:	6e65                	lui	t3,0x19
  f8:	6574                	flw	fa3,76(a0)
  fa:	2064                	fld	fs1,192(s0)
  fc:	6e61                	lui	t3,0x18
  fe:	2064                	fld	fs1,192(s0)
    results[0].seed3      = get_seed(3);
 100:	6c6c6977          	0x6c6c6977
 104:	6120                	flw	fs0,64(a0)
 106:	776c                	flw	fa1,108(a4)
 108:	7961                	lui	s2,0xffff8
 10a:	61662073          	csrs	0x616,a2
 10e:	6c69                	lui	s8,0x1a
    results[0].iterations = get_seed_32(4);
 110:	5f00                	lw	s0,56(a4)
 112:	6572                	flw	fa0,28(sp)
 114:	6461                	lui	s0,0x18
	...
